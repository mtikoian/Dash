{"version":3,"sources":["polyfills.js","core.js","Alertify.js","pjax.js","helpers.js","doT.js","flatpickr.js","Autocomplete.js","Chart.js","CollapsibleList.js","DashChart.js","Draggabilly.js","ColorPicker.js","Rect.js","doTable.js","Widget.js","content.js"],"names":["CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","window","prototype","Event","global","factory","exports","module","define","amd","this","finallyConstructor","callback","constructor","then","value","resolve","reason","reject","noop","Promise","fn","TypeError","_state","_handled","_value","_deferreds","doResolve","handle","self","deferred","_immediateFn","cb","onFulfilled","onRejected","ret","e","promise","push","newValue","finale","thisArg","apply","arguments","bind","length","_unhandledRejectionFn","i","len","done","ex","setTimeoutFunc","setTimeout","prom","all","arr","res","val","call","args","remaining","Array","slice","race","values","setImmediate","err","console","warn","globalNS","Error","fetch","url","options","response","_keys","headers","header","request","getAllResponseHeaders","replace","m","key","toLowerCase","ok","status","statusText","responseURL","clone","text","responseText","json","JSON","parse","blob","Blob","keys","entries","get","n","has","XMLHttpRequest","open","method","setRequestHeader","withCredentials","credentials","onload","onerror","send","body","root","addClass","element","className","node","classList","add","src","isNull","cpy","isArray","map","x","isDate","Date","getTime","RegExp","source","ignoreCase","multiline","lastIndex","isNode","isObject","prop","hasOwnProperty","coalesce","defValue","equals","y","p","isUndefined","toString","extend","l","result","selector","container","querySelector","indexOf","sel","charAt","getElementById","substr","getElementsByClassName","getAll","includeContainer","list","querySelectorAll","matches","unshift","hasClass","contains","hasValue","getMonth","isNaN","isFunction","nodeType","nodeName","Element","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","s","on","useCapture","addEventListener","removeClass","remove","_toPascalKeys","obj","Object","newObj","toUpperCase","_toLowerKeys","_parseCss","cssText","match","regex","properties","exec","_toCSS","css","$","closest","firstChar","tSelector","lowerSelector","parentNode","id","hasAttribute","tagName","createNode","html","createElement","innerHTML","children","debounce","wait","timeout","context","timestamp","later","last","destroy","disableIf","disable","setAttribute","removeAttribute","dispatch","dispatchEvent","findByKey","_i","forEach","subject","thisContext","iterator","hasPositiveValue","hide","maintainLayout","isEvent","isNumber","isString","isVisible","offsetParent","off","removeEventListener","onChange","changeFn","immediate","ready","readyState","setText","textContent","show","style","styles","overwrite","toggleClass","toggle","toPascalKeys","_hideElement","el","removeThis","removeChild","_alertify","parent","defaultOkLabel","okLabel","defaultCancelLabel","cancelLabel","maxLogItems","promptValue","promptPlaceholder","closeLogOnClick","delay","logContainerClass","dialogs","buttons","holder","cancel","input","message","log","build","item","btnTxt","type","close","elem","dialog","onOkay","onCancel","setup","click","existing","diff","notify","setupLogContainer","elLog","appendChild","btnOK","btnCancel","label","placeholder","ev","buttonClicked","inputValue","reset","which","select","focus","okBtn","cancelBtn","logTemplateMethod","Alertify","alert","confirm","prompt","success","error","str","defaultValue","dismissAll","updateResources","okay","pjax","firstRun","ignoreFileTypes","excludeClass","errorMessageName","updateContent","newNode","title","getAttribute","onLoad","content","load","returnToTop","scrollTo","onUnload","unload","updateHistory","history","replaceState","location","href","pushState","loading","ajax","test","X-PJAX","submit","form","FormData","parseOptions","target","init","invoke","state","opt","srcElement","protocol","host","pathname","hash","split","pop","metaKey","ctrlKey","preventDefault","encodeURIComponent","actionNode","action","events","dashboardLoad","dashboardUnload","_ajax","onSuccess","onError","X-Requested-With","token","now","data","join","stringify","_checkStatus","_parse","reload","catch","_requestQueue","Request","abort","isInProcess","dequeue","execute","filter","contentType","logError","msg","lineNo","columnNo","stack","block","colors","hex2rgb","hex","r","parseInt","g","b","rgb2hex","color","rgb2hsl","rgb","h","max","Math","min","d","lib","settings","currency","symbol","format","decimal","thousand","precision","grouping","number","tokens","checkPrecision","round","abs","parseFormat","newFormat","unformat","unformatted","parseFloat","toFixed","power","pow","formatNumber","opts","usePrecision","base","mod","accounting","formatMoney","formats","pos","neg","zero","checkCurrencyFormat","resolveDefs","c","def","skip","code","assign","substring","defineParams","param","v","arg","Function","use","useParams","rw","__exp","unescape","doT","name","version","templateSettings","evaluate","interpolate","encode","conditional","iterate","varname","strip","append","selfcontained","doNotSkipEncoded","template","compile","encodeHTMLSource","encodeHTMLRules","&","<",">","\"","'","/","matchHTML","startend","start","end","startencode","tmpl","needhtmlencode","indv","cse","sid","elsecase","vname","iname","flatpickr","func","clearTimeout","compareDates","date1","date2","timeless","setHours","bool","tag","clearNode","firstChild","findParent","condition","createNumberInput","inputClassName","wrapper","numInput","arrowUp","arrowDown","pattern","FlatpickrInstance","instanceConfig","bindToInstance","setCalendarWidth","config","weekNumbers","showMonths","noCalendar","requestAnimationFrame","calendarContainer","visibility","display","daysContainer","daysWidth","days","offsetWidth","width","weekWrapper","removeProperty","updateTime","selectedDates","isKeyDown","amPM","l10n","int","step","curValue","delta","isHourElem","hourElement","isMinuteElem","minuteElement","incrementNumInput","pad","timeWrapper","prevValue","_input","setHoursFromInputs","updateValue","_debouncedChange","hours","minutes","seconds","secondElement","hour","ampm2military","limitMinHours","minTime","minDate","minDateHasTime","latestSelectedDateObj","maxTime","maxDate","maxDateHasTime","getHours","getMinutes","getSeconds","setHoursFromDate","dateObj","date","setDefaultHours","defaultHour","defaultMinute","defaultSeconds","min_hr","min_minutes","max_hr","max_minutes","isMobile","time_24hr","onYearInput","year","changeYear","handler","_handlers","onClick","triggerChange","triggerEvent","jumpToDate","jumpDate","jumpTo","parseDate","currentYear","getFullYear","currentMonth","errorHandler","redraw","timeIncrement","inputElem","createDay","dayNumber","dateIsEnabled","isEnabled","dayElement","getDate","$i","formatDate","ariaDateFormat","todayDateElem","tabIndex","isDateSelected","selectedDateElem","mode","isDateInRange","insertAdjacentHTML","getWeek","focusOnDayElem","targetNode","onMouseOver","getFirstAvailableDay","startMonth","endMonth","month","startIndex","endIndex","focusOnDay","current","offset","dayFocused","isInView","activeElement","startElem","givenMonth","loopDelta","numMonthDays","changeMonth","getNextAvailableDay","buildMonthDays","firstOfMonth","getDay","firstDayOfWeek","prevMonthDays","utils","getDaysInMonth","daysInMonth","createDocumentFragment","isMultiMonth","prevMonthDayClass","nextMonthDayClass","dayIndex","dayNum","dayContainer","buildDays","frag","setMonth","buildMonth","monthNavFragment","monthElement","yearInput","tabindex","yearElement","childNodes","yearAriaLabel","disabled","buildMonths","monthNav","prevMonthNav","yearElements","monthElements","nextMonthNav","buildWeekdays","weekdayContainer","updateWeekdays","weekdays","shorthand","splice","concat","is_offset","_hidePrevMonthArrow","_hideNextMonthArrow","updateNavigationCurrentMonth","isCalendarElem","appendTo","documentClick","isOpen","inline","isCalendarElement","isInput","altInput","path","lostFocus","relatedTarget","isIgnored","ignoredFocusElements","some","clear","newYear","newYearNum","isNewYear","dateToCheck","enable","array","parsed","from","to","onKeyDown","allowInput","allowKeydown","allowInlineKeydown","keyCode","setDate","altFormat","dateFormat","blur","isTimeObj","timeContainer","selectDate","focusAndClose","delta_1","enableTime","elems","shiftKey","hoverDate","firstElementChild","initialDate","rangeStartDate","rangeEndDate","lastDate","lastChild","containsDisabled","minRange","maxRange","t","duration","DAY","prevMonth","_loop_1","dayElem","outOfRange","isBetween","onResize","static","positionCalendar","minMaxDateSetter","inverseDateObj","currentYearElement","setupLocale","locale","l10ns","__assign","default","tokenRegex","K","createDateFormatter","createDateParser","customPositionElement","positionElement","_positionElement","calendarHeight","reduce","acc","child","offsetHeight","calendarWidth","configPos","position","configPosVertical","configPosHorizontal","inputBounds","getBoundingClientRect","distanceFromBottom","innerHeight","bottom","showOnTop","top","pageYOffset","left","pageXOffset","right","rightMost","navigator","userAgent","msMaxTouchPoints","stopPropagation","day","selectedDate","shouldChangeMonth","selectedIndex","sort","a","showTimeInput","closeOnSelect","single","range","setSelectedDate","inputDate","dates","conjunction","rangeSeparator","parseDateRules","rule","hooks","initEvent","monthToStr","shorthandCurrentMonth","mobileInput","mobileFormatStr","joinChar","dObj","onMonthNavClick","isPrevMonth","isNextMonth","defaultConfig","english","_bind","_setHoursFromDate","_positionCalendar","triggerChangeEvent","_createElement","insertBefore","_type","k","_","wasOpen","set","option","CALLBACKS","boolOpts","userConfig","dataset","formats$$1","defineProperty","_enable","_disable","timeMode","enableSeconds","_minDate","_maxDate","minMaxTimeSetter","_minTime","_maxTime","arrayify","disableMobile","plugins","pluginConf","parseConfig","wrap","altInputClass","required","nextSibling","preloadedDate","defaultDate","_showTimeInput","setupDates","yr","fragment","prevArrow","nextArrow","__hidePrevMonthArrow","__hideNextMonthArrow","innerContainer","_a","weekAbbreviation","buildWeeks","rContainer","separator","hourInput","minuteInput","military2ampm","hourIncrement","minuteIncrement","secondInput","toggleTitle","buildTime","animate","customAppend","inputType","setupMobile","debouncedResize","DEBOUNCED_CHANGE_MS","ontouchstart","capture","clickOpens","bindEvents","isSafari","_flatpickr","nodeList","nodes","instances","do_nothing","monthNumber","months","revFormat","D","F","monthName","longhand","G","H","J","M","shortMonth","S","setSeconds","U","unixSeconds","W","weekNum","weekNumber","Y","setFullYear","Z","ISODate","setMinutes","j","w","toISOString","ordinal","String","nth","scrollTitle","_b","defaults","_c","frmt","overrideLocale","givenFormat","customLocale","parsedDate","date_orig","datestr","trim","matched","ops","matchIndex","regexStr","token_1","isBackSlash","escaped","ts","ts1","ts2","givenDate","week1","onClose","onDayCreate","onDestroy","onMonthChange","onOpen","onParseConfig","onReady","onValueUpdate","onYearChange","onPreCalendarPosition","args_1","HTMLElement","HTMLCollection","NodeList","en","localize","setDefaults","fp_incr","es","fp","Spanish","Autocomplete","live","elClass","found","parentElement","o","minChars","offsetLeft","offsetTop","cache","sourceData","menuClass","renderItem","search","re","onSelect","term","that","sc","autocompleteAttr","last_val","updateSC","resize","next","rect","documentElement","scrollLeft","scrollTop","maxHeight","getComputedStyle","currentStyle","suggestionHeight","scrTop","selTop","blurHandler","over_sb","suggest","keydownHandler","previousSibling","keyupHandler","timer","part","focusHandler","f","Chart","u","require","1","getRgba","string","colorNames","scale","getHsla","alpha","getHwb","rgbaString","rgba","percentaString","hslaString","hsla","num","hexDouble","getRgb","getHsl","getAlpha","vals","hexString","rgbString","percentString","hslString","hwbString","hwb","keyword","reverseNames","5","2","convert","Color","valid","hsl","hsv","cmyk","setValues","red","lightness","whiteness","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","spaces","maxes","getValues","space","chans","capped","sname","index","svalues","4","3","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","floor","q","hwb2rgb","wh","bl","cmyk2rgb","xyz2rgb","xyz2lab","lab2xyz","lab","y2","lab2lch","hr","atan2","PI","sqrt","lab2rgb","lch2lab","lch","cos","sin","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","conversions","Converter","pair","convs","routeSpace","fspace","6","helpers","elements","Interaction","layouts","platform","Ticks","register","initialize","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","31","36","39","40","44","45","46","7","8","9","Bar","Doughnut","Line","_set","hover","scales","xAxes","categoryPercentage","barPercentage","gridLines","offsetGridLines","yAxes","axis","rectangle","borderSkipped","tooltips","callbacks","yLabel","labels","datasets","datasetIndex","xLabel","controllers","bar","DatasetController","dataElementType","Rectangle","meta","getMeta","getDataset","update","ilen","rects","_ruler","getRuler","updateElement","chart","custom","rectangleOptions","_xScale","getScaleForId","xAxisID","_yScale","yAxisID","_datasetIndex","_index","_model","datasetLabel","backgroundColor","valueAtIndexOrDefault","borderColor","borderWidth","updateElementGeometry","pivot","model","vscale","getValueScale","getBasePixel","horizontal","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","height","size","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacked","stacks","getDatasetMeta","isDatasetVisible","getStackCount","getStackIndex","stackCount","pixels","getPixelForValue","isNullOrUndef","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","controller","percent","chunk","computeFlexCategoryTraits","thickness","count","computeFitCategoryTraits","stackIndex","valueOrDefault","maxBarThickness","Infinity","draw","canvas","clipArea","ctx","chartArea","unclipArea","setHoverStyle","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","rectangleElementOptions","horizontalBar","animation","animateRotate","animateScale","legendCallback","legend","generateLabels","ds","arc","arcOpts","fillStyle","strokeStyle","lineWidth","hidden","legendItem","cutoutPercentage","rotation","circumference","tooltipItem","dataLabel","doughnut","pie","Arc","linkScales","getRingIndex","ringIndex","me","availableWidth","availableHeight","minSize","startAngle","endAngle","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","each","animationOpts","centerX","centerY","calculateCircumference","arcs","hoverWidth","_chart","showLines","spanGaps","lineEnabled","showLine","line","datasetElementType","Point","points","lineElementOptions","tension","lineTension","_scale","_children","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","fill","steppedLine","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","point","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","yScale","xScale","pointOptions","radius","pointRadius","hitRadius","pointHitRadius","NaN","calculatePointY","pointStyle","dsMeta","sumPos","sumNeg","stackedRightValue","Number","rightValue","capControlPoint","pt","controlPoints","area","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","controlPointNextY","capBezierPoints","hoverRadius","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","easing","onProgress","onComplete","Animation","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","addAnimation","lazy","animating","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","framesToDrop","advance","endTime","positionIsHorizontal","types","construct","configMerge","initConfig","acquireContext","uid","aspectRatio","_bufferedRender","retinaScale","devicePixelRatio","responsive","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","maintainAspectRatio","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","responsiveAnimationDuration","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","items","updated","dtype","dposition","isDefault","scaleType","scaleClass","scaleService","getScaleConstructor","mergeTicksOptions","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","ControllerClass","resetElements","tooltip","newOptions","removeBox","_options","updateConfig","_invalidate","_data","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","effects","stepDecimal","easingValue","transition","boxes","box","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","modes","getElementsAtEvent","intersect","getElementsAtXAxis","getElementsAtEventForMode","getDatasetAtEvent","_meta","generateLegend","unbindEvents","releaseContext","toBase64Image","toDataURL","Tooltip","_chartInstance","listeners","_listeners","listener","eventHandler","updateHoverStyle","enabled","changed","handleEvent","_start","bufferedRequest","animationDuration","hoverOptions","active","onHover","native","arrayEquals","Controller","unlistenArrayEvents","stub","_chartjs","arrayEvents","addElements","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","configurable","enumerable","object","listenArrayEvents","resyncElements","elementOpts","numMeta","numData","insertElements","onDataPush","onDataPop","onDataShift","shift","onDataSplice","onDataUnshift","inherits","scope","merge","configuration","_view","ease","view","actual","origin","c0","c1","isFinite","tooltipPosition","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","constrainedNode","constrainedContainer","hasCNode","hasCContainer","infinity","POSITIVE_INFINITY","merger","tval","sval","scaleMerge","getScaleDefaults","_merger","slen","where","collection","filterCallback","filtered","findNextWhere","arrayToSearch","currentItem","findPreviousWhere","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","log10","exponent","LOG10E","powerOf10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distance","distanceBetweenPoints","pt1","pt2","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","alphaK","betaK","tauK","squaredMagnitude","deltaX","loop","niceNum","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","getRelativePosition","mouseX","mouseY","originalEvent","currentTarget","boundingRect","touches","clientX","clientY","paddingLeft","getStyle","paddingTop","paddingRight","paddingBottom","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","clientWidth","cw","clientHeight","ch","property","getPropertyValue","forceRatio","pixelRatio","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","defaultColor","colorValue","CanvasPattern","parseVisibleItems","jlen","getIntersectItems","inRange","getNearestItems","distanceMetric","minDistance","nearestItems","getCenterPoint","getDistanceMetricForAxis","useX","useY","deltaY","indexMode","x-axis","nearest","getArea","intersectsItem","inXRange","inYRange","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","layout","padding","filterByPosition","sortByWeight","reverse","_tmpIndex_","v0","v1","addBox","fullWidth","layoutItem","configure","props","fitBox","minBoxSize","minBoxSizes","minBox","scaleMargin","totalLeftBoxesWidth","maxHorizontalLeftPadding","totalRightBoxesWidth","maxHorizontalRightPadding","chartWidth","maxChartAreaWidth","chartHeight","maxChartAreaHeight","placeBox","leftPadding","rightPadding","totalTopBoxesHeight","layoutOptions","toPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","totalBottomBoxesHeight","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","_plugins","_cacheId","plugin","unregister","idx","hook","descriptor","descriptors","$plugins","labelsFromTicks","getLineValue","lineValue","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","formatters","minor","major","computeTextSize","tick","parseFontOptions","globalDefaults","fontSize","family","parseLineHeight","toLineHeight","Scale","_ticks","beforeUpdate","maxWidth","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","rawValue","getLabelForIndex","getValueForPixel","pixel","finalVal","getPixelForDecimal","valueOffset","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","optionMajorTicks","isRotated","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","zeroLineIndex","tx1","ty1","tx2","ty2","x1","y1","x2","labelX","labelY","textAlign","textBaseline","labelYOffset","xLineValue","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","save","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","constructors","registerScaleType","scaleConstructor","scaleDefaults","updateScaleDefaults","additions","linear","tickValue","logDelta","tickString","numDecimal","logarithmic","remain","toExponential","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","createTooltipItem","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","dataPoints","vm","paddingAndSize","radiusAndPadding","getBackgroundPoint","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","quadraticCurveTo","closePath","hasTooltipContent","average","eventPosition","nearestElement","tp","27","inLabelRange","chartX","chartY","pointRelativePosition","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","28","currentVM","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","29","xRange","drawPoint","30","isVertical","getBarBounds","halfWidth","halfHeight","cornerAt","corners","startCorner","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corner","bounds","32","clearRect","roundedRect","rx","ry","edgeLength","xOffset","yOffset","SQRT2","leftX","topY","sideSize","drawImage","clip","flip","bezierCurveTo","drawRoundedRectangle","33","loopable","a0","a1","klen","_mergerIf","mergeIf","sources","setFn","extensions","ChartElement","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","34","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","35","inputs","37","getContext","38","readUsedSize","eventListenerOptions","nativeEvent","addResizeListener","expando","EXPANDO_KEY","resizer","cls","CSS_PREFIX","expand","shrink","_reset","onScroll","createResizer","ticking","throttled","proxy","renderProxy","animationName","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","reflow","CSS_RENDER_MONITOR","watchForRender","removeResizeListener","unwatchForRender","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","supports","passive","_enabled","renderHeight","renderWidth","initial","displayWidth","displayHeight","initCanvas","proxies","fromNativeEvent","addEvent","removeEvent","basic","dom","implementation","filler","41","42","43","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","getBasePosition","resolveTarget","propagate","visited","visible","createMapper","mappers","isDrawable","drawArea","curve0","curve1","len0","len1","boundary","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","span","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","createNewLegendAndAttach","legendOpts","Legend","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","_element","beforeInit","afterEvent","createNewTitleBlockAndAttach","titleOpts","Title","titleBlock","textSize","titleX","titleY","titleFont","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","LinearScale","LinearScaleBase","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","ceil","tickFontSize","handleDirectionalChanges","innerDimension","ticksAsNumbers","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","stepSize","fixedStepSize","generationOptions","dataRange","spacing","niceRange","niceMin","niceMax","numSpaces","generateTicks","CollapsibleList","lis","createClickListener","checked","pi","checkedRelative","relatives","forceOpen","uls","li","DashChart","flatpicker","showLegend","dataFn","errorFn","toggleExportFn","initDate","run","randomWithin","random","randomColor","randomColors","cnt","parseColor","updatedDate","forceRefresh","ranges","rows","yTitle","xType","currencyFormat","chartType","isRadial","yType","chartData","getSize","getStyleSize","isSetup","div","borderStyle","boxSizing","isBoxSizeOuter","innerWidth","outerWidth","outerHeight","measurementsLength","measurements","getZeroSize","isBorderBox","measurement","paddingWidth","paddingHeight","marginWidth","marginLeft","marginRight","marginHeight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderHeight","borderTopWidth","borderBottomWidth","isBorderBoxSizeOuter","styleWidth","styleHeight","EvEmitter","eventName","_events","emitEvent","Unipointer","proto","create","bindStartEvent","_bindStartEvent","unbindStartEvent","isBind","bindMethod","pointerEnabled","msPointerEnabled","getTouch","pointerIdentifier","onmousedown","button","_pointerDown","changedTouches","onMSPointerDown","onpointerdown","pointer","isPointerDown","pointerId","identifier","pointerDown","_bindPostStartEvents","postStartEvents","mousedown","MSPointerDown","_boundPointerEvents","_unbindPostStartEvents","onmousemove","_pointerMove","onMSPointerMove","onpointermove","ontouchmove","touch","pointerMove","onmouseup","_pointerUp","onMSPointerUp","onpointerup","ontouchend","_pointerDone","pointerUp","pointerDone","onMSPointerCancel","onpointercancel","_pointerCancel","ontouchcancel","pointerCancel","getPointerPoint","pageX","pageY","Unidragger","bindHandles","_bindHandles","unbindHandles","binderExtra","handles","_dragPointerDown","focused","pointerDownPoint","canPreventDefaultOnPointerDown","moveVector","_dragPointerMove","_dragMove","movePoint","isDragging","hasDragStarted","_dragStart","_dragPointerUp","_dragEnd","_staticClick","dragStartPoint","isPreventingClicks","dragStart","dragMove","dragEnd","onclick","isIgnoringMouseUp","staticClick","Draggabilly","_create","applyGrid","grid","applyMinZero","drag","lastTime","currTime","timeToCall","transformProperty","transform","positionValues","relative","absolute","fixed","_getPosition","startPoint","dragPoint","startPosition","setHandles","_getPositionCoord","_addTransformPosition","styleSide","measure","parentSize","matrixValues","xIndex","translateX","translateY","measureContainment","setLeftTop","containment","elemSize","containerSize","elemRect","containerRect","borderSizeX","borderSizeY","relativeStartPosition","containSize","dragX","dragY","gridX","gridY","containDrag","minZero","positionDrag","ColorPicker","attrs","createElementNS","svgNS","draggie","colorpickerHTMLSnippet","slideElement","pickerElement","slideIndicator","pickerIndicator","slideClone","slide","cloneNode","pickerClone","picker","hsvGradient","hsvRect","uniqID","blackAndWhiteGradients","whiteAndBlackRects","slideListener","slideHandler","pickerListener","pickerHandler","addEvents","SVGAngle","hasFeature","xmlns","stop-color","stop-opacity","namespaces","R","B","X","C","V","hex2hsv","background-color","positionIndicators","setColor","setHex","pickerHeight","Rect","lx","overlaps","thisRight","thisBottom","rectRight","rectBottom","doTable","_templates","headerFn","footerFn","bodyFn","loadingFn","noDataFn","defaultCompare","getFieldValue","pixelToFloat","camelCase","letter","buildOpts","columns","resultUrl","requestParams","searchable","loadAll","columnMinWidth","editable","storeUrl","itemsPerPage","searchQuery","dataDateFormat","displayDateFormat","displayCurrencyFormat","checkUpdateDate","attributes","parseAttributes","parseColumns","loadData","loadingError","filteredTotal","results","pageTotal","totalDistance","lastSeenAt","intColumns","dateColumns","currencyColumns","storeFunction","rowTemplateFn","displayValueFn","dataType","store","currentStartItem","currentEndItem","parseSorting","sorting","sortColumns","tempNode","field","column","sortable","dir","sortDir","sortOrder","sortColumn","myKey","localStorage","buildSortList","processData","filterResults","buildParams","refresh","startItem","query","setCurrentStartItem","setItemsPerPage","setSearchQuery","requestTimer","moveToPage","changePage","page","resetSort","changeSort","fieldName","getSelection","removeAllRanges","aa","bb","setLayout","table","getTable","tableLayout","getContainer","tHead","hWidth","tWidth","cells","contentNode","colGroup","tableHeaderRow","getTableHeaderRow","cWidth","cell","scroll","onHeaderMouseDown","inResizeArea","cellEl","stopImmediatePropagation","resizeContext","colIndex","cellIndex","initX","scrWidth","initTblWidth","initColWidth","layoutTimer","onMouseMove","newStyle","newColWidth","onMouseUp","newTblWidth","tblX","clientLeft","previousElementSibling","touchHandler","mouseEvent","simulatedEvent","initMouseEvent","screenX","screenY","thead","mouseFunc","move","up","makeRow","bodyHTML","Widget","rectSort","widgetNode","widget","dashboardId","interval","isFullscreen","dragMargin","toggleFullScreen","setupDraggie","chartNode","refreshSeconds","getRefreshRate","setInterval","getDashboardContainer","makeGrid","dashboardNode","columnWidth","rowHeight","getWidgets","updatePosition","sorted","aWidget","bWidget","setLocation","savePosition","positions","Id","Width","Height","dash","Widgets","moveDraggie","stopDrag","resizeDraggie","initResize","stopResize","setSize","toLocaleTimeString","clearInterval","updateStyle","buildClassList","totalDestruction","fullScreenIcon","_autocompletes","_draggabillies","_charts","_colorpickers","_dashboardEvents","getNode","conditionallyDisable","focusOnClose","startColumnDrag","stopColumnDrag","newPos","leftItems","columnSort","rightItems","updateColumnList","updateColumn","inputReplace","dashboardResizeLayout","dashboardCheckKeyPress","_toggles","nav-menu","dotable","context-help","collapsible-list","input-replace","autocomplete","column-selector","content-replace","existingNode","processToggles","replaceChild","datepicker","chart-export","chartContainer","colorpicker","dashboard","keydown","isUnload","processContent","dlg","autofocus","_loadingDiv"],"mappings":"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","file":"bundle.js","sourcesContent":["/*!\r\n * CustomEvent polyfill\r\n * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\r\n */\r\n(function() {\r\n    if (typeof window.CustomEvent === 'function') return false;\r\n\r\n    function CustomEvent(event, params) {\r\n        params = params || { bubbles: false, cancelable: false, detail: undefined };\r\n        var evt = document.createEvent('CustomEvent');\r\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n        return evt;\r\n    }\r\n\r\n    CustomEvent.prototype = window.Event.prototype;\r\n    window.CustomEvent = CustomEvent;\r\n})();\r\n\r\n/*!\r\n * Promise polyfill\r\n * https://github.com/taylorhakes/promise-polyfill\r\n */\r\n/* global global, setImmediate */\r\n(function(global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory() :\r\n        typeof define === 'function' && define.amd ? define(factory) :\r\n            (factory());\r\n}(this, (function() {\r\n    'use strict';\r\n\r\n    /**\r\n     * @this {Promise}\r\n     */\r\n    function finallyConstructor(callback) {\r\n        var constructor = this.constructor;\r\n        return this.then(\r\n            function(value) {\r\n                return constructor.resolve(callback()).then(function() {\r\n                    return value;\r\n                });\r\n            },\r\n            function(reason) {\r\n                return constructor.resolve(callback()).then(function() {\r\n                    return constructor.reject(reason);\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    // Store setTimeout reference so promise-polyfill will be unaffected by\r\n    // other code modifying setTimeout (like sinon.useFakeTimers())\r\n    var setTimeoutFunc = setTimeout;\r\n\r\n    function noop() { }\r\n\r\n    // Polyfill for Function.prototype.bind\r\n    function bind(fn, thisArg) {\r\n        return function() {\r\n            fn.apply(thisArg, arguments);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Function} fn\r\n     */\r\n    function Promise(fn) {\r\n        if (!(this instanceof Promise))\r\n            throw new TypeError('Promises must be constructed via new');\r\n        if (typeof fn !== 'function') throw new TypeError('not a function');\r\n        /** @type {!number} */\r\n        this._state = 0;\r\n        /** @type {!boolean} */\r\n        this._handled = false;\r\n        /** @type {Promise|undefined} */\r\n        this._value = undefined;\r\n        /** @type {!Array<!Function>} */\r\n        this._deferreds = [];\r\n\r\n        doResolve(fn, this);\r\n    }\r\n\r\n    function handle(self, deferred) {\r\n        while (self._state === 3) {\r\n            self = self._value;\r\n        }\r\n        if (self._state === 0) {\r\n            self._deferreds.push(deferred);\r\n            return;\r\n        }\r\n        self._handled = true;\r\n        Promise._immediateFn(function() {\r\n            var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\r\n            if (cb === null) {\r\n                (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\r\n                return;\r\n            }\r\n            var ret;\r\n            try {\r\n                ret = cb(self._value);\r\n            } catch (e) {\r\n                reject(deferred.promise, e);\r\n                return;\r\n            }\r\n            resolve(deferred.promise, ret);\r\n        });\r\n    }\r\n\r\n    function resolve(self, newValue) {\r\n        try {\r\n            // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\r\n            if (newValue === self)\r\n                throw new TypeError('A promise cannot be resolved with itself.');\r\n            if (\r\n                newValue &&\r\n                (typeof newValue === 'object' || typeof newValue === 'function')\r\n            ) {\r\n                var then = newValue.then;\r\n                if (newValue instanceof Promise) {\r\n                    self._state = 3;\r\n                    self._value = newValue;\r\n                    finale(self);\r\n                    return;\r\n                } else if (typeof then === 'function') {\r\n                    doResolve(bind(then, newValue), self);\r\n                    return;\r\n                }\r\n            }\r\n            self._state = 1;\r\n            self._value = newValue;\r\n            finale(self);\r\n        } catch (e) {\r\n            reject(self, e);\r\n        }\r\n    }\r\n\r\n    function reject(self, newValue) {\r\n        self._state = 2;\r\n        self._value = newValue;\r\n        finale(self);\r\n    }\r\n\r\n    function finale(self) {\r\n        if (self._state === 2 && self._deferreds.length === 0) {\r\n            Promise._immediateFn(function() {\r\n                if (!self._handled) {\r\n                    Promise._unhandledRejectionFn(self._value);\r\n                }\r\n            });\r\n        }\r\n\r\n        for (var i = 0, len = self._deferreds.length; i < len; i++) {\r\n            handle(self, self._deferreds[i]);\r\n        }\r\n        self._deferreds = null;\r\n    }\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    function Handler(onFulfilled, onRejected, promise) {\r\n        this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\r\n        this.onRejected = typeof onRejected === 'function' ? onRejected : null;\r\n        this.promise = promise;\r\n    }\r\n\r\n    /**\r\n     * Take a potentially misbehaving resolver function and make sure\r\n     * onFulfilled and onRejected are only called once.\r\n     *\r\n     * Makes no guarantees about asynchrony.\r\n     */\r\n    function doResolve(fn, self) {\r\n        var done = false;\r\n        try {\r\n            fn(\r\n                function(value) {\r\n                    if (done) return;\r\n                    done = true;\r\n                    resolve(self, value);\r\n                },\r\n                function(reason) {\r\n                    if (done) return;\r\n                    done = true;\r\n                    reject(self, reason);\r\n                }\r\n            );\r\n        } catch (ex) {\r\n            if (done) return;\r\n            done = true;\r\n            reject(self, ex);\r\n        }\r\n    }\r\n\r\n    Promise.prototype['catch'] = function(onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n\r\n    Promise.prototype.then = function(onFulfilled, onRejected) {\r\n        // @ts-ignore\r\n        var prom = new this.constructor(noop);\r\n\r\n        handle(this, new Handler(onFulfilled, onRejected, prom));\r\n        return prom;\r\n    };\r\n\r\n    Promise.prototype['finally'] = finallyConstructor;\r\n\r\n    Promise.all = function(arr) {\r\n        return new Promise(function(resolve, reject) {\r\n            if (!arr || typeof arr.length === 'undefined')\r\n                throw new TypeError('Promise.all accepts an array');\r\n            var args = Array.prototype.slice.call(arr);\r\n            if (args.length === 0) return resolve([]);\r\n            var remaining = args.length;\r\n\r\n            function res(i, val) {\r\n                try {\r\n                    if (val && (typeof val === 'object' || typeof val === 'function')) {\r\n                        var then = val.then;\r\n                        if (typeof then === 'function') {\r\n                            then.call(\r\n                                val,\r\n                                function(val) {\r\n                                    res(i, val);\r\n                                },\r\n                                reject\r\n                            );\r\n                            return;\r\n                        }\r\n                    }\r\n                    args[i] = val;\r\n                    if (--remaining === 0) {\r\n                        resolve(args);\r\n                    }\r\n                } catch (ex) {\r\n                    reject(ex);\r\n                }\r\n            }\r\n\r\n            for (var i = 0; i < args.length; i++) {\r\n                res(i, args[i]);\r\n            }\r\n        });\r\n    };\r\n\r\n    Promise.resolve = function(value) {\r\n        if (value && typeof value === 'object' && value.constructor === Promise) {\r\n            return value;\r\n        }\r\n\r\n        return new Promise(function(resolve) {\r\n            resolve(value);\r\n        });\r\n    };\r\n\r\n    Promise.reject = function(value) {\r\n        return new Promise(function(resolve, reject) {\r\n            reject(value);\r\n        });\r\n    };\r\n\r\n    Promise.race = function(values) {\r\n        return new Promise(function(resolve, reject) {\r\n            for (var i = 0, len = values.length; i < len; i++) {\r\n                values[i].then(resolve, reject);\r\n            }\r\n        });\r\n    };\r\n\r\n    // Use polyfill for setImmediate for performance gains\r\n    Promise._immediateFn =\r\n        (typeof setImmediate === 'function' &&\r\n            function(fn) {\r\n                setImmediate(fn);\r\n            }) ||\r\n        function(fn) {\r\n            setTimeoutFunc(fn, 0);\r\n        };\r\n\r\n    Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\r\n        if (typeof console !== 'undefined' && console) {\r\n            console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\r\n        }\r\n    };\r\n\r\n    /** @suppress {undefinedVars} */\r\n    var globalNS = (function() {\r\n        // the only reliable means to get the global object is\r\n        // `Function('return this')()`\r\n        // However, this causes CSP violations in Chrome apps.\r\n        if (typeof self !== 'undefined') {\r\n            return self;\r\n        }\r\n        if (typeof window !== 'undefined') {\r\n            return window;\r\n        }\r\n        if (typeof global !== 'undefined') {\r\n            return global;\r\n        }\r\n        throw new Error('unable to locate global object');\r\n    })();\r\n\r\n    if (!('Promise' in globalNS)) {\r\n        globalNS['Promise'] = Promise;\r\n    } else if (!globalNS.Promise.prototype['finally']) {\r\n        globalNS.Promise.prototype['finally'] = finallyConstructor;\r\n    }\r\n})));\r\n\r\n/*!\r\n * Fetch polyfill\r\n * https://github.com/developit/unfetch\r\n */\r\n(function() {\r\n    if (typeof window.fetch === 'function') return false;\r\n\r\n    window.fetch = function(url, options) {\r\n        options = options || {};\r\n        return new Promise(function(resolve, reject) {\r\n            var request = new XMLHttpRequest();\r\n\r\n            request.open(options.method || 'get', url, true);\r\n\r\n            for (var i in options.headers) {\r\n                request.setRequestHeader(i, options.headers[i]);\r\n            }\r\n\r\n            request.withCredentials = options.credentials == 'include';\r\n\r\n            request.onload = function() {\r\n                resolve(response());\r\n            };\r\n\r\n            request.onerror = reject;\r\n\r\n            request.send(options.body);\r\n\r\n            function response() {\r\n                var _keys = [],\r\n                    all = [],\r\n                    headers = {},\r\n                    header = void 0;\r\n\r\n                request.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm, function(m, key, value) {\r\n                    _keys.push(key = key.toLowerCase());\r\n                    all.push([key, value]);\r\n                    header = headers[key];\r\n                    headers[key] = header ? header + ',' + value : value;\r\n                });\r\n\r\n                return {\r\n                    ok: (request.status / 100 | 0) == 2, // 200-299\r\n                    status: request.status,\r\n                    statusText: request.statusText,\r\n                    url: request.responseURL,\r\n                    clone: response,\r\n                    text: function text() {\r\n                        return Promise.resolve(request.responseText);\r\n                    },\r\n                    json: function json() {\r\n                        return Promise.resolve(request.responseText).then(JSON.parse);\r\n                    },\r\n                    blob: function blob() {\r\n                        return Promise.resolve(new Blob([request.response]));\r\n                    },\r\n                    headers: {\r\n                        keys: function keys() {\r\n                            return _keys;\r\n                        },\r\n                        entries: function entries() {\r\n                            return all;\r\n                        },\r\n                        get: function get(n) {\r\n                            return headers[n.toLowerCase()];\r\n                        },\r\n                        has: function has(n) {\r\n                            return n.toLowerCase() in headers;\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        });\r\n    };\r\n})();\r\n","/*!\r\n * Contains all the common JS functions Dash needs.\r\n */\r\n(function(root) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Add a class to an element.\r\n     * @param {Node} element - Element to add the class to.\r\n     * @param {string} className - Name of class to add.\r\n     */\r\n    var addClass = function(element, className) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.classList.add(className);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Deep copy of an object, by value not by ref.\r\n     * @param {Object} src - Object to copy\r\n     * @returns {Object} New copy of the object\r\n     */\r\n    var clone = function(src) {\r\n        if (isNull(src)) {\r\n            return src;\r\n        }\r\n\r\n        var cpy;\r\n        if (isArray(src)) {\r\n            return src.map(function(x) { return clone(x); });\r\n        }\r\n        if (isDate(src)) {\r\n            return new Date(src.getTime());\r\n        }\r\n        if (src instanceof RegExp) {\r\n            cpy = new RegExp(src.source);\r\n            cpy.global = src.global;\r\n            cpy.ignoreCase = src.ignoreCase;\r\n            cpy.multiline = src.multiline;\r\n            cpy.lastIndex = src.lastIndex;\r\n            return cpy;\r\n        }\r\n        if (isNode(src)) {\r\n            return src;\r\n        }\r\n        if (isObject(src)) {\r\n            cpy = {};\r\n            for (var prop in src) {\r\n                if (src.hasOwnProperty(prop)) {\r\n                    cpy[prop] = clone(src[prop]);\r\n                }\r\n            }\r\n            return cpy;\r\n        }\r\n        return src;\r\n    };\r\n\r\n    /**\r\n     * Get closest parent that matches the selector.\r\n     * @param {string} selector - ID, class name, tag name, or data attribute to find.\r\n     * @param {Node} node - Node to start search from.\r\n     * @returns {Node} Matched node or null.\r\n     */\r\n    var closest = function(selector, node) {\r\n        var firstChar = selector.charAt(0);\r\n        var tSelector = selector.substr(1);\r\n        var lowerSelector = selector.toLowerCase();\r\n\r\n        while (node !== document) {\r\n            node = node.parentNode;\r\n            if (!node) {\r\n                return null;\r\n            }\r\n\r\n            // If selector is a class\r\n            if (firstChar === '.' && node.classList && node.classList.contains(tSelector)) {\r\n                return node;\r\n            }\r\n            // If selector is an ID\r\n            if (firstChar === '#' && node.id === tSelector) {\r\n                return node;\r\n            }\r\n            // If selector is a data attribute\r\n            if (firstChar === '[' && node.hasAttribute(selector.substr(1, selector.length - 2))) {\r\n                return node;\r\n            }\r\n            // If selector is a tag\r\n            if (node.tagName && node.tagName.toLowerCase() === lowerSelector) {\r\n                return node;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Coalesce value and defValue.\r\n     * @param {*} value - First value to check.\r\n     * @param {*} defValue - Default value.\r\n     * @returns {*} Value if it is not null, else defValue.\r\n     */\r\n    var coalesce = function(value, defValue) {\r\n        return isNull(value) ? defValue : value;\r\n    };\r\n\r\n    /**\r\n     * Create a dom node from an html string. Expects a single root element.\r\n     * @param {string} html - HTML content for the node.\r\n     * @returns {Node} New DOM node.\r\n     */\r\n    var createNode = function(html) {\r\n        var node = document.createElement('div');\r\n        node.innerHTML = html;\r\n        return html && html.length ? node.children[0] : node;\r\n    };\r\n\r\n    /**\r\n     * Create a debounce handler to prevent a function from being called too frequently.\r\n     * @param {Function} fn - Function to debounce.\r\n     * @param {number} wait - Milliseconds to wait between running the function.\r\n     * @returns {Function} A closure wrapping the passed in function.\r\n     */\r\n    var debounce = function(fn, wait) {\r\n        var timeout, args, context, timestamp;\r\n\r\n        return function() {\r\n            context = this;\r\n            args = [].slice.call(arguments, 0);\r\n            timestamp = new Date();\r\n\r\n            var later = function() {\r\n                var last = new Date() - timestamp;\r\n                if (last < wait) {\r\n                    // if the latest call was less that the wait period ago then we reset the timeout to wait for the difference\r\n                    timeout = setTimeout(later, wait - last);\r\n                } else {\r\n                    // if not we can null out the timer and run the latest\r\n                    timeout = null;\r\n                    fn.apply(context, args);\r\n                }\r\n            };\r\n\r\n            // we only need to set the timer now if one isn't already running\r\n            if (!timeout) {\r\n                timeout = setTimeout(later, wait);\r\n            }\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Destroy an object.\r\n     * @param {Object} obj - Object to destroy.\r\n     */\r\n    var destroy = function(obj) {\r\n        if (isNull(obj)) {\r\n            return;\r\n        }\r\n        if (obj.destroy) {\r\n            obj.destroy();\r\n        }\r\n        obj = null;\r\n    };\r\n\r\n    /**\r\n     * Conditionally disable a input.\r\n     * @param {Node} node - Input to enable/disable.\r\n     * @param {bool} disable - True to disable, false to enable.\r\n     */\r\n    var disableIf = function(node, disable) {\r\n        if (!node) {\r\n            return;\r\n        }\r\n        if (disable) {\r\n            node.setAttribute('disabled', true);\r\n        } else {\r\n            node.removeAttribute('disabled');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Dispatch event to an element.\r\n     * @param {Node} element - Element to dispatch the event to.\r\n     * @param {string} event - Event name to dispatch.\r\n     */\r\n    var dispatch = function(element, event) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.dispatchEvent(event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Deep equality comparer for objects.\r\n     * @param {Object} x - First object to compare.\r\n     * @param {Object} y - Object to compare to x.\r\n     * @returns {bool} True if objects are equal.\r\n     */\r\n    var equals = function(x, y) {\r\n        var p;\r\n        for (p in y) {\r\n            if (isUndefined(x[p])) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        for (p in y) {\r\n            if (y[p]) {\r\n                switch (typeof y[p]) {\r\n                    case 'object':\r\n                        if (!equals(y[p], x[p])) {\r\n                            return false;\r\n                        } break;\r\n                    case 'function':\r\n                        if (isUndefined(x[p]) || (p !== 'equals' && y[p].toString() !== x[p].toString())) {\r\n                            return false;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        if (y[p] !== x[p]) {\r\n                            return false;\r\n                        }\r\n                }\r\n            } else if (x[p]) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        for (p in x) {\r\n            if (isUndefined(y[p])) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Recursively merge multiple objects, combining values of arguments into first argument. Rightmost values take precedence.\r\n     * @returns {*} Updated first argument.\r\n     */\r\n    var extend = function() {\r\n        var l = arguments.length, key, i;\r\n        var result = l > 0 ? arguments[0] : {};\r\n        if (isNull(result)) {\r\n            result = {};\r\n        }\r\n        for (i = 1; i < l; i++) {\r\n            for (key in arguments[i]) {\r\n                if (arguments[i].hasOwnProperty(key)) {\r\n                    result[key] = arguments[i][key];\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Get an object from an array where the obj[key]===value.\r\n     * @param {*[]} arr - Array to search in.\r\n     * @param {string} key - Property name to check.\r\n     * @param {*} value - Value to find.\r\n     * @returns {*} Array value that matches or null.\r\n     */\r\n    var findByKey = function(arr, key, value) {\r\n        if (!arr || isNull(key)) {\r\n            return;\r\n        }\r\n        var i = arr.length - 1;\r\n        while (i > -1) {\r\n            if (arr[i][key] === value) {\r\n                arr[i]._i = i;\r\n                return arr[i];\r\n            }\r\n            i--;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * A fast `.forEach()` implementation.\r\n     * See https://github.com/codemix/fast.js\r\n     * @param {Array} subject - The array (or array-like) to iterate over.\r\n     * @param {Function} fn - The visitor function.\r\n     * @param {Object} thisContext - The context for the visitor.\r\n     */\r\n    var forEach = function(subject, fn, thisContext) {\r\n        if (!(subject && subject.length)) {\r\n            return;\r\n        }\r\n        var length = subject.length,\r\n            iterator = thisContext !== undefined ? fn.bind(thisContext) : fn,\r\n            i;\r\n        for (i = 0; i < length; i++) {\r\n            iterator(subject[i], i, subject);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get an element matching selector.\r\n     * @param {string} selector - ID, class name, or any valid query selector.\r\n     * @param {Node} container - Only search within this node.\r\n     * @returns {Node} Matched node.\r\n     */\r\n    var get = function(selector, container) {\r\n        if (typeof selector !== 'string') {\r\n            return selector;\r\n        }\r\n        if (container) {\r\n            return container.querySelector(selector);\r\n        }\r\n        var simple = selector.indexOf(' ', 1) === -1 && selector.indexOf('.', 1) === -1;\r\n        if (!simple) {\r\n            return document.querySelector(selector);\r\n        }\r\n        var sel = selector.charAt(0);\r\n        if (sel === '#') {\r\n            return document.getElementById(selector.substr(1));\r\n        } else if (sel === '.') {\r\n            var res = document.getElementsByClassName(selector.substr(1));\r\n            return res.length ? res[0] : null;\r\n        } else {\r\n            return document.querySelector(selector);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get all elements matching selector.\r\n     * @param {string} selector - ID, class name, or any valid query selector.\r\n     * @param {Node} container - Only search within this node.\r\n     * @param {bool} includeContainer - If true check if container matches selector and add it to resultset.\r\n     * @returns {Node[]} Non-live array of matched nodes.\r\n     */\r\n    var getAll = function(selector, container, includeContainer) {\r\n        var list;\r\n        if (selector.charAt(0) === '.' && selector.indexOf(',') === -1 && selector.indexOf('>') === -1) {\r\n            list = (container || document).getElementsByClassName(selector.substr(1));\r\n        } else {\r\n            list = (container || document).querySelectorAll(selector);\r\n        }\r\n        var res = Array.prototype.slice.call(list);\r\n        if (includeContainer && container && matches(container, selector)) {\r\n            res.unshift(container);\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Check if an element has a class assigned to it.\r\n     * @param {Node} element - Element to check.\r\n     * @param {string} className - Name of class to look for.\r\n     * @returns {bool} True if the element has the class.\r\n     */\r\n    var hasClass = function(element, className) {\r\n        var node = get(element);\r\n        return node && node.classList && node.classList.contains(className);\r\n    };\r\n\r\n    /**\r\n     * Check if variable has a value.\r\n     * @param {*} val - Value to check.\r\n     * @returns {bool} True if the object has a value greater than zero.\r\n     */\r\n    var hasPositiveValue = function(val) {\r\n        return hasValue(val) && val > 0;\r\n    };\r\n\r\n    /**\r\n     * Check if variable has a value.\r\n     * @param {*} val - Value to check.\r\n     * @returns {bool} True if the object is not null, undefined, or zero length.\r\n     */\r\n    var hasValue = function(val) {\r\n        return !(isNull(val) || val.length === 0);\r\n    };\r\n\r\n    /**\r\n     * Hide an element.\r\n     * @param {Node} element - Element to hide.\r\n     * @param {bool} maintainLayout - Maintain the spacing of the element if true, default to false.\r\n     */\r\n    var hide = function(element, maintainLayout) {\r\n        var node = get(element);\r\n        if (node) {\r\n            if (coalesce(maintainLayout, false)) {\r\n                addClass(node, 'd-invisible');\r\n            } else {\r\n                addClass(node, 'd-none');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is an array.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is an array.\r\n     */\r\n    var isArray = function(x) {\r\n        return !isNull(x) && x.constructor === Array;\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is a date.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is a date.\r\n     */\r\n    var isDate = function(x) {\r\n        return !isNull(x) && x.getMonth && !isNaN(x.getTime());\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is an event.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is a event.\r\n     */\r\n    var isEvent = function(x) {\r\n        return x instanceof Event;\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is a function.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is a function.\r\n     */\r\n    var isFunction = function(x) {\r\n        return typeof x === 'function';\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is a DOM node.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is a node.\r\n     */\r\n    var isNode = function(x) {\r\n        return !isNull(x) && x.nodeType === 1 && x.nodeName;\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is undefined or null.\r\n     * @param {*} x - Variable to check the value of.\r\n     * @returns {bool} True if x is undefined or null.\r\n     */\r\n    var isNull = function(x) {\r\n        return isUndefined(x) || x === null;\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is a number.\r\n     * @param {*} x - Variable to check the value of.\r\n     * @returns {bool} True if x is a number.\r\n     */\r\n    var isNumber = function(x) {\r\n        return typeof x === 'number' && !isNaN(x);\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is an object.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is an object.\r\n     */\r\n    var isObject = function(x) {\r\n        return typeof x === 'object';\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is a string.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is a string.\r\n     */\r\n    var isString = function(x) {\r\n        return typeof x === 'string';\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is undefined.\r\n     * @param {*} x - Variable to check the value of.\r\n     * @returns {bool} True if x is undefined.\r\n     */\r\n    var isUndefined = function(x) {\r\n        return typeof x === 'undefined';\r\n    };\r\n\r\n    /**\r\n     * Check if a node should be visible.\r\n     * @param {Node} node - Node to check.\r\n     * @returns {Bool} True if visible else false.\r\n     */\r\n    var isVisible = function(node) {\r\n        return node.offsetParent !== null;\r\n    };\r\n\r\n    /**\r\n     * A fast `.map()` implementation.\r\n     * See https://github.com/codemix/fast.js\r\n     * @param {Array} subject - The array (or array-like) to map over.\r\n     * @param {Function} fn - The mapper function.\r\n     * @param {Object} thisContext - The context for the mapper.\r\n     * @return {Array} The array containing the results.\r\n     */\r\n    var map = function(subject, fn, thisContext) {\r\n        var length = subject.length,\r\n            result = new Array(length),\r\n            iterator = thisContext !== undefined ? fn.bind(thisContext) : fn,\r\n            i;\r\n        for (i = 0; i < length; i++) {\r\n            result[i] = iterator(subject[i], i, subject);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Verify if an element would be matched by a selector.\r\n     * @param {Node} element - Node to compare the selector to.\r\n     * @param {string} selector - Valid CSS selector.\r\n     * @returns {bool} True if the element matches the selector.\r\n     */\r\n    var matches = function(element, selector) {\r\n        var p = Element.prototype;\r\n        var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function(s) {\r\n            return [].indexOf.call(getAll(s), this) !== -1;\r\n        };\r\n        return f.call(element, selector);\r\n    };\r\n\r\n    /**\r\n     * Do nothing.\r\n     */\r\n    var noop = function() { };\r\n\r\n    /**\r\n     * Remove an event from an element.\r\n     * @param {Node} element - Element to remove the event from.\r\n     * @param {string} event - Event name to remove.\r\n     * @param {Function} fn - Function to remove.\r\n     * @param {bool} useCapture - Dispatch to this listener before any before it.\r\n     */\r\n    var off = function(element, event, fn, useCapture) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.removeEventListener(event, fn, useCapture);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Attach an event to an element.\r\n     * @param {Node} element - Element to attach the event to.\r\n     * @param {string} event - Event name to attach.\r\n     * @param {Function} fn - Function to run when the event fires.\r\n     * @param {bool} useCapture - Dispatch to this listener before any before it.\r\n     */\r\n    var on = function(element, event, fn, useCapture) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.addEventListener(event, fn, useCapture);\r\n        }\r\n    };\r\n\r\n    /**\r\n    * Set a function to run onChange, and run it immediately if needed.\r\n     * @param {Node} element - Element to attach the event to.\r\n    * @param {Function} changeFn - Function to run.\r\n    * @param {bool} immediate - Run function immediately.\r\n    */\r\n    var onChange = function(element, changeFn, immediate) {\r\n        var node = get(element);\r\n        if (node) {\r\n            on(node, 'change', changeFn);\r\n            if (coalesce(immediate, true)) {\r\n                changeFn.call(node);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Run a function when page is loaded\r\n     * @param {Function} fn - Function to run.\r\n     */\r\n    var ready = function(fn) {\r\n        // Sanity check\r\n        if (!isFunction(fn)) {\r\n            return;\r\n        }\r\n        // If document is already loaded, run method\r\n        if (document.readyState === 'complete') {\r\n            fn();\r\n        }\r\n        // Otherwise, wait until document is loaded\r\n        document.addEventListener('DOMContentLoaded', fn, false);\r\n    };\r\n\r\n    /**\r\n     * Remove a class from an element.\r\n     * @param {Node} element - Element to remove the class from.\r\n     * @param {string} className - Name of class to remove.\r\n     */\r\n    var removeClass = function(element, className) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.classList.remove(className);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the text content of a node.\r\n     * @param {Node} element - Element to update.\r\n     * @param {string} text - New text content.\r\n     */\r\n    var setText = function(element, text) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.textContent = text;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Show a hidden element.\r\n     * @param {Node} element - Element to show.\r\n     */\r\n    var show = function(element) {\r\n        var node = get(element);\r\n        if (node) {\r\n            removeClass(node, 'd-invisible');\r\n            removeClass(node, 'd-none');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get element style, or set multiple styles for an element at once.\r\n     * @param {Node} element - Element to get/set styles for.\r\n     * @param {Object|undefined} styles - Object with styleName:value, or undefined if getting.\r\n     * @param {bool} overwrite - Overwrite existing styles if true, else merge.\r\n     * @returns {string|undefined} Returns the element style if styles param is empty, else undefined.\r\n     */\r\n    var style = function(element, styles, overwrite) {\r\n        var node = get(element);\r\n        if (node) {\r\n            if (!isNull(styles)) {\r\n                node.style.cssText = _toCSS(coalesce(overwrite, false) ? extend(_parseCss(node.style.cssText), _toLowerKeys(styles)) : styles);\r\n            } else {\r\n                return node.style.cssText;\r\n            }\r\n        }\r\n        return;\r\n    };\r\n\r\n    /**\r\n     * Add/remove a class from an element based on the value of toggle.\r\n     * @param {Node|string} element - Element to modify, or selector to get element.\r\n     * @param {string} className - Name of class to add/remove.\r\n     * @param {bool|undefined} toggle - If true add class, if false remove class, if null toggle based on current status.\r\n     * @returns {undefined}\r\n     */\r\n    var toggleClass = function(element, className, toggle) {\r\n        var node = get(element);\r\n        if (isNull(toggle)) {\r\n            toggle = !hasClass(node, className);\r\n        }\r\n        toggle ? addClass(node, className) : removeClass(node, className);\r\n        return;\r\n    };\r\n\r\n    /**\r\n     * Change the property names of an object or array to pascal case.\r\n     * @param {Object|Obj[]} obj - Object to change properties of.\r\n     * @returns {Object} New object with all pascal case property names.\r\n     */\r\n    var toPascalKeys = function(obj) {\r\n        if (isNull(obj)) {\r\n            return null;\r\n        }\r\n        if (isArray(obj)) {\r\n            return obj.map(function(x) { return _toPascalKeys(x); });\r\n        }\r\n        return _toPascalKeys(obj);\r\n    };\r\n\r\n    /**\r\n     * Change the property names of an object to pascal case.\r\n     * @param {Object} obj - Object to change properties of.\r\n     * @returns {Object} New object with all pascal case property names.\r\n     */\r\n    var _toPascalKeys = function(obj) {\r\n        if (isNull(obj)) {\r\n            return null;\r\n        }\r\n        var key, keys = Object.keys(obj), i = keys.length, newObj = {};\r\n        while (i--) {\r\n            key = keys[i];\r\n            newObj[key.substr(0, 1).toUpperCase() + key.substr(1)] = obj[key];\r\n        }\r\n        return newObj;\r\n    };\r\n\r\n    /**\r\n     * Change the property names of an object to lowercase.\r\n     * @param {Object} obj - Object to change properties of.\r\n     * @returns {Object} New object with all lowercase property names.\r\n     */\r\n    var _toLowerKeys = function(obj) {\r\n        if (isNull(obj)) {\r\n            return {};\r\n        }\r\n        var key, keys = Object.keys(obj), i = keys.length, newObj = {};\r\n        while (i--) {\r\n            key = keys[i];\r\n            newObj[key.toLowerCase()] = obj[key];\r\n        }\r\n        return newObj;\r\n    };\r\n\r\n    /**\r\n     * Convert a string of CSS settings into an object.\r\n     * @param {string} cssText - CSS list.\r\n     * @returns {Object} Object with styleName:value.\r\n     */\r\n    var _parseCss = function(cssText) {\r\n        var regex = /([\\w-]*)\\s*:\\s*([^;]*)/g;\r\n        var match, properties = {};\r\n        while ((match = regex.exec(cssText))) {\r\n            properties[match[1].toLowerCase()] = match[2];\r\n        }\r\n        return properties;\r\n    };\r\n\r\n    /**\r\n     * Convert an object to a string of CSS settings.\r\n     * @param {Object} obj - Object with styleName:value.\r\n     * @returns {string} CSS list.\r\n     */\r\n    var _toCSS = function(obj) {\r\n        if (isNull(obj)) {\r\n            return '';\r\n        }\r\n        var key, keys = Object.keys(obj), i = keys.length, css = '';\r\n        while (i--) {\r\n            key = keys[i];\r\n            if (!isNull(obj[key])) {\r\n                css += key + ': ' + obj[key] + '; ';\r\n            }\r\n        }\r\n        return css;\r\n    };\r\n\r\n    root.$ = {\r\n        addClass: addClass,\r\n        clone: clone,\r\n        closest: closest,\r\n        coalesce: coalesce,\r\n        createNode: createNode,\r\n        debounce: debounce,\r\n        destroy: destroy,\r\n        disableIf: disableIf,\r\n        dispatch: dispatch,\r\n        equals: equals,\r\n        extend: extend,\r\n        get: get,\r\n        getAll: getAll,\r\n        findByKey: findByKey,\r\n        forEach: forEach,\r\n        hasClass: hasClass,\r\n        hasPositiveValue: hasPositiveValue,\r\n        hasValue: hasValue,\r\n        hide: hide,\r\n        isArray: isArray,\r\n        isDate: isDate,\r\n        isEvent: isEvent,\r\n        isFunction: isFunction,\r\n        isNode: isNode,\r\n        isNull: isNull,\r\n        isNumber: isNumber,\r\n        isObject: isObject,\r\n        isString: isString,\r\n        isUndefined: isUndefined,\r\n        isVisible: isVisible,\r\n        map: map,\r\n        matches: matches,\r\n        noop: noop,\r\n        off: off,\r\n        on: on,\r\n        onChange: onChange,\r\n        ready: ready,\r\n        removeClass: removeClass,\r\n        setText: setText,\r\n        show: show,\r\n        style: style,\r\n        toggleClass: toggleClass,\r\n        toPascalKeys: toPascalKeys\r\n    };\r\n}(this));\r\n","/*!\r\n * Alertify library\r\n * https://github.com/alertifyjs/alertify.js\r\n */\r\n(function(root, $) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Hide an element using a transition if available.\r\n     * @param {Node} el - Element to hide.\r\n     */\r\n    var _hideElement = function(el) {\r\n        if (!el) {\r\n            return;\r\n        }\r\n\r\n        $.removeClass(el, 'show');\r\n        $.hide(el);\r\n\r\n        if (el.parentNode) {\r\n            var removeThis = function() {\r\n                el && el.parentNode && el.parentNode.removeChild(el);\r\n            };\r\n            $.on(el, 'transitionend', removeThis);\r\n            // Fallback for no transitions.\r\n            setTimeout(removeThis, 500);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Alertify private object.\r\n     * @type {Object}\r\n     */\r\n    var _alertify = {\r\n        parent: document.body,\r\n        defaultOkLabel: 'Okay',\r\n        okLabel: 'Okay',\r\n        defaultCancelLabel: 'Cancel',\r\n        cancelLabel: 'Cancel',\r\n        maxLogItems: 4,\r\n        promptValue: '',\r\n        promptPlaceholder: '',\r\n        closeLogOnClick: true,\r\n        delay: 5000,\r\n        logContainerClass: 'alertify-logs bottom left',\r\n        dialogs: {\r\n            buttons: {\r\n                holder: '<nav>{{buttons}}</nav>',\r\n                ok: '<button class=\"ok btn btn-primary\" tabindex=\"1\">{{ok}}</button>',\r\n                cancel: '<button class=\"cancel btn btn-warning\" tabindex=\"2\">{{cancel}}</button>'\r\n            },\r\n            input: '<div class=\"m-2\"><input type=\"text\" class=\"form-input\" required autofocus></div>',\r\n            message: '<p class=\"msg\">{{message}}</p>',\r\n            log: '<div class=\"{{class}}\">{{message}}</div>'\r\n        },\r\n\r\n        /**\r\n         * Build the proper message box.\r\n         * @param {Object} item - Current object in the queue.\r\n         * @return {string} An HTML string of the message box.\r\n         */\r\n        build: function(item) {\r\n            var btnTxt = this.dialogs.buttons.ok;\r\n            var html = '<div class=\"dialog\"><div class=\"dialog-content\">' +\r\n                this.dialogs.message.replace('{{message}}', item.message);\r\n\r\n            if (item.type === 'confirm' || item.type === 'prompt') {\r\n                btnTxt = this.dialogs.buttons.ok + this.dialogs.buttons.cancel;\r\n            }\r\n\r\n            if (item.type === 'prompt') {\r\n                html += this.dialogs.input;\r\n            }\r\n\r\n            html = (html + this.dialogs.buttons.holder + '</div></div>')\r\n                .replace('{{buttons}}', btnTxt)\r\n                .replace('{{ok}}', this.okLabel)\r\n                .replace('{{cancel}}', this.cancelLabel);\r\n\r\n            return html;\r\n        },\r\n\r\n        /**\r\n         * Close the log messages.\r\n         * @param {Object} elem - HTML Element of log message to close.\r\n         * @param {number} wait - [optional] Time (in ms) to wait before automatically hiding the message, if 0 never hide.\r\n         */\r\n        close: function(elem, wait) {\r\n            if (this.closeLogOnClick) {\r\n                $.on(elem, 'click', _hideElement.bind(null, elem));\r\n            }\r\n\r\n            wait = !isNaN(+wait) ? +wait : this.delay;\r\n            if (wait < 0) {\r\n                _hideElement(elem);\r\n            } else if (wait > 0) {\r\n                setTimeout(_hideElement.bind(null, elem), wait);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Create a dialog box.\r\n         * @param {string}   message - The message passed from the callee.\r\n         * @param {string}   type - Type of dialog to create.\r\n         * @param {Function} onOkay - [Optional] Callback function when clicked okay.\r\n         * @param {Function} onCancel - [Optional] Callback function when cancelled.\r\n         * @return {Object} Promise for the dialog.\r\n         */\r\n        dialog: function(message, type, onOkay, onCancel) {\r\n            return this.setup({\r\n                type: type,\r\n                message: message,\r\n                onOkay: onOkay,\r\n                onCancel: onCancel\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Show a new log message box.\r\n         * @param {string} message - The message passed from the callee.\r\n         * @param {string} type - [Optional] Optional type of log message.\r\n         * @param {number} click - [Optional] Click event handler callback.\r\n         */\r\n        log: function(message, type, click) {\r\n            var existing = $.getAll('.alertify-logs > div');\r\n            if (existing) {\r\n                var diff = existing.length - this.maxLogItems;\r\n                if (diff >= 0) {\r\n                    for (var i = 0, _i = diff + 1; i < _i; i++) {\r\n                        this.close(existing[i], -1);\r\n                    }\r\n                }\r\n            }\r\n            this.notify(message, type, click);\r\n        },\r\n\r\n        /**\r\n         * Create the log container element.\r\n         * @return {Node} HTML node to contain the log.\r\n         */\r\n        setupLogContainer: function() {\r\n            var elLog = $.get('.alertify-logs');\r\n            var className = this.logContainerClass;\r\n            if (!elLog) {\r\n                elLog = document.createElement('div');\r\n                elLog.className = className;\r\n                this.parent.appendChild(elLog);\r\n            }\r\n\r\n            // Make sure it's positioned properly.\r\n            if (elLog.className !== className) {\r\n                elLog.className = className;\r\n            }\r\n\r\n            return elLog;\r\n        },\r\n\r\n        /**\r\n         * Add new log message.\r\n         * If a type is passed, a class name \"{type}\" will get added.\r\n         * This allows for custom look and feel for various types of notifications.\r\n         * @param {string} message - The message passed from the callee.\r\n         * @param {string} type - [Optional] Type of log message.\r\n         * @param {number} click - [Optional] Click event handler callback.\r\n         */\r\n        notify: function(message, type, click) {\r\n            var elLog = this.setupLogContainer();\r\n            var log = document.createElement('div');\r\n            log.className = (type || 'default');\r\n            log.innerHTML = message;\r\n\r\n            // Add the click handler, if specified.\r\n            if ($.isFunction(click)) {\r\n                log.addEventListener('click', click);\r\n            }\r\n\r\n            elLog.appendChild(log);\r\n            setTimeout(function() {\r\n                $.addClass(log, 'show');\r\n            }, 10);\r\n\r\n            this.close(log, type === 'error' ? 0 : this.delay);\r\n        },\r\n\r\n        /**\r\n         * Initiate all the required pieces for the dialog box.\r\n         * @param {Object} item - Options for creating the dialog.\r\n         * @returns {Promise} Promise to create the dialog.\r\n         */\r\n        setup: function(item) {\r\n            var el = document.createElement('div');\r\n            el.className = 'alertify d-none';\r\n            el.innerHTML = this.build(item);\r\n\r\n            var btnOK = $.get('.ok', el);\r\n            var btnCancel = $.get('.cancel', el);\r\n            var input = $.get('input', el);\r\n            var label = $.get('label', el);\r\n            var self = this;\r\n\r\n            // Set default value/placeholder of input\r\n            if (input) {\r\n                if ($.isString(this.promptPlaceholder)) {\r\n                    // Set the label, if available, for MDL, etc.\r\n                    if (label) {\r\n                        label.textContent = this.promptPlaceholder;\r\n                    } else {\r\n                        input.placeholder = this.promptPlaceholder;\r\n                    }\r\n                }\r\n                if ($.isString(this.promptValue)) {\r\n                    input.value = this.promptValue;\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Create event handlers for a dialog.\r\n             * @param {Object} resolve - Promise resolve function.\r\n             */\r\n            function setupHandlers(resolve) {\r\n                if (!$.isFunction(resolve)) {\r\n                    // promises are not available so resolve is a no-op\r\n                    resolve = function() { };\r\n                }\r\n\r\n                if (btnOK) {\r\n                    $.on(btnOK, 'click', function(ev) {\r\n                        if ($.isFunction(item.onOkay)) {\r\n                            if (input) {\r\n                                item.onOkay(input.value, ev);\r\n                            } else {\r\n                                item.onOkay(ev);\r\n                            }\r\n                        }\r\n                        if (input) {\r\n                            resolve({ buttonClicked: 'ok', inputValue: input.value, event: ev });\r\n                        } else {\r\n                            resolve({ buttonClicked: 'ok', event: ev });\r\n                        }\r\n                        _hideElement(el);\r\n                        self.reset();\r\n                    });\r\n                }\r\n\r\n                if (btnCancel) {\r\n                    $.on(btnCancel, 'click', function(ev) {\r\n                        if ($.isFunction(item.onCancel)) {\r\n                            item.onCancel(ev);\r\n                        }\r\n                        resolve({ buttonClicked: 'cancel', event: ev });\r\n                        _hideElement(el);\r\n                        self.reset();\r\n                    });\r\n                }\r\n\r\n                if (input) {\r\n                    $.on(input, 'keydown', function(ev) {\r\n                        if (btnOK && ev.which === 13) {\r\n                            btnOK.click();\r\n                        }\r\n                    });\r\n                }\r\n\r\n                $.on(el, 'keydown', function(ev) {\r\n                    if (ev.which === 27) {\r\n                        if (btnCancel) {\r\n                            btnCancel.click();\r\n                        } else if (btnOK) {\r\n                            btnOK.click();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            var promise = new Promise(setupHandlers);\r\n\r\n            this.parent.appendChild(el);\r\n            setTimeout(function() {\r\n                $.show(el);\r\n                if (input && item.type && item.type === 'prompt') {\r\n                    input.select();\r\n                    input.focus();\r\n                } else {\r\n                    if (btnOK) {\r\n                        btnOK.focus();\r\n                    }\r\n                }\r\n            }, 100);\r\n\r\n            return promise;\r\n        },\r\n\r\n        /**\r\n         * Set the label for the ok button.\r\n         * @param {string} label - Button text.\r\n         * @return {Object} Reference to self.\r\n         */\r\n        okBtn: function(label) {\r\n            this.okLabel = label;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Set the label for the cancel button.\r\n         * @param {string} label - Button text.\r\n         * @return {Object} Reference to self.\r\n         */\r\n        cancelBtn: function(label) {\r\n            this.cancelLabel = label;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Reset the dialog to default settings.\r\n         */\r\n        reset: function() {\r\n            this.parent = document.body;\r\n            this.okBtn(this.defaultOkLabel);\r\n            this.cancelBtn(this.defaultCancelLabel);\r\n            this.promptValue = '';\r\n            this.promptPlaceholder = '';\r\n            this.logTemplateMethod = null;\r\n        }\r\n    };\r\n\r\n    var Alertify = {\r\n        parent: function(elem) {\r\n            _alertify.parent = elem;\r\n        },\r\n        alert: function(message, onOkay, onCancel) {\r\n            return _alertify.dialog(message, 'alert', onOkay, onCancel) || this;\r\n        },\r\n        confirm: function(message, onOkay, onCancel) {\r\n            return _alertify.dialog(message, 'confirm', onOkay, onCancel) || this;\r\n        },\r\n        prompt: function(message, onOkay, onCancel) {\r\n            return _alertify.dialog(message, 'prompt', onOkay, onCancel) || this;\r\n        },\r\n        log: function(message, click) {\r\n            _alertify.log(message, 'default', click);\r\n            return this;\r\n        },\r\n        success: function(message, click) {\r\n            _alertify.log(message, 'success', click);\r\n            return this;\r\n        },\r\n        error: function(message, click) {\r\n            _alertify.log(message, 'error', click);\r\n            return this;\r\n        },\r\n        cancelBtn: function(label) {\r\n            _alertify.cancelBtn(label);\r\n            return this;\r\n        },\r\n        okBtn: function(label) {\r\n            _alertify.okBtn(label);\r\n            return this;\r\n        },\r\n        placeholder: function(str) {\r\n            _alertify.promptPlaceholder = str;\r\n            return this;\r\n        },\r\n        defaultValue: function(str) {\r\n            _alertify.promptValue = str;\r\n            return this;\r\n        },\r\n        dismissAll: function() {\r\n            _alertify.setupLogContainer().innerHTML = '';\r\n            return this;\r\n        },\r\n        updateResources: function(okay, cancel) {\r\n            _alertify.defaultOkLabel = okay;\r\n            _alertify.okLabel = okay;\r\n            _alertify.defaultCancelLabel = cancel;\r\n            _alertify.cancelLabel = cancel;\r\n        }\r\n    };\r\n\r\n    root.Alertify = Alertify;\r\n}(this, this.$));\r\n","/*!\r\n * PJAX library.\r\n */\r\n(function(root, $, Alertify) {\r\n    'use strict';\r\n\r\n    var pjax = {\r\n        firstRun: true,\r\n        ignoreFileTypes: ['pdf', 'doc', 'docx', 'zip', 'rar', '7z', 'gif', 'jpeg', 'jpg', 'png'],\r\n        excludeClass: 'pjax-no-follow',\r\n        container: '#contentWrapper',\r\n        errorMessageName: null\r\n    };\r\n\r\n    /**\r\n     * Updates DOM with new content.\r\n     * @param {string} html - DOM fragment of loaded container.\r\n     * @param {Object} options - Configuration options.\r\n     * return {Object} Updated options.\r\n     */\r\n    pjax.updateContent = function(html, options) {\r\n        var newNode = $.createNode(html);\r\n        var title = $.getAll('[data-pjax-title]', newNode, true);\r\n        if (title.length) {\r\n            options.title = title[0].getAttribute('data-pjax-title');\r\n        }\r\n        var url = $.getAll('[data-pjax-url]', newNode, true);\r\n        if (url.length) {\r\n            options.url = url[0].getAttribute('data-pjax-url');\r\n        }\r\n        var container = $.getAll('[data-pjax-container]', newNode, true);\r\n        if (container.length) {\r\n            options.container = container[0].getAttribute('data-pjax-container');\r\n        }\r\n        var method = $.getAll('[data-pjax-method]', newNode, true);\r\n        if (method.length) {\r\n            options.method = method[0].getAttribute('data-pjax-method');\r\n        }\r\n\r\n        // Get container node\r\n        var node = $.get(options.container || pjax.container);\r\n        // Update the DOM with the new content\r\n        node.innerHTML = html;\r\n\r\n        return options;\r\n    };\r\n\r\n    /**\r\n     * Fire load events after loading content.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    pjax.onLoad = function(options) {\r\n        var node = $.get(options.container);\r\n        $.content.load(node);\r\n\r\n        if (!$.isNull(options.title)) {\r\n            // Set page title\r\n            document.title = options.title;\r\n        }\r\n        if (options.returnToTop) {\r\n            // Scroll to top of page\r\n            window.scrollTo(0, 0);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Fire unload events before unloading content.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    pjax.onUnload = function(options) {\r\n        var node = $.get(options.container);\r\n        $.content.unload(node);\r\n    };\r\n\r\n    /**\r\n     * Update browser history.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    pjax.updateHistory = function(options) {\r\n        if (!options.history) {\r\n            return;\r\n        }\r\n        // If this is the first time pjax has run, create a state object for the current page.\r\n        if (pjax.firstRun) {\r\n            window.history.replaceState({ url: document.location.href, container: options.container, title: document.title, method: options.method }, document.title);\r\n            pjax.firstRun = false;\r\n        }\r\n        // Update browser history\r\n        window.history.pushState({ url: options.url, container: options.container, title: options.title, method: options.method }, options.title, options.url);\r\n    };\r\n\r\n    /**\r\n     * Handle requests to load content.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    pjax.handle = function(options) {\r\n        pjax.request(options, function(html) {\r\n            if (html === false) {\r\n                $.content.done();\r\n                return;\r\n            }\r\n\r\n            pjax.onUnload(options);\r\n            options = pjax.updateContent(html, options);\r\n            pjax.updateHistory(options);\r\n            pjax.onLoad(options);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Performs AJAX request to page and returns the result..\r\n     * @param {Object} options - Configuration options.\r\n     * @param {Function} callback - Method to call when a page is loaded.\r\n     */\r\n    pjax.request = function(options, callback) {\r\n        $.content.loading();\r\n\r\n        $.ajax({\r\n            method: options.method || 'GET',\r\n            url: options.url + ((!/[?&]/.test(options.url)) ? '?_pjax' : '&_pjax'),\r\n            headers: { 'X-PJAX': 'true' }\r\n        }, function(response) {\r\n            callback(response);\r\n            $.content.done();\r\n        }, function() {\r\n            callback(false);\r\n            $.content.done();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Performs AJAX form submission request to page and returns the result.\r\n     * @param form. Form to submit.\r\n     * @param callback. Method to call when a page is loaded.\r\n     */\r\n    pjax.submit = function(form, callback) {\r\n        $.content.loading();\r\n\r\n        $.ajax({\r\n            method: form.hasAttribute('data-method') ? form.getAttribute('data-method') : 'POST',\r\n            url: form.getAttribute('action'),\r\n            headers: { 'X-PJAX': 'true' },\r\n            body: new FormData(form)\r\n        }, function(response) {\r\n            callback(response);\r\n            $.content.done();\r\n        }, function() {\r\n            callback(false);\r\n            $.content.done();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Validate and correct options object.\r\n     * @param {Object} options - Configuration options.\r\n     * @return {Object|bool} Valid options object or false.\r\n     */\r\n    pjax.parseOptions = function(options, target) {\r\n        options = options || {};\r\n        if ($.isNull(options.url)) {\r\n            return false;\r\n        }\r\n\r\n        if (target) {\r\n            // If data-method is specified, use as request method\r\n            if (target.getAttribute('data-method')) {\r\n                options.method = target.getAttribute('data-method');\r\n            }\r\n\r\n            // If data-pjax is specified, use as container\r\n            if (target.getAttribute('data-pjax')) {\r\n                options.container = target.getAttribute('data-pjax');\r\n            }\r\n\r\n            // If data-pjax-title is specified, use as title\r\n            if (target.getAttribute('data-pjax-title')) {\r\n                options.title = target.getAttribute('data-pjax-title');\r\n            }\r\n        }\r\n\r\n        // Use default options if not defined\r\n        options = $.extend({\r\n            method: 'GET',\r\n            container: pjax.container,\r\n            history: true,\r\n            returnToTop: true\r\n        }, options);\r\n\r\n        // Ensure history is a boolean.\r\n        options.history = (options.history === false) ? false : true;\r\n\r\n        // Return valid options\r\n        return options;\r\n    };\r\n\r\n    /**\r\n     * Configure pjax.\r\n     */\r\n    pjax.init = function() {\r\n        var body = $.get('body');\r\n        if (body.hasAttribute('data-error-name')) {\r\n            pjax.errorMessageName = body.getAttribute('data-error-name');\r\n        }\r\n        $.content.load(body);\r\n    };\r\n\r\n    /**\r\n     * Directly invoke a pjax page load.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    pjax.invoke = function(options) {\r\n        // Process options\r\n        options = pjax.parseOptions(options);\r\n        // If everything went okay, activate pjax.\r\n        if (options !== false) {\r\n            pjax.handle(options);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * popstate listener\r\n     * Listens for back/forward button events and updates page accordingly.\r\n     */\r\n    $.on(window, 'popstate', function(e) {\r\n        if (e.state !== null) {\r\n            var opt = $.coalesce({\r\n                url: e.state.url,\r\n                container: e.state.container,\r\n                title: e.state.title,\r\n                method: e.state.method,\r\n                history: false\r\n            });\r\n\r\n            // Convert state data to PJAX options\r\n            var options = pjax.parseOptions(opt);\r\n            // If something went wrong, return.\r\n            if (options === false) return;\r\n            // If there is a state object, handle it as a page load.\r\n            pjax.handle(options);\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Link click listener.\r\n     */\r\n    $.on(document, 'click', function(event) {\r\n        var target = event.target || event.srcElement;\r\n        if (target.nodeName !== 'A') {\r\n            target = $.closest('a', target);\r\n        }\r\n        if (!(target && target.nodeName === 'A' && !(pjax.excludeClass && $.hasClass(target, pjax.excludeClass)))) {\r\n            // Ignore clicks unless its a link that doesn't have the exclude class\r\n            return;\r\n        }\r\n        if (target.protocol !== document.location.protocol || target.host !== document.location.host) {\r\n            // Ignore external links\r\n            return;\r\n        }\r\n        if (target.pathname === location.pathname && target.hash.length > 0) {\r\n            // Ignore anchors on the same page\r\n            return;\r\n        }\r\n        if (pjax.ignoreFileTypes.indexOf(target.pathname.split('.').pop().toLowerCase()) !== -1) {\r\n            // Skip link if file type is within ignored types array\r\n            return;\r\n        }\r\n        if (event.which > 1 || event.metaKey || event.ctrlKey) {\r\n            // Allow middle click (pages in new windows)\r\n            return;\r\n        }\r\n\r\n        // Don't fire normal event\r\n        event.preventDefault();\r\n\r\n        var options = { url: target.href };\r\n        if (document.location.href === options.url && !target.hasAttribute('data-reload')) {\r\n            // Take no action if we are already on said page and reload isn't allowed\r\n            return;\r\n        }\r\n\r\n        // Check options are valid.\r\n        options = pjax.parseOptions(options, target);\r\n        if (options === false) {\r\n            return;\r\n        }\r\n\r\n        // Check for confirmation or form changes before loading content.\r\n        if (target.getAttribute('data-confirm')) {\r\n            Alertify.dismissAll();\r\n            Alertify.confirm(target.getAttribute('data-confirm'), pjax.handle.bind(null, options), function(e) { e.target.focus(); });\r\n        } else if (target.getAttribute('data-prompt')) {\r\n            // @TODO haven't tested this yet\r\n            options.history = false;\r\n            Alertify.dismissAll();\r\n            Alertify.prompt(target.getAttribute('data-prompt'), function(promptValue) {\r\n                if (!$.hasValue(promptValue)) {\r\n                    Alertify.error(pjax.errorMessageName);\r\n                    return false;\r\n                }\r\n                options.url += ((!/[?&]/.test(options.url)) ? '?prompt' : '&prompt') + '=' + encodeURIComponent(promptValue);\r\n                pjax.invoke(options);\r\n            });\r\n        } else {\r\n            var form = $.get('form.has-changes');\r\n            if (form) {\r\n                Alertify.confirm(form.getAttribute('data-confirm'), pjax.handle.bind(null, options), function(e) { e.target.focus(); });\r\n            } else {\r\n                pjax.handle(options);\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Form change listener.\r\n     */\r\n    $.on(document, 'change', function(event) {\r\n        var target = event.target || event.srcElement;\r\n        if (['INPUT', 'SELECT', 'TEXTAREA'].indexOf(target.nodeName) === -1) {\r\n            // Ignore change unless its form input\r\n            return;\r\n        }\r\n\r\n        var form = $.closest('FORM', target);\r\n        if (form) {\r\n            $.addClass(form, 'has-changes');\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Form submit listener.\r\n     */\r\n    $.on(document, 'submit', function(event) {\r\n        var target = event.target || event.srcElement;\r\n        if (target.nodeName !== 'FORM') {\r\n            target = $.closest('FORM', target);\r\n        }\r\n        if (!(target && target.nodeName === 'FORM' && !(pjax.excludeClass && $.hasClass(target, pjax.excludeClass)))) {\r\n            // Ignore submit unless its a form that doesn't have the exclude class\r\n            return;\r\n        }\r\n\r\n        var actionNode = document.createElement('a');\r\n        actionNode.href = target.action;\r\n        if (actionNode.protocol !== document.location.protocol || actionNode.host !== document.location.host) {\r\n            return;\r\n        }\r\n\r\n        var options = { url: target.action };\r\n        // Check options are valid.\r\n        options = pjax.parseOptions(options, target);\r\n        if (options === false) return;\r\n\r\n        // Don't fire normal event\r\n        event.preventDefault();\r\n\r\n        // handle the submission\r\n        pjax.submit(target, function(html) {\r\n            if (html === false) {\r\n                return;\r\n            }\r\n\r\n            pjax.onUnload(options);\r\n            options = pjax.updateContent(html, options);\r\n            pjax.updateHistory(options);\r\n            pjax.onLoad(options);\r\n        });\r\n    });\r\n\r\n    root.pjax = pjax;\r\n})(this, this.$, this.Alertify);\r\n","/*!\r\n * Custom events.\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    var events = {\r\n        dashboardLoad: new CustomEvent('dashboardLoad'),\r\n        dashboardUnload: new CustomEvent('dashboardUnload')\r\n    };\r\n\r\n    $.events = events;\r\n}(this.$));\r\n\r\n/*!\r\n * Fetch wrapper and error logging.\r\n */\r\n(function($, Alertify) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Wrap fetch with success/error handling.\r\n     * @param {Object} options - Options to use for the request.\r\n     * @param {Function} onSuccess - Function to handle success result.\r\n     * @param {Function} onError - Function to handle error result.\r\n     */\r\n    var _ajax = function(options, onSuccess, onError) {\r\n        options = options || {};\r\n        options.headers = $.extend({\r\n            'X-Requested-With': 'XMLHttpRequest'\r\n        }, options.headers);\r\n        if (options.token) {\r\n            options.headers['X-XSRF-TOKEN'] = options.token;\r\n            delete options.token;\r\n        }\r\n\r\n        // keep browser from caching requests by tacking milliseconds to end of url\r\n        var url = options.url + (options.url.indexOf('?') > -1 ? '&' : '?') + '_t=' + Date.now();\r\n        delete options.url;\r\n\r\n        if (options.data) {\r\n            options.headers['Content-Type'] = 'application/json';\r\n            if (options.method === 'GET') {\r\n                url += '&' + Object.keys(options.data).map(function(x) {\r\n                    return encodeURIComponent(x) + '=' + encodeURIComponent(options.data[x]);\r\n                }).join('&');\r\n            } else {\r\n                options.body = JSON.stringify(options.data);\r\n            }\r\n            delete options.data;\r\n        }\r\n        options.credentials = 'same-origin';\r\n\r\n        fetch(url, options)\r\n            .then(_checkStatus)\r\n            .then(_parse)\r\n            .then(function(data) {\r\n                if (data.reload) {\r\n                    location.reload(true);\r\n                    return;\r\n                }\r\n                if (data.error) {\r\n                    if ($.isFunction(onError)) {\r\n                        onError(data);\r\n                    }\r\n                    Alertify.error(data.error);\r\n                } else {\r\n                    if ($.isFunction(onSuccess)) {\r\n                        onSuccess(data);\r\n                    }\r\n                    if (data.message) {\r\n                        Alertify.success(data.message);\r\n                    }\r\n                }\r\n            }).catch(function(data) {\r\n                if (url.indexOf('LogJavascriptError') > -1) {\r\n                    return;\r\n                }\r\n\r\n                if (data.response && data.response.status && [400, 401, 402, 403].indexOf(data.response.status) > -1) {\r\n                    location.reload(true);\r\n                } else {\r\n                    Alertify.error((data.response && data.response.error) || 'An unhandled error occurred.');\r\n                }\r\n                if ($.isFunction(onError)) {\r\n                    onError(data.response);\r\n                }\r\n            });\r\n    };\r\n\r\n    var _requestQueue = [];\r\n\r\n    var Request = function(options, onSuccess, onError) {\r\n        this.options = options;\r\n        this.onSuccess = onSuccess;\r\n        this.onError = onError;\r\n        this.status = 0;\r\n    };\r\n\r\n    Request.prototype = {\r\n        constructor: Request,\r\n        key: function() {\r\n            return this.options.key;\r\n        },\r\n        abort: function() {\r\n            if (this.isInProcess()) {\r\n                this.promise.reject();\r\n            }\r\n            this.dequeue();\r\n        },\r\n        execute: function() {\r\n            _ajax(this.options, this.success.bind(this), this.error.bind(this));\r\n            this.status = 1;\r\n        },\r\n        success: function(data) {\r\n            this.dequeue();\r\n            if (this.onSuccess) {\r\n                this.onSuccess(data);\r\n            }\r\n        },\r\n        error: function(data) {\r\n            this.dequeue();\r\n            if (this.onError) {\r\n                this.onError(data);\r\n            }\r\n        },\r\n        isInProcess: function() {\r\n            return this.status === 1;\r\n        },\r\n        dequeue: function() {\r\n            // remove this from the queue and start the next request\r\n            var self = this;\r\n            _requestQueue = _requestQueue.filter(function(x) { return x !== self; });\r\n            if (_requestQueue.length) {\r\n                _requestQueue[0].execute();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Queue up an ajax request. Queue prevents one user from hammering the server.\r\n     * @param {Object} options - Options to use for the ajax request.\r\n     * @param {Function} onSuccess - Function to handle success result.\r\n     * @param {Function} onError - Function to handle error result.\r\n     */\r\n    var ajax = function(options, onSuccess, onError) {\r\n        options.key = options.key || options.url;\r\n        var request = new Request(options, onSuccess, onError);\r\n\r\n        // remove requests from queue that are for this key and aren't already in process\r\n        _requestQueue = _requestQueue.filter(function(x) {\r\n            return x.key() !== options.key || x.isInProcess();\r\n        });\r\n        _requestQueue.push(request);\r\n\r\n        if (_requestQueue.length === 1) {\r\n            // nothing else in the queue, so execute now\r\n            request.execute();\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * Log JS errors to elmah.\r\n     * @param {string} msg - Error message.\r\n     * @param {string} url - Error source URL.\r\n     * @param {number} line - Line # error occurred on\r\n     * @param {number} columnNo - Column # error occurred on\r\n     * @param {string|string[]|null} stack - Stack trace.\r\n     */\r\n    var logError = function(msg, url, lineNo, columnNo, stack) {\r\n        if ($.isNull(msg)) {\r\n            return;\r\n        }\r\n\r\n        var detail = msg + ': at path \\'' + (url || document.location) + '\\'';\r\n        if (!$.isNull(lineNo)) {\r\n            detail += ' at ' + lineNo + ':' + columnNo;\r\n        }\r\n        if (!$.isNull(stack)) {\r\n            detail += '\\n    at ' + ($.isString(stack) ? stack : stack.join('\\n    at '));\r\n        }\r\n\r\n        // save error message to server\r\n        _ajax({ method: 'POST', url: '/Error/LogJavascriptError', data: { message: detail }, block: false }, null, null);\r\n    };\r\n\r\n    var _checkStatus = function(response) {\r\n        if (response.status >= 200 && response.status < 300) {\r\n            return response;\r\n        } else {\r\n            var error = new Error(response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Deserialize response from fetch.\r\n     * @param {Object} response - Response object\r\n     * @returns {Object} Result object from JSON, or object with a single 'content' property if that fails.\r\n     */\r\n    var _parse = function(response) {\r\n        try {\r\n            var contentType = response && response.headers.has('content-type') ? response.headers.get('content-type') : '';\r\n            return contentType && contentType.indexOf('application/json') > -1 ? response.json() : response.text();\r\n        } catch (ex) {\r\n            return response;\r\n        }\r\n    };\r\n\r\n    $.ajax = ajax;\r\n    $.logError = logError;\r\n}(this.$, this.Alertify));\r\n\r\n/**\r\n * Add a application wide error handler to log errors.\r\n * Outside of strict mode to prevent errors.\r\n * @param {string} msg - Error message.\r\n * @param {string} url - Error source URL.\r\n * @param {number} line - Line # error occurred on\r\n * @param {number} columnNo - Column # error occurred on\r\n * @param {Error|null} error - Error object if browser supports it\r\n */\r\nwindow.onerror = function(msg, url, lineNo, columnNo, error) {\r\n    this.$.logError(msg, url, lineNo, columnNo, error && error.stack ? error.stack : null);\r\n};\r\n\r\n/*!\r\n * Color functions.\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Convert hex string to RGB.\r\n     * @param {string} hex - Hex string.\r\n     * @returns {Object} Object with RGB properties.\r\n     */\r\n    var hex2rgb = function(hex) {\r\n        return { r: parseInt(hex.substr(1, 2), 16), g: parseInt(hex.substr(3, 2), 16), b: parseInt(hex.substr(5, 2), 16) };\r\n    };\r\n\r\n    /**\r\n     * Convert RGB to hex string.\r\n     * @param {Object} color Object with r/g/b properties.\r\n     * @returns {string} hex - Hex string.\r\n     */\r\n    var rgb2hex = function(color) {\r\n        var hex = [\r\n            (color.r * 1).toString(16),\r\n            (color.g * 1).toString(16),\r\n            (color.b * 1).toString(16)\r\n        ];\r\n        return '#' + hex.map(function(x) {\r\n            return ('00' + x.toString()).slice(-2);\r\n        }).join('').toUpperCase();\r\n    };\r\n\r\n    /**\r\n     * Converts an RGB color value to HSL. Conversion formula\r\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n     * Assumes r, g, and b are contained in the set [0, 255] and\r\n     * returns h, s, and l in the set [0, 1].\r\n     * @param {Object} rgb - Object with r, g, and b properties.\r\n     * @return {Number[]} The HSL representation.\r\n     */\r\n    var rgb2hsl = function(rgb) {\r\n        var r = rgb.r, g = rgb.g, b = rgb.b;\r\n        r /= 255, g /= 255, b /= 255;\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if (max === min) {\r\n            h = s = 0; // achromatic\r\n        } else {\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch (max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        return [h, s, l];\r\n    };\r\n\r\n    $.colors = {\r\n        hex2rgb: hex2rgb,\r\n        rgb2hex: rgb2hex,\r\n        rgb2hsl: rgb2hsl,\r\n    };\r\n})(this.$);\r\n\r\n/*!\r\n * accounting.js v0.4.2\r\n * Copyright 2014 Open Exchange Rates\r\n *\r\n * Freely distributable under the MIT license.\r\n * Portions of accounting.js are inspired or borrowed from underscore.js\r\n *\r\n * Full details and documentation:\r\n * http://openexchangerates.github.io/accounting.js/\r\n */\r\n(function($) {\r\n    var lib = {\r\n        settings: {\r\n            currency: {\r\n                symbol: '$',\t\t// default currency symbol is '$'\r\n                format: '%s%v',\t    // controls output: %s = symbol, %v = value (can be object, see docs)\r\n                decimal: '.',\t\t// decimal point separator\r\n                thousand: ',',\t\t// thousands separator\r\n                precision: 2,\t\t// decimal places\r\n                grouping: 3\t\t    // digit grouping (not implemented yet)\r\n            },\r\n            number: {\r\n                precision: 0,\t\t// default precision on numbers is 0\r\n                grouping: 3,\t\t// digit grouping (not implemented yet)\r\n                thousand: ',',\r\n                decimal: '.'\r\n            }\r\n        }\r\n    };\r\n\r\n    var tokens = {\r\n        symbol: /\\{s:(.?)\\}/i,\r\n        decimal: /\\[d:(.?)\\]/i,\r\n        thousand: /\\[t:(.?)\\]/i,\r\n        precision: /\\[p:(.?)\\]/i,\r\n        value: /\\{#+\\}/i\r\n    };\r\n\r\n    /**\r\n     * Check and normalise the value of precision (must be positive integer).\r\n     * @param {number} val - Value of precision to validate\r\n     * @returns {number} Positive integer value.\r\n     */\r\n    var checkPrecision = function(val) {\r\n        val = Math.round(Math.abs(val));\r\n        return isNaN(val) ? lib.settings.number.precision : val;\r\n    };\r\n\r\n    /**\r\n     * Parses a format string or object and returns format obj for use in rendering.\r\n     * @param {string|Object} format - Default (positive) format, or object containing `pos` (required), `neg` and `zero` values (or a function returning either a string or object)\r\n     * @returns {Object} Format object with pos, neg, and zero properties.\r\n     */\r\n    var checkCurrencyFormat = function(format) {\r\n        // Format can be a string, in which case `value` (\"%v\") must be present:\r\n        if ($.isString(format) && format.match('%v')) {\r\n            // Create and return positive, negative and zero formats:\r\n            return {\r\n                pos: format,\r\n                neg: format.replace('-', '').replace('%v', '-%v'),\r\n                zero: format\r\n            };\r\n        }\r\n        if (!format || !format.pos || !format.pos.match('%v')) {\r\n            // If no format, or object is missing valid positive value, use default.\r\n            // If default is a string, casts it to an object for faster checking next time.\r\n            var x = lib.settings.currency.format;\r\n            if ($.isString(x)) {\r\n                lib.settings.currency.format = x = { pos: x, neg: x.replace('%v', '-%v'), zero: x };\r\n            }\r\n            return x;\r\n        }\r\n        return format;\r\n    };\r\n\r\n    /**\r\n     * Takes a format string and parses it into an object.\r\n     * @param {string} format - Format string`\r\n     * @returns {Object} Object with format settings.\r\n     */\r\n    var parseFormat = function(format) {\r\n        if (!$.isString(format)) {\r\n            return format || {};\r\n        }\r\n\r\n        var res = {}, x;\r\n        var newFormat = format;\r\n        if ((x = tokens.symbol.exec(newFormat)) !== null && x.length > 1) {\r\n            res.symbol = x[1];\r\n            newFormat = newFormat.replace(x[0], '%s');\r\n        }\r\n        if ((x = tokens.decimal.exec(newFormat)) !== null && x.length > 1) {\r\n            res.decimal = x[1];\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.thousand.exec(newFormat)) !== null && x.length > 1) {\r\n            res.thousand = x[1];\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.precision.exec(newFormat)) !== null && x.length > 1) {\r\n            res.precision = x[1] * 1;\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.value.exec(newFormat)) !== null) {\r\n            res.format = newFormat.replace(x[0], '%v');\r\n        } else {\r\n            res.format = newFormat + ' %v';\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Takes a string/array of strings, removes all formatting/cruft and returns the raw float value.\r\n     * @param {string|number} value - Value to remove formatting from.\r\n     * @returns {number} Number with no formatting.\r\n     */\r\n    var unformat = function(value) {\r\n        value = value || 0;\r\n        if ($.isNumber(value)) {\r\n            return value;\r\n        }\r\n\r\n        // Build regex to strip out everything except digits, decimal point and minus sign:\r\n        var regex = new RegExp('[^0-9-' + lib.settings.number.decimal + ']', ['g']);\r\n        var unformatted = parseFloat(('' + value)\r\n            .replace(/\\((.*)\\)/, '-$1') // replace bracketed values with negatives\r\n            .replace(regex, '')         // strip out any cruft\r\n            .replace(lib.settings.number.decimal, '.')      // make sure decimal point is standard\r\n        );\r\n\r\n        // This will fail silently which may cause trouble, let's wait and see:\r\n        return !isNaN(unformatted) ? unformatted : 0;\r\n    };\r\n\r\n    /**\r\n     * Implementation of toFixed() that treats floats more like decimals.\r\n     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === \"0.61\") that present problems for accounting- and finance-related software.\r\n     * @param {number|string} value - Number to convert\r\n     * @param {number} precision - Number of digits after the decimal.\r\n     * @returns {number} Formatted value.\r\n     */\r\n    var toFixed = function(value, precision) {\r\n        precision = checkPrecision(precision);\r\n        var power = Math.pow(10, precision);\r\n        // Multiply up by precision, round accurately, then divide and use native toFixed():\r\n        return (Math.round(unformat(value) * power) / power).toFixed(precision);\r\n    };\r\n\r\n    /**\r\n     * Format a number, with comma-separated thousands and custom precision/decimal places.\r\n     * @param {number} number - Number to format.\r\n     * @param {string} format - Tokenized string format.\r\n     * @returns {string} Formatted number.\r\n     */\r\n    var formatNumber = function(number, format) {\r\n        number = unformat(number);\r\n        var opts = $.extend({}, lib.settings.number, parseFormat(format));\r\n        var usePrecision = checkPrecision(opts.precision);\r\n        var base = parseInt(toFixed(Math.abs(number || 0), usePrecision), 10) + '';\r\n        var mod = base.length > 3 ? base.length % 3 : 0;\r\n        return (number < 0 ? '-' : '') + (mod ? base.substr(0, mod) + opts.thousand : '') + base.substr(mod).replace(/(\\d{3})(?=\\d)/g, '$1' + opts.thousand) +\r\n            (usePrecision ? opts.decimal + toFixed(Math.abs(number), usePrecision).split('.')[1] : '');\r\n    };\r\n\r\n    /**\r\n     * Format a number as currency, with comma-separated thousands and custom precision/decimal places.\r\n     * @param {number} number - Number to format.\r\n     * @param {string} format - Tokenized string format.\r\n     * @returns {string} Formatted currency.\r\n     */\r\n    var formatMoney = function(number, format) {\r\n        number = unformat(number);\r\n        var opts = $.extend({}, lib.settings.currency, parseFormat(format));\r\n        var formats = checkCurrencyFormat(opts.format);\r\n        return (number > 0 ? formats.pos : number < 0 ? formats.neg : formats.zero)\r\n            .replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(number), format));\r\n    };\r\n\r\n    $.accounting = {\r\n        formatMoney: formatMoney,\r\n        formatNumber: formatNumber,\r\n        parseFormat: parseFormat,\r\n        unformat: unformat\r\n    };\r\n}(this.$));\r\n","// doT.js\r\n// 2011-2014, Laura Doktorova, https://github.com/olado/doT\r\n// Licensed under the MIT license.\r\n/* eslint-disable */\r\n(function(root) {\r\n    \"use strict\";\r\n\r\n    var doT = {\r\n        name: \"doT\",\r\n        version: \"1.1.1\",\r\n        templateSettings: {\r\n            evaluate: /\\{\\{([\\s\\S]+?(\\}?)+)\\}\\}/g,\r\n            interpolate: /\\{\\{=([\\s\\S]+?)\\}\\}/g,\r\n            encode: /\\{\\{!([\\s\\S]+?)\\}\\}/g,\r\n            use: /\\{\\{#([\\s\\S]+?)\\}\\}/g,\r\n            useParams: /(^|[^\\w$])def(?:\\.|\\[[\\'\\\"])([\\w$\\.]+)(?:[\\'\\\"]\\])?\\s*\\:\\s*([\\w$\\.]+|\\\"[^\\\"]+\\\"|\\'[^\\']+\\'|\\{[^\\}]+\\})/g,\r\n            define: /\\{\\{##\\s*([\\w\\.$]+)\\s*(\\:|=)([\\s\\S]+?)#\\}\\}/g,\r\n            defineParams: /^\\s*([\\w$]+):([\\s\\S]+)/,\r\n            conditional: /\\{\\{\\?(\\?)?\\s*([\\s\\S]*?)\\s*\\}\\}/g,\r\n            iterate: /\\{\\{~\\s*(?:\\}\\}|([\\s\\S]+?)\\s*\\:\\s*([\\w$]+)\\s*(?:\\:\\s*([\\w$]+))?\\s*\\}\\})/g,\r\n            varname: \"x\",\r\n            strip: true,\r\n            append: true,\r\n            selfcontained: false,\r\n            doNotSkipEncoded: false\r\n        },\r\n        template: undefined, //fn, compile template\r\n        compile: undefined, //fn, for express\r\n        log: true\r\n    }, _globals;\r\n\r\n    doT.encodeHTMLSource = function(doNotSkipEncoded) {\r\n        var encodeHTMLRules = { \"&\": \"&#38;\", \"<\": \"&#60;\", \">\": \"&#62;\", '\"': \"&#34;\", \"'\": \"&#39;\", \"/\": \"&#47;\" },\r\n            matchHTML = doNotSkipEncoded ? /[&<>\"'\\/]/g : /&(?!#?\\w+;)|<|>|\"|'|\\//g;\r\n        return function(code) {\r\n            return code ? code.toString().replace(matchHTML, function(m) { return encodeHTMLRules[m] || m; }) : \"\";\r\n        };\r\n    };\r\n\r\n    root.doT = doT;\r\n\r\n    var startend = {\r\n        append: { start: \"'+(\", end: \")+'\", startencode: \"'+encodeHTML(\" },\r\n        split: { start: \"';out+=(\", end: \");out+='\", startencode: \"';out+=encodeHTML(\" }\r\n    }, skip = /$^/;\r\n\r\n    function resolveDefs(c, block, def) {\r\n        return ((typeof block === \"string\") ? block : block.toString())\r\n            .replace(c.define || skip, function(m, code, assign, value) {\r\n                if (code.indexOf(\"def.\") === 0) {\r\n                    code = code.substring(4);\r\n                }\r\n                if (!(code in def)) {\r\n                    if (assign === \":\") {\r\n                        if (c.defineParams) value.replace(c.defineParams, function(m, param, v) {\r\n                            def[code] = { arg: param, text: v };\r\n                        });\r\n                        if (!(code in def)) def[code] = value;\r\n                    } else {\r\n                        new Function(\"def\", \"def['\" + code + \"']=\" + value)(def);\r\n                    }\r\n                }\r\n                return \"\";\r\n            })\r\n            .replace(c.use || skip, function(m, code) {\r\n                if (c.useParams) code = code.replace(c.useParams, function(m, s, d, param) {\r\n                    if (def[d] && def[d].arg && param) {\r\n                        var rw = (d + \":\" + param).replace(/'|\\\\/g, \"_\");\r\n                        def.__exp = def.__exp || {};\r\n                        def.__exp[rw] = def[d].text.replace(new RegExp(\"(^|[^\\\\w$])\" + def[d].arg + \"([^\\\\w$])\", \"g\"), \"$1\" + param + \"$2\");\r\n                        return s + \"def.__exp['\" + rw + \"']\";\r\n                    }\r\n                });\r\n                var v = new Function(\"def\", \"return \" + code)(def);\r\n                return v ? resolveDefs(c, v, def) : v;\r\n            });\r\n    }\r\n\r\n    function unescape(code) {\r\n        return code.replace(/\\\\('|\\\\)/g, \"$1\").replace(/[\\r\\t\\n]/g, \" \");\r\n    }\r\n\r\n    doT.template = function(tmpl, c, def) {\r\n        c = c || doT.templateSettings;\r\n        var cse = c.append ? startend.append : startend.split, needhtmlencode, sid = 0, indv,\r\n            str = (c.use || c.define) ? resolveDefs(c, tmpl, def || {}) : tmpl;\r\n\r\n        str = (\"var out='\" + (c.strip ? str.replace(/(^|\\r|\\n)\\t* +| +\\t*(\\r|\\n|$)/g, \" \")\r\n            .replace(/\\r|\\n|\\t|\\/\\*[\\s\\S]*?\\*\\//g, \"\") : str)\r\n            .replace(/'|\\\\/g, \"\\\\$&\")\r\n            .replace(c.interpolate || skip, function(m, code) {\r\n                return cse.start + unescape(code) + cse.end;\r\n            })\r\n            .replace(c.encode || skip, function(m, code) {\r\n                needhtmlencode = true;\r\n                return cse.startencode + unescape(code) + cse.end;\r\n            })\r\n            .replace(c.conditional || skip, function(m, elsecase, code) {\r\n                return elsecase ?\r\n                    (code ? \"';}else if(\" + unescape(code) + \"){out+='\" : \"';}else{out+='\") :\r\n                    (code ? \"';if(\" + unescape(code) + \"){out+='\" : \"';}out+='\");\r\n            })\r\n            .replace(c.iterate || skip, function(m, iterate, vname, iname) {\r\n                if (!iterate) return \"';} } out+='\";\r\n                sid += 1; indv = iname || \"i\" + sid; iterate = unescape(iterate);\r\n                return \"';var arr\" + sid + \"=\" + iterate + \";if(arr\" + sid + \"){var \" + vname + \",\" + indv + \"=-1,l\" + sid + \"=arr\" + sid + \".length-1;while(\" + indv + \"<l\" + sid + \"){\"\r\n                    + vname + \"=arr\" + sid + \"[\" + indv + \"+=1];out+='\";\r\n            })\r\n            .replace(c.evaluate || skip, function(m, code) {\r\n                return \"';\" + unescape(code) + \"out+='\";\r\n            })\r\n            + \"';return out;\")\r\n            .replace(/\\n/g, \"\\\\n\").replace(/\\t/g, '\\\\t').replace(/\\r/g, \"\\\\r\")\r\n            .replace(/(\\s|;|\\}|^|\\{)out\\+='';/g, '$1').replace(/\\+''/g, \"\");\r\n        //.replace(/(\\s|;|\\}|^|\\{)out\\+=''\\+/g,'$1out+=');\r\n\r\n        if (needhtmlencode) {\r\n            if (!c.selfcontained && _globals && !_globals._encodeHTML) _globals._encodeHTML = doT.encodeHTMLSource(c.doNotSkipEncoded);\r\n            str = \"var encodeHTML = typeof _encodeHTML !== 'undefined' ? _encodeHTML : (\"\r\n                + doT.encodeHTMLSource.toString() + \"(\" + (c.doNotSkipEncoded || '') + \"));\"\r\n                + str;\r\n        }\r\n        try {\r\n            return new Function(c.varname, str);\r\n        } catch (e) {\r\n            /* istanbul ignore else */\r\n            if (typeof console !== \"undefined\") console.log(\"Could not create a template function: \" + str);\r\n            throw e;\r\n        }\r\n    };\r\n\r\n    doT.compile = function(tmpl, def) {\r\n        return doT.template(tmpl, null, def);\r\n    };\r\n}(this));\r\n","/*!\r\n * flatpickr v4.5.1, @license MIT\r\n * https://github.com/flatpickr/flatpickr\r\n */\r\nvar flatpickr = (function() {\r\n    'use strict';\r\n\r\n    var __assign = Object.assign || function(target) {\r\n        for (var source, i = 1; i < arguments.length; i++) {\r\n            source = arguments[i];\r\n            for (var prop in source) {\r\n                if (Object.prototype.hasOwnProperty.call(source, prop)) {\r\n                    target[prop] = source[prop];\r\n                }\r\n            }\r\n        }\r\n        return target;\r\n    };\r\n\r\n    var pad = function(number) { return ('0' + number).slice(-2); };\r\n    var int = function(bool) { return (bool === true ? 1 : 0); };\r\n    function debounce(func, wait, immediate) {\r\n        if (immediate === void 0) { immediate = false; }\r\n        var timeout;\r\n        return function() {\r\n            var context = this, args = arguments;\r\n            timeout !== null && clearTimeout(timeout);\r\n            timeout = window.setTimeout(function() {\r\n                timeout = null;\r\n                if (!immediate)\r\n                    func.apply(context, args);\r\n            }, wait);\r\n            if (immediate && !timeout)\r\n                func.apply(context, args);\r\n        };\r\n    }\r\n    var arrayify = function(obj) {\r\n        return obj instanceof Array ? obj : [obj];\r\n    };\r\n\r\n    var do_nothing = function() { return undefined; };\r\n    var monthToStr = function(monthNumber, shorthand, locale) { return locale.months[shorthand ? 'shorthand' : 'longhand'][monthNumber]; };\r\n    var revFormat = {\r\n        D: do_nothing,\r\n        F: function(dateObj, monthName, locale) {\r\n            dateObj.setMonth(locale.months.longhand.indexOf(monthName));\r\n        },\r\n        G: function(dateObj, hour) {\r\n            dateObj.setHours(parseFloat(hour));\r\n        },\r\n        H: function(dateObj, hour) {\r\n            dateObj.setHours(parseFloat(hour));\r\n        },\r\n        J: function(dateObj, day) {\r\n            dateObj.setDate(parseFloat(day));\r\n        },\r\n        K: function(dateObj, amPM, locale) {\r\n            dateObj.setHours((dateObj.getHours() % 12) +\r\n                12 * int(new RegExp(locale.amPM[1], 'i').test(amPM)));\r\n        },\r\n        M: function(dateObj, shortMonth, locale) {\r\n            dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\r\n        },\r\n        S: function(dateObj, seconds) {\r\n            dateObj.setSeconds(parseFloat(seconds));\r\n        },\r\n        U: function(_, unixSeconds) { return new Date(parseFloat(unixSeconds) * 1000); },\r\n        W: function(dateObj, weekNum) {\r\n            var weekNumber = parseInt(weekNum);\r\n            return new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);\r\n        },\r\n        Y: function(dateObj, year) {\r\n            dateObj.setFullYear(parseFloat(year));\r\n        },\r\n        Z: function(_, ISODate) { return new Date(ISODate); },\r\n        d: function(dateObj, day) {\r\n            dateObj.setDate(parseFloat(day));\r\n        },\r\n        h: function(dateObj, hour) {\r\n            dateObj.setHours(parseFloat(hour));\r\n        },\r\n        i: function(dateObj, minutes) {\r\n            dateObj.setMinutes(parseFloat(minutes));\r\n        },\r\n        j: function(dateObj, day) {\r\n            dateObj.setDate(parseFloat(day));\r\n        },\r\n        l: do_nothing,\r\n        m: function(dateObj, month) {\r\n            dateObj.setMonth(parseFloat(month) - 1);\r\n        },\r\n        n: function(dateObj, month) {\r\n            dateObj.setMonth(parseFloat(month) - 1);\r\n        },\r\n        s: function(dateObj, seconds) {\r\n            dateObj.setSeconds(parseFloat(seconds));\r\n        },\r\n        w: do_nothing,\r\n        y: function(dateObj, year) {\r\n            dateObj.setFullYear(2000 + parseFloat(year));\r\n        },\r\n    };\r\n    var tokenRegex = {\r\n        D: '(\\\\w+)',\r\n        F: '(\\\\w+)',\r\n        G: '(\\\\d\\\\d|\\\\d)',\r\n        H: '(\\\\d\\\\d|\\\\d)',\r\n        J: '(\\\\d\\\\d|\\\\d)\\\\w+',\r\n        K: '',\r\n        M: '(\\\\w+)',\r\n        S: '(\\\\d\\\\d|\\\\d)',\r\n        U: '(.+)',\r\n        W: '(\\\\d\\\\d|\\\\d)',\r\n        Y: '(\\\\d{4})',\r\n        Z: '(.+)',\r\n        d: '(\\\\d\\\\d|\\\\d)',\r\n        h: '(\\\\d\\\\d|\\\\d)',\r\n        i: '(\\\\d\\\\d|\\\\d)',\r\n        j: '(\\\\d\\\\d|\\\\d)',\r\n        l: '(\\\\w+)',\r\n        m: '(\\\\d\\\\d|\\\\d)',\r\n        n: '(\\\\d\\\\d|\\\\d)',\r\n        s: '(\\\\d\\\\d|\\\\d)',\r\n        w: '(\\\\d\\\\d|\\\\d)',\r\n        y: '(\\\\d{2})',\r\n    };\r\n    var formats = {\r\n        Z: function(date) { return date.toISOString(); },\r\n        D: function(date, locale, options) {\r\n            return locale.weekdays.shorthand[formats.w(date, locale, options)];\r\n        },\r\n        F: function(date, locale, options) {\r\n            return monthToStr(formats.n(date, locale, options) - 1, false, locale);\r\n        },\r\n        G: function(date, locale, options) {\r\n            return pad(formats.h(date, locale, options));\r\n        },\r\n        H: function(date) { return pad(date.getHours()); },\r\n        J: function(date, locale) {\r\n            return locale.ordinal !== undefined\r\n                ? date.getDate() + locale.ordinal(date.getDate())\r\n                : date.getDate();\r\n        },\r\n        K: function(date, locale) { return locale.amPM[int(date.getHours() > 11)]; },\r\n        M: function(date, locale) {\r\n            return monthToStr(date.getMonth(), true, locale);\r\n        },\r\n        S: function(date) { return pad(date.getSeconds()); },\r\n        U: function(date) { return date.getTime() / 1000; },\r\n        W: function(date, _, options) {\r\n            return options.getWeek(date);\r\n        },\r\n        Y: function(date) { return date.getFullYear(); },\r\n        d: function(date) { return pad(date.getDate()); },\r\n        h: function(date) { return (date.getHours() % 12 ? date.getHours() % 12 : 12); },\r\n        i: function(date) { return pad(date.getMinutes()); },\r\n        j: function(date) { return date.getDate(); },\r\n        l: function(date, locale) {\r\n            return locale.weekdays.longhand[date.getDay()];\r\n        },\r\n        m: function(date) { return pad(date.getMonth() + 1); },\r\n        n: function(date) { return date.getMonth() + 1; },\r\n        s: function(date) { return date.getSeconds(); },\r\n        w: function(date) { return date.getDay(); },\r\n        y: function(date) { return String(date.getFullYear()).substring(2); },\r\n    };\r\n\r\n    var english = {\r\n        weekdays: {\r\n            shorthand: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n            longhand: [\r\n                'Sunday',\r\n                'Monday',\r\n                'Tuesday',\r\n                'Wednesday',\r\n                'Thursday',\r\n                'Friday',\r\n                'Saturday',\r\n            ],\r\n        },\r\n        months: {\r\n            shorthand: [\r\n                'Jan',\r\n                'Feb',\r\n                'Mar',\r\n                'Apr',\r\n                'May',\r\n                'Jun',\r\n                'Jul',\r\n                'Aug',\r\n                'Sep',\r\n                'Oct',\r\n                'Nov',\r\n                'Dec',\r\n            ],\r\n            longhand: [\r\n                'January',\r\n                'February',\r\n                'March',\r\n                'April',\r\n                'May',\r\n                'June',\r\n                'July',\r\n                'August',\r\n                'September',\r\n                'October',\r\n                'November',\r\n                'December',\r\n            ],\r\n        },\r\n        daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\r\n        firstDayOfWeek: 0,\r\n        ordinal: function(nth) {\r\n            var s = nth % 100;\r\n            if (s > 3 && s < 21)\r\n                return 'th';\r\n            switch (s % 10) {\r\n                case 1:\r\n                    return 'st';\r\n                case 2:\r\n                    return 'nd';\r\n                case 3:\r\n                    return 'rd';\r\n                default:\r\n                    return 'th';\r\n            }\r\n        },\r\n        rangeSeparator: ' to ',\r\n        weekAbbreviation: 'Wk',\r\n        scrollTitle: 'Scroll to increment',\r\n        toggleTitle: 'Click to toggle',\r\n        amPM: ['AM', 'PM'],\r\n        yearAriaLabel: 'Year',\r\n    };\r\n\r\n    var createDateFormatter = function(_a) {\r\n        var _b = _a.config, config = _b === void 0 ? defaults : _b, _c = _a.l10n, l10n = _c === void 0 ? english : _c;\r\n        return function(dateObj, frmt, overrideLocale) {\r\n            if (config.formatDate !== undefined)\r\n                return config.formatDate(dateObj, frmt);\r\n            var locale = overrideLocale || l10n;\r\n            return frmt\r\n                .split('')\r\n                .map(function(c, i, arr) {\r\n                    return formats[c] && arr[i - 1] !== '\\\\'\r\n                        ? formats[c](dateObj, locale, config)\r\n                        : c !== '\\\\'\r\n                            ? c\r\n                            : '';\r\n                })\r\n                .join('');\r\n        };\r\n    };\r\n    var createDateParser = function(_a) {\r\n        var _b = _a.config, config = _b === void 0 ? defaults : _b, _c = _a.l10n, l10n = _c === void 0 ? english : _c;\r\n        return function(date, givenFormat, timeless, customLocale) {\r\n            if (date !== 0 && !date)\r\n                return undefined;\r\n            var locale = customLocale || l10n;\r\n            var parsedDate;\r\n            var date_orig = date;\r\n            if (date instanceof Date)\r\n                parsedDate = new Date(date.getTime());\r\n            else if (typeof date !== 'string' &&\r\n                date.toFixed !== undefined)\r\n                parsedDate = new Date(date);\r\n            else if (typeof date === 'string') {\r\n                var format = givenFormat || (config || defaults).dateFormat;\r\n                var datestr = String(date).trim();\r\n                if (datestr === 'today') {\r\n                    parsedDate = new Date();\r\n                    timeless = true;\r\n                }\r\n                else if (/Z$/.test(datestr) ||\r\n                    /GMT$/.test(datestr))\r\n                    parsedDate = new Date(date);\r\n                else if (config && config.parseDate)\r\n                    parsedDate = config.parseDate(date, format);\r\n                else {\r\n                    parsedDate =\r\n                        !config || !config.noCalendar\r\n                            ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0)\r\n                            : new Date(new Date().setHours(0, 0, 0, 0));\r\n                    var matched = void 0, ops = [];\r\n                    for (var i = 0, matchIndex = 0, regexStr = ''; i < format.length; i++) {\r\n                        var token_1 = format[i];\r\n                        var isBackSlash = token_1 === '\\\\';\r\n                        var escaped = format[i - 1] === '\\\\' || isBackSlash;\r\n                        if (tokenRegex[token_1] && !escaped) {\r\n                            regexStr += tokenRegex[token_1];\r\n                            var match = new RegExp(regexStr).exec(date);\r\n                            if (match && (matched = true)) {\r\n                                ops[token_1 !== 'Y' ? 'push' : 'unshift']({\r\n                                    fn: revFormat[token_1],\r\n                                    val: match[++matchIndex],\r\n                                });\r\n                            }\r\n                        }\r\n                        else if (!isBackSlash)\r\n                            regexStr += '.';\r\n                        ops.forEach(function(_a) {\r\n                            var fn = _a.fn, val = _a.val;\r\n                            return (parsedDate = fn(parsedDate, val, locale) || parsedDate);\r\n                        });\r\n                    }\r\n                    parsedDate = matched ? parsedDate : undefined;\r\n                }\r\n            }\r\n            if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {\r\n                config.errorHandler(new Error('Invalid date provided: ' + date_orig));\r\n                return undefined;\r\n            }\r\n            if (timeless === true)\r\n                parsedDate.setHours(0, 0, 0, 0);\r\n            return parsedDate;\r\n        };\r\n    };\r\n    function compareDates(date1, date2, timeless) {\r\n        if (timeless === void 0) { timeless = true; }\r\n        if (timeless !== false) {\r\n            return (new Date(date1.getTime()).setHours(0, 0, 0, 0) -\r\n                new Date(date2.getTime()).setHours(0, 0, 0, 0));\r\n        }\r\n        return date1.getTime() - date2.getTime();\r\n    }\r\n    var getWeek = function(givenDate) {\r\n        var date = new Date(givenDate.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - ((date.getDay() + 6) % 7));\r\n        var week1 = new Date(date.getFullYear(), 0, 4);\r\n        return (1 +\r\n            Math.round(((date.getTime() - week1.getTime()) / 86400000 -\r\n                3 +\r\n                ((week1.getDay() + 6) % 7)) /\r\n                7));\r\n    };\r\n    var isBetween = function(ts, ts1, ts2) {\r\n        return ts > Math.min(ts1, ts2) && ts < Math.max(ts1, ts2);\r\n    };\r\n    var duration = {\r\n        DAY: 86400000,\r\n    };\r\n\r\n    var defaults = {\r\n        _disable: [],\r\n        _enable: [],\r\n        allowInput: false,\r\n        altFormat: 'F j, Y',\r\n        altInput: false,\r\n        altInputClass: 'form-control input',\r\n        animate: typeof window === 'object' && window.navigator.userAgent.indexOf('MSIE') === -1,\r\n        ariaDateFormat: 'F j, Y',\r\n        clickOpens: true,\r\n        closeOnSelect: true,\r\n        conjunction: ', ',\r\n        dateFormat: 'Y-m-d',\r\n        defaultHour: 12,\r\n        defaultMinute: 0,\r\n        defaultSeconds: 0,\r\n        disable: [],\r\n        disableMobile: false,\r\n        enable: [],\r\n        enableSeconds: false,\r\n        enableTime: false,\r\n        errorHandler: function(err) {\r\n            return typeof console !== 'undefined' && console.warn(err);\r\n        },\r\n        getWeek: getWeek,\r\n        hourIncrement: 1,\r\n        ignoredFocusElements: [],\r\n        inline: false,\r\n        locale: 'default',\r\n        minuteIncrement: 5,\r\n        mode: 'single',\r\n        nextArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>\",\r\n        noCalendar: false,\r\n        now: new Date(),\r\n        onChange: [],\r\n        onClose: [],\r\n        onDayCreate: [],\r\n        onDestroy: [],\r\n        onKeyDown: [],\r\n        onMonthChange: [],\r\n        onOpen: [],\r\n        onParseConfig: [],\r\n        onReady: [],\r\n        onValueUpdate: [],\r\n        onYearChange: [],\r\n        onPreCalendarPosition: [],\r\n        plugins: [],\r\n        position: 'auto',\r\n        positionElement: undefined,\r\n        prevArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>\",\r\n        shorthandCurrentMonth: false,\r\n        showMonths: 1,\r\n        static: false,\r\n        time_24hr: false,\r\n        weekNumbers: false,\r\n        wrap: false,\r\n    };\r\n\r\n    function toggleClass(elem, className, bool) {\r\n        if (bool === true)\r\n            return elem.classList.add(className);\r\n        elem.classList.remove(className);\r\n    }\r\n    function createElement(tag, className, content) {\r\n        var e = window.document.createElement(tag);\r\n        className = className || '';\r\n        content = content || '';\r\n        e.className = className;\r\n        if (content !== undefined)\r\n            e.textContent = content;\r\n        return e;\r\n    }\r\n    function clearNode(node) {\r\n        while (node.firstChild)\r\n            node.removeChild(node.firstChild);\r\n    }\r\n    function findParent(node, condition) {\r\n        if (condition(node))\r\n            return node;\r\n        else if (node.parentNode)\r\n            return findParent(node.parentNode, condition);\r\n        return undefined;\r\n    }\r\n    function createNumberInput(inputClassName, opts) {\r\n        var wrapper = createElement('div', 'numInputWrapper'), numInput = createElement('input', 'numInput ' + inputClassName), arrowUp = createElement('span', 'arrowUp'), arrowDown = createElement('span', 'arrowDown');\r\n        numInput.type = 'text';\r\n        numInput.pattern = '\\\\d*';\r\n        if (opts !== undefined)\r\n            for (var key in opts)\r\n                numInput.setAttribute(key, opts[key]);\r\n        wrapper.appendChild(numInput);\r\n        wrapper.appendChild(arrowUp);\r\n        wrapper.appendChild(arrowDown);\r\n        return wrapper;\r\n    }\r\n\r\n    if (typeof Object.assign !== 'function') {\r\n        Object.assign = function(target) {\r\n            var args = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                args[_i - 1] = arguments[_i];\r\n            }\r\n            if (!target) {\r\n                throw TypeError('Cannot convert undefined or null to object');\r\n            }\r\n            var _loop_1 = function(source) {\r\n                if (source) {\r\n                    Object.keys(source).forEach(function(key) { return (target[key] = source[key]); });\r\n                }\r\n            };\r\n            for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {\r\n                var source = args_1[_a];\r\n                _loop_1(source);\r\n            }\r\n            return target;\r\n        };\r\n    }\r\n\r\n    var DEBOUNCED_CHANGE_MS = 300;\r\n    function FlatpickrInstance(element, instanceConfig) {\r\n        var self = {\r\n            config: __assign({}, flatpickr.defaultConfig),\r\n            l10n: english,\r\n        };\r\n        self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\r\n        self._handlers = [];\r\n        self._bind = bind;\r\n        self._setHoursFromDate = setHoursFromDate;\r\n        self._positionCalendar = positionCalendar;\r\n        self.changeMonth = changeMonth;\r\n        self.changeYear = changeYear;\r\n        self.clear = clear;\r\n        self.close = close;\r\n        self._createElement = createElement;\r\n        self.destroy = destroy;\r\n        self.isEnabled = isEnabled;\r\n        self.jumpToDate = jumpToDate;\r\n        self.open = open;\r\n        self.redraw = redraw;\r\n        self.set = set;\r\n        self.setDate = setDate;\r\n        self.toggle = toggle;\r\n        function setupHelperFunctions() {\r\n            self.utils = {\r\n                getDaysInMonth: function(month, yr) {\r\n                    if (month === void 0) { month = self.currentMonth; }\r\n                    if (yr === void 0) { yr = self.currentYear; }\r\n                    if (month === 1 && ((yr % 4 === 0 && yr % 100 !== 0) || yr % 400 === 0))\r\n                        return 29;\r\n                    return self.l10n.daysInMonth[month];\r\n                },\r\n            };\r\n        }\r\n        function init() {\r\n            self.element = self.input = element;\r\n            self.isOpen = false;\r\n            parseConfig();\r\n            setupLocale();\r\n            setupInputs();\r\n            setupDates();\r\n            setupHelperFunctions();\r\n            if (!self.isMobile)\r\n                build();\r\n            bindEvents();\r\n            if (self.selectedDates.length || self.config.noCalendar) {\r\n                if (self.config.enableTime) {\r\n                    setHoursFromDate(self.config.noCalendar\r\n                        ? self.latestSelectedDateObj || self.config.minDate\r\n                        : undefined);\r\n                }\r\n                updateValue(false);\r\n            }\r\n            setCalendarWidth();\r\n            self.showTimeInput =\r\n                self.selectedDates.length > 0 || self.config.noCalendar;\r\n            var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n            if (!self.isMobile && isSafari) {\r\n                positionCalendar();\r\n            }\r\n            triggerEvent('onReady');\r\n        }\r\n        function bindToInstance(fn) {\r\n            return fn.bind(self);\r\n        }\r\n        function setCalendarWidth() {\r\n            var config = self.config;\r\n            if (config.weekNumbers === false && config.showMonths === 1)\r\n                return;\r\n            else if (config.noCalendar !== true) {\r\n                window.requestAnimationFrame(function() {\r\n                    self.calendarContainer.style.visibility = 'hidden';\r\n                    self.calendarContainer.style.display = 'block';\r\n                    if (self.daysContainer !== undefined) {\r\n                        var daysWidth = (self.days.offsetWidth + 1) * config.showMonths;\r\n                        self.daysContainer.style.width = daysWidth + 'px';\r\n                        self.calendarContainer.style.width =\r\n                            daysWidth +\r\n                            (self.weekWrapper !== undefined\r\n                                ? self.weekWrapper.offsetWidth\r\n                                : 0) +\r\n                            'px';\r\n                        self.calendarContainer.style.removeProperty('visibility');\r\n                        self.calendarContainer.style.removeProperty('display');\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        function updateTime(e) {\r\n            if (self.selectedDates.length === 0)\r\n                return;\r\n            if (e !== undefined && e.type !== 'blur') {\r\n                timeWrapper(e);\r\n            }\r\n            var prevValue = self._input.value;\r\n            setHoursFromInputs();\r\n            updateValue();\r\n            if (self._input.value !== prevValue) {\r\n                self._debouncedChange();\r\n            }\r\n        }\r\n        function ampm2military(hour, amPM) {\r\n            return (hour % 12) + 12 * int(amPM === self.l10n.amPM[1]);\r\n        }\r\n        function military2ampm(hour) {\r\n            switch (hour % 24) {\r\n                case 0:\r\n                case 12:\r\n                    return 12;\r\n                default:\r\n                    return hour % 12;\r\n            }\r\n        }\r\n        function setHoursFromInputs() {\r\n            if (self.hourElement === undefined || self.minuteElement === undefined)\r\n                return;\r\n            var hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24, minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60, seconds = self.secondElement !== undefined\r\n                ? (parseInt(self.secondElement.value, 10) || 0) % 60\r\n                : 0;\r\n            if (self.amPM !== undefined) {\r\n                hours = ampm2military(hours, self.amPM.textContent);\r\n            }\r\n            var limitMinHours = self.config.minTime !== undefined ||\r\n                (self.config.minDate &&\r\n                    self.minDateHasTime &&\r\n                    self.latestSelectedDateObj &&\r\n                    compareDates(self.latestSelectedDateObj, self.config.minDate, true) ===\r\n                    0);\r\n            var limitMaxHours = self.config.maxTime !== undefined ||\r\n                (self.config.maxDate &&\r\n                    self.maxDateHasTime &&\r\n                    self.latestSelectedDateObj &&\r\n                    compareDates(self.latestSelectedDateObj, self.config.maxDate, true) ===\r\n                    0);\r\n            if (limitMaxHours) {\r\n                var maxTime = self.config.maxTime !== undefined\r\n                    ? self.config.maxTime\r\n                    : self.config.maxDate;\r\n                hours = Math.min(hours, maxTime.getHours());\r\n                if (hours === maxTime.getHours())\r\n                    minutes = Math.min(minutes, maxTime.getMinutes());\r\n                if (minutes === maxTime.getMinutes())\r\n                    seconds = Math.min(seconds, maxTime.getSeconds());\r\n            }\r\n            if (limitMinHours) {\r\n                var minTime = self.config.minTime !== undefined\r\n                    ? self.config.minTime\r\n                    : self.config.minDate;\r\n                hours = Math.max(hours, minTime.getHours());\r\n                if (hours === minTime.getHours())\r\n                    minutes = Math.max(minutes, minTime.getMinutes());\r\n                if (minutes === minTime.getMinutes())\r\n                    seconds = Math.max(seconds, minTime.getSeconds());\r\n            }\r\n            setHours(hours, minutes, seconds);\r\n        }\r\n        function setHoursFromDate(dateObj) {\r\n            var date = dateObj || self.latestSelectedDateObj;\r\n            if (date)\r\n                setHours(date.getHours(), date.getMinutes(), date.getSeconds());\r\n        }\r\n        function setDefaultHours() {\r\n            var hours = self.config.defaultHour;\r\n            var minutes = self.config.defaultMinute;\r\n            var seconds = self.config.defaultSeconds;\r\n            if (self.config.minDate !== undefined) {\r\n                var min_hr = self.config.minDate.getHours();\r\n                var min_minutes = self.config.minDate.getMinutes();\r\n                hours = Math.max(hours, min_hr);\r\n                if (hours === min_hr)\r\n                    minutes = Math.max(min_minutes, minutes);\r\n                if (hours === min_hr && minutes === min_minutes)\r\n                    seconds = self.config.minDate.getSeconds();\r\n            }\r\n            if (self.config.maxDate !== undefined) {\r\n                var max_hr = self.config.maxDate.getHours();\r\n                var max_minutes = self.config.maxDate.getMinutes();\r\n                hours = Math.min(hours, max_hr);\r\n                if (hours === max_hr)\r\n                    minutes = Math.min(max_minutes, minutes);\r\n                if (hours === max_hr && minutes === max_minutes)\r\n                    seconds = self.config.maxDate.getSeconds();\r\n            }\r\n            setHours(hours, minutes, seconds);\r\n        }\r\n        function setHours(hours, minutes, seconds) {\r\n            if (self.latestSelectedDateObj !== undefined) {\r\n                self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);\r\n            }\r\n            if (!self.hourElement || !self.minuteElement || self.isMobile)\r\n                return;\r\n            self.hourElement.value = pad(!self.config.time_24hr\r\n                ? ((12 + hours) % 12) + 12 * int(hours % 12 === 0)\r\n                : hours);\r\n            self.minuteElement.value = pad(minutes);\r\n            if (self.amPM !== undefined)\r\n                self.amPM.textContent = self.l10n.amPM[int(hours >= 12)];\r\n            if (self.secondElement !== undefined)\r\n                self.secondElement.value = pad(seconds);\r\n        }\r\n        function onYearInput(event) {\r\n            var year = parseInt(event.target.value) + (event.delta || 0);\r\n            if (year / 1000 > 1 ||\r\n                (event.key === 'Enter' && !/[^\\d]/.test(year.toString()))) {\r\n                changeYear(year);\r\n            }\r\n        }\r\n        function bind(element, event, handler, options) {\r\n            if (event instanceof Array)\r\n                return event.forEach(function(ev) { return bind(element, ev, handler, options); });\r\n            if (element instanceof Array)\r\n                return element.forEach(function(el) { return bind(el, event, handler, options); });\r\n            element.addEventListener(event, handler, options);\r\n            self._handlers.push({\r\n                element: element,\r\n                event: event,\r\n                handler: handler,\r\n                options: options,\r\n            });\r\n        }\r\n        function onClick(handler) {\r\n            return function(evt) {\r\n                evt.which === 1 && handler(evt);\r\n            };\r\n        }\r\n        function triggerChange() {\r\n            triggerEvent('onChange');\r\n        }\r\n        function bindEvents() {\r\n            if (self.config.wrap) {\r\n                ['open', 'close', 'toggle', 'clear'].forEach(function(evt) {\r\n                    Array.prototype.forEach.call(self.element.querySelectorAll('[data-' + evt + ']'), function(el) {\r\n                        return bind(el, 'click', self[evt]);\r\n                    });\r\n                });\r\n            }\r\n            if (self.isMobile) {\r\n                setupMobile();\r\n                return;\r\n            }\r\n            var debouncedResize = debounce(onResize, 50);\r\n            self._debouncedChange = debounce(triggerChange, DEBOUNCED_CHANGE_MS);\r\n            if (self.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent))\r\n                bind(self.daysContainer, 'mouseover', function(e) {\r\n                    if (self.config.mode === 'range')\r\n                        onMouseOver(e.target);\r\n                });\r\n            bind(window.document.body, 'keydown', onKeyDown);\r\n            if (!self.config.static)\r\n                bind(self._input, 'keydown', onKeyDown);\r\n            if (!self.config.inline && !self.config.static)\r\n                bind(window, 'resize', debouncedResize);\r\n            if (window.ontouchstart !== undefined)\r\n                bind(window.document, 'click', documentClick);\r\n            else\r\n                bind(window.document, 'mousedown', onClick(documentClick));\r\n            bind(window.document, 'focus', documentClick, { capture: true });\r\n            if (self.config.clickOpens === true) {\r\n                bind(self._input, 'focus', self.open);\r\n                bind(self._input, 'mousedown', onClick(self.open));\r\n            }\r\n            if (self.daysContainer !== undefined) {\r\n                bind(self.monthNav, 'mousedown', onClick(onMonthNavClick));\r\n                bind(self.monthNav, ['keyup', 'increment'], onYearInput);\r\n                bind(self.daysContainer, 'mousedown', onClick(selectDate));\r\n            }\r\n            if (self.timeContainer !== undefined &&\r\n                self.minuteElement !== undefined &&\r\n                self.hourElement !== undefined) {\r\n                var selText = function(e) {\r\n                    return e.target.select();\r\n                };\r\n                bind(self.timeContainer, ['increment'], updateTime);\r\n                bind(self.timeContainer, 'blur', updateTime, { capture: true });\r\n                bind(self.timeContainer, 'mousedown', onClick(timeIncrement));\r\n                bind([self.hourElement, self.minuteElement], ['focus', 'click'], selText);\r\n                if (self.secondElement !== undefined)\r\n                    bind(self.secondElement, 'focus', function() { return self.secondElement && self.secondElement.select(); });\r\n                if (self.amPM !== undefined) {\r\n                    bind(self.amPM, 'mousedown', onClick(function(e) {\r\n                        updateTime(e);\r\n                        triggerChange();\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        function jumpToDate(jumpDate) {\r\n            var jumpTo = jumpDate !== undefined\r\n                ? self.parseDate(jumpDate)\r\n                : self.latestSelectedDateObj ||\r\n                (self.config.minDate && self.config.minDate > self.now\r\n                    ? self.config.minDate\r\n                    : self.config.maxDate && self.config.maxDate < self.now\r\n                        ? self.config.maxDate\r\n                        : self.now);\r\n            try {\r\n                if (jumpTo !== undefined) {\r\n                    self.currentYear = jumpTo.getFullYear();\r\n                    self.currentMonth = jumpTo.getMonth();\r\n                }\r\n            }\r\n            catch (e) {\r\n                e.message = 'Invalid date supplied: ' + jumpTo;\r\n                self.config.errorHandler(e);\r\n            }\r\n            self.redraw();\r\n        }\r\n        function timeIncrement(e) {\r\n            if (~e.target.className.indexOf('arrow'))\r\n                incrementNumInput(e, e.target.classList.contains('arrowUp') ? 1 : -1);\r\n        }\r\n        function incrementNumInput(e, delta, inputElem) {\r\n            var target = e && e.target;\r\n            var input = inputElem ||\r\n                (target && target.parentNode && target.parentNode.firstChild);\r\n            var event = createEvent('increment');\r\n            event.delta = delta;\r\n            input && input.dispatchEvent(event);\r\n        }\r\n        function build() {\r\n            var fragment = window.document.createDocumentFragment();\r\n            self.calendarContainer = createElement('div', 'flatpickr-calendar');\r\n            self.calendarContainer.tabIndex = -1;\r\n            if (!self.config.noCalendar) {\r\n                fragment.appendChild(buildMonthNav());\r\n                self.innerContainer = createElement('div', 'flatpickr-innerContainer');\r\n                if (self.config.weekNumbers) {\r\n                    var _a = buildWeeks(), weekWrapper = _a.weekWrapper, weekNumbers = _a.weekNumbers;\r\n                    self.innerContainer.appendChild(weekWrapper);\r\n                    self.weekNumbers = weekNumbers;\r\n                    self.weekWrapper = weekWrapper;\r\n                }\r\n                self.rContainer = createElement('div', 'flatpickr-rContainer');\r\n                self.rContainer.appendChild(buildWeekdays());\r\n                if (!self.daysContainer) {\r\n                    self.daysContainer = createElement('div', 'flatpickr-days');\r\n                    self.daysContainer.tabIndex = -1;\r\n                }\r\n                buildDays();\r\n                self.rContainer.appendChild(self.daysContainer);\r\n                self.innerContainer.appendChild(self.rContainer);\r\n                fragment.appendChild(self.innerContainer);\r\n            }\r\n            if (self.config.enableTime) {\r\n                fragment.appendChild(buildTime());\r\n            }\r\n            toggleClass(self.calendarContainer, 'rangeMode', self.config.mode === 'range');\r\n            toggleClass(self.calendarContainer, 'animate', self.config.animate === true);\r\n            toggleClass(self.calendarContainer, 'multiMonth', self.config.showMonths > 1);\r\n            self.calendarContainer.appendChild(fragment);\r\n            var customAppend = self.config.appendTo !== undefined &&\r\n                self.config.appendTo.nodeType !== undefined;\r\n            if (self.config.inline || self.config.static) {\r\n                self.calendarContainer.classList.add(self.config.inline ? 'inline' : 'static');\r\n                if (self.config.inline) {\r\n                    if (!customAppend && self.element.parentNode)\r\n                        self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);\r\n                    else if (self.config.appendTo !== undefined)\r\n                        self.config.appendTo.appendChild(self.calendarContainer);\r\n                }\r\n                if (self.config.static) {\r\n                    var wrapper = createElement('div', 'flatpickr-wrapper');\r\n                    if (self.element.parentNode)\r\n                        self.element.parentNode.insertBefore(wrapper, self.element);\r\n                    wrapper.appendChild(self.element);\r\n                    if (self.altInput)\r\n                        wrapper.appendChild(self.altInput);\r\n                    wrapper.appendChild(self.calendarContainer);\r\n                }\r\n            }\r\n            if (!self.config.static && !self.config.inline)\r\n                (self.config.appendTo !== undefined\r\n                    ? self.config.appendTo\r\n                    : window.document.body).appendChild(self.calendarContainer);\r\n        }\r\n        function createDay(className, date, dayNumber, i) {\r\n            var dateIsEnabled = isEnabled(date, true), dayElement = createElement('span', 'flatpickr-day ' + className, date.getDate().toString());\r\n            dayElement.dateObj = date;\r\n            dayElement.$i = i;\r\n            dayElement.setAttribute('aria-label', self.formatDate(date, self.config.ariaDateFormat));\r\n            if (className.indexOf('hidden') === -1 &&\r\n                compareDates(date, self.now) === 0) {\r\n                self.todayDateElem = dayElement;\r\n                dayElement.classList.add('today');\r\n                dayElement.setAttribute('aria-current', 'date');\r\n            }\r\n            if (dateIsEnabled) {\r\n                dayElement.tabIndex = -1;\r\n                if (isDateSelected(date)) {\r\n                    dayElement.classList.add('selected');\r\n                    self.selectedDateElem = dayElement;\r\n                    if (self.config.mode === 'range') {\r\n                        toggleClass(dayElement, 'startRange', self.selectedDates[0] &&\r\n                            compareDates(date, self.selectedDates[0], true) === 0);\r\n                        toggleClass(dayElement, 'endRange', self.selectedDates[1] &&\r\n                            compareDates(date, self.selectedDates[1], true) === 0);\r\n                        if (className === 'nextMonthDay')\r\n                            dayElement.classList.add('inRange');\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                dayElement.classList.add('disabled');\r\n            }\r\n            if (self.config.mode === 'range') {\r\n                if (isDateInRange(date) && !isDateSelected(date))\r\n                    dayElement.classList.add('inRange');\r\n            }\r\n            if (self.weekNumbers &&\r\n                self.config.showMonths === 1 &&\r\n                className !== 'prevMonthDay' &&\r\n                dayNumber % 7 === 1) {\r\n                self.weekNumbers.insertAdjacentHTML('beforeend', '<span class=\"flatpickr-day\">' + self.config.getWeek(date) + '</span>');\r\n            }\r\n            triggerEvent('onDayCreate', dayElement);\r\n            return dayElement;\r\n        }\r\n        function focusOnDayElem(targetNode) {\r\n            targetNode.focus();\r\n            if (self.config.mode === 'range')\r\n                onMouseOver(targetNode);\r\n        }\r\n        function getFirstAvailableDay(delta) {\r\n            var startMonth = delta > 0 ? 0 : self.config.showMonths - 1;\r\n            var endMonth = delta > 0 ? self.config.showMonths : -1;\r\n            for (var m = startMonth; m != endMonth; m += delta) {\r\n                var month = self.daysContainer.children[m];\r\n                var startIndex = delta > 0 ? 0 : month.children.length - 1;\r\n                var endIndex = delta > 0 ? month.children.length : -1;\r\n                for (var i = startIndex; i != endIndex; i += delta) {\r\n                    var c = month.children[i];\r\n                    if (c.className.indexOf('hidden') === -1 && isEnabled(c.dateObj))\r\n                        return c;\r\n                }\r\n            }\r\n            return undefined;\r\n        }\r\n        function getNextAvailableDay(current, delta) {\r\n            var givenMonth = current.className.indexOf('Month') === -1\r\n                ? current.dateObj.getMonth()\r\n                : self.currentMonth;\r\n            var endMonth = delta > 0 ? self.config.showMonths : -1;\r\n            var loopDelta = delta > 0 ? 1 : -1;\r\n            for (var m = givenMonth - self.currentMonth; m != endMonth; m += loopDelta) {\r\n                var month = self.daysContainer.children[m];\r\n                var startIndex = givenMonth - self.currentMonth === m\r\n                    ? current.$i + delta\r\n                    : delta < 0\r\n                        ? month.children.length - 1\r\n                        : 0;\r\n                var numMonthDays = month.children.length;\r\n                for (var i = startIndex; i >= 0 && i < numMonthDays && i != (delta > 0 ? numMonthDays : -1); i += loopDelta) {\r\n                    var c = month.children[i];\r\n                    if (c.className.indexOf('hidden') === -1 &&\r\n                        isEnabled(c.dateObj) &&\r\n                        Math.abs(current.$i - i) >= Math.abs(delta))\r\n                        return focusOnDayElem(c);\r\n                }\r\n            }\r\n            self.changeMonth(loopDelta);\r\n            focusOnDay(getFirstAvailableDay(loopDelta), 0);\r\n            return undefined;\r\n        }\r\n        function focusOnDay(current, offset) {\r\n            var dayFocused = isInView(document.activeElement || document.body);\r\n            var startElem = current !== undefined\r\n                ? current\r\n                : dayFocused\r\n                    ? document.activeElement\r\n                    : self.selectedDateElem !== undefined &&\r\n                        isInView(self.selectedDateElem)\r\n                        ? self.selectedDateElem\r\n                        : self.todayDateElem !== undefined && isInView(self.todayDateElem)\r\n                            ? self.todayDateElem\r\n                            : getFirstAvailableDay(offset > 0 ? 1 : -1);\r\n            if (startElem === undefined)\r\n                return self._input.focus();\r\n            if (!dayFocused)\r\n                return focusOnDayElem(startElem);\r\n            getNextAvailableDay(startElem, offset);\r\n        }\r\n        function buildMonthDays(year, month) {\r\n            var firstOfMonth = (new Date(year, month, 1).getDay() - self.l10n.firstDayOfWeek + 7) % 7;\r\n            var prevMonthDays = self.utils.getDaysInMonth((month - 1 + 12) % 12);\r\n            var daysInMonth = self.utils.getDaysInMonth(month), days = window.document.createDocumentFragment(), isMultiMonth = self.config.showMonths > 1, prevMonthDayClass = isMultiMonth ? 'prevMonthDay hidden' : 'prevMonthDay', nextMonthDayClass = isMultiMonth ? 'nextMonthDay hidden' : 'nextMonthDay';\r\n            var dayNumber = prevMonthDays + 1 - firstOfMonth, dayIndex = 0;\r\n            for (; dayNumber <= prevMonthDays; dayNumber++ , dayIndex++) {\r\n                days.appendChild(createDay(prevMonthDayClass, new Date(year, month - 1, dayNumber), dayNumber, dayIndex));\r\n            }\r\n            for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++ , dayIndex++) {\r\n                days.appendChild(createDay('', new Date(year, month, dayNumber), dayNumber, dayIndex));\r\n            }\r\n            for (var dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth &&\r\n                (self.config.showMonths === 1 || dayIndex % 7 !== 0); dayNum++ , dayIndex++) {\r\n                days.appendChild(createDay(nextMonthDayClass, new Date(year, month + 1, dayNum % daysInMonth), dayNum, dayIndex));\r\n            }\r\n            var dayContainer = createElement('div', 'dayContainer');\r\n            dayContainer.appendChild(days);\r\n            return dayContainer;\r\n        }\r\n        function buildDays() {\r\n            if (self.daysContainer === undefined) {\r\n                return;\r\n            }\r\n            clearNode(self.daysContainer);\r\n            if (self.weekNumbers)\r\n                clearNode(self.weekNumbers);\r\n            var frag = document.createDocumentFragment();\r\n            for (var i = 0; i < self.config.showMonths; i++) {\r\n                var d = new Date(self.currentYear, self.currentMonth, 1);\r\n                d.setMonth(self.currentMonth + i);\r\n                frag.appendChild(buildMonthDays(d.getFullYear(), d.getMonth()));\r\n            }\r\n            self.daysContainer.appendChild(frag);\r\n            self.days = self.daysContainer.firstChild;\r\n            if (self.config.mode === 'range' && self.selectedDates.length === 1) {\r\n                onMouseOver();\r\n            }\r\n        }\r\n        function buildMonth() {\r\n            var container = createElement('div', 'flatpickr-month');\r\n            var monthNavFragment = window.document.createDocumentFragment();\r\n            var monthElement = createElement('span', 'cur-month');\r\n            var yearInput = createNumberInput('cur-year', { tabindex: '-1' });\r\n            var yearElement = yearInput.childNodes[0];\r\n            yearElement.setAttribute('aria-label', self.l10n.yearAriaLabel);\r\n            if (self.config.minDate)\r\n                yearElement.setAttribute('data-min', self.config.minDate.getFullYear().toString());\r\n            if (self.config.maxDate) {\r\n                yearElement.setAttribute('data-max', self.config.maxDate.getFullYear().toString());\r\n                yearElement.disabled =\r\n                    !!self.config.minDate &&\r\n                    self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();\r\n            }\r\n            var currentMonth = createElement('div', 'flatpickr-current-month');\r\n            currentMonth.appendChild(monthElement);\r\n            currentMonth.appendChild(yearInput);\r\n            monthNavFragment.appendChild(currentMonth);\r\n            container.appendChild(monthNavFragment);\r\n            return {\r\n                container: container,\r\n                yearElement: yearElement,\r\n                monthElement: monthElement,\r\n            };\r\n        }\r\n        function buildMonths() {\r\n            clearNode(self.monthNav);\r\n            self.monthNav.appendChild(self.prevMonthNav);\r\n            for (var m = self.config.showMonths; m--;) {\r\n                var month = buildMonth();\r\n                self.yearElements.push(month.yearElement);\r\n                self.monthElements.push(month.monthElement);\r\n                self.monthNav.appendChild(month.container);\r\n            }\r\n            self.monthNav.appendChild(self.nextMonthNav);\r\n        }\r\n        function buildMonthNav() {\r\n            self.monthNav = createElement('div', 'flatpickr-months');\r\n            self.yearElements = [];\r\n            self.monthElements = [];\r\n            self.prevMonthNav = createElement('span', 'flatpickr-prev-month');\r\n            self.prevMonthNav.innerHTML = self.config.prevArrow;\r\n            self.nextMonthNav = createElement('span', 'flatpickr-next-month');\r\n            self.nextMonthNav.innerHTML = self.config.nextArrow;\r\n            buildMonths();\r\n            Object.defineProperty(self, '_hidePrevMonthArrow', {\r\n                get: function() { return self.__hidePrevMonthArrow; },\r\n                set: function(bool) {\r\n                    if (self.__hidePrevMonthArrow !== bool) {\r\n                        toggleClass(self.prevMonthNav, 'disabled', bool);\r\n                        self.__hidePrevMonthArrow = bool;\r\n                    }\r\n                },\r\n            });\r\n            Object.defineProperty(self, '_hideNextMonthArrow', {\r\n                get: function() { return self.__hideNextMonthArrow; },\r\n                set: function(bool) {\r\n                    if (self.__hideNextMonthArrow !== bool) {\r\n                        toggleClass(self.nextMonthNav, 'disabled', bool);\r\n                        self.__hideNextMonthArrow = bool;\r\n                    }\r\n                },\r\n            });\r\n            self.currentYearElement = self.yearElements[0];\r\n            updateNavigationCurrentMonth();\r\n            return self.monthNav;\r\n        }\r\n        function buildTime() {\r\n            self.calendarContainer.classList.add('hasTime');\r\n            if (self.config.noCalendar)\r\n                self.calendarContainer.classList.add('noCalendar');\r\n            self.timeContainer = createElement('div', 'flatpickr-time');\r\n            self.timeContainer.tabIndex = -1;\r\n            var separator = createElement('span', 'flatpickr-time-separator', ':');\r\n            var hourInput = createNumberInput('flatpickr-hour');\r\n            self.hourElement = hourInput.childNodes[0];\r\n            var minuteInput = createNumberInput('flatpickr-minute');\r\n            self.minuteElement = minuteInput.childNodes[0];\r\n            self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;\r\n            self.hourElement.value = pad(self.latestSelectedDateObj\r\n                ? self.latestSelectedDateObj.getHours()\r\n                : self.config.time_24hr\r\n                    ? self.config.defaultHour\r\n                    : military2ampm(self.config.defaultHour));\r\n            self.minuteElement.value = pad(self.latestSelectedDateObj\r\n                ? self.latestSelectedDateObj.getMinutes()\r\n                : self.config.defaultMinute);\r\n            self.hourElement.setAttribute('data-step', self.config.hourIncrement.toString());\r\n            self.minuteElement.setAttribute('data-step', self.config.minuteIncrement.toString());\r\n            self.hourElement.setAttribute('data-min', self.config.time_24hr ? '0' : '1');\r\n            self.hourElement.setAttribute('data-max', self.config.time_24hr ? '23' : '12');\r\n            self.minuteElement.setAttribute('data-min', '0');\r\n            self.minuteElement.setAttribute('data-max', '59');\r\n            self.timeContainer.appendChild(hourInput);\r\n            self.timeContainer.appendChild(separator);\r\n            self.timeContainer.appendChild(minuteInput);\r\n            if (self.config.time_24hr)\r\n                self.timeContainer.classList.add('time24hr');\r\n            if (self.config.enableSeconds) {\r\n                self.timeContainer.classList.add('hasSeconds');\r\n                var secondInput = createNumberInput('flatpickr-second');\r\n                self.secondElement = secondInput.childNodes[0];\r\n                self.secondElement.value = pad(self.latestSelectedDateObj\r\n                    ? self.latestSelectedDateObj.getSeconds()\r\n                    : self.config.defaultSeconds);\r\n                self.secondElement.setAttribute('data-step', self.minuteElement.getAttribute('data-step'));\r\n                self.secondElement.setAttribute('data-min', self.minuteElement.getAttribute('data-min'));\r\n                self.secondElement.setAttribute('data-max', self.minuteElement.getAttribute('data-max'));\r\n                self.timeContainer.appendChild(createElement('span', 'flatpickr-time-separator', ':'));\r\n                self.timeContainer.appendChild(secondInput);\r\n            }\r\n            if (!self.config.time_24hr) {\r\n                self.amPM = createElement('span', 'flatpickr-am-pm', self.l10n.amPM[int((self.latestSelectedDateObj\r\n                    ? self.hourElement.value\r\n                    : self.config.defaultHour) > 11)]);\r\n                self.amPM.title = self.l10n.toggleTitle;\r\n                self.amPM.tabIndex = -1;\r\n                self.timeContainer.appendChild(self.amPM);\r\n            }\r\n            return self.timeContainer;\r\n        }\r\n        function buildWeekdays() {\r\n            if (!self.weekdayContainer)\r\n                self.weekdayContainer = createElement('div', 'flatpickr-weekdays');\r\n            else\r\n                clearNode(self.weekdayContainer);\r\n            for (var i = self.config.showMonths; i--;) {\r\n                var container = createElement('div', 'flatpickr-weekdaycontainer');\r\n                self.weekdayContainer.appendChild(container);\r\n            }\r\n            updateWeekdays();\r\n            return self.weekdayContainer;\r\n        }\r\n        function updateWeekdays() {\r\n            var firstDayOfWeek = self.l10n.firstDayOfWeek;\r\n            var weekdays = self.l10n.weekdays.shorthand.slice();\r\n            if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {\r\n                weekdays = weekdays.splice(firstDayOfWeek, weekdays.length).concat(weekdays.splice(0, firstDayOfWeek));\r\n            }\r\n            for (var i = self.config.showMonths; i--;) {\r\n                self.weekdayContainer.children[i].innerHTML = '\\n      <span class=flatpickr-weekday>\\n        ' + weekdays.join('</span><span class=flatpickr-weekday>') + '\\n      </span>\\n      ';\r\n            }\r\n        }\r\n        function buildWeeks() {\r\n            self.calendarContainer.classList.add('hasWeeks');\r\n            var weekWrapper = createElement('div', 'flatpickr-weekwrapper');\r\n            weekWrapper.appendChild(createElement('span', 'flatpickr-weekday', self.l10n.weekAbbreviation));\r\n            var weekNumbers = createElement('div', 'flatpickr-weeks');\r\n            weekWrapper.appendChild(weekNumbers);\r\n            return {\r\n                weekWrapper: weekWrapper,\r\n                weekNumbers: weekNumbers,\r\n            };\r\n        }\r\n        function changeMonth(value, is_offset) {\r\n            if (is_offset === void 0) { is_offset = true; }\r\n            var delta = is_offset ? value : value - self.currentMonth;\r\n            if ((delta < 0 && self._hidePrevMonthArrow === true) ||\r\n                (delta > 0 && self._hideNextMonthArrow === true))\r\n                return;\r\n            self.currentMonth += delta;\r\n            if (self.currentMonth < 0 || self.currentMonth > 11) {\r\n                self.currentYear += self.currentMonth > 11 ? 1 : -1;\r\n                self.currentMonth = (self.currentMonth + 12) % 12;\r\n                triggerEvent('onYearChange');\r\n            }\r\n            buildDays();\r\n            triggerEvent('onMonthChange');\r\n            updateNavigationCurrentMonth();\r\n        }\r\n        function clear(triggerChangeEvent) {\r\n            if (triggerChangeEvent === void 0) { triggerChangeEvent = true; }\r\n            self.input.value = '';\r\n            if (self.altInput !== undefined)\r\n                self.altInput.value = '';\r\n            if (self.mobileInput !== undefined)\r\n                self.mobileInput.value = '';\r\n            self.selectedDates = [];\r\n            self.latestSelectedDateObj = undefined;\r\n            self.showTimeInput = false;\r\n            if (self.config.enableTime === true) {\r\n                setDefaultHours();\r\n            }\r\n            self.redraw();\r\n            if (triggerChangeEvent)\r\n                triggerEvent('onChange');\r\n        }\r\n        function close() {\r\n            self.isOpen = false;\r\n            if (!self.isMobile) {\r\n                self.calendarContainer.classList.remove('open');\r\n                self._input.classList.remove('active');\r\n            }\r\n            triggerEvent('onClose');\r\n        }\r\n        function destroy() {\r\n            if (self.config !== undefined)\r\n                triggerEvent('onDestroy');\r\n            for (var i = self._handlers.length; i--;) {\r\n                var h = self._handlers[i];\r\n                h.element.removeEventListener(h.event, h.handler, h.options);\r\n            }\r\n            self._handlers = [];\r\n            if (self.mobileInput) {\r\n                if (self.mobileInput.parentNode)\r\n                    self.mobileInput.parentNode.removeChild(self.mobileInput);\r\n                self.mobileInput = undefined;\r\n            }\r\n            else if (self.calendarContainer && self.calendarContainer.parentNode) {\r\n                if (self.config.static && self.calendarContainer.parentNode) {\r\n                    var wrapper = self.calendarContainer.parentNode;\r\n                    wrapper.lastChild && wrapper.removeChild(wrapper.lastChild);\r\n                    while (wrapper.firstChild)\r\n                        wrapper.parentNode.insertBefore(wrapper.firstChild, wrapper);\r\n                    wrapper.parentNode.removeChild(wrapper);\r\n                }\r\n                else\r\n                    self.calendarContainer.parentNode.removeChild(self.calendarContainer);\r\n            }\r\n            if (self.altInput) {\r\n                self.input.type = 'text';\r\n                if (self.altInput.parentNode)\r\n                    self.altInput.parentNode.removeChild(self.altInput);\r\n                delete self.altInput;\r\n            }\r\n            if (self.input) {\r\n                self.input.type = self.input._type;\r\n                self.input.classList.remove('flatpickr-input');\r\n                self.input.removeAttribute('readonly');\r\n                self.input.value = '';\r\n            }\r\n            [\r\n                '_showTimeInput',\r\n                'latestSelectedDateObj',\r\n                '_hideNextMonthArrow',\r\n                '_hidePrevMonthArrow',\r\n                '__hideNextMonthArrow',\r\n                '__hidePrevMonthArrow',\r\n                'isMobile',\r\n                'isOpen',\r\n                'selectedDateElem',\r\n                'minDateHasTime',\r\n                'maxDateHasTime',\r\n                'days',\r\n                'daysContainer',\r\n                '_input',\r\n                '_positionElement',\r\n                'innerContainer',\r\n                'rContainer',\r\n                'monthNav',\r\n                'todayDateElem',\r\n                'calendarContainer',\r\n                'weekdayContainer',\r\n                'prevMonthNav',\r\n                'nextMonthNav',\r\n                'currentMonthElement',\r\n                'currentYearElement',\r\n                'navigationCurrentMonth',\r\n                'selectedDateElem',\r\n                'config',\r\n            ].forEach(function(k) {\r\n                try {\r\n                    delete self[k];\r\n                }\r\n                catch (_) {\r\n                    // do nothing\r\n                }\r\n            });\r\n        }\r\n        function isCalendarElem(elem) {\r\n            if (self.config.appendTo && self.config.appendTo.contains(elem))\r\n                return true;\r\n            return self.calendarContainer.contains(elem);\r\n        }\r\n        function documentClick(e) {\r\n            if (self.isOpen && !self.config.inline) {\r\n                var isCalendarElement = isCalendarElem(e.target);\r\n                var isInput = e.target === self.input ||\r\n                    e.target === self.altInput ||\r\n                    self.element.contains(e.target) ||\r\n                    (e.path &&\r\n                        e.path.indexOf &&\r\n                        (~e.path.indexOf(self.input) ||\r\n                            ~e.path.indexOf(self.altInput)));\r\n                var lostFocus = e.type === 'blur'\r\n                    ? isInput &&\r\n                    e.relatedTarget &&\r\n                    !isCalendarElem(e.relatedTarget)\r\n                    : !isInput && !isCalendarElement;\r\n                var isIgnored = !self.config.ignoredFocusElements.some(function(elem) {\r\n                    return elem.contains(e.target);\r\n                });\r\n                if (lostFocus && isIgnored) {\r\n                    self.close();\r\n                    if (self.config.mode === 'range' && self.selectedDates.length === 1) {\r\n                        self.clear(false);\r\n                        self.redraw();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        function changeYear(newYear) {\r\n            if (!newYear ||\r\n                (self.config.minDate && newYear < self.config.minDate.getFullYear()) ||\r\n                (self.config.maxDate && newYear > self.config.maxDate.getFullYear()))\r\n                return;\r\n            var newYearNum = newYear, isNewYear = self.currentYear !== newYearNum;\r\n            self.currentYear = newYearNum || self.currentYear;\r\n            if (self.config.maxDate &&\r\n                self.currentYear === self.config.maxDate.getFullYear()) {\r\n                self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);\r\n            }\r\n            else if (self.config.minDate &&\r\n                self.currentYear === self.config.minDate.getFullYear()) {\r\n                self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);\r\n            }\r\n            if (isNewYear) {\r\n                self.redraw();\r\n                triggerEvent('onYearChange');\r\n            }\r\n        }\r\n        function isEnabled(date, timeless) {\r\n            if (timeless === void 0) { timeless = true; }\r\n            var dateToCheck = self.parseDate(date, undefined, timeless);\r\n            if ((self.config.minDate &&\r\n                dateToCheck &&\r\n                compareDates(dateToCheck, self.config.minDate, timeless !== undefined ? timeless : !self.minDateHasTime) < 0) ||\r\n                (self.config.maxDate &&\r\n                    dateToCheck &&\r\n                    compareDates(dateToCheck, self.config.maxDate, timeless !== undefined ? timeless : !self.maxDateHasTime) > 0))\r\n                return false;\r\n            if (self.config.enable.length === 0 && self.config.disable.length === 0)\r\n                return true;\r\n            if (dateToCheck === undefined)\r\n                return false;\r\n            var bool = self.config.enable.length > 0, array = bool ? self.config.enable : self.config.disable;\r\n            for (var i = 0, d = void 0; i < array.length; i++) {\r\n                d = array[i];\r\n                if (typeof d === 'function' &&\r\n                    d(dateToCheck))\r\n                    return bool;\r\n                else if (d instanceof Date &&\r\n                    dateToCheck !== undefined &&\r\n                    d.getTime() === dateToCheck.getTime())\r\n                    return bool;\r\n                else if (typeof d === 'string' && dateToCheck !== undefined) {\r\n                    var parsed = self.parseDate(d, undefined, true);\r\n                    return parsed && parsed.getTime() === dateToCheck.getTime()\r\n                        ? bool\r\n                        : !bool;\r\n                }\r\n                else if (typeof d === 'object' &&\r\n                    dateToCheck !== undefined &&\r\n                    d.from &&\r\n                    d.to &&\r\n                    dateToCheck.getTime() >= d.from.getTime() &&\r\n                    dateToCheck.getTime() <= d.to.getTime())\r\n                    return bool;\r\n            }\r\n            return !bool;\r\n        }\r\n        function isInView(elem) {\r\n            if (self.daysContainer !== undefined)\r\n                return (elem.className.indexOf('hidden') === -1 &&\r\n                    self.daysContainer.contains(elem));\r\n            return false;\r\n        }\r\n        function onKeyDown(e) {\r\n            var isInput = e.target === self._input;\r\n            var allowInput = self.config.allowInput;\r\n            var allowKeydown = self.isOpen && (!allowInput || !isInput);\r\n            var allowInlineKeydown = self.config.inline && isInput && !allowInput;\r\n            if (e.keyCode === 13 && isInput) {\r\n                if (allowInput) {\r\n                    self.setDate(self._input.value, true, e.target === self.altInput\r\n                        ? self.config.altFormat\r\n                        : self.config.dateFormat);\r\n                    return e.target.blur();\r\n                }\r\n                else\r\n                    self.open();\r\n            }\r\n            else if (isCalendarElem(e.target) ||\r\n                allowKeydown ||\r\n                allowInlineKeydown) {\r\n                var isTimeObj = !!self.timeContainer &&\r\n                    self.timeContainer.contains(e.target);\r\n                switch (e.keyCode) {\r\n                    case 13:\r\n                        if (isTimeObj)\r\n                            updateTime();\r\n                        else\r\n                            selectDate(e);\r\n                        break;\r\n                    case 27:\r\n                        e.preventDefault();\r\n                        focusAndClose();\r\n                        break;\r\n                    case 8:\r\n                    case 46:\r\n                        if (isInput && !self.config.allowInput) {\r\n                            e.preventDefault();\r\n                            self.clear();\r\n                        }\r\n                        break;\r\n                    case 37:\r\n                    case 39:\r\n                        if (!isTimeObj) {\r\n                            e.preventDefault();\r\n                            if (self.daysContainer !== undefined &&\r\n                                (allowInput === false || isInView(document.activeElement))) {\r\n                                var delta_1 = e.keyCode === 39 ? 1 : -1;\r\n                                if (!e.ctrlKey)\r\n                                    focusOnDay(undefined, delta_1);\r\n                                else {\r\n                                    changeMonth(delta_1);\r\n                                    focusOnDay(getFirstAvailableDay(1), 0);\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (self.hourElement)\r\n                            self.hourElement.focus();\r\n                        break;\r\n                    case 38:\r\n                    case 40:\r\n                        e.preventDefault();\r\n                        var delta = e.keyCode === 40 ? 1 : -1;\r\n                        if (self.daysContainer) {\r\n                            if (e.ctrlKey) {\r\n                                changeYear(self.currentYear - delta);\r\n                                focusOnDay(getFirstAvailableDay(1), 0);\r\n                            }\r\n                            else if (!isTimeObj)\r\n                                focusOnDay(undefined, delta * 7);\r\n                        }\r\n                        else if (self.config.enableTime) {\r\n                            if (!isTimeObj && self.hourElement)\r\n                                self.hourElement.focus();\r\n                            updateTime(e);\r\n                            self._debouncedChange();\r\n                        }\r\n                        break;\r\n                    case 9:\r\n                        if (!isTimeObj) {\r\n                            self.element.focus();\r\n                            break;\r\n                        }\r\n                        var elems = [\r\n                            self.hourElement,\r\n                            self.minuteElement,\r\n                            self.secondElement,\r\n                            self.amPM,\r\n                        ].filter(function(x) { return x; });\r\n                        var i = elems.indexOf(e.target);\r\n                        if (i !== -1) {\r\n                            var target = elems[i + (e.shiftKey ? -1 : 1)];\r\n                            if (target !== undefined) {\r\n                                e.preventDefault();\r\n                                target.focus();\r\n                            }\r\n                            else {\r\n                                self.element.focus();\r\n                            }\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            if (self.amPM !== undefined && e.target === self.amPM) {\r\n                switch (e.key) {\r\n                    case self.l10n.amPM[0].charAt(0):\r\n                    case self.l10n.amPM[0].charAt(0).toLowerCase():\r\n                        self.amPM.textContent = self.l10n.amPM[0];\r\n                        setHoursFromInputs();\r\n                        updateValue();\r\n                        break;\r\n                    case self.l10n.amPM[1].charAt(0):\r\n                    case self.l10n.amPM[1].charAt(0).toLowerCase():\r\n                        self.amPM.textContent = self.l10n.amPM[1];\r\n                        setHoursFromInputs();\r\n                        updateValue();\r\n                        break;\r\n                }\r\n            }\r\n            triggerEvent('onKeyDown', e);\r\n        }\r\n        function onMouseOver(elem) {\r\n            if (self.selectedDates.length !== 1 ||\r\n                (elem &&\r\n                    (!elem.classList.contains('flatpickr-day') ||\r\n                        elem.classList.contains('disabled'))))\r\n                return;\r\n            var hoverDate = elem ? elem.dateObj.getTime() : self.days.firstElementChild.dateObj.getTime(), initialDate = self.parseDate(self.selectedDates[0], undefined, true).getTime(), rangeStartDate = Math.min(hoverDate, self.selectedDates[0].getTime()), rangeEndDate = Math.max(hoverDate, self.selectedDates[0].getTime()), lastDate = self.daysContainer.lastChild\r\n                .lastChild.dateObj.getTime();\r\n            var containsDisabled = false;\r\n            var minRange = 0, maxRange = 0;\r\n            for (var t = rangeStartDate; t < lastDate; t += duration.DAY) {\r\n                if (!isEnabled(new Date(t), true)) {\r\n                    containsDisabled =\r\n                        containsDisabled || (t > rangeStartDate && t < rangeEndDate);\r\n                    if (t < initialDate && (!minRange || t > minRange))\r\n                        minRange = t;\r\n                    else if (t > initialDate && (!maxRange || t < maxRange))\r\n                        maxRange = t;\r\n                }\r\n            }\r\n            for (var m = 0; m < self.config.showMonths; m++) {\r\n                var month = self.daysContainer.children[m];\r\n                var prevMonth = self.daysContainer.children[m - 1];\r\n                var _loop_1 = function(i, l) {\r\n                    var dayElem = month.children[i], date = dayElem.dateObj;\r\n                    var timestamp = date.getTime();\r\n                    var outOfRange = (minRange > 0 && timestamp < minRange) ||\r\n                        (maxRange > 0 && timestamp > maxRange);\r\n                    if (outOfRange) {\r\n                        dayElem.classList.add('notAllowed');\r\n                        ['inRange', 'startRange', 'endRange'].forEach(function(c) {\r\n                            dayElem.classList.remove(c);\r\n                        });\r\n                        return 'continue';\r\n                    }\r\n                    else if (containsDisabled && !outOfRange)\r\n                        return 'continue';\r\n                    ['startRange', 'inRange', 'endRange', 'notAllowed'].forEach(function(c) {\r\n                        dayElem.classList.remove(c);\r\n                    });\r\n                    if (elem !== undefined) {\r\n                        elem.classList.add(hoverDate < self.selectedDates[0].getTime()\r\n                            ? 'startRange'\r\n                            : 'endRange');\r\n                        if (month.contains(elem) ||\r\n                            !(m > 0 &&\r\n                                prevMonth &&\r\n                                prevMonth.lastChild.dateObj.getTime() >= timestamp)) {\r\n                            if (initialDate < hoverDate && timestamp === initialDate)\r\n                                dayElem.classList.add('startRange');\r\n                            else if (initialDate > hoverDate && timestamp === initialDate)\r\n                                dayElem.classList.add('endRange');\r\n                            if (timestamp >= minRange &&\r\n                                (maxRange === 0 || timestamp <= maxRange) &&\r\n                                isBetween(timestamp, initialDate, hoverDate))\r\n                                dayElem.classList.add('inRange');\r\n                        }\r\n                    }\r\n                };\r\n                for (var i = 0, l = month.children.length; i < l; i++) {\r\n                    _loop_1(i, l);\r\n                }\r\n            }\r\n        }\r\n        function onResize() {\r\n            if (self.isOpen && !self.config.static && !self.config.inline)\r\n                positionCalendar();\r\n        }\r\n        function open(e, positionElement) {\r\n            if (positionElement === void 0) { positionElement = self._positionElement; }\r\n            if (self.isMobile === true) {\r\n                if (e) {\r\n                    e.preventDefault();\r\n                    e.target && e.target.blur();\r\n                }\r\n                if (self.mobileInput !== undefined) {\r\n                    self.mobileInput.focus();\r\n                    self.mobileInput.click();\r\n                }\r\n                triggerEvent('onOpen');\r\n                return;\r\n            }\r\n            if (self._input.disabled || self.config.inline)\r\n                return;\r\n            var wasOpen = self.isOpen;\r\n            self.isOpen = true;\r\n            if (!wasOpen) {\r\n                self.calendarContainer.classList.add('open');\r\n                self._input.classList.add('active');\r\n                triggerEvent('onOpen');\r\n                positionCalendar(positionElement);\r\n            }\r\n            if (self.config.enableTime === true && self.config.noCalendar === true) {\r\n                if (self.selectedDates.length === 0) {\r\n                    self.setDate(self.config.minDate !== undefined\r\n                        ? new Date(self.config.minDate.getTime())\r\n                        : new Date(), false);\r\n                    setDefaultHours();\r\n                    updateValue();\r\n                }\r\n                if (self.config.allowInput === false &&\r\n                    (e === undefined ||\r\n                        !self.timeContainer.contains(e.relatedTarget))) {\r\n                    setTimeout(function() { return self.hourElement.select(); }, 50);\r\n                }\r\n            }\r\n        }\r\n        function minMaxDateSetter(type) {\r\n            return function(date) {\r\n                var dateObj = (self.config['_' + type + 'Date'] = self.parseDate(date, self.config.dateFormat));\r\n                var inverseDateObj = self.config['_' + (type === 'min' ? 'max' : 'min') + 'Date'];\r\n                if (dateObj !== undefined) {\r\n                    self[type === 'min' ? 'minDateHasTime' : 'maxDateHasTime'] =\r\n                        dateObj.getHours() > 0 ||\r\n                        dateObj.getMinutes() > 0 ||\r\n                        dateObj.getSeconds() > 0;\r\n                }\r\n                if (self.selectedDates) {\r\n                    self.selectedDates = self.selectedDates.filter(function(d) { return isEnabled(d); });\r\n                    if (!self.selectedDates.length && type === 'min')\r\n                        setHoursFromDate(dateObj);\r\n                    updateValue();\r\n                }\r\n                if (self.daysContainer) {\r\n                    redraw();\r\n                    if (dateObj !== undefined)\r\n                        self.currentYearElement[type] = dateObj.getFullYear().toString();\r\n                    else\r\n                        self.currentYearElement.removeAttribute(type);\r\n                    self.currentYearElement.disabled =\r\n                        !!inverseDateObj &&\r\n                        dateObj !== undefined &&\r\n                        inverseDateObj.getFullYear() === dateObj.getFullYear();\r\n                }\r\n            };\r\n        }\r\n        function parseConfig() {\r\n            var boolOpts = [\r\n                'wrap',\r\n                'weekNumbers',\r\n                'allowInput',\r\n                'clickOpens',\r\n                'time_24hr',\r\n                'enableTime',\r\n                'noCalendar',\r\n                'altInput',\r\n                'shorthandCurrentMonth',\r\n                'inline',\r\n                'static',\r\n                'enableSeconds',\r\n                'disableMobile',\r\n            ];\r\n            var hooks = [\r\n                'onChange',\r\n                'onClose',\r\n                'onDayCreate',\r\n                'onDestroy',\r\n                'onKeyDown',\r\n                'onMonthChange',\r\n                'onOpen',\r\n                'onParseConfig',\r\n                'onReady',\r\n                'onValueUpdate',\r\n                'onYearChange',\r\n                'onPreCalendarPosition',\r\n            ];\r\n            var userConfig = __assign({}, instanceConfig, JSON.parse(JSON.stringify(element.dataset || {})));\r\n            var formats$$1 = {};\r\n            self.config.parseDate = userConfig.parseDate;\r\n            self.config.formatDate = userConfig.formatDate;\r\n            Object.defineProperty(self.config, 'enable', {\r\n                get: function() { return self.config._enable; },\r\n                set: function(dates) {\r\n                    self.config._enable = parseDateRules(dates);\r\n                },\r\n            });\r\n            Object.defineProperty(self.config, 'disable', {\r\n                get: function() { return self.config._disable; },\r\n                set: function(dates) {\r\n                    self.config._disable = parseDateRules(dates);\r\n                },\r\n            });\r\n            var timeMode = userConfig.mode === 'time';\r\n            if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {\r\n                formats$$1.dateFormat =\r\n                    userConfig.noCalendar || timeMode\r\n                        ? 'H:i' + (userConfig.enableSeconds ? ':S' : '')\r\n                        : flatpickr.defaultConfig.dateFormat +\r\n                        ' H:i' +\r\n                        (userConfig.enableSeconds ? ':S' : '');\r\n            }\r\n            if (userConfig.altInput &&\r\n                (userConfig.enableTime || timeMode) &&\r\n                !userConfig.altFormat) {\r\n                formats$$1.altFormat =\r\n                    userConfig.noCalendar || timeMode\r\n                        ? 'h:i' + (userConfig.enableSeconds ? ':S K' : ' K')\r\n                        : flatpickr.defaultConfig.altFormat +\r\n                        (' h:i' + (userConfig.enableSeconds ? ':S' : '') + ' K');\r\n            }\r\n            Object.defineProperty(self.config, 'minDate', {\r\n                get: function() { return self.config._minDate; },\r\n                set: minMaxDateSetter('min'),\r\n            });\r\n            Object.defineProperty(self.config, 'maxDate', {\r\n                get: function() { return self.config._maxDate; },\r\n                set: minMaxDateSetter('max'),\r\n            });\r\n            var minMaxTimeSetter = function(type) {\r\n                return function(val) {\r\n                    self.config[type === 'min' ? '_minTime' : '_maxTime'] = self.parseDate(val, 'H:i');\r\n                };\r\n            };\r\n            Object.defineProperty(self.config, 'minTime', {\r\n                get: function() { return self.config._minTime; },\r\n                set: minMaxTimeSetter('min'),\r\n            });\r\n            Object.defineProperty(self.config, 'maxTime', {\r\n                get: function() { return self.config._maxTime; },\r\n                set: minMaxTimeSetter('max'),\r\n            });\r\n            if (userConfig.mode === 'time') {\r\n                self.config.noCalendar = true;\r\n                self.config.enableTime = true;\r\n            }\r\n            Object.assign(self.config, formats$$1, userConfig);\r\n            var i;\r\n            for (i = 0; i < boolOpts.length; i++)\r\n                self.config[boolOpts[i]] =\r\n                    self.config[boolOpts[i]] === true ||\r\n                    self.config[boolOpts[i]] === 'true';\r\n            for (i = hooks.length; i--;) {\r\n                if (self.config[hooks[i]] !== undefined) {\r\n                    self.config[hooks[i]] = arrayify(self.config[hooks[i]] || []).map(bindToInstance);\r\n                }\r\n            }\r\n            self.isMobile =\r\n                !self.config.disableMobile &&\r\n                !self.config.inline &&\r\n                self.config.mode === 'single' &&\r\n                !self.config.disable.length &&\r\n                !self.config.enable.length &&\r\n                !self.config.weekNumbers &&\r\n                /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n            for (i = 0; i < self.config.plugins.length; i++) {\r\n                var pluginConf = self.config.plugins[i](self) || {};\r\n                for (var key in pluginConf) {\r\n                    if (~hooks.indexOf(key)) {\r\n                        self.config[key] = arrayify(pluginConf[key])\r\n                            .map(bindToInstance)\r\n                            .concat(self.config[key]);\r\n                    }\r\n                    else if (typeof userConfig[key] === 'undefined')\r\n                        self.config[key] = pluginConf[key];\r\n                }\r\n            }\r\n            triggerEvent('onParseConfig');\r\n        }\r\n        function setupLocale() {\r\n            if (typeof self.config.locale !== 'object' &&\r\n                typeof flatpickr.l10ns[self.config.locale] === 'undefined')\r\n                self.config.errorHandler(new Error('flatpickr: invalid locale ' + self.config.locale));\r\n            self.l10n = __assign({}, flatpickr.l10ns.default, (typeof self.config.locale === 'object'\r\n                ? self.config.locale\r\n                : self.config.locale !== 'default'\r\n                    ? flatpickr.l10ns[self.config.locale]\r\n                    : undefined));\r\n            tokenRegex.K = '(' + self.l10n.amPM[0] + '|' + self.l10n.amPM[1] + '|' + self.l10n.amPM[0].toLowerCase() + '|' + self.l10n.amPM[1].toLowerCase() + ')';\r\n            self.formatDate = createDateFormatter(self);\r\n            self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\r\n        }\r\n        function positionCalendar(customPositionElement) {\r\n            if (self.calendarContainer === undefined)\r\n                return;\r\n            triggerEvent('onPreCalendarPosition');\r\n            var positionElement = customPositionElement || self._positionElement;\r\n            var calendarHeight = Array.prototype.reduce.call(self.calendarContainer.children, function(acc, child) { return acc + child.offsetHeight; }, 0), calendarWidth = self.calendarContainer.offsetWidth, configPos = self.config.position.split(' '), configPosVertical = configPos[0], configPosHorizontal = configPos.length > 1 ? configPos[1] : null, inputBounds = positionElement.getBoundingClientRect(), distanceFromBottom = window.innerHeight - inputBounds.bottom, showOnTop = configPosVertical === 'above' ||\r\n                (configPosVertical !== 'below' &&\r\n                    distanceFromBottom < calendarHeight &&\r\n                    inputBounds.top > calendarHeight);\r\n            var top = window.pageYOffset +\r\n                inputBounds.top +\r\n                (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);\r\n            toggleClass(self.calendarContainer, 'arrowTop', !showOnTop);\r\n            toggleClass(self.calendarContainer, 'arrowBottom', showOnTop);\r\n            if (self.config.inline)\r\n                return;\r\n            var left = window.pageXOffset +\r\n                inputBounds.left -\r\n                (configPosHorizontal != null && configPosHorizontal === 'center'\r\n                    ? (calendarWidth - inputBounds.width) / 2\r\n                    : 0);\r\n            var right = window.document.body.offsetWidth - inputBounds.right;\r\n            var rightMost = left + calendarWidth > window.document.body.offsetWidth;\r\n            toggleClass(self.calendarContainer, 'rightMost', rightMost);\r\n            if (self.config.static)\r\n                return;\r\n            self.calendarContainer.style.top = top + 'px';\r\n            if (!rightMost) {\r\n                self.calendarContainer.style.left = left + 'px';\r\n                self.calendarContainer.style.right = 'auto';\r\n            }\r\n            else {\r\n                self.calendarContainer.style.left = 'auto';\r\n                self.calendarContainer.style.right = right + 'px';\r\n            }\r\n        }\r\n        function redraw() {\r\n            if (self.config.noCalendar || self.isMobile)\r\n                return;\r\n            updateNavigationCurrentMonth();\r\n            buildDays();\r\n        }\r\n        function focusAndClose() {\r\n            self._input.focus();\r\n            if (window.navigator.userAgent.indexOf('MSIE') !== -1 ||\r\n                navigator.msMaxTouchPoints !== undefined) {\r\n                setTimeout(self.close, 0);\r\n            }\r\n            else {\r\n                self.close();\r\n            }\r\n        }\r\n        function selectDate(e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            var isSelectable = function(day) {\r\n                return day.classList &&\r\n                    day.classList.contains('flatpickr-day') &&\r\n                    !day.classList.contains('disabled') &&\r\n                    !day.classList.contains('notAllowed');\r\n            };\r\n            var t = findParent(e.target, isSelectable);\r\n            if (t === undefined)\r\n                return;\r\n            var target = t;\r\n            var selectedDate = (self.latestSelectedDateObj = new Date(target.dateObj.getTime()));\r\n            var shouldChangeMonth = (selectedDate.getMonth() < self.currentMonth ||\r\n                selectedDate.getMonth() >\r\n                self.currentMonth + self.config.showMonths - 1) &&\r\n                self.config.mode !== 'range';\r\n            self.selectedDateElem = target;\r\n            if (self.config.mode === 'single')\r\n                self.selectedDates = [selectedDate];\r\n            else if (self.config.mode === 'multiple') {\r\n                var selectedIndex = isDateSelected(selectedDate);\r\n                if (selectedIndex)\r\n                    self.selectedDates.splice(parseInt(selectedIndex), 1);\r\n                else\r\n                    self.selectedDates.push(selectedDate);\r\n            }\r\n            else if (self.config.mode === 'range') {\r\n                if (self.selectedDates.length === 2)\r\n                    self.clear(false);\r\n                self.selectedDates.push(selectedDate);\r\n                if (compareDates(selectedDate, self.selectedDates[0], true) !== 0)\r\n                    self.selectedDates.sort(function(a, b) { return a.getTime() - b.getTime(); });\r\n            }\r\n            setHoursFromInputs();\r\n            if (shouldChangeMonth) {\r\n                var isNewYear = self.currentYear !== selectedDate.getFullYear();\r\n                self.currentYear = selectedDate.getFullYear();\r\n                self.currentMonth = selectedDate.getMonth();\r\n                if (isNewYear)\r\n                    triggerEvent('onYearChange');\r\n                triggerEvent('onMonthChange');\r\n            }\r\n            updateNavigationCurrentMonth();\r\n            buildDays();\r\n            updateValue();\r\n            if (self.config.enableTime)\r\n                setTimeout(function() { return (self.showTimeInput = true); }, 50);\r\n            if (!shouldChangeMonth &&\r\n                self.config.mode !== 'range' &&\r\n                self.config.showMonths === 1)\r\n                focusOnDayElem(target);\r\n            else\r\n                self.selectedDateElem && self.selectedDateElem.focus();\r\n            if (self.hourElement !== undefined)\r\n                setTimeout(function() { return self.hourElement !== undefined && self.hourElement.select(); }, 451);\r\n            if (self.config.closeOnSelect) {\r\n                var single = self.config.mode === 'single' && !self.config.enableTime;\r\n                var range = self.config.mode === 'range' &&\r\n                    self.selectedDates.length === 2 &&\r\n                    !self.config.enableTime;\r\n                if (single || range) {\r\n                    focusAndClose();\r\n                }\r\n            }\r\n            triggerChange();\r\n        }\r\n        var CALLBACKS = {\r\n            locale: [setupLocale, updateWeekdays],\r\n            showMonths: [buildMonths, setCalendarWidth, buildWeekdays],\r\n        };\r\n        function set(option, value) {\r\n            if (option !== null && typeof option === 'object')\r\n                Object.assign(self.config, option);\r\n            else {\r\n                self.config[option] = value;\r\n                if (CALLBACKS[option] !== undefined)\r\n                    CALLBACKS[option].forEach(function(x) { return x(); });\r\n            }\r\n            self.redraw();\r\n            jumpToDate();\r\n        }\r\n        function setSelectedDate(inputDate, format) {\r\n            var dates = [];\r\n            if (inputDate instanceof Array)\r\n                dates = inputDate.map(function(d) { return self.parseDate(d, format); });\r\n            else if (inputDate instanceof Date || typeof inputDate === 'number')\r\n                dates = [self.parseDate(inputDate, format)];\r\n            else if (typeof inputDate === 'string') {\r\n                switch (self.config.mode) {\r\n                    case 'single':\r\n                    case 'time':\r\n                        dates = [self.parseDate(inputDate, format)];\r\n                        break;\r\n                    case 'multiple':\r\n                        dates = inputDate\r\n                            .split(self.config.conjunction)\r\n                            .map(function(date) { return self.parseDate(date, format); });\r\n                        break;\r\n                    case 'range':\r\n                        dates = inputDate\r\n                            .split(self.l10n.rangeSeparator)\r\n                            .map(function(date) { return self.parseDate(date, format); });\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            else\r\n                self.config.errorHandler(new Error('Invalid date supplied: ' + JSON.stringify(inputDate)));\r\n            self.selectedDates = dates.filter(function(d) { return d instanceof Date && isEnabled(d, false); });\r\n            if (self.config.mode === 'range')\r\n                self.selectedDates.sort(function(a, b) { return a.getTime() - b.getTime(); });\r\n        }\r\n        function setDate(date, triggerChange, format) {\r\n            if (triggerChange === void 0) { triggerChange = false; }\r\n            if (format === void 0) { format = self.config.dateFormat; }\r\n            if ((date !== 0 && !date) || (date instanceof Array && date.length === 0))\r\n                return self.clear(triggerChange);\r\n            setSelectedDate(date, format);\r\n            self.showTimeInput = self.selectedDates.length > 0;\r\n            self.latestSelectedDateObj = self.selectedDates[0];\r\n            self.redraw();\r\n            jumpToDate();\r\n            setHoursFromDate();\r\n            updateValue(triggerChange);\r\n            if (triggerChange)\r\n                triggerEvent('onChange');\r\n        }\r\n        function parseDateRules(arr) {\r\n            return arr\r\n                .slice()\r\n                .map(function(rule) {\r\n                    if (typeof rule === 'string' ||\r\n                        typeof rule === 'number' ||\r\n                        rule instanceof Date) {\r\n                        return self.parseDate(rule, undefined, true);\r\n                    }\r\n                    else if (rule &&\r\n                        typeof rule === 'object' &&\r\n                        rule.from &&\r\n                        rule.to)\r\n                        return {\r\n                            from: self.parseDate(rule.from, undefined),\r\n                            to: self.parseDate(rule.to, undefined),\r\n                        };\r\n                    return rule;\r\n                })\r\n                .filter(function(x) { return x; });\r\n        }\r\n        function setupDates() {\r\n            self.selectedDates = [];\r\n            self.now = self.parseDate(self.config.now) || new Date();\r\n            var preloadedDate = self.config.defaultDate ||\r\n                ((self.input.nodeName === 'INPUT' ||\r\n                    self.input.nodeName === 'TEXTAREA') &&\r\n                    self.input.placeholder &&\r\n                    self.input.value === self.input.placeholder\r\n                    ? null\r\n                    : self.input.value);\r\n            if (preloadedDate)\r\n                setSelectedDate(preloadedDate, self.config.dateFormat);\r\n            var initialDate = self.selectedDates.length > 0\r\n                ? self.selectedDates[0]\r\n                : self.config.minDate &&\r\n                    self.config.minDate.getTime() > self.now.getTime()\r\n                    ? self.config.minDate\r\n                    : self.config.maxDate &&\r\n                        self.config.maxDate.getTime() < self.now.getTime()\r\n                        ? self.config.maxDate\r\n                        : self.now;\r\n            self.currentYear = initialDate.getFullYear();\r\n            self.currentMonth = initialDate.getMonth();\r\n            if (self.selectedDates.length > 0)\r\n                self.latestSelectedDateObj = self.selectedDates[0];\r\n            if (self.config.minTime !== undefined)\r\n                self.config.minTime = self.parseDate(self.config.minTime, 'H:i');\r\n            if (self.config.maxTime !== undefined)\r\n                self.config.maxTime = self.parseDate(self.config.maxTime, 'H:i');\r\n            self.minDateHasTime =\r\n                !!self.config.minDate &&\r\n                (self.config.minDate.getHours() > 0 ||\r\n                    self.config.minDate.getMinutes() > 0 ||\r\n                    self.config.minDate.getSeconds() > 0);\r\n            self.maxDateHasTime =\r\n                !!self.config.maxDate &&\r\n                (self.config.maxDate.getHours() > 0 ||\r\n                    self.config.maxDate.getMinutes() > 0 ||\r\n                    self.config.maxDate.getSeconds() > 0);\r\n            Object.defineProperty(self, 'showTimeInput', {\r\n                get: function() { return self._showTimeInput; },\r\n                set: function(bool) {\r\n                    self._showTimeInput = bool;\r\n                    if (self.calendarContainer)\r\n                        toggleClass(self.calendarContainer, 'showTimeInput', bool);\r\n                    self.isOpen && positionCalendar();\r\n                },\r\n            });\r\n        }\r\n        function setupInputs() {\r\n            self.input = self.config.wrap\r\n                ? element.querySelector('[data-input]')\r\n                : element;\r\n            if (!self.input) {\r\n                self.config.errorHandler(new Error('Invalid input element specified'));\r\n                return;\r\n            }\r\n            self.input._type = self.input.type;\r\n            self.input.type = 'text';\r\n            self.input.classList.add('flatpickr-input');\r\n            self._input = self.input;\r\n            if (self.config.altInput) {\r\n                self.altInput = createElement(self.input.nodeName, self.input.className + ' ' + self.config.altInputClass);\r\n                self._input = self.altInput;\r\n                self.altInput.placeholder = self.input.placeholder;\r\n                self.altInput.disabled = self.input.disabled;\r\n                self.altInput.required = self.input.required;\r\n                self.altInput.tabIndex = self.input.tabIndex;\r\n                self.altInput.type = 'text';\r\n                self.input.setAttribute('type', 'hidden');\r\n                if (!self.config.static && self.input.parentNode)\r\n                    self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);\r\n            }\r\n            if (!self.config.allowInput)\r\n                self._input.setAttribute('readonly', 'readonly');\r\n            self._positionElement = self.config.positionElement || self._input;\r\n        }\r\n        function setupMobile() {\r\n            var inputType = self.config.enableTime\r\n                ? self.config.noCalendar\r\n                    ? 'time'\r\n                    : 'datetime-local'\r\n                : 'date';\r\n            self.mobileInput = createElement('input', self.input.className + ' flatpickr-mobile');\r\n            self.mobileInput.step = self.input.getAttribute('step') || 'any';\r\n            self.mobileInput.tabIndex = 1;\r\n            self.mobileInput.type = inputType;\r\n            self.mobileInput.disabled = self.input.disabled;\r\n            self.mobileInput.required = self.input.required;\r\n            self.mobileInput.placeholder = self.input.placeholder;\r\n            self.mobileFormatStr =\r\n                inputType === 'datetime-local'\r\n                    ? 'Y-m-d\\\\TH:i:S'\r\n                    : inputType === 'date'\r\n                        ? 'Y-m-d'\r\n                        : 'H:i:S';\r\n            if (self.selectedDates.length > 0) {\r\n                self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);\r\n            }\r\n            if (self.config.minDate)\r\n                self.mobileInput.min = self.formatDate(self.config.minDate, 'Y-m-d');\r\n            if (self.config.maxDate)\r\n                self.mobileInput.max = self.formatDate(self.config.maxDate, 'Y-m-d');\r\n            self.input.type = 'hidden';\r\n            if (self.altInput !== undefined)\r\n                self.altInput.type = 'hidden';\r\n            try {\r\n                if (self.input.parentNode)\r\n                    self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);\r\n            }\r\n            catch (_a) {\r\n                // do nothing\r\n            }\r\n            bind(self.mobileInput, 'change', function(e) {\r\n                self.setDate(e.target.value, false, self.mobileFormatStr);\r\n                triggerEvent('onChange');\r\n                triggerEvent('onClose');\r\n            });\r\n        }\r\n        function toggle(e) {\r\n            if (self.isOpen === true)\r\n                return self.close();\r\n            self.open(e);\r\n        }\r\n        function triggerEvent(event, data) {\r\n            if (self.config === undefined)\r\n                return;\r\n            var hooks = self.config[event];\r\n            if (hooks !== undefined && hooks.length > 0) {\r\n                for (var i = 0; hooks[i] && i < hooks.length; i++)\r\n                    hooks[i](self.selectedDates, self.input.value, self, data);\r\n            }\r\n            if (event === 'onChange') {\r\n                self.input.dispatchEvent(createEvent('change'));\r\n                self.input.dispatchEvent(createEvent('input'));\r\n            }\r\n        }\r\n        function createEvent(name) {\r\n            var e = document.createEvent('Event');\r\n            e.initEvent(name, true, true);\r\n            return e;\r\n        }\r\n        function isDateSelected(date) {\r\n            for (var i = 0; i < self.selectedDates.length; i++) {\r\n                if (compareDates(self.selectedDates[i], date) === 0)\r\n                    return '' + i;\r\n            }\r\n            return false;\r\n        }\r\n        function isDateInRange(date) {\r\n            if (self.config.mode !== 'range' || self.selectedDates.length < 2)\r\n                return false;\r\n            return (compareDates(date, self.selectedDates[0]) >= 0 &&\r\n                compareDates(date, self.selectedDates[1]) <= 0);\r\n        }\r\n        function updateNavigationCurrentMonth() {\r\n            if (self.config.noCalendar || self.isMobile || !self.monthNav)\r\n                return;\r\n            self.yearElements.forEach(function(yearElement, i) {\r\n                var d = new Date(self.currentYear, self.currentMonth, 1);\r\n                d.setMonth(self.currentMonth + i);\r\n                self.monthElements[i].textContent =\r\n                    monthToStr(d.getMonth(), self.config.shorthandCurrentMonth, self.l10n) +\r\n                    ' ';\r\n                yearElement.value = d.getFullYear().toString();\r\n            });\r\n            self._hidePrevMonthArrow =\r\n                self.config.minDate !== undefined &&\r\n                (self.currentYear === self.config.minDate.getFullYear()\r\n                    ? self.currentMonth <= self.config.minDate.getMonth()\r\n                    : self.currentYear < self.config.minDate.getFullYear());\r\n            self._hideNextMonthArrow =\r\n                self.config.maxDate !== undefined &&\r\n                (self.currentYear === self.config.maxDate.getFullYear()\r\n                    ? self.currentMonth + 1 > self.config.maxDate.getMonth()\r\n                    : self.currentYear > self.config.maxDate.getFullYear());\r\n        }\r\n        function updateValue(triggerChange) {\r\n            if (triggerChange === void 0) { triggerChange = true; }\r\n            if (self.selectedDates.length === 0)\r\n                return self.clear(triggerChange);\r\n            if (self.mobileInput !== undefined && self.mobileFormatStr) {\r\n                self.mobileInput.value =\r\n                    self.latestSelectedDateObj !== undefined\r\n                        ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr)\r\n                        : '';\r\n            }\r\n            var joinChar = self.config.mode !== 'range'\r\n                ? self.config.conjunction\r\n                : self.l10n.rangeSeparator;\r\n            self.input.value = self.selectedDates\r\n                .map(function(dObj) { return self.formatDate(dObj, self.config.dateFormat); })\r\n                .join(joinChar);\r\n            if (self.altInput !== undefined) {\r\n                self.altInput.value = self.selectedDates\r\n                    .map(function(dObj) { return self.formatDate(dObj, self.config.altFormat); })\r\n                    .join(joinChar);\r\n            }\r\n            if (triggerChange !== false)\r\n                triggerEvent('onValueUpdate');\r\n        }\r\n        function onMonthNavClick(e) {\r\n            e.preventDefault();\r\n            var isPrevMonth = self.prevMonthNav.contains(e.target);\r\n            var isNextMonth = self.nextMonthNav.contains(e.target);\r\n            if (isPrevMonth || isNextMonth) {\r\n                changeMonth(isPrevMonth ? -1 : 1);\r\n            }\r\n            else if (self.yearElements.indexOf(e.target) >= 0) {\r\n                e.target.select();\r\n            }\r\n            else if (e.target.classList.contains('arrowUp')) {\r\n                self.changeYear(self.currentYear + 1);\r\n            }\r\n            else if (e.target.classList.contains('arrowDown')) {\r\n                self.changeYear(self.currentYear - 1);\r\n            }\r\n        }\r\n        function timeWrapper(e) {\r\n            e.preventDefault();\r\n            var isKeyDown = e.type === 'keydown', input = e.target;\r\n            if (self.amPM !== undefined && e.target === self.amPM) {\r\n                self.amPM.textContent =\r\n                    self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\r\n            }\r\n            var min = parseFloat(input.getAttribute('data-min')), max = parseFloat(input.getAttribute('data-max')), step = parseFloat(input.getAttribute('data-step')), curValue = parseInt(input.value, 10), delta = e.delta ||\r\n                (isKeyDown ? (e.which === 38 ? 1 : -1) : 0);\r\n            var newValue = curValue + step * delta;\r\n            if (typeof input.value !== 'undefined' && input.value.length === 2) {\r\n                var isHourElem = input === self.hourElement, isMinuteElem = input === self.minuteElement;\r\n                if (newValue < min) {\r\n                    newValue =\r\n                        max +\r\n                        newValue +\r\n                        int(!isHourElem) +\r\n                        (int(isHourElem) && int(!self.amPM));\r\n                    if (isMinuteElem)\r\n                        incrementNumInput(undefined, -1, self.hourElement);\r\n                }\r\n                else if (newValue > max) {\r\n                    newValue =\r\n                        input === self.hourElement ? newValue - max - int(!self.amPM) : min;\r\n                    if (isMinuteElem)\r\n                        incrementNumInput(undefined, 1, self.hourElement);\r\n                }\r\n                if (self.amPM &&\r\n                    isHourElem &&\r\n                    (step === 1\r\n                        ? newValue + curValue === 23\r\n                        : Math.abs(newValue - curValue) > step)) {\r\n                    self.amPM.textContent =\r\n                        self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\r\n                }\r\n                input.value = pad(newValue);\r\n            }\r\n        }\r\n        init();\r\n        return self;\r\n    }\r\n    function _flatpickr(nodeList, config) {\r\n        var nodes = Array.prototype.slice.call(nodeList);\r\n        var instances = [];\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            var node = nodes[i];\r\n            try {\r\n                if (node.getAttribute('data-fp-omit') !== null)\r\n                    continue;\r\n                if (node._flatpickr !== undefined) {\r\n                    node._flatpickr.destroy();\r\n                    node._flatpickr = undefined;\r\n                }\r\n                node._flatpickr = FlatpickrInstance(node, config || {});\r\n                instances.push(node._flatpickr);\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n        return instances.length === 1 ? instances[0] : instances;\r\n    }\r\n    if (typeof HTMLElement !== 'undefined') {\r\n        HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function(config) {\r\n            return _flatpickr(this, config);\r\n        };\r\n        HTMLElement.prototype.flatpickr = function(config) {\r\n            return _flatpickr([this], config);\r\n        };\r\n    }\r\n    var flatpickr = function(selector, config) {\r\n        if (selector instanceof NodeList)\r\n            return _flatpickr(selector, config);\r\n        else if (typeof selector === 'string')\r\n            return _flatpickr(window.document.querySelectorAll(selector), config);\r\n        return _flatpickr([selector], config);\r\n    };\r\n    flatpickr.defaultConfig = defaults;\r\n    flatpickr.l10ns = {\r\n        en: __assign({}, english),\r\n        default: __assign({}, english),\r\n    };\r\n    flatpickr.localize = function(l10n) {\r\n        flatpickr.l10ns.default = __assign({}, flatpickr.l10ns.default, l10n);\r\n    };\r\n    flatpickr.setDefaults = function(config) {\r\n        flatpickr.defaultConfig = __assign({}, flatpickr.defaultConfig, config);\r\n    };\r\n    flatpickr.parseDate = createDateParser({});\r\n    flatpickr.formatDate = createDateFormatter({});\r\n    flatpickr.compareDates = compareDates;\r\n    Date.prototype.fp_incr = function(days) {\r\n        return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === 'string' ? parseInt(days, 10) : days));\r\n    };\r\n    if (typeof window !== 'undefined') {\r\n        window.flatpickr = flatpickr;\r\n    }\r\n\r\n    return flatpickr;\r\n}());\r\n\r\n(function(global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\r\n        typeof define === 'function' && define.amd ? define(['exports'], factory) :\r\n            (factory((global.es = {})));\r\n}(this, (function(exports) {\r\n    'use strict';\r\n\r\n    var fp = typeof window !== 'undefined' && window.flatpickr !== undefined\r\n        ? window.flatpickr\r\n        : {\r\n            l10ns: {},\r\n        };\r\n    var Spanish = {\r\n        weekdays: {\r\n            shorthand: ['Dom', 'Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb'],\r\n            longhand: [\r\n                'Domingo',\r\n                'Lunes',\r\n                'Martes',\r\n                'Miércoles',\r\n                'Jueves',\r\n                'Viernes',\r\n                'Sábado',\r\n            ],\r\n        },\r\n        months: {\r\n            shorthand: [\r\n                'Ene',\r\n                'Feb',\r\n                'Mar',\r\n                'Abr',\r\n                'May',\r\n                'Jun',\r\n                'Jul',\r\n                'Ago',\r\n                'Sep',\r\n                'Oct',\r\n                'Nov',\r\n                'Dic',\r\n            ],\r\n            longhand: [\r\n                'Enero',\r\n                'Febrero',\r\n                'Marzo',\r\n                'Abril',\r\n                'Mayo',\r\n                'Junio',\r\n                'Julio',\r\n                'Agosto',\r\n                'Septiembre',\r\n                'Octubre',\r\n                'Noviembre',\r\n                'Diciembre',\r\n            ],\r\n        },\r\n        ordinal: function() {\r\n            return 'º';\r\n        },\r\n        firstDayOfWeek: 1,\r\n        rangeSeparator: ' a ',\r\n    };\r\n    fp.l10ns.es = Spanish;\r\n    var es = fp.l10ns;\r\n\r\n    exports.Spanish = Spanish;\r\n    exports.default = es;\r\n\r\n    Object.defineProperty(exports, '__esModule', { value: true });\r\n})));\r\n","/*!\r\n * JavaScript autoComplete v1.0.4\r\n * Copyright (c) 2014 Simon Steinberger / Pixabay\r\n * GitHub: https://github.com/Pixabay/JavaScript-autoComplete\r\n * License: http://www.opensource.org/licenses/mit-license.php\r\n */\r\n\r\n(function(root, factory) {\r\n    root.Autocomplete = factory(root.$);\r\n})(this, function($) {\r\n    'use strict';\r\n\r\n    function Autocomplete(options) {\r\n        // helpers\r\n\r\n        function live(elClass, event, cb, context) {\r\n            $.on(context || document, event, function(e) {\r\n                var found, el = e.target || e.srcElement;\r\n                while (el && !(found = $.hasClass(el, elClass))) {\r\n                    el = el.parentElement;\r\n                }\r\n                if (found) {\r\n                    cb.call(el, e);\r\n                }\r\n            });\r\n        }\r\n\r\n        var o = {\r\n            selector: 0,\r\n            source: 0,\r\n            minChars: 2,\r\n            delay: 250,\r\n            offsetLeft: 0,\r\n            offsetTop: 1,\r\n            cache: 1,\r\n            sourceData: null,\r\n            menuClass: '',\r\n            renderItem: function(item, search) {\r\n                // escape special characters\r\n                search = search.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n                var re = new RegExp('(' + search.split(' ').join('|') + ')', 'gi');\r\n                return '<div class=\"autocomplete-suggestion\" data-val=\"' + item + '\">' + item.replace(re, '<b>$1</b>') + '</div>';\r\n            },\r\n            onSelect: function(e, term, item) { }\r\n        };\r\n        for (var k in options) { if (options.hasOwnProperty(k)) o[k] = options[k]; }\r\n\r\n        // init\r\n        var elems = typeof o.selector == 'object' ? [o.selector] : document.querySelectorAll(o.selector);\r\n        for (var i = 0; i < elems.length; i++) {\r\n            var that = elems[i];\r\n\r\n            // create suggestions container \"sc\"\r\n            that.sc = document.createElement('div');\r\n            that.sc.className = 'autocomplete-suggestions ' + o.menuClass;\r\n\r\n            that.autocompleteAttr = that.getAttribute('autocomplete');\r\n            that.setAttribute('autocomplete', 'off');\r\n            that.cache = {};\r\n            that.last_val = '';\r\n\r\n            that.updateSC = function(resize, next) {\r\n                var rect = that.getBoundingClientRect();\r\n                that.sc.style.left = Math.round(rect.left + (window.pageXOffset || document.documentElement.scrollLeft) + o.offsetLeft) + 'px';\r\n                that.sc.style.top = Math.round(rect.bottom + (window.pageYOffset || document.documentElement.scrollTop) + o.offsetTop) + 'px';\r\n                that.sc.style.width = Math.round(rect.right - rect.left) + 'px'; // outerWidth\r\n                if (!resize) {\r\n                    that.sc.style.display = 'block';\r\n                    if (!that.sc.maxHeight) { that.sc.maxHeight = parseInt((window.getComputedStyle ? getComputedStyle(that.sc, null) : that.sc.currentStyle).maxHeight); }\r\n                    if (!that.sc.suggestionHeight) that.sc.suggestionHeight = that.sc.querySelector('.autocomplete-suggestion').offsetHeight;\r\n                    if (that.sc.suggestionHeight)\r\n                        if (!next) that.sc.scrollTop = 0;\r\n                        else {\r\n                            var scrTop = that.sc.scrollTop, selTop = next.getBoundingClientRect().top - that.sc.getBoundingClientRect().top;\r\n                            if (selTop + that.sc.suggestionHeight - that.sc.maxHeight > 0)\r\n                                that.sc.scrollTop = selTop + that.sc.suggestionHeight + scrTop - that.sc.maxHeight;\r\n                            else if (selTop < 0)\r\n                                that.sc.scrollTop = selTop + scrTop;\r\n                        }\r\n                }\r\n            };\r\n            $.on(window, 'resize', that.updateSC);\r\n            document.body.appendChild(that.sc);\r\n\r\n            live('autocomplete-suggestion', 'mouseleave', function() {\r\n                var sel = that.sc.querySelector('.autocomplete-suggestion.selected');\r\n                if (sel) setTimeout(function() { sel.className = sel.className.replace('selected', ''); }, 20);\r\n            }, that.sc);\r\n\r\n            live('autocomplete-suggestion', 'mouseover', function() {\r\n                var sel = that.sc.querySelector('.autocomplete-suggestion.selected');\r\n                if (sel) sel.className = sel.className.replace('selected', '');\r\n                this.className += ' selected';\r\n            }, that.sc);\r\n\r\n            live('autocomplete-suggestion', 'mousedown', function(e) {\r\n                if ($.hasClass(this, 'autocomplete-suggestion')) { // else outside click\r\n                    var v = this.getAttribute('data-val');\r\n                    that.value = v;\r\n                    o.onSelect(e, v, this);\r\n                    that.sc.style.display = 'none';\r\n                }\r\n            }, that.sc);\r\n\r\n            that.blurHandler = function() {\r\n                var over_sb;\r\n                try {\r\n                    over_sb = document.querySelector('.autocomplete-suggestions:hover');\r\n                } catch (e) {\r\n                    over_sb = 0;\r\n                }\r\n                if (!over_sb) {\r\n                    if (o.sourceData && o.sourceData.indexOf(that.value) === -1) {\r\n                        that.value = '';\r\n                    }\r\n                    that.last_val = that.value;\r\n                    that.sc.style.display = 'none';\r\n                    setTimeout(function() { that.sc.style.display = 'none'; }, 350); // hide suggestions on fast input\r\n                } else if (that !== document.activeElement) {\r\n                    setTimeout(function() { that.focus(); }, 20);\r\n                }\r\n            };\r\n            $.on(that, 'blur', that.blurHandler);\r\n\r\n            var suggest = function(data) {\r\n                var val = that.value;\r\n                that.cache[val] = data;\r\n                if (data.length && val.length >= o.minChars) {\r\n                    var s = '';\r\n                    for (var i = 0; i < data.length; i++) s += o.renderItem(data[i], val);\r\n                    that.sc.innerHTML = s;\r\n                    that.updateSC(0);\r\n                } else {\r\n                    that.sc.style.display = 'none';\r\n                }\r\n            };\r\n\r\n            var internalSource = function(sourceData, term, suggest) {\r\n                term = term.toLowerCase();\r\n                var matches = [];\r\n                for (i = 0; i < sourceData.length; i++) {\r\n                    if (~sourceData[i].toLowerCase().indexOf(term)) matches.push(sourceData[i]);\r\n                }\r\n                suggest(matches);\r\n            };\r\n\r\n            that.keydownHandler = function(e) {\r\n                var sel = that.sc.querySelector('.autocomplete-suggestion.selected');\r\n                var key = window.event ? e.keyCode : e.which;\r\n                // down (40), up (38)\r\n                if ((key === 40 || key === 38) && that.sc.innerHTML) {\r\n                    var next;\r\n                    if (!sel) {\r\n                        next = key === 40 ? that.sc.querySelector('.autocomplete-suggestion') : that.sc.childNodes[that.sc.childNodes.length - 1]; // first : last\r\n                        next.className += ' selected';\r\n                        that.value = next.getAttribute('data-val');\r\n                    } else {\r\n                        next = key === 40 ? sel.nextSibling : sel.previousSibling;\r\n                        if (next) {\r\n                            sel.className = sel.className.replace('selected', '');\r\n                            next.className += ' selected';\r\n                            that.value = next.getAttribute('data-val');\r\n                        } else {\r\n                            sel.className = sel.className.replace('selected', '');\r\n                            that.value = that.last_val;\r\n                            next = 0;\r\n                        }\r\n                    }\r\n                    that.updateSC(0, next);\r\n                    return false;\r\n                } else if (key === 27) {\r\n                    // esc\r\n                    that.value = '';\r\n                    that.sc.style.display = 'none';\r\n                } else if (key === 13 || key === 9) {\r\n                    // enter or tab\r\n                    if (sel && that.sc.style.display != 'none') {\r\n                        if (key === 13) {\r\n                            e.preventDefault();\r\n                        }\r\n                        that.value = sel.getAttribute('data-val');\r\n                        o.onSelect(e, sel.getAttribute('data-val'), sel);\r\n                        setTimeout(function() {\r\n                            that.sc.style.display = 'none';\r\n                        }, 20);\r\n                    } else {\r\n                        if (o.sourceData && o.sourceData.indexOf(that.value) === -1) {\r\n                            that.value = '';\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            $.on(that, 'keydown', that.keydownHandler);\r\n\r\n            that.keyupHandler = function(e) {\r\n                var key = window.event ? e.keyCode : e.which;\r\n                if (!key || (key < 35 || key > 40) && key != 13 && key != 27) {\r\n                    var val = that.value;\r\n                    if (val.length >= o.minChars) {\r\n                        if (val != that.last_val) {\r\n                            that.last_val = val;\r\n                            clearTimeout(that.timer);\r\n                            if (o.cache) {\r\n                                if (val in that.cache) { suggest(that.cache[val]); return; }\r\n                                // no requests if previous suggestions were empty\r\n                                for (var i = 1; i < val.length - o.minChars; i++) {\r\n                                    var part = val.slice(0, val.length - i);\r\n                                    if (part in that.cache && !that.cache[part].length) { suggest([]); return; }\r\n                                }\r\n                            }\r\n                            that.timer = setTimeout(o.sourceData ? internalSource.bind(null, o.sourceData, val, suggest) : o.source.bind(this, val, suggest), o.delay);\r\n                        }\r\n                    } else {\r\n                        that.last_val = val;\r\n                        that.sc.style.display = 'none';\r\n                    }\r\n                }\r\n            };\r\n            $.on(that, 'keyup', that.keyupHandler);\r\n\r\n            that.focusHandler = function(e) {\r\n                that.last_val = '\\n';\r\n                that.keyupHandler(e);\r\n            };\r\n            if (!o.minChars) {\r\n                $.on(that, 'focus', that.focusHandler);\r\n            }\r\n        }\r\n\r\n        // public destroy method\r\n        this.destroy = function() {\r\n            for (var i = 0; i < elems.length; i++) {\r\n                var that = elems[i];\r\n                $.off(window, 'resize', that.updateSC);\r\n                $.off(that, 'blur', that.blurHandler);\r\n                $.off(that, 'focus', that.focusHandler);\r\n                $.off(that, 'keydown', that.keydownHandler);\r\n                $.off(that, 'keyup', that.keyupHandler);\r\n                if (that.autocompleteAttr) {\r\n                    that.setAttribute('autocomplete', that.autocompleteAttr);\r\n                } else {\r\n                    that.removeAttribute('autocomplete');\r\n                }\r\n                document.body.removeChild(that.sc);\r\n                that = null;\r\n            }\r\n        };\r\n    }\r\n    return Autocomplete;\r\n});\r\n","/*!\r\n * Chart.js\r\n * http://chartjs.org/\r\n * Version: 2.7.1\r\n *\r\n * Copyright 2018 Chart.js Contributors\r\n * Released under the MIT license\r\n * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md\r\n */\r\n/* eslint-disable */\r\n(function(f) { if (typeof exports === \"object\" && typeof module !== \"undefined\") { module.exports = f() } else if (typeof define === \"function\" && define.amd) { define([], f) } else { var g; if (typeof window !== \"undefined\") { g = window } else if (typeof global !== \"undefined\") { g = global } else if (typeof self !== \"undefined\") { g = self } else { g = this } g.Chart = f() } })(function() {\r\n    var define, module, exports; return (function e(t, n, r) { function s(o, u) { if (!n[o]) { if (!t[o]) { var a = typeof require == \"function\" && require; if (!u && a) return a(o, !0); if (i) return i(o, !0); var f = new Error(\"Cannot find module '\" + o + \"'\"); throw f.code = \"MODULE_NOT_FOUND\", f } var l = n[o] = { exports: {} }; t[o][0].call(l.exports, function(e) { var n = t[o][1][e]; return s(n ? n : e) }, l, l.exports, e, t, n, r) } return n[o].exports } var i = typeof require == \"function\" && require; for (var o = 0; o < r.length; o++)s(r[o]); return s })({\r\n        1: [function(require, module, exports) {\r\n            /* MIT license */\r\n            var colorNames = require(5);\r\n\r\n            module.exports = {\r\n                getRgba: getRgba,\r\n                getHsla: getHsla,\r\n                getRgb: getRgb,\r\n                getHsl: getHsl,\r\n                getHwb: getHwb,\r\n                getAlpha: getAlpha,\r\n\r\n                hexString: hexString,\r\n                rgbString: rgbString,\r\n                rgbaString: rgbaString,\r\n                percentString: percentString,\r\n                percentaString: percentaString,\r\n                hslString: hslString,\r\n                hslaString: hslaString,\r\n                hwbString: hwbString,\r\n                keyword: keyword\r\n            }\r\n\r\n            function getRgba(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var abbr = /^#([a-fA-F0-9]{3})$/i,\r\n                    hex = /^#([a-fA-F0-9]{6})$/i,\r\n                    rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n                    per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n                    keyword = /(\\w+)/;\r\n\r\n                var rgb = [0, 0, 0],\r\n                    a = 1,\r\n                    match = string.match(abbr);\r\n                if (match) {\r\n                    match = match[1];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match[i] + match[i], 16);\r\n                    }\r\n                }\r\n                else if (match = string.match(hex)) {\r\n                    match = match[1];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n                    }\r\n                }\r\n                else if (match = string.match(rgba)) {\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match[i + 1]);\r\n                    }\r\n                    a = parseFloat(match[4]);\r\n                }\r\n                else if (match = string.match(per)) {\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n                    }\r\n                    a = parseFloat(match[4]);\r\n                }\r\n                else if (match = string.match(keyword)) {\r\n                    if (match[1] == \"transparent\") {\r\n                        return [0, 0, 0, 0];\r\n                    }\r\n                    rgb = colorNames[match[1]];\r\n                    if (!rgb) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                for (var i = 0; i < rgb.length; i++) {\r\n                    rgb[i] = scale(rgb[i], 0, 255);\r\n                }\r\n                if (!a && a != 0) {\r\n                    a = 1;\r\n                }\r\n                else {\r\n                    a = scale(a, 0, 1);\r\n                }\r\n                rgb[3] = a;\r\n                return rgb;\r\n            }\r\n\r\n            function getHsla(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n                var match = string.match(hsl);\r\n                if (match) {\r\n                    var alpha = parseFloat(match[4]);\r\n                    var h = scale(parseInt(match[1]), 0, 360),\r\n                        s = scale(parseFloat(match[2]), 0, 100),\r\n                        l = scale(parseFloat(match[3]), 0, 100),\r\n                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n                    return [h, s, l, a];\r\n                }\r\n            }\r\n\r\n            function getHwb(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n                var match = string.match(hwb);\r\n                if (match) {\r\n                    var alpha = parseFloat(match[4]);\r\n                    var h = scale(parseInt(match[1]), 0, 360),\r\n                        w = scale(parseFloat(match[2]), 0, 100),\r\n                        b = scale(parseFloat(match[3]), 0, 100),\r\n                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n                    return [h, w, b, a];\r\n                }\r\n            }\r\n\r\n            function getRgb(string) {\r\n                var rgba = getRgba(string);\r\n                return rgba && rgba.slice(0, 3);\r\n            }\r\n\r\n            function getHsl(string) {\r\n                var hsla = getHsla(string);\r\n                return hsla && hsla.slice(0, 3);\r\n            }\r\n\r\n            function getAlpha(string) {\r\n                var vals = getRgba(string);\r\n                if (vals) {\r\n                    return vals[3];\r\n                }\r\n                else if (vals = getHsla(string)) {\r\n                    return vals[3];\r\n                }\r\n                else if (vals = getHwb(string)) {\r\n                    return vals[3];\r\n                }\r\n            }\r\n\r\n            // generators\r\n            function hexString(rgb) {\r\n                return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n                    + hexDouble(rgb[2]);\r\n            }\r\n\r\n            function rgbString(rgba, alpha) {\r\n                if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n                    return rgbaString(rgba, alpha);\r\n                }\r\n                return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n            }\r\n\r\n            function rgbaString(rgba, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n                }\r\n                return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n                    + \", \" + alpha + \")\";\r\n            }\r\n\r\n            function percentString(rgba, alpha) {\r\n                if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n                    return percentaString(rgba, alpha);\r\n                }\r\n                var r = Math.round(rgba[0] / 255 * 100),\r\n                    g = Math.round(rgba[1] / 255 * 100),\r\n                    b = Math.round(rgba[2] / 255 * 100);\r\n\r\n                return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n            }\r\n\r\n            function percentaString(rgba, alpha) {\r\n                var r = Math.round(rgba[0] / 255 * 100),\r\n                    g = Math.round(rgba[1] / 255 * 100),\r\n                    b = Math.round(rgba[2] / 255 * 100);\r\n                return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n            }\r\n\r\n            function hslString(hsla, alpha) {\r\n                if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n                    return hslaString(hsla, alpha);\r\n                }\r\n                return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n            }\r\n\r\n            function hslaString(hsla, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n                }\r\n                return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n                    + alpha + \")\";\r\n            }\r\n\r\n            // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n            // (hwb have alpha optional & 1 is default value)\r\n            function hwbString(hwb, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n                }\r\n                return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n                    + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n            }\r\n\r\n            function keyword(rgb) {\r\n                return reverseNames[rgb.slice(0, 3)];\r\n            }\r\n\r\n            // helpers\r\n            function scale(num, min, max) {\r\n                return Math.min(Math.max(min, num), max);\r\n            }\r\n\r\n            function hexDouble(num) {\r\n                var str = num.toString(16).toUpperCase();\r\n                return (str.length < 2) ? \"0\" + str : str;\r\n            }\r\n\r\n            //create a list of reverse color names\r\n            var reverseNames = {};\r\n            for (var name in colorNames) {\r\n                reverseNames[colorNames[name]] = name;\r\n            }\r\n        }, { \"5\": 5 }], 2: [function(require, module, exports) {\r\n            /* MIT license */\r\n            var convert = require(4);\r\n            var string = require(1);\r\n\r\n            var Color = function(obj) {\r\n                if (obj instanceof Color) {\r\n                    return obj;\r\n                }\r\n                if (!(this instanceof Color)) {\r\n                    return new Color(obj);\r\n                }\r\n\r\n                this.valid = false;\r\n                this.values = {\r\n                    rgb: [0, 0, 0],\r\n                    hsl: [0, 0, 0],\r\n                    hsv: [0, 0, 0],\r\n                    hwb: [0, 0, 0],\r\n                    cmyk: [0, 0, 0, 0],\r\n                    alpha: 1\r\n                };\r\n\r\n                // parse Color() argument\r\n                var vals;\r\n                if (typeof obj === 'string') {\r\n                    vals = string.getRgba(obj);\r\n                    if (vals) {\r\n                        this.setValues('rgb', vals);\r\n                    } else if (vals = string.getHsla(obj)) {\r\n                        this.setValues('hsl', vals);\r\n                    } else if (vals = string.getHwb(obj)) {\r\n                        this.setValues('hwb', vals);\r\n                    }\r\n                } else if (typeof obj === 'object') {\r\n                    vals = obj;\r\n                    if (vals.r !== undefined || vals.red !== undefined) {\r\n                        this.setValues('rgb', vals);\r\n                    } else if (vals.l !== undefined || vals.lightness !== undefined) {\r\n                        this.setValues('hsl', vals);\r\n                    } else if (vals.v !== undefined || vals.value !== undefined) {\r\n                        this.setValues('hsv', vals);\r\n                    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\r\n                        this.setValues('hwb', vals);\r\n                    } else if (vals.c !== undefined || vals.cyan !== undefined) {\r\n                        this.setValues('cmyk', vals);\r\n                    }\r\n                }\r\n            };\r\n\r\n            Color.prototype = {\r\n                isValid: function() {\r\n                    return this.valid;\r\n                },\r\n                rgb: function() {\r\n                    return this.setSpace('rgb', arguments);\r\n                },\r\n                hsl: function() {\r\n                    return this.setSpace('hsl', arguments);\r\n                },\r\n                hsv: function() {\r\n                    return this.setSpace('hsv', arguments);\r\n                },\r\n                hwb: function() {\r\n                    return this.setSpace('hwb', arguments);\r\n                },\r\n                cmyk: function() {\r\n                    return this.setSpace('cmyk', arguments);\r\n                },\r\n\r\n                rgbArray: function() {\r\n                    return this.values.rgb;\r\n                },\r\n                hslArray: function() {\r\n                    return this.values.hsl;\r\n                },\r\n                hsvArray: function() {\r\n                    return this.values.hsv;\r\n                },\r\n                hwbArray: function() {\r\n                    var values = this.values;\r\n                    if (values.alpha !== 1) {\r\n                        return values.hwb.concat([values.alpha]);\r\n                    }\r\n                    return values.hwb;\r\n                },\r\n                cmykArray: function() {\r\n                    return this.values.cmyk;\r\n                },\r\n                rgbaArray: function() {\r\n                    var values = this.values;\r\n                    return values.rgb.concat([values.alpha]);\r\n                },\r\n                hslaArray: function() {\r\n                    var values = this.values;\r\n                    return values.hsl.concat([values.alpha]);\r\n                },\r\n                alpha: function(val) {\r\n                    if (val === undefined) {\r\n                        return this.values.alpha;\r\n                    }\r\n                    this.setValues('alpha', val);\r\n                    return this;\r\n                },\r\n\r\n                red: function(val) {\r\n                    return this.setChannel('rgb', 0, val);\r\n                },\r\n                green: function(val) {\r\n                    return this.setChannel('rgb', 1, val);\r\n                },\r\n                blue: function(val) {\r\n                    return this.setChannel('rgb', 2, val);\r\n                },\r\n                hue: function(val) {\r\n                    if (val) {\r\n                        val %= 360;\r\n                        val = val < 0 ? 360 + val : val;\r\n                    }\r\n                    return this.setChannel('hsl', 0, val);\r\n                },\r\n                saturation: function(val) {\r\n                    return this.setChannel('hsl', 1, val);\r\n                },\r\n                lightness: function(val) {\r\n                    return this.setChannel('hsl', 2, val);\r\n                },\r\n                saturationv: function(val) {\r\n                    return this.setChannel('hsv', 1, val);\r\n                },\r\n                whiteness: function(val) {\r\n                    return this.setChannel('hwb', 1, val);\r\n                },\r\n                blackness: function(val) {\r\n                    return this.setChannel('hwb', 2, val);\r\n                },\r\n                value: function(val) {\r\n                    return this.setChannel('hsv', 2, val);\r\n                },\r\n                cyan: function(val) {\r\n                    return this.setChannel('cmyk', 0, val);\r\n                },\r\n                magenta: function(val) {\r\n                    return this.setChannel('cmyk', 1, val);\r\n                },\r\n                yellow: function(val) {\r\n                    return this.setChannel('cmyk', 2, val);\r\n                },\r\n                black: function(val) {\r\n                    return this.setChannel('cmyk', 3, val);\r\n                },\r\n\r\n                hexString: function() {\r\n                    return string.hexString(this.values.rgb);\r\n                },\r\n                rgbString: function() {\r\n                    return string.rgbString(this.values.rgb, this.values.alpha);\r\n                },\r\n                rgbaString: function() {\r\n                    return string.rgbaString(this.values.rgb, this.values.alpha);\r\n                },\r\n                percentString: function() {\r\n                    return string.percentString(this.values.rgb, this.values.alpha);\r\n                },\r\n                hslString: function() {\r\n                    return string.hslString(this.values.hsl, this.values.alpha);\r\n                },\r\n                hslaString: function() {\r\n                    return string.hslaString(this.values.hsl, this.values.alpha);\r\n                },\r\n                hwbString: function() {\r\n                    return string.hwbString(this.values.hwb, this.values.alpha);\r\n                },\r\n                keyword: function() {\r\n                    return string.keyword(this.values.rgb, this.values.alpha);\r\n                },\r\n\r\n                rgbNumber: function() {\r\n                    var rgb = this.values.rgb;\r\n                    return (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\r\n                },\r\n\r\n                luminosity: function() {\r\n                    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n                    var rgb = this.values.rgb;\r\n                    var lum = [];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        var chan = rgb[i] / 255;\r\n                        lum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\r\n                    }\r\n                    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n                },\r\n\r\n                contrast: function(color2) {\r\n                    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n                    var lum1 = this.luminosity();\r\n                    var lum2 = color2.luminosity();\r\n                    if (lum1 > lum2) {\r\n                        return (lum1 + 0.05) / (lum2 + 0.05);\r\n                    }\r\n                    return (lum2 + 0.05) / (lum1 + 0.05);\r\n                },\r\n\r\n                level: function(color2) {\r\n                    var contrastRatio = this.contrast(color2);\r\n                    if (contrastRatio >= 7.1) {\r\n                        return 'AAA';\r\n                    }\r\n\r\n                    return (contrastRatio >= 4.5) ? 'AA' : '';\r\n                },\r\n\r\n                dark: function() {\r\n                    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\r\n                    var rgb = this.values.rgb;\r\n                    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\r\n                    return yiq < 128;\r\n                },\r\n\r\n                light: function() {\r\n                    return !this.dark();\r\n                },\r\n\r\n                negate: function() {\r\n                    var rgb = [];\r\n                    for (var i = 0; i < 3; i++) {\r\n                        rgb[i] = 255 - this.values.rgb[i];\r\n                    }\r\n                    this.setValues('rgb', rgb);\r\n                    return this;\r\n                },\r\n\r\n                lighten: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[2] += hsl[2] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                darken: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[2] -= hsl[2] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                saturate: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[1] += hsl[1] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                desaturate: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[1] -= hsl[1] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                whiten: function(ratio) {\r\n                    var hwb = this.values.hwb;\r\n                    hwb[1] += hwb[1] * ratio;\r\n                    this.setValues('hwb', hwb);\r\n                    return this;\r\n                },\r\n\r\n                blacken: function(ratio) {\r\n                    var hwb = this.values.hwb;\r\n                    hwb[2] += hwb[2] * ratio;\r\n                    this.setValues('hwb', hwb);\r\n                    return this;\r\n                },\r\n\r\n                greyscale: function() {\r\n                    var rgb = this.values.rgb;\r\n                    // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\r\n                    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\r\n                    this.setValues('rgb', [val, val, val]);\r\n                    return this;\r\n                },\r\n\r\n                clearer: function(ratio) {\r\n                    var alpha = this.values.alpha;\r\n                    this.setValues('alpha', alpha - (alpha * ratio));\r\n                    return this;\r\n                },\r\n\r\n                opaquer: function(ratio) {\r\n                    var alpha = this.values.alpha;\r\n                    this.setValues('alpha', alpha + (alpha * ratio));\r\n                    return this;\r\n                },\r\n\r\n                rotate: function(degrees) {\r\n                    var hsl = this.values.hsl;\r\n                    var hue = (hsl[0] + degrees) % 360;\r\n                    hsl[0] = hue < 0 ? 360 + hue : hue;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                /**\r\n                 * Ported from sass implementation in C\r\n                 * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\r\n                 */\r\n                mix: function(mixinColor, weight) {\r\n                    var color1 = this;\r\n                    var color2 = mixinColor;\r\n                    var p = weight === undefined ? 0.5 : weight;\r\n\r\n                    var w = 2 * p - 1;\r\n                    var a = color1.alpha() - color2.alpha();\r\n\r\n                    var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n                    var w2 = 1 - w1;\r\n\r\n                    return this\r\n                        .rgb(\r\n                        w1 * color1.red() + w2 * color2.red(),\r\n                        w1 * color1.green() + w2 * color2.green(),\r\n                        w1 * color1.blue() + w2 * color2.blue()\r\n                        )\r\n                        .alpha(color1.alpha() * p + color2.alpha() * (1 - p));\r\n                },\r\n\r\n                toJSON: function() {\r\n                    return this.rgb();\r\n                },\r\n\r\n                clone: function() {\r\n                    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\r\n                    // making the final build way to big to embed in Chart.js. So let's do it manually,\r\n                    // assuming that values to clone are 1 dimension arrays containing only numbers,\r\n                    // except 'alpha' which is a number.\r\n                    var result = new Color();\r\n                    var source = this.values;\r\n                    var target = result.values;\r\n                    var value, type;\r\n\r\n                    for (var prop in source) {\r\n                        if (source.hasOwnProperty(prop)) {\r\n                            value = source[prop];\r\n                            type = ({}).toString.call(value);\r\n                            if (type === '[object Array]') {\r\n                                target[prop] = value.slice(0);\r\n                            } else if (type === '[object Number]') {\r\n                                target[prop] = value;\r\n                            } else {\r\n                                console.error('unexpected color value:', value);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return result;\r\n                }\r\n            };\r\n\r\n            Color.prototype.spaces = {\r\n                rgb: ['red', 'green', 'blue'],\r\n                hsl: ['hue', 'saturation', 'lightness'],\r\n                hsv: ['hue', 'saturation', 'value'],\r\n                hwb: ['hue', 'whiteness', 'blackness'],\r\n                cmyk: ['cyan', 'magenta', 'yellow', 'black']\r\n            };\r\n\r\n            Color.prototype.maxes = {\r\n                rgb: [255, 255, 255],\r\n                hsl: [360, 100, 100],\r\n                hsv: [360, 100, 100],\r\n                hwb: [360, 100, 100],\r\n                cmyk: [100, 100, 100, 100]\r\n            };\r\n\r\n            Color.prototype.getValues = function(space) {\r\n                var values = this.values;\r\n                var vals = {};\r\n\r\n                for (var i = 0; i < space.length; i++) {\r\n                    vals[space.charAt(i)] = values[space][i];\r\n                }\r\n\r\n                if (values.alpha !== 1) {\r\n                    vals.a = values.alpha;\r\n                }\r\n\r\n                // {r: 255, g: 255, b: 255, a: 0.4}\r\n                return vals;\r\n            };\r\n\r\n            Color.prototype.setValues = function(space, vals) {\r\n                var values = this.values;\r\n                var spaces = this.spaces;\r\n                var maxes = this.maxes;\r\n                var alpha = 1;\r\n                var i;\r\n\r\n                this.valid = true;\r\n\r\n                if (space === 'alpha') {\r\n                    alpha = vals;\r\n                } else if (vals.length) {\r\n                    // [10, 10, 10]\r\n                    values[space] = vals.slice(0, space.length);\r\n                    alpha = vals[space.length];\r\n                } else if (vals[space.charAt(0)] !== undefined) {\r\n                    // {r: 10, g: 10, b: 10}\r\n                    for (i = 0; i < space.length; i++) {\r\n                        values[space][i] = vals[space.charAt(i)];\r\n                    }\r\n\r\n                    alpha = vals.a;\r\n                } else if (vals[spaces[space][0]] !== undefined) {\r\n                    // {red: 10, green: 10, blue: 10}\r\n                    var chans = spaces[space];\r\n\r\n                    for (i = 0; i < space.length; i++) {\r\n                        values[space][i] = vals[chans[i]];\r\n                    }\r\n\r\n                    alpha = vals.alpha;\r\n                }\r\n\r\n                values.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\r\n\r\n                if (space === 'alpha') {\r\n                    return false;\r\n                }\r\n\r\n                var capped;\r\n\r\n                // cap values of the space prior converting all values\r\n                for (i = 0; i < space.length; i++) {\r\n                    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\r\n                    values[space][i] = Math.round(capped);\r\n                }\r\n\r\n                // convert to all the other color spaces\r\n                for (var sname in spaces) {\r\n                    if (sname !== space) {\r\n                        values[sname] = convert[space][sname](values[space]);\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            };\r\n\r\n            Color.prototype.setSpace = function(space, args) {\r\n                var vals = args[0];\r\n\r\n                if (vals === undefined) {\r\n                    // color.rgb()\r\n                    return this.getValues(space);\r\n                }\r\n\r\n                // color.rgb(10, 10, 10)\r\n                if (typeof vals === 'number') {\r\n                    vals = Array.prototype.slice.call(args);\r\n                }\r\n\r\n                this.setValues(space, vals);\r\n                return this;\r\n            };\r\n\r\n            Color.prototype.setChannel = function(space, index, val) {\r\n                var svalues = this.values[space];\r\n                if (val === undefined) {\r\n                    // color.red()\r\n                    return svalues[index];\r\n                } else if (val === svalues[index]) {\r\n                    // color.red(color.red())\r\n                    return this;\r\n                }\r\n\r\n                // color.red(100)\r\n                svalues[index] = val;\r\n                this.setValues(space, svalues);\r\n\r\n                return this;\r\n            };\r\n\r\n            if (typeof window !== 'undefined') {\r\n                window.Color = Color;\r\n            }\r\n\r\n            module.exports = Color;\r\n        }, { \"1\": 1, \"4\": 4 }], 3: [function(require, module, exports) {\r\n            /* MIT license */\r\n\r\n            module.exports = {\r\n                rgb2hsl: rgb2hsl,\r\n                rgb2hsv: rgb2hsv,\r\n                rgb2hwb: rgb2hwb,\r\n                rgb2cmyk: rgb2cmyk,\r\n                rgb2keyword: rgb2keyword,\r\n                rgb2xyz: rgb2xyz,\r\n                rgb2lab: rgb2lab,\r\n                rgb2lch: rgb2lch,\r\n\r\n                hsl2rgb: hsl2rgb,\r\n                hsl2hsv: hsl2hsv,\r\n                hsl2hwb: hsl2hwb,\r\n                hsl2cmyk: hsl2cmyk,\r\n                hsl2keyword: hsl2keyword,\r\n\r\n                hsv2rgb: hsv2rgb,\r\n                hsv2hsl: hsv2hsl,\r\n                hsv2hwb: hsv2hwb,\r\n                hsv2cmyk: hsv2cmyk,\r\n                hsv2keyword: hsv2keyword,\r\n\r\n                hwb2rgb: hwb2rgb,\r\n                hwb2hsl: hwb2hsl,\r\n                hwb2hsv: hwb2hsv,\r\n                hwb2cmyk: hwb2cmyk,\r\n                hwb2keyword: hwb2keyword,\r\n\r\n                cmyk2rgb: cmyk2rgb,\r\n                cmyk2hsl: cmyk2hsl,\r\n                cmyk2hsv: cmyk2hsv,\r\n                cmyk2hwb: cmyk2hwb,\r\n                cmyk2keyword: cmyk2keyword,\r\n\r\n                keyword2rgb: keyword2rgb,\r\n                keyword2hsl: keyword2hsl,\r\n                keyword2hsv: keyword2hsv,\r\n                keyword2hwb: keyword2hwb,\r\n                keyword2cmyk: keyword2cmyk,\r\n                keyword2lab: keyword2lab,\r\n                keyword2xyz: keyword2xyz,\r\n\r\n                xyz2rgb: xyz2rgb,\r\n                xyz2lab: xyz2lab,\r\n                xyz2lch: xyz2lch,\r\n\r\n                lab2xyz: lab2xyz,\r\n                lab2rgb: lab2rgb,\r\n                lab2lch: lab2lch,\r\n\r\n                lch2lab: lch2lab,\r\n                lch2xyz: lch2xyz,\r\n                lch2rgb: lch2rgb\r\n            }\r\n\r\n            function rgb2hsl(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255,\r\n                    min = Math.min(r, g, b),\r\n                    max = Math.max(r, g, b),\r\n                    delta = max - min,\r\n                    h, s, l;\r\n\r\n                if (max == min)\r\n                    h = 0;\r\n                else if (r == max)\r\n                    h = (g - b) / delta;\r\n                else if (g == max)\r\n                    h = 2 + (b - r) / delta;\r\n                else if (b == max)\r\n                    h = 4 + (r - g) / delta;\r\n\r\n                h = Math.min(h * 60, 360);\r\n\r\n                if (h < 0)\r\n                    h += 360;\r\n\r\n                l = (min + max) / 2;\r\n\r\n                if (max == min)\r\n                    s = 0;\r\n                else if (l <= 0.5)\r\n                    s = delta / (max + min);\r\n                else\r\n                    s = delta / (2 - max - min);\r\n\r\n                return [h, s * 100, l * 100];\r\n            }\r\n\r\n            function rgb2hsv(rgb) {\r\n                var r = rgb[0],\r\n                    g = rgb[1],\r\n                    b = rgb[2],\r\n                    min = Math.min(r, g, b),\r\n                    max = Math.max(r, g, b),\r\n                    delta = max - min,\r\n                    h, s, v;\r\n\r\n                if (max == 0)\r\n                    s = 0;\r\n                else\r\n                    s = (delta / max * 1000) / 10;\r\n\r\n                if (max == min)\r\n                    h = 0;\r\n                else if (r == max)\r\n                    h = (g - b) / delta;\r\n                else if (g == max)\r\n                    h = 2 + (b - r) / delta;\r\n                else if (b == max)\r\n                    h = 4 + (r - g) / delta;\r\n\r\n                h = Math.min(h * 60, 360);\r\n\r\n                if (h < 0)\r\n                    h += 360;\r\n\r\n                v = ((max / 255) * 1000) / 10;\r\n\r\n                return [h, s, v];\r\n            }\r\n\r\n            function rgb2hwb(rgb) {\r\n                var r = rgb[0],\r\n                    g = rgb[1],\r\n                    b = rgb[2],\r\n                    h = rgb2hsl(rgb)[0],\r\n                    w = 1 / 255 * Math.min(r, Math.min(g, b)),\r\n                    b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\r\n\r\n                return [h, w * 100, b * 100];\r\n            }\r\n\r\n            function rgb2cmyk(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255,\r\n                    c, m, y, k;\r\n\r\n                k = Math.min(1 - r, 1 - g, 1 - b);\r\n                c = (1 - r - k) / (1 - k) || 0;\r\n                m = (1 - g - k) / (1 - k) || 0;\r\n                y = (1 - b - k) / (1 - k) || 0;\r\n                return [c * 100, m * 100, y * 100, k * 100];\r\n            }\r\n\r\n            function rgb2keyword(rgb) {\r\n                return reverseKeywords[JSON.stringify(rgb)];\r\n            }\r\n\r\n            function rgb2xyz(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255;\r\n\r\n                // assume sRGB\r\n                r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\r\n                g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\r\n                b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\r\n\r\n                var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\r\n                var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\r\n                var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\r\n\r\n                return [x * 100, y * 100, z * 100];\r\n            }\r\n\r\n            function rgb2lab(rgb) {\r\n                var xyz = rgb2xyz(rgb),\r\n                    x = xyz[0],\r\n                    y = xyz[1],\r\n                    z = xyz[2],\r\n                    l, a, b;\r\n\r\n                x /= 95.047;\r\n                y /= 100;\r\n                z /= 108.883;\r\n\r\n                x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\r\n                y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\r\n                z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\r\n\r\n                l = (116 * y) - 16;\r\n                a = 500 * (x - y);\r\n                b = 200 * (y - z);\r\n\r\n                return [l, a, b];\r\n            }\r\n\r\n            function rgb2lch(args) {\r\n                return lab2lch(rgb2lab(args));\r\n            }\r\n\r\n            function hsl2rgb(hsl) {\r\n                var h = hsl[0] / 360,\r\n                    s = hsl[1] / 100,\r\n                    l = hsl[2] / 100,\r\n                    t1, t2, t3, rgb, val;\r\n\r\n                if (s == 0) {\r\n                    val = l * 255;\r\n                    return [val, val, val];\r\n                }\r\n\r\n                if (l < 0.5)\r\n                    t2 = l * (1 + s);\r\n                else\r\n                    t2 = l + s - l * s;\r\n                t1 = 2 * l - t2;\r\n\r\n                rgb = [0, 0, 0];\r\n                for (var i = 0; i < 3; i++) {\r\n                    t3 = h + 1 / 3 * - (i - 1);\r\n                    t3 < 0 && t3++;\r\n                    t3 > 1 && t3--;\r\n\r\n                    if (6 * t3 < 1)\r\n                        val = t1 + (t2 - t1) * 6 * t3;\r\n                    else if (2 * t3 < 1)\r\n                        val = t2;\r\n                    else if (3 * t3 < 2)\r\n                        val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\r\n                    else\r\n                        val = t1;\r\n\r\n                    rgb[i] = val * 255;\r\n                }\r\n\r\n                return rgb;\r\n            }\r\n\r\n            function hsl2hsv(hsl) {\r\n                var h = hsl[0],\r\n                    s = hsl[1] / 100,\r\n                    l = hsl[2] / 100,\r\n                    sv, v;\r\n\r\n                if (l === 0) {\r\n                    // no need to do calc on black\r\n                    // also avoids divide by 0 error\r\n                    return [0, 0, 0];\r\n                }\r\n\r\n                l *= 2;\r\n                s *= (l <= 1) ? l : 2 - l;\r\n                v = (l + s) / 2;\r\n                sv = (2 * s) / (l + s);\r\n                return [h, sv * 100, v * 100];\r\n            }\r\n\r\n            function hsl2hwb(args) {\r\n                return rgb2hwb(hsl2rgb(args));\r\n            }\r\n\r\n            function hsl2cmyk(args) {\r\n                return rgb2cmyk(hsl2rgb(args));\r\n            }\r\n\r\n            function hsl2keyword(args) {\r\n                return rgb2keyword(hsl2rgb(args));\r\n            }\r\n\r\n            function hsv2rgb(hsv) {\r\n                var h = hsv[0] / 60,\r\n                    s = hsv[1] / 100,\r\n                    v = hsv[2] / 100,\r\n                    hi = Math.floor(h) % 6;\r\n\r\n                var f = h - Math.floor(h),\r\n                    p = 255 * v * (1 - s),\r\n                    q = 255 * v * (1 - (s * f)),\r\n                    t = 255 * v * (1 - (s * (1 - f))),\r\n                    v = 255 * v;\r\n\r\n                switch (hi) {\r\n                    case 0:\r\n                        return [v, t, p];\r\n                    case 1:\r\n                        return [q, v, p];\r\n                    case 2:\r\n                        return [p, v, t];\r\n                    case 3:\r\n                        return [p, q, v];\r\n                    case 4:\r\n                        return [t, p, v];\r\n                    case 5:\r\n                        return [v, p, q];\r\n                }\r\n            }\r\n\r\n            function hsv2hsl(hsv) {\r\n                var h = hsv[0],\r\n                    s = hsv[1] / 100,\r\n                    v = hsv[2] / 100,\r\n                    sl, l;\r\n\r\n                l = (2 - s) * v;\r\n                sl = s * v;\r\n                sl /= (l <= 1) ? l : 2 - l;\r\n                sl = sl || 0;\r\n                l /= 2;\r\n                return [h, sl * 100, l * 100];\r\n            }\r\n\r\n            function hsv2hwb(args) {\r\n                return rgb2hwb(hsv2rgb(args))\r\n            }\r\n\r\n            function hsv2cmyk(args) {\r\n                return rgb2cmyk(hsv2rgb(args));\r\n            }\r\n\r\n            function hsv2keyword(args) {\r\n                return rgb2keyword(hsv2rgb(args));\r\n            }\r\n\r\n            // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\r\n            function hwb2rgb(hwb) {\r\n                var h = hwb[0] / 360,\r\n                    wh = hwb[1] / 100,\r\n                    bl = hwb[2] / 100,\r\n                    ratio = wh + bl,\r\n                    i, v, f, n;\r\n\r\n                // wh + bl cant be > 1\r\n                if (ratio > 1) {\r\n                    wh /= ratio;\r\n                    bl /= ratio;\r\n                }\r\n\r\n                i = Math.floor(6 * h);\r\n                v = 1 - bl;\r\n                f = 6 * h - i;\r\n                if ((i & 0x01) != 0) {\r\n                    f = 1 - f;\r\n                }\r\n                n = wh + f * (v - wh);  // linear interpolation\r\n\r\n                switch (i) {\r\n                    default:\r\n                    case 6:\r\n                    case 0: r = v; g = n; b = wh; break;\r\n                    case 1: r = n; g = v; b = wh; break;\r\n                    case 2: r = wh; g = v; b = n; break;\r\n                    case 3: r = wh; g = n; b = v; break;\r\n                    case 4: r = n; g = wh; b = v; break;\r\n                    case 5: r = v; g = wh; b = n; break;\r\n                }\r\n\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function hwb2hsl(args) {\r\n                return rgb2hsl(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2hsv(args) {\r\n                return rgb2hsv(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2cmyk(args) {\r\n                return rgb2cmyk(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2keyword(args) {\r\n                return rgb2keyword(hwb2rgb(args));\r\n            }\r\n\r\n            function cmyk2rgb(cmyk) {\r\n                var c = cmyk[0] / 100,\r\n                    m = cmyk[1] / 100,\r\n                    y = cmyk[2] / 100,\r\n                    k = cmyk[3] / 100,\r\n                    r, g, b;\r\n\r\n                r = 1 - Math.min(1, c * (1 - k) + k);\r\n                g = 1 - Math.min(1, m * (1 - k) + k);\r\n                b = 1 - Math.min(1, y * (1 - k) + k);\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function cmyk2hsl(args) {\r\n                return rgb2hsl(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2hsv(args) {\r\n                return rgb2hsv(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2hwb(args) {\r\n                return rgb2hwb(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2keyword(args) {\r\n                return rgb2keyword(cmyk2rgb(args));\r\n            }\r\n\r\n            function xyz2rgb(xyz) {\r\n                var x = xyz[0] / 100,\r\n                    y = xyz[1] / 100,\r\n                    z = xyz[2] / 100,\r\n                    r, g, b;\r\n\r\n                r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\r\n                g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\r\n                b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\r\n\r\n                // assume sRGB\r\n                r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\r\n                    : r = (r * 12.92);\r\n\r\n                g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\r\n                    : g = (g * 12.92);\r\n\r\n                b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\r\n                    : b = (b * 12.92);\r\n\r\n                r = Math.min(Math.max(0, r), 1);\r\n                g = Math.min(Math.max(0, g), 1);\r\n                b = Math.min(Math.max(0, b), 1);\r\n\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function xyz2lab(xyz) {\r\n                var x = xyz[0],\r\n                    y = xyz[1],\r\n                    z = xyz[2],\r\n                    l, a, b;\r\n\r\n                x /= 95.047;\r\n                y /= 100;\r\n                z /= 108.883;\r\n\r\n                x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\r\n                y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\r\n                z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\r\n\r\n                l = (116 * y) - 16;\r\n                a = 500 * (x - y);\r\n                b = 200 * (y - z);\r\n\r\n                return [l, a, b];\r\n            }\r\n\r\n            function xyz2lch(args) {\r\n                return lab2lch(xyz2lab(args));\r\n            }\r\n\r\n            function lab2xyz(lab) {\r\n                var l = lab[0],\r\n                    a = lab[1],\r\n                    b = lab[2],\r\n                    x, y, z, y2;\r\n\r\n                if (l <= 8) {\r\n                    y = (l * 100) / 903.3;\r\n                    y2 = (7.787 * (y / 100)) + (16 / 116);\r\n                } else {\r\n                    y = 100 * Math.pow((l + 16) / 116, 3);\r\n                    y2 = Math.pow(y / 100, 1 / 3);\r\n                }\r\n\r\n                x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\r\n\r\n                z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\r\n\r\n                return [x, y, z];\r\n            }\r\n\r\n            function lab2lch(lab) {\r\n                var l = lab[0],\r\n                    a = lab[1],\r\n                    b = lab[2],\r\n                    hr, h, c;\r\n\r\n                hr = Math.atan2(b, a);\r\n                h = hr * 360 / 2 / Math.PI;\r\n                if (h < 0) {\r\n                    h += 360;\r\n                }\r\n                c = Math.sqrt(a * a + b * b);\r\n                return [l, c, h];\r\n            }\r\n\r\n            function lab2rgb(args) {\r\n                return xyz2rgb(lab2xyz(args));\r\n            }\r\n\r\n            function lch2lab(lch) {\r\n                var l = lch[0],\r\n                    c = lch[1],\r\n                    h = lch[2],\r\n                    a, b, hr;\r\n\r\n                hr = h / 360 * 2 * Math.PI;\r\n                a = c * Math.cos(hr);\r\n                b = c * Math.sin(hr);\r\n                return [l, a, b];\r\n            }\r\n\r\n            function lch2xyz(args) {\r\n                return lab2xyz(lch2lab(args));\r\n            }\r\n\r\n            function lch2rgb(args) {\r\n                return lab2rgb(lch2lab(args));\r\n            }\r\n\r\n            function keyword2rgb(keyword) {\r\n                return cssKeywords[keyword];\r\n            }\r\n\r\n            function keyword2hsl(args) {\r\n                return rgb2hsl(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2hsv(args) {\r\n                return rgb2hsv(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2hwb(args) {\r\n                return rgb2hwb(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2cmyk(args) {\r\n                return rgb2cmyk(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2lab(args) {\r\n                return rgb2lab(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2xyz(args) {\r\n                return rgb2xyz(keyword2rgb(args));\r\n            }\r\n\r\n            var cssKeywords = {\r\n                aliceblue: [240, 248, 255],\r\n                antiquewhite: [250, 235, 215],\r\n                aqua: [0, 255, 255],\r\n                aquamarine: [127, 255, 212],\r\n                azure: [240, 255, 255],\r\n                beige: [245, 245, 220],\r\n                bisque: [255, 228, 196],\r\n                black: [0, 0, 0],\r\n                blanchedalmond: [255, 235, 205],\r\n                blue: [0, 0, 255],\r\n                blueviolet: [138, 43, 226],\r\n                brown: [165, 42, 42],\r\n                burlywood: [222, 184, 135],\r\n                cadetblue: [95, 158, 160],\r\n                chartreuse: [127, 255, 0],\r\n                chocolate: [210, 105, 30],\r\n                coral: [255, 127, 80],\r\n                cornflowerblue: [100, 149, 237],\r\n                cornsilk: [255, 248, 220],\r\n                crimson: [220, 20, 60],\r\n                cyan: [0, 255, 255],\r\n                darkblue: [0, 0, 139],\r\n                darkcyan: [0, 139, 139],\r\n                darkgoldenrod: [184, 134, 11],\r\n                darkgray: [169, 169, 169],\r\n                darkgreen: [0, 100, 0],\r\n                darkgrey: [169, 169, 169],\r\n                darkkhaki: [189, 183, 107],\r\n                darkmagenta: [139, 0, 139],\r\n                darkolivegreen: [85, 107, 47],\r\n                darkorange: [255, 140, 0],\r\n                darkorchid: [153, 50, 204],\r\n                darkred: [139, 0, 0],\r\n                darksalmon: [233, 150, 122],\r\n                darkseagreen: [143, 188, 143],\r\n                darkslateblue: [72, 61, 139],\r\n                darkslategray: [47, 79, 79],\r\n                darkslategrey: [47, 79, 79],\r\n                darkturquoise: [0, 206, 209],\r\n                darkviolet: [148, 0, 211],\r\n                deeppink: [255, 20, 147],\r\n                deepskyblue: [0, 191, 255],\r\n                dimgray: [105, 105, 105],\r\n                dimgrey: [105, 105, 105],\r\n                dodgerblue: [30, 144, 255],\r\n                firebrick: [178, 34, 34],\r\n                floralwhite: [255, 250, 240],\r\n                forestgreen: [34, 139, 34],\r\n                fuchsia: [255, 0, 255],\r\n                gainsboro: [220, 220, 220],\r\n                ghostwhite: [248, 248, 255],\r\n                gold: [255, 215, 0],\r\n                goldenrod: [218, 165, 32],\r\n                gray: [128, 128, 128],\r\n                green: [0, 128, 0],\r\n                greenyellow: [173, 255, 47],\r\n                grey: [128, 128, 128],\r\n                honeydew: [240, 255, 240],\r\n                hotpink: [255, 105, 180],\r\n                indianred: [205, 92, 92],\r\n                indigo: [75, 0, 130],\r\n                ivory: [255, 255, 240],\r\n                khaki: [240, 230, 140],\r\n                lavender: [230, 230, 250],\r\n                lavenderblush: [255, 240, 245],\r\n                lawngreen: [124, 252, 0],\r\n                lemonchiffon: [255, 250, 205],\r\n                lightblue: [173, 216, 230],\r\n                lightcoral: [240, 128, 128],\r\n                lightcyan: [224, 255, 255],\r\n                lightgoldenrodyellow: [250, 250, 210],\r\n                lightgray: [211, 211, 211],\r\n                lightgreen: [144, 238, 144],\r\n                lightgrey: [211, 211, 211],\r\n                lightpink: [255, 182, 193],\r\n                lightsalmon: [255, 160, 122],\r\n                lightseagreen: [32, 178, 170],\r\n                lightskyblue: [135, 206, 250],\r\n                lightslategray: [119, 136, 153],\r\n                lightslategrey: [119, 136, 153],\r\n                lightsteelblue: [176, 196, 222],\r\n                lightyellow: [255, 255, 224],\r\n                lime: [0, 255, 0],\r\n                limegreen: [50, 205, 50],\r\n                linen: [250, 240, 230],\r\n                magenta: [255, 0, 255],\r\n                maroon: [128, 0, 0],\r\n                mediumaquamarine: [102, 205, 170],\r\n                mediumblue: [0, 0, 205],\r\n                mediumorchid: [186, 85, 211],\r\n                mediumpurple: [147, 112, 219],\r\n                mediumseagreen: [60, 179, 113],\r\n                mediumslateblue: [123, 104, 238],\r\n                mediumspringgreen: [0, 250, 154],\r\n                mediumturquoise: [72, 209, 204],\r\n                mediumvioletred: [199, 21, 133],\r\n                midnightblue: [25, 25, 112],\r\n                mintcream: [245, 255, 250],\r\n                mistyrose: [255, 228, 225],\r\n                moccasin: [255, 228, 181],\r\n                navajowhite: [255, 222, 173],\r\n                navy: [0, 0, 128],\r\n                oldlace: [253, 245, 230],\r\n                olive: [128, 128, 0],\r\n                olivedrab: [107, 142, 35],\r\n                orange: [255, 165, 0],\r\n                orangered: [255, 69, 0],\r\n                orchid: [218, 112, 214],\r\n                palegoldenrod: [238, 232, 170],\r\n                palegreen: [152, 251, 152],\r\n                paleturquoise: [175, 238, 238],\r\n                palevioletred: [219, 112, 147],\r\n                papayawhip: [255, 239, 213],\r\n                peachpuff: [255, 218, 185],\r\n                peru: [205, 133, 63],\r\n                pink: [255, 192, 203],\r\n                plum: [221, 160, 221],\r\n                powderblue: [176, 224, 230],\r\n                purple: [128, 0, 128],\r\n                rebeccapurple: [102, 51, 153],\r\n                red: [255, 0, 0],\r\n                rosybrown: [188, 143, 143],\r\n                royalblue: [65, 105, 225],\r\n                saddlebrown: [139, 69, 19],\r\n                salmon: [250, 128, 114],\r\n                sandybrown: [244, 164, 96],\r\n                seagreen: [46, 139, 87],\r\n                seashell: [255, 245, 238],\r\n                sienna: [160, 82, 45],\r\n                silver: [192, 192, 192],\r\n                skyblue: [135, 206, 235],\r\n                slateblue: [106, 90, 205],\r\n                slategray: [112, 128, 144],\r\n                slategrey: [112, 128, 144],\r\n                snow: [255, 250, 250],\r\n                springgreen: [0, 255, 127],\r\n                steelblue: [70, 130, 180],\r\n                tan: [210, 180, 140],\r\n                teal: [0, 128, 128],\r\n                thistle: [216, 191, 216],\r\n                tomato: [255, 99, 71],\r\n                turquoise: [64, 224, 208],\r\n                violet: [238, 130, 238],\r\n                wheat: [245, 222, 179],\r\n                white: [255, 255, 255],\r\n                whitesmoke: [245, 245, 245],\r\n                yellow: [255, 255, 0],\r\n                yellowgreen: [154, 205, 50]\r\n            };\r\n\r\n            var reverseKeywords = {};\r\n            for (var key in cssKeywords) {\r\n                reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\r\n            }\r\n        }, {}], 4: [function(require, module, exports) {\r\n            var conversions = require(3);\r\n\r\n            var convert = function() {\r\n                return new Converter();\r\n            }\r\n\r\n            for (var func in conversions) {\r\n                // export Raw versions\r\n                convert[func + \"Raw\"] = (function(func) {\r\n                    // accept array or plain args\r\n                    return function(arg) {\r\n                        if (typeof arg == \"number\")\r\n                            arg = Array.prototype.slice.call(arguments);\r\n                        return conversions[func](arg);\r\n                    }\r\n                })(func);\r\n\r\n                var pair = /(\\w+)2(\\w+)/.exec(func),\r\n                    from = pair[1],\r\n                    to = pair[2];\r\n\r\n                // export rgb2hsl and [\"rgb\"][\"hsl\"]\r\n                convert[from] = convert[from] || {};\r\n\r\n                convert[from][to] = convert[func] = (function(func) {\r\n                    return function(arg) {\r\n                        if (typeof arg == \"number\")\r\n                            arg = Array.prototype.slice.call(arguments);\r\n\r\n                        var val = conversions[func](arg);\r\n                        if (typeof val == \"string\" || val === undefined)\r\n                            return val; // keyword\r\n\r\n                        for (var i = 0; i < val.length; i++)\r\n                            val[i] = Math.round(val[i]);\r\n                        return val;\r\n                    }\r\n                })(func);\r\n            }\r\n\r\n            /* Converter does lazy conversion and caching */\r\n            var Converter = function() {\r\n                this.convs = {};\r\n            };\r\n\r\n            /* Either get the values for a space or\r\n              set the values for a space, depending on args */\r\n            Converter.prototype.routeSpace = function(space, args) {\r\n                var values = args[0];\r\n                if (values === undefined) {\r\n                    // color.rgb()\r\n                    return this.getValues(space);\r\n                }\r\n                // color.rgb(10, 10, 10)\r\n                if (typeof values == \"number\") {\r\n                    values = Array.prototype.slice.call(args);\r\n                }\r\n\r\n                return this.setValues(space, values);\r\n            };\r\n\r\n            /* Set the values for a space, invalidating cache */\r\n            Converter.prototype.setValues = function(space, values) {\r\n                this.space = space;\r\n                this.convs = {};\r\n                this.convs[space] = values;\r\n                return this;\r\n            };\r\n\r\n            /* Get the values for a space. If there's already\r\n              a conversion for the space, fetch it, otherwise\r\n              compute it */\r\n            Converter.prototype.getValues = function(space) {\r\n                var vals = this.convs[space];\r\n                if (!vals) {\r\n                    var fspace = this.space,\r\n                        from = this.convs[fspace];\r\n                    vals = convert[fspace][space](from);\r\n\r\n                    this.convs[space] = vals;\r\n                }\r\n                return vals;\r\n            };\r\n\r\n            [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\r\n                Converter.prototype[space] = function(vals) {\r\n                    return this.routeSpace(space, arguments);\r\n                }\r\n            });\r\n\r\n            module.exports = convert;\r\n        }, { \"3\": 3 }], 5: [function(require, module, exports) {\r\n            'use strict'\r\n\r\n            module.exports = {\r\n                \"aliceblue\": [240, 248, 255],\r\n                \"antiquewhite\": [250, 235, 215],\r\n                \"aqua\": [0, 255, 255],\r\n                \"aquamarine\": [127, 255, 212],\r\n                \"azure\": [240, 255, 255],\r\n                \"beige\": [245, 245, 220],\r\n                \"bisque\": [255, 228, 196],\r\n                \"black\": [0, 0, 0],\r\n                \"blanchedalmond\": [255, 235, 205],\r\n                \"blue\": [0, 0, 255],\r\n                \"blueviolet\": [138, 43, 226],\r\n                \"brown\": [165, 42, 42],\r\n                \"burlywood\": [222, 184, 135],\r\n                \"cadetblue\": [95, 158, 160],\r\n                \"chartreuse\": [127, 255, 0],\r\n                \"chocolate\": [210, 105, 30],\r\n                \"coral\": [255, 127, 80],\r\n                \"cornflowerblue\": [100, 149, 237],\r\n                \"cornsilk\": [255, 248, 220],\r\n                \"crimson\": [220, 20, 60],\r\n                \"cyan\": [0, 255, 255],\r\n                \"darkblue\": [0, 0, 139],\r\n                \"darkcyan\": [0, 139, 139],\r\n                \"darkgoldenrod\": [184, 134, 11],\r\n                \"darkgray\": [169, 169, 169],\r\n                \"darkgreen\": [0, 100, 0],\r\n                \"darkgrey\": [169, 169, 169],\r\n                \"darkkhaki\": [189, 183, 107],\r\n                \"darkmagenta\": [139, 0, 139],\r\n                \"darkolivegreen\": [85, 107, 47],\r\n                \"darkorange\": [255, 140, 0],\r\n                \"darkorchid\": [153, 50, 204],\r\n                \"darkred\": [139, 0, 0],\r\n                \"darksalmon\": [233, 150, 122],\r\n                \"darkseagreen\": [143, 188, 143],\r\n                \"darkslateblue\": [72, 61, 139],\r\n                \"darkslategray\": [47, 79, 79],\r\n                \"darkslategrey\": [47, 79, 79],\r\n                \"darkturquoise\": [0, 206, 209],\r\n                \"darkviolet\": [148, 0, 211],\r\n                \"deeppink\": [255, 20, 147],\r\n                \"deepskyblue\": [0, 191, 255],\r\n                \"dimgray\": [105, 105, 105],\r\n                \"dimgrey\": [105, 105, 105],\r\n                \"dodgerblue\": [30, 144, 255],\r\n                \"firebrick\": [178, 34, 34],\r\n                \"floralwhite\": [255, 250, 240],\r\n                \"forestgreen\": [34, 139, 34],\r\n                \"fuchsia\": [255, 0, 255],\r\n                \"gainsboro\": [220, 220, 220],\r\n                \"ghostwhite\": [248, 248, 255],\r\n                \"gold\": [255, 215, 0],\r\n                \"goldenrod\": [218, 165, 32],\r\n                \"gray\": [128, 128, 128],\r\n                \"green\": [0, 128, 0],\r\n                \"greenyellow\": [173, 255, 47],\r\n                \"grey\": [128, 128, 128],\r\n                \"honeydew\": [240, 255, 240],\r\n                \"hotpink\": [255, 105, 180],\r\n                \"indianred\": [205, 92, 92],\r\n                \"indigo\": [75, 0, 130],\r\n                \"ivory\": [255, 255, 240],\r\n                \"khaki\": [240, 230, 140],\r\n                \"lavender\": [230, 230, 250],\r\n                \"lavenderblush\": [255, 240, 245],\r\n                \"lawngreen\": [124, 252, 0],\r\n                \"lemonchiffon\": [255, 250, 205],\r\n                \"lightblue\": [173, 216, 230],\r\n                \"lightcoral\": [240, 128, 128],\r\n                \"lightcyan\": [224, 255, 255],\r\n                \"lightgoldenrodyellow\": [250, 250, 210],\r\n                \"lightgray\": [211, 211, 211],\r\n                \"lightgreen\": [144, 238, 144],\r\n                \"lightgrey\": [211, 211, 211],\r\n                \"lightpink\": [255, 182, 193],\r\n                \"lightsalmon\": [255, 160, 122],\r\n                \"lightseagreen\": [32, 178, 170],\r\n                \"lightskyblue\": [135, 206, 250],\r\n                \"lightslategray\": [119, 136, 153],\r\n                \"lightslategrey\": [119, 136, 153],\r\n                \"lightsteelblue\": [176, 196, 222],\r\n                \"lightyellow\": [255, 255, 224],\r\n                \"lime\": [0, 255, 0],\r\n                \"limegreen\": [50, 205, 50],\r\n                \"linen\": [250, 240, 230],\r\n                \"magenta\": [255, 0, 255],\r\n                \"maroon\": [128, 0, 0],\r\n                \"mediumaquamarine\": [102, 205, 170],\r\n                \"mediumblue\": [0, 0, 205],\r\n                \"mediumorchid\": [186, 85, 211],\r\n                \"mediumpurple\": [147, 112, 219],\r\n                \"mediumseagreen\": [60, 179, 113],\r\n                \"mediumslateblue\": [123, 104, 238],\r\n                \"mediumspringgreen\": [0, 250, 154],\r\n                \"mediumturquoise\": [72, 209, 204],\r\n                \"mediumvioletred\": [199, 21, 133],\r\n                \"midnightblue\": [25, 25, 112],\r\n                \"mintcream\": [245, 255, 250],\r\n                \"mistyrose\": [255, 228, 225],\r\n                \"moccasin\": [255, 228, 181],\r\n                \"navajowhite\": [255, 222, 173],\r\n                \"navy\": [0, 0, 128],\r\n                \"oldlace\": [253, 245, 230],\r\n                \"olive\": [128, 128, 0],\r\n                \"olivedrab\": [107, 142, 35],\r\n                \"orange\": [255, 165, 0],\r\n                \"orangered\": [255, 69, 0],\r\n                \"orchid\": [218, 112, 214],\r\n                \"palegoldenrod\": [238, 232, 170],\r\n                \"palegreen\": [152, 251, 152],\r\n                \"paleturquoise\": [175, 238, 238],\r\n                \"palevioletred\": [219, 112, 147],\r\n                \"papayawhip\": [255, 239, 213],\r\n                \"peachpuff\": [255, 218, 185],\r\n                \"peru\": [205, 133, 63],\r\n                \"pink\": [255, 192, 203],\r\n                \"plum\": [221, 160, 221],\r\n                \"powderblue\": [176, 224, 230],\r\n                \"purple\": [128, 0, 128],\r\n                \"rebeccapurple\": [102, 51, 153],\r\n                \"red\": [255, 0, 0],\r\n                \"rosybrown\": [188, 143, 143],\r\n                \"royalblue\": [65, 105, 225],\r\n                \"saddlebrown\": [139, 69, 19],\r\n                \"salmon\": [250, 128, 114],\r\n                \"sandybrown\": [244, 164, 96],\r\n                \"seagreen\": [46, 139, 87],\r\n                \"seashell\": [255, 245, 238],\r\n                \"sienna\": [160, 82, 45],\r\n                \"silver\": [192, 192, 192],\r\n                \"skyblue\": [135, 206, 235],\r\n                \"slateblue\": [106, 90, 205],\r\n                \"slategray\": [112, 128, 144],\r\n                \"slategrey\": [112, 128, 144],\r\n                \"snow\": [255, 250, 250],\r\n                \"springgreen\": [0, 255, 127],\r\n                \"steelblue\": [70, 130, 180],\r\n                \"tan\": [210, 180, 140],\r\n                \"teal\": [0, 128, 128],\r\n                \"thistle\": [216, 191, 216],\r\n                \"tomato\": [255, 99, 71],\r\n                \"turquoise\": [64, 224, 208],\r\n                \"violet\": [238, 130, 238],\r\n                \"wheat\": [245, 222, 179],\r\n                \"white\": [255, 255, 255],\r\n                \"whitesmoke\": [245, 245, 245],\r\n                \"yellow\": [255, 255, 0],\r\n                \"yellowgreen\": [154, 205, 50]\r\n            };\r\n        }, {}], 6: [function(require, module, exports) {\r\n            /**\r\n             * @namespace Chart\r\n             */\r\n            var Chart = require(20)();\r\n\r\n            Chart.helpers = require(36);\r\n\r\n            // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\r\n            require(18)(Chart);\r\n\r\n            Chart.defaults = require(16);\r\n            Chart.Element = require(17);\r\n            Chart.elements = require(31);\r\n            Chart.Interaction = require(19);\r\n            Chart.layouts = require(21);\r\n            Chart.platform = require(39);\r\n            Chart.plugins = require(22);\r\n            Chart.Ticks = require(25);\r\n\r\n            require(13)(Chart);\r\n            require(14)(Chart);\r\n            require(15)(Chart);\r\n            require(24)(Chart);\r\n            require(23)(Chart);\r\n            require(26)(Chart);\r\n\r\n            require(46)(Chart);\r\n            require(44)(Chart);\r\n            require(45)(Chart);\r\n            // require('./scales/scale.logarithmic')(Chart);\r\n            // require('./scales/scale.radialLinear')(Chart);\r\n            // require('./scales/scale.time')(Chart);\r\n\r\n            // Controllers must be loaded after elements\r\n            // See Chart.core.datasetController.dataElementType\r\n            require(10)(Chart);\r\n            // require('./controllers/controller.bubble')(Chart);\r\n            require(11)(Chart);\r\n            require(12)(Chart);\r\n            // require('./controllers/controller.polarArea')(Chart);\r\n            // require('./controllers/controller.radar')(Chart);\r\n            // require('./controllers/controller.scatter')(Chart);\r\n\r\n            require(7)(Chart);\r\n            // require('./charts/Chart.Bubble')(Chart);\r\n            require(8)(Chart);\r\n            require(9)(Chart);\r\n            // require('./charts/Chart.PolarArea')(Chart);\r\n            // require('./charts/Chart.Radar')(Chart);\r\n            // require('./charts/Chart.Scatter')(Chart);\r\n\r\n            // Loading built-it plugins\r\n            var plugins = require(40);\r\n            for (var k in plugins) {\r\n                if (plugins.hasOwnProperty(k)) {\r\n                    Chart.plugins.register(plugins[k]);\r\n                }\r\n            }\r\n\r\n            Chart.platform.initialize();\r\n\r\n            module.exports = Chart;\r\n            if (typeof window !== 'undefined') {\r\n                window.Chart = Chart;\r\n            }\r\n        }, { \"10\": 10, \"11\": 11, \"12\": 12, \"13\": 13, \"14\": 14, \"15\": 15, \"16\": 16, \"17\": 17, \"18\": 18, \"19\": 19, \"20\": 20, \"21\": 21, \"22\": 22, \"23\": 23, \"24\": 24, \"25\": 25, \"26\": 26, \"31\": 31, \"36\": 36, \"39\": 39, \"40\": 40, \"44\": 44, \"45\": 45, \"46\": 46, \"7\": 7, \"8\": 8, \"9\": 9 }], 7: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Bar = function(context, config) {\r\n                    config.type = 'bar';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 8: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Doughnut = function(context, config) {\r\n                    config.type = 'doughnut';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 9: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Line = function(context, config) {\r\n                    config.type = 'line';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 10: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('bar', {\r\n                hover: {\r\n                    mode: 'label'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'category',\r\n\r\n                        // Specific to Bar Controller\r\n                        categoryPercentage: 0.8,\r\n                        barPercentage: 0.9,\r\n\r\n                        // offset settings\r\n                        offset: true,\r\n\r\n                        // grid line settings\r\n                        gridLines: {\r\n                            offsetGridLines: true\r\n                        }\r\n                    }],\r\n\r\n                    yAxes: [{\r\n                        type: 'linear'\r\n                    }]\r\n                }\r\n            });\r\n\r\n            defaults._set('horizontalBar', {\r\n                hover: {\r\n                    mode: 'index',\r\n                    axis: 'y'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'linear',\r\n                        position: 'bottom'\r\n                    }],\r\n\r\n                    yAxes: [{\r\n                        position: 'left',\r\n                        type: 'category',\r\n\r\n                        // Specific to Horizontal Bar Controller\r\n                        categoryPercentage: 0.8,\r\n                        barPercentage: 0.9,\r\n\r\n                        // offset settings\r\n                        offset: true,\r\n\r\n                        // grid line settings\r\n                        gridLines: {\r\n                            offsetGridLines: true\r\n                        }\r\n                    }]\r\n                },\r\n\r\n                elements: {\r\n                    rectangle: {\r\n                        borderSkipped: 'left'\r\n                    }\r\n                },\r\n\r\n                tooltips: {\r\n                    callbacks: {\r\n                        title: function(item, data) {\r\n                            // Pick first xLabel for now\r\n                            var title = '';\r\n\r\n                            if (item.length > 0) {\r\n                                if (item[0].yLabel) {\r\n                                    title = item[0].yLabel;\r\n                                } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\r\n                                    title = data.labels[item[0].index];\r\n                                }\r\n                            }\r\n\r\n                            return title;\r\n                        },\r\n\r\n                        label: function(item, data) {\r\n                            var datasetLabel = data.datasets[item.datasetIndex].label || '';\r\n                            return datasetLabel + ': ' + item.xLabel;\r\n                        }\r\n                    },\r\n                    mode: 'index',\r\n                    axis: 'y'\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\r\n             * @private\r\n             */\r\n            function computeMinSampleSize(scale, pixels) {\r\n                var min = scale.isHorizontal() ? scale.width : scale.height;\r\n                var ticks = scale.getTicks();\r\n                var prev, curr, i, ilen;\r\n\r\n                for (i = 1, ilen = pixels.length; i < ilen; ++i) {\r\n                    min = Math.min(min, pixels[i] - pixels[i - 1]);\r\n                }\r\n\r\n                for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n                    curr = scale.getPixelForTick(i);\r\n                    min = i > 0 ? Math.min(min, curr - prev) : min;\r\n                    prev = curr;\r\n                }\r\n\r\n                return min;\r\n            }\r\n\r\n            /**\r\n             * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\r\n             * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\r\n             * mode currently always generates bars equally sized (until we introduce scriptable options?).\r\n             * @private\r\n             */\r\n            function computeFitCategoryTraits(index, ruler, options) {\r\n                var thickness = options.barThickness;\r\n                var count = ruler.stackCount;\r\n                var curr = ruler.pixels[index];\r\n                var size, ratio;\r\n\r\n                if (helpers.isNullOrUndef(thickness)) {\r\n                    size = ruler.min * options.categoryPercentage;\r\n                    ratio = options.barPercentage;\r\n                } else {\r\n                    // When bar thickness is enforced, category and bar percentages are ignored.\r\n                    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\r\n                    // and deprecate barPercentage since this value is ignored when thickness is absolute.\r\n                    size = thickness * count;\r\n                    ratio = 1;\r\n                }\r\n\r\n                return {\r\n                    chunk: size / count,\r\n                    ratio: ratio,\r\n                    start: curr - (size / 2)\r\n                };\r\n            }\r\n\r\n            /**\r\n             * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\r\n             * percentage options are 1), based on the previous and following categories. This mode\r\n             * generates bars with different widths when data are not evenly spaced.\r\n             * @private\r\n             */\r\n            function computeFlexCategoryTraits(index, ruler, options) {\r\n                var pixels = ruler.pixels;\r\n                var curr = pixels[index];\r\n                var prev = index > 0 ? pixels[index - 1] : null;\r\n                var next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n                var percent = options.categoryPercentage;\r\n                var start, size;\r\n\r\n                if (prev === null) {\r\n                    // first data: its size is double based on the next point or,\r\n                    // if it's also the last data, we use the scale end extremity.\r\n                    prev = curr - (next === null ? ruler.end - curr : next - curr);\r\n                }\r\n\r\n                if (next === null) {\r\n                    // last data: its size is also double based on the previous point.\r\n                    next = curr + curr - prev;\r\n                }\r\n\r\n                start = curr - ((curr - prev) / 2) * percent;\r\n                size = ((next - prev) / 2) * percent;\r\n\r\n                return {\r\n                    chunk: size / ruler.stackCount,\r\n                    ratio: options.barPercentage,\r\n                    start: start\r\n                };\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.controllers.bar = Chart.DatasetController.extend({\r\n                    dataElementType: elements.Rectangle,\r\n\r\n                    initialize: function() {\r\n                        var me = this;\r\n                        var meta;\r\n\r\n                        Chart.DatasetController.prototype.initialize.apply(me, arguments);\r\n\r\n                        meta = me.getMeta();\r\n                        meta.stack = me.getDataset().stack;\r\n                        meta.bar = true;\r\n                    },\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var rects = me.getMeta().data;\r\n                        var i, ilen;\r\n\r\n                        me._ruler = me.getRuler();\r\n\r\n                        for (i = 0, ilen = rects.length; i < ilen; ++i) {\r\n                            me.updateElement(rects[i], i, reset);\r\n                        }\r\n                    },\r\n\r\n                    updateElement: function(rectangle, index, reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var dataset = me.getDataset();\r\n                        var custom = rectangle.custom || {};\r\n                        var rectangleOptions = chart.options.elements.rectangle;\r\n\r\n                        rectangle._xScale = me.getScaleForId(meta.xAxisID);\r\n                        rectangle._yScale = me.getScaleForId(meta.yAxisID);\r\n                        rectangle._datasetIndex = me.index;\r\n                        rectangle._index = index;\r\n\r\n                        rectangle._model = {\r\n                            datasetLabel: dataset.label,\r\n                            label: chart.data.labels[index],\r\n                            borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\r\n                            backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\r\n                            borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\r\n                            borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\r\n                        };\r\n\r\n                        me.updateElementGeometry(rectangle, index, reset);\r\n\r\n                        rectangle.pivot();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    updateElementGeometry: function(rectangle, index, reset) {\r\n                        var me = this;\r\n                        var model = rectangle._model;\r\n                        var vscale = me.getValueScale();\r\n                        var base = vscale.getBasePixel();\r\n                        var horizontal = vscale.isHorizontal();\r\n                        var ruler = me._ruler || me.getRuler();\r\n                        var vpixels = me.calculateBarValuePixels(me.index, index);\r\n                        var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\r\n\r\n                        model.horizontal = horizontal;\r\n                        model.base = reset ? base : vpixels.base;\r\n                        model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\r\n                        model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\r\n                        model.height = horizontal ? ipixels.size : undefined;\r\n                        model.width = horizontal ? undefined : ipixels.size;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScaleId: function() {\r\n                        return this.getMeta().yAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScaleId: function() {\r\n                        return this.getMeta().xAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScale: function() {\r\n                        return this.getScaleForId(this.getValueScaleId());\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScale: function() {\r\n                        return this.getScaleForId(this.getIndexScaleId());\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the stacks based on groups and bar visibility.\r\n                     * @param {Number} [last] - The dataset index\r\n                     * @returns {Array} The stack list\r\n                     * @private\r\n                     */\r\n                    _getStacks: function(last) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var scale = me.getIndexScale();\r\n                        var stacked = scale.options.stacked;\r\n                        var ilen = last === undefined ? chart.data.datasets.length : last + 1;\r\n                        var stacks = [];\r\n                        var i, meta;\r\n\r\n                        for (i = 0; i < ilen; ++i) {\r\n                            meta = chart.getDatasetMeta(i);\r\n                            if (meta.bar && chart.isDatasetVisible(i) &&\r\n                                (stacked === false ||\r\n                                    (stacked === true && stacks.indexOf(meta.stack) === -1) ||\r\n                                    (stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\r\n                                stacks.push(meta.stack);\r\n                            }\r\n                        }\r\n\r\n                        return stacks;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the effective number of stacks based on groups and bar visibility.\r\n                     * @private\r\n                     */\r\n                    getStackCount: function() {\r\n                        return this._getStacks().length;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the stack index for the given dataset based on groups and bar visibility.\r\n                     * @param {Number} [datasetIndex] - The dataset index\r\n                     * @param {String} [name] - The stack name to find\r\n                     * @returns {Number} The stack index\r\n                     * @private\r\n                     */\r\n                    getStackIndex: function(datasetIndex, name) {\r\n                        var stacks = this._getStacks(datasetIndex);\r\n                        var index = (name !== undefined)\r\n                            ? stacks.indexOf(name)\r\n                            : -1; // indexOf returns -1 if element is not present\r\n\r\n                        return (index === -1)\r\n                            ? stacks.length - 1\r\n                            : index;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getRuler: function() {\r\n                        var me = this;\r\n                        var scale = me.getIndexScale();\r\n                        var stackCount = me.getStackCount();\r\n                        var datasetIndex = me.index;\r\n                        var isHorizontal = scale.isHorizontal();\r\n                        var start = isHorizontal ? scale.left : scale.top;\r\n                        var end = start + (isHorizontal ? scale.width : scale.height);\r\n                        var pixels = [];\r\n                        var i, ilen, min;\r\n\r\n                        for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\r\n                            pixels.push(scale.getPixelForValue(null, i, datasetIndex));\r\n                        }\r\n\r\n                        min = helpers.isNullOrUndef(scale.options.barThickness)\r\n                            ? computeMinSampleSize(scale, pixels)\r\n                            : -1;\r\n\r\n                        return {\r\n                            min: min,\r\n                            pixels: pixels,\r\n                            start: start,\r\n                            end: end,\r\n                            stackCount: stackCount,\r\n                            scale: scale\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Note: pixel values are not clamped to the scale area.\r\n                     * @private\r\n                     */\r\n                    calculateBarValuePixels: function(datasetIndex, index) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var scale = me.getValueScale();\r\n                        var datasets = chart.data.datasets;\r\n                        var value = scale.getRightValue(datasets[datasetIndex].data[index]);\r\n                        var stacked = scale.options.stacked;\r\n                        var stack = meta.stack;\r\n                        var start = 0;\r\n                        var i, imeta, ivalue, base, head, size;\r\n\r\n                        if (stacked || (stacked === undefined && stack !== undefined)) {\r\n                            for (i = 0; i < datasetIndex; ++i) {\r\n                                imeta = chart.getDatasetMeta(i);\r\n\r\n                                if (imeta.bar &&\r\n                                    imeta.stack === stack &&\r\n                                    imeta.controller.getValueScaleId() === scale.id &&\r\n                                    chart.isDatasetVisible(i)) {\r\n                                    ivalue = scale.getRightValue(datasets[i].data[index]);\r\n                                    if ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\r\n                                        start += ivalue;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        base = scale.getPixelForValue(start);\r\n                        head = scale.getPixelForValue(start + value);\r\n                        size = (head - base) / 2;\r\n\r\n                        return {\r\n                            size: size,\r\n                            base: base,\r\n                            head: head,\r\n                            center: head + size / 2\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    calculateBarIndexPixels: function(datasetIndex, index, ruler) {\r\n                        var me = this;\r\n                        var options = ruler.scale.options;\r\n                        var range = options.barThickness === 'flex'\r\n                            ? computeFlexCategoryTraits(index, ruler, options)\r\n                            : computeFitCategoryTraits(index, ruler, options);\r\n\r\n                        var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\r\n                        var center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\r\n                        var size = Math.min(\r\n                            helpers.valueOrDefault(options.maxBarThickness, Infinity),\r\n                            range.chunk * range.ratio);\r\n\r\n                        return {\r\n                            base: center - size / 2,\r\n                            head: center + size / 2,\r\n                            center: center,\r\n                            size: size\r\n                        };\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var scale = me.getValueScale();\r\n                        var rects = me.getMeta().data;\r\n                        var dataset = me.getDataset();\r\n                        var ilen = rects.length;\r\n                        var i = 0;\r\n\r\n                        helpers.canvas.clipArea(chart.ctx, chart.chartArea);\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            if (!isNaN(scale.getRightValue(dataset.data[i]))) {\r\n                                rects[i].draw();\r\n                            }\r\n                        }\r\n\r\n                        helpers.canvas.unclipArea(chart.ctx);\r\n                    },\r\n\r\n                    setHoverStyle: function(rectangle) {\r\n                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n                        var index = rectangle._index;\r\n                        var custom = rectangle.custom || {};\r\n                        var model = rectangle._model;\r\n\r\n                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    removeHoverStyle: function(rectangle) {\r\n                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n                        var index = rectangle._index;\r\n                        var custom = rectangle.custom || {};\r\n                        var model = rectangle._model;\r\n                        var rectangleElementOptions = this.chart.options.elements.rectangle;\r\n\r\n                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\r\n                        model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\r\n                        model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\r\n                    }\r\n                });\r\n\r\n                Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScaleId: function() {\r\n                        return this.getMeta().xAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScaleId: function() {\r\n                        return this.getMeta().yAxisID;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 11: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('doughnut', {\r\n                animation: {\r\n                    // Boolean - Whether we animate the rotation of the Doughnut\r\n                    animateRotate: true,\r\n                    // Boolean - Whether we animate scaling the Doughnut from the centre\r\n                    animateScale: false\r\n                },\r\n                hover: {\r\n                    mode: 'single'\r\n                },\r\n                legendCallback: function(chart) {\r\n                    var text = [];\r\n                    text.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n                    var data = chart.data;\r\n                    var datasets = data.datasets;\r\n                    var labels = data.labels;\r\n\r\n                    if (datasets.length) {\r\n                        for (var i = 0; i < datasets[0].data.length; ++i) {\r\n                            text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\r\n                            if (labels[i]) {\r\n                                text.push(labels[i]);\r\n                            }\r\n                            text.push('</li>');\r\n                        }\r\n                    }\r\n\r\n                    text.push('</ul>');\r\n                    return text.join('');\r\n                },\r\n                legend: {\r\n                    labels: {\r\n                        generateLabels: function(chart) {\r\n                            var data = chart.data;\r\n                            if (data.labels.length && data.datasets.length) {\r\n                                return data.labels.map(function(label, i) {\r\n                                    var meta = chart.getDatasetMeta(0);\r\n                                    var ds = data.datasets[0];\r\n                                    var arc = meta.data[i];\r\n                                    var custom = arc && arc.custom || {};\r\n                                    var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n                                    var arcOpts = chart.options.elements.arc;\r\n                                    var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n                                    var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n                                    var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\r\n                                    return {\r\n                                        text: label,\r\n                                        fillStyle: fill,\r\n                                        strokeStyle: stroke,\r\n                                        lineWidth: bw,\r\n                                        hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n                                        // Extra data used for toggling the correct item\r\n                                        index: i\r\n                                    };\r\n                                });\r\n                            }\r\n                            return [];\r\n                        }\r\n                    },\r\n\r\n                    onClick: function(e, legendItem) {\r\n                        var index = legendItem.index;\r\n                        var chart = this.chart;\r\n                        var i, ilen, meta;\r\n\r\n                        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n                            meta = chart.getDatasetMeta(i);\r\n                            // toggle visibility of index if exists\r\n                            if (meta.data[index]) {\r\n                                meta.data[index].hidden = !meta.data[index].hidden;\r\n                            }\r\n                        }\r\n\r\n                        chart.update();\r\n                    }\r\n                },\r\n\r\n                // The percentage of the chart that we cut out of the middle.\r\n                cutoutPercentage: 50,\r\n\r\n                // The rotation of the chart, where the first data arc begins.\r\n                rotation: Math.PI * -0.5,\r\n\r\n                // The total circumference of the chart.\r\n                circumference: Math.PI * 2.0,\r\n\r\n                // Need to override these to give a nice default\r\n                tooltips: {\r\n                    callbacks: {\r\n                        title: function() {\r\n                            return '';\r\n                        },\r\n                        label: function(tooltipItem, data) {\r\n                            var dataLabel = data.labels[tooltipItem.index];\r\n                            var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\r\n                            if (helpers.isArray(dataLabel)) {\r\n                                // show value on first line of multiline label\r\n                                // need to clone because we are changing the value\r\n                                dataLabel = dataLabel.slice();\r\n                                dataLabel[0] += value;\r\n                            } else {\r\n                                dataLabel += value;\r\n                            }\r\n\r\n                            return dataLabel;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            defaults._set('pie', helpers.clone(defaults.doughnut));\r\n            defaults._set('pie', {\r\n                cutoutPercentage: 0\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\r\n                    dataElementType: elements.Arc,\r\n\r\n                    linkScales: helpers.noop,\r\n\r\n                    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\r\n                    getRingIndex: function(datasetIndex) {\r\n                        var ringIndex = 0;\r\n\r\n                        for (var j = 0; j < datasetIndex; ++j) {\r\n                            if (this.chart.isDatasetVisible(j)) {\r\n                                ++ringIndex;\r\n                            }\r\n                        }\r\n\r\n                        return ringIndex;\r\n                    },\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var chartArea = chart.chartArea;\r\n                        var opts = chart.options;\r\n                        var arcOpts = opts.elements.arc;\r\n                        var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\r\n                        var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\r\n                        var minSize = Math.min(availableWidth, availableHeight);\r\n                        var offset = { x: 0, y: 0 };\r\n                        var meta = me.getMeta();\r\n                        var cutoutPercentage = opts.cutoutPercentage;\r\n                        var circumference = opts.circumference;\r\n\r\n                        // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\r\n                        if (circumference < Math.PI * 2.0) {\r\n                            var startAngle = opts.rotation % (Math.PI * 2.0);\r\n                            startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\r\n                            var endAngle = startAngle + circumference;\r\n                            var start = { x: Math.cos(startAngle), y: Math.sin(startAngle) };\r\n                            var end = { x: Math.cos(endAngle), y: Math.sin(endAngle) };\r\n                            var contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\r\n                            var contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\r\n                            var contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\r\n                            var contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\r\n                            var cutout = cutoutPercentage / 100.0;\r\n                            var min = { x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout)) };\r\n                            var max = { x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout)) };\r\n                            var size = { width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5 };\r\n                            minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\r\n                            offset = { x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5 };\r\n                        }\r\n\r\n                        chart.borderWidth = me.getMaxBorderWidth(meta.data);\r\n                        chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\r\n                        chart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\r\n                        chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n                        chart.offsetX = offset.x * chart.outerRadius;\r\n                        chart.offsetY = offset.y * chart.outerRadius;\r\n\r\n                        meta.total = me.calculateTotal();\r\n\r\n                        me.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\r\n                        me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\r\n\r\n                        helpers.each(meta.data, function(arc, index) {\r\n                            me.updateElement(arc, index, reset);\r\n                        });\r\n                    },\r\n\r\n                    updateElement: function(arc, index, reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var chartArea = chart.chartArea;\r\n                        var opts = chart.options;\r\n                        var animationOpts = opts.animation;\r\n                        var centerX = (chartArea.left + chartArea.right) / 2;\r\n                        var centerY = (chartArea.top + chartArea.bottom) / 2;\r\n                        var startAngle = opts.rotation; // non reset case handled later\r\n                        var endAngle = opts.rotation; // non reset case handled later\r\n                        var dataset = me.getDataset();\r\n                        var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\r\n                        var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\r\n                        var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\r\n                        var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n\r\n                        helpers.extend(arc, {\r\n                            // Utility\r\n                            _datasetIndex: me.index,\r\n                            _index: index,\r\n\r\n                            // Desired view properties\r\n                            _model: {\r\n                                x: centerX + chart.offsetX,\r\n                                y: centerY + chart.offsetY,\r\n                                startAngle: startAngle,\r\n                                endAngle: endAngle,\r\n                                circumference: circumference,\r\n                                outerRadius: outerRadius,\r\n                                innerRadius: innerRadius,\r\n                                label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\r\n                            }\r\n                        });\r\n\r\n                        var model = arc._model;\r\n                        // Resets the visual styles\r\n                        this.removeHoverStyle(arc);\r\n\r\n                        // Set correct angles if not resetting\r\n                        if (!reset || !animationOpts.animateRotate) {\r\n                            if (index === 0) {\r\n                                model.startAngle = opts.rotation;\r\n                            } else {\r\n                                model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\r\n                            }\r\n\r\n                            model.endAngle = model.startAngle + model.circumference;\r\n                        }\r\n\r\n                        arc.pivot();\r\n                    },\r\n\r\n                    removeHoverStyle: function(arc) {\r\n                        Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n                    },\r\n\r\n                    calculateTotal: function() {\r\n                        var dataset = this.getDataset();\r\n                        var meta = this.getMeta();\r\n                        var total = 0;\r\n                        var value;\r\n\r\n                        helpers.each(meta.data, function(element, index) {\r\n                            value = dataset.data[index];\r\n                            if (!isNaN(value) && !element.hidden) {\r\n                                total += Math.abs(value);\r\n                            }\r\n                        });\r\n\r\n                        /* if (total === 0) {\r\n                            total = NaN;\r\n                        }*/\r\n\r\n                        return total;\r\n                    },\r\n\r\n                    calculateCircumference: function(value) {\r\n                        var total = this.getMeta().total;\r\n                        if (total > 0 && !isNaN(value)) {\r\n                            return (Math.PI * 2.0) * (Math.abs(value) / total);\r\n                        }\r\n                        return 0;\r\n                    },\r\n\r\n                    // gets the max border or hover width to properly scale pie charts\r\n                    getMaxBorderWidth: function(arcs) {\r\n                        var max = 0;\r\n                        var index = this.index;\r\n                        var length = arcs.length;\r\n                        var borderWidth;\r\n                        var hoverWidth;\r\n\r\n                        for (var i = 0; i < length; i++) {\r\n                            borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\r\n                            hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\r\n\r\n                            max = borderWidth > max ? borderWidth : max;\r\n                            max = hoverWidth > max ? hoverWidth : max;\r\n                        }\r\n                        return max;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 12: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('line', {\r\n                showLines: true,\r\n                spanGaps: false,\r\n\r\n                hover: {\r\n                    mode: 'label'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'category',\r\n                        id: 'x-axis-0'\r\n                    }],\r\n                    yAxes: [{\r\n                        type: 'linear',\r\n                        id: 'y-axis-0'\r\n                    }]\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                function lineEnabled(dataset, options) {\r\n                    return helpers.valueOrDefault(dataset.showLine, options.showLines);\r\n                }\r\n\r\n                Chart.controllers.line = Chart.DatasetController.extend({\r\n                    datasetElementType: elements.Line,\r\n\r\n                    dataElementType: elements.Point,\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var line = meta.dataset;\r\n                        var points = meta.data || [];\r\n                        var options = me.chart.options;\r\n                        var lineElementOptions = options.elements.line;\r\n                        var scale = me.getScaleForId(meta.yAxisID);\r\n                        var i, ilen, custom;\r\n                        var dataset = me.getDataset();\r\n                        var showLine = lineEnabled(dataset, options);\r\n\r\n                        // Update Line\r\n                        if (showLine) {\r\n                            custom = line.custom || {};\r\n\r\n                            // Compatibility: If the properties are defined with only the old name, use those values\r\n                            if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n                                dataset.lineTension = dataset.tension;\r\n                            }\r\n\r\n                            // Utility\r\n                            line._scale = scale;\r\n                            line._datasetIndex = me.index;\r\n                            // Data\r\n                            line._children = points;\r\n                            // Model\r\n                            line._model = {\r\n                                // Appearance\r\n                                // The default behavior of lines is to break at null values, according\r\n                                // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\r\n                                // This option gives lines the ability to span gaps\r\n                                spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\r\n                                tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n                                backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n                                borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n                                borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n                                borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n                                borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n                                borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n                                borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n                                fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n                                steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\r\n                                cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\r\n                            };\r\n\r\n                            line.pivot();\r\n                        }\r\n\r\n                        // Update Points\r\n                        for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                            me.updateElement(points[i], i, reset);\r\n                        }\r\n\r\n                        if (showLine && line._model.tension !== 0) {\r\n                            me.updateBezierControlPoints();\r\n                        }\r\n\r\n                        // Now pivot the point for animation\r\n                        for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                            points[i].pivot();\r\n                        }\r\n                    },\r\n\r\n                    getPointBackgroundColor: function(point, index) {\r\n                        var backgroundColor = this.chart.options.elements.point.backgroundColor;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (custom.backgroundColor) {\r\n                            backgroundColor = custom.backgroundColor;\r\n                        } else if (dataset.pointBackgroundColor) {\r\n                            backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\r\n                        } else if (dataset.backgroundColor) {\r\n                            backgroundColor = dataset.backgroundColor;\r\n                        }\r\n\r\n                        return backgroundColor;\r\n                    },\r\n\r\n                    getPointBorderColor: function(point, index) {\r\n                        var borderColor = this.chart.options.elements.point.borderColor;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (custom.borderColor) {\r\n                            borderColor = custom.borderColor;\r\n                        } else if (dataset.pointBorderColor) {\r\n                            borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\r\n                        } else if (dataset.borderColor) {\r\n                            borderColor = dataset.borderColor;\r\n                        }\r\n\r\n                        return borderColor;\r\n                    },\r\n\r\n                    getPointBorderWidth: function(point, index) {\r\n                        var borderWidth = this.chart.options.elements.point.borderWidth;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (!isNaN(custom.borderWidth)) {\r\n                            borderWidth = custom.borderWidth;\r\n                        } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\r\n                            borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\r\n                        } else if (!isNaN(dataset.borderWidth)) {\r\n                            borderWidth = dataset.borderWidth;\r\n                        }\r\n\r\n                        return borderWidth;\r\n                    },\r\n\r\n                    updateElement: function(point, index, reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var custom = point.custom || {};\r\n                        var dataset = me.getDataset();\r\n                        var datasetIndex = me.index;\r\n                        var value = dataset.data[index];\r\n                        var yScale = me.getScaleForId(meta.yAxisID);\r\n                        var xScale = me.getScaleForId(meta.xAxisID);\r\n                        var pointOptions = me.chart.options.elements.point;\r\n                        var x, y;\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n                            dataset.pointRadius = dataset.radius;\r\n                        }\r\n                        if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\r\n                            dataset.pointHitRadius = dataset.hitRadius;\r\n                        }\r\n\r\n                        x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\r\n                        y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\r\n\r\n                        // Utility\r\n                        point._xScale = xScale;\r\n                        point._yScale = yScale;\r\n                        point._datasetIndex = datasetIndex;\r\n                        point._index = index;\r\n\r\n                        // Desired view properties\r\n                        point._model = {\r\n                            x: x,\r\n                            y: y,\r\n                            skip: custom.skip || isNaN(x) || isNaN(y),\r\n                            // Appearance\r\n                            radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\r\n                            pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\r\n                            backgroundColor: me.getPointBackgroundColor(point, index),\r\n                            borderColor: me.getPointBorderColor(point, index),\r\n                            borderWidth: me.getPointBorderWidth(point, index),\r\n                            tension: meta.dataset._model ? meta.dataset._model.tension : 0,\r\n                            steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\r\n                            // Tooltip\r\n                            hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\r\n                        };\r\n                    },\r\n\r\n                    calculatePointY: function(value, index, datasetIndex) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var yScale = me.getScaleForId(meta.yAxisID);\r\n                        var sumPos = 0;\r\n                        var sumNeg = 0;\r\n                        var i, ds, dsMeta;\r\n\r\n                        if (yScale.options.stacked) {\r\n                            for (i = 0; i < datasetIndex; i++) {\r\n                                ds = chart.data.datasets[i];\r\n                                dsMeta = chart.getDatasetMeta(i);\r\n                                if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\r\n                                    var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\r\n                                    if (stackedRightValue < 0) {\r\n                                        sumNeg += stackedRightValue || 0;\r\n                                    } else {\r\n                                        sumPos += stackedRightValue || 0;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            var rightValue = Number(yScale.getRightValue(value));\r\n                            if (rightValue < 0) {\r\n                                return yScale.getPixelForValue(sumNeg + rightValue);\r\n                            }\r\n                            return yScale.getPixelForValue(sumPos + rightValue);\r\n                        }\r\n\r\n                        return yScale.getPixelForValue(value);\r\n                    },\r\n\r\n                    updateBezierControlPoints: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var area = me.chart.chartArea;\r\n                        var points = (meta.data || []);\r\n                        var i, ilen, point, model, controlPoints;\r\n\r\n                        // Only consider points that are drawn in case the spanGaps option is used\r\n                        if (meta.dataset._model.spanGaps) {\r\n                            points = points.filter(function(pt) {\r\n                                return !pt._model.skip;\r\n                            });\r\n                        }\r\n\r\n                        function capControlPoint(pt, min, max) {\r\n                            return Math.max(Math.min(pt, max), min);\r\n                        }\r\n\r\n                        if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\r\n                            helpers.splineCurveMonotone(points);\r\n                        } else {\r\n                            for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                                point = points[i];\r\n                                model = point._model;\r\n                                controlPoints = helpers.splineCurve(\r\n                                    helpers.previousItem(points, i)._model,\r\n                                    model,\r\n                                    helpers.nextItem(points, i)._model,\r\n                                    meta.dataset._model.tension\r\n                                );\r\n                                model.controlPointPreviousX = controlPoints.previous.x;\r\n                                model.controlPointPreviousY = controlPoints.previous.y;\r\n                                model.controlPointNextX = controlPoints.next.x;\r\n                                model.controlPointNextY = controlPoints.next.y;\r\n                            }\r\n                        }\r\n\r\n                        if (me.chart.options.elements.line.capBezierPoints) {\r\n                            for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                                model = points[i]._model;\r\n                                model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\r\n                                model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\r\n                                model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\r\n                                model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var points = meta.data || [];\r\n                        var area = chart.chartArea;\r\n                        var ilen = points.length;\r\n                        var i = 0;\r\n\r\n                        helpers.canvas.clipArea(chart.ctx, area);\r\n\r\n                        if (lineEnabled(me.getDataset(), chart.options)) {\r\n                            meta.dataset.draw();\r\n                        }\r\n\r\n                        helpers.canvas.unclipArea(chart.ctx);\r\n\r\n                        // Draw the points\r\n                        for (; i < ilen; ++i) {\r\n                            points[i].draw(area);\r\n                        }\r\n                    },\r\n\r\n                    setHoverStyle: function(point) {\r\n                        // Point\r\n                        var dataset = this.chart.data.datasets[point._datasetIndex];\r\n                        var index = point._index;\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n\r\n                        model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n                        model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    removeHoverStyle: function(point) {\r\n                        var me = this;\r\n                        var dataset = me.chart.data.datasets[point._datasetIndex];\r\n                        var index = point._index;\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n                            dataset.pointRadius = dataset.radius;\r\n                        }\r\n\r\n                        model.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\r\n                        model.backgroundColor = me.getPointBackgroundColor(point, index);\r\n                        model.borderColor = me.getPointBorderColor(point, index);\r\n                        model.borderWidth = me.getPointBorderWidth(point, index);\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 13: [function(require, module, exports) {\r\n            /* global window: false */\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                animation: {\r\n                    duration: 1000,\r\n                    easing: 'easeOutQuart',\r\n                    onProgress: helpers.noop,\r\n                    onComplete: helpers.noop\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Animation = Element.extend({\r\n                    chart: null, // the animation associated chart instance\r\n                    currentStep: 0, // the current animation step\r\n                    numSteps: 60, // default number of steps\r\n                    easing: '', // the easing to use for this animation\r\n                    render: null, // render function used by the animation service\r\n\r\n                    onAnimationProgress: null, // user specified callback to fire on each step of the animation\r\n                    onAnimationComplete: null, // user specified callback to fire when the animation finishes\r\n                });\r\n\r\n                Chart.animationService = {\r\n                    frameDuration: 17,\r\n                    animations: [],\r\n                    dropFrames: 0,\r\n                    request: null,\r\n\r\n                    /**\r\n                     * @param {Chart} chart - The chart to animate.\r\n                     * @param {Chart.Animation} animation - The animation that we will animate.\r\n                     * @param {Number} duration - The animation duration in ms.\r\n                     * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\r\n                     */\r\n                    addAnimation: function(chart, animation, duration, lazy) {\r\n                        var animations = this.animations;\r\n                        var i, ilen;\r\n\r\n                        animation.chart = chart;\r\n\r\n                        if (!lazy) {\r\n                            chart.animating = true;\r\n                        }\r\n\r\n                        for (i = 0, ilen = animations.length; i < ilen; ++i) {\r\n                            if (animations[i].chart === chart) {\r\n                                animations[i] = animation;\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        animations.push(animation);\r\n\r\n                        // If there are no animations queued, manually kickstart a digest, for lack of a better word\r\n                        if (animations.length === 1) {\r\n                            this.requestAnimationFrame();\r\n                        }\r\n                    },\r\n\r\n                    cancelAnimation: function(chart) {\r\n                        var index = helpers.findIndex(this.animations, function(animation) {\r\n                            return animation.chart === chart;\r\n                        });\r\n\r\n                        if (index !== -1) {\r\n                            this.animations.splice(index, 1);\r\n                            chart.animating = false;\r\n                        }\r\n                    },\r\n\r\n                    requestAnimationFrame: function() {\r\n                        var me = this;\r\n                        if (me.request === null) {\r\n                            // Skip animation frame requests until the active one is executed.\r\n                            // This can happen when processing mouse events, e.g. 'mousemove'\r\n                            // and 'mouseout' events will trigger multiple renders.\r\n                            me.request = helpers.requestAnimFrame.call(window, function() {\r\n                                me.request = null;\r\n                                me.startDigest();\r\n                            });\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    startDigest: function() {\r\n                        var me = this;\r\n                        var startTime = Date.now();\r\n                        var framesToDrop = 0;\r\n\r\n                        if (me.dropFrames > 1) {\r\n                            framesToDrop = Math.floor(me.dropFrames);\r\n                            me.dropFrames = me.dropFrames % 1;\r\n                        }\r\n\r\n                        me.advance(1 + framesToDrop);\r\n\r\n                        var endTime = Date.now();\r\n\r\n                        me.dropFrames += (endTime - startTime) / me.frameDuration;\r\n\r\n                        // Do we have more stuff to animate?\r\n                        if (me.animations.length > 0) {\r\n                            me.requestAnimationFrame();\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    advance: function(count) {\r\n                        var animations = this.animations;\r\n                        var animation, chart;\r\n                        var i = 0;\r\n\r\n                        while (i < animations.length) {\r\n                            animation = animations[i];\r\n                            chart = animation.chart;\r\n\r\n                            animation.currentStep = (animation.currentStep || 0) + count;\r\n                            animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\r\n\r\n                            helpers.callback(animation.render, [chart, animation], chart);\r\n                            helpers.callback(animation.onAnimationProgress, [animation], chart);\r\n\r\n                            if (animation.currentStep >= animation.numSteps) {\r\n                                helpers.callback(animation.onAnimationComplete, [animation], chart);\r\n                                chart.animating = false;\r\n                                animations.splice(i, 1);\r\n                            } else {\r\n                                ++i;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.Animation instead\r\n                 * @prop Chart.Animation#animationObject\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 */\r\n                Object.defineProperty(Chart.Animation.prototype, 'animationObject', {\r\n                    get: function() {\r\n                        return this;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.Animation#chart instead\r\n                 * @prop Chart.Animation#chartInstance\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 */\r\n                Object.defineProperty(Chart.Animation.prototype, 'chartInstance', {\r\n                    get: function() {\r\n                        return this.chart;\r\n                    },\r\n                    set: function(value) {\r\n                        this.chart = value;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 14: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var Interaction = require(19);\r\n            var layouts = require(21);\r\n            var platform = require(39);\r\n            var plugins = require(22);\r\n\r\n            module.exports = function(Chart) {\r\n                // Create a dictionary of chart types, to allow for extension of existing types\r\n                Chart.types = {};\r\n\r\n                // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\r\n                // Destroy method on the chart will remove the instance of the chart from this reference.\r\n                Chart.instances = {};\r\n\r\n                // Controllers available for dataset visualization eg. bar, line, slice, etc.\r\n                Chart.controllers = {};\r\n\r\n                /**\r\n                 * Initializes the given config with global and chart default values.\r\n                 */\r\n                function initConfig(config) {\r\n                    config = config || {};\r\n\r\n                    // Do NOT use configMerge() for the data object because this method merges arrays\r\n                    // and so would change references to labels and datasets, preventing data updates.\r\n                    var data = config.data = config.data || {};\r\n                    data.datasets = data.datasets || [];\r\n                    data.labels = data.labels || [];\r\n\r\n                    config.options = helpers.configMerge(\r\n                        defaults.global,\r\n                        defaults[config.type],\r\n                        config.options || {});\r\n\r\n                    return config;\r\n                }\r\n\r\n                /**\r\n                 * Updates the config of the chart\r\n                 * @param chart {Chart} chart to update the options for\r\n                 */\r\n                function updateConfig(chart) {\r\n                    var newOptions = chart.options;\r\n\r\n                    helpers.each(chart.scales, function(scale) {\r\n                        layouts.removeBox(chart, scale);\r\n                    });\r\n\r\n                    newOptions = helpers.configMerge(\r\n                        Chart.defaults.global,\r\n                        Chart.defaults[chart.config.type],\r\n                        newOptions);\r\n\r\n                    chart.options = chart.config.options = newOptions;\r\n                    chart.ensureScalesHaveIDs();\r\n                    chart.buildOrUpdateScales();\r\n                    // Tooltip\r\n                    chart.tooltip._options = newOptions.tooltips;\r\n                    chart.tooltip.initialize();\r\n                }\r\n\r\n                function positionIsHorizontal(position) {\r\n                    return position === 'top' || position === 'bottom';\r\n                }\r\n\r\n                helpers.extend(Chart.prototype, /** @lends Chart */ {\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    construct: function(item, config) {\r\n                        var me = this;\r\n\r\n                        config = initConfig(config);\r\n\r\n                        var context = platform.acquireContext(item, config);\r\n                        var canvas = context && context.canvas;\r\n                        var height = canvas && canvas.height;\r\n                        var width = canvas && canvas.width;\r\n\r\n                        me.id = helpers.uid();\r\n                        me.ctx = context;\r\n                        me.canvas = canvas;\r\n                        me.config = config;\r\n                        me.width = width;\r\n                        me.height = height;\r\n                        me.aspectRatio = height ? width / height : null;\r\n                        me.options = config.options;\r\n                        me._bufferedRender = false;\r\n\r\n                        /**\r\n                         * Provided for backward compatibility, Chart and Chart.Controller have been merged,\r\n                         * the \"instance\" still need to be defined since it might be called from plugins.\r\n                         * @prop Chart#chart\r\n                         * @deprecated since version 2.6.0\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        me.chart = me;\r\n                        me.controller = me; // chart.chart.controller #inception\r\n\r\n                        // Add the chart instance to the global namespace\r\n                        Chart.instances[me.id] = me;\r\n\r\n                        // Define alias to the config data: `chart.data === chart.config.data`\r\n                        Object.defineProperty(me, 'data', {\r\n                            get: function() {\r\n                                return me.config.data;\r\n                            },\r\n                            set: function(value) {\r\n                                me.config.data = value;\r\n                            }\r\n                        });\r\n\r\n                        if (!context || !canvas) {\r\n                            // The given item is not a compatible context2d element, let's return before finalizing\r\n                            // the chart initialization but after setting basic chart / controller properties that\r\n                            // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\r\n                            // https://github.com/chartjs/Chart.js/issues/2807\r\n                            console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n                            return;\r\n                        }\r\n\r\n                        me.initialize();\r\n                        me.update();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    initialize: function() {\r\n                        var me = this;\r\n\r\n                        // Before init plugin notification\r\n                        plugins.notify(me, 'beforeInit');\r\n\r\n                        helpers.retinaScale(me, me.options.devicePixelRatio);\r\n\r\n                        me.bindEvents();\r\n\r\n                        if (me.options.responsive) {\r\n                            // Initial resize before chart draws (must be silent to preserve initial animations).\r\n                            me.resize(true);\r\n                        }\r\n\r\n                        // Make sure scales have IDs and are built before we build any controllers.\r\n                        me.ensureScalesHaveIDs();\r\n                        me.buildOrUpdateScales();\r\n                        me.initToolTip();\r\n\r\n                        // After init plugin notification\r\n                        plugins.notify(me, 'afterInit');\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    clear: function() {\r\n                        helpers.canvas.clear(this);\r\n                        return this;\r\n                    },\r\n\r\n                    stop: function() {\r\n                        // Stops any current animation loop occurring\r\n                        Chart.animationService.cancelAnimation(this);\r\n                        return this;\r\n                    },\r\n\r\n                    resize: function(silent) {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        var canvas = me.canvas;\r\n                        var aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\r\n\r\n                        // the canvas render width and height will be casted to integers so make sure that\r\n                        // the canvas display style uses the same integer values to avoid blurring effect.\r\n\r\n                        // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\r\n                        var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\r\n                        var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\r\n\r\n                        if (me.width === newWidth && me.height === newHeight) {\r\n                            return;\r\n                        }\r\n\r\n                        canvas.width = me.width = newWidth;\r\n                        canvas.height = me.height = newHeight;\r\n                        canvas.style.width = newWidth + 'px';\r\n                        canvas.style.height = newHeight + 'px';\r\n\r\n                        helpers.retinaScale(me, options.devicePixelRatio);\r\n\r\n                        if (!silent) {\r\n                            // Notify any plugins about the resize\r\n                            var newSize = { width: newWidth, height: newHeight };\r\n                            plugins.notify(me, 'resize', [newSize]);\r\n\r\n                            // Notify of resize\r\n                            if (me.options.onResize) {\r\n                                me.options.onResize(me, newSize);\r\n                            }\r\n\r\n                            me.stop();\r\n                            me.update(me.options.responsiveAnimationDuration);\r\n                        }\r\n                    },\r\n\r\n                    ensureScalesHaveIDs: function() {\r\n                        var options = this.options;\r\n                        var scalesOptions = options.scales || {};\r\n                        var scaleOptions = options.scale;\r\n\r\n                        helpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\r\n                            xAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\r\n                        });\r\n\r\n                        helpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\r\n                            yAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\r\n                        });\r\n\r\n                        if (scaleOptions) {\r\n                            scaleOptions.id = scaleOptions.id || 'scale';\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Builds a map of scale ID to scale object for future lookup.\r\n                     */\r\n                    buildOrUpdateScales: function() {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        var scales = me.scales || {};\r\n                        var items = [];\r\n                        var updated = Object.keys(scales).reduce(function(obj, id) {\r\n                            obj[id] = false;\r\n                            return obj;\r\n                        }, {});\r\n\r\n                        if (options.scales) {\r\n                            items = items.concat(\r\n                                (options.scales.xAxes || []).map(function(xAxisOptions) {\r\n                                    return { options: xAxisOptions, dtype: 'category', dposition: 'bottom' };\r\n                                }),\r\n                                (options.scales.yAxes || []).map(function(yAxisOptions) {\r\n                                    return { options: yAxisOptions, dtype: 'linear', dposition: 'left' };\r\n                                })\r\n                            );\r\n                        }\r\n\r\n                        if (options.scale) {\r\n                            items.push({\r\n                                options: options.scale,\r\n                                dtype: 'radialLinear',\r\n                                isDefault: true,\r\n                                dposition: 'chartArea'\r\n                            });\r\n                        }\r\n\r\n                        helpers.each(items, function(item) {\r\n                            var scaleOptions = item.options;\r\n                            var id = scaleOptions.id;\r\n                            var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\r\n\r\n                            if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\r\n                                scaleOptions.position = item.dposition;\r\n                            }\r\n\r\n                            updated[id] = true;\r\n                            var scale = null;\r\n                            if (id in scales && scales[id].type === scaleType) {\r\n                                scale = scales[id];\r\n                                scale.options = scaleOptions;\r\n                                scale.ctx = me.ctx;\r\n                                scale.chart = me;\r\n                            } else {\r\n                                var scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\r\n                                if (!scaleClass) {\r\n                                    return;\r\n                                }\r\n                                scale = new scaleClass({\r\n                                    id: id,\r\n                                    type: scaleType,\r\n                                    options: scaleOptions,\r\n                                    ctx: me.ctx,\r\n                                    chart: me\r\n                                });\r\n                                scales[scale.id] = scale;\r\n                            }\r\n\r\n                            scale.mergeTicksOptions();\r\n\r\n                            // TODO(SB): I think we should be able to remove this custom case (options.scale)\r\n                            // and consider it as a regular scale part of the \"scales\"\" map only! This would\r\n                            // make the logic easier and remove some useless? custom code.\r\n                            if (item.isDefault) {\r\n                                me.scale = scale;\r\n                            }\r\n                        });\r\n                        // clear up discarded scales\r\n                        helpers.each(updated, function(hasUpdated, id) {\r\n                            if (!hasUpdated) {\r\n                                delete scales[id];\r\n                            }\r\n                        });\r\n\r\n                        me.scales = scales;\r\n\r\n                        Chart.scaleService.addScalesToLayout(this);\r\n                    },\r\n\r\n                    buildOrUpdateControllers: function() {\r\n                        var me = this;\r\n                        var types = [];\r\n                        var newControllers = [];\r\n\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            var meta = me.getDatasetMeta(datasetIndex);\r\n                            var type = dataset.type || me.config.type;\r\n\r\n                            if (meta.type && meta.type !== type) {\r\n                                me.destroyDatasetMeta(datasetIndex);\r\n                                meta = me.getDatasetMeta(datasetIndex);\r\n                            }\r\n                            meta.type = type;\r\n\r\n                            types.push(meta.type);\r\n\r\n                            if (meta.controller) {\r\n                                meta.controller.updateIndex(datasetIndex);\r\n                                meta.controller.linkScales();\r\n                            } else {\r\n                                var ControllerClass = Chart.controllers[meta.type];\r\n                                if (ControllerClass === undefined) {\r\n                                    throw new Error('\"' + meta.type + '\" is not a chart type.');\r\n                                }\r\n\r\n                                meta.controller = new ControllerClass(me, datasetIndex);\r\n                                newControllers.push(meta.controller);\r\n                            }\r\n                        }, me);\r\n\r\n                        return newControllers;\r\n                    },\r\n\r\n                    /**\r\n                     * Reset the elements of all datasets\r\n                     * @private\r\n                     */\r\n                    resetElements: function() {\r\n                        var me = this;\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            me.getDatasetMeta(datasetIndex).controller.reset();\r\n                        }, me);\r\n                    },\r\n\r\n                    /**\r\n                    * Resets the chart back to it's state before the initial animation\r\n                    */\r\n                    reset: function() {\r\n                        this.resetElements();\r\n                        this.tooltip.initialize();\r\n                    },\r\n\r\n                    update: function(config) {\r\n                        var me = this;\r\n\r\n                        if (!config || typeof config !== 'object') {\r\n                            // backwards compatibility\r\n                            config = {\r\n                                duration: config,\r\n                                lazy: arguments[1]\r\n                            };\r\n                        }\r\n\r\n                        updateConfig(me);\r\n\r\n                        // plugins options references might have change, let's invalidate the cache\r\n                        // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\r\n                        plugins._invalidate(me);\r\n\r\n                        if (plugins.notify(me, 'beforeUpdate') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // In case the entire data object changed\r\n                        me.tooltip._data = me.data;\r\n\r\n                        // Make sure dataset controllers are updated and new controllers are reset\r\n                        var newControllers = me.buildOrUpdateControllers();\r\n\r\n                        // Make sure all dataset controllers have correct meta data counts\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\r\n                        }, me);\r\n\r\n                        me.updateLayout();\r\n\r\n                        // Can only reset the new controllers after the scales have been updated\r\n                        if (me.options.animation && me.options.animation.duration) {\r\n                            helpers.each(newControllers, function(controller) {\r\n                                controller.reset();\r\n                            });\r\n                        }\r\n\r\n                        me.updateDatasets();\r\n\r\n                        // Need to reset tooltip in case it is displayed with elements that are removed\r\n                        // after update.\r\n                        me.tooltip.initialize();\r\n\r\n                        // Last active contains items that were previously in the tooltip.\r\n                        // When we reset the tooltip, we need to clear it\r\n                        me.lastActive = [];\r\n\r\n                        // Do this before render so that any plugins that need final scale updates can use it\r\n                        plugins.notify(me, 'afterUpdate');\r\n\r\n                        if (me._bufferedRender) {\r\n                            me._bufferedRequest = {\r\n                                duration: config.duration,\r\n                                easing: config.easing,\r\n                                lazy: config.lazy\r\n                            };\r\n                        } else {\r\n                            me.render(config);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\r\n                     * hook, in which case, plugins will not be called on `afterLayout`.\r\n                     * @private\r\n                     */\r\n                    updateLayout: function() {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeLayout') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        layouts.update(this, this.width, this.height);\r\n\r\n                        /**\r\n                         * Provided for backward compatibility, use `afterLayout` instead.\r\n                         * @method IPlugin#afterScaleUpdate\r\n                         * @deprecated since version 2.5.0\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        plugins.notify(me, 'afterScaleUpdate');\r\n                        plugins.notify(me, 'afterLayout');\r\n                    },\r\n\r\n                    /**\r\n                     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\r\n                     * @private\r\n                     */\r\n                    updateDatasets: function() {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                            me.updateDataset(i);\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterDatasetsUpdate');\r\n                    },\r\n\r\n                    /**\r\n                     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\r\n                     * @private\r\n                     */\r\n                    updateDataset: function(index) {\r\n                        var me = this;\r\n                        var meta = me.getDatasetMeta(index);\r\n                        var args = {\r\n                            meta: meta,\r\n                            index: index\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        meta.controller.update();\r\n\r\n                        plugins.notify(me, 'afterDatasetUpdate', [args]);\r\n                    },\r\n\r\n                    render: function(config) {\r\n                        var me = this;\r\n\r\n                        if (!config || typeof config !== 'object') {\r\n                            // backwards compatibility\r\n                            config = {\r\n                                duration: config,\r\n                                lazy: arguments[1]\r\n                            };\r\n                        }\r\n\r\n                        var duration = config.duration;\r\n                        var lazy = config.lazy;\r\n\r\n                        if (plugins.notify(me, 'beforeRender') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        var animationOptions = me.options.animation;\r\n                        var onComplete = function(animation) {\r\n                            plugins.notify(me, 'afterRender');\r\n                            helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\r\n                        };\r\n\r\n                        if (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\r\n                            var animation = new Chart.Animation({\r\n                                numSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\r\n                                easing: config.easing || animationOptions.easing,\r\n\r\n                                render: function(chart, animationObject) {\r\n                                    var easingFunction = helpers.easing.effects[animationObject.easing];\r\n                                    var currentStep = animationObject.currentStep;\r\n                                    var stepDecimal = currentStep / animationObject.numSteps;\r\n\r\n                                    chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\r\n                                },\r\n\r\n                                onAnimationProgress: animationOptions.onProgress,\r\n                                onAnimationComplete: onComplete\r\n                            });\r\n\r\n                            Chart.animationService.addAnimation(me, animation, duration, lazy);\r\n                        } else {\r\n                            me.draw();\r\n\r\n                            // See https://github.com/chartjs/Chart.js/issues/3781\r\n                            onComplete(new Chart.Animation({ numSteps: 0, chart: me }));\r\n                        }\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    draw: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        me.clear();\r\n\r\n                        if (helpers.isNullOrUndef(easingValue)) {\r\n                            easingValue = 1;\r\n                        }\r\n\r\n                        me.transition(easingValue);\r\n\r\n                        if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Draw all the scales\r\n                        helpers.each(me.boxes, function(box) {\r\n                            box.draw(me.chartArea);\r\n                        }, me);\r\n\r\n                        if (me.scale) {\r\n                            me.scale.draw();\r\n                        }\r\n\r\n                        me.drawDatasets(easingValue);\r\n                        me._drawTooltip(easingValue);\r\n\r\n                        plugins.notify(me, 'afterDraw', [easingValue]);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    transition: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\r\n                            if (me.isDatasetVisible(i)) {\r\n                                me.getDatasetMeta(i).controller.transition(easingValue);\r\n                            }\r\n                        }\r\n\r\n                        me.tooltip.transition(easingValue);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\r\n                     * @private\r\n                     */\r\n                    drawDatasets: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Draw datasets reversed to support proper line stacking\r\n                        for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\r\n                            if (me.isDatasetVisible(i)) {\r\n                                me.drawDataset(i, easingValue);\r\n                            }\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\r\n                     * @private\r\n                     */\r\n                    drawDataset: function(index, easingValue) {\r\n                        var me = this;\r\n                        var meta = me.getDatasetMeta(index);\r\n                        var args = {\r\n                            meta: meta,\r\n                            index: index,\r\n                            easingValue: easingValue\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        meta.controller.draw(easingValue);\r\n\r\n                        plugins.notify(me, 'afterDatasetDraw', [args]);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\r\n                     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\r\n                     * @private\r\n                     */\r\n                    _drawTooltip: function(easingValue) {\r\n                        var me = this;\r\n                        var tooltip = me.tooltip;\r\n                        var args = {\r\n                            tooltip: tooltip,\r\n                            easingValue: easingValue\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        tooltip.draw();\r\n\r\n                        plugins.notify(me, 'afterTooltipDraw', [args]);\r\n                    },\r\n\r\n                    // Get the single element that was clicked on\r\n                    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\r\n                    getElementAtEvent: function(e) {\r\n                        return Interaction.modes.single(this, e);\r\n                    },\r\n\r\n                    getElementsAtEvent: function(e) {\r\n                        return Interaction.modes.label(this, e, { intersect: true });\r\n                    },\r\n\r\n                    getElementsAtXAxis: function(e) {\r\n                        return Interaction.modes['x-axis'](this, e, { intersect: true });\r\n                    },\r\n\r\n                    getElementsAtEventForMode: function(e, mode, options) {\r\n                        var method = Interaction.modes[mode];\r\n                        if (typeof method === 'function') {\r\n                            return method(this, e, options);\r\n                        }\r\n\r\n                        return [];\r\n                    },\r\n\r\n                    getDatasetAtEvent: function(e) {\r\n                        return Interaction.modes.dataset(this, e, { intersect: true });\r\n                    },\r\n\r\n                    getDatasetMeta: function(datasetIndex) {\r\n                        var me = this;\r\n                        var dataset = me.data.datasets[datasetIndex];\r\n                        if (!dataset._meta) {\r\n                            dataset._meta = {};\r\n                        }\r\n\r\n                        var meta = dataset._meta[me.id];\r\n                        if (!meta) {\r\n                            meta = dataset._meta[me.id] = {\r\n                                type: null,\r\n                                data: [],\r\n                                dataset: null,\r\n                                controller: null,\r\n                                hidden: null,\t\t\t// See isDatasetVisible() comment\r\n                                xAxisID: null,\r\n                                yAxisID: null\r\n                            };\r\n                        }\r\n\r\n                        return meta;\r\n                    },\r\n\r\n                    getVisibleDatasetCount: function() {\r\n                        var count = 0;\r\n                        for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n                            if (this.isDatasetVisible(i)) {\r\n                                count++;\r\n                            }\r\n                        }\r\n                        return count;\r\n                    },\r\n\r\n                    isDatasetVisible: function(datasetIndex) {\r\n                        var meta = this.getDatasetMeta(datasetIndex);\r\n\r\n                        // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\r\n                        // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\r\n                        return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\r\n                    },\r\n\r\n                    generateLegend: function() {\r\n                        return this.options.legendCallback(this);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    destroyDatasetMeta: function(datasetIndex) {\r\n                        var id = this.id;\r\n                        var dataset = this.data.datasets[datasetIndex];\r\n                        var meta = dataset._meta && dataset._meta[id];\r\n\r\n                        if (meta) {\r\n                            meta.controller.destroy();\r\n                            delete dataset._meta[id];\r\n                        }\r\n                    },\r\n\r\n                    destroy: function() {\r\n                        var me = this;\r\n                        var canvas = me.canvas;\r\n                        var i, ilen;\r\n\r\n                        me.stop();\r\n\r\n                        // dataset controllers need to cleanup associated data\r\n                        for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                            me.destroyDatasetMeta(i);\r\n                        }\r\n\r\n                        if (canvas) {\r\n                            me.unbindEvents();\r\n                            helpers.canvas.clear(me);\r\n                            platform.releaseContext(me.ctx);\r\n                            me.canvas = null;\r\n                            me.ctx = null;\r\n                        }\r\n\r\n                        plugins.notify(me, 'destroy');\r\n\r\n                        delete Chart.instances[me.id];\r\n                    },\r\n\r\n                    toBase64Image: function() {\r\n                        return this.canvas.toDataURL.apply(this.canvas, arguments);\r\n                    },\r\n\r\n                    initToolTip: function() {\r\n                        var me = this;\r\n                        me.tooltip = new Chart.Tooltip({\r\n                            _chart: me,\r\n                            _chartInstance: me, // deprecated, backward compatibility\r\n                            _data: me.data,\r\n                            _options: me.options.tooltips\r\n                        }, me);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    bindEvents: function() {\r\n                        var me = this;\r\n                        var listeners = me._listeners = {};\r\n                        var listener = function() {\r\n                            me.eventHandler.apply(me, arguments);\r\n                        };\r\n\r\n                        helpers.each(me.options.events, function(type) {\r\n                            platform.addEventListener(me, type, listener);\r\n                            listeners[type] = listener;\r\n                        });\r\n\r\n                        // Elements used to detect size change should not be injected for non responsive charts.\r\n                        // See https://github.com/chartjs/Chart.js/issues/2210\r\n                        if (me.options.responsive) {\r\n                            listener = function() {\r\n                                me.resize();\r\n                            };\r\n\r\n                            platform.addEventListener(me, 'resize', listener);\r\n                            listeners.resize = listener;\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    unbindEvents: function() {\r\n                        var me = this;\r\n                        var listeners = me._listeners;\r\n                        if (!listeners) {\r\n                            return;\r\n                        }\r\n\r\n                        delete me._listeners;\r\n                        helpers.each(listeners, function(listener, type) {\r\n                            platform.removeEventListener(me, type, listener);\r\n                        });\r\n                    },\r\n\r\n                    updateHoverStyle: function(elements, mode, enabled) {\r\n                        var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\r\n                        var element, i, ilen;\r\n\r\n                        for (i = 0, ilen = elements.length; i < ilen; ++i) {\r\n                            element = elements[i];\r\n                            if (element) {\r\n                                this.getDatasetMeta(element._datasetIndex).controller[method](element);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    eventHandler: function(e) {\r\n                        var me = this;\r\n                        var tooltip = me.tooltip;\r\n\r\n                        if (plugins.notify(me, 'beforeEvent', [e]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Buffer any update calls so that renders do not occur\r\n                        me._bufferedRender = true;\r\n                        me._bufferedRequest = null;\r\n\r\n                        var changed = me.handleEvent(e);\r\n                        // for smooth tooltip animations issue #4989\r\n                        // the tooltip should be the source of change\r\n                        // Animation check workaround:\r\n                        // tooltip._start will be null when tooltip isn't animating\r\n                        if (tooltip) {\r\n                            changed = tooltip._start\r\n                                ? tooltip.handleEvent(e)\r\n                                : changed | tooltip.handleEvent(e);\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterEvent', [e]);\r\n\r\n                        var bufferedRequest = me._bufferedRequest;\r\n                        if (bufferedRequest) {\r\n                            // If we have an update that was triggered, we need to do a normal render\r\n                            me.render(bufferedRequest);\r\n                        } else if (changed && !me.animating) {\r\n                            // If entering, leaving, or changing elements, animate the change via pivot\r\n                            me.stop();\r\n\r\n                            // We only need to render at this point. Updating will cause scales to be\r\n                            // recomputed generating flicker & using more memory than necessary.\r\n                            me.render(me.options.hover.animationDuration, true);\r\n                        }\r\n\r\n                        me._bufferedRender = false;\r\n                        me._bufferedRequest = null;\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    /**\r\n                     * Handle an event\r\n                     * @private\r\n                     * @param {IEvent} event the event to handle\r\n                     * @return {Boolean} true if the chart needs to re-render\r\n                     */\r\n                    handleEvent: function(e) {\r\n                        var me = this;\r\n                        var options = me.options || {};\r\n                        var hoverOptions = options.hover;\r\n                        var changed = false;\r\n\r\n                        me.lastActive = me.lastActive || [];\r\n\r\n                        // Find Active Elements for hover and tooltips\r\n                        if (e.type === 'mouseout') {\r\n                            me.active = [];\r\n                        } else {\r\n                            me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\r\n                        }\r\n\r\n                        // Invoke onHover hook\r\n                        // Need to call with native event here to not break backwards compatibility\r\n                        helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\r\n\r\n                        if (e.type === 'mouseup' || e.type === 'click') {\r\n                            if (options.onClick) {\r\n                                // Use e.native here for backwards compatibility\r\n                                options.onClick.call(me, e.native, me.active);\r\n                            }\r\n                        }\r\n\r\n                        // Remove styling for last active (even if it may still be active)\r\n                        if (me.lastActive.length) {\r\n                            me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\r\n                        }\r\n\r\n                        // Built in hover styling\r\n                        if (me.active.length && hoverOptions.mode) {\r\n                            me.updateHoverStyle(me.active, hoverOptions.mode, true);\r\n                        }\r\n\r\n                        changed = !helpers.arrayEquals(me.active, me.lastActive);\r\n\r\n                        // Remember Last Actives\r\n                        me.lastActive = me.active;\r\n\r\n                        return changed;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart instead.\r\n                 * @class Chart.Controller\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 * @private\r\n                 */\r\n                Chart.Controller = Chart;\r\n            };\r\n        }, { \"16\": 16, \"19\": 19, \"21\": 21, \"22\": 22, \"36\": 36, \"39\": 39 }], 15: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            module.exports = function(Chart) {\r\n                var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\r\n\r\n                /**\r\n                 * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\r\n                 * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\r\n                 * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\r\n                 */\r\n                function listenArrayEvents(array, listener) {\r\n                    if (array._chartjs) {\r\n                        array._chartjs.listeners.push(listener);\r\n                        return;\r\n                    }\r\n\r\n                    Object.defineProperty(array, '_chartjs', {\r\n                        configurable: true,\r\n                        enumerable: false,\r\n                        value: {\r\n                            listeners: [listener]\r\n                        }\r\n                    });\r\n\r\n                    arrayEvents.forEach(function(key) {\r\n                        var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\r\n                        var base = array[key];\r\n\r\n                        Object.defineProperty(array, key, {\r\n                            configurable: true,\r\n                            enumerable: false,\r\n                            value: function() {\r\n                                var args = Array.prototype.slice.call(arguments);\r\n                                var res = base.apply(this, args);\r\n\r\n                                helpers.each(array._chartjs.listeners, function(object) {\r\n                                    if (typeof object[method] === 'function') {\r\n                                        object[method].apply(object, args);\r\n                                    }\r\n                                });\r\n\r\n                                return res;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Removes the given array event listener and cleanup extra attached properties (such as\r\n                 * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\r\n                 */\r\n                function unlistenArrayEvents(array, listener) {\r\n                    var stub = array._chartjs;\r\n                    if (!stub) {\r\n                        return;\r\n                    }\r\n\r\n                    var listeners = stub.listeners;\r\n                    var index = listeners.indexOf(listener);\r\n                    if (index !== -1) {\r\n                        listeners.splice(index, 1);\r\n                    }\r\n\r\n                    if (listeners.length > 0) {\r\n                        return;\r\n                    }\r\n\r\n                    arrayEvents.forEach(function(key) {\r\n                        delete array[key];\r\n                    });\r\n\r\n                    delete array._chartjs;\r\n                }\r\n\r\n                // Base class for all dataset controllers (line, bar, etc)\r\n                Chart.DatasetController = function(chart, datasetIndex) {\r\n                    this.initialize(chart, datasetIndex);\r\n                };\r\n\r\n                helpers.extend(Chart.DatasetController.prototype, {\r\n                    /**\r\n                     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\r\n                     * @type {Chart.core.element}\r\n                     */\r\n                    datasetElementType: null,\r\n\r\n                    /**\r\n                     * Element type used to generate a meta data (e.g. Chart.element.Point).\r\n                     * @type {Chart.core.element}\r\n                     */\r\n                    dataElementType: null,\r\n\r\n                    initialize: function(chart, datasetIndex) {\r\n                        var me = this;\r\n                        me.chart = chart;\r\n                        me.index = datasetIndex;\r\n                        me.linkScales();\r\n                        me.addElements();\r\n                    },\r\n\r\n                    updateIndex: function(datasetIndex) {\r\n                        this.index = datasetIndex;\r\n                    },\r\n\r\n                    linkScales: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var dataset = me.getDataset();\r\n\r\n                        if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\r\n                            meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\r\n                        }\r\n                        if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\r\n                            meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\r\n                        }\r\n                    },\r\n\r\n                    getDataset: function() {\r\n                        return this.chart.data.datasets[this.index];\r\n                    },\r\n\r\n                    getMeta: function() {\r\n                        return this.chart.getDatasetMeta(this.index);\r\n                    },\r\n\r\n                    getScaleForId: function(scaleID) {\r\n                        return this.chart.scales[scaleID];\r\n                    },\r\n\r\n                    reset: function() {\r\n                        this.update(true);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    destroy: function() {\r\n                        if (this._data) {\r\n                            unlistenArrayEvents(this._data, this);\r\n                        }\r\n                    },\r\n\r\n                    createMetaDataset: function() {\r\n                        var me = this;\r\n                        var type = me.datasetElementType;\r\n                        return type && new type({\r\n                            _chart: me.chart,\r\n                            _datasetIndex: me.index\r\n                        });\r\n                    },\r\n\r\n                    createMetaData: function(index) {\r\n                        var me = this;\r\n                        var type = me.dataElementType;\r\n                        return type && new type({\r\n                            _chart: me.chart,\r\n                            _datasetIndex: me.index,\r\n                            _index: index\r\n                        });\r\n                    },\r\n\r\n                    addElements: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var data = me.getDataset().data || [];\r\n                        var metaData = meta.data;\r\n                        var i, ilen;\r\n\r\n                        for (i = 0, ilen = data.length; i < ilen; ++i) {\r\n                            metaData[i] = metaData[i] || me.createMetaData(i);\r\n                        }\r\n\r\n                        meta.dataset = meta.dataset || me.createMetaDataset();\r\n                    },\r\n\r\n                    addElementAndReset: function(index) {\r\n                        var element = this.createMetaData(index);\r\n                        this.getMeta().data.splice(index, 0, element);\r\n                        this.updateElement(element, index, true);\r\n                    },\r\n\r\n                    buildOrUpdateElements: function() {\r\n                        var me = this;\r\n                        var dataset = me.getDataset();\r\n                        var data = dataset.data || (dataset.data = []);\r\n\r\n                        // In order to correctly handle data addition/deletion animation (an thus simulate\r\n                        // real-time charts), we need to monitor these data modifications and synchronize\r\n                        // the internal meta data accordingly.\r\n                        if (me._data !== data) {\r\n                            if (me._data) {\r\n                                // This case happens when the user replaced the data array instance.\r\n                                unlistenArrayEvents(me._data, me);\r\n                            }\r\n\r\n                            listenArrayEvents(data, me);\r\n                            me._data = data;\r\n                        }\r\n\r\n                        // Re-sync meta data in case the user replaced the data array or if we missed\r\n                        // any updates and so make sure that we handle number of datapoints changing.\r\n                        me.resyncElements();\r\n                    },\r\n\r\n                    update: helpers.noop,\r\n\r\n                    transition: function(easingValue) {\r\n                        var meta = this.getMeta();\r\n                        var elements = meta.data || [];\r\n                        var ilen = elements.length;\r\n                        var i = 0;\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            elements[i].transition(easingValue);\r\n                        }\r\n\r\n                        if (meta.dataset) {\r\n                            meta.dataset.transition(easingValue);\r\n                        }\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var meta = this.getMeta();\r\n                        var elements = meta.data || [];\r\n                        var ilen = elements.length;\r\n                        var i = 0;\r\n\r\n                        if (meta.dataset) {\r\n                            meta.dataset.draw();\r\n                        }\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            elements[i].draw();\r\n                        }\r\n                    },\r\n\r\n                    removeHoverStyle: function(element, elementOpts) {\r\n                        var dataset = this.chart.data.datasets[element._datasetIndex];\r\n                        var index = element._index;\r\n                        var custom = element.custom || {};\r\n                        var valueOrDefault = helpers.valueAtIndexOrDefault;\r\n                        var model = element._model;\r\n\r\n                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\r\n                        model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\r\n                        model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\r\n                    },\r\n\r\n                    setHoverStyle: function(element) {\r\n                        var dataset = this.chart.data.datasets[element._datasetIndex];\r\n                        var index = element._index;\r\n                        var custom = element.custom || {};\r\n                        var valueOrDefault = helpers.valueAtIndexOrDefault;\r\n                        var getHoverColor = helpers.getHoverColor;\r\n                        var model = element._model;\r\n\r\n                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    resyncElements: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var data = me.getDataset().data;\r\n                        var numMeta = meta.data.length;\r\n                        var numData = data.length;\r\n\r\n                        if (numData < numMeta) {\r\n                            meta.data.splice(numData, numMeta - numData);\r\n                        } else if (numData > numMeta) {\r\n                            me.insertElements(numMeta, numData - numMeta);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    insertElements: function(start, count) {\r\n                        for (var i = 0; i < count; ++i) {\r\n                            this.addElementAndReset(start + i);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataPush: function() {\r\n                        this.insertElements(this.getDataset().data.length - 1, arguments.length);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataPop: function() {\r\n                        this.getMeta().data.pop();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataShift: function() {\r\n                        this.getMeta().data.shift();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataSplice: function(start, count) {\r\n                        this.getMeta().data.splice(start, count);\r\n                        this.insertElements(start, arguments.length - 2);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataUnshift: function() {\r\n                        this.insertElements(0, arguments.length);\r\n                    }\r\n                });\r\n\r\n                Chart.DatasetController.extend = helpers.inherits;\r\n            };\r\n        }, { \"36\": 36 }], 16: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            module.exports = {\r\n                /**\r\n                 * @private\r\n                 */\r\n                _set: function(scope, values) {\r\n                    return helpers.merge(this[scope] || (this[scope] = {}), values);\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 17: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var color = require(2);\r\n            var helpers = require(36);\r\n\r\n            function interpolate(start, view, model, ease) {\r\n                var keys = Object.keys(model);\r\n                var i, ilen, key, actual, origin, target, type, c0, c1;\r\n\r\n                for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n                    key = keys[i];\r\n\r\n                    target = model[key];\r\n\r\n                    // if a value is added to the model after pivot() has been called, the view\r\n                    // doesn't contain it, so let's initialize the view to the target value.\r\n                    if (!view.hasOwnProperty(key)) {\r\n                        view[key] = target;\r\n                    }\r\n\r\n                    actual = view[key];\r\n\r\n                    if (actual === target || key[0] === '_') {\r\n                        continue;\r\n                    }\r\n\r\n                    if (!start.hasOwnProperty(key)) {\r\n                        start[key] = actual;\r\n                    }\r\n\r\n                    origin = start[key];\r\n\r\n                    type = typeof target;\r\n\r\n                    if (type === typeof origin) {\r\n                        if (type === 'string') {\r\n                            c0 = color(origin);\r\n                            if (c0.valid) {\r\n                                c1 = color(target);\r\n                                if (c1.valid) {\r\n                                    view[key] = c1.mix(c0, ease).rgbString();\r\n                                    continue;\r\n                                }\r\n                            }\r\n                        } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\r\n                            view[key] = origin + (target - origin) * ease;\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    view[key] = target;\r\n                }\r\n            }\r\n\r\n            var Element = function(configuration) {\r\n                helpers.extend(this, configuration);\r\n                this.initialize.apply(this, arguments);\r\n            };\r\n\r\n            helpers.extend(Element.prototype, {\r\n                initialize: function() {\r\n                    this.hidden = false;\r\n                },\r\n\r\n                pivot: function() {\r\n                    var me = this;\r\n                    if (!me._view) {\r\n                        me._view = helpers.clone(me._model);\r\n                    }\r\n                    me._start = {};\r\n                    return me;\r\n                },\r\n\r\n                transition: function(ease) {\r\n                    var me = this;\r\n                    var model = me._model;\r\n                    var start = me._start;\r\n                    var view = me._view;\r\n\r\n                    // No animation -> No Transition\r\n                    if (!model || ease === 1) {\r\n                        me._view = model;\r\n                        me._start = null;\r\n                        return me;\r\n                    }\r\n\r\n                    if (!view) {\r\n                        view = me._view = {};\r\n                    }\r\n\r\n                    if (!start) {\r\n                        start = me._start = {};\r\n                    }\r\n\r\n                    interpolate(start, view, model, ease);\r\n\r\n                    return me;\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    return {\r\n                        x: this._model.x,\r\n                        y: this._model.y\r\n                    };\r\n                },\r\n\r\n                hasValue: function() {\r\n                    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\r\n                }\r\n            });\r\n\r\n            Element.extend = helpers.inherits;\r\n\r\n            module.exports = Element;\r\n        }, { \"2\": 2, \"36\": 36 }], 18: [function(require, module, exports) {\r\n            /* global window: false */\r\n            /* global document: false */\r\n            'use strict';\r\n\r\n            var color = require(2);\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n\r\n            module.exports = function(Chart) {\r\n                // -- Basic js utility methods\r\n\r\n                helpers.configMerge = function(/* objects ... */) {\r\n                    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\r\n                        merger: function(key, target, source, options) {\r\n                            var tval = target[key] || {};\r\n                            var sval = source[key];\r\n\r\n                            if (key === 'scales') {\r\n                                // scale config merging is complex. Add our own function here for that\r\n                                target[key] = helpers.scaleMerge(tval, sval);\r\n                            } else if (key === 'scale') {\r\n                                // used in polar area & radar charts since there is only one scale\r\n                                target[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\r\n                            } else {\r\n                                helpers._merger(key, target, source, options);\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n\r\n                helpers.scaleMerge = function(/* objects ... */) {\r\n                    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\r\n                        merger: function(key, target, source, options) {\r\n                            if (key === 'xAxes' || key === 'yAxes') {\r\n                                var slen = source[key].length;\r\n                                var i, type, scale;\r\n\r\n                                if (!target[key]) {\r\n                                    target[key] = [];\r\n                                }\r\n\r\n                                for (i = 0; i < slen; ++i) {\r\n                                    scale = source[key][i];\r\n                                    type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\r\n\r\n                                    if (i >= target[key].length) {\r\n                                        target[key].push({});\r\n                                    }\r\n\r\n                                    if (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\r\n                                        // new/untyped scale or type changed: let's apply the new defaults\r\n                                        // then merge source scale to correctly overwrite the defaults.\r\n                                        helpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\r\n                                    } else {\r\n                                        // scales type are the same\r\n                                        helpers.merge(target[key][i], scale);\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                helpers._merger(key, target, source, options);\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n\r\n                helpers.where = function(collection, filterCallback) {\r\n                    if (helpers.isArray(collection) && Array.prototype.filter) {\r\n                        return collection.filter(filterCallback);\r\n                    }\r\n                    var filtered = [];\r\n\r\n                    helpers.each(collection, function(item) {\r\n                        if (filterCallback(item)) {\r\n                            filtered.push(item);\r\n                        }\r\n                    });\r\n\r\n                    return filtered;\r\n                };\r\n                helpers.findIndex = Array.prototype.findIndex ?\r\n                    function(array, callback, scope) {\r\n                        return array.findIndex(callback, scope);\r\n                    } :\r\n                    function(array, callback, scope) {\r\n                        scope = scope === undefined ? array : scope;\r\n                        for (var i = 0, ilen = array.length; i < ilen; ++i) {\r\n                            if (callback.call(scope, array[i], i, array)) {\r\n                                return i;\r\n                            }\r\n                        }\r\n                        return -1;\r\n                    };\r\n                helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n                    // Default to start of the array\r\n                    if (helpers.isNullOrUndef(startIndex)) {\r\n                        startIndex = -1;\r\n                    }\r\n                    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\r\n                        var currentItem = arrayToSearch[i];\r\n                        if (filterCallback(currentItem)) {\r\n                            return currentItem;\r\n                        }\r\n                    }\r\n                };\r\n                helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n                    // Default to end of the array\r\n                    if (helpers.isNullOrUndef(startIndex)) {\r\n                        startIndex = arrayToSearch.length;\r\n                    }\r\n                    for (var i = startIndex - 1; i >= 0; i--) {\r\n                        var currentItem = arrayToSearch[i];\r\n                        if (filterCallback(currentItem)) {\r\n                            return currentItem;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // -- Math methods\r\n                helpers.isNumber = function(n) {\r\n                    return !isNaN(parseFloat(n)) && isFinite(n);\r\n                };\r\n                helpers.almostEquals = function(x, y, epsilon) {\r\n                    return Math.abs(x - y) < epsilon;\r\n                };\r\n                helpers.almostWhole = function(x, epsilon) {\r\n                    var rounded = Math.round(x);\r\n                    return (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\r\n                };\r\n                helpers.max = function(array) {\r\n                    return array.reduce(function(max, value) {\r\n                        if (!isNaN(value)) {\r\n                            return Math.max(max, value);\r\n                        }\r\n                        return max;\r\n                    }, Number.NEGATIVE_INFINITY);\r\n                };\r\n                helpers.min = function(array) {\r\n                    return array.reduce(function(min, value) {\r\n                        if (!isNaN(value)) {\r\n                            return Math.min(min, value);\r\n                        }\r\n                        return min;\r\n                    }, Number.POSITIVE_INFINITY);\r\n                };\r\n                helpers.sign = Math.sign ?\r\n                    function(x) {\r\n                        return Math.sign(x);\r\n                    } :\r\n                    function(x) {\r\n                        x = +x; // convert to a number\r\n                        if (x === 0 || isNaN(x)) {\r\n                            return x;\r\n                        }\r\n                        return x > 0 ? 1 : -1;\r\n                    };\r\n                helpers.log10 = Math.log10 ?\r\n                    function(x) {\r\n                        return Math.log10(x);\r\n                    } :\r\n                    function(x) {\r\n                        var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\r\n                        // Check for whole powers of 10,\r\n                        // which due to floating point rounding error should be corrected.\r\n                        var powerOf10 = Math.round(exponent);\r\n                        var isPowerOf10 = x === Math.pow(10, powerOf10);\r\n\r\n                        return isPowerOf10 ? powerOf10 : exponent;\r\n                    };\r\n                helpers.toRadians = function(degrees) {\r\n                    return degrees * (Math.PI / 180);\r\n                };\r\n                helpers.toDegrees = function(radians) {\r\n                    return radians * (180 / Math.PI);\r\n                };\r\n                // Gets the angle from vertical upright to the point about a centre.\r\n                helpers.getAngleFromPoint = function(centrePoint, anglePoint) {\r\n                    var distanceFromXCenter = anglePoint.x - centrePoint.x;\r\n                    var distanceFromYCenter = anglePoint.y - centrePoint.y;\r\n                    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n\r\n                    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n\r\n                    if (angle < (-0.5 * Math.PI)) {\r\n                        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\r\n                    }\r\n\r\n                    return {\r\n                        angle: angle,\r\n                        distance: radialDistanceFromCenter\r\n                    };\r\n                };\r\n                helpers.distanceBetweenPoints = function(pt1, pt2) {\r\n                    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\r\n                };\r\n                helpers.aliasPixel = function(pixelWidth) {\r\n                    return (pixelWidth % 2 === 0) ? 0 : 0.5;\r\n                };\r\n                helpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\r\n                    // Props to Rob Spencer at scaled innovation for his post on splining between points\r\n                    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\r\n\r\n                    // This function must also respect \"skipped\" points\r\n\r\n                    var previous = firstPoint.skip ? middlePoint : firstPoint;\r\n                    var current = middlePoint;\r\n                    var next = afterPoint.skip ? middlePoint : afterPoint;\r\n\r\n                    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\r\n                    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\r\n\r\n                    var s01 = d01 / (d01 + d12);\r\n                    var s12 = d12 / (d01 + d12);\r\n\r\n                    // If all points are the same, s01 & s02 will be inf\r\n                    s01 = isNaN(s01) ? 0 : s01;\r\n                    s12 = isNaN(s12) ? 0 : s12;\r\n\r\n                    var fa = t * s01; // scaling factor for triangle Ta\r\n                    var fb = t * s12;\r\n\r\n                    return {\r\n                        previous: {\r\n                            x: current.x - fa * (next.x - previous.x),\r\n                            y: current.y - fa * (next.y - previous.y)\r\n                        },\r\n                        next: {\r\n                            x: current.x + fb * (next.x - previous.x),\r\n                            y: current.y + fb * (next.y - previous.y)\r\n                        }\r\n                    };\r\n                };\r\n                helpers.EPSILON = Number.EPSILON || 1e-14;\r\n                helpers.splineCurveMonotone = function(points) {\r\n                    // This function calculates Bézier control points in a similar way than |splineCurve|,\r\n                    // but preserves monotonicity of the provided data and ensures no local extremums are added\r\n                    // between the dataset discrete points due to the interpolation.\r\n                    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\r\n\r\n                    var pointsWithTangents = (points || []).map(function(point) {\r\n                        return {\r\n                            model: point._model,\r\n                            deltaK: 0,\r\n                            mK: 0\r\n                        };\r\n                    });\r\n\r\n                    // Calculate slopes (deltaK) and initialize tangents (mK)\r\n                    var pointsLen = pointsWithTangents.length;\r\n                    var i, pointBefore, pointCurrent, pointAfter;\r\n                    for (i = 0; i < pointsLen; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        if (pointCurrent.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n                        if (pointAfter && !pointAfter.model.skip) {\r\n                            var slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\r\n\r\n                            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\r\n                            pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\r\n                        }\r\n\r\n                        if (!pointBefore || pointBefore.model.skip) {\r\n                            pointCurrent.mK = pointCurrent.deltaK;\r\n                        } else if (!pointAfter || pointAfter.model.skip) {\r\n                            pointCurrent.mK = pointBefore.deltaK;\r\n                        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\r\n                            pointCurrent.mK = 0;\r\n                        } else {\r\n                            pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\r\n                        }\r\n                    }\r\n\r\n                    // Adjust tangents to ensure monotonic properties\r\n                    var alphaK, betaK, tauK, squaredMagnitude;\r\n                    for (i = 0; i < pointsLen - 1; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        pointAfter = pointsWithTangents[i + 1];\r\n                        if (pointCurrent.model.skip || pointAfter.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\r\n                            pointCurrent.mK = pointAfter.mK = 0;\r\n                            continue;\r\n                        }\r\n\r\n                        alphaK = pointCurrent.mK / pointCurrent.deltaK;\r\n                        betaK = pointAfter.mK / pointCurrent.deltaK;\r\n                        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\r\n                        if (squaredMagnitude <= 9) {\r\n                            continue;\r\n                        }\r\n\r\n                        tauK = 3 / Math.sqrt(squaredMagnitude);\r\n                        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\r\n                        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\r\n                    }\r\n\r\n                    // Compute control points\r\n                    var deltaX;\r\n                    for (i = 0; i < pointsLen; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        if (pointCurrent.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n                        if (pointBefore && !pointBefore.model.skip) {\r\n                            deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\r\n                            pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\r\n                            pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\r\n                        }\r\n                        if (pointAfter && !pointAfter.model.skip) {\r\n                            deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\r\n                            pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\r\n                            pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\r\n                        }\r\n                    }\r\n                };\r\n                helpers.nextItem = function(collection, index, loop) {\r\n                    if (loop) {\r\n                        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\r\n                    }\r\n                    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\r\n                };\r\n                helpers.previousItem = function(collection, index, loop) {\r\n                    if (loop) {\r\n                        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\r\n                    }\r\n                    return index <= 0 ? collection[0] : collection[index - 1];\r\n                };\r\n                // Implementation of the nice number algorithm used in determining where axis labels will go\r\n                helpers.niceNum = function(range, round) {\r\n                    var exponent = Math.floor(helpers.log10(range));\r\n                    var fraction = range / Math.pow(10, exponent);\r\n                    var niceFraction;\r\n\r\n                    if (round) {\r\n                        if (fraction < 1.5) {\r\n                            niceFraction = 1;\r\n                        } else if (fraction < 3) {\r\n                            niceFraction = 2;\r\n                        } else if (fraction < 7) {\r\n                            niceFraction = 5;\r\n                        } else {\r\n                            niceFraction = 10;\r\n                        }\r\n                    } else if (fraction <= 1.0) {\r\n                        niceFraction = 1;\r\n                    } else if (fraction <= 2) {\r\n                        niceFraction = 2;\r\n                    } else if (fraction <= 5) {\r\n                        niceFraction = 5;\r\n                    } else {\r\n                        niceFraction = 10;\r\n                    }\r\n\r\n                    return niceFraction * Math.pow(10, exponent);\r\n                };\r\n                // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n                helpers.requestAnimFrame = (function() {\r\n                    if (typeof window === 'undefined') {\r\n                        return function(callback) {\r\n                            callback();\r\n                        };\r\n                    }\r\n                    return window.requestAnimationFrame ||\r\n                        window.webkitRequestAnimationFrame ||\r\n                        window.mozRequestAnimationFrame ||\r\n                        window.oRequestAnimationFrame ||\r\n                        window.msRequestAnimationFrame ||\r\n                        function(callback) {\r\n                            return window.setTimeout(callback, 1000 / 60);\r\n                        };\r\n                }());\r\n                // -- DOM methods\r\n                helpers.getRelativePosition = function(evt, chart) {\r\n                    var mouseX, mouseY;\r\n                    var e = evt.originalEvent || evt;\r\n                    var canvas = evt.currentTarget || evt.srcElement;\r\n                    var boundingRect = canvas.getBoundingClientRect();\r\n\r\n                    var touches = e.touches;\r\n                    if (touches && touches.length > 0) {\r\n                        mouseX = touches[0].clientX;\r\n                        mouseY = touches[0].clientY;\r\n                    } else {\r\n                        mouseX = e.clientX;\r\n                        mouseY = e.clientY;\r\n                    }\r\n\r\n                    // Scale mouse coordinates into canvas coordinates\r\n                    // by following the pattern laid out by 'jerryj' in the comments of\r\n                    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\r\n                    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\r\n                    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\r\n                    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\r\n                    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\r\n                    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\r\n                    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\r\n\r\n                    // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\r\n                    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\r\n                    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\r\n                    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\r\n\r\n                    return {\r\n                        x: mouseX,\r\n                        y: mouseY\r\n                    };\r\n                };\r\n\r\n                // Private helper function to convert max-width/max-height values that may be percentages into a number\r\n                function parseMaxStyle(styleValue, node, parentProperty) {\r\n                    var valueInPixels;\r\n                    if (typeof styleValue === 'string') {\r\n                        valueInPixels = parseInt(styleValue, 10);\r\n\r\n                        if (styleValue.indexOf('%') !== -1) {\r\n                            // percentage * size in dimension\r\n                            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\r\n                        }\r\n                    } else {\r\n                        valueInPixels = styleValue;\r\n                    }\r\n\r\n                    return valueInPixels;\r\n                }\r\n\r\n                /**\r\n                 * Returns if the given value contains an effective constraint.\r\n                 * @private\r\n                 */\r\n                function isConstrainedValue(value) {\r\n                    return value !== undefined && value !== null && value !== 'none';\r\n                }\r\n\r\n                // Private helper to get a constraint dimension\r\n                // @param domNode : the node to check the constraint on\r\n                // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\r\n                // @param percentageProperty : property of parent to use when calculating width as a percentage\r\n                // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\r\n                function getConstraintDimension(domNode, maxStyle, percentageProperty) {\r\n                    var view = document.defaultView;\r\n                    var parentNode = domNode.parentNode;\r\n                    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\r\n                    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\r\n                    var hasCNode = isConstrainedValue(constrainedNode);\r\n                    var hasCContainer = isConstrainedValue(constrainedContainer);\r\n                    var infinity = Number.POSITIVE_INFINITY;\r\n\r\n                    if (hasCNode || hasCContainer) {\r\n                        return Math.min(\r\n                            hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\r\n                            hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\r\n                    }\r\n\r\n                    return 'none';\r\n                }\r\n                // returns Number or undefined if no constraint\r\n                helpers.getConstraintWidth = function(domNode) {\r\n                    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\r\n                };\r\n                // returns Number or undefined if no constraint\r\n                helpers.getConstraintHeight = function(domNode) {\r\n                    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\r\n                };\r\n                helpers.getMaximumWidth = function(domNode) {\r\n                    var container = domNode.parentNode;\r\n                    if (!container) {\r\n                        return domNode.clientWidth;\r\n                    }\r\n\r\n                    var paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\r\n                    var paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\r\n                    var w = container.clientWidth - paddingLeft - paddingRight;\r\n                    var cw = helpers.getConstraintWidth(domNode);\r\n                    return isNaN(cw) ? w : Math.min(w, cw);\r\n                };\r\n                helpers.getMaximumHeight = function(domNode) {\r\n                    var container = domNode.parentNode;\r\n                    if (!container) {\r\n                        return domNode.clientHeight;\r\n                    }\r\n\r\n                    var paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\r\n                    var paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\r\n                    var h = container.clientHeight - paddingTop - paddingBottom;\r\n                    var ch = helpers.getConstraintHeight(domNode);\r\n                    return isNaN(ch) ? h : Math.min(h, ch);\r\n                };\r\n                helpers.getStyle = function(el, property) {\r\n                    return el.currentStyle ?\r\n                        el.currentStyle[property] :\r\n                        document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\r\n                };\r\n                helpers.retinaScale = function(chart, forceRatio) {\r\n                    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\r\n                    if (pixelRatio === 1) {\r\n                        return;\r\n                    }\r\n\r\n                    var canvas = chart.canvas;\r\n                    var height = chart.height;\r\n                    var width = chart.width;\r\n\r\n                    canvas.height = height * pixelRatio;\r\n                    canvas.width = width * pixelRatio;\r\n                    chart.ctx.scale(pixelRatio, pixelRatio);\r\n\r\n                    // If no style has been set on the canvas, the render size is used as display size,\r\n                    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\r\n                    // See https://github.com/chartjs/Chart.js/issues/3575\r\n                    if (!canvas.style.height && !canvas.style.width) {\r\n                        canvas.style.height = height + 'px';\r\n                        canvas.style.width = width + 'px';\r\n                    }\r\n                };\r\n                // -- Canvas methods\r\n                helpers.fontString = function(pixelSize, fontStyle, fontFamily) {\r\n                    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\r\n                };\r\n                helpers.longestText = function(ctx, font, arrayOfThings, cache) {\r\n                    cache = cache || {};\r\n                    var data = cache.data = cache.data || {};\r\n                    var gc = cache.garbageCollect = cache.garbageCollect || [];\r\n\r\n                    if (cache.font !== font) {\r\n                        data = cache.data = {};\r\n                        gc = cache.garbageCollect = [];\r\n                        cache.font = font;\r\n                    }\r\n\r\n                    ctx.font = font;\r\n                    var longest = 0;\r\n                    helpers.each(arrayOfThings, function(thing) {\r\n                        // Undefined strings and arrays should not be measured\r\n                        if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\r\n                            longest = helpers.measureText(ctx, data, gc, longest, thing);\r\n                        } else if (helpers.isArray(thing)) {\r\n                            // if it is an array lets measure each element\r\n                            // to do maybe simplify this function a bit so we can do this more recursively?\r\n                            helpers.each(thing, function(nestedThing) {\r\n                                // Undefined strings and arrays should not be measured\r\n                                if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\r\n                                    longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    var gcLen = gc.length / 2;\r\n                    if (gcLen > arrayOfThings.length) {\r\n                        for (var i = 0; i < gcLen; i++) {\r\n                            delete data[gc[i]];\r\n                        }\r\n                        gc.splice(0, gcLen);\r\n                    }\r\n                    return longest;\r\n                };\r\n                helpers.measureText = function(ctx, data, gc, longest, string) {\r\n                    var textWidth = data[string];\r\n                    if (!textWidth) {\r\n                        textWidth = data[string] = ctx.measureText(string).width;\r\n                        gc.push(string);\r\n                    }\r\n                    if (textWidth > longest) {\r\n                        longest = textWidth;\r\n                    }\r\n                    return longest;\r\n                };\r\n                helpers.numberOfLabelLines = function(arrayOfThings) {\r\n                    var numberOfLines = 1;\r\n                    helpers.each(arrayOfThings, function(thing) {\r\n                        if (helpers.isArray(thing)) {\r\n                            if (thing.length > numberOfLines) {\r\n                                numberOfLines = thing.length;\r\n                            }\r\n                        }\r\n                    });\r\n                    return numberOfLines;\r\n                };\r\n\r\n                helpers.color = !color ?\r\n                    function(value) {\r\n                        console.error('Color.js not found!');\r\n                        return value;\r\n                    } :\r\n                    function(value) {\r\n                        /* global CanvasGradient */\r\n                        if (value instanceof CanvasGradient) {\r\n                            value = defaults.global.defaultColor;\r\n                        }\r\n\r\n                        return color(value);\r\n                    };\r\n\r\n                helpers.getHoverColor = function(colorValue) {\r\n                    /* global CanvasPattern */\r\n                    return (colorValue instanceof CanvasPattern) ?\r\n                        colorValue :\r\n                        helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"2\": 2, \"36\": 36 }], 19: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Helper function to get relative position for an event\r\n             * @param {Event|IEvent} event - The event to get the position for\r\n             * @param {Chart} chart - The chart\r\n             * @returns {Point} the event position\r\n             */\r\n            function getRelativePosition(e, chart) {\r\n                if (e.native) {\r\n                    return {\r\n                        x: e.x,\r\n                        y: e.y\r\n                    };\r\n                }\r\n\r\n                return helpers.getRelativePosition(e, chart);\r\n            }\r\n\r\n            /**\r\n             * Helper function to traverse all of the visible elements in the chart\r\n             * @param chart {chart} the chart\r\n             * @param handler {Function} the callback to execute for each visible item\r\n             */\r\n            function parseVisibleItems(chart, handler) {\r\n                var datasets = chart.data.datasets;\r\n                var meta, i, j, ilen, jlen;\r\n\r\n                for (i = 0, ilen = datasets.length; i < ilen; ++i) {\r\n                    if (!chart.isDatasetVisible(i)) {\r\n                        continue;\r\n                    }\r\n\r\n                    meta = chart.getDatasetMeta(i);\r\n                    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\r\n                        var element = meta.data[j];\r\n                        if (!element._view.skip) {\r\n                            handler(element);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the items that intersect the event position\r\n             * @param items {ChartElement[]} elements to filter\r\n             * @param position {Point} the point to be nearest to\r\n             * @return {ChartElement[]} the nearest items\r\n             */\r\n            function getIntersectItems(chart, position) {\r\n                var elements = [];\r\n\r\n                parseVisibleItems(chart, function(element) {\r\n                    if (element.inRange(position.x, position.y)) {\r\n                        elements.push(element);\r\n                    }\r\n                });\r\n\r\n                return elements;\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the items nearest to the event position considering all visible items in teh chart\r\n             * @param chart {Chart} the chart to look at elements from\r\n             * @param position {Point} the point to be nearest to\r\n             * @param intersect {Boolean} if true, only consider items that intersect the position\r\n             * @param distanceMetric {Function} function to provide the distance between points\r\n             * @return {ChartElement[]} the nearest items\r\n             */\r\n            function getNearestItems(chart, position, intersect, distanceMetric) {\r\n                var minDistance = Number.POSITIVE_INFINITY;\r\n                var nearestItems = [];\r\n\r\n                parseVisibleItems(chart, function(element) {\r\n                    if (intersect && !element.inRange(position.x, position.y)) {\r\n                        return;\r\n                    }\r\n\r\n                    var center = element.getCenterPoint();\r\n                    var distance = distanceMetric(position, center);\r\n\r\n                    if (distance < minDistance) {\r\n                        nearestItems = [element];\r\n                        minDistance = distance;\r\n                    } else if (distance === minDistance) {\r\n                        // Can have multiple items at the same distance in which case we sort by size\r\n                        nearestItems.push(element);\r\n                    }\r\n                });\r\n\r\n                return nearestItems;\r\n            }\r\n\r\n            /**\r\n             * Get a distance metric function for two points based on the\r\n             * axis mode setting\r\n             * @param {String} axis the axis mode. x|y|xy\r\n             */\r\n            function getDistanceMetricForAxis(axis) {\r\n                var useX = axis.indexOf('x') !== -1;\r\n                var useY = axis.indexOf('y') !== -1;\r\n\r\n                return function(pt1, pt2) {\r\n                    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n                    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n                    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n                };\r\n            }\r\n\r\n            function indexMode(chart, e, options) {\r\n                var position = getRelativePosition(e, chart);\r\n                // Default axis for index mode is 'x' to match old behaviour\r\n                options.axis = options.axis || 'x';\r\n                var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\r\n                var elements = [];\r\n\r\n                if (!items.length) {\r\n                    return [];\r\n                }\r\n\r\n                chart.data.datasets.forEach(function(dataset, datasetIndex) {\r\n                    if (chart.isDatasetVisible(datasetIndex)) {\r\n                        var meta = chart.getDatasetMeta(datasetIndex);\r\n                        var element = meta.data[items[0]._index];\r\n\r\n                        // don't count items that are skipped (null data)\r\n                        if (element && !element._view.skip) {\r\n                            elements.push(element);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                return elements;\r\n            }\r\n\r\n            /**\r\n             * @interface IInteractionOptions\r\n             */\r\n            /**\r\n             * If true, only consider items that intersect the point\r\n             * @name IInterfaceOptions#boolean\r\n             * @type Boolean\r\n             */\r\n\r\n            /**\r\n             * Contains interaction related functions\r\n             * @namespace Chart.Interaction\r\n             */\r\n            module.exports = {\r\n                // Helper function for different modes\r\n                modes: {\r\n                    single: function(chart, e) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var elements = [];\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                elements.push(element);\r\n                                return elements;\r\n                            }\r\n                        });\r\n\r\n                        return elements.slice(0, 1);\r\n                    },\r\n\r\n                    /**\r\n                     * @function Chart.Interaction.modes.label\r\n                     * @deprecated since version 2.4.0\r\n                     * @todo remove at version 3\r\n                     * @private\r\n                     */\r\n                    label: indexMode,\r\n\r\n                    /**\r\n                     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\r\n                     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\r\n                     * @function Chart.Interaction.modes.index\r\n                     * @since v2.4.0\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use during interaction\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    index: indexMode,\r\n\r\n                    /**\r\n                     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\r\n                     * If the options.intersect is false, we find the nearest item and return the items in that dataset\r\n                     * @function Chart.Interaction.modes.dataset\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use during interaction\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    dataset: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        options.axis = options.axis || 'xy';\r\n                        var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\r\n\r\n                        if (items.length > 0) {\r\n                            items = chart.getDatasetMeta(items[0]._datasetIndex).data;\r\n                        }\r\n\r\n                        return items;\r\n                    },\r\n\r\n                    /**\r\n                     * @function Chart.Interaction.modes.x-axis\r\n                     * @deprecated since version 2.4.0. Use index mode and intersect == true\r\n                     * @todo remove at version 3\r\n                     * @private\r\n                     */\r\n                    'x-axis': function(chart, e) {\r\n                        return indexMode(chart, e, { intersect: false });\r\n                    },\r\n\r\n                    /**\r\n                     * Point mode returns all elements that hit test based on the event position\r\n                     * of the event\r\n                     * @function Chart.Interaction.modes.intersect\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    point: function(chart, e) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        return getIntersectItems(chart, position);\r\n                    },\r\n\r\n                    /**\r\n                     * nearest mode returns the element closest to the point\r\n                     * @function Chart.Interaction.modes.intersect\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    nearest: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        options.axis = options.axis || 'xy';\r\n                        var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                        var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\r\n\r\n                        // We have multiple items at the same distance from the event. Now sort by smallest\r\n                        if (nearestItems.length > 1) {\r\n                            nearestItems.sort(function(a, b) {\r\n                                var sizeA = a.getArea();\r\n                                var sizeB = b.getArea();\r\n                                var ret = sizeA - sizeB;\r\n\r\n                                if (ret === 0) {\r\n                                    // if equal sort by dataset index\r\n                                    ret = a._datasetIndex - b._datasetIndex;\r\n                                }\r\n\r\n                                return ret;\r\n                            });\r\n                        }\r\n\r\n                        // Return only 1 item\r\n                        return nearestItems.slice(0, 1);\r\n                    },\r\n\r\n                    /**\r\n                     * x mode returns the elements that hit-test at the current x coordinate\r\n                     * @function Chart.Interaction.modes.x\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    x: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var items = [];\r\n                        var intersectsItem = false;\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inXRange(position.x)) {\r\n                                items.push(element);\r\n                            }\r\n\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                intersectsItem = true;\r\n                            }\r\n                        });\r\n\r\n                        // If we want to trigger on an intersect and we don't have any items\r\n                        // that intersect the position, return nothing\r\n                        if (options.intersect && !intersectsItem) {\r\n                            items = [];\r\n                        }\r\n                        return items;\r\n                    },\r\n\r\n                    /**\r\n                     * y mode returns the elements that hit-test at the current y coordinate\r\n                     * @function Chart.Interaction.modes.y\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    y: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var items = [];\r\n                        var intersectsItem = false;\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inYRange(position.y)) {\r\n                                items.push(element);\r\n                            }\r\n\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                intersectsItem = true;\r\n                            }\r\n                        });\r\n\r\n                        // If we want to trigger on an intersect and we don't have any items\r\n                        // that intersect the position, return nothing\r\n                        if (options.intersect && !intersectsItem) {\r\n                            items = [];\r\n                        }\r\n                        return items;\r\n                    }\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 20: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n\r\n            defaults._set('global', {\r\n                responsive: true,\r\n                responsiveAnimationDuration: 0,\r\n                maintainAspectRatio: true,\r\n                events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\r\n                hover: {\r\n                    onHover: null,\r\n                    mode: 'nearest',\r\n                    intersect: true,\r\n                    animationDuration: 400\r\n                },\r\n                onClick: null,\r\n                defaultColor: 'rgba(0,0,0,0.1)',\r\n                defaultFontColor: '#666',\r\n                defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n                defaultFontSize: 12,\r\n                defaultFontStyle: 'normal',\r\n                showLines: true,\r\n\r\n                // Element defaults defined in element extensions\r\n                elements: {},\r\n\r\n                // Layout options such as padding\r\n                layout: {\r\n                    padding: {\r\n                        top: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        left: 0\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = function() {\r\n                // Occupy the global variable of Chart, and create a simple base class\r\n                var Chart = function(item, config) {\r\n                    this.construct(item, config);\r\n                    return this;\r\n                };\r\n\r\n                Chart.Chart = Chart;\r\n\r\n                return Chart;\r\n            };\r\n        }, { \"16\": 16 }], 21: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            function filterByPosition(array, position) {\r\n                return helpers.where(array, function(v) {\r\n                    return v.position === position;\r\n                });\r\n            }\r\n\r\n            function sortByWeight(array, reverse) {\r\n                array.forEach(function(v, i) {\r\n                    v._tmpIndex_ = i;\r\n                    return v;\r\n                });\r\n                array.sort(function(a, b) {\r\n                    var v0 = reverse ? b : a;\r\n                    var v1 = reverse ? a : b;\r\n                    return v0.weight === v1.weight ?\r\n                        v0._tmpIndex_ - v1._tmpIndex_ :\r\n                        v0.weight - v1.weight;\r\n                });\r\n                array.forEach(function(v) {\r\n                    delete v._tmpIndex_;\r\n                });\r\n            }\r\n\r\n            /**\r\n             * @interface ILayoutItem\r\n             * @prop {String} position - The position of the item in the chart layout. Possible values are\r\n             * 'left', 'top', 'right', 'bottom', and 'chartArea'\r\n             * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\r\n             * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\r\n             * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\r\n             * @prop {Function} update - Takes two parameters: width and height. Returns size of item\r\n             * @prop {Function} getPadding -  Returns an object with padding on the edges\r\n             * @prop {Number} width - Width of item. Must be valid after update()\r\n             * @prop {Number} height - Height of item. Must be valid after update()\r\n             * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\r\n             */\r\n\r\n            // The layout service is very self explanatory.  It's responsible for the layout within a chart.\r\n            // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\r\n            // It is this service's responsibility of carrying out that layout.\r\n            module.exports = {\r\n                defaults: {},\r\n\r\n                /**\r\n                 * Register a box to a chart.\r\n                 * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\r\n                 * @param {Chart} chart - the chart to use\r\n                 * @param {ILayoutItem} item - the item to add to be layed out\r\n                 */\r\n                addBox: function(chart, item) {\r\n                    if (!chart.boxes) {\r\n                        chart.boxes = [];\r\n                    }\r\n\r\n                    // initialize item with default values\r\n                    item.fullWidth = item.fullWidth || false;\r\n                    item.position = item.position || 'top';\r\n                    item.weight = item.weight || 0;\r\n\r\n                    chart.boxes.push(item);\r\n                },\r\n\r\n                /**\r\n                 * Remove a layoutItem from a chart\r\n                 * @param {Chart} chart - the chart to remove the box from\r\n                 * @param {Object} layoutItem - the item to remove from the layout\r\n                 */\r\n                removeBox: function(chart, layoutItem) {\r\n                    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n                    if (index !== -1) {\r\n                        chart.boxes.splice(index, 1);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Sets (or updates) options on the given `item`.\r\n                 * @param {Chart} chart - the chart in which the item lives (or will be added to)\r\n                 * @param {Object} item - the item to configure with the given options\r\n                 * @param {Object} options - the new item options.\r\n                 */\r\n                configure: function(chart, item, options) {\r\n                    var props = ['fullWidth', 'position', 'weight'];\r\n                    var ilen = props.length;\r\n                    var i = 0;\r\n                    var prop;\r\n\r\n                    for (; i < ilen; ++i) {\r\n                        prop = props[i];\r\n                        if (options.hasOwnProperty(prop)) {\r\n                            item[prop] = options[prop];\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Fits boxes of the given chart into the given size by having each box measure itself\r\n                 * then running a fitting algorithm\r\n                 * @param {Chart} chart - the chart\r\n                 * @param {Number} width - the width to fit into\r\n                 * @param {Number} height - the height to fit into\r\n                 */\r\n                update: function(chart, width, height) {\r\n                    if (!chart) {\r\n                        return;\r\n                    }\r\n\r\n                    var layoutOptions = chart.options.layout || {};\r\n                    var padding = helpers.options.toPadding(layoutOptions.padding);\r\n                    var leftPadding = padding.left;\r\n                    var rightPadding = padding.right;\r\n                    var topPadding = padding.top;\r\n                    var bottomPadding = padding.bottom;\r\n\r\n                    var leftBoxes = filterByPosition(chart.boxes, 'left');\r\n                    var rightBoxes = filterByPosition(chart.boxes, 'right');\r\n                    var topBoxes = filterByPosition(chart.boxes, 'top');\r\n                    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\r\n                    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\r\n\r\n                    // Sort boxes by weight. A higher weight is further away from the chart area\r\n                    sortByWeight(leftBoxes, true);\r\n                    sortByWeight(rightBoxes, false);\r\n                    sortByWeight(topBoxes, true);\r\n                    sortByWeight(bottomBoxes, false);\r\n\r\n                    // Essentially we now have any number of boxes on each of the 4 sides.\r\n                    // Our canvas looks like the following.\r\n                    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\r\n                    // B1 is the bottom axis\r\n                    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\r\n                    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\r\n                    // an error will be thrown.\r\n                    //\r\n                    // |----------------------------------------------------|\r\n                    // |                  T1 (Full Width)                   |\r\n                    // |----------------------------------------------------|\r\n                    // |    |    |                 T2                  |    |\r\n                    // |    |----|-------------------------------------|----|\r\n                    // |    |    | C1 |                           | C2 |    |\r\n                    // |    |    |----|                           |----|    |\r\n                    // |    |    |                                     |    |\r\n                    // | L1 | L2 |           ChartArea (C0)            | R1 |\r\n                    // |    |    |                                     |    |\r\n                    // |    |    |----|                           |----|    |\r\n                    // |    |    | C3 |                           | C4 |    |\r\n                    // |    |----|-------------------------------------|----|\r\n                    // |    |    |                 B1                  |    |\r\n                    // |----------------------------------------------------|\r\n                    // |                  B2 (Full Width)                   |\r\n                    // |----------------------------------------------------|\r\n                    //\r\n                    // What we do to find the best sizing, we do the following\r\n                    // 1. Determine the minimum size of the chart area.\r\n                    // 2. Split the remaining width equally between each vertical axis\r\n                    // 3. Split the remaining height equally between each horizontal axis\r\n                    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\r\n                    // 5. Adjust the sizes of each axis based on it's minimum reported size.\r\n                    // 6. Refit each axis\r\n                    // 7. Position each axis in the final location\r\n                    // 8. Tell the chart the final location of the chart area\r\n                    // 9. Tell any axes that overlay the chart area the positions of the chart area\r\n\r\n                    // Step 1\r\n                    var chartWidth = width - leftPadding - rightPadding;\r\n                    var chartHeight = height - topPadding - bottomPadding;\r\n                    var chartAreaWidth = chartWidth / 2; // min 50%\r\n                    var chartAreaHeight = chartHeight / 2; // min 50%\r\n\r\n                    // Step 2\r\n                    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\r\n\r\n                    // Step 3\r\n                    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\r\n\r\n                    // Step 4\r\n                    var maxChartAreaWidth = chartWidth;\r\n                    var maxChartAreaHeight = chartHeight;\r\n                    var minBoxSizes = [];\r\n\r\n                    function getMinimumBoxSize(box) {\r\n                        var minSize;\r\n                        var isHorizontal = box.isHorizontal();\r\n\r\n                        if (isHorizontal) {\r\n                            minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\r\n                            maxChartAreaHeight -= minSize.height;\r\n                        } else {\r\n                            minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\r\n                            maxChartAreaWidth -= minSize.width;\r\n                        }\r\n\r\n                        minBoxSizes.push({\r\n                            horizontal: isHorizontal,\r\n                            minSize: minSize,\r\n                            box: box,\r\n                        });\r\n                    }\r\n\r\n                    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\r\n\r\n                    // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\r\n                    var maxHorizontalLeftPadding = 0;\r\n                    var maxHorizontalRightPadding = 0;\r\n                    var maxVerticalTopPadding = 0;\r\n                    var maxVerticalBottomPadding = 0;\r\n\r\n                    helpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\r\n                        if (horizontalBox.getPadding) {\r\n                            var boxPadding = horizontalBox.getPadding();\r\n                            maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\r\n                            maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\r\n                        }\r\n                    });\r\n\r\n                    helpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\r\n                        if (verticalBox.getPadding) {\r\n                            var boxPadding = verticalBox.getPadding();\r\n                            maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\r\n                            maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\r\n                        }\r\n                    });\r\n\r\n                    // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\r\n                    // be if the axes are drawn at their minimum sizes.\r\n                    // Steps 5 & 6\r\n                    var totalLeftBoxesWidth = leftPadding;\r\n                    var totalRightBoxesWidth = rightPadding;\r\n                    var totalTopBoxesHeight = topPadding;\r\n                    var totalBottomBoxesHeight = bottomPadding;\r\n\r\n                    // Function to fit a box\r\n                    function fitBox(box) {\r\n                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\r\n                            return minBox.box === box;\r\n                        });\r\n\r\n                        if (minBoxSize) {\r\n                            if (box.isHorizontal()) {\r\n                                var scaleMargin = {\r\n                                    left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\r\n                                    right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\r\n                                    top: 0,\r\n                                    bottom: 0\r\n                                };\r\n\r\n                                // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\r\n                                // on the margin. Sometimes they need to increase in size slightly\r\n                                box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\r\n                            } else {\r\n                                box.update(minBoxSize.minSize.width, maxChartAreaHeight);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Update, and calculate the left and right margins for the horizontal boxes\r\n                    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\r\n\r\n                    helpers.each(leftBoxes, function(box) {\r\n                        totalLeftBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(rightBoxes, function(box) {\r\n                        totalRightBoxesWidth += box.width;\r\n                    });\r\n\r\n                    // Set the Left and Right margins for the horizontal boxes\r\n                    helpers.each(topBoxes.concat(bottomBoxes), fitBox);\r\n\r\n                    // Figure out how much margin is on the top and bottom of the vertical boxes\r\n                    helpers.each(topBoxes, function(box) {\r\n                        totalTopBoxesHeight += box.height;\r\n                    });\r\n\r\n                    helpers.each(bottomBoxes, function(box) {\r\n                        totalBottomBoxesHeight += box.height;\r\n                    });\r\n\r\n                    function finalFitVerticalBox(box) {\r\n                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\r\n                            return minSize.box === box;\r\n                        });\r\n\r\n                        var scaleMargin = {\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: totalTopBoxesHeight,\r\n                            bottom: totalBottomBoxesHeight\r\n                        };\r\n\r\n                        if (minBoxSize) {\r\n                            box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\r\n                        }\r\n                    }\r\n\r\n                    // Let the left layout know the final margin\r\n                    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\r\n\r\n                    // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\r\n                    totalLeftBoxesWidth = leftPadding;\r\n                    totalRightBoxesWidth = rightPadding;\r\n                    totalTopBoxesHeight = topPadding;\r\n                    totalBottomBoxesHeight = bottomPadding;\r\n\r\n                    helpers.each(leftBoxes, function(box) {\r\n                        totalLeftBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(rightBoxes, function(box) {\r\n                        totalRightBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(topBoxes, function(box) {\r\n                        totalTopBoxesHeight += box.height;\r\n                    });\r\n                    helpers.each(bottomBoxes, function(box) {\r\n                        totalBottomBoxesHeight += box.height;\r\n                    });\r\n\r\n                    // We may be adding some padding to account for rotated x axis labels\r\n                    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\r\n                    totalLeftBoxesWidth += leftPaddingAddition;\r\n                    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\r\n\r\n                    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\r\n                    totalTopBoxesHeight += topPaddingAddition;\r\n                    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\r\n\r\n                    // Figure out if our chart area changed. This would occur if the dataset layout label rotation\r\n                    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\r\n                    // without calling `fit` again\r\n                    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\r\n                    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\r\n\r\n                    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\r\n                        helpers.each(leftBoxes, function(box) {\r\n                            box.height = newMaxChartAreaHeight;\r\n                        });\r\n\r\n                        helpers.each(rightBoxes, function(box) {\r\n                            box.height = newMaxChartAreaHeight;\r\n                        });\r\n\r\n                        helpers.each(topBoxes, function(box) {\r\n                            if (!box.fullWidth) {\r\n                                box.width = newMaxChartAreaWidth;\r\n                            }\r\n                        });\r\n\r\n                        helpers.each(bottomBoxes, function(box) {\r\n                            if (!box.fullWidth) {\r\n                                box.width = newMaxChartAreaWidth;\r\n                            }\r\n                        });\r\n\r\n                        maxChartAreaHeight = newMaxChartAreaHeight;\r\n                        maxChartAreaWidth = newMaxChartAreaWidth;\r\n                    }\r\n\r\n                    // Step 7 - Position the boxes\r\n                    var left = leftPadding + leftPaddingAddition;\r\n                    var top = topPadding + topPaddingAddition;\r\n\r\n                    function placeBox(box) {\r\n                        if (box.isHorizontal()) {\r\n                            box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\r\n                            box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\r\n                            box.top = top;\r\n                            box.bottom = top + box.height;\r\n\r\n                            // Move to next point\r\n                            top = box.bottom;\r\n                        } else {\r\n                            box.left = left;\r\n                            box.right = left + box.width;\r\n                            box.top = totalTopBoxesHeight;\r\n                            box.bottom = totalTopBoxesHeight + maxChartAreaHeight;\r\n\r\n                            // Move to next point\r\n                            left = box.right;\r\n                        }\r\n                    }\r\n\r\n                    helpers.each(leftBoxes.concat(topBoxes), placeBox);\r\n\r\n                    // Account for chart width and height\r\n                    left += maxChartAreaWidth;\r\n                    top += maxChartAreaHeight;\r\n\r\n                    helpers.each(rightBoxes, placeBox);\r\n                    helpers.each(bottomBoxes, placeBox);\r\n\r\n                    // Step 8\r\n                    chart.chartArea = {\r\n                        left: totalLeftBoxesWidth,\r\n                        top: totalTopBoxesHeight,\r\n                        right: totalLeftBoxesWidth + maxChartAreaWidth,\r\n                        bottom: totalTopBoxesHeight + maxChartAreaHeight\r\n                    };\r\n\r\n                    // Step 9\r\n                    helpers.each(chartAreaBoxes, function(box) {\r\n                        box.left = chart.chartArea.left;\r\n                        box.top = chart.chartArea.top;\r\n                        box.right = chart.chartArea.right;\r\n                        box.bottom = chart.chartArea.bottom;\r\n\r\n                        box.update(maxChartAreaWidth, maxChartAreaHeight);\r\n                    });\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 22: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                plugins: {}\r\n            });\r\n\r\n            /**\r\n             * The plugin service singleton\r\n             * @namespace Chart.plugins\r\n             * @since 2.1.0\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Globally registered plugins.\r\n                 * @private\r\n                 */\r\n                _plugins: [],\r\n\r\n                /**\r\n                 * This identifier is used to invalidate the descriptors cache attached to each chart\r\n                 * when a global plugin is registered or unregistered. In this case, the cache ID is\r\n                 * incremented and descriptors are regenerated during following API calls.\r\n                 * @private\r\n                 */\r\n                _cacheId: 0,\r\n\r\n                /**\r\n                 * Registers the given plugin(s) if not already registered.\r\n                 * @param {Array|Object} plugins plugin instance(s).\r\n                 */\r\n                register: function(plugins) {\r\n                    var p = this._plugins;\r\n                    ([]).concat(plugins).forEach(function(plugin) {\r\n                        if (p.indexOf(plugin) === -1) {\r\n                            p.push(plugin);\r\n                        }\r\n                    });\r\n\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Unregisters the given plugin(s) only if registered.\r\n                 * @param {Array|Object} plugins plugin instance(s).\r\n                 */\r\n                unregister: function(plugins) {\r\n                    var p = this._plugins;\r\n                    ([]).concat(plugins).forEach(function(plugin) {\r\n                        var idx = p.indexOf(plugin);\r\n                        if (idx !== -1) {\r\n                            p.splice(idx, 1);\r\n                        }\r\n                    });\r\n\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Remove all registered plugins.\r\n                 * @since 2.1.5\r\n                 */\r\n                clear: function() {\r\n                    this._plugins = [];\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Returns the number of registered plugins?\r\n                 * @returns {Number}\r\n                 * @since 2.1.5\r\n                 */\r\n                count: function() {\r\n                    return this._plugins.length;\r\n                },\r\n\r\n                /**\r\n                 * Returns all registered plugin instances.\r\n                 * @returns {Array} array of plugin objects.\r\n                 * @since 2.1.5\r\n                 */\r\n                getAll: function() {\r\n                    return this._plugins;\r\n                },\r\n\r\n                /**\r\n                 * Calls enabled plugins for `chart` on the specified hook and with the given args.\r\n                 * This method immediately returns as soon as a plugin explicitly returns false. The\r\n                 * returned value can be used, for instance, to interrupt the current action.\r\n                 * @param {Object} chart - The chart instance for which plugins should be called.\r\n                 * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\r\n                 * @param {Array} [args] - Extra arguments to apply to the hook call.\r\n                 * @returns {Boolean} false if any of the plugins return false, else returns true.\r\n                 */\r\n                notify: function(chart, hook, args) {\r\n                    var descriptors = this.descriptors(chart);\r\n                    var ilen = descriptors.length;\r\n                    var i, descriptor, plugin, params, method;\r\n\r\n                    for (i = 0; i < ilen; ++i) {\r\n                        descriptor = descriptors[i];\r\n                        plugin = descriptor.plugin;\r\n                        method = plugin[hook];\r\n                        if (typeof method === 'function') {\r\n                            params = [chart].concat(args || []);\r\n                            params.push(descriptor.options);\r\n                            if (method.apply(plugin, params) === false) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                },\r\n\r\n                /**\r\n                 * Returns descriptors of enabled plugins for the given chart.\r\n                 * @returns {Array} [{ plugin, options }]\r\n                 * @private\r\n                 */\r\n                descriptors: function(chart) {\r\n                    var cache = chart.$plugins || (chart.$plugins = {});\r\n                    if (cache.id === this._cacheId) {\r\n                        return cache.descriptors;\r\n                    }\r\n\r\n                    var plugins = [];\r\n                    var descriptors = [];\r\n                    var config = (chart && chart.config) || {};\r\n                    var options = (config.options && config.options.plugins) || {};\r\n\r\n                    this._plugins.concat(config.plugins || []).forEach(function(plugin) {\r\n                        var idx = plugins.indexOf(plugin);\r\n                        if (idx !== -1) {\r\n                            return;\r\n                        }\r\n\r\n                        var id = plugin.id;\r\n                        var opts = options[id];\r\n                        if (opts === false) {\r\n                            return;\r\n                        }\r\n\r\n                        if (opts === true) {\r\n                            opts = helpers.clone(defaults.global.plugins[id]);\r\n                        }\r\n\r\n                        plugins.push(plugin);\r\n                        descriptors.push({\r\n                            plugin: plugin,\r\n                            options: opts || {}\r\n                        });\r\n                    });\r\n\r\n                    cache.descriptors = descriptors;\r\n                    cache.id = this._cacheId;\r\n                    return descriptors;\r\n                },\r\n\r\n                /**\r\n                 * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\r\n                 * but in some cases, this reference can be changed by the user when updating options.\r\n                 * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\r\n                 * @private\r\n                 */\r\n                _invalidate: function(chart) {\r\n                    delete chart.$plugins;\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Plugin extension hooks.\r\n             * @interface IPlugin\r\n             * @since 2.1.0\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeInit\r\n             * @desc Called before initializing `chart`.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterInit\r\n             * @desc Called after `chart` has been initialized and before the first update.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeUpdate\r\n             * @desc Called before updating `chart`. If any plugin returns `false`, the update\r\n             * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart update.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterUpdate\r\n             * @desc Called after `chart` has been updated and before rendering. Note that this\r\n             * hook will not be called if the chart update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetsUpdate\r\n             * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\r\n             * the datasets update is cancelled until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} false to cancel the datasets update.\r\n             * @since version 2.1.5\r\n            */\r\n            /**\r\n             * @method IPlugin#afterDatasetsUpdate\r\n             * @desc Called after the `chart` datasets have been updated. Note that this hook\r\n             * will not be called if the datasets update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @since version 2.1.5\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetUpdate\r\n             * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\r\n             * returns `false`, the datasets update is cancelled until another `update` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetUpdate\r\n             * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\r\n             * that this hook will not be called if the datasets update has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeLayout\r\n             * @desc Called before laying out `chart`. If any plugin returns `false`,\r\n             * the layout update is cancelled until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart layout.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterLayout\r\n             * @desc Called after the `chart` has been layed out. Note that this hook will not\r\n             * be called if the layout update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeRender\r\n             * @desc Called before rendering `chart`. If any plugin returns `false`,\r\n             * the rendering is cancelled until another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart rendering.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterRender\r\n             * @desc Called after the `chart` has been fully rendered (and animation completed). Note\r\n             * that this hook will not be called if the rendering has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDraw\r\n             * @desc Called before drawing `chart` at every animation frame specified by the given\r\n             * easing value. If any plugin returns `false`, the frame drawing is cancelled until\r\n             * another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDraw\r\n             * @desc Called after the `chart` has been drawn for the specific easing value. Note\r\n             * that this hook will not be called if the drawing has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetsDraw\r\n             * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\r\n             * the datasets drawing is cancelled until another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetsDraw\r\n             * @desc Called after the `chart` datasets have been drawn. Note that this hook\r\n             * will not be called if the datasets drawing has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetDraw\r\n             * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\r\n             * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\r\n             * is cancelled until another `render` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetDraw\r\n             * @desc Called after the `chart` datasets at the given `args.index` have been drawn\r\n             * (datasets are drawn in the reverse order). Note that this hook will not be called\r\n             * if the datasets drawing has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeTooltipDraw\r\n             * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\r\n             * the tooltip drawing is cancelled until another `render` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Object} args.tooltip - The tooltip.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart tooltip drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterTooltipDraw\r\n             * @desc Called after drawing the `tooltip`. Note that this hook will not\r\n             * be called if the tooltip drawing has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Object} args.tooltip - The tooltip.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeEvent\r\n             * @desc Called before processing the specified `event`. If any plugin returns `false`,\r\n             * the event will be discarded.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {IEvent} event - The event object.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterEvent\r\n             * @desc Called after the `event` has been consumed. Note that this hook\r\n             * will not be called if the `event` has been previously discarded.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {IEvent} event - The event object.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#resize\r\n             * @desc Called after the chart as been resized.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#destroy\r\n             * @desc Called after the chart as been destroyed.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n        }, { \"16\": 16, \"36\": 36 }], 23: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var Ticks = require(25);\r\n\r\n            defaults._set('scale', {\r\n                display: true,\r\n                position: 'left',\r\n                offset: false,\r\n\r\n                // grid line settings\r\n                gridLines: {\r\n                    display: true,\r\n                    color: 'rgba(0, 0, 0, 0.1)',\r\n                    lineWidth: 1,\r\n                    drawBorder: true,\r\n                    drawOnChartArea: true,\r\n                    drawTicks: true,\r\n                    tickMarkLength: 10,\r\n                    zeroLineWidth: 1,\r\n                    zeroLineColor: 'rgba(0,0,0,0.25)',\r\n                    zeroLineBorderDash: [],\r\n                    zeroLineBorderDashOffset: 0.0,\r\n                    offsetGridLines: false,\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0\r\n                },\r\n\r\n                // scale label\r\n                scaleLabel: {\r\n                    // display property\r\n                    display: false,\r\n\r\n                    // actual label\r\n                    labelString: '',\r\n\r\n                    // line height\r\n                    lineHeight: 1.2,\r\n\r\n                    // top/bottom padding\r\n                    padding: {\r\n                        top: 4,\r\n                        bottom: 4\r\n                    }\r\n                },\r\n\r\n                // label settings\r\n                ticks: {\r\n                    beginAtZero: false,\r\n                    minRotation: 0,\r\n                    maxRotation: 50,\r\n                    mirror: false,\r\n                    padding: 0,\r\n                    reverse: false,\r\n                    display: true,\r\n                    autoSkip: true,\r\n                    autoSkipPadding: 0,\r\n                    labelOffset: 0,\r\n                    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\r\n                    callback: Ticks.formatters.values,\r\n                    minor: {},\r\n                    major: {}\r\n                }\r\n            });\r\n\r\n            function labelsFromTicks(ticks) {\r\n                var labels = [];\r\n                var i, ilen;\r\n\r\n                for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n                    labels.push(ticks[i].label);\r\n                }\r\n\r\n                return labels;\r\n            }\r\n\r\n            function getLineValue(scale, index, offsetGridLines) {\r\n                var lineValue = scale.getPixelForTick(index);\r\n\r\n                if (offsetGridLines) {\r\n                    if (index === 0) {\r\n                        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\r\n                    } else {\r\n                        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\r\n                    }\r\n                }\r\n                return lineValue;\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                function computeTextSize(context, tick, font) {\r\n                    return helpers.isArray(tick) ?\r\n                        helpers.longestText(context, font, tick) :\r\n                        context.measureText(tick).width;\r\n                }\r\n\r\n                function parseFontOptions(options) {\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var globalDefaults = defaults.global;\r\n                    var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\r\n                    var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\r\n                    var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\r\n\r\n                    return {\r\n                        size: size,\r\n                        style: style,\r\n                        family: family,\r\n                        font: helpers.fontString(size, style, family)\r\n                    };\r\n                }\r\n\r\n                function parseLineHeight(options) {\r\n                    return helpers.options.toLineHeight(\r\n                        helpers.valueOrDefault(options.lineHeight, 1.2),\r\n                        helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\r\n                }\r\n\r\n                Chart.Scale = Element.extend({\r\n                    /**\r\n                     * Get the padding needed for the scale\r\n                     * @method getPadding\r\n                     * @private\r\n                     * @returns {Padding} the necessary padding\r\n                     */\r\n                    getPadding: function() {\r\n                        var me = this;\r\n                        return {\r\n                            left: me.paddingLeft || 0,\r\n                            top: me.paddingTop || 0,\r\n                            right: me.paddingRight || 0,\r\n                            bottom: me.paddingBottom || 0\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the scale tick objects ({label, major})\r\n                     * @since 2.7\r\n                     */\r\n                    getTicks: function() {\r\n                        return this._ticks;\r\n                    },\r\n\r\n                    // These methods are ordered by lifecyle. Utilities then follow.\r\n                    // Any function defined here is inherited by all scale types.\r\n                    // Any function can be extended by the scale type\r\n\r\n                    mergeTicksOptions: function() {\r\n                        var ticks = this.options.ticks;\r\n                        if (ticks.minor === false) {\r\n                            ticks.minor = {\r\n                                display: false\r\n                            };\r\n                        }\r\n                        if (ticks.major === false) {\r\n                            ticks.major = {\r\n                                display: false\r\n                            };\r\n                        }\r\n                        for (var key in ticks) {\r\n                            if (key !== 'major' && key !== 'minor') {\r\n                                if (typeof ticks.minor[key] === 'undefined') {\r\n                                    ticks.minor[key] = ticks[key];\r\n                                }\r\n                                if (typeof ticks.major[key] === 'undefined') {\r\n                                    ticks.major[key] = ticks[key];\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    beforeUpdate: function() {\r\n                        helpers.callback(this.options.beforeUpdate, [this]);\r\n                    },\r\n                    update: function(maxWidth, maxHeight, margins) {\r\n                        var me = this;\r\n                        var i, ilen, labels, label, ticks, tick;\r\n\r\n                        // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                        me.beforeUpdate();\r\n\r\n                        // Absorb the master measurements\r\n                        me.maxWidth = maxWidth;\r\n                        me.maxHeight = maxHeight;\r\n                        me.margins = helpers.extend({\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: 0,\r\n                            bottom: 0\r\n                        }, margins);\r\n                        me.longestTextCache = me.longestTextCache || {};\r\n\r\n                        // Dimensions\r\n                        me.beforeSetDimensions();\r\n                        me.setDimensions();\r\n                        me.afterSetDimensions();\r\n\r\n                        // Data min/max\r\n                        me.beforeDataLimits();\r\n                        me.determineDataLimits();\r\n                        me.afterDataLimits();\r\n\r\n                        // Ticks - `this.ticks` is now DEPRECATED!\r\n                        // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\r\n                        // and must not be accessed directly from outside this class. `this.ticks` being\r\n                        // around for long time and not marked as private, we can't change its structure\r\n                        // without unexpected breaking changes. If you need to access the scale ticks,\r\n                        // use scale.getTicks() instead.\r\n\r\n                        me.beforeBuildTicks();\r\n\r\n                        // New implementations should return an array of objects but for BACKWARD COMPAT,\r\n                        // we still support no return (`this.ticks` internally set by calling this method).\r\n                        ticks = me.buildTicks() || [];\r\n\r\n                        me.afterBuildTicks();\r\n\r\n                        me.beforeTickToLabelConversion();\r\n\r\n                        // New implementations should return the formatted tick labels but for BACKWARD\r\n                        // COMPAT, we still support no return (`this.ticks` internally changed by calling\r\n                        // this method and supposed to contain only string values).\r\n                        labels = me.convertTicksToLabels(ticks) || me.ticks;\r\n\r\n                        me.afterTickToLabelConversion();\r\n\r\n                        me.ticks = labels;   // BACKWARD COMPATIBILITY\r\n\r\n                        // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\r\n\r\n                        // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\r\n                        for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n                            label = labels[i];\r\n                            tick = ticks[i];\r\n                            if (!tick) {\r\n                                ticks.push(tick = {\r\n                                    label: label,\r\n                                    major: false\r\n                                });\r\n                            } else {\r\n                                tick.label = label;\r\n                            }\r\n                        }\r\n\r\n                        me._ticks = ticks;\r\n\r\n                        // Tick Rotation\r\n                        me.beforeCalculateTickRotation();\r\n                        me.calculateTickRotation();\r\n                        me.afterCalculateTickRotation();\r\n                        // Fit\r\n                        me.beforeFit();\r\n                        me.fit();\r\n                        me.afterFit();\r\n                        //\r\n                        me.afterUpdate();\r\n\r\n                        return me.minSize;\r\n                    },\r\n                    afterUpdate: function() {\r\n                        helpers.callback(this.options.afterUpdate, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeSetDimensions: function() {\r\n                        helpers.callback(this.options.beforeSetDimensions, [this]);\r\n                    },\r\n                    setDimensions: function() {\r\n                        var me = this;\r\n                        // Set the unconstrained dimension before label rotation\r\n                        if (me.isHorizontal()) {\r\n                            // Reset position before calculating rotation\r\n                            me.width = me.maxWidth;\r\n                            me.left = 0;\r\n                            me.right = me.width;\r\n                        } else {\r\n                            me.height = me.maxHeight;\r\n\r\n                            // Reset position before calculating rotation\r\n                            me.top = 0;\r\n                            me.bottom = me.height;\r\n                        }\r\n\r\n                        // Reset padding\r\n                        me.paddingLeft = 0;\r\n                        me.paddingTop = 0;\r\n                        me.paddingRight = 0;\r\n                        me.paddingBottom = 0;\r\n                    },\r\n                    afterSetDimensions: function() {\r\n                        helpers.callback(this.options.afterSetDimensions, [this]);\r\n                    },\r\n\r\n                    // Data limits\r\n                    beforeDataLimits: function() {\r\n                        helpers.callback(this.options.beforeDataLimits, [this]);\r\n                    },\r\n                    determineDataLimits: helpers.noop,\r\n                    afterDataLimits: function() {\r\n                        helpers.callback(this.options.afterDataLimits, [this]);\r\n                    },\r\n\r\n                    //\r\n                    beforeBuildTicks: function() {\r\n                        helpers.callback(this.options.beforeBuildTicks, [this]);\r\n                    },\r\n                    buildTicks: helpers.noop,\r\n                    afterBuildTicks: function() {\r\n                        helpers.callback(this.options.afterBuildTicks, [this]);\r\n                    },\r\n\r\n                    beforeTickToLabelConversion: function() {\r\n                        helpers.callback(this.options.beforeTickToLabelConversion, [this]);\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        // Convert ticks to strings\r\n                        var tickOpts = me.options.ticks;\r\n                        me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\r\n                    },\r\n                    afterTickToLabelConversion: function() {\r\n                        helpers.callback(this.options.afterTickToLabelConversion, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeCalculateTickRotation: function() {\r\n                        helpers.callback(this.options.beforeCalculateTickRotation, [this]);\r\n                    },\r\n                    calculateTickRotation: function() {\r\n                        var me = this;\r\n                        var context = me.ctx;\r\n                        var tickOpts = me.options.ticks;\r\n                        var labels = labelsFromTicks(me._ticks);\r\n\r\n                        // Get the width of each grid by calculating the difference\r\n                        // between x offsets between 0 and 1.\r\n                        var tickFont = parseFontOptions(tickOpts);\r\n                        context.font = tickFont.font;\r\n\r\n                        var labelRotation = tickOpts.minRotation || 0;\r\n\r\n                        if (labels.length && me.options.display && me.isHorizontal()) {\r\n                            var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\r\n                            var labelWidth = originalLabelWidth;\r\n                            var cosRotation, sinRotation;\r\n\r\n                            // Allow 3 pixels x2 padding either side for label readability\r\n                            var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\r\n\r\n                            // Max label rotation can be set or default to 90 - also act as a loop counter\r\n                            while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\r\n                                var angleRadians = helpers.toRadians(labelRotation);\r\n                                cosRotation = Math.cos(angleRadians);\r\n                                sinRotation = Math.sin(angleRadians);\r\n\r\n                                if (sinRotation * originalLabelWidth > me.maxHeight) {\r\n                                    // go back one step\r\n                                    labelRotation--;\r\n                                    break;\r\n                                }\r\n\r\n                                labelRotation++;\r\n                                labelWidth = cosRotation * originalLabelWidth;\r\n                            }\r\n                        }\r\n\r\n                        me.labelRotation = labelRotation;\r\n                    },\r\n                    afterCalculateTickRotation: function() {\r\n                        helpers.callback(this.options.afterCalculateTickRotation, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeFit: function() {\r\n                        helpers.callback(this.options.beforeFit, [this]);\r\n                    },\r\n                    fit: function() {\r\n                        var me = this;\r\n                        // Reset\r\n                        var minSize = me.minSize = {\r\n                            width: 0,\r\n                            height: 0\r\n                        };\r\n\r\n                        var labels = labelsFromTicks(me._ticks);\r\n\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n                        var scaleLabelOpts = opts.scaleLabel;\r\n                        var gridLineOpts = opts.gridLines;\r\n                        var display = opts.display;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        var tickFont = parseFontOptions(tickOpts);\r\n                        var tickMarkLength = opts.gridLines.tickMarkLength;\r\n\r\n                        // Width\r\n                        if (isHorizontal) {\r\n                            // subtract the margins to line up with the chartArea if we are a full width scale\r\n                            minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\r\n                        } else {\r\n                            minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n                        }\r\n\r\n                        // height\r\n                        if (isHorizontal) {\r\n                            minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n                        } else {\r\n                            minSize.height = me.maxHeight; // fill all the height\r\n                        }\r\n\r\n                        // Are we showing a title for the scale?\r\n                        if (scaleLabelOpts.display && display) {\r\n                            var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\r\n                            var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\r\n                            var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\r\n\r\n                            if (isHorizontal) {\r\n                                minSize.height += deltaHeight;\r\n                            } else {\r\n                                minSize.width += deltaHeight;\r\n                            }\r\n                        }\r\n\r\n                        // Don't bother fitting the ticks if we are not showing them\r\n                        if (tickOpts.display && display) {\r\n                            var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\r\n                            var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\r\n                            var lineSpace = tickFont.size * 0.5;\r\n                            var tickPadding = me.options.ticks.padding;\r\n\r\n                            if (isHorizontal) {\r\n                                // A horizontal axis is more constrained by the height.\r\n                                me.longestLabelWidth = largestTextWidth;\r\n\r\n                                var angleRadians = helpers.toRadians(me.labelRotation);\r\n                                var cosRotation = Math.cos(angleRadians);\r\n                                var sinRotation = Math.sin(angleRadians);\r\n\r\n                                // TODO - improve this calculation\r\n                                var labelHeight = (sinRotation * largestTextWidth)\r\n                                    + (tickFont.size * tallestLabelHeightInLines)\r\n                                    + (lineSpace * (tallestLabelHeightInLines - 1))\r\n                                    + lineSpace; // padding\r\n\r\n                                minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\r\n\r\n                                me.ctx.font = tickFont.font;\r\n                                var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\r\n                                var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\r\n\r\n                                // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\r\n                                // which means that the right padding is dominated by the font height\r\n                                if (me.labelRotation !== 0) {\r\n                                    me.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\r\n                                    me.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\r\n                                } else {\r\n                                    me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\r\n                                    me.paddingRight = lastLabelWidth / 2 + 3;\r\n                                }\r\n                            } else {\r\n                                // A vertical axis is more constrained by the width. Labels are the\r\n                                // dominant factor here, so get that length first and account for padding\r\n                                if (tickOpts.mirror) {\r\n                                    largestTextWidth = 0;\r\n                                } else {\r\n                                    // use lineSpace for consistency with horizontal axis\r\n                                    // tickPadding is not implemented for horizontal\r\n                                    largestTextWidth += tickPadding + lineSpace;\r\n                                }\r\n\r\n                                minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\r\n\r\n                                me.paddingTop = tickFont.size / 2;\r\n                                me.paddingBottom = tickFont.size / 2;\r\n                            }\r\n                        }\r\n\r\n                        me.handleMargins();\r\n\r\n                        me.width = minSize.width;\r\n                        me.height = minSize.height;\r\n                    },\r\n\r\n                    /**\r\n                     * Handle margins and padding interactions\r\n                     * @private\r\n                     */\r\n                    handleMargins: function() {\r\n                        var me = this;\r\n                        if (me.margins) {\r\n                            me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\r\n                            me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\r\n                            me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\r\n                            me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\r\n                        }\r\n                    },\r\n\r\n                    afterFit: function() {\r\n                        helpers.callback(this.options.afterFit, [this]);\r\n                    },\r\n\r\n                    // Shared Methods\r\n                    isHorizontal: function() {\r\n                        return this.options.position === 'top' || this.options.position === 'bottom';\r\n                    },\r\n                    isFullWidth: function() {\r\n                        return (this.options.fullWidth);\r\n                    },\r\n\r\n                    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\r\n                    getRightValue: function(rawValue) {\r\n                        // Null and undefined values first\r\n                        if (helpers.isNullOrUndef(rawValue)) {\r\n                            return NaN;\r\n                        }\r\n                        // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\r\n                        if (typeof rawValue === 'number' && !isFinite(rawValue)) {\r\n                            return NaN;\r\n                        }\r\n                        // If it is in fact an object, dive in one more level\r\n                        if (rawValue) {\r\n                            if (this.isHorizontal()) {\r\n                                if (rawValue.x !== undefined) {\r\n                                    return this.getRightValue(rawValue.x);\r\n                                }\r\n                            } else if (rawValue.y !== undefined) {\r\n                                return this.getRightValue(rawValue.y);\r\n                            }\r\n                        }\r\n\r\n                        // Value is good, return it\r\n                        return rawValue;\r\n                    },\r\n\r\n                    /**\r\n                     * Used to get the value to display in the tooltip for the data at the given index\r\n                     * @param index\r\n                     * @param datasetIndex\r\n                     */\r\n                    getLabelForIndex: helpers.noop,\r\n\r\n                    /**\r\n                     * Returns the location of the given data point. Value can either be an index or a numerical value\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     * @param value\r\n                     * @param index\r\n                     * @param datasetIndex\r\n                     */\r\n                    getPixelForValue: helpers.noop,\r\n\r\n                    /**\r\n                     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     * @param pixel\r\n                     */\r\n                    getValueForPixel: helpers.noop,\r\n\r\n                    /**\r\n                     * Returns the location of the tick at the given index\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getPixelForTick: function(index) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        if (me.isHorizontal()) {\r\n                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n                            var tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\r\n                            var pixel = (tickWidth * index) + me.paddingLeft;\r\n\r\n                            if (offset) {\r\n                                pixel += tickWidth / 2;\r\n                            }\r\n\r\n                            var finalVal = me.left + Math.round(pixel);\r\n                            finalVal += me.isFullWidth() ? me.margins.left : 0;\r\n                            return finalVal;\r\n                        }\r\n                        var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\r\n                        return me.top + (index * (innerHeight / (me._ticks.length - 1)));\r\n                    },\r\n\r\n                    /**\r\n                     * Utility for getting the pixel location of a percentage of scale\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getPixelForDecimal: function(decimal) {\r\n                        var me = this;\r\n                        if (me.isHorizontal()) {\r\n                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n                            var valueOffset = (innerWidth * decimal) + me.paddingLeft;\r\n\r\n                            var finalVal = me.left + Math.round(valueOffset);\r\n                            finalVal += me.isFullWidth() ? me.margins.left : 0;\r\n                            return finalVal;\r\n                        }\r\n                        return me.top + (decimal * me.height);\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the pixel for the minimum chart value\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getBasePixel: function() {\r\n                        return this.getPixelForValue(this.getBaseValue());\r\n                    },\r\n\r\n                    getBaseValue: function() {\r\n                        var me = this;\r\n                        var min = me.min;\r\n                        var max = me.max;\r\n\r\n                        return me.beginAtZero ? 0 :\r\n                            min < 0 && max < 0 ? max :\r\n                                min > 0 && max > 0 ? min :\r\n                                    0;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns a subset of ticks to be plotted to avoid overlapping labels.\r\n                     * @private\r\n                     */\r\n                    _autoSkip: function(ticks) {\r\n                        var skipRatio;\r\n                        var me = this;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var optionTicks = me.options.ticks.minor;\r\n                        var tickCount = ticks.length;\r\n                        var labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n                        var cosRotation = Math.cos(labelRotationRadians);\r\n                        var longestRotatedLabel = me.longestLabelWidth * cosRotation;\r\n                        var result = [];\r\n                        var i, tick, shouldSkip;\r\n\r\n                        // figure out the maximum number of gridlines to show\r\n                        var maxTicks;\r\n                        if (optionTicks.maxTicksLimit) {\r\n                            maxTicks = optionTicks.maxTicksLimit;\r\n                        }\r\n\r\n                        if (isHorizontal) {\r\n                            skipRatio = false;\r\n\r\n                            if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\r\n                                skipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\r\n                            }\r\n\r\n                            // if they defined a max number of optionTicks,\r\n                            // increase skipRatio until that number is met\r\n                            if (maxTicks && tickCount > maxTicks) {\r\n                                skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\r\n                            }\r\n                        }\r\n\r\n                        for (i = 0; i < tickCount; i++) {\r\n                            tick = ticks[i];\r\n\r\n                            // Since we always show the last tick,we need may need to hide the last shown one before\r\n                            shouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\r\n                            if (shouldSkip && i !== tickCount - 1) {\r\n                                // leave tick in place but make sure it's not displayed (#4635)\r\n                                delete tick.label;\r\n                            }\r\n                            result.push(tick);\r\n                        }\r\n                        return result;\r\n                    },\r\n\r\n                    // Actually draw the scale on the canvas\r\n                    // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\r\n                    draw: function(chartArea) {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        if (!options.display) {\r\n                            return;\r\n                        }\r\n\r\n                        var context = me.ctx;\r\n                        var globalDefaults = defaults.global;\r\n                        var optionTicks = options.ticks.minor;\r\n                        var optionMajorTicks = options.ticks.major || optionTicks;\r\n                        var gridLines = options.gridLines;\r\n                        var scaleLabel = options.scaleLabel;\r\n\r\n                        var isRotated = me.labelRotation !== 0;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\r\n                        var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\r\n                        var tickFont = parseFontOptions(optionTicks);\r\n                        var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\r\n                        var majorTickFont = parseFontOptions(optionMajorTicks);\r\n\r\n                        var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\r\n\r\n                        var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\r\n                        var scaleLabelFont = parseFontOptions(scaleLabel);\r\n                        var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\r\n                        var labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n\r\n                        var itemsToDraw = [];\r\n\r\n                        var axisWidth = me.options.gridLines.lineWidth;\r\n                        var xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\r\n                        var xTickEnd = options.position === 'right' ? me.right + tl : me.right;\r\n                        var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\r\n                        var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\r\n\r\n                        helpers.each(ticks, function(tick, index) {\r\n                            // autoskipper skipped this tick (#4635)\r\n                            if (helpers.isNullOrUndef(tick.label)) {\r\n                                return;\r\n                            }\r\n\r\n                            var label = tick.label;\r\n                            var lineWidth, lineColor, borderDash, borderDashOffset;\r\n                            if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\r\n                                // Draw the first index specially\r\n                                lineWidth = gridLines.zeroLineWidth;\r\n                                lineColor = gridLines.zeroLineColor;\r\n                                borderDash = gridLines.zeroLineBorderDash;\r\n                                borderDashOffset = gridLines.zeroLineBorderDashOffset;\r\n                            } else {\r\n                                lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\r\n                                lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\r\n                                borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\r\n                                borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\r\n                            }\r\n\r\n                            // Common properties\r\n                            var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\r\n                            var textAlign = 'middle';\r\n                            var textBaseline = 'middle';\r\n                            var tickPadding = optionTicks.padding;\r\n\r\n                            if (isHorizontal) {\r\n                                var labelYOffset = tl + tickPadding;\r\n\r\n                                if (options.position === 'bottom') {\r\n                                    // bottom\r\n                                    textBaseline = !isRotated ? 'top' : 'middle';\r\n                                    textAlign = !isRotated ? 'center' : 'right';\r\n                                    labelY = me.top + labelYOffset;\r\n                                } else {\r\n                                    // top\r\n                                    textBaseline = !isRotated ? 'bottom' : 'middle';\r\n                                    textAlign = !isRotated ? 'center' : 'left';\r\n                                    labelY = me.bottom - labelYOffset;\r\n                                }\r\n\r\n                                var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\r\n                                if (xLineValue < me.left) {\r\n                                    lineColor = 'rgba(0,0,0,0)';\r\n                                }\r\n                                xLineValue += helpers.aliasPixel(lineWidth);\r\n\r\n                                labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\r\n\r\n                                tx1 = tx2 = x1 = x2 = xLineValue;\r\n                                ty1 = yTickStart;\r\n                                ty2 = yTickEnd;\r\n                                y1 = chartArea.top;\r\n                                y2 = chartArea.bottom + axisWidth;\r\n                            } else {\r\n                                var isLeft = options.position === 'left';\r\n                                var labelXOffset;\r\n\r\n                                if (optionTicks.mirror) {\r\n                                    textAlign = isLeft ? 'left' : 'right';\r\n                                    labelXOffset = tickPadding;\r\n                                } else {\r\n                                    textAlign = isLeft ? 'right' : 'left';\r\n                                    labelXOffset = tl + tickPadding;\r\n                                }\r\n\r\n                                labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\r\n\r\n                                var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\r\n                                if (yLineValue < me.top) {\r\n                                    lineColor = 'rgba(0,0,0,0)';\r\n                                }\r\n                                yLineValue += helpers.aliasPixel(lineWidth);\r\n\r\n                                labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\r\n\r\n                                tx1 = xTickStart;\r\n                                tx2 = xTickEnd;\r\n                                x1 = chartArea.left;\r\n                                x2 = chartArea.right + axisWidth;\r\n                                ty1 = ty2 = y1 = y2 = yLineValue;\r\n                            }\r\n\r\n                            itemsToDraw.push({\r\n                                tx1: tx1,\r\n                                ty1: ty1,\r\n                                tx2: tx2,\r\n                                ty2: ty2,\r\n                                x1: x1,\r\n                                y1: y1,\r\n                                x2: x2,\r\n                                y2: y2,\r\n                                labelX: labelX,\r\n                                labelY: labelY,\r\n                                glWidth: lineWidth,\r\n                                glColor: lineColor,\r\n                                glBorderDash: borderDash,\r\n                                glBorderDashOffset: borderDashOffset,\r\n                                rotation: -1 * labelRotationRadians,\r\n                                label: label,\r\n                                major: tick.major,\r\n                                textBaseline: textBaseline,\r\n                                textAlign: textAlign\r\n                            });\r\n                        });\r\n\r\n                        // Draw all of the tick labels, tick marks, and grid lines at the correct places\r\n                        helpers.each(itemsToDraw, function(itemToDraw) {\r\n                            if (gridLines.display) {\r\n                                context.save();\r\n                                context.lineWidth = itemToDraw.glWidth;\r\n                                context.strokeStyle = itemToDraw.glColor;\r\n                                if (context.setLineDash) {\r\n                                    context.setLineDash(itemToDraw.glBorderDash);\r\n                                    context.lineDashOffset = itemToDraw.glBorderDashOffset;\r\n                                }\r\n\r\n                                context.beginPath();\r\n\r\n                                if (gridLines.drawTicks) {\r\n                                    context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\r\n                                    context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\r\n                                }\r\n\r\n                                if (gridLines.drawOnChartArea) {\r\n                                    context.moveTo(itemToDraw.x1, itemToDraw.y1);\r\n                                    context.lineTo(itemToDraw.x2, itemToDraw.y2);\r\n                                }\r\n\r\n                                context.stroke();\r\n                                context.restore();\r\n                            }\r\n\r\n                            if (optionTicks.display) {\r\n                                // Make sure we draw text in the correct color and font\r\n                                context.save();\r\n                                context.translate(itemToDraw.labelX, itemToDraw.labelY);\r\n                                context.rotate(itemToDraw.rotation);\r\n                                context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\r\n                                context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\r\n                                context.textBaseline = itemToDraw.textBaseline;\r\n                                context.textAlign = itemToDraw.textAlign;\r\n\r\n                                var label = itemToDraw.label;\r\n                                if (helpers.isArray(label)) {\r\n                                    var lineCount = label.length;\r\n                                    var lineHeight = tickFont.size * 1.5;\r\n                                    var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\r\n\r\n                                    for (var i = 0; i < lineCount; ++i) {\r\n                                        // We just make sure the multiline element is a string here..\r\n                                        context.fillText('' + label[i], 0, y);\r\n                                        // apply same lineSpacing as calculated @ L#320\r\n                                        y += lineHeight;\r\n                                    }\r\n                                } else {\r\n                                    context.fillText(label, 0, 0);\r\n                                }\r\n                                context.restore();\r\n                            }\r\n                        });\r\n\r\n                        if (scaleLabel.display) {\r\n                            // Draw the scale label\r\n                            var scaleLabelX;\r\n                            var scaleLabelY;\r\n                            var rotation = 0;\r\n                            var halfLineHeight = parseLineHeight(scaleLabel) / 2;\r\n\r\n                            if (isHorizontal) {\r\n                                scaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\r\n                                scaleLabelY = options.position === 'bottom'\r\n                                    ? me.bottom - halfLineHeight - scaleLabelPadding.bottom\r\n                                    : me.top + halfLineHeight + scaleLabelPadding.top;\r\n                            } else {\r\n                                var isLeft = options.position === 'left';\r\n                                scaleLabelX = isLeft\r\n                                    ? me.left + halfLineHeight + scaleLabelPadding.top\r\n                                    : me.right - halfLineHeight - scaleLabelPadding.top;\r\n                                scaleLabelY = me.top + ((me.bottom - me.top) / 2);\r\n                                rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\r\n                            }\r\n\r\n                            context.save();\r\n                            context.translate(scaleLabelX, scaleLabelY);\r\n                            context.rotate(rotation);\r\n                            context.textAlign = 'center';\r\n                            context.textBaseline = 'middle';\r\n                            context.fillStyle = scaleLabelFontColor; // render in correct colour\r\n                            context.font = scaleLabelFont.font;\r\n                            context.fillText(scaleLabel.labelString, 0, 0);\r\n                            context.restore();\r\n                        }\r\n\r\n                        if (gridLines.drawBorder) {\r\n                            // Draw the line at the edge of the axis\r\n                            context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\r\n                            context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\r\n                            var x1 = me.left;\r\n                            var x2 = me.right + axisWidth;\r\n                            var y1 = me.top;\r\n                            var y2 = me.bottom + axisWidth;\r\n\r\n                            var aliasPixel = helpers.aliasPixel(context.lineWidth);\r\n                            if (isHorizontal) {\r\n                                y1 = y2 = options.position === 'top' ? me.bottom : me.top;\r\n                                y1 += aliasPixel;\r\n                                y2 += aliasPixel;\r\n                            } else {\r\n                                x1 = x2 = options.position === 'left' ? me.right : me.left;\r\n                                x1 += aliasPixel;\r\n                                x2 += aliasPixel;\r\n                            }\r\n\r\n                            context.beginPath();\r\n                            context.moveTo(x1, y1);\r\n                            context.lineTo(x2, y2);\r\n                            context.stroke();\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"25\": 25, \"36\": 36 }], 24: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.scaleService = {\r\n                    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\r\n                    // use the new chart options to grab the correct scale\r\n                    constructors: {},\r\n                    // Use a registration function so that we can move to an ES6 map when we no longer need to support\r\n                    // old browsers\r\n\r\n                    // Scale config defaults\r\n                    defaults: {},\r\n                    registerScaleType: function(type, scaleConstructor, scaleDefaults) {\r\n                        this.constructors[type] = scaleConstructor;\r\n                        this.defaults[type] = helpers.clone(scaleDefaults);\r\n                    },\r\n                    getScaleConstructor: function(type) {\r\n                        return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\r\n                    },\r\n                    getScaleDefaults: function(type) {\r\n                        // Return the scale defaults merged with the global settings so that we always use the latest ones\r\n                        return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\r\n                    },\r\n                    updateScaleDefaults: function(type, additions) {\r\n                        var me = this;\r\n                        if (me.defaults.hasOwnProperty(type)) {\r\n                            me.defaults[type] = helpers.extend(me.defaults[type], additions);\r\n                        }\r\n                    },\r\n                    addScalesToLayout: function(chart) {\r\n                        // Adds each scale to the chart.boxes array to be sized accordingly\r\n                        helpers.each(chart.scales, function(scale) {\r\n                            // Set ILayoutItem parameters for backwards compatibility\r\n                            scale.fullWidth = scale.options.fullWidth;\r\n                            scale.position = scale.options.position;\r\n                            scale.weight = scale.options.weight;\r\n                            layouts.addBox(chart, scale);\r\n                        });\r\n                    }\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"21\": 21, \"36\": 36 }], 25: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Namespace to hold static tick generation functions\r\n             * @namespace Chart.Ticks\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Namespace to hold formatters for different types of ticks\r\n                 * @namespace Chart.Ticks.formatters\r\n                 */\r\n                formatters: {\r\n                    /**\r\n                     * Formatter for value labels\r\n                     * @method Chart.Ticks.formatters.values\r\n                     * @param value the value to display\r\n                     * @return {String|Array} the label to display\r\n                     */\r\n                    values: function(value) {\r\n                        return helpers.isArray(value) ? value : '' + value;\r\n                    },\r\n\r\n                    /**\r\n                     * Formatter for linear numeric ticks\r\n                     * @method Chart.Ticks.formatters.linear\r\n                     * @param tickValue {Number} the value to be formatted\r\n                     * @param index {Number} the position of the tickValue parameter in the ticks array\r\n                     * @param ticks {Array<Number>} the list of ticks being converted\r\n                     * @return {String} string representation of the tickValue parameter\r\n                     */\r\n                    linear: function(tickValue, index, ticks) {\r\n                        // If we have lots of ticks, don't use the ones\r\n                        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\r\n\r\n                        // If we have a number like 2.5 as the delta, figure out how many decimal places we need\r\n                        if (Math.abs(delta) > 1) {\r\n                            if (tickValue !== Math.floor(tickValue)) {\r\n                                // not an integer\r\n                                delta = tickValue - Math.floor(tickValue);\r\n                            }\r\n                        }\r\n\r\n                        var logDelta = helpers.log10(Math.abs(delta));\r\n                        var tickString = '';\r\n\r\n                        if (tickValue !== 0) {\r\n                            var numDecimal = -1 * Math.floor(logDelta);\r\n                            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\r\n                            tickString = tickValue.toFixed(numDecimal);\r\n                        } else {\r\n                            tickString = '0'; // never show decimal places for 0\r\n                        }\r\n\r\n                        return tickString;\r\n                    },\r\n\r\n                    logarithmic: function(tickValue, index, ticks) {\r\n                        var remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\r\n\r\n                        if (tickValue === 0) {\r\n                            return '0';\r\n                        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\r\n                            return tickValue.toExponential();\r\n                        }\r\n                        return '';\r\n                    }\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 26: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                tooltips: {\r\n                    enabled: true,\r\n                    custom: null,\r\n                    mode: 'nearest',\r\n                    position: 'average',\r\n                    intersect: true,\r\n                    backgroundColor: 'rgba(0,0,0,0.8)',\r\n                    titleFontStyle: 'bold',\r\n                    titleSpacing: 2,\r\n                    titleMarginBottom: 6,\r\n                    titleFontColor: '#fff',\r\n                    titleAlign: 'left',\r\n                    bodySpacing: 2,\r\n                    bodyFontColor: '#fff',\r\n                    bodyAlign: 'left',\r\n                    footerFontStyle: 'bold',\r\n                    footerSpacing: 2,\r\n                    footerMarginTop: 6,\r\n                    footerFontColor: '#fff',\r\n                    footerAlign: 'left',\r\n                    yPadding: 6,\r\n                    xPadding: 6,\r\n                    caretPadding: 2,\r\n                    caretSize: 5,\r\n                    cornerRadius: 6,\r\n                    multiKeyBackground: '#fff',\r\n                    displayColors: true,\r\n                    borderColor: 'rgba(0,0,0,0)',\r\n                    borderWidth: 0,\r\n                    callbacks: {\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeTitle: helpers.noop,\r\n                        title: function(tooltipItems, data) {\r\n                            // Pick first xLabel for now\r\n                            var title = '';\r\n                            var labels = data.labels;\r\n                            var labelCount = labels ? labels.length : 0;\r\n\r\n                            if (tooltipItems.length > 0) {\r\n                                var item = tooltipItems[0];\r\n\r\n                                if (item.xLabel) {\r\n                                    title = item.xLabel;\r\n                                } else if (labelCount > 0 && item.index < labelCount) {\r\n                                    title = labels[item.index];\r\n                                }\r\n                            }\r\n\r\n                            return title;\r\n                        },\r\n                        afterTitle: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeBody: helpers.noop,\r\n\r\n                        // Args are: (tooltipItem, data)\r\n                        beforeLabel: helpers.noop,\r\n                        label: function(tooltipItem, data) {\r\n                            var label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\r\n                            if (label) {\r\n                                label += ': ';\r\n                            }\r\n                            label += tooltipItem.yLabel;\r\n                            return label;\r\n                        },\r\n                        labelColor: function(tooltipItem, chart) {\r\n                            var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n                            var activeElement = meta.data[tooltipItem.index];\r\n                            var view = activeElement._view;\r\n                            return {\r\n                                borderColor: view.borderColor,\r\n                                backgroundColor: view.backgroundColor\r\n                            };\r\n                        },\r\n                        labelTextColor: function() {\r\n                            return this._options.bodyFontColor;\r\n                        },\r\n                        afterLabel: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        afterBody: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeFooter: helpers.noop,\r\n                        footer: helpers.noop,\r\n                        afterFooter: helpers.noop\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                /**\r\n                   * Helper method to merge the opacity into a color\r\n                   */\r\n                function mergeOpacity(colorString, opacity) {\r\n                    var color = helpers.color(colorString);\r\n                    return color.alpha(opacity * color.alpha()).rgbaString();\r\n                }\r\n\r\n                // Helper to push or concat based on if the 2nd parameter is an array or not\r\n                function pushOrConcat(base, toPush) {\r\n                    if (toPush) {\r\n                        if (helpers.isArray(toPush)) {\r\n                            // base = base.concat(toPush);\r\n                            Array.prototype.push.apply(base, toPush);\r\n                        } else {\r\n                            base.push(toPush);\r\n                        }\r\n                    }\r\n\r\n                    return base;\r\n                }\r\n\r\n                // Private helper to create a tooltip item model\r\n                // @param element : the chart element (point, arc, bar) to create the tooltip item for\r\n                // @return : new tooltip item\r\n                function createTooltipItem(element) {\r\n                    var xScale = element._xScale;\r\n                    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\r\n                    var index = element._index;\r\n                    var datasetIndex = element._datasetIndex;\r\n\r\n                    return {\r\n                        xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\r\n                        yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\r\n                        index: index,\r\n                        datasetIndex: datasetIndex,\r\n                        x: element._model.x,\r\n                        y: element._model.y\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Helper to get the reset model for the tooltip\r\n                 * @param tooltipOpts {Object} the tooltip options\r\n                 */\r\n                function getBaseModel(tooltipOpts) {\r\n                    var globalDefaults = defaults.global;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n\r\n                    return {\r\n                        // Positioning\r\n                        xPadding: tooltipOpts.xPadding,\r\n                        yPadding: tooltipOpts.yPadding,\r\n                        xAlign: tooltipOpts.xAlign,\r\n                        yAlign: tooltipOpts.yAlign,\r\n\r\n                        // Body\r\n                        bodyFontColor: tooltipOpts.bodyFontColor,\r\n                        _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\r\n                        _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\r\n                        _bodyAlign: tooltipOpts.bodyAlign,\r\n                        bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\r\n                        bodySpacing: tooltipOpts.bodySpacing,\r\n\r\n                        // Title\r\n                        titleFontColor: tooltipOpts.titleFontColor,\r\n                        _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\r\n                        _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\r\n                        titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\r\n                        _titleAlign: tooltipOpts.titleAlign,\r\n                        titleSpacing: tooltipOpts.titleSpacing,\r\n                        titleMarginBottom: tooltipOpts.titleMarginBottom,\r\n\r\n                        // Footer\r\n                        footerFontColor: tooltipOpts.footerFontColor,\r\n                        _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\r\n                        _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\r\n                        footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\r\n                        _footerAlign: tooltipOpts.footerAlign,\r\n                        footerSpacing: tooltipOpts.footerSpacing,\r\n                        footerMarginTop: tooltipOpts.footerMarginTop,\r\n\r\n                        // Appearance\r\n                        caretSize: tooltipOpts.caretSize,\r\n                        cornerRadius: tooltipOpts.cornerRadius,\r\n                        backgroundColor: tooltipOpts.backgroundColor,\r\n                        opacity: 0,\r\n                        legendColorBackground: tooltipOpts.multiKeyBackground,\r\n                        displayColors: tooltipOpts.displayColors,\r\n                        borderColor: tooltipOpts.borderColor,\r\n                        borderWidth: tooltipOpts.borderWidth\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Get the size of the tooltip\r\n                 */\r\n                function getTooltipSize(tooltip, model) {\r\n                    var ctx = tooltip._chart.ctx;\r\n\r\n                    var height = model.yPadding * 2; // Tooltip Padding\r\n                    var width = 0;\r\n\r\n                    // Count of all lines in the body\r\n                    var body = model.body;\r\n                    var combinedBodyLength = body.reduce(function(count, bodyItem) {\r\n                        return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\r\n                    }, 0);\r\n                    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\r\n\r\n                    var titleLineCount = model.title.length;\r\n                    var footerLineCount = model.footer.length;\r\n                    var titleFontSize = model.titleFontSize;\r\n                    var bodyFontSize = model.bodyFontSize;\r\n                    var footerFontSize = model.footerFontSize;\r\n\r\n                    height += titleLineCount * titleFontSize; // Title Lines\r\n                    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\r\n                    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\r\n                    height += combinedBodyLength * bodyFontSize; // Body Lines\r\n                    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\r\n                    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\r\n                    height += footerLineCount * (footerFontSize); // Footer Lines\r\n                    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\r\n\r\n                    // Title width\r\n                    var widthPadding = 0;\r\n                    var maxLineWidth = function(line) {\r\n                        width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n                    };\r\n\r\n                    ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\r\n                    helpers.each(model.title, maxLineWidth);\r\n\r\n                    // Body width\r\n                    ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\r\n                    helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\r\n\r\n                    // Body lines may include some extra width due to the color box\r\n                    widthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\r\n                    helpers.each(body, function(bodyItem) {\r\n                        helpers.each(bodyItem.before, maxLineWidth);\r\n                        helpers.each(bodyItem.lines, maxLineWidth);\r\n                        helpers.each(bodyItem.after, maxLineWidth);\r\n                    });\r\n\r\n                    // Reset back to 0\r\n                    widthPadding = 0;\r\n\r\n                    // Footer width\r\n                    ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\r\n                    helpers.each(model.footer, maxLineWidth);\r\n\r\n                    // Add padding\r\n                    width += 2 * model.xPadding;\r\n\r\n                    return {\r\n                        width: width,\r\n                        height: height\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Helper to get the alignment of a tooltip given the size\r\n                 */\r\n                function determineAlignment(tooltip, size) {\r\n                    var model = tooltip._model;\r\n                    var chart = tooltip._chart;\r\n                    var chartArea = tooltip._chart.chartArea;\r\n                    var xAlign = 'center';\r\n                    var yAlign = 'center';\r\n\r\n                    if (model.y < size.height) {\r\n                        yAlign = 'top';\r\n                    } else if (model.y > (chart.height - size.height)) {\r\n                        yAlign = 'bottom';\r\n                    }\r\n\r\n                    var lf, rf; // functions to determine left, right alignment\r\n                    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\r\n                    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\r\n                    var midX = (chartArea.left + chartArea.right) / 2;\r\n                    var midY = (chartArea.top + chartArea.bottom) / 2;\r\n\r\n                    if (yAlign === 'center') {\r\n                        lf = function(x) {\r\n                            return x <= midX;\r\n                        };\r\n                        rf = function(x) {\r\n                            return x > midX;\r\n                        };\r\n                    } else {\r\n                        lf = function(x) {\r\n                            return x <= (size.width / 2);\r\n                        };\r\n                        rf = function(x) {\r\n                            return x >= (chart.width - (size.width / 2));\r\n                        };\r\n                    }\r\n\r\n                    olf = function(x) {\r\n                        return x + size.width + model.caretSize + model.caretPadding > chart.width;\r\n                    };\r\n                    orf = function(x) {\r\n                        return x - size.width - model.caretSize - model.caretPadding < 0;\r\n                    };\r\n                    yf = function(y) {\r\n                        return y <= midY ? 'top' : 'bottom';\r\n                    };\r\n\r\n                    if (lf(model.x)) {\r\n                        xAlign = 'left';\r\n\r\n                        // Is tooltip too wide and goes over the right side of the chart.?\r\n                        if (olf(model.x)) {\r\n                            xAlign = 'center';\r\n                            yAlign = yf(model.y);\r\n                        }\r\n                    } else if (rf(model.x)) {\r\n                        xAlign = 'right';\r\n\r\n                        // Is tooltip too wide and goes outside left edge of canvas?\r\n                        if (orf(model.x)) {\r\n                            xAlign = 'center';\r\n                            yAlign = yf(model.y);\r\n                        }\r\n                    }\r\n\r\n                    var opts = tooltip._options;\r\n                    return {\r\n                        xAlign: opts.xAlign ? opts.xAlign : xAlign,\r\n                        yAlign: opts.yAlign ? opts.yAlign : yAlign\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\r\n                 */\r\n                function getBackgroundPoint(vm, size, alignment, chart) {\r\n                    // Background Position\r\n                    var x = vm.x;\r\n                    var y = vm.y;\r\n\r\n                    var caretSize = vm.caretSize;\r\n                    var caretPadding = vm.caretPadding;\r\n                    var cornerRadius = vm.cornerRadius;\r\n                    var xAlign = alignment.xAlign;\r\n                    var yAlign = alignment.yAlign;\r\n                    var paddingAndSize = caretSize + caretPadding;\r\n                    var radiusAndPadding = cornerRadius + caretPadding;\r\n\r\n                    if (xAlign === 'right') {\r\n                        x -= size.width;\r\n                    } else if (xAlign === 'center') {\r\n                        x -= (size.width / 2);\r\n                        if (x + size.width > chart.width) {\r\n                            x = chart.width - size.width;\r\n                        }\r\n                        if (x < 0) {\r\n                            x = 0;\r\n                        }\r\n                    }\r\n\r\n                    if (yAlign === 'top') {\r\n                        y += paddingAndSize;\r\n                    } else if (yAlign === 'bottom') {\r\n                        y -= size.height + paddingAndSize;\r\n                    } else {\r\n                        y -= (size.height / 2);\r\n                    }\r\n\r\n                    if (yAlign === 'center') {\r\n                        if (xAlign === 'left') {\r\n                            x += paddingAndSize;\r\n                        } else if (xAlign === 'right') {\r\n                            x -= paddingAndSize;\r\n                        }\r\n                    } else if (xAlign === 'left') {\r\n                        x -= radiusAndPadding;\r\n                    } else if (xAlign === 'right') {\r\n                        x += radiusAndPadding;\r\n                    }\r\n\r\n                    return {\r\n                        x: x,\r\n                        y: y\r\n                    };\r\n                }\r\n\r\n                Chart.Tooltip = Element.extend({\r\n                    initialize: function() {\r\n                        this._model = getBaseModel(this._options);\r\n                        this._lastActive = [];\r\n                    },\r\n\r\n                    // Get the title\r\n                    // Args are: (tooltipItem, data)\r\n                    getTitle: function() {\r\n                        var me = this;\r\n                        var opts = me._options;\r\n                        var callbacks = opts.callbacks;\r\n\r\n                        var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\r\n                        var title = callbacks.title.apply(me, arguments);\r\n                        var afterTitle = callbacks.afterTitle.apply(me, arguments);\r\n\r\n                        var lines = [];\r\n                        lines = pushOrConcat(lines, beforeTitle);\r\n                        lines = pushOrConcat(lines, title);\r\n                        lines = pushOrConcat(lines, afterTitle);\r\n\r\n                        return lines;\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getBeforeBody: function() {\r\n                        var lines = this._options.callbacks.beforeBody.apply(this, arguments);\r\n                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getBody: function(tooltipItems, data) {\r\n                        var me = this;\r\n                        var callbacks = me._options.callbacks;\r\n                        var bodyItems = [];\r\n\r\n                        helpers.each(tooltipItems, function(tooltipItem) {\r\n                            var bodyItem = {\r\n                                before: [],\r\n                                lines: [],\r\n                                after: []\r\n                            };\r\n                            pushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\r\n                            pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\r\n                            pushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\r\n\r\n                            bodyItems.push(bodyItem);\r\n                        });\r\n\r\n                        return bodyItems;\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getAfterBody: function() {\r\n                        var lines = this._options.callbacks.afterBody.apply(this, arguments);\r\n                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n                    },\r\n\r\n                    // Get the footer and beforeFooter and afterFooter lines\r\n                    // Args are: (tooltipItem, data)\r\n                    getFooter: function() {\r\n                        var me = this;\r\n                        var callbacks = me._options.callbacks;\r\n\r\n                        var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\r\n                        var footer = callbacks.footer.apply(me, arguments);\r\n                        var afterFooter = callbacks.afterFooter.apply(me, arguments);\r\n\r\n                        var lines = [];\r\n                        lines = pushOrConcat(lines, beforeFooter);\r\n                        lines = pushOrConcat(lines, footer);\r\n                        lines = pushOrConcat(lines, afterFooter);\r\n\r\n                        return lines;\r\n                    },\r\n\r\n                    update: function(changed) {\r\n                        var me = this;\r\n                        var opts = me._options;\r\n\r\n                        // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\r\n                        // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\r\n                        // which breaks any animations.\r\n                        var existingModel = me._model;\r\n                        var model = me._model = getBaseModel(opts);\r\n                        var active = me._active;\r\n\r\n                        var data = me._data;\r\n\r\n                        // In the case where active.length === 0 we need to keep these at existing values for good animations\r\n                        var alignment = {\r\n                            xAlign: existingModel.xAlign,\r\n                            yAlign: existingModel.yAlign\r\n                        };\r\n                        var backgroundPoint = {\r\n                            x: existingModel.x,\r\n                            y: existingModel.y\r\n                        };\r\n                        var tooltipSize = {\r\n                            width: existingModel.width,\r\n                            height: existingModel.height\r\n                        };\r\n                        var tooltipPosition = {\r\n                            x: existingModel.caretX,\r\n                            y: existingModel.caretY\r\n                        };\r\n\r\n                        var i, len;\r\n\r\n                        if (active.length) {\r\n                            model.opacity = 1;\r\n\r\n                            var labelColors = [];\r\n                            var labelTextColors = [];\r\n                            tooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\r\n\r\n                            var tooltipItems = [];\r\n                            for (i = 0, len = active.length; i < len; ++i) {\r\n                                tooltipItems.push(createTooltipItem(active[i]));\r\n                            }\r\n\r\n                            // If the user provided a filter function, use it to modify the tooltip items\r\n                            if (opts.filter) {\r\n                                tooltipItems = tooltipItems.filter(function(a) {\r\n                                    return opts.filter(a, data);\r\n                                });\r\n                            }\r\n\r\n                            // If the user provided a sorting function, use it to modify the tooltip items\r\n                            if (opts.itemSort) {\r\n                                tooltipItems = tooltipItems.sort(function(a, b) {\r\n                                    return opts.itemSort(a, b, data);\r\n                                });\r\n                            }\r\n\r\n                            // Determine colors for boxes\r\n                            helpers.each(tooltipItems, function(tooltipItem) {\r\n                                labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\r\n                                labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\r\n                            });\r\n\r\n                            // Build the Text Lines\r\n                            model.title = me.getTitle(tooltipItems, data);\r\n                            model.beforeBody = me.getBeforeBody(tooltipItems, data);\r\n                            model.body = me.getBody(tooltipItems, data);\r\n                            model.afterBody = me.getAfterBody(tooltipItems, data);\r\n                            model.footer = me.getFooter(tooltipItems, data);\r\n\r\n                            // Initial positioning and colors\r\n                            model.x = Math.round(tooltipPosition.x);\r\n                            model.y = Math.round(tooltipPosition.y);\r\n                            model.caretPadding = opts.caretPadding;\r\n                            model.labelColors = labelColors;\r\n                            model.labelTextColors = labelTextColors;\r\n\r\n                            // data points\r\n                            model.dataPoints = tooltipItems;\r\n\r\n                            // We need to determine alignment of the tooltip\r\n                            tooltipSize = getTooltipSize(this, model);\r\n                            alignment = determineAlignment(this, tooltipSize);\r\n                            // Final Size and Position\r\n                            backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\r\n                        } else {\r\n                            model.opacity = 0;\r\n                        }\r\n\r\n                        model.xAlign = alignment.xAlign;\r\n                        model.yAlign = alignment.yAlign;\r\n                        model.x = backgroundPoint.x;\r\n                        model.y = backgroundPoint.y;\r\n                        model.width = tooltipSize.width;\r\n                        model.height = tooltipSize.height;\r\n\r\n                        // Point where the caret on the tooltip points to\r\n                        model.caretX = tooltipPosition.x;\r\n                        model.caretY = tooltipPosition.y;\r\n\r\n                        me._model = model;\r\n\r\n                        if (changed && opts.custom) {\r\n                            opts.custom.call(me, model);\r\n                        }\r\n\r\n                        return me;\r\n                    },\r\n                    drawCaret: function(tooltipPoint, size) {\r\n                        var ctx = this._chart.ctx;\r\n                        var vm = this._view;\r\n                        var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\r\n\r\n                        ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n                        ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n                        ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n                    },\r\n                    getCaretPosition: function(tooltipPoint, size, vm) {\r\n                        var x1, x2, x3, y1, y2, y3;\r\n                        var caretSize = vm.caretSize;\r\n                        var cornerRadius = vm.cornerRadius;\r\n                        var xAlign = vm.xAlign;\r\n                        var yAlign = vm.yAlign;\r\n                        var ptX = tooltipPoint.x;\r\n                        var ptY = tooltipPoint.y;\r\n                        var width = size.width;\r\n                        var height = size.height;\r\n\r\n                        if (yAlign === 'center') {\r\n                            y2 = ptY + (height / 2);\r\n\r\n                            if (xAlign === 'left') {\r\n                                x1 = ptX;\r\n                                x2 = x1 - caretSize;\r\n                                x3 = x1;\r\n\r\n                                y1 = y2 + caretSize;\r\n                                y3 = y2 - caretSize;\r\n                            } else {\r\n                                x1 = ptX + width;\r\n                                x2 = x1 + caretSize;\r\n                                x3 = x1;\r\n\r\n                                y1 = y2 - caretSize;\r\n                                y3 = y2 + caretSize;\r\n                            }\r\n                        } else {\r\n                            if (xAlign === 'left') {\r\n                                x2 = ptX + cornerRadius + (caretSize);\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            } else if (xAlign === 'right') {\r\n                                x2 = ptX + width - cornerRadius - caretSize;\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            } else {\r\n                                x2 = vm.caretX;\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            }\r\n                            if (yAlign === 'top') {\r\n                                y1 = ptY;\r\n                                y2 = y1 - caretSize;\r\n                                y3 = y1;\r\n                            } else {\r\n                                y1 = ptY + height;\r\n                                y2 = y1 + caretSize;\r\n                                y3 = y1;\r\n                                // invert drawing order\r\n                                var tmp = x3;\r\n                                x3 = x1;\r\n                                x1 = tmp;\r\n                            }\r\n                        }\r\n                        return { x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3 };\r\n                    },\r\n                    drawTitle: function(pt, vm, ctx, opacity) {\r\n                        var title = vm.title;\r\n\r\n                        if (title.length) {\r\n                            ctx.textAlign = vm._titleAlign;\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            var titleFontSize = vm.titleFontSize;\r\n                            var titleSpacing = vm.titleSpacing;\r\n\r\n                            ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\r\n                            ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\r\n                            var i, len;\r\n                            for (i = 0, len = title.length; i < len; ++i) {\r\n                                ctx.fillText(title[i], pt.x, pt.y);\r\n                                pt.y += titleFontSize + titleSpacing; // Line Height and spacing\r\n\r\n                                if (i + 1 === title.length) {\r\n                                    pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    drawBody: function(pt, vm, ctx, opacity) {\r\n                        var bodyFontSize = vm.bodyFontSize;\r\n                        var bodySpacing = vm.bodySpacing;\r\n                        var body = vm.body;\r\n\r\n                        ctx.textAlign = vm._bodyAlign;\r\n                        ctx.textBaseline = 'top';\r\n                        ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\r\n                        // Before Body\r\n                        var xLinePadding = 0;\r\n                        var fillLineOfText = function(line) {\r\n                            ctx.fillText(line, pt.x + xLinePadding, pt.y);\r\n                            pt.y += bodyFontSize + bodySpacing;\r\n                        };\r\n\r\n                        // Before body lines\r\n                        ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\r\n                        helpers.each(vm.beforeBody, fillLineOfText);\r\n\r\n                        var drawColorBoxes = vm.displayColors;\r\n                        xLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\r\n\r\n                        // Draw body lines now\r\n                        helpers.each(body, function(bodyItem, i) {\r\n                            var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\r\n                            ctx.fillStyle = textColor;\r\n                            helpers.each(bodyItem.before, fillLineOfText);\r\n\r\n                            helpers.each(bodyItem.lines, function(line) {\r\n                                // Draw Legend-like boxes if needed\r\n                                if (drawColorBoxes) {\r\n                                    // Fill a white rect so that colours merge nicely if the opacity is < 1\r\n                                    ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\r\n                                    ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n                                    // Border\r\n                                    ctx.lineWidth = 1;\r\n                                    ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\r\n                                    ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n                                    // Inner square\r\n                                    ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\r\n                                    ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\r\n                                    ctx.fillStyle = textColor;\r\n                                }\r\n\r\n                                fillLineOfText(line);\r\n                            });\r\n\r\n                            helpers.each(bodyItem.after, fillLineOfText);\r\n                        });\r\n\r\n                        // Reset back to 0 for after body\r\n                        xLinePadding = 0;\r\n\r\n                        // After body lines\r\n                        helpers.each(vm.afterBody, fillLineOfText);\r\n                        pt.y -= bodySpacing; // Remove last body spacing\r\n                    },\r\n                    drawFooter: function(pt, vm, ctx, opacity) {\r\n                        var footer = vm.footer;\r\n\r\n                        if (footer.length) {\r\n                            pt.y += vm.footerMarginTop;\r\n\r\n                            ctx.textAlign = vm._footerAlign;\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\r\n                            ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\r\n                            helpers.each(footer, function(line) {\r\n                                ctx.fillText(line, pt.x, pt.y);\r\n                                pt.y += vm.footerFontSize + vm.footerSpacing;\r\n                            });\r\n                        }\r\n                    },\r\n                    drawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\r\n                        ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\r\n                        ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\r\n                        ctx.lineWidth = vm.borderWidth;\r\n                        var xAlign = vm.xAlign;\r\n                        var yAlign = vm.yAlign;\r\n                        var x = pt.x;\r\n                        var y = pt.y;\r\n                        var width = tooltipSize.width;\r\n                        var height = tooltipSize.height;\r\n                        var radius = vm.cornerRadius;\r\n\r\n                        ctx.beginPath();\r\n                        ctx.moveTo(x + radius, y);\r\n                        if (yAlign === 'top') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + width - radius, y);\r\n                        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n                        if (yAlign === 'center' && xAlign === 'right') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + width, y + height - radius);\r\n                        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n                        if (yAlign === 'bottom') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + radius, y + height);\r\n                        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n                        if (yAlign === 'center' && xAlign === 'left') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x, y + radius);\r\n                        ctx.quadraticCurveTo(x, y, x + radius, y);\r\n                        ctx.closePath();\r\n\r\n                        ctx.fill();\r\n\r\n                        if (vm.borderWidth > 0) {\r\n                            ctx.stroke();\r\n                        }\r\n                    },\r\n                    draw: function() {\r\n                        var ctx = this._chart.ctx;\r\n                        var vm = this._view;\r\n\r\n                        if (vm.opacity === 0) {\r\n                            return;\r\n                        }\r\n\r\n                        var tooltipSize = {\r\n                            width: vm.width,\r\n                            height: vm.height\r\n                        };\r\n                        var pt = {\r\n                            x: vm.x,\r\n                            y: vm.y\r\n                        };\r\n\r\n                        // IE11/Edge does not like very small opacities, so snap to 0\r\n                        var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\r\n\r\n                        // Truthy/falsey value for empty tooltip\r\n                        var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\r\n\r\n                        if (this._options.enabled && hasTooltipContent) {\r\n                            // Draw Background\r\n                            this.drawBackground(pt, vm, ctx, tooltipSize, opacity);\r\n\r\n                            // Draw Title, Body, and Footer\r\n                            pt.x += vm.xPadding;\r\n                            pt.y += vm.yPadding;\r\n\r\n                            // Titles\r\n                            this.drawTitle(pt, vm, ctx, opacity);\r\n\r\n                            // Body\r\n                            this.drawBody(pt, vm, ctx, opacity);\r\n\r\n                            // Footer\r\n                            this.drawFooter(pt, vm, ctx, opacity);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Handle an event\r\n                     * @private\r\n                     * @param {IEvent} event - The event to handle\r\n                     * @returns {Boolean} true if the tooltip changed\r\n                     */\r\n                    handleEvent: function(e) {\r\n                        var me = this;\r\n                        var options = me._options;\r\n                        var changed = false;\r\n\r\n                        me._lastActive = me._lastActive || [];\r\n\r\n                        // Find Active Elements for tooltips\r\n                        if (e.type === 'mouseout') {\r\n                            me._active = [];\r\n                        } else {\r\n                            me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\r\n                        }\r\n\r\n                        // Remember Last Actives\r\n                        changed = !helpers.arrayEquals(me._active, me._lastActive);\r\n\r\n                        // Only handle target event on tooltip change\r\n                        if (changed) {\r\n                            me._lastActive = me._active;\r\n\r\n                            if (options.enabled || options.custom) {\r\n                                me._eventPosition = {\r\n                                    x: e.x,\r\n                                    y: e.y\r\n                                };\r\n\r\n                                me.update(true);\r\n                                me.pivot();\r\n                            }\r\n                        }\r\n\r\n                        return changed;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * @namespace Chart.Tooltip.positioners\r\n                 */\r\n                Chart.Tooltip.positioners = {\r\n                    /**\r\n                     * Average mode places the tooltip at the average position of the elements shown\r\n                     * @function Chart.Tooltip.positioners.average\r\n                     * @param elements {ChartElement[]} the elements being displayed in the tooltip\r\n                     * @returns {Point} tooltip position\r\n                     */\r\n                    average: function(elements) {\r\n                        if (!elements.length) {\r\n                            return false;\r\n                        }\r\n\r\n                        var i, len;\r\n                        var x = 0;\r\n                        var y = 0;\r\n                        var count = 0;\r\n\r\n                        for (i = 0, len = elements.length; i < len; ++i) {\r\n                            var el = elements[i];\r\n                            if (el && el.hasValue()) {\r\n                                var pos = el.tooltipPosition();\r\n                                x += pos.x;\r\n                                y += pos.y;\r\n                                ++count;\r\n                            }\r\n                        }\r\n\r\n                        return {\r\n                            x: Math.round(x / count),\r\n                            y: Math.round(y / count)\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Gets the tooltip position nearest of the item nearest to the event position\r\n                     * @function Chart.Tooltip.positioners.nearest\r\n                     * @param elements {Chart.Element[]} the tooltip elements\r\n                     * @param eventPosition {Point} the position of the event in canvas coordinates\r\n                     * @returns {Point} the tooltip position\r\n                     */\r\n                    nearest: function(elements, eventPosition) {\r\n                        var x = eventPosition.x;\r\n                        var y = eventPosition.y;\r\n                        var minDistance = Number.POSITIVE_INFINITY;\r\n                        var i, len, nearestElement;\r\n\r\n                        for (i = 0, len = elements.length; i < len; ++i) {\r\n                            var el = elements[i];\r\n                            if (el && el.hasValue()) {\r\n                                var center = el.getCenterPoint();\r\n                                var d = helpers.distanceBetweenPoints(eventPosition, center);\r\n\r\n                                if (d < minDistance) {\r\n                                    minDistance = d;\r\n                                    nearestElement = el;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (nearestElement) {\r\n                            var tp = nearestElement.tooltipPosition();\r\n                            x = tp.x;\r\n                            y = tp.y;\r\n                        }\r\n\r\n                        return {\r\n                            x: x,\r\n                            y: y\r\n                        };\r\n                    }\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 27: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    arc: {\r\n                        backgroundColor: defaults.global.defaultColor,\r\n                        borderColor: '#fff',\r\n                        borderWidth: 2\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = Element.extend({\r\n                inLabelRange: function(mouseX) {\r\n                    var vm = this._view;\r\n\r\n                    if (vm) {\r\n                        return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                inRange: function(chartX, chartY) {\r\n                    var vm = this._view;\r\n\r\n                    if (vm) {\r\n                        var pointRelativePosition = helpers.getAngleFromPoint(vm, { x: chartX, y: chartY });\r\n                        var angle = pointRelativePosition.angle;\r\n                        var distance = pointRelativePosition.distance;\r\n\r\n                        // Sanitise angle range\r\n                        var startAngle = vm.startAngle;\r\n                        var endAngle = vm.endAngle;\r\n                        while (endAngle < startAngle) {\r\n                            endAngle += 2.0 * Math.PI;\r\n                        }\r\n                        while (angle > endAngle) {\r\n                            angle -= 2.0 * Math.PI;\r\n                        }\r\n                        while (angle < startAngle) {\r\n                            angle += 2.0 * Math.PI;\r\n                        }\r\n\r\n                        // Check if within the range of the open/close angle\r\n                        var betweenAngles = (angle >= startAngle && angle <= endAngle);\r\n                        var withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\r\n\r\n                        return (betweenAngles && withinRadius);\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\r\n                    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\r\n                    return {\r\n                        x: vm.x + Math.cos(halfAngle) * halfRadius,\r\n                        y: vm.y + Math.sin(halfAngle) * halfRadius\r\n                    };\r\n                },\r\n\r\n                getArea: function() {\r\n                    var vm = this._view;\r\n                    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\r\n                    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\r\n\r\n                    return {\r\n                        x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\r\n                        y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\r\n                    };\r\n                },\r\n\r\n                draw: function() {\r\n                    var ctx = this._chart.ctx;\r\n                    var vm = this._view;\r\n                    var sA = vm.startAngle;\r\n                    var eA = vm.endAngle;\r\n\r\n                    ctx.beginPath();\r\n\r\n                    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\r\n                    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\r\n\r\n                    ctx.closePath();\r\n                    ctx.strokeStyle = vm.borderColor;\r\n                    ctx.lineWidth = vm.borderWidth;\r\n\r\n                    ctx.fillStyle = vm.backgroundColor;\r\n\r\n                    ctx.fill();\r\n                    ctx.lineJoin = 'bevel';\r\n\r\n                    if (vm.borderWidth) {\r\n                        ctx.stroke();\r\n                    }\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 28: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            var globalDefaults = defaults.global;\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    line: {\r\n                        tension: 0.4,\r\n                        backgroundColor: globalDefaults.defaultColor,\r\n                        borderWidth: 3,\r\n                        borderColor: globalDefaults.defaultColor,\r\n                        borderCapStyle: 'butt',\r\n                        borderDash: [],\r\n                        borderDashOffset: 0.0,\r\n                        borderJoinStyle: 'miter',\r\n                        capBezierPoints: true,\r\n                        fill: true, // do we fill in the area between the line and its base axis\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = Element.extend({\r\n                draw: function() {\r\n                    var me = this;\r\n                    var vm = me._view;\r\n                    var ctx = me._chart.ctx;\r\n                    var spanGaps = vm.spanGaps;\r\n                    var points = me._children.slice(); // clone array\r\n                    var globalOptionLineElements = globalDefaults.elements.line;\r\n                    var lastDrawnIndex = -1;\r\n                    var index, current, previous, currentVM;\r\n\r\n                    // If we are looping, adding the first point again\r\n                    if (me._loop && points.length) {\r\n                        points.push(points[0]);\r\n                    }\r\n\r\n                    ctx.save();\r\n\r\n                    // Stroke Line Options\r\n                    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\r\n\r\n                    // IE 9 and 10 do not support line dash\r\n                    if (ctx.setLineDash) {\r\n                        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\r\n                    }\r\n\r\n                    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\r\n                    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\r\n                    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\r\n                    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\r\n\r\n                    // Stroke Line\r\n                    ctx.beginPath();\r\n                    lastDrawnIndex = -1;\r\n\r\n                    for (index = 0; index < points.length; ++index) {\r\n                        current = points[index];\r\n                        previous = helpers.previousItem(points, index);\r\n                        currentVM = current._view;\r\n\r\n                        // First point moves to it's starting position no matter what\r\n                        if (index === 0) {\r\n                            if (!currentVM.skip) {\r\n                                ctx.moveTo(currentVM.x, currentVM.y);\r\n                                lastDrawnIndex = index;\r\n                            }\r\n                        } else {\r\n                            previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\r\n\r\n                            if (!currentVM.skip) {\r\n                                if ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\r\n                                    // There was a gap and this is the first point after the gap\r\n                                    ctx.moveTo(currentVM.x, currentVM.y);\r\n                                } else {\r\n                                    // Line to next point\r\n                                    helpers.canvas.lineTo(ctx, previous._view, current._view);\r\n                                }\r\n                                lastDrawnIndex = index;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    ctx.stroke();\r\n                    ctx.restore();\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 29: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            var defaultColor = defaults.global.defaultColor;\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    point: {\r\n                        radius: 3,\r\n                        pointStyle: 'circle',\r\n                        backgroundColor: defaultColor,\r\n                        borderColor: defaultColor,\r\n                        borderWidth: 1,\r\n                        // Hover\r\n                        hitRadius: 1,\r\n                        hoverRadius: 4,\r\n                        hoverBorderWidth: 1\r\n                    }\r\n                }\r\n            });\r\n\r\n            function xRange(mouseX) {\r\n                var vm = this._view;\r\n                return vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\r\n            }\r\n\r\n            function yRange(mouseY) {\r\n                var vm = this._view;\r\n                return vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\r\n            }\r\n\r\n            module.exports = Element.extend({\r\n                inRange: function(mouseX, mouseY) {\r\n                    var vm = this._view;\r\n                    return vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\r\n                },\r\n\r\n                inLabelRange: xRange,\r\n                inXRange: xRange,\r\n                inYRange: yRange,\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y\r\n                    };\r\n                },\r\n\r\n                getArea: function() {\r\n                    return Math.PI * Math.pow(this._view.radius, 2);\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y,\r\n                        padding: vm.radius + vm.borderWidth\r\n                    };\r\n                },\r\n\r\n                draw: function(chartArea) {\r\n                    var vm = this._view;\r\n                    var model = this._model;\r\n                    var ctx = this._chart.ctx;\r\n                    var pointStyle = vm.pointStyle;\r\n                    var radius = vm.radius;\r\n                    var x = vm.x;\r\n                    var y = vm.y;\r\n                    var color = helpers.color;\r\n                    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\r\n                    var ratio = 0;\r\n\r\n                    if (vm.skip) {\r\n                        return;\r\n                    }\r\n\r\n                    ctx.strokeStyle = vm.borderColor || defaultColor;\r\n                    ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\r\n                    ctx.fillStyle = vm.backgroundColor || defaultColor;\r\n\r\n                    // Cliping for Points.\r\n                    // going out from inner charArea?\r\n                    if ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\r\n                        // Point fade out\r\n                        if (model.x < chartArea.left) {\r\n                            ratio = (x - model.x) / (chartArea.left - model.x);\r\n                        } else if (chartArea.right * errMargin < model.x) {\r\n                            ratio = (model.x - x) / (model.x - chartArea.right);\r\n                        } else if (model.y < chartArea.top) {\r\n                            ratio = (y - model.y) / (chartArea.top - model.y);\r\n                        } else if (chartArea.bottom * errMargin < model.y) {\r\n                            ratio = (model.y - y) / (model.y - chartArea.bottom);\r\n                        }\r\n                        ratio = Math.round(ratio * 100) / 100;\r\n                        ctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\r\n                        ctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\r\n                    }\r\n\r\n                    helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 30: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    rectangle: {\r\n                        backgroundColor: defaults.global.defaultColor,\r\n                        borderColor: defaults.global.defaultColor,\r\n                        borderSkipped: 'bottom',\r\n                        borderWidth: 0\r\n                    }\r\n                }\r\n            });\r\n\r\n            function isVertical(bar) {\r\n                return bar._view.width !== undefined;\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the bounds of the bar regardless of the orientation\r\n             * @param bar {Chart.Element.Rectangle} the bar\r\n             * @return {Bounds} bounds of the bar\r\n             * @private\r\n             */\r\n            function getBarBounds(bar) {\r\n                var vm = bar._view;\r\n                var x1, x2, y1, y2;\r\n\r\n                if (isVertical(bar)) {\r\n                    // vertical\r\n                    var halfWidth = vm.width / 2;\r\n                    x1 = vm.x - halfWidth;\r\n                    x2 = vm.x + halfWidth;\r\n                    y1 = Math.min(vm.y, vm.base);\r\n                    y2 = Math.max(vm.y, vm.base);\r\n                } else {\r\n                    // horizontal bar\r\n                    var halfHeight = vm.height / 2;\r\n                    x1 = Math.min(vm.x, vm.base);\r\n                    x2 = Math.max(vm.x, vm.base);\r\n                    y1 = vm.y - halfHeight;\r\n                    y2 = vm.y + halfHeight;\r\n                }\r\n\r\n                return {\r\n                    left: x1,\r\n                    top: y1,\r\n                    right: x2,\r\n                    bottom: y2\r\n                };\r\n            }\r\n\r\n            module.exports = Element.extend({\r\n                draw: function() {\r\n                    var ctx = this._chart.ctx;\r\n                    var vm = this._view;\r\n                    var left, right, top, bottom, signX, signY, borderSkipped;\r\n                    var borderWidth = vm.borderWidth;\r\n\r\n                    if (!vm.horizontal) {\r\n                        // bar\r\n                        left = vm.x - vm.width / 2;\r\n                        right = vm.x + vm.width / 2;\r\n                        top = vm.y;\r\n                        bottom = vm.base;\r\n                        signX = 1;\r\n                        signY = bottom > top ? 1 : -1;\r\n                        borderSkipped = vm.borderSkipped || 'bottom';\r\n                    } else {\r\n                        // horizontal bar\r\n                        left = vm.base;\r\n                        right = vm.x;\r\n                        top = vm.y - vm.height / 2;\r\n                        bottom = vm.y + vm.height / 2;\r\n                        signX = right > left ? 1 : -1;\r\n                        signY = 1;\r\n                        borderSkipped = vm.borderSkipped || 'left';\r\n                    }\r\n\r\n                    // Canvas doesn't allow us to stroke inside the width so we can\r\n                    // adjust the sizes to fit if we're setting a stroke on the line\r\n                    if (borderWidth) {\r\n                        // borderWidth shold be less than bar width and bar height.\r\n                        var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n                        borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n                        var halfStroke = borderWidth / 2;\r\n                        // Adjust borderWidth when bar top position is near vm.base(zero).\r\n                        var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n                        var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n                        var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n                        var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n                        // not become a vertical line?\r\n                        if (borderLeft !== borderRight) {\r\n                            top = borderTop;\r\n                            bottom = borderBottom;\r\n                        }\r\n                        // not become a horizontal line?\r\n                        if (borderTop !== borderBottom) {\r\n                            left = borderLeft;\r\n                            right = borderRight;\r\n                        }\r\n                    }\r\n\r\n                    ctx.beginPath();\r\n                    ctx.fillStyle = vm.backgroundColor;\r\n                    ctx.strokeStyle = vm.borderColor;\r\n                    ctx.lineWidth = borderWidth;\r\n\r\n                    // Corner points, from bottom-left to bottom-right clockwise\r\n                    // | 1 2 |\r\n                    // | 0 3 |\r\n                    var corners = [\r\n                        [left, bottom],\r\n                        [left, top],\r\n                        [right, top],\r\n                        [right, bottom]\r\n                    ];\r\n\r\n                    // Find first (starting) corner with fallback to 'bottom'\r\n                    var borders = ['bottom', 'left', 'top', 'right'];\r\n                    var startCorner = borders.indexOf(borderSkipped, 0);\r\n                    if (startCorner === -1) {\r\n                        startCorner = 0;\r\n                    }\r\n\r\n                    function cornerAt(index) {\r\n                        return corners[(startCorner + index) % 4];\r\n                    }\r\n\r\n                    // Draw rectangle from 'startCorner'\r\n                    var corner = cornerAt(0);\r\n                    ctx.moveTo(corner[0], corner[1]);\r\n\r\n                    for (var i = 1; i < 4; i++) {\r\n                        corner = cornerAt(i);\r\n                        ctx.lineTo(corner[0], corner[1]);\r\n                    }\r\n\r\n                    ctx.fill();\r\n                    if (borderWidth) {\r\n                        ctx.stroke();\r\n                    }\r\n                },\r\n\r\n                height: function() {\r\n                    var vm = this._view;\r\n                    return vm.base - vm.y;\r\n                },\r\n\r\n                inRange: function(mouseX, mouseY) {\r\n                    var inRange = false;\r\n\r\n                    if (this._view) {\r\n                        var bounds = getBarBounds(this);\r\n                        inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                    }\r\n\r\n                    return inRange;\r\n                },\r\n\r\n                inLabelRange: function(mouseX, mouseY) {\r\n                    var me = this;\r\n                    if (!me._view) {\r\n                        return false;\r\n                    }\r\n\r\n                    var inRange = false;\r\n                    var bounds = getBarBounds(me);\r\n\r\n                    if (isVertical(me)) {\r\n                        inRange = mouseX >= bounds.left && mouseX <= bounds.right;\r\n                    } else {\r\n                        inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                    }\r\n\r\n                    return inRange;\r\n                },\r\n\r\n                inXRange: function(mouseX) {\r\n                    var bounds = getBarBounds(this);\r\n                    return mouseX >= bounds.left && mouseX <= bounds.right;\r\n                },\r\n\r\n                inYRange: function(mouseY) {\r\n                    var bounds = getBarBounds(this);\r\n                    return mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                },\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    var x, y;\r\n                    if (isVertical(this)) {\r\n                        x = vm.x;\r\n                        y = (vm.y + vm.base) / 2;\r\n                    } else {\r\n                        x = (vm.x + vm.base) / 2;\r\n                        y = vm.y;\r\n                    }\r\n\r\n                    return { x: x, y: y };\r\n                },\r\n\r\n                getArea: function() {\r\n                    var vm = this._view;\r\n                    return vm.width * Math.abs(vm.y - vm.base);\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y\r\n                    };\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17 }], 31: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = {};\r\n            module.exports.Arc = require(27);\r\n            module.exports.Line = require(28);\r\n            module.exports.Point = require(29);\r\n            module.exports.Rectangle = require(30);\r\n        }, { \"27\": 27, \"28\": 28, \"29\": 29, \"30\": 30 }], 32: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * @namespace Chart.helpers.canvas\r\n             */\r\n            var exports = module.exports = {\r\n                /**\r\n                 * Clears the entire canvas associated to the given `chart`.\r\n                 * @param {Chart} chart - The chart for which to clear the canvas.\r\n                 */\r\n                clear: function(chart) {\r\n                    chart.ctx.clearRect(0, 0, chart.width, chart.height);\r\n                },\r\n\r\n                /**\r\n                 * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\r\n                 * given size (width, height) and the same `radius` for all corners.\r\n                 * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\r\n                 * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\r\n                 * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\r\n                 * @param {Number} width - The rectangle's width.\r\n                 * @param {Number} height - The rectangle's height.\r\n                 * @param {Number} radius - The rounded amount (in pixels) for the four corners.\r\n                 * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\r\n                 */\r\n                roundedRect: function(ctx, x, y, width, height, radius) {\r\n                    if (radius) {\r\n                        var rx = Math.min(radius, width / 2);\r\n                        var ry = Math.min(radius, height / 2);\r\n\r\n                        ctx.moveTo(x + rx, y);\r\n                        ctx.lineTo(x + width - rx, y);\r\n                        ctx.quadraticCurveTo(x + width, y, x + width, y + ry);\r\n                        ctx.lineTo(x + width, y + height - ry);\r\n                        ctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\r\n                        ctx.lineTo(x + rx, y + height);\r\n                        ctx.quadraticCurveTo(x, y + height, x, y + height - ry);\r\n                        ctx.lineTo(x, y + ry);\r\n                        ctx.quadraticCurveTo(x, y, x + rx, y);\r\n                    } else {\r\n                        ctx.rect(x, y, width, height);\r\n                    }\r\n                },\r\n\r\n                drawPoint: function(ctx, style, radius, x, y) {\r\n                    var type, edgeLength, xOffset, yOffset, height, size;\r\n\r\n                    if (style && typeof style === 'object') {\r\n                        type = style.toString();\r\n                        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n                            ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    if (isNaN(radius) || radius <= 0) {\r\n                        return;\r\n                    }\r\n\r\n                    switch (style) {\r\n                        // Default includes circle\r\n                        default:\r\n                            ctx.beginPath();\r\n                            ctx.arc(x, y, radius, 0, Math.PI * 2);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'triangle':\r\n                            ctx.beginPath();\r\n                            edgeLength = 3 * radius / Math.sqrt(3);\r\n                            height = edgeLength * Math.sqrt(3) / 2;\r\n                            ctx.moveTo(x - edgeLength / 2, y + height / 3);\r\n                            ctx.lineTo(x + edgeLength / 2, y + height / 3);\r\n                            ctx.lineTo(x, y - 2 * height / 3);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'rect':\r\n                            size = 1 / Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            ctx.fillRect(x - size, y - size, 2 * size, 2 * size);\r\n                            ctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\r\n                            break;\r\n                        case 'rectRounded':\r\n                            var offset = radius / Math.SQRT2;\r\n                            var leftX = x - offset;\r\n                            var topY = y - offset;\r\n                            var sideSize = Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'rectRot':\r\n                            size = 1 / Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x - size, y);\r\n                            ctx.lineTo(x, y + size);\r\n                            ctx.lineTo(x + size, y);\r\n                            ctx.lineTo(x, y - size);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'cross':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y + radius);\r\n                            ctx.lineTo(x, y - radius);\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'crossRot':\r\n                            ctx.beginPath();\r\n                            xOffset = Math.cos(Math.PI / 4) * radius;\r\n                            yOffset = Math.sin(Math.PI / 4) * radius;\r\n                            ctx.moveTo(x - xOffset, y - yOffset);\r\n                            ctx.lineTo(x + xOffset, y + yOffset);\r\n                            ctx.moveTo(x - xOffset, y + yOffset);\r\n                            ctx.lineTo(x + xOffset, y - yOffset);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'star':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y + radius);\r\n                            ctx.lineTo(x, y - radius);\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            xOffset = Math.cos(Math.PI / 4) * radius;\r\n                            yOffset = Math.sin(Math.PI / 4) * radius;\r\n                            ctx.moveTo(x - xOffset, y - yOffset);\r\n                            ctx.lineTo(x + xOffset, y + yOffset);\r\n                            ctx.moveTo(x - xOffset, y + yOffset);\r\n                            ctx.lineTo(x + xOffset, y - yOffset);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'line':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'dash':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                    }\r\n\r\n                    ctx.stroke();\r\n                },\r\n\r\n                clipArea: function(ctx, area) {\r\n                    ctx.save();\r\n                    ctx.beginPath();\r\n                    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\r\n                    ctx.clip();\r\n                },\r\n\r\n                unclipArea: function(ctx) {\r\n                    ctx.restore();\r\n                },\r\n\r\n                lineTo: function(ctx, previous, target, flip) {\r\n                    if (target.steppedLine) {\r\n                        if ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\r\n                            ctx.lineTo(previous.x, target.y);\r\n                        } else {\r\n                            ctx.lineTo(target.x, previous.y);\r\n                        }\r\n                        ctx.lineTo(target.x, target.y);\r\n                        return;\r\n                    }\r\n\r\n                    if (!target.tension) {\r\n                        ctx.lineTo(target.x, target.y);\r\n                        return;\r\n                    }\r\n\r\n                    ctx.bezierCurveTo(\r\n                        flip ? previous.controlPointPreviousX : previous.controlPointNextX,\r\n                        flip ? previous.controlPointPreviousY : previous.controlPointNextY,\r\n                        flip ? target.controlPointNextX : target.controlPointPreviousX,\r\n                        flip ? target.controlPointNextY : target.controlPointPreviousY,\r\n                        target.x,\r\n                        target.y);\r\n                }\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\r\n             * @namespace Chart.helpers.clear\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.clear = exports.clear;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\r\n             * @namespace Chart.helpers.drawRoundedRectangle\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.drawRoundedRectangle = function(ctx) {\r\n                ctx.beginPath();\r\n                exports.roundedRect.apply(exports, arguments);\r\n                ctx.closePath();\r\n            };\r\n        }, { \"33\": 33 }], 33: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            /**\r\n             * @namespace Chart.helpers\r\n             */\r\n            var helpers = {\r\n                /**\r\n                 * An empty function that can be used, for example, for optional callback.\r\n                 */\r\n                noop: function() { },\r\n\r\n                /**\r\n                 * Returns a unique id, sequentially generated from a global variable.\r\n                 * @returns {Number}\r\n                 * @function\r\n                 */\r\n                uid: (function() {\r\n                    var id = 0;\r\n                    return function() {\r\n                        return id++;\r\n                    };\r\n                }()),\r\n\r\n                /**\r\n                 * Returns true if `value` is neither null nor undefined, else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @since 2.7.0\r\n                 */\r\n                isNullOrUndef: function(value) {\r\n                    return value === null || typeof value === 'undefined';\r\n                },\r\n\r\n                /**\r\n                 * Returns true if `value` is an array, else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @function\r\n                 */\r\n                isArray: Array.isArray ? Array.isArray : function(value) {\r\n                    return Object.prototype.toString.call(value) === '[object Array]';\r\n                },\r\n\r\n                /**\r\n                 * Returns true if `value` is an object (excluding null), else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @since 2.7.0\r\n                 */\r\n                isObject: function(value) {\r\n                    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\r\n                },\r\n\r\n                /**\r\n                 * Returns `value` if defined, else returns `defaultValue`.\r\n                 * @param {*} value - The value to return if defined.\r\n                 * @param {*} defaultValue - The value to return if `value` is undefined.\r\n                 * @returns {*}\r\n                 */\r\n                valueOrDefault: function(value, defaultValue) {\r\n                    return typeof value === 'undefined' ? defaultValue : value;\r\n                },\r\n\r\n                /**\r\n                 * Returns value at the given `index` in array if defined, else returns `defaultValue`.\r\n                 * @param {Array} value - The array to lookup for value at `index`.\r\n                 * @param {Number} index - The index in `value` to lookup for value.\r\n                 * @param {*} defaultValue - The value to return if `value[index]` is undefined.\r\n                 * @returns {*}\r\n                 */\r\n                valueAtIndexOrDefault: function(value, index, defaultValue) {\r\n                    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\r\n                },\r\n\r\n                /**\r\n                 * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\r\n                 * value returned by `fn`. If `fn` is not a function, this method returns undefined.\r\n                 * @param {Function} fn - The function to call.\r\n                 * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\r\n                 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\r\n                 * @returns {*}\r\n                 */\r\n                callback: function(fn, args, thisArg) {\r\n                    if (fn && typeof fn.call === 'function') {\r\n                        return fn.apply(thisArg, args);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Note(SB) for performance sake, this method should only be used when loopable type\r\n                 * is unknown or in none intensive code (not called often and small loopable). Else\r\n                 * it's preferable to use a regular for() loop and save extra function calls.\r\n                 * @param {Object|Array} loopable - The object or array to be iterated.\r\n                 * @param {Function} fn - The function to call for each item.\r\n                 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\r\n                 * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\r\n                 */\r\n                each: function(loopable, fn, thisArg, reverse) {\r\n                    var i, len, keys;\r\n                    if (helpers.isArray(loopable)) {\r\n                        len = loopable.length;\r\n                        if (reverse) {\r\n                            for (i = len - 1; i >= 0; i--) {\r\n                                fn.call(thisArg, loopable[i], i);\r\n                            }\r\n                        } else {\r\n                            for (i = 0; i < len; i++) {\r\n                                fn.call(thisArg, loopable[i], i);\r\n                            }\r\n                        }\r\n                    } else if (helpers.isObject(loopable)) {\r\n                        keys = Object.keys(loopable);\r\n                        len = keys.length;\r\n                        for (i = 0; i < len; i++) {\r\n                            fn.call(thisArg, loopable[keys[i]], keys[i]);\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\r\n                 * @see http://stackoverflow.com/a/14853974\r\n                 * @param {Array} a0 - The array to compare\r\n                 * @param {Array} a1 - The array to compare\r\n                 * @returns {Boolean}\r\n                 */\r\n                arrayEquals: function(a0, a1) {\r\n                    var i, ilen, v0, v1;\r\n\r\n                    if (!a0 || !a1 || a0.length !== a1.length) {\r\n                        return false;\r\n                    }\r\n\r\n                    for (i = 0, ilen = a0.length; i < ilen; ++i) {\r\n                        v0 = a0[i];\r\n                        v1 = a1[i];\r\n\r\n                        if (v0 instanceof Array && v1 instanceof Array) {\r\n                            if (!helpers.arrayEquals(v0, v1)) {\r\n                                return false;\r\n                            }\r\n                        } else if (v0 !== v1) {\r\n                            // NOTE: two different object instances will never be equal: {x:20} != {x:20}\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                },\r\n\r\n                /**\r\n                 * Returns a deep copy of `source` without keeping references on objects and arrays.\r\n                 * @param {*} source - The value to clone.\r\n                 * @returns {*}\r\n                 */\r\n                clone: function(source) {\r\n                    if (helpers.isArray(source)) {\r\n                        return source.map(helpers.clone);\r\n                    }\r\n\r\n                    if (helpers.isObject(source)) {\r\n                        var target = {};\r\n                        var keys = Object.keys(source);\r\n                        var klen = keys.length;\r\n                        var k = 0;\r\n\r\n                        for (; k < klen; ++k) {\r\n                            target[keys[k]] = helpers.clone(source[keys[k]]);\r\n                        }\r\n\r\n                        return target;\r\n                    }\r\n\r\n                    return source;\r\n                },\r\n\r\n                /**\r\n                 * The default merger when Chart.helpers.merge is called without merger option.\r\n                 * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\r\n                 * @private\r\n                 */\r\n                _merger: function(key, target, source, options) {\r\n                    var tval = target[key];\r\n                    var sval = source[key];\r\n\r\n                    if (helpers.isObject(tval) && helpers.isObject(sval)) {\r\n                        helpers.merge(tval, sval, options);\r\n                    } else {\r\n                        target[key] = helpers.clone(sval);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Merges source[key] in target[key] only if target[key] is undefined.\r\n                 * @private\r\n                 */\r\n                _mergerIf: function(key, target, source) {\r\n                    var tval = target[key];\r\n                    var sval = source[key];\r\n\r\n                    if (helpers.isObject(tval) && helpers.isObject(sval)) {\r\n                        helpers.mergeIf(tval, sval);\r\n                    } else if (!target.hasOwnProperty(key)) {\r\n                        target[key] = helpers.clone(sval);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Recursively deep copies `source` properties into `target` with the given `options`.\r\n                 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n                 * @param {Object} target - The target object in which all sources are merged into.\r\n                 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\r\n                 * @param {Object} [options] - Merging options:\r\n                 * @param {Function} [options.merger] - The merge method (key, target, source, options)\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                merge: function(target, source, options) {\r\n                    var sources = helpers.isArray(source) ? source : [source];\r\n                    var ilen = sources.length;\r\n                    var merge, i, keys, klen, k;\r\n\r\n                    if (!helpers.isObject(target)) {\r\n                        return target;\r\n                    }\r\n\r\n                    options = options || {};\r\n                    merge = options.merger || helpers._merger;\r\n\r\n                    for (i = 0; i < ilen; ++i) {\r\n                        source = sources[i];\r\n                        if (!helpers.isObject(source)) {\r\n                            continue;\r\n                        }\r\n\r\n                        keys = Object.keys(source);\r\n                        for (k = 0, klen = keys.length; k < klen; ++k) {\r\n                            merge(keys[k], target, source, options);\r\n                        }\r\n                    }\r\n\r\n                    return target;\r\n                },\r\n\r\n                /**\r\n                 * Recursively deep copies `source` properties into `target` *only* if not defined in target.\r\n                 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n                 * @param {Object} target - The target object in which all sources are merged into.\r\n                 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                mergeIf: function(target, source) {\r\n                    return helpers.merge(target, source, { merger: helpers._mergerIf });\r\n                },\r\n\r\n                /**\r\n                 * Applies the contents of two or more objects together into the first object.\r\n                 * @param {Object} target - The target object in which all objects are merged into.\r\n                 * @param {Object} arg1 - Object containing additional properties to merge in target.\r\n                 * @param {Object} argN - Additional objects containing properties to merge in target.\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                extend: function(target) {\r\n                    var setFn = function(value, key) {\r\n                        target[key] = value;\r\n                    };\r\n                    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\r\n                        helpers.each(arguments[i], setFn);\r\n                    }\r\n                    return target;\r\n                },\r\n\r\n                /**\r\n                 * Basic javascript inheritance based on the model created in Backbone.js\r\n                 */\r\n                inherits: function(extensions) {\r\n                    var me = this;\r\n                    var ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\r\n                        return me.apply(this, arguments);\r\n                    };\r\n\r\n                    var Surrogate = function() {\r\n                        this.constructor = ChartElement;\r\n                    };\r\n\r\n                    Surrogate.prototype = me.prototype;\r\n                    ChartElement.prototype = new Surrogate();\r\n                    ChartElement.extend = helpers.inherits;\r\n\r\n                    if (extensions) {\r\n                        helpers.extend(ChartElement.prototype, extensions);\r\n                    }\r\n\r\n                    ChartElement.__super__ = me.prototype;\r\n                    return ChartElement;\r\n                }\r\n            };\r\n\r\n            module.exports = helpers;\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.callback instead.\r\n             * @function Chart.helpers.callCallback\r\n             * @deprecated since version 2.6.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.callCallback = helpers.callback;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Array.prototype.indexOf instead.\r\n             * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\r\n             * @function Chart.helpers.indexOf\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.indexOf = function(array, item, fromIndex) {\r\n                return Array.prototype.indexOf.call(array, item, fromIndex);\r\n            };\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\r\n             * @function Chart.helpers.getValueOrDefault\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.getValueOrDefault = helpers.valueOrDefault;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\r\n             * @function Chart.helpers.getValueAtIndexOrDefault\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n        }, {}], 34: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * Easing functions adapted from Robert Penner's easing equations.\r\n             * @namespace Chart.helpers.easingEffects\r\n             * @see http://www.robertpenner.com/easing/\r\n             */\r\n            var effects = {\r\n                linear: function(t) {\r\n                    return t;\r\n                },\r\n\r\n                easeInQuad: function(t) {\r\n                    return t * t;\r\n                },\r\n\r\n                easeOutQuad: function(t) {\r\n                    return -t * (t - 2);\r\n                },\r\n\r\n                easeInOutQuad: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t;\r\n                    }\r\n                    return -0.5 * ((--t) * (t - 2) - 1);\r\n                },\r\n\r\n                easeInCubic: function(t) {\r\n                    return t * t * t;\r\n                },\r\n\r\n                easeOutCubic: function(t) {\r\n                    return (t = t - 1) * t * t + 1;\r\n                },\r\n\r\n                easeInOutCubic: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t;\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * t + 2);\r\n                },\r\n\r\n                easeInQuart: function(t) {\r\n                    return t * t * t * t;\r\n                },\r\n\r\n                easeOutQuart: function(t) {\r\n                    return -((t = t - 1) * t * t * t - 1);\r\n                },\r\n\r\n                easeInOutQuart: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t * t;\r\n                    }\r\n                    return -0.5 * ((t -= 2) * t * t * t - 2);\r\n                },\r\n\r\n                easeInQuint: function(t) {\r\n                    return t * t * t * t * t;\r\n                },\r\n\r\n                easeOutQuint: function(t) {\r\n                    return (t = t - 1) * t * t * t * t + 1;\r\n                },\r\n\r\n                easeInOutQuint: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t * t * t;\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * t * t * t + 2);\r\n                },\r\n\r\n                easeInSine: function(t) {\r\n                    return -Math.cos(t * (Math.PI / 2)) + 1;\r\n                },\r\n\r\n                easeOutSine: function(t) {\r\n                    return Math.sin(t * (Math.PI / 2));\r\n                },\r\n\r\n                easeInOutSine: function(t) {\r\n                    return -0.5 * (Math.cos(Math.PI * t) - 1);\r\n                },\r\n\r\n                easeInExpo: function(t) {\r\n                    return (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\r\n                },\r\n\r\n                easeOutExpo: function(t) {\r\n                    return (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\r\n                },\r\n\r\n                easeInOutExpo: function(t) {\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * Math.pow(2, 10 * (t - 1));\r\n                    }\r\n                    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\r\n                },\r\n\r\n                easeInCirc: function(t) {\r\n                    if (t >= 1) {\r\n                        return t;\r\n                    }\r\n                    return -(Math.sqrt(1 - t * t) - 1);\r\n                },\r\n\r\n                easeOutCirc: function(t) {\r\n                    return Math.sqrt(1 - (t = t - 1) * t);\r\n                },\r\n\r\n                easeInOutCirc: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return -0.5 * (Math.sqrt(1 - t * t) - 1);\r\n                    }\r\n                    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\r\n                },\r\n\r\n                easeInElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.3;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\r\n                },\r\n\r\n                easeOutElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.3;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\r\n                },\r\n\r\n                easeInOutElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if ((t /= 0.5) === 2) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.45;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    if (t < 1) {\r\n                        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\r\n                    }\r\n                    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n                },\r\n                easeInBack: function(t) {\r\n                    var s = 1.70158;\r\n                    return t * t * ((s + 1) * t - s);\r\n                },\r\n\r\n                easeOutBack: function(t) {\r\n                    var s = 1.70158;\r\n                    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\r\n                },\r\n\r\n                easeInOutBack: function(t) {\r\n                    var s = 1.70158;\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n                },\r\n\r\n                easeInBounce: function(t) {\r\n                    return 1 - effects.easeOutBounce(1 - t);\r\n                },\r\n\r\n                easeOutBounce: function(t) {\r\n                    if (t < (1 / 2.75)) {\r\n                        return 7.5625 * t * t;\r\n                    }\r\n                    if (t < (2 / 2.75)) {\r\n                        return 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\r\n                    }\r\n                    if (t < (2.5 / 2.75)) {\r\n                        return 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\r\n                    }\r\n                    return 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\r\n                },\r\n\r\n                easeInOutBounce: function(t) {\r\n                    if (t < 0.5) {\r\n                        return effects.easeInBounce(t * 2) * 0.5;\r\n                    }\r\n                    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\r\n                }\r\n            };\r\n\r\n            module.exports = {\r\n                effects: effects\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\r\n             * @function Chart.helpers.easingEffects\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.easingEffects = effects;\r\n        }, { \"33\": 33 }], 35: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * @alias Chart.helpers.options\r\n             * @namespace\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Converts the given line height `value` in pixels for a specific font `size`.\r\n                 * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\r\n                 * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\r\n                 * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\r\n                 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\r\n                 * @since 2.7.0\r\n                 */\r\n                toLineHeight: function(value, size) {\r\n                    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\r\n                    if (!matches || matches[1] === 'normal') {\r\n                        return size * 1.2;\r\n                    }\r\n\r\n                    value = +matches[2];\r\n\r\n                    switch (matches[3]) {\r\n                        case 'px':\r\n                            return value;\r\n                        case '%':\r\n                            value /= 100;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n\r\n                    return size * value;\r\n                },\r\n\r\n                /**\r\n                 * Converts the given value into a padding object with pre-computed width/height.\r\n                 * @param {Number|Object} value - If a number, set the value to all TRBL component,\r\n                 *  else, if and object, use defined properties and sets undefined ones to 0.\r\n                 * @returns {Object} The padding values (top, right, bottom, left, width, height)\r\n                 * @since 2.7.0\r\n                 */\r\n                toPadding: function(value) {\r\n                    var t, r, b, l;\r\n\r\n                    if (helpers.isObject(value)) {\r\n                        t = +value.top || 0;\r\n                        r = +value.right || 0;\r\n                        b = +value.bottom || 0;\r\n                        l = +value.left || 0;\r\n                    } else {\r\n                        t = r = b = l = +value || 0;\r\n                    }\r\n\r\n                    return {\r\n                        top: t,\r\n                        right: r,\r\n                        bottom: b,\r\n                        left: l,\r\n                        height: t + b,\r\n                        width: l + r\r\n                    };\r\n                },\r\n\r\n                /**\r\n                 * Evaluates the given `inputs` sequentially and returns the first defined value.\r\n                 * @param {Array[]} inputs - An array of values, falling back to the last value.\r\n                 * @param {Object} [context] - If defined and the current value is a function, the value\r\n                 * is called with `context` as first argument and the result becomes the new input.\r\n                 * @param {Number} [index] - If defined and the current value is an array, the value\r\n                 * at `index` become the new input.\r\n                 * @since 2.7.0\r\n                 */\r\n                resolve: function(inputs, context, index) {\r\n                    var i, ilen, value;\r\n\r\n                    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\r\n                        value = inputs[i];\r\n                        if (value === undefined) {\r\n                            continue;\r\n                        }\r\n                        if (context !== undefined && typeof value === 'function') {\r\n                            value = value(context);\r\n                        }\r\n                        if (index !== undefined && helpers.isArray(value)) {\r\n                            value = value[index];\r\n                        }\r\n                        if (value !== undefined) {\r\n                            return value;\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }, { \"33\": 33 }], 36: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = require(33);\r\n            module.exports.easing = require(34);\r\n            module.exports.canvas = require(32);\r\n            module.exports.options = require(35);\r\n        }, { \"32\": 32, \"33\": 33, \"34\": 34, \"35\": 35 }], 37: [function(require, module, exports) {\r\n            /**\r\n             * Platform fallback implementation (minimal).\r\n             * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\r\n             */\r\n\r\n            module.exports = {\r\n                acquireContext: function(item) {\r\n                    if (item && item.canvas) {\r\n                        // Support for any object associated to a canvas (including a context2d)\r\n                        item = item.canvas;\r\n                    }\r\n\r\n                    return item && item.getContext('2d') || null;\r\n                }\r\n            };\r\n        }, {}], 38: [function(require, module, exports) {\r\n            /**\r\n             * Chart.Platform implementation for targeting a web browser\r\n             */\r\n\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            var EXPANDO_KEY = '$chartjs';\r\n            var CSS_PREFIX = 'chartjs-';\r\n            var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\r\n            var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\r\n            var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\r\n\r\n            /**\r\n             * DOM event types -> Chart.js event types.\r\n             * Note: only events with different types are mapped.\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/Events\r\n             */\r\n            var EVENT_TYPES = {\r\n                touchstart: 'mousedown',\r\n                touchmove: 'mousemove',\r\n                touchend: 'mouseup',\r\n                pointerenter: 'mouseenter',\r\n                pointerdown: 'mousedown',\r\n                pointermove: 'mousemove',\r\n                pointerup: 'mouseup',\r\n                pointerleave: 'mouseout',\r\n                pointerout: 'mouseout'\r\n            };\r\n\r\n            /**\r\n             * The \"used\" size is the final value of a dimension property after all calculations have\r\n             * been performed. This method uses the computed style of `element` but returns undefined\r\n             * if the computed style is not expressed in pixels. That can happen in some cases where\r\n             * `element` has a size relative to its parent and this last one is not yet displayed,\r\n             * for example because of `display: none` on a parent node.\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\r\n             * @returns {Number} Size in pixels or undefined if unknown.\r\n             */\r\n            function readUsedSize(element, property) {\r\n                var value = helpers.getStyle(element, property);\r\n                var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\r\n                return matches ? Number(matches[1]) : undefined;\r\n            }\r\n\r\n            /**\r\n             * Initializes the canvas style and render size without modifying the canvas display size,\r\n             * since responsiveness is handled by the controller.resize() method. The config is used\r\n             * to determine the aspect ratio to apply in case no explicit height has been specified.\r\n             */\r\n            function initCanvas(canvas, config) {\r\n                var style = canvas.style;\r\n\r\n                // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\r\n                // returns null or '' if no explicit value has been set to the canvas attribute.\r\n                var renderHeight = canvas.getAttribute('height');\r\n                var renderWidth = canvas.getAttribute('width');\r\n\r\n                // Chart.js modifies some canvas values that we want to restore on destroy\r\n                canvas[EXPANDO_KEY] = {\r\n                    initial: {\r\n                        height: renderHeight,\r\n                        width: renderWidth,\r\n                        style: {\r\n                            display: style.display,\r\n                            height: style.height,\r\n                            width: style.width\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // Force canvas to display as block to avoid extra space caused by inline\r\n                // elements, which would interfere with the responsive resize process.\r\n                // https://github.com/chartjs/Chart.js/issues/2538\r\n                style.display = style.display || 'block';\r\n\r\n                if (renderWidth === null || renderWidth === '') {\r\n                    var displayWidth = readUsedSize(canvas, 'width');\r\n                    if (displayWidth !== undefined) {\r\n                        canvas.width = displayWidth;\r\n                    }\r\n                }\r\n\r\n                if (renderHeight === null || renderHeight === '') {\r\n                    if (canvas.style.height === '') {\r\n                        // If no explicit render height and style height, let's apply the aspect ratio,\r\n                        // which one can be specified by the user but also by charts as default option\r\n                        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\r\n                        canvas.height = canvas.width / (config.options.aspectRatio || 2);\r\n                    } else {\r\n                        var displayHeight = readUsedSize(canvas, 'height');\r\n                        if (displayWidth !== undefined) {\r\n                            canvas.height = displayHeight;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return canvas;\r\n            }\r\n\r\n            /**\r\n             * Detects support for options object argument in addEventListener.\r\n             * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\r\n             * @private\r\n             */\r\n            var supportsEventListenerOptions = (function() {\r\n                var supports = false;\r\n                try {\r\n                    var options = Object.defineProperty({}, 'passive', {\r\n                        get: function() {\r\n                            supports = true;\r\n                        }\r\n                    });\r\n                    window.addEventListener('e', null, options);\r\n                } catch (e) {\r\n                    // continue regardless of error\r\n                }\r\n                return supports;\r\n            }());\r\n\r\n            // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\r\n            // https://github.com/chartjs/Chart.js/issues/4287\r\n            var eventListenerOptions = supportsEventListenerOptions ? { passive: true } : false;\r\n\r\n            function addEventListener(node, type, listener) {\r\n                node.addEventListener(type, listener, eventListenerOptions);\r\n            }\r\n\r\n            function removeEventListener(node, type, listener) {\r\n                node.removeEventListener(type, listener, eventListenerOptions);\r\n            }\r\n\r\n            function createEvent(type, chart, x, y, nativeEvent) {\r\n                return {\r\n                    type: type,\r\n                    chart: chart,\r\n                    native: nativeEvent || null,\r\n                    x: x !== undefined ? x : null,\r\n                    y: y !== undefined ? y : null,\r\n                };\r\n            }\r\n\r\n            function fromNativeEvent(event, chart) {\r\n                var type = EVENT_TYPES[event.type] || event.type;\r\n                var pos = helpers.getRelativePosition(event, chart);\r\n                return createEvent(type, chart, pos.x, pos.y, event);\r\n            }\r\n\r\n            function throttled(fn, thisArg) {\r\n                var ticking = false;\r\n                var args = [];\r\n\r\n                return function() {\r\n                    args = Array.prototype.slice.call(arguments);\r\n                    thisArg = thisArg || this;\r\n\r\n                    if (!ticking) {\r\n                        ticking = true;\r\n                        helpers.requestAnimFrame.call(window, function() {\r\n                            ticking = false;\r\n                            fn.apply(thisArg, args);\r\n                        });\r\n                    }\r\n                };\r\n            }\r\n\r\n            // Implementation based on https://github.com/marcj/css-element-queries\r\n            function createResizer(handler) {\r\n                var resizer = document.createElement('div');\r\n                var cls = CSS_PREFIX + 'size-monitor';\r\n                var maxSize = 1000000;\r\n                var style =\r\n                    'position:absolute;' +\r\n                    'left:0;' +\r\n                    'top:0;' +\r\n                    'right:0;' +\r\n                    'bottom:0;' +\r\n                    'overflow:hidden;' +\r\n                    'pointer-events:none;' +\r\n                    'visibility:hidden;' +\r\n                    'z-index:-1;';\r\n\r\n                resizer.style.cssText = style;\r\n                resizer.className = cls;\r\n                resizer.innerHTML =\r\n                    '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\r\n                    '<div style=\"' +\r\n                    'position:absolute;' +\r\n                    'width:' + maxSize + 'px;' +\r\n                    'height:' + maxSize + 'px;' +\r\n                    'left:0;' +\r\n                    'top:0\">' +\r\n                    '</div>' +\r\n                    '</div>' +\r\n                    '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\r\n                    '<div style=\"' +\r\n                    'position:absolute;' +\r\n                    'width:200%;' +\r\n                    'height:200%;' +\r\n                    'left:0; ' +\r\n                    'top:0\">' +\r\n                    '</div>' +\r\n                    '</div>';\r\n\r\n                var expand = resizer.childNodes[0];\r\n                var shrink = resizer.childNodes[1];\r\n\r\n                resizer._reset = function() {\r\n                    expand.scrollLeft = maxSize;\r\n                    expand.scrollTop = maxSize;\r\n                    shrink.scrollLeft = maxSize;\r\n                    shrink.scrollTop = maxSize;\r\n                };\r\n                var onScroll = function() {\r\n                    resizer._reset();\r\n                    handler();\r\n                };\r\n\r\n                addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\r\n                addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\r\n\r\n                return resizer;\r\n            }\r\n\r\n            // https://davidwalsh.name/detect-node-insertion\r\n            function watchForRender(node, handler) {\r\n                var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\r\n                var proxy = expando.renderProxy = function(e) {\r\n                    if (e.animationName === CSS_RENDER_ANIMATION) {\r\n                        handler();\r\n                    }\r\n                };\r\n\r\n                helpers.each(ANIMATION_START_EVENTS, function(type) {\r\n                    addEventListener(node, type, proxy);\r\n                });\r\n\r\n                // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\r\n                // is removed then added back immediately (same animation frame?). Accessing the\r\n                // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\r\n                // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\r\n                // https://github.com/chartjs/Chart.js/issues/4737\r\n                expando.reflow = !!node.offsetParent;\r\n\r\n                node.classList.add(CSS_RENDER_MONITOR);\r\n            }\r\n\r\n            function unwatchForRender(node) {\r\n                var expando = node[EXPANDO_KEY] || {};\r\n                var proxy = expando.renderProxy;\r\n\r\n                if (proxy) {\r\n                    helpers.each(ANIMATION_START_EVENTS, function(type) {\r\n                        removeEventListener(node, type, proxy);\r\n                    });\r\n\r\n                    delete expando.renderProxy;\r\n                }\r\n\r\n                node.classList.remove(CSS_RENDER_MONITOR);\r\n            }\r\n\r\n            function addResizeListener(node, listener, chart) {\r\n                var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\r\n\r\n                // Let's keep track of this added resizer and thus avoid DOM query when removing it.\r\n                var resizer = expando.resizer = createResizer(throttled(function() {\r\n                    if (expando.resizer) {\r\n                        return listener(createEvent('resize', chart));\r\n                    }\r\n                }));\r\n\r\n                // The resizer needs to be attached to the node parent, so we first need to be\r\n                // sure that `node` is attached to the DOM before injecting the resizer element.\r\n                watchForRender(node, function() {\r\n                    if (expando.resizer) {\r\n                        var container = node.parentNode;\r\n                        if (container && container !== resizer.parentNode) {\r\n                            container.insertBefore(resizer, container.firstChild);\r\n                        }\r\n\r\n                        // The container size might have changed, let's reset the resizer state.\r\n                        resizer._reset();\r\n                    }\r\n                });\r\n            }\r\n\r\n            function removeResizeListener(node) {\r\n                var expando = node[EXPANDO_KEY] || {};\r\n                var resizer = expando.resizer;\r\n\r\n                delete expando.resizer;\r\n                unwatchForRender(node);\r\n\r\n                if (resizer && resizer.parentNode) {\r\n                    resizer.parentNode.removeChild(resizer);\r\n                }\r\n            }\r\n\r\n            //function injectCSS(platform, css) {\r\n            //    // http://stackoverflow.com/q/3922139\r\n            //    var style = platform._style || document.createElement('style');\r\n            //    if (!platform._style) {\r\n            //        platform._style = style;\r\n            //        css = '/* Chart.js */\\n' + css;\r\n            //        style.setAttribute('type', 'text/css');\r\n            //        document.getElementsByTagName('head')[0].appendChild(style);\r\n            //    }\r\n\r\n            //    style.appendChild(document.createTextNode(css));\r\n            //}\r\n\r\n            module.exports = {\r\n                /**\r\n                 * This property holds whether this platform is enabled for the current environment.\r\n                 * Currently used by platform.js to select the proper implementation.\r\n                 * @private\r\n                 */\r\n                _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\r\n\r\n                initialize: function() {\r\n                    var keyframes = 'from{opacity:0.99}to{opacity:1}';\r\n                    //injectCSS(this,\r\n                    //    // DOM rendering detection\r\n                    //    // https://davidwalsh.name/detect-node-insertion\r\n                    //    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\r\n                    //    '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\r\n                    //    '.' + CSS_RENDER_MONITOR + '{' +\r\n                    //    '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\r\n                    //    'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\r\n                    //    '}'\r\n                    //);\r\n                },\r\n\r\n                acquireContext: function(item, config) {\r\n                    if (typeof item === 'string') {\r\n                        item = document.getElementById(item);\r\n                    } else if (item.length) {\r\n                        // Support for array based queries (such as jQuery)\r\n                        item = item[0];\r\n                    }\r\n\r\n                    if (item && item.canvas) {\r\n                        // Support for any object associated to a canvas (including a context2d)\r\n                        item = item.canvas;\r\n                    }\r\n\r\n                    // To prevent canvas fingerprinting, some add-ons undefine the getContext\r\n                    // method, for example: https://github.com/kkapsner/CanvasBlocker\r\n                    // https://github.com/chartjs/Chart.js/issues/2807\r\n                    var context = item && item.getContext && item.getContext('2d');\r\n\r\n                    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\r\n                    // inside an iframe or when running in a protected environment. We could guess the\r\n                    // types from their toString() value but let's keep things flexible and assume it's\r\n                    // a sufficient condition if the item has a context2D which has item as `canvas`.\r\n                    // https://github.com/chartjs/Chart.js/issues/3887\r\n                    // https://github.com/chartjs/Chart.js/issues/4102\r\n                    // https://github.com/chartjs/Chart.js/issues/4152\r\n                    if (context && context.canvas === item) {\r\n                        initCanvas(item, config);\r\n                        return context;\r\n                    }\r\n\r\n                    return null;\r\n                },\r\n\r\n                releaseContext: function(context) {\r\n                    var canvas = context.canvas;\r\n                    if (!canvas[EXPANDO_KEY]) {\r\n                        return;\r\n                    }\r\n\r\n                    var initial = canvas[EXPANDO_KEY].initial;\r\n                    ['height', 'width'].forEach(function(prop) {\r\n                        var value = initial[prop];\r\n                        if (helpers.isNullOrUndef(value)) {\r\n                            canvas.removeAttribute(prop);\r\n                        } else {\r\n                            canvas.setAttribute(prop, value);\r\n                        }\r\n                    });\r\n\r\n                    helpers.each(initial.style || {}, function(value, key) {\r\n                        canvas.style[key] = value;\r\n                    });\r\n\r\n                    // The canvas render size might have been changed (and thus the state stack discarded),\r\n                    // we can't use save() and restore() to restore the initial state. So make sure that at\r\n                    // least the canvas context is reset to the default state by setting the canvas width.\r\n                    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\r\n                    canvas.width = canvas.width;\r\n\r\n                    delete canvas[EXPANDO_KEY];\r\n                },\r\n\r\n                addEventListener: function(chart, type, listener) {\r\n                    var canvas = chart.canvas;\r\n                    if (type === 'resize') {\r\n                        // Note: the resize event is not supported on all browsers.\r\n                        addResizeListener(canvas, listener, chart);\r\n                        return;\r\n                    }\r\n\r\n                    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\r\n                    var proxies = expando.proxies || (expando.proxies = {});\r\n                    var proxy = proxies[chart.id + '_' + type] = function(event) {\r\n                        listener(fromNativeEvent(event, chart));\r\n                    };\r\n\r\n                    addEventListener(canvas, type, proxy);\r\n                },\r\n\r\n                removeEventListener: function(chart, type, listener) {\r\n                    var canvas = chart.canvas;\r\n                    if (type === 'resize') {\r\n                        // Note: the resize event is not supported on all browsers.\r\n                        removeResizeListener(canvas, listener);\r\n                        return;\r\n                    }\r\n\r\n                    var expando = listener[EXPANDO_KEY] || {};\r\n                    var proxies = expando.proxies || {};\r\n                    var proxy = proxies[chart.id + '_' + type];\r\n                    if (!proxy) {\r\n                        return;\r\n                    }\r\n\r\n                    removeEventListener(canvas, type, proxy);\r\n                }\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use EventTarget.addEventListener instead.\r\n             * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\r\n             * @function Chart.helpers.addEvent\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.addEvent = addEventListener;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use EventTarget.removeEventListener instead.\r\n             * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\r\n             * @function Chart.helpers.removeEvent\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.removeEvent = removeEventListener;\r\n        }, { \"36\": 36 }], 39: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n            var basic = require(37);\r\n            var dom = require(38);\r\n\r\n            // @TODO Make possible to select another platform at build time.\r\n            var implementation = dom._enabled ? dom : basic;\r\n\r\n            /**\r\n             * @namespace Chart.platform\r\n             * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\r\n             * @since 2.4.0\r\n             */\r\n            module.exports = helpers.extend({\r\n                /**\r\n                 * @since 2.7.0\r\n                 */\r\n                initialize: function() { },\r\n\r\n                /**\r\n                 * Called at chart construction time, returns a context2d instance implementing\r\n                 * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\r\n                 * @param {*} item - The native item from which to acquire context (platform specific)\r\n                 * @param {Object} options - The chart options\r\n                 * @returns {CanvasRenderingContext2D} context2d instance\r\n                 */\r\n                acquireContext: function() { },\r\n\r\n                /**\r\n                 * Called at chart destruction time, releases any resources associated to the context\r\n                 * previously returned by the acquireContext() method.\r\n                 * @param {CanvasRenderingContext2D} context - The context2d instance\r\n                 * @returns {Boolean} true if the method succeeded, else false\r\n                 */\r\n                releaseContext: function() { },\r\n\r\n                /**\r\n                 * Registers the specified listener on the given chart.\r\n                 * @param {Chart} chart - Chart from which to listen for event\r\n                 * @param {String} type - The ({@link IEvent}) type to listen for\r\n                 * @param {Function} listener - Receives a notification (an object that implements\r\n                 * the {@link IEvent} interface) when an event of the specified type occurs.\r\n                 */\r\n                addEventListener: function() { },\r\n\r\n                /**\r\n                 * Removes the specified listener previously registered with addEventListener.\r\n                 * @param {Chart} chart -Chart from which to remove the listener\r\n                 * @param {String} type - The ({@link IEvent}) type to remove\r\n                 * @param {Function} listener - The listener function to remove from the event target.\r\n                 */\r\n                removeEventListener: function() { }\r\n            }, implementation);\r\n\r\n            /**\r\n             * @interface IPlatform\r\n             * Allows abstracting platform dependencies away from the chart\r\n             * @borrows Chart.platform.acquireContext as acquireContext\r\n             * @borrows Chart.platform.releaseContext as releaseContext\r\n             * @borrows Chart.platform.addEventListener as addEventListener\r\n             * @borrows Chart.platform.removeEventListener as removeEventListener\r\n             */\r\n\r\n            /**\r\n             * @interface IEvent\r\n             * @prop {String} type - The event type name, possible values are:\r\n             * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\r\n             * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\r\n             * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\r\n             * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\r\n             * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\r\n             */\r\n        }, { \"36\": 36, \"37\": 37, \"38\": 38 }], 40: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = {};\r\n            module.exports.filler = require(41);\r\n            module.exports.legend = require(42);\r\n            module.exports.title = require(43);\r\n        }, { \"41\": 41, \"42\": 42, \"43\": 43 }], 41: [function(require, module, exports) {\r\n            /**\r\n             * Plugin based on discussion from the following Chart.js issues:\r\n             * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\r\n             * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\r\n             */\r\n\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                plugins: {\r\n                    filler: {\r\n                        propagate: true\r\n                    }\r\n                }\r\n            });\r\n\r\n            var mappers = {\r\n                dataset: function(source) {\r\n                    var index = source.fill;\r\n                    var chart = source.chart;\r\n                    var meta = chart.getDatasetMeta(index);\r\n                    var visible = meta && chart.isDatasetVisible(index);\r\n                    var points = (visible && meta.dataset._children) || [];\r\n                    var length = points.length || 0;\r\n\r\n                    return !length ? null : function(point, i) {\r\n                        return (i < length && points[i]._view) || null;\r\n                    };\r\n                },\r\n\r\n                boundary: function(source) {\r\n                    var boundary = source.boundary;\r\n                    var x = boundary ? boundary.x : null;\r\n                    var y = boundary ? boundary.y : null;\r\n\r\n                    return function(point) {\r\n                        return {\r\n                            x: x === null ? point.x : x,\r\n                            y: y === null ? point.y : y,\r\n                        };\r\n                    };\r\n                }\r\n            };\r\n\r\n            // @todo if (fill[0] === '#')\r\n            function decodeFill(el, index, count) {\r\n                var model = el._model || {};\r\n                var fill = model.fill;\r\n                var target;\r\n\r\n                if (fill === undefined) {\r\n                    fill = !!model.backgroundColor;\r\n                }\r\n\r\n                if (fill === false || fill === null) {\r\n                    return false;\r\n                }\r\n\r\n                if (fill === true) {\r\n                    return 'origin';\r\n                }\r\n\r\n                target = parseFloat(fill, 10);\r\n                if (isFinite(target) && Math.floor(target) === target) {\r\n                    if (fill[0] === '-' || fill[0] === '+') {\r\n                        target = index + target;\r\n                    }\r\n\r\n                    if (target === index || target < 0 || target >= count) {\r\n                        return false;\r\n                    }\r\n\r\n                    return target;\r\n                }\r\n\r\n                switch (fill) {\r\n                    // compatibility\r\n                    case 'bottom':\r\n                        return 'start';\r\n                    case 'top':\r\n                        return 'end';\r\n                    case 'zero':\r\n                        return 'origin';\r\n                    // supported boundaries\r\n                    case 'origin':\r\n                    case 'start':\r\n                    case 'end':\r\n                        return fill;\r\n                    // invalid fill values\r\n                    default:\r\n                        return false;\r\n                }\r\n            }\r\n\r\n            function computeBoundary(source) {\r\n                var model = source.el._model || {};\r\n                var scale = source.el._scale || {};\r\n                var fill = source.fill;\r\n                var target = null;\r\n                var horizontal;\r\n\r\n                if (isFinite(fill)) {\r\n                    return null;\r\n                }\r\n\r\n                // Backward compatibility: until v3, we still need to support boundary values set on\r\n                // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\r\n                // controllers might still use it (e.g. the Smith chart).\r\n\r\n                if (fill === 'start') {\r\n                    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\r\n                } else if (fill === 'end') {\r\n                    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\r\n                } else if (model.scaleZero !== undefined) {\r\n                    target = model.scaleZero;\r\n                } else if (scale.getBasePosition) {\r\n                    target = scale.getBasePosition();\r\n                } else if (scale.getBasePixel) {\r\n                    target = scale.getBasePixel();\r\n                }\r\n\r\n                if (target !== undefined && target !== null) {\r\n                    if (target.x !== undefined && target.y !== undefined) {\r\n                        return target;\r\n                    }\r\n\r\n                    if (typeof target === 'number' && isFinite(target)) {\r\n                        horizontal = scale.isHorizontal();\r\n                        return {\r\n                            x: horizontal ? target : null,\r\n                            y: horizontal ? null : target\r\n                        };\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n\r\n            function resolveTarget(sources, index, propagate) {\r\n                var source = sources[index];\r\n                var fill = source.fill;\r\n                var visited = [index];\r\n                var target;\r\n\r\n                if (!propagate) {\r\n                    return fill;\r\n                }\r\n\r\n                while (fill !== false && visited.indexOf(fill) === -1) {\r\n                    if (!isFinite(fill)) {\r\n                        return fill;\r\n                    }\r\n\r\n                    target = sources[fill];\r\n                    if (!target) {\r\n                        return false;\r\n                    }\r\n\r\n                    if (target.visible) {\r\n                        return fill;\r\n                    }\r\n\r\n                    visited.push(fill);\r\n                    fill = target.fill;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            function createMapper(source) {\r\n                var fill = source.fill;\r\n                var type = 'dataset';\r\n\r\n                if (fill === false) {\r\n                    return null;\r\n                }\r\n\r\n                if (!isFinite(fill)) {\r\n                    type = 'boundary';\r\n                }\r\n\r\n                return mappers[type](source);\r\n            }\r\n\r\n            function isDrawable(point) {\r\n                return point && !point.skip;\r\n            }\r\n\r\n            function drawArea(ctx, curve0, curve1, len0, len1) {\r\n                var i;\r\n\r\n                if (!len0 || !len1) {\r\n                    return;\r\n                }\r\n\r\n                // building first area curve (normal)\r\n                ctx.moveTo(curve0[0].x, curve0[0].y);\r\n                for (i = 1; i < len0; ++i) {\r\n                    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\r\n                }\r\n\r\n                // joining the two area curves\r\n                ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\r\n\r\n                // building opposite area curve (reverse)\r\n                for (i = len1 - 1; i > 0; --i) {\r\n                    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\r\n                }\r\n            }\r\n\r\n            function doFill(ctx, points, mapper, view, color, loop) {\r\n                var count = points.length;\r\n                var span = view.spanGaps;\r\n                var curve0 = [];\r\n                var curve1 = [];\r\n                var len0 = 0;\r\n                var len1 = 0;\r\n                var i, ilen, index, p0, p1, d0, d1;\r\n\r\n                ctx.beginPath();\r\n\r\n                for (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\r\n                    index = i % count;\r\n                    p0 = points[index]._view;\r\n                    p1 = mapper(p0, index, view);\r\n                    d0 = isDrawable(p0);\r\n                    d1 = isDrawable(p1);\r\n\r\n                    if (d0 && d1) {\r\n                        len0 = curve0.push(p0);\r\n                        len1 = curve1.push(p1);\r\n                    } else if (len0 && len1) {\r\n                        if (!span) {\r\n                            drawArea(ctx, curve0, curve1, len0, len1);\r\n                            len0 = len1 = 0;\r\n                            curve0 = [];\r\n                            curve1 = [];\r\n                        } else {\r\n                            if (d0) {\r\n                                curve0.push(p0);\r\n                            }\r\n                            if (d1) {\r\n                                curve1.push(p1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                drawArea(ctx, curve0, curve1, len0, len1);\r\n\r\n                ctx.closePath();\r\n                ctx.fillStyle = color;\r\n                ctx.fill();\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'filler',\r\n\r\n                afterDatasetsUpdate: function(chart, options) {\r\n                    var count = (chart.data.datasets || []).length;\r\n                    var propagate = options.propagate;\r\n                    var sources = [];\r\n                    var meta, i, el, source;\r\n\r\n                    for (i = 0; i < count; ++i) {\r\n                        meta = chart.getDatasetMeta(i);\r\n                        el = meta.dataset;\r\n                        source = null;\r\n\r\n                        if (el && el._model && el instanceof elements.Line) {\r\n                            source = {\r\n                                visible: chart.isDatasetVisible(i),\r\n                                fill: decodeFill(el, i, count),\r\n                                chart: chart,\r\n                                el: el\r\n                            };\r\n                        }\r\n\r\n                        meta.$filler = source;\r\n                        sources.push(source);\r\n                    }\r\n\r\n                    for (i = 0; i < count; ++i) {\r\n                        source = sources[i];\r\n                        if (!source) {\r\n                            continue;\r\n                        }\r\n\r\n                        source.fill = resolveTarget(sources, i, propagate);\r\n                        source.boundary = computeBoundary(source);\r\n                        source.mapper = createMapper(source);\r\n                    }\r\n                },\r\n\r\n                beforeDatasetDraw: function(chart, args) {\r\n                    var meta = args.meta.$filler;\r\n                    if (!meta) {\r\n                        return;\r\n                    }\r\n\r\n                    var ctx = chart.ctx;\r\n                    var el = meta.el;\r\n                    var view = el._view;\r\n                    var points = el._children || [];\r\n                    var mapper = meta.mapper;\r\n                    var color = view.backgroundColor || defaults.global.defaultColor;\r\n\r\n                    if (mapper && color && points.length) {\r\n                        helpers.canvas.clipArea(ctx, chart.chartArea);\r\n                        doFill(ctx, points, mapper, view, color, el._loop);\r\n                        helpers.canvas.unclipArea(ctx);\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 42: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            var noop = helpers.noop;\r\n\r\n            defaults._set('global', {\r\n                legend: {\r\n                    display: true,\r\n                    position: 'top',\r\n                    fullWidth: true,\r\n                    reverse: false,\r\n                    weight: 1000,\r\n\r\n                    // a callback that will handle\r\n                    onClick: function(e, legendItem) {\r\n                        var index = legendItem.datasetIndex;\r\n                        var ci = this.chart;\r\n                        var meta = ci.getDatasetMeta(index);\r\n\r\n                        // See controller.isDatasetVisible comment\r\n                        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\r\n\r\n                        // We hid a dataset ... rerender the chart\r\n                        ci.update();\r\n                    },\r\n\r\n                    onHover: null,\r\n\r\n                    labels: {\r\n                        boxWidth: 40,\r\n                        padding: 10,\r\n                        // Generates labels shown in the legend\r\n                        // Valid properties to return:\r\n                        // text : text to display\r\n                        // fillStyle : fill of coloured box\r\n                        // strokeStyle: stroke of coloured box\r\n                        // hidden : if this legend item refers to a hidden item\r\n                        // lineCap : cap style for line\r\n                        // lineDash\r\n                        // lineDashOffset :\r\n                        // lineJoin :\r\n                        // lineWidth :\r\n                        generateLabels: function(chart) {\r\n                            var data = chart.data;\r\n                            return helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\r\n                                return {\r\n                                    text: dataset.label,\r\n                                    fillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\r\n                                    hidden: !chart.isDatasetVisible(i),\r\n                                    lineCap: dataset.borderCapStyle,\r\n                                    lineDash: dataset.borderDash,\r\n                                    lineDashOffset: dataset.borderDashOffset,\r\n                                    lineJoin: dataset.borderJoinStyle,\r\n                                    lineWidth: dataset.borderWidth,\r\n                                    strokeStyle: dataset.borderColor,\r\n                                    pointStyle: dataset.pointStyle,\r\n\r\n                                    // Below is extra data used for toggling the datasets\r\n                                    datasetIndex: i\r\n                                };\r\n                            }, this) : [];\r\n                        }\r\n                    }\r\n                },\r\n\r\n                legendCallback: function(chart) {\r\n                    var text = [];\r\n                    text.push('<ul class=\"' + chart.id + '-legend\">');\r\n                    for (var i = 0; i < chart.data.datasets.length; i++) {\r\n                        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\r\n                        if (chart.data.datasets[i].label) {\r\n                            text.push(chart.data.datasets[i].label);\r\n                        }\r\n                        text.push('</li>');\r\n                    }\r\n                    text.push('</ul>');\r\n                    return text.join('');\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Helper function to get the box width based on the usePointStyle option\r\n             * @param labelopts {Object} the label options on the legend\r\n             * @param fontSize {Number} the label font size\r\n             * @return {Number} width of the color box area\r\n             */\r\n            function getBoxWidth(labelOpts, fontSize) {\r\n                return labelOpts.usePointStyle ?\r\n                    fontSize * Math.SQRT2 :\r\n                    labelOpts.boxWidth;\r\n            }\r\n\r\n            /**\r\n             * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\r\n             */\r\n            var Legend = Element.extend({\r\n                initialize: function(config) {\r\n                    helpers.extend(this, config);\r\n\r\n                    // Contains hit boxes for each dataset (in dataset order)\r\n                    this.legendHitBoxes = [];\r\n\r\n                    // Are we in doughnut mode which has a different data type\r\n                    this.doughnutMode = false;\r\n                },\r\n\r\n                // These methods are ordered by lifecycle. Utilities then follow.\r\n                // Any function defined here is inherited by all legend types.\r\n                // Any function can be extended by the legend type\r\n\r\n                beforeUpdate: noop,\r\n                update: function(maxWidth, maxHeight, margins) {\r\n                    var me = this;\r\n\r\n                    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                    me.beforeUpdate();\r\n\r\n                    // Absorb the master measurements\r\n                    me.maxWidth = maxWidth;\r\n                    me.maxHeight = maxHeight;\r\n                    me.margins = margins;\r\n\r\n                    // Dimensions\r\n                    me.beforeSetDimensions();\r\n                    me.setDimensions();\r\n                    me.afterSetDimensions();\r\n                    // Labels\r\n                    me.beforeBuildLabels();\r\n                    me.buildLabels();\r\n                    me.afterBuildLabels();\r\n\r\n                    // Fit\r\n                    me.beforeFit();\r\n                    me.fit();\r\n                    me.afterFit();\r\n                    //\r\n                    me.afterUpdate();\r\n\r\n                    return me.minSize;\r\n                },\r\n                afterUpdate: noop,\r\n\r\n                //\r\n\r\n                beforeSetDimensions: noop,\r\n                setDimensions: function() {\r\n                    var me = this;\r\n                    // Set the unconstrained dimension before label rotation\r\n                    if (me.isHorizontal()) {\r\n                        // Reset position before calculating rotation\r\n                        me.width = me.maxWidth;\r\n                        me.left = 0;\r\n                        me.right = me.width;\r\n                    } else {\r\n                        me.height = me.maxHeight;\r\n\r\n                        // Reset position before calculating rotation\r\n                        me.top = 0;\r\n                        me.bottom = me.height;\r\n                    }\r\n\r\n                    // Reset padding\r\n                    me.paddingLeft = 0;\r\n                    me.paddingTop = 0;\r\n                    me.paddingRight = 0;\r\n                    me.paddingBottom = 0;\r\n\r\n                    // Reset minSize\r\n                    me.minSize = {\r\n                        width: 0,\r\n                        height: 0\r\n                    };\r\n                },\r\n                afterSetDimensions: noop,\r\n\r\n                //\r\n\r\n                beforeBuildLabels: noop,\r\n                buildLabels: function() {\r\n                    var me = this;\r\n                    var labelOpts = me.options.labels || {};\r\n                    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\r\n\r\n                    if (labelOpts.filter) {\r\n                        legendItems = legendItems.filter(function(item) {\r\n                            return labelOpts.filter(item, me.chart.data);\r\n                        });\r\n                    }\r\n\r\n                    if (me.options.reverse) {\r\n                        legendItems.reverse();\r\n                    }\r\n\r\n                    me.legendItems = legendItems;\r\n                },\r\n                afterBuildLabels: noop,\r\n\r\n                //\r\n\r\n                beforeFit: noop,\r\n                fit: function() {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var labelOpts = opts.labels;\r\n                    var display = opts.display;\r\n\r\n                    var ctx = me.ctx;\r\n\r\n                    var globalDefault = defaults.global;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\r\n                    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\r\n                    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\r\n                    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n                    // Reset hit boxes\r\n                    var hitboxes = me.legendHitBoxes = [];\r\n\r\n                    var minSize = me.minSize;\r\n                    var isHorizontal = me.isHorizontal();\r\n\r\n                    if (isHorizontal) {\r\n                        minSize.width = me.maxWidth; // fill all the width\r\n                        minSize.height = display ? 10 : 0;\r\n                    } else {\r\n                        minSize.width = display ? 10 : 0;\r\n                        minSize.height = me.maxHeight; // fill all the height\r\n                    }\r\n\r\n                    // Increase sizes here\r\n                    if (display) {\r\n                        ctx.font = labelFont;\r\n\r\n                        if (isHorizontal) {\r\n                            // Labels\r\n\r\n                            // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\r\n                            var lineWidths = me.lineWidths = [0];\r\n                            var totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\r\n\r\n                            ctx.textAlign = 'left';\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            helpers.each(me.legendItems, function(legendItem, i) {\r\n                                var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                                var width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n                                if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\r\n                                    totalHeight += fontSize + (labelOpts.padding);\r\n                                    lineWidths[lineWidths.length] = me.left;\r\n                                }\r\n\r\n                                // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                                hitboxes[i] = {\r\n                                    left: 0,\r\n                                    top: 0,\r\n                                    width: width,\r\n                                    height: fontSize\r\n                                };\r\n\r\n                                lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\r\n                            });\r\n\r\n                            minSize.height += totalHeight;\r\n                        } else {\r\n                            var vPadding = labelOpts.padding;\r\n                            var columnWidths = me.columnWidths = [];\r\n                            var totalWidth = labelOpts.padding;\r\n                            var currentColWidth = 0;\r\n                            var currentColHeight = 0;\r\n                            var itemHeight = fontSize + vPadding;\r\n\r\n                            helpers.each(me.legendItems, function(legendItem, i) {\r\n                                var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                                var itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n                                // If too tall, go to new column\r\n                                if (currentColHeight + itemHeight > minSize.height) {\r\n                                    totalWidth += currentColWidth + labelOpts.padding;\r\n                                    columnWidths.push(currentColWidth); // previous column width\r\n\r\n                                    currentColWidth = 0;\r\n                                    currentColHeight = 0;\r\n                                }\r\n\r\n                                // Get max width\r\n                                currentColWidth = Math.max(currentColWidth, itemWidth);\r\n                                currentColHeight += itemHeight;\r\n\r\n                                // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                                hitboxes[i] = {\r\n                                    left: 0,\r\n                                    top: 0,\r\n                                    width: itemWidth,\r\n                                    height: fontSize\r\n                                };\r\n                            });\r\n\r\n                            totalWidth += currentColWidth;\r\n                            columnWidths.push(currentColWidth);\r\n                            minSize.width += totalWidth;\r\n                        }\r\n                    }\r\n\r\n                    me.width = minSize.width;\r\n                    me.height = minSize.height;\r\n                },\r\n                afterFit: noop,\r\n\r\n                // Shared Methods\r\n                isHorizontal: function() {\r\n                    return this.options.position === 'top' || this.options.position === 'bottom';\r\n                },\r\n\r\n                // Actually draw the legend on the canvas\r\n                draw: function() {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var labelOpts = opts.labels;\r\n                    var globalDefault = defaults.global;\r\n                    var lineDefault = globalDefault.elements.line;\r\n                    var legendWidth = me.width;\r\n                    var lineWidths = me.lineWidths;\r\n\r\n                    if (opts.display) {\r\n                        var ctx = me.ctx;\r\n                        var valueOrDefault = helpers.valueOrDefault;\r\n                        var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\r\n                        var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\r\n                        var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\r\n                        var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\r\n                        var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n                        var cursor;\r\n\r\n                        // Canvas setup\r\n                        ctx.textAlign = 'left';\r\n                        ctx.textBaseline = 'middle';\r\n                        ctx.lineWidth = 0.5;\r\n                        ctx.strokeStyle = fontColor; // for strikethrough effect\r\n                        ctx.fillStyle = fontColor; // render in correct colour\r\n                        ctx.font = labelFont;\r\n\r\n                        var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                        var hitboxes = me.legendHitBoxes;\r\n\r\n                        // current position\r\n                        var drawLegendBox = function(x, y, legendItem) {\r\n                            if (isNaN(boxWidth) || boxWidth <= 0) {\r\n                                return;\r\n                            }\r\n\r\n                            // Set the ctx for the box\r\n                            ctx.save();\r\n\r\n                            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\r\n                            ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\r\n                            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\r\n                            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\r\n                            ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\r\n                            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\r\n                            var isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\r\n\r\n                            if (ctx.setLineDash) {\r\n                                // IE 9 and 10 do not support line dash\r\n                                ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\r\n                            }\r\n\r\n                            if (opts.labels && opts.labels.usePointStyle) {\r\n                                // Recalculate x and y for drawPoint() because its expecting\r\n                                // x and y to be center of figure (instead of top left)\r\n                                var radius = fontSize * Math.SQRT2 / 2;\r\n                                var offSet = radius / Math.SQRT2;\r\n                                var centerX = x + offSet;\r\n                                var centerY = y + offSet;\r\n\r\n                                // Draw pointStyle as legend symbol\r\n                                helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\r\n                            } else {\r\n                                // Draw box as legend symbol\r\n                                if (!isLineWidthZero) {\r\n                                    ctx.strokeRect(x, y, boxWidth, fontSize);\r\n                                }\r\n                                ctx.fillRect(x, y, boxWidth, fontSize);\r\n                            }\r\n\r\n                            ctx.restore();\r\n                        };\r\n                        var fillText = function(x, y, legendItem, textWidth) {\r\n                            var halfFontSize = fontSize / 2;\r\n                            var xLeft = boxWidth + halfFontSize + x;\r\n                            var yMiddle = y + halfFontSize;\r\n\r\n                            ctx.fillText(legendItem.text, xLeft, yMiddle);\r\n\r\n                            if (legendItem.hidden) {\r\n                                // Strikethrough the text if hidden\r\n                                ctx.beginPath();\r\n                                ctx.lineWidth = 2;\r\n                                ctx.moveTo(xLeft, yMiddle);\r\n                                ctx.lineTo(xLeft + textWidth, yMiddle);\r\n                                ctx.stroke();\r\n                            }\r\n                        };\r\n\r\n                        // Horizontal\r\n                        var isHorizontal = me.isHorizontal();\r\n                        if (isHorizontal) {\r\n                            cursor = {\r\n                                x: me.left + ((legendWidth - lineWidths[0]) / 2),\r\n                                y: me.top + labelOpts.padding,\r\n                                line: 0\r\n                            };\r\n                        } else {\r\n                            cursor = {\r\n                                x: me.left + labelOpts.padding,\r\n                                y: me.top + labelOpts.padding,\r\n                                line: 0\r\n                            };\r\n                        }\r\n\r\n                        var itemHeight = fontSize + labelOpts.padding;\r\n                        helpers.each(me.legendItems, function(legendItem, i) {\r\n                            var textWidth = ctx.measureText(legendItem.text).width;\r\n                            var width = boxWidth + (fontSize / 2) + textWidth;\r\n                            var x = cursor.x;\r\n                            var y = cursor.y;\r\n\r\n                            if (isHorizontal) {\r\n                                if (x + width >= legendWidth) {\r\n                                    y = cursor.y += itemHeight;\r\n                                    cursor.line++;\r\n                                    x = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\r\n                                }\r\n                            } else if (y + itemHeight > me.bottom) {\r\n                                x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\r\n                                y = cursor.y = me.top + labelOpts.padding;\r\n                                cursor.line++;\r\n                            }\r\n\r\n                            drawLegendBox(x, y, legendItem);\r\n\r\n                            hitboxes[i].left = x;\r\n                            hitboxes[i].top = y;\r\n\r\n                            // Fill the actual label\r\n                            fillText(x, y, legendItem, textWidth);\r\n\r\n                            if (isHorizontal) {\r\n                                cursor.x += width + (labelOpts.padding);\r\n                            } else {\r\n                                cursor.y += itemHeight;\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Handle an event\r\n                 * @private\r\n                 * @param {IEvent} event - The event to handle\r\n                 * @return {Boolean} true if a change occured\r\n                 */\r\n                handleEvent: function(e) {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var type = e.type === 'mouseup' ? 'click' : e.type;\r\n                    var changed = false;\r\n\r\n                    if (type === 'mousemove') {\r\n                        if (!opts.onHover) {\r\n                            return;\r\n                        }\r\n                    } else if (type === 'click') {\r\n                        if (!opts.onClick) {\r\n                            return;\r\n                        }\r\n                    } else {\r\n                        return;\r\n                    }\r\n\r\n                    // Chart event already has relative position in it\r\n                    var x = e.x;\r\n                    var y = e.y;\r\n\r\n                    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\r\n                        // See if we are touching one of the dataset boxes\r\n                        var lh = me.legendHitBoxes;\r\n                        for (var i = 0; i < lh.length; ++i) {\r\n                            var hitBox = lh[i];\r\n\r\n                            if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n                                // Touching an element\r\n                                if (type === 'click') {\r\n                                    // use e.native for backwards compatibility\r\n                                    opts.onClick.call(me, e.native, me.legendItems[i]);\r\n                                    changed = true;\r\n                                    break;\r\n                                } else if (type === 'mousemove') {\r\n                                    // use e.native for backwards compatibility\r\n                                    opts.onHover.call(me, e.native, me.legendItems[i]);\r\n                                    changed = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return changed;\r\n                }\r\n            });\r\n\r\n            function createNewLegendAndAttach(chart, legendOpts) {\r\n                var legend = new Legend({\r\n                    ctx: chart.ctx,\r\n                    options: legendOpts,\r\n                    chart: chart\r\n                });\r\n\r\n                layouts.configure(chart, legend, legendOpts);\r\n                layouts.addBox(chart, legend);\r\n                chart.legend = legend;\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'legend',\r\n\r\n                /**\r\n                 * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\r\n                 * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\r\n                 * the plugin, which one will be re-exposed in the chart.js file.\r\n                 * https://github.com/chartjs/Chart.js/pull/2640\r\n                 * @private\r\n                 */\r\n                _element: Legend,\r\n\r\n                beforeInit: function(chart) {\r\n                    var legendOpts = chart.options.legend;\r\n\r\n                    if (legendOpts) {\r\n                        createNewLegendAndAttach(chart, legendOpts);\r\n                    }\r\n                },\r\n\r\n                beforeUpdate: function(chart) {\r\n                    var legendOpts = chart.options.legend;\r\n                    var legend = chart.legend;\r\n\r\n                    if (legendOpts) {\r\n                        helpers.mergeIf(legendOpts, defaults.global.legend);\r\n\r\n                        if (legend) {\r\n                            layouts.configure(chart, legend, legendOpts);\r\n                            legend.options = legendOpts;\r\n                        } else {\r\n                            createNewLegendAndAttach(chart, legendOpts);\r\n                        }\r\n                    } else if (legend) {\r\n                        layouts.removeBox(chart, legend);\r\n                        delete chart.legend;\r\n                    }\r\n                },\r\n\r\n                afterEvent: function(chart, e) {\r\n                    var legend = chart.legend;\r\n                    if (legend) {\r\n                        legend.handleEvent(e);\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"21\": 21, \"36\": 36 }], 43: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            var noop = helpers.noop;\r\n\r\n            defaults._set('global', {\r\n                title: {\r\n                    display: false,\r\n                    fontStyle: 'bold',\r\n                    fullWidth: true,\r\n                    lineHeight: 1.2,\r\n                    padding: 10,\r\n                    position: 'top',\r\n                    text: '',\r\n                    weight: 2000         // by default greater than legend (1000) to be above\r\n                }\r\n            });\r\n\r\n            /**\r\n             * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\r\n             */\r\n            var Title = Element.extend({\r\n                initialize: function(config) {\r\n                    var me = this;\r\n                    helpers.extend(me, config);\r\n\r\n                    // Contains hit boxes for each dataset (in dataset order)\r\n                    me.legendHitBoxes = [];\r\n                },\r\n\r\n                // These methods are ordered by lifecycle. Utilities then follow.\r\n\r\n                beforeUpdate: noop,\r\n                update: function(maxWidth, maxHeight, margins) {\r\n                    var me = this;\r\n\r\n                    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                    me.beforeUpdate();\r\n\r\n                    // Absorb the master measurements\r\n                    me.maxWidth = maxWidth;\r\n                    me.maxHeight = maxHeight;\r\n                    me.margins = margins;\r\n\r\n                    // Dimensions\r\n                    me.beforeSetDimensions();\r\n                    me.setDimensions();\r\n                    me.afterSetDimensions();\r\n                    // Labels\r\n                    me.beforeBuildLabels();\r\n                    me.buildLabels();\r\n                    me.afterBuildLabels();\r\n\r\n                    // Fit\r\n                    me.beforeFit();\r\n                    me.fit();\r\n                    me.afterFit();\r\n                    //\r\n                    me.afterUpdate();\r\n\r\n                    return me.minSize;\r\n                },\r\n                afterUpdate: noop,\r\n\r\n                //\r\n\r\n                beforeSetDimensions: noop,\r\n                setDimensions: function() {\r\n                    var me = this;\r\n                    // Set the unconstrained dimension before label rotation\r\n                    if (me.isHorizontal()) {\r\n                        // Reset position before calculating rotation\r\n                        me.width = me.maxWidth;\r\n                        me.left = 0;\r\n                        me.right = me.width;\r\n                    } else {\r\n                        me.height = me.maxHeight;\r\n\r\n                        // Reset position before calculating rotation\r\n                        me.top = 0;\r\n                        me.bottom = me.height;\r\n                    }\r\n\r\n                    // Reset padding\r\n                    me.paddingLeft = 0;\r\n                    me.paddingTop = 0;\r\n                    me.paddingRight = 0;\r\n                    me.paddingBottom = 0;\r\n\r\n                    // Reset minSize\r\n                    me.minSize = {\r\n                        width: 0,\r\n                        height: 0\r\n                    };\r\n                },\r\n                afterSetDimensions: noop,\r\n\r\n                //\r\n\r\n                beforeBuildLabels: noop,\r\n                buildLabels: noop,\r\n                afterBuildLabels: noop,\r\n\r\n                //\r\n\r\n                beforeFit: noop,\r\n                fit: function() {\r\n                    var me = this;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var opts = me.options;\r\n                    var display = opts.display;\r\n                    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\r\n                    var minSize = me.minSize;\r\n                    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\r\n                    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\r\n                    var textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\r\n\r\n                    if (me.isHorizontal()) {\r\n                        minSize.width = me.maxWidth; // fill all the width\r\n                        minSize.height = textSize;\r\n                    } else {\r\n                        minSize.width = textSize;\r\n                        minSize.height = me.maxHeight; // fill all the height\r\n                    }\r\n\r\n                    me.width = minSize.width;\r\n                    me.height = minSize.height;\r\n                },\r\n                afterFit: noop,\r\n\r\n                // Shared Methods\r\n                isHorizontal: function() {\r\n                    var pos = this.options.position;\r\n                    return pos === 'top' || pos === 'bottom';\r\n                },\r\n\r\n                // Actually draw the title block on the canvas\r\n                draw: function() {\r\n                    var me = this;\r\n                    var ctx = me.ctx;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var opts = me.options;\r\n                    var globalDefaults = defaults.global;\r\n\r\n                    if (opts.display) {\r\n                        var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\r\n                        var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\r\n                        var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\r\n                        var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n                        var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\r\n                        var offset = lineHeight / 2 + opts.padding;\r\n                        var rotation = 0;\r\n                        var top = me.top;\r\n                        var left = me.left;\r\n                        var bottom = me.bottom;\r\n                        var right = me.right;\r\n                        var maxWidth, titleX, titleY;\r\n\r\n                        ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\r\n                        ctx.font = titleFont;\r\n\r\n                        // Horizontal\r\n                        if (me.isHorizontal()) {\r\n                            titleX = left + ((right - left) / 2); // midpoint of the width\r\n                            titleY = top + offset;\r\n                            maxWidth = right - left;\r\n                        } else {\r\n                            titleX = opts.position === 'left' ? left + offset : right - offset;\r\n                            titleY = top + ((bottom - top) / 2);\r\n                            maxWidth = bottom - top;\r\n                            rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\r\n                        }\r\n\r\n                        ctx.save();\r\n                        ctx.translate(titleX, titleY);\r\n                        ctx.rotate(rotation);\r\n                        ctx.textAlign = 'center';\r\n                        ctx.textBaseline = 'middle';\r\n\r\n                        var text = opts.text;\r\n                        if (helpers.isArray(text)) {\r\n                            var y = 0;\r\n                            for (var i = 0; i < text.length; ++i) {\r\n                                ctx.fillText(text[i], 0, y, maxWidth);\r\n                                y += lineHeight;\r\n                            }\r\n                        } else {\r\n                            ctx.fillText(text, 0, 0, maxWidth);\r\n                        }\r\n\r\n                        ctx.restore();\r\n                    }\r\n                }\r\n            });\r\n\r\n            function createNewTitleBlockAndAttach(chart, titleOpts) {\r\n                var title = new Title({\r\n                    ctx: chart.ctx,\r\n                    options: titleOpts,\r\n                    chart: chart\r\n                });\r\n\r\n                layouts.configure(chart, title, titleOpts);\r\n                layouts.addBox(chart, title);\r\n                chart.titleBlock = title;\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'title',\r\n\r\n                /**\r\n                 * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\r\n                 * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\r\n                 * the plugin, which one will be re-exposed in the chart.js file.\r\n                 * https://github.com/chartjs/Chart.js/pull/2640\r\n                 * @private\r\n                 */\r\n                _element: Title,\r\n\r\n                beforeInit: function(chart) {\r\n                    var titleOpts = chart.options.title;\r\n\r\n                    if (titleOpts) {\r\n                        createNewTitleBlockAndAttach(chart, titleOpts);\r\n                    }\r\n                },\r\n\r\n                beforeUpdate: function(chart) {\r\n                    var titleOpts = chart.options.title;\r\n                    var titleBlock = chart.titleBlock;\r\n\r\n                    if (titleOpts) {\r\n                        helpers.mergeIf(titleOpts, defaults.global.title);\r\n\r\n                        if (titleBlock) {\r\n                            layouts.configure(chart, titleBlock, titleOpts);\r\n                            titleBlock.options = titleOpts;\r\n                        } else {\r\n                            createNewTitleBlockAndAttach(chart, titleOpts);\r\n                        }\r\n                    } else if (titleBlock) {\r\n                        layouts.removeBox(chart, titleBlock);\r\n                        delete chart.titleBlock;\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"21\": 21, \"36\": 36 }], 44: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                // Default config for a category scale\r\n                var defaultConfig = {\r\n                    position: 'bottom'\r\n                };\r\n\r\n                var DatasetScale = Chart.Scale.extend({\r\n                    /**\r\n                    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\r\n                    * else fall back to data.labels\r\n                    * @private\r\n                    */\r\n                    getLabels: function() {\r\n                        var data = this.chart.data;\r\n                        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\r\n                    },\r\n\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var labels = me.getLabels();\r\n                        me.minIndex = 0;\r\n                        me.maxIndex = labels.length - 1;\r\n                        var findIndex;\r\n\r\n                        if (me.options.ticks.min !== undefined) {\r\n                            // user specified min value\r\n                            findIndex = labels.indexOf(me.options.ticks.min);\r\n                            me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\r\n                        }\r\n\r\n                        if (me.options.ticks.max !== undefined) {\r\n                            // user specified max value\r\n                            findIndex = labels.indexOf(me.options.ticks.max);\r\n                            me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\r\n                        }\r\n\r\n                        me.min = labels[me.minIndex];\r\n                        me.max = labels[me.maxIndex];\r\n                    },\r\n\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var labels = me.getLabels();\r\n                        // If we are viewing some subset of labels, slice the original array\r\n                        me.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\r\n                    },\r\n\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        var me = this;\r\n                        var data = me.chart.data;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        if (data.yLabels && !isHorizontal) {\r\n                            return me.getRightValue(data.datasets[datasetIndex].data[index]);\r\n                        }\r\n                        return me.ticks[index - me.minIndex];\r\n                    },\r\n\r\n                    // Used to get data value locations.  Value can either be an index or a numerical value\r\n                    getPixelForValue: function(value, index) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        // 1 is added because we need the length but we have the indexes\r\n                        var offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\r\n\r\n                        // If value is a data object, then index is the index in the data array,\r\n                        // not the index of the scale. We need to change that.\r\n                        var valueCategory;\r\n                        if (value !== undefined && value !== null) {\r\n                            valueCategory = me.isHorizontal() ? value.x : value.y;\r\n                        }\r\n                        if (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\r\n                            var labels = me.getLabels();\r\n                            value = valueCategory || value;\r\n                            var idx = labels.indexOf(value);\r\n                            index = idx !== -1 ? idx : index;\r\n                        }\r\n\r\n                        if (me.isHorizontal()) {\r\n                            var valueWidth = me.width / offsetAmt;\r\n                            var widthOffset = (valueWidth * (index - me.minIndex));\r\n\r\n                            if (offset) {\r\n                                widthOffset += (valueWidth / 2);\r\n                            }\r\n\r\n                            return me.left + Math.round(widthOffset);\r\n                        }\r\n                        var valueHeight = me.height / offsetAmt;\r\n                        var heightOffset = (valueHeight * (index - me.minIndex));\r\n\r\n                        if (offset) {\r\n                            heightOffset += (valueHeight / 2);\r\n                        }\r\n\r\n                        return me.top + Math.round(heightOffset);\r\n                    },\r\n                    getPixelForTick: function(index) {\r\n                        return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        var value;\r\n                        var offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\r\n                        var horz = me.isHorizontal();\r\n                        var valueDimension = (horz ? me.width : me.height) / offsetAmt;\r\n\r\n                        pixel -= horz ? me.left : me.top;\r\n\r\n                        if (offset) {\r\n                            pixel -= (valueDimension / 2);\r\n                        }\r\n\r\n                        if (pixel <= 0) {\r\n                            value = 0;\r\n                        } else {\r\n                            value = Math.round(pixel / valueDimension);\r\n                        }\r\n\r\n                        return value + me.minIndex;\r\n                    },\r\n                    getBasePixel: function() {\r\n                        return this.bottom;\r\n                    }\r\n                });\r\n\r\n                Chart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\r\n            };\r\n        }, {}], 45: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var Ticks = require(25);\r\n\r\n            module.exports = function(Chart) {\r\n                var defaultConfig = {\r\n                    position: 'left',\r\n                    ticks: {\r\n                        callback: Ticks.formatters.linear\r\n                    }\r\n                };\r\n\r\n                var LinearScale = Chart.LinearScaleBase.extend({\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var chart = me.chart;\r\n                        var data = chart.data;\r\n                        var datasets = data.datasets;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var DEFAULT_MIN = 0;\r\n                        var DEFAULT_MAX = 1;\r\n\r\n                        function IDMatches(meta) {\r\n                            return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\r\n                        }\r\n\r\n                        // First Calculate the range\r\n                        me.min = null;\r\n                        me.max = null;\r\n\r\n                        var hasStacks = opts.stacked;\r\n                        if (hasStacks === undefined) {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                if (hasStacks) {\r\n                                    return;\r\n                                }\r\n\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\r\n                                    meta.stack !== undefined) {\r\n                                    hasStacks = true;\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        if (opts.stacked || hasStacks) {\r\n                            var valuesPerStack = {};\r\n\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                var key = [\r\n                                    meta.type,\r\n                                    // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\r\n                                    ((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\r\n                                    meta.stack\r\n                                ].join('.');\r\n\r\n                                if (valuesPerStack[key] === undefined) {\r\n                                    valuesPerStack[key] = {\r\n                                        positiveValues: [],\r\n                                        negativeValues: []\r\n                                    };\r\n                                }\r\n\r\n                                // Store these per type\r\n                                var positiveValues = valuesPerStack[key].positiveValues;\r\n                                var negativeValues = valuesPerStack[key].negativeValues;\r\n\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        positiveValues[index] = positiveValues[index] || 0;\r\n                                        negativeValues[index] = negativeValues[index] || 0;\r\n\r\n                                        if (opts.relativePoints) {\r\n                                            positiveValues[index] = 100;\r\n                                        } else if (value < 0) {\r\n                                            negativeValues[index] += value;\r\n                                        } else {\r\n                                            positiveValues[index] += value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n\r\n                            helpers.each(valuesPerStack, function(valuesForType) {\r\n                                var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\r\n                                var minVal = helpers.min(values);\r\n                                var maxVal = helpers.max(values);\r\n                                me.min = me.min === null ? minVal : Math.min(me.min, minVal);\r\n                                me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\r\n                            });\r\n                        } else {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        if (me.min === null) {\r\n                                            me.min = value;\r\n                                        } else if (value < me.min) {\r\n                                            me.min = value;\r\n                                        }\r\n\r\n                                        if (me.max === null) {\r\n                                            me.max = value;\r\n                                        } else if (value > me.max) {\r\n                                            me.max = value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\r\n                        me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\r\n\r\n                        // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\r\n                        this.handleTickRangeOptions();\r\n                    },\r\n                    getTickLimit: function() {\r\n                        var maxTicks;\r\n                        var me = this;\r\n                        var tickOpts = me.options.ticks;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\r\n                        } else {\r\n                            // The factor of 2 used to scale the font size has been experimentally determined.\r\n                            var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\r\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\r\n                        }\r\n\r\n                        return maxTicks;\r\n                    },\r\n                    // Called after the ticks are built. We need\r\n                    handleDirectionalChanges: function() {\r\n                        if (!this.isHorizontal()) {\r\n                            // We are in a vertical orientation. The top value is the highest. So reverse the array\r\n                            this.ticks.reverse();\r\n                        }\r\n                    },\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n                    },\r\n                    // Utils\r\n                    getPixelForValue: function(value) {\r\n                        // This must be called after fit has been run so that\r\n                        // this.left, this.top, this.right, and this.bottom have been defined\r\n                        var me = this;\r\n                        var start = me.start;\r\n\r\n                        var rightValue = +me.getRightValue(value);\r\n                        var pixel;\r\n                        var range = me.end - start;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            pixel = me.left + (me.width / range * (rightValue - start));\r\n                        } else {\r\n                            pixel = me.bottom - (me.height / range * (rightValue - start));\r\n                        }\r\n                        return pixel;\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var innerDimension = isHorizontal ? me.width : me.height;\r\n                        var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\r\n                        return me.start + ((me.end - me.start) * offset);\r\n                    },\r\n                    getPixelForTick: function(index) {\r\n                        return this.getPixelForValue(this.ticksAsNumbers[index]);\r\n                    }\r\n                });\r\n                Chart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\r\n            };\r\n        }, { \"16\": 16, \"25\": 25, \"36\": 36 }], 46: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Generate a set of linear ticks\r\n             * @param generationOptions the options used to generate the ticks\r\n             * @param dataRange the range of the data\r\n             * @returns {Array<Number>} array of tick values\r\n             */\r\n            function generateTicks(generationOptions, dataRange) {\r\n                var ticks = [];\r\n                // To get a \"nice\" value for the tick spacing, we will use the appropriately named\r\n                // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\r\n                // for details.\r\n\r\n                var spacing;\r\n                if (generationOptions.stepSize && generationOptions.stepSize > 0) {\r\n                    spacing = generationOptions.stepSize;\r\n                } else {\r\n                    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\r\n                    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\r\n                }\r\n                var niceMin = Math.floor(dataRange.min / spacing) * spacing;\r\n                var niceMax = Math.ceil(dataRange.max / spacing) * spacing;\r\n\r\n                // If min, max and stepSize is set and they make an evenly spaced scale use it.\r\n                if (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\r\n                    // If very close to our whole number, use it.\r\n                    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\r\n                        niceMin = generationOptions.min;\r\n                        niceMax = generationOptions.max;\r\n                    }\r\n                }\r\n\r\n                var numSpaces = (niceMax - niceMin) / spacing;\r\n                // If very close to our rounded value, use it.\r\n                if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n                    numSpaces = Math.round(numSpaces);\r\n                } else {\r\n                    numSpaces = Math.ceil(numSpaces);\r\n                }\r\n\r\n                var precision = 1;\r\n                if (spacing < 1) {\r\n                    precision = Math.pow(10, spacing.toString().length - 2);\r\n                    niceMin = Math.round(niceMin * precision) / precision;\r\n                    niceMax = Math.round(niceMax * precision) / precision;\r\n                }\r\n                ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\r\n                for (var j = 1; j < numSpaces; ++j) {\r\n                    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\r\n                }\r\n                ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\r\n\r\n                return ticks;\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                var noop = helpers.noop;\r\n\r\n                Chart.LinearScaleBase = Chart.Scale.extend({\r\n                    getRightValue: function(value) {\r\n                        if (typeof value === 'string') {\r\n                            return +value;\r\n                        }\r\n                        return Chart.Scale.prototype.getRightValue.call(this, value);\r\n                    },\r\n\r\n                    handleTickRangeOptions: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\r\n                        // do nothing since that would make the chart weird. If the user really wants a weird chart\r\n                        // axis, they can manually override it\r\n                        if (tickOpts.beginAtZero) {\r\n                            var minSign = helpers.sign(me.min);\r\n                            var maxSign = helpers.sign(me.max);\r\n\r\n                            if (minSign < 0 && maxSign < 0) {\r\n                                // move the top up to 0\r\n                                me.max = 0;\r\n                            } else if (minSign > 0 && maxSign > 0) {\r\n                                // move the bottom down to 0\r\n                                me.min = 0;\r\n                            }\r\n                        }\r\n\r\n                        var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\r\n                        var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\r\n\r\n                        if (tickOpts.min !== undefined) {\r\n                            me.min = tickOpts.min;\r\n                        } else if (tickOpts.suggestedMin !== undefined) {\r\n                            if (me.min === null) {\r\n                                me.min = tickOpts.suggestedMin;\r\n                            } else {\r\n                                me.min = Math.min(me.min, tickOpts.suggestedMin);\r\n                            }\r\n                        }\r\n\r\n                        if (tickOpts.max !== undefined) {\r\n                            me.max = tickOpts.max;\r\n                        } else if (tickOpts.suggestedMax !== undefined) {\r\n                            if (me.max === null) {\r\n                                me.max = tickOpts.suggestedMax;\r\n                            } else {\r\n                                me.max = Math.max(me.max, tickOpts.suggestedMax);\r\n                            }\r\n                        }\r\n\r\n                        if (setMin !== setMax) {\r\n                            // We set the min or the max but not both.\r\n                            // So ensure that our range is good\r\n                            // Inverted or 0 length range can happen when\r\n                            // ticks.min is set, and no datasets are visible\r\n                            if (me.min >= me.max) {\r\n                                if (setMin) {\r\n                                    me.max = me.min + 1;\r\n                                } else {\r\n                                    me.min = me.max - 1;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (me.min === me.max) {\r\n                            me.max++;\r\n\r\n                            if (!tickOpts.beginAtZero) {\r\n                                me.min--;\r\n                            }\r\n                        }\r\n                    },\r\n                    getTickLimit: noop,\r\n                    handleDirectionalChanges: noop,\r\n\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        // Figure out what the max number of ticks we can support it is based on the size of\r\n                        // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n                        // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n                        // the graph. Make sure we always have at least 2 ticks\r\n                        var maxTicks = me.getTickLimit();\r\n                        maxTicks = Math.max(2, maxTicks);\r\n\r\n                        var numericGeneratorOptions = {\r\n                            maxTicks: maxTicks,\r\n                            min: tickOpts.min,\r\n                            max: tickOpts.max,\r\n                            stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\r\n                        };\r\n                        var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\r\n\r\n                        me.handleDirectionalChanges();\r\n\r\n                        // At this point, we need to update our max and min given the tick values since we have expanded the\r\n                        // range of the scale\r\n                        me.max = helpers.max(ticks);\r\n                        me.min = helpers.min(ticks);\r\n\r\n                        if (tickOpts.reverse) {\r\n                            ticks.reverse();\r\n\r\n                            me.start = me.max;\r\n                            me.end = me.min;\r\n                        } else {\r\n                            me.start = me.min;\r\n                            me.end = me.max;\r\n                        }\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        me.ticksAsNumbers = me.ticks.slice();\r\n                        me.zeroLineIndex = me.ticks.indexOf(0);\r\n\r\n                        Chart.Scale.prototype.convertTicksToLabels.call(me);\r\n                    }\r\n                });\r\n            };\r\n        }, { \"36\": 36 }]\r\n    }, {}, [6])(6)\r\n});\r\n","/*!\r\n * Allowing lists to dynamically expand and collapse.\r\n * Created by Stephen Morley - http://code.stephenmorley.org/ - and released under the terms of the CC0 1.0 Universal legal code:\r\n * http://creativecommons.org/publicdomain/zero/1.0/legalcode\r\n *\r\n * Modified to work with bootstrap/fontAwesome and incorporate cascading checkboxes.\r\n */\r\n(function(root, factory) {\r\n    root.CollapsibleList = factory(root.$);\r\n})(this, function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare CollapsibleList class.\r\n     * @param {Node} element - Node to make collapsible.\r\n     */\r\n    var CollapsibleList = function(element) {\r\n        this.container = $.get(element);\r\n        this.init();\r\n    };\r\n\r\n    CollapsibleList.prototype = {\r\n        init: function() {\r\n            var node = this.container;\r\n            // loop over the list items within this node\r\n            var lis = $.getAll('li', node);\r\n            for (var i = 0; i < lis.length; i++) {\r\n                // prevent text from being selected unintentionally\r\n                $.on(lis[i], 'mousedown', function(e) { e.preventDefault(); }, false);\r\n                // add the click listener\r\n                $.on(lis[i], 'click', this.createClickListener(lis[i]), false);\r\n                // close the unordered lists within this list item\r\n                this.toggle(lis[i]);\r\n\r\n                // check any parent items if this item is checked\r\n                node = $.get('input[type=\"checkbox\"]', lis[i]);\r\n                if (node.checked) {\r\n                    var p = node;\r\n                    while (this.container !== (p = p.parentNode)) {\r\n                        if (p.nodeName === 'LI') {\r\n                            var parent = p.parentNode.parentNode;\r\n                            if (parent.nodeName === 'LI') {\r\n                                var pi = $.get('input[type=\"checkbox\"]', parent);\r\n                                if (pi && pi !== node) {\r\n                                    pi.checked = true;\r\n                                }\r\n                                this.toggle(parent, true);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Toggles the display status of any unordered list elements within the specified node.\r\n         * @param {Node} node - Node containing the unordered list elements.\r\n         * @returns {Function} Click handler function.\r\n         */\r\n        createClickListener: function(node) {\r\n            var self = this;\r\n            return function(e) {\r\n                if (!e) {\r\n                    return;\r\n                }\r\n\r\n                // find the list item containing the target of the event\r\n                var elem = $.coalesce(e.target, e.srcElement);\r\n\r\n                // handle checking/unchecking buttons\r\n                if (elem.nodeName === 'INPUT') {\r\n                    var checked = elem.checked;\r\n\r\n                    // first toggle the check for all of the children\r\n                    var inputs = $.getAll('ul input[type=\"checkbox\"]', $.closest('li', elem));\r\n                    i = inputs.length;\r\n                    while (i--) {\r\n                        inputs[i].checked = checked;\r\n                    }\r\n\r\n                    // then check all parents. if any of the children of a checkbox are checked, then it should be checked.\r\n                    var checkedRelative = false;\r\n                    var p = elem;\r\n                    while (self.container !== (p = p.parentNode)) {\r\n                        if (p.nodeName === 'LI') {\r\n                            // see if anybody else on this node level is checked\r\n                            var relatives = $.getAll('input[type=\"checkbox\"]', p.parentNode);\r\n                            var i = relatives.length;\r\n                            checkedRelative = false;\r\n                            while (i--) {\r\n                                if (relatives[i].checked) {\r\n                                    checkedRelative = true;\r\n                                }\r\n                            }\r\n\r\n                            if (p.parentNode.parentNode !== self.container) {\r\n                                var pi = $.get('input[type=\"checkbox\"]', p.parentNode.parentNode);\r\n                                if (pi && pi !== elem) {\r\n                                    pi.checked = checkedRelative || checked;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                if ($.hasClass(elem, 'form-group') || $.hasClass(elem, 'form-icon') || (elem.parentNode && $.hasClass(elem.parentNode, 'form-group'))) {\r\n                    // prevent toggling tree when checking/unchecking an element\r\n                    return;\r\n                }\r\n\r\n                // now handle the tree itself\r\n                while (elem.nodeName !== 'LI') {\r\n                    elem = elem.parentNode;\r\n                }\r\n\r\n                // toggle the state of the node if it was the target of the event\r\n                if (elem === node) {\r\n                    self.toggle(node);\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Opens or closes the unordered list elements directly within the specified node.\r\n         * @param {Node} node - Node containing the unordered list elements.\r\n         * @param {bool} forceOpen - Set to true to force the node to be open regardless of current status.\r\n         */\r\n        toggle: function(node, forceOpen) {\r\n            // determine whether to open or close the unordered lists\r\n            var open = $.coalesce(forceOpen, $.hasClass(node, 'collapsible-list-closed'));\r\n\r\n            // loop over the unordered list elements with the node\r\n            var uls = $.getAll('ul', node);\r\n            for (var i = 0; i < uls.length; i++) {\r\n                // find the parent list item of this unordered list\r\n                var li = uls[i];\r\n                while (li.nodeName !== 'LI') {\r\n                    li = li.parentNode;\r\n                }\r\n\r\n                // style the unordered list if it is directly within this node\r\n                if (li === node) {\r\n                    uls[i].style.display = open ? 'block' : 'none';\r\n                }\r\n            }\r\n\r\n            // remove the current class from the node\r\n            $.removeClass(node, 'collapsible-list-' + (open ? 'closed' : 'open'));\r\n\r\n            // if the node contains unordered lists, set its class\r\n            if (uls.length) {\r\n                $.addClass(node, 'collapsible-list-' + (open ? 'open' : 'closed'));\r\n            }\r\n        }\r\n    };\r\n\r\n    return CollapsibleList;\r\n});\r\n","/*!\r\n * Wraps functionality needed for creating charts using Chart.js.\r\n */\r\n(function(root, factory) {\r\n    root.DashChart = factory(root.$, root.Alertify, root.Chart, root.flatpicker);\r\n})(this, function($, Alertify, Chart, flatpicker) {\r\n    'use strict';\r\n\r\n    // Change global chart settings.\r\n    Chart.defaults.global.responsive = true;\r\n    Chart.defaults.global.maintainAspectRatio = false;\r\n    Chart.defaults.global.title.display = false;\r\n    Chart.defaults.global.legend.position = 'bottom';\r\n    Chart.defaults.global.legend.labels.fontSize = 16;\r\n    Chart.defaults.global.legend.labels.fontFamily = 'Calibri';\r\n    Chart.defaults.global.layout = { padding: 10 };\r\n    Chart.defaults.scale.ticks.fontFamily = 'Calibri';\r\n    Chart.defaults.scale.ticks.fontSize = 12;\r\n\r\n    /**\r\n     * Declare DashChart class.\r\n     * @param {Node} content - DOM node that contains the chart.\r\n     * @param {bool} showLegend - Show or hide the chart legend.\r\n     * @param {Function} dataFn - Function to call if after loading data. Runs before other functions.\r\n     * @param {Function} errorFn - Function to call if an error occurs loading data.\r\n     * @param {Function} toggleExportFn - Function to enable/disable export.\r\n     */\r\n    var DashChart = function(content, showLegend, dataFn, errorFn, toggleExportFn) {\r\n        this.content = content;\r\n        this.url = content.getAttribute('data-url');\r\n        this.canvas = $.get('.chart-canvas', content);\r\n        this.showLegend = $.coalesce(showLegend, true);\r\n        this.dataFn = dataFn;\r\n        this.errorFn = errorFn;\r\n        this.toggleExportFn = toggleExportFn;\r\n        this.chart = null;\r\n        this.events = { resize: $.debounce(this.resize.bind(this), 50) };\r\n        this.initDate = new Date();\r\n        $.on(window, 'resize', this.events.resize);\r\n        this.run();\r\n    };\r\n\r\n    DashChart.prototype = {\r\n        /**\r\n         * Generate a random number within range.\r\n         * @param {number[]} range - Min and max value.\r\n         * @returns {number} Random number.\r\n         */\r\n        randomWithin: function(range) {\r\n            return Math.floor(range[0] + Math.random() * (range[1] + 1 - range[0]));\r\n        },\r\n\r\n        /**\r\n         * Generates a random color and a lighter partner color.\r\n         * @returns {string[]} Color codes.\r\n         */\r\n        randomColor: function() {\r\n            var hsl = [this.randomWithin([0, 360]), this.randomWithin([50, 100]), this.randomWithin([30, 80])];\r\n            return [\r\n                'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%, 1)',\r\n                'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%, .2)'\r\n            ];\r\n        },\r\n\r\n        /**\r\n         * Generates an array of random colors.\r\n         * @param {number} cnt - Number of colors to generate.\r\n         * @returns {string[]} Array of color codes.\r\n         */\r\n        randomColors: function(cnt) {\r\n            var result = new Array(cnt);\r\n            for (var i = 0; i < cnt; i++) {\r\n                result[i] = this.randomColor()[0];\r\n            }\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Parse a hex color into a hsla color and a lighter partner color.\r\n         * @param {string} hex - Hex color code with leading '#'.\r\n         * @returns {string[]} Color codes.\r\n         */\r\n        parseColor: function(hex) {\r\n            if (!hex) {\r\n                return this.randomColor();\r\n            }\r\n            var hsl = $.colors.rgb2hsl($.colors.hex2rgb(hex));\r\n            return [\r\n                'hsla(' + (hsl[0] * 360).toFixed(0) + ',' + (hsl[1] * 100).toFixed(0) + '%,' + (hsl[2] * 100).toFixed(0) + '%, 1)',\r\n                'hsla(' + (hsl[0] * 360).toFixed(0) + ',' + (hsl[1] * 100).toFixed(0) + '%,' + (hsl[2] * 100).toFixed(0) + '%, .2)'\r\n            ];\r\n        },\r\n\r\n        run: function() {\r\n            var self = this;\r\n\r\n            $.show($.get('.chart-spinner', self.content));\r\n            $.hide($.get('.chart-error', self.content));\r\n            $.hide(self.canvas.parentNode);\r\n            if (self.toggleExportFn) {\r\n                self.toggleExportFn(false);\r\n            }\r\n\r\n            $.ajax({\r\n                method: 'POST',\r\n                url: self.url,\r\n                block: false\r\n            }, function(data) {\r\n                if (data.updatedDate && new Date(data.updatedDate) > this.initDate) {\r\n                    $.content.forceRefresh();\r\n                    return;\r\n                }\r\n                if ($.isNull(data.ranges) || data.ranges.length === 0) {\r\n                    return;\r\n                }\r\n\r\n                var ranges = $.isArray(data.ranges) ? data.ranges : [data];\r\n                if (!ranges.some(function(x) { return x.rows && x.rows.length; })) {\r\n                    $.hide($.get('.chart-spinner', self.content));\r\n                    return;\r\n                }\r\n\r\n                $.hide($.get('.chart-spinner', self.content));\r\n                $.hide($.get('.chart-error', self.content));\r\n                $.show(self.canvas.parentNode);\r\n                if (self.toggleExportFn) {\r\n                    self.toggleExportFn(true);\r\n                }\r\n\r\n                if (self.chart) {\r\n                    // this code is used for refreshing dashboard chart data, but won't be used on the chart dialog\r\n                    ranges.forEach(function(x, i) {\r\n                        self.chart.data.datasets[i].data = ranges[i].rows;\r\n                        self.chart.data.datasets[i].label = ranges[i].yTitle;\r\n                    });\r\n                    self.chart.data.labels = ranges[0].labels;\r\n                    self.chart.update();\r\n                } else {\r\n                    var scales = {};\r\n                    var tooltips = { callbacks: {} };\r\n                    if (ranges[0].xType === 'currency') {\r\n                        var currencyFormat = $.accounting.parseFormat(ranges[0].currencyFormat);\r\n                        scales.xAxes = [{\r\n                            ticks: {\r\n                                callback: function(value) {\r\n                                    return $.accounting.formatMoney(value, currencyFormat);\r\n                                }\r\n                            }\r\n                        }];\r\n                        tooltips.callbacks.title = function(tooltipItems, data) {\r\n                            var title = '';\r\n                            if (tooltipItems.length > 0) {\r\n                                if (tooltipItems[0].xLabel) {\r\n                                    title = tooltipItems[0].xLabel;\r\n                                } else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n                                    title = data.labels[tooltipItems[0].index];\r\n                                }\r\n                                title = $.accounting.formatMoney(title, currencyFormat);\r\n                            }\r\n                            return title;\r\n                        };\r\n                    } else if (ranges[0].xType === 'date') {\r\n                        var dateFormat = ranges[0].dateFormat;\r\n                        scales.xAxes = [{\r\n                            ticks: {\r\n                                callback: function(value) {\r\n                                    return flatpicker.formatDate(new Date(value), dateFormat);\r\n                                }\r\n                            }\r\n                        }];\r\n                        tooltips.callbacks.title = function(tooltipItems, data) {\r\n                            var title = '';\r\n                            if (tooltipItems.length > 0) {\r\n                                if (tooltipItems[0].xLabel) {\r\n                                    title = tooltipItems[0].xLabel;\r\n                                } else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n                                    title = data.labels[tooltipItems[0].index];\r\n                                }\r\n                                title = flatpicker.formatDate(new Date(title), dateFormat);\r\n                            }\r\n                            return title;\r\n                        };\r\n                    }\r\n\r\n                    var chartType = data.type.toLowerCase();\r\n                    var isRadial = chartType === 'pie' || chartType === 'doughnut';\r\n                    var datasets = [];\r\n                    scales.yAxes = [];\r\n                    ranges.forEach(function(x, i) {\r\n                        var color = self.parseColor(x.color);\r\n                        datasets.push({\r\n                            backgroundColor: color[0],\r\n                            borderColor: 'rgb(255, 255, 255)',\r\n                            borderWidth: 2,\r\n                            data: x.rows,\r\n                            label: x.yTitle,\r\n                            yAxisID: 'y-axis-' + i\r\n                        });\r\n\r\n                        var ticks = {};\r\n                        if (x.yType === 'currency') {\r\n                            var currencyFormat = $.accounting.parseFormat(x.currencyFormat);\r\n                            ticks.callback = function(value) {\r\n                                return $.accounting.formatMoney(value, currencyFormat);\r\n                            };\r\n                            tooltips.callbacks.label = function(item) {\r\n                                return $.accounting.formatMoney(item.yLabel, currencyFormat);\r\n                            };\r\n                        } else if (x.yType === 'date') {\r\n                            var dateFormat = x.dateFormat;\r\n                            ticks.callback = function(value) {\r\n                                return flatpicker.formatDate(new Date(value), dateFormat);\r\n                            };\r\n                            tooltips.callbacks.label = function(item) {\r\n                                return flatpicker.formatDate(new Date(item.yLabel), dateFormat);\r\n                            };\r\n                        }\r\n\r\n                        if (!isRadial) {\r\n                            scales.yAxes.push({\r\n                                id: 'y-axis-' + i,\r\n                                position: i === 0 ? 'left' : 'right',\r\n                                ticks: ticks,\r\n                                gridLines: {\r\n                                    color: color[1]\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    var chartData = {\r\n                        type: chartType === 'horizontalbar' ? 'horizontalBar' : chartType,\r\n                        options: {\r\n                            scales: isRadial ? null : scales,\r\n                            tooltips: tooltips,\r\n                            legend: { display: self.showLegend }\r\n                        },\r\n                        data: {\r\n                            labels: ranges[0].labels,\r\n                            datasets: datasets\r\n                        }\r\n                    };\r\n\r\n                    if (isRadial) {\r\n                        chartData.data.datasets[0].backgroundColor = self.randomColors(ranges[0].rows.length);\r\n                    }\r\n\r\n                    self.chart = new Chart(self.canvas.getContext('2d'), chartData);\r\n                }\r\n            }, function() {\r\n                if ($.isFunction(self.errorFn)) {\r\n                    if (!self.errorFn()) {\r\n                        return;\r\n                    }\r\n                }\r\n                $.hide($.get('.chart-spinner', self.content));\r\n                $.show($.get('.chart-error', self.content));\r\n                if (self.toggleExportFn) {\r\n                    self.toggleExportFn(false);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Eventually this may not be necessary, but responsive functionality for Chart.js does not seem to work correctly.\r\n         */\r\n        resize: function() {\r\n            if (this.chart) {\r\n                this.chart.resize();\r\n            }\r\n        },\r\n\r\n        destroy: function() {\r\n            $.destroy(this.chart);\r\n            if (this.events) {\r\n                $.off(window, 'resize', this.events.resize);\r\n            }\r\n        }\r\n    };\r\n\r\n    return DashChart;\r\n});\r\n","/*!\r\n * Draggabilly PACKAGED v2.1.1\r\n * Make that shiz draggable\r\n * http://draggabilly.desandro.com\r\n * MIT license\r\n *\r\n * Modified to remove jQuery completely.\r\n */\r\n\r\n/*!\r\n * getSize v2.0.2\r\n * measure size of elements\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    root.getSize = factory(root.$);\r\n})(this, function factory($) {\r\n    /**\r\n     * Get a number from a string, not a percentage.\r\n     * @param {string} value - String to parse.\r\n     * @returns {Number} Returns the number.\r\n     */\r\n    function getStyleSize(value) {\r\n        var num = parseFloat(value);\r\n        // not a percent like '100%', and a number\r\n        return value.indexOf('%') === -1 && !isNaN(num) && num;\r\n    }\r\n\r\n    var measurements = [\r\n        'paddingLeft',\r\n        'paddingRight',\r\n        'paddingTop',\r\n        'paddingBottom',\r\n        'marginLeft',\r\n        'marginRight',\r\n        'marginTop',\r\n        'marginBottom',\r\n        'borderLeftWidth',\r\n        'borderRightWidth',\r\n        'borderTopWidth',\r\n        'borderBottomWidth'\r\n    ];\r\n\r\n    var measurementsLength = measurements.length;\r\n\r\n    /**\r\n     * Build the size measurements for a hidden element.\r\n     * @returns {Object} Measurements for the element.\r\n     */\r\n    function getZeroSize() {\r\n        var size = {\r\n            width: 0,\r\n            height: 0,\r\n            innerWidth: 0,\r\n            innerHeight: 0,\r\n            outerWidth: 0,\r\n            outerHeight: 0\r\n        };\r\n        for (var i = 0; i < measurementsLength; i++) {\r\n            size[measurements[i]] = 0;\r\n        }\r\n        return size;\r\n    }\r\n\r\n    var isSetup = false;\r\n    var isBoxSizeOuter;\r\n\r\n    /**\r\n     * Setup the instance.\r\n     */\r\n    function setup() {\r\n        // setup once\r\n        if (isSetup) {\r\n            return;\r\n        }\r\n        isSetup = true;\r\n\r\n        /**\r\n         * WebKit measures the outer-width on style.width on border-box elems\r\n         * IE & Firefox<29 measures the inner-width\r\n         */\r\n        var div = document.createElement('div');\r\n        $.style(div, { width: '200px', padding: '1px 2px 3px 4px', borderStyle: 'solid', borderWidth: '1px 2px 3px 4px', boxSizing: 'border-box' });\r\n\r\n        var body = document.body || document.documentElement;\r\n        body.appendChild(div);\r\n        var style = getComputedStyle(div);\r\n\r\n        getSize.isBoxSizeOuter = isBoxSizeOuter = getStyleSize(style.width) === 200;\r\n        body.removeChild(div);\r\n    }\r\n\r\n    /**\r\n     * Get the dimensions of a node.\r\n     * @param {Node|string} elem - Node object or query selector.\r\n     * @returns {Object} Dimensions for node.\r\n     */\r\n    function getSize(elem) {\r\n        setup();\r\n\r\n        elem = $.get(elem);\r\n        if (!$.isNode(elem)) {\r\n            return;\r\n        }\r\n\r\n        var style = getComputedStyle(elem);\r\n\r\n        // if hidden, everything is 0\r\n        if (style.display === 'none') {\r\n            return getZeroSize();\r\n        }\r\n\r\n        var size = { width: elem.offsetWidth, height: elem.offsetHeight };\r\n        var isBorderBox = size.isBorderBox = style.boxSizing === 'border-box';\r\n\r\n        // get all measurements\r\n        for (var i = 0; i < measurementsLength; i++) {\r\n            var measurement = measurements[i];\r\n            var value = style[measurement];\r\n            var num = parseFloat(value);\r\n            // any 'auto', 'medium' value will be 0\r\n            size[measurement] = !isNaN(num) ? num : 0;\r\n        }\r\n\r\n        var paddingWidth = size.paddingLeft + size.paddingRight;\r\n        var paddingHeight = size.paddingTop + size.paddingBottom;\r\n        var marginWidth = size.marginLeft + size.marginRight;\r\n        var marginHeight = size.marginTop + size.marginBottom;\r\n        var borderWidth = size.borderLeftWidth + size.borderRightWidth;\r\n        var borderHeight = size.borderTopWidth + size.borderBottomWidth;\r\n        var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\r\n\r\n        // overwrite width and height if we can get it from style\r\n        var styleWidth = getStyleSize(style.width);\r\n        if (styleWidth !== false) {\r\n            // add padding and border unless it's already including it\r\n            size.width = styleWidth + (isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth);\r\n        }\r\n\r\n        var styleHeight = getStyleSize(style.height);\r\n        if (styleHeight !== false) {\r\n            // add padding and border unless it's already including it\r\n            size.height = styleHeight + (isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight);\r\n        }\r\n\r\n        size.innerWidth = size.width - (paddingWidth + borderWidth);\r\n        size.innerHeight = size.height - (paddingHeight + borderHeight);\r\n        size.outerWidth = size.width + marginWidth;\r\n        size.outerHeight = size.height + marginHeight;\r\n\r\n        return size;\r\n    }\r\n\r\n    return getSize;\r\n});\r\n\r\n/**\r\n * EvEmitter v1.0.3\r\n * Lil' event emitter\r\n * MIT License\r\n */\r\n\r\n/* jshint unused: true, undef: true, strict: true */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.EvEmitter = factory();\r\n}(this, function() {\r\n    /**\r\n     * Constructor for the event emitter.\r\n     */\r\n    function EvEmitter() { }\r\n\r\n    EvEmitter.prototype = {\r\n        /**\r\n         * Add an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Function} listener - Callback function\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        on: function(eventName, listener) {\r\n            if (!eventName || !listener) {\r\n                return;\r\n            }\r\n            // set events hash\r\n            var events = this._events = this._events || {};\r\n            // set listeners array\r\n            var listeners = events[eventName] = events[eventName] || [];\r\n            // only add once\r\n            if (listeners.indexOf(listener) === -1) {\r\n                listeners.push(listener);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Remove an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Function} listener - Callback function\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        off: function(eventName, listener) {\r\n            var listeners = this._events && this._events[eventName];\r\n            if (!listeners || !listeners.length) {\r\n                return;\r\n            }\r\n            var index = listeners.indexOf(listener);\r\n            if (index !== -1) {\r\n                listeners.splice(index, 1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Dispatch an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Array} args - Arguments for the callback.\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        emitEvent: function(eventName, args) {\r\n            var listeners = this._events && this._events[eventName];\r\n            if (!listeners || !listeners.length) {\r\n                return;\r\n            }\r\n            args = args || [];\r\n            listeners.forEach(function(x) {\r\n                x.apply(this, args);\r\n            });\r\n            return this;\r\n        }\r\n    };\r\n\r\n    return EvEmitter;\r\n}));\r\n\r\n/*!\r\n * Unipointer v2.1.0\r\n * base class for doing one thing with pointer event\r\n * MIT license\r\n */\r\n\r\n/*jshint browser: true, undef: true, unused: true, strict: true */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Unipointer = factory(root.$, root, root.EvEmitter);\r\n}(this, function factory($, root, EvEmitter) {\r\n    /**\r\n     * Constructor for the Unipointer\r\n     */\r\n    function Unipointer() { }\r\n\r\n    // inherit EvEmitter\r\n    var proto = Unipointer.prototype = Object.create(EvEmitter.prototype);\r\n\r\n    /**\r\n     * Add an event to start dragging.\r\n     * @param {Node} elem - Node to add the event to.\r\n     */\r\n    proto.bindStartEvent = function(elem) {\r\n        this._bindStartEvent(elem, true);\r\n    };\r\n\r\n    /**\r\n     * Remove an event to start dragging.\r\n     * @param {Node} elem - Node to remove the event from.\r\n     */\r\n    proto.unbindStartEvent = function(elem) {\r\n        this._bindStartEvent(elem, false);\r\n    };\r\n\r\n    /**\r\n     * Add/remove the event to start dragging.\r\n     * @param {Node} elem - Node to add/remove the event to.\r\n     * @param {Boolean} isBind - will unbind if falsey.\r\n     * @private\r\n     */\r\n    proto._bindStartEvent = function(elem, isBind) {\r\n        var bindMethod = $.coalesce(isBind, true) ? 'addEventListener' : 'removeEventListener';\r\n\r\n        if (window.navigator.pointerEnabled) {\r\n            // W3C Pointer Events, IE11. See https://coderwall.com/p/mfreca\r\n            elem[bindMethod]('pointerdown', this);\r\n        } else if (window.navigator.msPointerEnabled) {\r\n            // IE10 Pointer Events\r\n            elem[bindMethod]('MSPointerDown', this);\r\n        } else {\r\n            // listen for both, for devices like Chrome Pixel\r\n            elem[bindMethod]('mousedown', this);\r\n            elem[bindMethod]('touchstart', this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Trigger handler methods for events\r\n     * @param {Event} event - Event to trigger.\r\n     */\r\n    proto.handleEvent = function(event) {\r\n        var method = 'on' + event.type;\r\n        if (this[method]) {\r\n            this[method](event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns the touch that we're keeping track of.\r\n     * @param {Touch[]} touches - Touch history\r\n     * @returns {Touch} Touch event.\r\n     */\r\n    proto.getTouch = function(touches) {\r\n        return $.findByKey(touches, 'identifier', this.pointerIdentifier);\r\n    };\r\n\r\n    /**\r\n     * Handle a mouse click.\r\n     * @param {Event} event - Click event.\r\n     */\r\n    proto.onmousedown = function(event) {\r\n        // dismiss clicks from right or middle buttons\r\n        var button = event.button;\r\n        if (button && (button !== 0 && button !== 1)) {\r\n            return;\r\n        }\r\n        this._pointerDown(event, event);\r\n    };\r\n\r\n    /**\r\n     * Handle a touch.\r\n     * @param {Touch} event - Touch event.\r\n     */\r\n    proto.ontouchstart = function(event) {\r\n        this._pointerDown(event, event.changedTouches[0]);\r\n    };\r\n\r\n    /**\r\n     * Handle a mouse click for IE.\r\n     * @param {Event} event - Click event.\r\n     */\r\n    proto.onMSPointerDown = proto.onpointerdown = function(event) {\r\n        this._pointerDown(event, event);\r\n    };\r\n\r\n    /**\r\n     * Start a click/touch event.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerDown = function(event, pointer) {\r\n        // dismiss other pointers\r\n        if (this.isPointerDown) {\r\n            return;\r\n        }\r\n\r\n        this.isPointerDown = true;\r\n        // save pointer identifier to match up touch events\r\n        // pointerId for pointer events, touch.indentifier for touch events\r\n        this.pointerIdentifier = pointer.pointerId !== undefined ? pointer.pointerId : pointer.identifier;\r\n        this.pointerDown(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Bind events after the start of a click/touch event.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        this._bindPostStartEvents(event);\r\n        this.emitEvent('pointerDown', [event, pointer]);\r\n    };\r\n\r\n    // hash of events to be bound after start event\r\n    var postStartEvents = {\r\n        mousedown: ['mousemove', 'mouseup'],\r\n        touchstart: ['touchmove', 'touchend', 'touchcancel'],\r\n        pointerdown: ['pointermove', 'pointerup', 'pointercancel'],\r\n        MSPointerDown: ['MSPointerMove', 'MSPointerUp', 'MSPointerCancel']\r\n    };\r\n\r\n    /**\r\n     * Add all of the events that are needed after start dragging.\r\n     * @param {Event} event - Original click/touch event.\r\n     * @private\r\n     */\r\n    proto._bindPostStartEvents = function(event) {\r\n        if (!event) {\r\n            return;\r\n        }\r\n        // get proper events to match start event\r\n        var events = postStartEvents[event.type];\r\n        // bind events to node\r\n        events.forEach(function(eventName) {\r\n            window.addEventListener(eventName, this);\r\n        }, this);\r\n        // save these arguments\r\n        this._boundPointerEvents = events;\r\n    };\r\n\r\n    /**\r\n     * Remove all of the events that are needed after start dragging.\r\n     * @param {Event} event - Original click/touch event.\r\n     * @private\r\n     */\r\n    proto._unbindPostStartEvents = function() {\r\n        // check for _boundEvents, in case dragEnd triggered twice (old IE8 bug)\r\n        if (!this._boundPointerEvents) {\r\n            return;\r\n        }\r\n        this._boundPointerEvents.forEach(function(eventName) {\r\n            window.removeEventListener(eventName, this);\r\n        }, this);\r\n\r\n        delete this._boundPointerEvents;\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse moves.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onmousemove = function(event) {\r\n        this._pointerMove(event, event);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse moves for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerMove = proto.onpointermove = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerMove(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch moves.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchmove = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerMove(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer move from all the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerMove = function(event, pointer) {\r\n        this.pointerMove(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer move event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        this.emitEvent('pointerMove', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse button is released.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onmouseup = function(event) {\r\n        this._pointerUp(event, event);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse button is released for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerUp = proto.onpointerup = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerUp(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch is released.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchend = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerUp(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer up from all the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerUp = function(event, pointer) {\r\n        this._pointerDone();\r\n        this.pointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer up event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        this.emitEvent('pointerUp', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Event handler for when the dragging stops.\r\n     * @private\r\n     */\r\n    proto._pointerDone = function() {\r\n        // reset properties\r\n        this.isPointerDown = false;\r\n        delete this.pointerIdentifier;\r\n        // remove events\r\n        this._unbindPostStartEvents();\r\n        this.pointerDone();\r\n    };\r\n\r\n    proto.pointerDone = $.noop;\r\n\r\n    /**\r\n     * Event handler when the mouse click is canceled for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerCancel = proto.onpointercancel = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerCancel(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch is canceled.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchcancel = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerCancel(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer cancel from all of the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerCancel = function(event, pointer) {\r\n        this._pointerDone();\r\n        this.pointerCancel(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer cancel event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerCancel = function(event, pointer) {\r\n        this.emitEvent('pointerCancel', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Utility function for getting x/y coords from event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @returns {Object} Object with x & y coordinates.\r\n     */\r\n    Unipointer.getPointerPoint = function(pointer) {\r\n        return {\r\n            x: pointer.pageX,\r\n            y: pointer.pageY\r\n        };\r\n    };\r\n\r\n    return Unipointer;\r\n}));\r\n\r\n/*!\r\n * Unidragger v2.1.0\r\n * Draggable base class\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Unidragger = factory(root.$, root, root.Unipointer);\r\n}(this, function factory($, root, Unipointer) {\r\n    /**\r\n     * Unidragger constructor.\r\n     */\r\n    function Unidragger() { }\r\n\r\n    /**\r\n     * Inherit Unipointer & EvEmitter\r\n     */\r\n    var proto = Unidragger.prototype = Object.create(Unipointer.prototype);\r\n\r\n    /**\r\n     * Add events for drag handle.\r\n     */\r\n    proto.bindHandles = function() {\r\n        this._bindHandles(true);\r\n    };\r\n\r\n    /**\r\n     * Remove events for drag handle.\r\n     */\r\n    proto.unbindHandles = function() {\r\n        this._bindHandles(false);\r\n    };\r\n\r\n    /**\r\n     * Handle adding/removing events for the drag handle.\r\n     * @param {Bool} isBind - Unbind if falsey.\r\n     */\r\n    proto._bindHandles = function(isBind) {\r\n        isBind = $.coalesce(isBind, true);\r\n        // extra bind logic\r\n        var binderExtra;\r\n        var navigator = window.navigator;\r\n        if (navigator.pointerEnabled || navigator.msPointerEnabled) {\r\n            var prop = navigator.pointerEnabled ? 'touchAction' : 'msTouchAction';\r\n            binderExtra = function(handle) {\r\n                // disable scrolling on the element\r\n                handle.style[prop] = isBind ? 'none' : '';\r\n            };\r\n        } else {\r\n            binderExtra = $.noop;\r\n        }\r\n        // bind each handle\r\n        var bindMethod = isBind ? 'addEventListener' : 'removeEventListener';\r\n        for (var i = 0; i < this.handles.length; i++) {\r\n            var handle = this.handles[i];\r\n            this._bindStartEvent(handle, isBind);\r\n            binderExtra(handle);\r\n            handle[bindMethod]('click', this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Pointer start\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        // dismiss range sliders\r\n        if (event.target.nodeName === 'INPUT' && event.target.type === 'range') {\r\n            // reset pointerDown logic\r\n            this.isPointerDown = false;\r\n            delete this.pointerIdentifier;\r\n            return;\r\n        }\r\n\r\n        this._dragPointerDown(event, pointer);\r\n        // kludge to blur focused inputs in dragger\r\n        var focused = document.activeElement;\r\n        if (focused && focused.blur) {\r\n            focused.blur();\r\n        }\r\n        // bind move and end events\r\n        this._bindPostStartEvents(event);\r\n        this.emitEvent('pointerDown', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Base pointer down logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragPointerDown = function(event, pointer) {\r\n        // track to see when dragging starts\r\n        this.pointerDownPoint = Unipointer.getPointerPoint(pointer);\r\n        if (this.canPreventDefaultOnPointerDown(event, pointer)) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Overwriteable method so Flickity can prevent for scrolling\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @returns {Bool} True if allowed to prevent default event, else false.\r\n     */\r\n    proto.canPreventDefaultOnPointerDown = function(event) {\r\n        // prevent default, unless touchstart or <select>\r\n        return event.target.nodeName !== 'SELECT';\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        var moveVector = this._dragPointerMove(event, pointer);\r\n        this.emitEvent('pointerMove', [event, pointer, moveVector]);\r\n        this._dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Base pointer move logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @returns {Object} Object with x & y coordinates.\r\n     */\r\n    proto._dragPointerMove = function(event, pointer) {\r\n        var movePoint = Unipointer.getPointerPoint(pointer);\r\n        var moveVector = {\r\n            x: movePoint.x - this.pointerDownPoint.x,\r\n            y: movePoint.y - this.pointerDownPoint.y\r\n        };\r\n        // start drag if pointer has moved far enough to start drag\r\n        if (!this.isDragging && this.hasDragStarted(moveVector)) {\r\n            this._dragStart(event, pointer);\r\n        }\r\n        return moveVector;\r\n    };\r\n\r\n    /**\r\n     * Check if pointer has moved far enough to start drag.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     * @returns {Bool} True if moved far enough to count as move.\r\n     */\r\n    proto.hasDragStarted = function(moveVector) {\r\n        return Math.abs(moveVector.x) > 3 || Math.abs(moveVector.y) > 3;\r\n    };\r\n\r\n    /**\r\n     * Pointer up.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        this.emitEvent('pointerUp', [event, pointer]);\r\n        this._dragPointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Handle mouse/touch up.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragPointerUp = function(event, pointer) {\r\n        if (this.isDragging) {\r\n            this._dragEnd(event, pointer);\r\n        } else {\r\n            // pointer didn't move enough for drag to start\r\n            this._staticClick(event, pointer);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Base drag start logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._dragStart = function(event, pointer) {\r\n        this.isDragging = true;\r\n        this.dragStartPoint = Unipointer.getPointerPoint(pointer);\r\n        this.isPreventingClicks = true;\r\n        this.dragStart(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag start event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragStart = function(event, pointer) {\r\n        this.emitEvent('dragStart', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Base drag move logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     * @private\r\n     */\r\n    proto._dragMove = function(event, pointer, moveVector) {\r\n        // do not drag if not dragging yet\r\n        if (!this.isDragging) {\r\n            return;\r\n        }\r\n        this.dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag move event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     */\r\n    proto.dragMove = function(event, pointer, moveVector) {\r\n        event.preventDefault();\r\n        this.emitEvent('dragMove', [event, pointer, moveVector]);\r\n    };\r\n\r\n    /**\r\n     * Base logic for drag end.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragEnd = function(event, pointer) {\r\n        this.isDragging = false;\r\n        // re-enable clicking async\r\n        setTimeout(function() {\r\n            delete this.isPreventingClicks;\r\n        }.bind(this));\r\n        this.dragEnd(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag end event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragEnd = function(event, pointer) {\r\n        this.emitEvent('dragEnd', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Handle all clicks and prevent clicks when dragging\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     */\r\n    proto.onclick = function(event) {\r\n        if (this.isPreventingClicks) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Triggered after pointer down & up with no/tiny movement.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._staticClick = function(event, pointer) {\r\n        // ignore emulated mouse up clicks\r\n        if (this.isIgnoringMouseUp && event.type === 'mouseup') {\r\n            return;\r\n        }\r\n\r\n        // allow click in <input>s and <textarea>s\r\n        var nodeName = event.target.nodeName;\r\n        if (nodeName === 'INPUT' || nodeName === 'TEXTAREA') {\r\n            event.target.focus();\r\n        }\r\n        this.staticClick(event, pointer);\r\n\r\n        // set flag for emulated clicks 300ms after touchend\r\n        if (event.type !== 'mouseup') {\r\n            this.isIgnoringMouseUp = true;\r\n            // reset flag after 300ms\r\n            setTimeout(function() {\r\n                delete this.isIgnoringMouseUp;\r\n            }.bind(this), 400);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Dispatch event for staticClick for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.staticClick = function(event, pointer) {\r\n        this.emitEvent('staticClick', [event, pointer]);\r\n    };\r\n\r\n    return Unidragger;\r\n}));\r\n\r\n/*!\r\n * Draggabilly v2.1.1\r\n * Make that shiz draggable\r\n * http://draggabilly.desandro.com\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Draggabilly = factory(root.$, root, root.getSize, root.Unidragger);\r\n}(this, function factory($, root, getSize, Unidragger) {\r\n    var lastTime = 0;\r\n    // get rAF, prefixed, if present. fallback to setTimeout\r\n    var requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(callback) {\r\n        var currTime = new Date().getTime();\r\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n        var id = setTimeout(callback, timeToCall);\r\n        lastTime = currTime + timeToCall;\r\n        return id;\r\n    };\r\n    var transformProperty = $.isString(document.documentElement.style.transform) ? 'transform' : 'WebkitTransform';\r\n\r\n    /**\r\n     * Draggabilly constructor.\r\n     * @param {Node|string} element - Node, or querySelector string of node, to make draggable.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    function Draggabilly(element, options) {\r\n        this.element = $.get(element);\r\n        this.options = options || {};\r\n        this._create();\r\n    }\r\n\r\n    /**\r\n     * Inherit Unidragger methods.\r\n     */\r\n    var proto = Draggabilly.prototype = Object.create(Unidragger.prototype);\r\n\r\n    /**\r\n     * CSS position values that don't need to be set.\r\n     */\r\n    var positionValues = { relative: true, absolute: true, fixed: true };\r\n\r\n    /**\r\n     * Initialize draggabilly.\r\n     */\r\n    proto._create = function() {\r\n        // properties\r\n        this.position = {};\r\n        this._getPosition();\r\n\r\n        this.startPoint = { x: 0, y: 0 };\r\n        this.dragPoint = { x: 0, y: 0 };\r\n        this.startPosition = {};\r\n\r\n        // set relative positioning\r\n        var style = getComputedStyle(this.element);\r\n        if (!positionValues[style.position]) {\r\n            this.element.style.position = 'relative';\r\n        }\r\n\r\n        this.enable();\r\n        this.setHandles();\r\n    };\r\n\r\n    /**\r\n     * Set this.handles and bind start events to the handles.\r\n     */\r\n    proto.setHandles = function() {\r\n        this.handles = this.options.handle ? $.getAll(this.options.handle, this.element) : [this.element];\r\n        this.bindHandles();\r\n    };\r\n\r\n    /**\r\n     * Emits events via EvEmitter.\r\n     * @param {String} type - Name of event.\r\n     * @param {Event} event - Original event.\r\n     * @param {Array} args - Extra arguments.\r\n     */\r\n    proto.dispatchEvent = function(type, event, args) {\r\n        this.emitEvent(type, [event].concat(args));\r\n    };\r\n\r\n    /**\r\n     * Get x/y position from style.\r\n     */\r\n    proto._getPosition = function() {\r\n        var style = getComputedStyle(this.element);\r\n        var x = this._getPositionCoord(style.left, 'width');\r\n        var y = this._getPositionCoord(style.top, 'height');\r\n        // clean up 'auto' or other non-integer values\r\n        this.position.x = isNaN(x) ? 0 : x;\r\n        this.position.y = isNaN(y) ? 0 : y;\r\n\r\n        this._addTransformPosition(style);\r\n    };\r\n\r\n    /**\r\n     * Get a numeric coordinate from a style.\r\n     * @param {String} styleSide - CSS style to parse.\r\n     * @param {String} measure - Property name to get the size for.\r\n     * @returns {Number} Resulting size in pixels.\r\n     */\r\n    proto._getPositionCoord = function(styleSide, measure) {\r\n        if (styleSide.indexOf('%') !== -1) {\r\n            // convert percent into pixel for Safari, #75\r\n            var parentSize = getSize(this.element.parentNode);\r\n            // prevent not-in-DOM element throwing bug, #131\r\n            return !parentSize ? 0 : (parseFloat(styleSide) / 100) * parentSize[measure];\r\n        }\r\n        return parseInt(styleSide, 10);\r\n    };\r\n\r\n    /**\r\n     * Add `transform: translate( x, y )` to position.\r\n     * @param {CSSStyleDeclaration} style - Element styles to add to.\r\n     */\r\n    proto._addTransformPosition = function(style) {\r\n        var transform = style[transformProperty];\r\n        // bail out if value is 'none'\r\n        if (transform.indexOf('matrix') !== 0) {\r\n            return;\r\n        }\r\n        // split matrix(1, 0, 0, 1, x, y)\r\n        var matrixValues = transform.split(',');\r\n        // translate X value is in 12th or 4th position\r\n        var xIndex = transform.indexOf('matrix3d') === 0 ? 12 : 4;\r\n        var translateX = parseInt(matrixValues[xIndex], 10);\r\n        // translate Y value is in 13th or 5th position\r\n        var translateY = parseInt(matrixValues[xIndex + 1], 10);\r\n        this.position.x += translateX;\r\n        this.position.y += translateY;\r\n    };\r\n\r\n    /**\r\n     * Pointer start.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        this._dragPointerDown(event, pointer);\r\n        // kludge to blur focused inputs in dragger\r\n        var focused = document.activeElement;\r\n        // do not blur body for IE10, metafizzy/flickity#117\r\n        if (focused && focused.blur && focused !== document.body) {\r\n            focused.blur();\r\n        }\r\n        // bind move and end events\r\n        this._bindPostStartEvents(event);\r\n        $.addClass(this.element, 'is-pointer-down');\r\n        this.dispatchEvent('pointerDown', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        var moveVector = this._dragPointerMove(event, pointer);\r\n        this.dispatchEvent('pointerMove', event, [pointer, moveVector]);\r\n        this._dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Drag start.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragStart = function(event, pointer) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n        this._getPosition();\r\n        this.measureContainment();\r\n        // position _when_ drag began\r\n        this.startPosition.x = this.position.x;\r\n        this.startPosition.y = this.position.y;\r\n        // reset left/top style\r\n        this.setLeftTop();\r\n\r\n        this.dragPoint.x = 0;\r\n        this.dragPoint.y = 0;\r\n\r\n        $.addClass(this.element, 'is-dragging');\r\n        this.dispatchEvent('dragStart', event, [pointer]);\r\n        // start animation\r\n        this.animate();\r\n    };\r\n\r\n    /**\r\n     * Calculate the correct position of the element within its container.\r\n     */\r\n    proto.measureContainment = function() {\r\n        var containment = this.options.containment;\r\n        if (!containment) {\r\n            return;\r\n        }\r\n\r\n        // use element if element, otherwise just `true`, use the parent\r\n        var container = $.isNode(containment) ? containment : $.isString(containment) ? $.get(containment) : this.element.parentNode;\r\n        var elemSize = getSize(this.element);\r\n        var containerSize = getSize(container);\r\n        var elemRect = this.element.getBoundingClientRect();\r\n        var containerRect = container.getBoundingClientRect();\r\n        var borderSizeX = containerSize.borderLeftWidth + containerSize.borderRightWidth;\r\n        var borderSizeY = containerSize.borderTopWidth + containerSize.borderBottomWidth;\r\n\r\n        var position = this.relativeStartPosition = {\r\n            x: elemRect.left - (containerRect.left + containerSize.borderLeftWidth),\r\n            y: elemRect.top - (containerRect.top + containerSize.borderTopWidth)\r\n        };\r\n\r\n        this.containSize = {\r\n            width: (containerSize.width - borderSizeX) - position.x - elemSize.width,\r\n            height: (containerSize.height - borderSizeY) - position.y - elemSize.height\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x and y coordinates of current position.\r\n     */\r\n    proto.dragMove = function(event, pointer, moveVector) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n\r\n        var dragX = moveVector.x;\r\n        var dragY = moveVector.y;\r\n        var grid = this.options.grid;\r\n        var gridX = grid && grid[0];\r\n        var gridY = grid && grid[1];\r\n\r\n        dragX = applyGrid(dragX, gridX);\r\n        dragY = applyGrid(dragY, gridY);\r\n\r\n        dragX = this.containDrag('x', dragX, gridX);\r\n        dragY = this.containDrag('y', dragY, gridY);\r\n\r\n        // constrain to axis\r\n        dragX = this.options.axis === 'y' ? 0 : dragX;\r\n        dragY = this.options.axis === 'x' ? 0 : dragY;\r\n\r\n        if (this.options.minZero) {\r\n            dragX = applyMinZero(this.startPosition.x, dragX);\r\n            dragY = applyMinZero(this.startPosition.y, dragY);\r\n        }\r\n\r\n        this.position.x = this.startPosition.x + dragX;\r\n        this.position.y = this.startPosition.y + dragY;\r\n        // set dragPoint properties\r\n        this.dragPoint.x = dragX;\r\n        this.dragPoint.y = dragY;\r\n\r\n        this.dispatchEvent('dragMove', event, [pointer, moveVector]);\r\n    };\r\n\r\n    /**\r\n     * Adjust a coordinate to snap to the grid.\r\n     * @param {Number} value - Coordinate to snap to grid.\r\n     * @param {Number} grid - Grid width/height.\r\n     * @param {String} method - Math method to apply.\r\n     * @returns {Number} Closes number that snaps to grid.\r\n     */\r\n    function applyGrid(value, grid, method) {\r\n        return grid ? Math[method || 'round'](value / grid) * grid : value;\r\n    }\r\n\r\n    /**\r\n     * Adjust the drag position to prevent the item from moving out of the container to the left or top.\r\n     * @param {Number} start - Element starting coordinate.\r\n     * @param {Number} drag - Distance element was dragged.\r\n     * @returns {Number} Corrected drag coordinate.\r\n     */\r\n    function applyMinZero(start, drag) {\r\n        return start + drag < 0 ? -start : drag;\r\n    }\r\n\r\n    /**\r\n     * Limit dragging within boundaries.\r\n     * @param {string} axis - X or Y Axis\r\n     * @param {number} drag - Position coordinate on axis\r\n     * @param {number} grid - Boundary coordinate on axis.\r\n     * @returns {number} Coordinate contained with drag.\r\n     */\r\n    proto.containDrag = function(axis, drag, grid) {\r\n        if (!this.options.containment) {\r\n            return drag;\r\n        }\r\n        var measure = axis === 'x' ? 'width' : 'height';\r\n\r\n        var rel = this.relativeStartPosition[axis];\r\n        var min = applyGrid(-rel, grid, 'ceil');\r\n        var max = this.containSize[measure];\r\n        max = applyGrid(max, grid, 'floor');\r\n        return Math.min(max, Math.max(min, drag));\r\n    };\r\n\r\n    /**\r\n     * pointer up\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        $.removeClass(this.element, 'is-pointer-down');\r\n        this.dispatchEvent('pointerUp', event, [pointer]);\r\n        this._dragPointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Drag end.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragEnd = function(event, pointer) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n        // use top left position when complete\r\n        if (transformProperty) {\r\n            this.element.style[transformProperty] = '';\r\n            this.setLeftTop();\r\n        }\r\n        $.removeClass(this.element, 'is-dragging');\r\n        this.dispatchEvent('dragEnd', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Animate while dragging.\r\n     */\r\n    proto.animate = function() {\r\n        if (!this.isDragging) {\r\n            return;\r\n        }\r\n        this.positionDrag();\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    };\r\n\r\n    /**\r\n     * Set left/top positioning.\r\n     */\r\n    proto.setLeftTop = function() {\r\n        $.style(this.element, { left: this.position.x + 'px', top: this.position.y + 'px' });\r\n    };\r\n\r\n    /**\r\n     * Set position transform based on drag.\r\n     */\r\n    proto.positionDrag = function() {\r\n        this.element.style[transformProperty] = 'translate3d( ' + this.dragPoint.x + 'px, ' + this.dragPoint.y + 'px, 0)';\r\n    };\r\n\r\n    /**\r\n     * Dispatch the event for static click callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.staticClick = function(event, pointer) {\r\n        this.dispatchEvent('staticClick', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Enable dragging.\r\n     */\r\n    proto.enable = function() {\r\n        this.isEnabled = true;\r\n    };\r\n\r\n    /**\r\n     * Disable dragging.\r\n     */\r\n    proto.disable = function() {\r\n        this.isEnabled = false;\r\n        if (this.isDragging) {\r\n            this.dragEnd();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy this instance.\r\n     */\r\n    proto.destroy = function() {\r\n        this.disable();\r\n        this.element.removeAttribute('style');\r\n        this.unbindHandles();\r\n    };\r\n\r\n    return Draggabilly;\r\n}));\r\n","/*!\r\n * ColorPicker - pure JavaScript color picker without using images, external CSS or 1px divs.\r\n * Copyright © 2011 David Durman, All rights reserved.\r\n */\r\n(function(factory) {\r\n    // Assume a traditional browser.\r\n    window.ColorPicker = factory(this.$, this.Draggabilly);\r\n})(function($, Draggabilly) {\r\n    'use strict';\r\n\r\n    var type = (window.SVGAngle || document.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1') ? 'SVG' : 'VML'),\r\n        picker,\r\n        slide,\r\n        svgNS = 'http://www.w3.org/2000/svg',\r\n        uniqID = 0;\r\n\r\n    /**\r\n     * This HTML snippet is inserted into the innerHTML property of the passed color picker element when the no-hassle call to ColorPicker() is used,\r\n     * i.e. ColorPicker(function(hex, hsv, rgb) { ... });.\r\n     */\r\n    var colorpickerHTMLSnippet = '<div class=\"cp-picker-wrapper\"><div class=\"cp-picker\"></div><div class=\"cp-drag-handle cp-picker-indicator\"></div></div><div class=\"cp-slide-wrapper\"><div class=\"cp-slide\"></div><div class=\"cp-drag-handle cp-slide-indicator\"></div></div>';\r\n\r\n    /**\r\n     * Create SVG element.\r\n     * @param {string} el - Node name.\r\n     * @param {Object} attrs - Attributes for the node.\r\n     * @param {Object[]} children - Child nodes.\r\n     * @return {Node} New DOM node.\r\n     */\r\n    function c(el, attrs, children) {\r\n        var node = document.createElementNS(svgNS, el);\r\n        for (var key in attrs) {\r\n            node.setAttribute(key, attrs[key]);\r\n        }\r\n        if (!$.isNull(children)) {\r\n            if (!$.isArray(children)) {\r\n                children = [children];\r\n            }\r\n            children.forEach(function(x) { node.appendChild(x); });\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * Create slide and picker markup depending on the supported technology.\r\n     */\r\n    if (type === 'SVG') {\r\n        slide = c('svg', { xmlns: 'http://www.w3.org/2000/svg', version: '1.1', width: '100%', height: '100%' }, [\r\n            c('defs', {},\r\n                c('linearGradient', { id: 'gradient-hsv', x1: '0%', y1: '100%', x2: '0%', y2: '0%' }, [\r\n                    c('stop', { offset: '0%', 'stop-color': '#FF0000', 'stop-opacity': '1' }),\r\n                    c('stop', { offset: '13%', 'stop-color': '#FF00FF', 'stop-opacity': '1' }),\r\n                    c('stop', { offset: '25%', 'stop-color': '#8000FF', 'stop-opacity': '1' }),\r\n                    c('stop', { offset: '38%', 'stop-color': '#0040FF', 'stop-opacity': '1' }),\r\n                    c('stop', { offset: '50%', 'stop-color': '#00FFFF', 'stop-opacity': '1' }),\r\n                    c('stop', { offset: '63%', 'stop-color': '#00FF40', 'stop-opacity': '1' }),\r\n                    c('stop', { offset: '75%', 'stop-color': '#0BED00', 'stop-opacity': '1' }),\r\n                    c('stop', { offset: '88%', 'stop-color': '#FFFF00', 'stop-opacity': '1' }),\r\n                    c('stop', { offset: '100%', 'stop-color': '#FF0000', 'stop-opacity': '1' })\r\n                ])\r\n            ),\r\n            c('rect', { x: '0', y: '0', width: '100%', height: '100%', fill: 'url(#gradient-hsv)' })\r\n        ]);\r\n\r\n        picker = c('svg', { xmlns: 'http://www.w3.org/2000/svg', version: '1.1', width: '100%', height: '100%' }, [\r\n            c('defs', {}, [\r\n                c('linearGradient', { id: 'gradient-black', x1: '0%', y1: '100%', x2: '0%', y2: '0%' }, [\r\n                    c('stop', { offset: '0%', 'stop-color': '#000000', 'stop-opacity': '1' }),\r\n                    c('stop', { offset: '100%', 'stop-color': '#CC9A81', 'stop-opacity': '0' })\r\n                ]),\r\n                c('linearGradient', { id: 'gradient-white', x1: '0%', y1: '100%', x2: '100%', y2: '100%' }, [\r\n                    c('stop', { offset: '0%', 'stop-color': '#FFFFFF', 'stop-opacity': '1' }),\r\n                    c('stop', { offset: '100%', 'stop-color': '#CC9A81', 'stop-opacity': '0' })\r\n                ])\r\n            ]),\r\n            c('rect', { x: '0', y: '0', width: '100%', height: '100%', fill: 'url(#gradient-white)' }),\r\n            c('rect', { x: '0', y: '0', width: '100%', height: '100%', fill: 'url(#gradient-black)' })\r\n        ]);\r\n    } else if (type === 'VML') {\r\n        slide = [\r\n            '<DIV style=\"position: relative; width: 100%; height: 100%\">',\r\n            '<v:rect style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%\" stroked=\"f\" filled=\"t\">',\r\n            '<v:fill type=\"gradient\" method=\"none\" angle=\"0\" color=\"red\" color2=\"red\" colors=\"8519f fuchsia;.25 #8000ff;24903f #0040ff;.5 aqua;41287f #00ff40;.75 #0bed00;57671f yellow\"></v:fill>',\r\n            '</v:rect>',\r\n            '</DIV>'\r\n        ].join('');\r\n\r\n        picker = [\r\n            '<DIV style=\"position: relative; width: 100%; height: 100%\">',\r\n            '<v:rect style=\"position: absolute; left: -1px; top: -1px; width: 101%; height: 101%\" stroked=\"f\" filled=\"t\">',\r\n            '<v:fill type=\"gradient\" method=\"none\" angle=\"270\" color=\"#FFFFFF\" opacity=\"100%\" color2=\"#CC9A81\" o:opacity2=\"0%\"></v:fill>',\r\n            '</v:rect>',\r\n            '<v:rect style=\"position: absolute; left: 0px; top: 0px; width: 100%; height: 101%\" stroked=\"f\" filled=\"t\">',\r\n            '<v:fill type=\"gradient\" method=\"none\" angle=\"0\" color=\"#000000\" opacity=\"100%\" color2=\"#CC9A81\" o:opacity2=\"0%\"></v:fill>',\r\n            '</v:rect>',\r\n            '</DIV>'\r\n        ].join('');\r\n\r\n        if (!document.namespaces['v']) {\r\n            document.namespaces.add('v', 'urn:schemas-microsoft-com:vml', '#default#VML');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ColorPicker constructor.\r\n     * @param {Node} container  - Picker parent element.\r\n     * @param {Function} callback - Called whenever the color is changed provided chosen color in RGB HEX format as the only argument.\r\n     */\r\n    function ColorPicker(container, callback) {\r\n        this.h = 0;\r\n        this.s = 1;\r\n        this.v = 1;\r\n        this.draggie = [];\r\n\r\n        container.innerHTML = colorpickerHTMLSnippet;\r\n        this.slideElement = container.getElementsByClassName('cp-slide')[0];\r\n        this.pickerElement = container.getElementsByClassName('cp-picker')[0];\r\n        this.slideIndicator = container.getElementsByClassName('cp-slide-indicator')[0];\r\n        this.pickerIndicator = container.getElementsByClassName('cp-picker-indicator')[0];\r\n        this.callback = callback;\r\n\r\n        if (type === 'SVG') {\r\n            // Generate uniq IDs for linearGradients so that we don't have the same IDs within one document.\r\n            // Then reference those gradients in the associated rectangles.\r\n\r\n            var slideClone = slide.cloneNode(true);\r\n            var pickerClone = picker.cloneNode(true);\r\n            var hsvGradient = $.get('#gradient-hsv', slideClone);\r\n            var hsvRect = $.get('rect', slideClone);\r\n\r\n            hsvGradient.id = 'gradient-hsv-' + uniqID;\r\n            hsvRect.setAttribute('fill', 'url(#' + hsvGradient.id + ')');\r\n\r\n            var blackAndWhiteGradients = [$.get('#gradient-black', pickerClone), $.get('#gradient-white', pickerClone)];\r\n            var whiteAndBlackRects = $.getAll('rect', pickerClone);\r\n\r\n            blackAndWhiteGradients[0].id = 'gradient-black-' + uniqID;\r\n            blackAndWhiteGradients[1].id = 'gradient-white-' + uniqID;\r\n\r\n            whiteAndBlackRects[0].setAttribute('fill', 'url(#' + blackAndWhiteGradients[1].id + ')');\r\n            whiteAndBlackRects[1].setAttribute('fill', 'url(#' + blackAndWhiteGradients[0].id + ')');\r\n\r\n            this.slideElement.appendChild(slideClone);\r\n            this.pickerElement.appendChild(pickerClone);\r\n\r\n            uniqID++;\r\n        } else {\r\n            this.slideElement.innerHTML = slide;\r\n            this.pickerElement.innerHTML = picker;\r\n        }\r\n\r\n        this.slideListener = this.slideHandler.bind(this);\r\n        this.pickerListener = this.pickerHandler.bind(this);\r\n        this.addEvents(this.slideElement, this.slideListener);\r\n        this.addEvents(this.pickerElement, this.pickerListener);\r\n    }\r\n\r\n    ColorPicker.prototype = {\r\n        /**\r\n         * Convert HSV representation to RGB HEX string. Credits to http://www.raphaeljs.com.\r\n         * @param {Object} hsv - Object with h, s, and v properties.\r\n         * @returns {Object} Object with RGB and hex value.\r\n         */\r\n        hsv2rgb: function(hsv) {\r\n            hsv = $.coalesce(hsv, this);\r\n            var R, G, B, X, C;\r\n            var h = (hsv.h % 360) / 60;\r\n\r\n            C = hsv.v * hsv.s;\r\n            X = C * (1 - Math.abs(h % 2 - 1));\r\n            R = G = B = hsv.v - C;\r\n\r\n            h = ~~h;\r\n            R += [C, X, 0, 0, X, C][h];\r\n            G += [X, C, C, X, 0, 0][h];\r\n            B += [0, 0, X, C, C, X][h];\r\n\r\n            var r = Math.floor(R * 255);\r\n            var g = Math.floor(G * 255);\r\n            var b = Math.floor(B * 255);\r\n            return { r: r, g: g, b: b, hex: '#' + (16777216 | b | (g << 8) | (r << 16)).toString(16).slice(1) };\r\n        },\r\n\r\n        /**\r\n         * Convert RGB representation to HSV. r, g, b can be either in <0,1> range or <0,255> range. Credits to http://www.raphaeljs.com.\r\n         * @param {Object} rgb - Object with r, g, and b properties.\r\n         * @returns {Object} Object wth HSV values.\r\n         */\r\n        rgb2hsv: function(rgb) {\r\n            var r = rgb.r;\r\n            var g = rgb.g;\r\n            var b = rgb.b;\r\n\r\n            if (rgb.r > 1 || rgb.g > 1 || rgb.b > 1) {\r\n                r /= 255;\r\n                g /= 255;\r\n                b /= 255;\r\n            }\r\n\r\n            var H, S, V, C;\r\n            V = Math.max(r, g, b);\r\n            C = V - Math.min(r, g, b);\r\n            H = (C === 0 ? null :\r\n                V === r ? (g - b) / C + (g < b ? 6 : 0) :\r\n                    V === g ? (b - r) / C + 2 :\r\n                        (r - g) / C + 4);\r\n            H = (H % 6) * 60;\r\n            S = C === 0 ? 0 : C / V;\r\n            return { h: H, s: S, v: V };\r\n        },\r\n\r\n        /**\r\n         * Convert hex string to hsv values.\r\n         * @param {string} hex - Hex string.\r\n         * @returns {Object} Object with HSV values.\r\n         */\r\n        hex2hsv: function(hex) {\r\n            return this.rgb2hsv($.colors.hex2rgb(hex));\r\n        },\r\n\r\n        /**\r\n         * Click event handler for the slider. Sets picker background color and calls callback if provided.\r\n         * @param {Event} event - Original mouseup or touchend event.\r\n         * @param {MouseEvent|Touch} pointer - Event object that has .pageX and .pageY.\r\n         * @param {Object} moveVector - Move distance as x/y properties.\r\n         */\r\n        slideHandler: function(event, pointer, moveVector) {\r\n            var rect = this.slideElement.getBoundingClientRect();\r\n            if (!this.contains(rect, event)) {\r\n                return;\r\n            }\r\n\r\n            this.h = (event.y - rect.top) / this.slideElement.offsetHeight * 360;\r\n            $.style(this.pickerElement, { 'background-color': this.hsv2rgb({ h: this.h, s: 1, v: 1 }).hex });\r\n            if (!moveVector) {\r\n                this.positionIndicators();\r\n            }\r\n            if (this.callback) {\r\n                this.callback(this.hsv2rgb({ h: this.h, s: this.s, v: this.v }).hex);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Click event handler for the picker. Calls callback if provided.\r\n         * @param {Event} event - Original mouseup or touchend event.\r\n         * @param {MouseEvent|Touch} pointer - Event object that has .pageX and .pageY.\r\n         * @param {Object} moveVector - Move distance as x/y properties.\r\n         */\r\n        pickerHandler: function(event, pointer, moveVector) {\r\n            var rect = this.pickerElement.getBoundingClientRect();\r\n            if (!this.contains(rect, event)) {\r\n                return;\r\n            }\r\n\r\n            this.s = (event.x - rect.left) / this.pickerElement.offsetWidth;\r\n            var height = this.pickerElement.offsetHeight;\r\n            this.v = (height - (event.y - rect.top) - this.pickerElement.offsetTop) / height;\r\n\r\n            if (!moveVector) {\r\n                this.positionIndicators();\r\n            }\r\n            if (this.callback) {\r\n                this.callback(this.hsv2rgb(this).hex);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check if the event is inside the rect.\r\n         * @param {Object} rect - Bounding rectangle to check against.\r\n         * @param {MouseEvent} event - Mouse location to check.\r\n         * @returns {bool} True if event is inside rect.\r\n         */\r\n        contains: function(rect, event) {\r\n            return event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom;\r\n        },\r\n\r\n        /**\r\n         * Enable click and drag&drop color selection.\r\n         * @param {DOMElement} element - HSV slide element or HSV picker element.\r\n         * @param {Function} listener - Function that will be called whenever mouse is dragged over the element with event object as argument.\r\n         */\r\n        addEvents: function(element, listener) {\r\n            $.on(element, 'click', listener, false);\r\n            this.draggie.push(new Draggabilly($.get('.cp-drag-handle', element.parentNode), { containment: true }).on('dragMove', listener).on('dragEnd', this.positionIndicators.bind(this)));\r\n        },\r\n\r\n        /**\r\n         * Sets color of the picker in hsv/rgb/hex format.\r\n         * @param {Object} hsv - Object of the form: { h: <hue>, s: <saturation>, v: <value> }.\r\n         * @param {Object} rgb - Object of the form: { r: <red>, g: <green>, b: <blue> }.\r\n         * @param {string} hex - String of the form: #RRGGBB.\r\n         */\r\n        setColor: function(hsv, rgb, hex) {\r\n            this.h = hsv.h % 360;\r\n            this.s = hsv.s;\r\n            this.v = hsv.v;\r\n\r\n            var c = this.hsv2rgb();\r\n            this.pickerElement.style.backgroundColor = this.hsv2rgb({ h: this.h, s: 1, v: 1 }).hex;\r\n            if (this.callback) {\r\n                this.callback(hex || c.hex);\r\n            }\r\n            this.positionIndicators();\r\n        },\r\n\r\n        /**\r\n         * Sets color of the picker in hex format.\r\n         * @param {string} hex - Hex color format #RRGGBB.\r\n         */\r\n        setHex: function(hex) {\r\n            this.setColor(this.hex2hsv(hex), undefined, hex);\r\n        },\r\n\r\n        /**\r\n         * Helper to position indicators.\r\n         */\r\n        positionIndicators: function() {\r\n            $.style(this.slideIndicator, { top: (((this.h * this.slideElement.offsetHeight) / 360) - this.slideIndicator.offsetHeight / 2) + 'px' });\r\n            var pickerHeight = this.pickerElement.offsetHeight;\r\n            $.style(this.pickerIndicator, {\r\n                top: ((pickerHeight - this.v * pickerHeight) - this.pickerIndicator.offsetHeight / 2) + 'px',\r\n                left: ((this.s * this.pickerElement.offsetWidth) - this.pickerIndicator.offsetWidth / 2) + 'px'\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Destroy this object.\r\n         */\r\n        destroy: function() {\r\n            $.off(this.slideElement, 'click', this.slideListener, false);\r\n            $.off(this.pickerElement, 'click', this.pickerListener, false);\r\n            this.draggie.forEach(function(x) { $.destroy(x); });\r\n\r\n            this.slideElement.parentNode.removeChild(this.slideElement);\r\n            this.pickerElement.parentNode.removeChild(this.pickerElement);\r\n        }\r\n    };\r\n\r\n    return ColorPicker;\r\n});\r\n","/*!\r\n * Library for storing widget positions and detecting collisions.\r\n */\r\n(function(root, factory) {\r\n    root.Rect = factory(root.$);\r\n})(this, function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Constructor for a rect.\r\n     * @param {Node} node - Node to build the rect for.\r\n     */\r\n    function Rect(node) {\r\n        var classList = [].slice.call(node.classList);\r\n        var opts = {};\r\n        $.forEach(classList, function(x) {\r\n            var lx = x.toLowerCase();\r\n            if (lx.indexOf('grid-item-x-') === 0) {\r\n                this.x = x.replace('grid-item-x-', '') * 1;\r\n            } else if (lx.indexOf('grid-item-y-') === 0) {\r\n                this.y = x.replace('grid-item-y-', '') * 1;\r\n            } else if (lx.indexOf('grid-item-width-') === 0) {\r\n                this.width = x.replace('grid-item-width-', '') * 1;\r\n            } else if (lx.indexOf('grid-item-height-') === 0) {\r\n                this.height = x.replace('grid-item-height-', '') * 1;\r\n            }\r\n        }, opts);\r\n\r\n        this.x = $.coalesce(opts.x, 0);\r\n        this.y = $.coalesce(opts.y, 0);\r\n        this.width = $.coalesce(opts.width, 0);\r\n        this.height = $.coalesce(opts.height, 0);\r\n        this.updated = false;\r\n    }\r\n\r\n    Rect.prototype = {\r\n        /**\r\n         * Check if rect intersects with this rect.\r\n         * @param {Rect} rect - Rect to check for intersection with.\r\n         * @returns {bool} True if the rectangles collide, else false.\r\n         */\r\n        overlaps: function(rect) {\r\n            var thisRight = this.x + this.width;\r\n            var thisBottom = this.y + this.height;\r\n            var rectRight = rect.x + rect.width;\r\n            var rectBottom = rect.y + rect.height;\r\n\r\n            // http://stackoverflow.com/a/306332\r\n            return this.x < rectRight && thisRight > rect.x && this.y < rectBottom && thisBottom > rect.y;\r\n        }\r\n    };\r\n\r\n    return Rect;\r\n});\r\n","/*!\r\n * doT based table component. Supports ajax data, searching, sorting, paging, & resizing columns.\r\n */\r\n(function(root, factory) {\r\n    root.doTable = factory(root.doT, root.$, root.flatpickr);\r\n})(this, function(doT, $, flatpickr) {\r\n    'use strict';\r\n\r\n    /**\r\n    * Store the systemwide templates so we don't have to keep loading them.\r\n    */\r\n    var _templates = {\r\n        headerFn: doT.template($.get('#tableHeaderTemplate').text),\r\n        footerFn: doT.template($.get('#tableFooterTemplate').text),\r\n        bodyFn: doT.template($.get('#tableBodyTemplate').text),\r\n        loadingFn: doT.template($.get('#tableLoadingTemplate').text),\r\n        noDataFn: doT.template($.get('#tableNoDataTemplate').text),\r\n        errorFn: doT.template($.get('#tableLoadingError').text)\r\n    };\r\n\r\n    /**\r\n    * Default sorting function for the data - resets to order when data was loaded.\r\n    * @param {Object} a - First object to compare.\r\n    * @param {Object} b - Object to compare to.\r\n    * @returns {number} 1 if a comes first, -1 if b comes first, else 0.\r\n    */\r\n    var defaultCompare = function(a, b) {\r\n        return a._index > b._index ? 1 : a._index < b._index ? -1 : 0;\r\n    };\r\n\r\n    /**\r\n     * Get the case insensitive value for a field to use when sorting.\r\n     * @param {string} value - Value to clean up.\r\n     * @returns {string} New value to use for sorting.\r\n     */\r\n    var getFieldValue = function(value) {\r\n        if ($.isNull(value)) {\r\n            return null;\r\n        }\r\n        return value.getMonth ? value : value.toLowerCase ? value.toLowerCase() : value;\r\n    };\r\n\r\n    /**\r\n     * Multi-sorting function for the data.\r\n     * @this Object[] - Array that defines current sort columns.\r\n     * @param {Object} a - First object to compare.\r\n     * @param {Object} b - Object to compare to.\r\n     * @returns {number} 1 if a comes first, -1 if b comes first, else 0.\r\n     */\r\n    var compare = function(a, b) {\r\n        var i = 0, len = this.length;\r\n        for (; i < len; i++) {\r\n            var sort = this[i];\r\n            var aa = getFieldValue(a[sort.field]);\r\n            var bb = getFieldValue(b[sort.field]);\r\n\r\n            if (aa === null) {\r\n                return 1;\r\n            }\r\n            if (bb === null) {\r\n                return -1;\r\n            }\r\n            if (aa < bb) {\r\n                return sort.sortDir === 'ASC' ? -1 : 1;\r\n            }\r\n            if (aa > bb) {\r\n                return sort.sortDir === 'ASC' ? 1 : -1;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n\r\n    /**\r\n     * Filter an array of objects to find objects where value contains the value of `this`\r\n     * @param {Object} obj - Object to search in.\r\n     * @returns {bool} True if object contains `this`.\r\n     */\r\n    var filterArray = function(obj) {\r\n        for (var key in obj) {\r\n            if (key.indexOf('_') < 0 && obj.hasOwnProperty(key) && (obj[key] + '').toLowerCase().indexOf(this) > -1) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * Convert a style with 'px' to a float.\r\n     * @param {string} val - CSS style to convert.\r\n     * @returns {number} Numeric value.\r\n     */\r\n    var pixelToFloat = function(val) {\r\n        return val.replace('px', '').replace('%', '') * 1.0;\r\n    };\r\n\r\n    /**\r\n     * Format a field value for display.\r\n     * @param {string} displayCurrencyFormat - Format to use for currency.\r\n     * @param {string} displayDateFormat - Format to use for dates.\r\n     * @param {string} value - Value to format.\r\n     * @param {string} dataType - Datatype of column.\r\n     * @returns\r\n     */\r\n    var getDisplayValue = function(displayCurrencyFormat, displayDateFormat, value, dataType) {\r\n        if (!dataType || $.isNull(value)) {\r\n            return value;\r\n        }\r\n\r\n        var val = value;\r\n        if (dataType === 'currency') {\r\n            val = $.accounting.formatMoney(val, displayCurrencyFormat);\r\n        } else if (dataType === 'date') {\r\n            val = flatpickr.formatDate(val, displayDateFormat);\r\n        }\r\n        return val;\r\n    };\r\n\r\n    /**\r\n     * Convert a name with dashes to camel case. \r\n     * @param {String} str - String to format\r\n     * @returns {String} Updated string\r\n     */\r\n    var camelCase = function(str) {\r\n        var replaceFunc = function(all, letter) {\r\n            return letter.toUpperCase();\r\n        };\r\n        return str.replace(/-([a-z])/ig, replaceFunc);\r\n    };\r\n\r\n    /**\r\n     * Read data attributes from a node.\r\n     * @param {Node} node - Node to get attributes from.\r\n     * @returns {Object} Options object containing data attribute values.\r\n     */\r\n    var parseAttributes = function(node) {\r\n        if (!node) {\r\n            return {};\r\n        }\r\n        var attributes = node.attributes;\r\n        var opts = { id: node.id };\r\n        for (var i = 0; i < attributes.length; ++i) {\r\n            var name = attributes[i].name;\r\n            if (name.toLowerCase().indexOf('data-') === 0) {\r\n                var value = attributes[i].value;\r\n                if (['true', 'false'].indexOf(value.toLowerCase()) !== -1) {\r\n                    value = value.toLowerCase() === 'true';\r\n                } else if (!isNaN(value)) {\r\n                    value = value * 1;\r\n                }\r\n                opts[camelCase(name.replace('data-', ''))] = value;\r\n            }\r\n        }\r\n        if (node.hasAttribute('json-request-params')) {\r\n            try {\r\n                opts.requestParams = JSON.parse(node.getAttribute('json-request-params'));\r\n            } catch (e) {\r\n                // placeholder\r\n            }\r\n        }\r\n        return opts;\r\n    };\r\n\r\n    /**\r\n     * Build options for the table by combining attributes from the node with default values.\r\n     * @param {Node} node - DOM node to pull attributes from.\r\n     * @returns {Object} Options object.\r\n     */\r\n    var buildOpts = function(node) {\r\n        return $.extend({\r\n            id: null,\r\n            columns: [],\r\n            resultUrl: '',\r\n            requestParams: {},\r\n            searchable: true,\r\n            loadAll: true,\r\n            columnMinWidth: 50,\r\n            width: 100,\r\n            editable: true,\r\n            storeUrl: null,\r\n            itemsPerPage: null,\r\n            searchQuery: null,\r\n            dataDateFormat: 'Y-m-d H:i:S',\r\n            displayDateFormat: 'Y-m-d H:i:S',\r\n            displayCurrencyFormat: '{s:$} {[t:,][d:.][p:2]}',\r\n            checkUpdateDate: false\r\n        }, parseAttributes(node));\r\n    };\r\n\r\n    /**\r\n     * Create the table component.\r\n     * @param {Node} node - DOM Node that will contain the table.\r\n     */\r\n    var doTable = function(node) {\r\n        node.doTable = this;\r\n        this.opts = buildOpts(node);\r\n        this.setDefaults(node);\r\n        this.parseColumns();\r\n        this.create();\r\n        this.update();\r\n        this.loadData();\r\n    };\r\n\r\n    /**\r\n     * Add the default settings for the table.\r\n     * @param {Node} node - DOM node to pull attributes from.\r\n     */\r\n    doTable.prototype.setDefaults = function(node) {\r\n        this.data = null;\r\n        this.loading = true;\r\n        this.loadingError = false;\r\n        this.filteredTotal = 0;\r\n        this.results = [];\r\n        this.pageTotal = 0;\r\n        this.totalDistance = 0;\r\n        this.lastSeenAt = { x: null, y: null };\r\n        this.intColumns = [];\r\n        this.dateColumns = [];\r\n        this.currencyColumns = [];\r\n        this.storeFunction = null;\r\n        this.initDate = new Date();\r\n\r\n        var storeUrl = this.opts.storeUrl;\r\n        if (storeUrl) {\r\n            this.storeFunction = $.debounce(function(data) {\r\n                $.ajax({\r\n                    url: storeUrl,\r\n                    method: 'POST',\r\n                    data: data\r\n                });\r\n            }, 250);\r\n        }\r\n\r\n        var template = $.get(node.getAttribute('data-template'));\r\n        this.opts.rowTemplateFn = doT.template(template ? template.text : '');\r\n        this.opts.displayValueFn = getDisplayValue.bind(null, this.opts.displayCurrencyFormat, this.opts.displayDateFormat);\r\n        this.itemsPerPage = this.store('itemsPerPage') * 1 || 10;\r\n        this.currentStartItem = this.store('currentStartItem') * 1 || 0;\r\n        this.currentEndItem = 0;\r\n        this.searchQuery = this.store('searchQuery') || '';\r\n        this.width = this.store('width') * 1 || 100;\r\n    };\r\n\r\n    /**\r\n     * Parse sorting settings.\r\n     * @returns {Object[]} Array of sorting objects.\r\n     */\r\n    doTable.prototype.parseSorting = function() {\r\n        var sorting = this.store('sorting');\r\n        var sortColumns = [];\r\n        if (sorting) {\r\n            try {\r\n                sortColumns = (typeof sorting === 'string' ? JSON.parse(sorting) : sorting) || [];\r\n            } catch (e) {\r\n                // placeholder\r\n            }\r\n        }\r\n        return sortColumns;\r\n    };\r\n\r\n    /**\r\n     * Parse row template to get column properties.\r\n     */\r\n    doTable.prototype.parseColumns = function() {\r\n        var sortColumns = this.parseSorting();\r\n        var tempNode = $.createNode();\r\n        tempNode.innerHTML = '<table>' + this.opts.rowTemplateFn({}) + '</table>';\r\n\r\n        $.forEach($.getAll('td', tempNode), function(x) {\r\n            var field = x.getAttribute('data-field');\r\n            var width = x.getAttribute('data-width');\r\n            width = isNaN(width) ? null : width * 1;\r\n\r\n            var type = x.getAttribute('data-type').toLowerCase();\r\n            if (type === 'int') {\r\n                this.intColumns.push(field);\r\n            } else if (type === 'date') {\r\n                this.dateColumns.push(field);\r\n            } else if (type === 'currency') {\r\n                this.currencyColumns.push(field);\r\n            }\r\n\r\n            var column = {\r\n                width: $.hasPositiveValue(width) ? width : this.store(field + '.width'),\r\n                sortable: x.getAttribute('data-sortable').toLowerCase() === 'true',\r\n                label: x.getAttribute('data-label'),\r\n                field: field,\r\n                dataType: type\r\n            };\r\n\r\n            var dir = x.getAttribute('data-sort-dir');\r\n            if (dir) {\r\n                column.sortDir = dir.toUpperCase();\r\n                column.sortOrder = x.getAttribute('data-sort-order');\r\n            }\r\n\r\n            var sortColumn = $.findByKey(sortColumns, 'field', field);\r\n            if (sortColumn) {\r\n                column.sortDir = sortColumn.sortDir;\r\n                column.sortOrder = sortColumn.sortOrder;\r\n            }\r\n\r\n            this.opts.columns.push(column);\r\n        }, this);\r\n    };\r\n\r\n    /**\r\n    * Get/set persistent values.\r\n    * @param {string} key - Key name of the value to get/set.\r\n    * @param {*} value - Value to set.\r\n    * @returns {string|undefined} Value if getting, else undefined.\r\n    */\r\n    doTable.prototype.store = function(key, value) {\r\n        if (!this.opts.editable) {\r\n            return;\r\n        }\r\n        var myKey = this.opts.id + '.' + key;\r\n        // getter\r\n        if ($.isUndefined(value)) {\r\n            return $.isNull(this.opts.storeUrl) ? localStorage[myKey] : $.coalesce(this.opts[key], null);\r\n        }\r\n\r\n        // setter\r\n        if ($.isNull(this.storeFunction)) {\r\n            localStorage[myKey] = value;\r\n        } else {\r\n            var data = $.extend(this.opts.requestParams, {\r\n                itemsPerPage: this.itemsPerPage,\r\n                currentStartItem: this.currentStartItem,\r\n                searchQuery: this.searchQuery,\r\n                width: this.width,\r\n                sorting: this.buildSortList(),\r\n                columns: $.map(this.opts.columns, function(c) { return { field: c.field, width: c.width * 1.0 }; })\r\n            });\r\n            this.storeFunction.call(null, data);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Process the data array result from the ajax request.\r\n     * @param {Object[]} data - Array of records to display.\r\n     */\r\n    doTable.prototype.processData = function(data) {\r\n        if (this.opts.checkUpdateDate && data.updatedDate) {\r\n            if (new Date(data.updatedDate) > this.initDate) {\r\n                // underlying table has changed so we need to reload the page.\r\n                $.content.forceRefresh();\r\n                return;\r\n            }\r\n        }\r\n\r\n        var i = 0, len = data.rows.length, j = 0;\r\n        for (; i < len; i++) {\r\n            // add an index to the data so we can reset to the default sort order later if the user wants\r\n            data.rows[i]._index = i;\r\n\r\n            var x;\r\n            // convert input to appropriate types\r\n            for (j = 0; j < this.intColumns.length; j++) {\r\n                x = this.intColumns[j];\r\n                data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : data.rows[i][x] * 1;\r\n            }\r\n            for (j = 0; j < this.dateColumns.length; j++) {\r\n                x = this.dateColumns[j];\r\n                data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : flatpickr.parseDate(data.rows[i][x], this.opts.dataDateFormat);\r\n            }\r\n            for (j = 0; j < this.currencyColumns.length; j++) {\r\n                x = this.currencyColumns[j];\r\n                data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : $.accounting.unformat(data.rows[i][x]);\r\n            }\r\n        }\r\n        this.data = data.rows;\r\n        this.filteredTotal = data.filteredTotal;\r\n        this.currentEndItem = Math.min(this.currentStartItem + this.itemsPerPage, this.filteredTotal);\r\n        this.loading = false;\r\n        this.sort(false);\r\n        this.filterResults();\r\n    };\r\n\r\n    /**\r\n     * Load the data to populate the table.\r\n     */\r\n    doTable.prototype.loadData = function() {\r\n        this.loading = true;\r\n        this.loadingError = false;\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: this.opts.resultUrl,\r\n            data: this.buildParams(),\r\n            block: false\r\n        }, this.processData.bind(this), function() {\r\n            self.loading = false;\r\n            self.loadingError = true;\r\n            self.update();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Force the table to refresh its data.\r\n     */\r\n    doTable.prototype.refresh = function() {\r\n        this.loading = true;\r\n        this.loadingError = false;\r\n        this.loadData();\r\n    };\r\n\r\n    /**\r\n     * Build an array containing the sorting info.\r\n     */\r\n    doTable.prototype.buildSortList = function() {\r\n        var sorting = [];\r\n        $.forEach(this.opts.columns, function(x) {\r\n            if (x.sortDir) {\r\n                sorting.push({ field: x.field, sortDir: x.sortDir, sortOrder: x.sortOrder });\r\n            }\r\n        });\r\n        return sorting.length ? sorting : null;\r\n    };\r\n\r\n    /**\r\n     * Build querystring params to fetch data from the server.\r\n     * @returns {Object} Request parameters.\r\n     */\r\n    doTable.prototype.buildParams = function() {\r\n        var sort = this.buildSortList();\r\n        return $.extend(this.opts.requestParams, {\r\n            startItem: this.currentStartItem,\r\n            items: this.itemsPerPage,\r\n            query: this.searchQuery,\r\n            sort: sort\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Set the first item index to display.\r\n     * @param {type} index - Record index to start on.\r\n     */\r\n    doTable.prototype.setCurrentStartItem = function(index) {\r\n        this.currentStartItem = index;\r\n        this.currentEndItem = Math.min(this.currentStartItem + this.itemsPerPage, this.filteredTotal);\r\n        this.store('currentStartItem', index);\r\n        this.filterResults(true);\r\n    };\r\n\r\n    /**\r\n     * Set the number of items to display per page.\r\n     * @param {number|Event} e - Number or items per page, or an event that triggered the change.\r\n     */\r\n    doTable.prototype.setItemsPerPage = function(e) {\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        var items = (isNaN(e) ? e.target.value : e) * 1;\r\n        if (this.itemsPerPage !== items) {\r\n            this.itemsPerPage = items;\r\n            this.store('itemsPerPage', items);\r\n            this.setCurrentStartItem(0);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the search query for filtering table data.\r\n     * @param {string} val - New search text.\r\n     */\r\n    doTable.prototype.setSearchQuery = function(val) {\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        var query = val.target ? val.target.value : val;\r\n        if (this.searchQuery !== query) {\r\n            this.searchQuery = query;\r\n            this.store('searchQuery', query);\r\n            this.requestTimer = null;\r\n            this.currentStartItem = 0;\r\n            this.currentEndItem = 0;\r\n            this.filterResults(true);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Filter the data based on the search query, current page, and items per page.\r\n     * @param {bool} refresh - Force it to refresh its data.\r\n     */\r\n    doTable.prototype.filterResults = function(refresh) {\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        if (refresh && !this.opts.loadAll) {\r\n            // force the data to reload. filterResults will get called again after the data loads\r\n            this.loadData();\r\n        } else if (!this.opts.loadAll) {\r\n            // we're not loading all the data to begin with. so whatever data we have should be displayed.\r\n            this.results = this.data;\r\n            //this.currentEndItem = Math.min(this.currentStartItem + this.itemsPerPage, this.filteredTotal);\r\n            this.pageTotal = Math.ceil(this.filteredTotal / this.itemsPerPage);\r\n            this.update();\r\n        } else {\r\n            // we're loading all the data to begin with. so figure out what data to display.\r\n            var filteredTotal = 0;\r\n            if (this.data.constructor !== Array) {\r\n                this.loading = true;\r\n                this.results = [];\r\n            } else {\r\n                var startItem = this.currentStartItem;\r\n                var res = this.searchQuery ? this.data.filter(filterArray.bind(this.searchQuery.toLowerCase())) : this.data;\r\n                filteredTotal = res.length;\r\n                this.results = res.slice(startItem, startItem + this.itemsPerPage);\r\n            }\r\n            this.currentEndItem = Math.min(this.currentStartItem + this.itemsPerPage, filteredTotal);\r\n            this.pageTotal = Math.ceil(filteredTotal / this.itemsPerPage);\r\n            this.filteredTotal = filteredTotal;\r\n            this.update();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Page forward or backward.\r\n     * @param {number} d - Direction to move, 1 is forward, -1 is backward.\r\n     * @param {number} m - Move to end (first or last page) if true.\r\n     */\r\n    doTable.prototype.moveToPage = function(d, m) {\r\n        this.changePage(d === 1 ? m ? this.pageTotal : this.currentStartItem / this.itemsPerPage + 2 : m ? 1 : this.currentStartItem / this.itemsPerPage);\r\n    };\r\n\r\n    /**\r\n     * Move to the specified page number.\r\n     * @param {number|Event} e - New page number, or an event that triggered the change.\r\n     */\r\n    doTable.prototype.changePage = function(e) {\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        var page = (isNaN(e) ? e.target.value : e) * 1;\r\n        if (page <= this.pageTotal && page > 0) {\r\n            this.setCurrentStartItem((page - 1) * this.itemsPerPage);\r\n            this.update();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Reset table sorting.\r\n     */\r\n    doTable.prototype.resetSort = function(column) {\r\n        $.forEach(this.opts.columns, function(x) {\r\n            if (x !== this) {\r\n                delete x.sortOrder;\r\n                delete x.sortDir;\r\n            }\r\n        }, column);\r\n    };\r\n\r\n    /**\r\n     * Change the sorting order.\r\n     * @param {string} fieldName - Name of the field to sort on.\r\n     * @param {string} dataType - Data type of the field.\r\n     * @param {Event} e - Event that triggered the change.\r\n     */\r\n    doTable.prototype.changeSort = function(fieldName, dataType, e) {\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        var sortOrder = this.opts.columns.filter(function(x) {\r\n            return x.sortDir;\r\n        }).length + 1;\r\n\r\n        var column = $.findByKey(this.opts.columns, 'field', fieldName);\r\n        if (e.shiftKey) {\r\n            document.getSelection().removeAllRanges();\r\n        } else {\r\n            sortOrder = 0;\r\n            this.resetSort(column);\r\n        }\r\n\r\n        if ($.isNull(column.sortDir)) {\r\n            column.sortDir = 'ASC';\r\n            column.sortOrder = sortOrder;\r\n        } else if (e.shiftKey) {\r\n            if (column.dir === 'DESC') {\r\n                delete column.sortDir;\r\n                delete column.sortOrder;\r\n            } else {\r\n                column.sortDir = 'DESC';\r\n            }\r\n        } else {\r\n            column.sortDir = column.sortDir === 'ASC' ? 'DESC' : 'ASC';\r\n        }\r\n\r\n        this.sort();\r\n        this.setCurrentStartItem(0);\r\n        this.update();\r\n    };\r\n\r\n    /**\r\n     * Sort the underlying data.\r\n     * @param {bool} refresh - Refresh the data from the server.\r\n     */\r\n    doTable.prototype.sort = function(refresh) {\r\n        var sortColumns = this.buildSortList();\r\n        this.data.sort(sortColumns && sortColumns.length > 0 ? compare.bind(sortColumns) : defaultCompare);\r\n        this.store('sorting', JSON.stringify(sortColumns));\r\n        this.filterResults($.coalesce(refresh, true));\r\n    };\r\n\r\n    /**\r\n     * Set up the table and column styles and events.\r\n     */\r\n    doTable.prototype.setLayout = function() {\r\n        var table = this.getTable();\r\n        if (table !== null) {\r\n            table.style.tableLayout = 'fixed';\r\n            this.clientWidth = this.getContainer().clientWidth;\r\n            table.tHead.style.width = table.style.width = (this.width / 100 * table.offsetWidth) + 'px';\r\n\r\n            var hWidth = table.tHead.offsetWidth;\r\n            var tWidth = table.offsetWidth;\r\n            var i = 0;\r\n            var cells = table.tHead.rows[0].cells;\r\n            $.forEach(this.opts.columns, function(x) {\r\n                if (!x.width) {\r\n                    x.width = cells[i].offsetWidth / hWidth * 100;\r\n                }\r\n                cells[i].style.width = x.width / 100 * tWidth + 'px';\r\n                ++i;\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Update the table header style.\r\n     */\r\n    doTable.prototype.updateLayout = function() {\r\n        var table = this.getTable();\r\n        if (!$.isVisible(table)) {\r\n            return;\r\n        }\r\n        var contentNode = this.getContainer();\r\n        $.get('.dotable-scrollable', contentNode).style.paddingTop = table.tHead.offsetHeight + 'px';\r\n        var colGroup = $.get('.dotable-column-group', contentNode);\r\n        var tableHeaderRow = this.getTableHeaderRow();\r\n        for (var i = 0; i < this.opts.columns.length; i++) {\r\n            colGroup.children[i].style.width = tableHeaderRow.cells[i].style.width;\r\n        }\r\n        if (this.clientWidth > 0 && contentNode.clientWidth / this.clientWidth !== 1) {\r\n            this.onResize();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Update the table and column widths based on a window resize.\r\n     */\r\n    doTable.prototype.onResize = function() {\r\n        var cWidth = this.getContainer().clientWidth;\r\n        if (cWidth === 0) {\r\n            return;\r\n        }\r\n        var scale = cWidth / this.clientWidth;\r\n        this.clientWidth = cWidth;\r\n        var table = this.getTable();\r\n        table.tHead.style.width = table.style.width = (pixelToFloat(table.style.width) * scale) + 'px';\r\n\r\n        var tableHeaderRow = this.getTableHeaderRow();\r\n        var cell;\r\n        for (var i = 0; i < this.opts.columns.length; i++) {\r\n            cell = tableHeaderRow.cells[i];\r\n            cell.style.width = (pixelToFloat(cell.style.width) * scale) + 'px';\r\n        }\r\n        this.updateLayout();\r\n    };\r\n\r\n    /**\r\n     * Make the table header scroll horizontally with the table\r\n     * @param {Event} e - Event that triggered the scroll.\r\n     */\r\n    doTable.prototype.onScroll = function(e) {\r\n        var head = this.getTable().tHead;\r\n        var scroll = e.target;\r\n        if (-head.offsetLeft !== scroll.scrollLeft) {\r\n            head.style.left = '-' + scroll.scrollLeft + 'px';\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle dragging to change column widths.\r\n     * @param {type} e - Event that triggered the change.\r\n     */\r\n    doTable.prototype.onHeaderMouseDown = function(e) {\r\n        if (e.button !== 0) {\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        var callbackFunc = function(cellEl) {\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n\r\n            var contentNode = this.getContainer();\r\n            var table = this.getTable();\r\n            self.resizeContext = {\r\n                colIndex: cellEl.cellIndex,\r\n                initX: e.clientX,\r\n                scrWidth: $.get('.dotable-scrollable', contentNode).offsetWidth,\r\n                initTblWidth: table.offsetWidth,\r\n                initColWidth: pixelToFloat($.get('.dotable-column-group', contentNode).children[cellEl.cellIndex].style.width),\r\n                layoutTimer: null\r\n            };\r\n        };\r\n        self.inResizeArea(e, callbackFunc);\r\n    };\r\n\r\n    /**\r\n     * Handle resizing columns.\r\n     * @param {Event} e - Event that triggered the change.\r\n     */\r\n    doTable.prototype.onMouseMove = function(e) {\r\n        var newStyle = '';\r\n        var cursorFunc = function() {\r\n            newStyle = 'col-resize';\r\n        };\r\n        this.inResizeArea(e, cursorFunc);\r\n        var table = this.getTable();\r\n        if (table.tHead.style.cursor !== newStyle) {\r\n            table.tHead.style.cursor = newStyle;\r\n        }\r\n\r\n        var ctx = this.resizeContext;\r\n        if ($.isNull(ctx)) {\r\n            return;\r\n        }\r\n\r\n        e.stopImmediatePropagation();\r\n        e.preventDefault();\r\n\r\n        var newColWidth = Math.max(ctx.initColWidth + e.clientX - ctx.initX, this.opts.columnMinWidth);\r\n        table.tHead.style.width = table.style.width = (ctx.initTblWidth + (newColWidth - ctx.initColWidth)) + 'px';\r\n\r\n        var tableHeaderRow = this.getTableHeaderRow();\r\n        $.get('.dotable-column-group', this.getContainer()).children[ctx.colIndex].style.width = tableHeaderRow.cells[ctx.colIndex].style.width = newColWidth + 'px';\r\n\r\n        if (ctx.layoutTimer === null) {\r\n            var self = this;\r\n            var timerFunc = function() {\r\n                self.resizeContext.layoutTimer = null;\r\n                self.updateLayout();\r\n            };\r\n            ctx.layoutTimer = setTimeout(timerFunc, 25);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Update column widths and save them.\r\n     */\r\n    doTable.prototype.onMouseUp = function() {\r\n        var ctx = this.resizeContext;\r\n        if ($.isNull(ctx)) {\r\n            return;\r\n        }\r\n\r\n        if (ctx.layoutTimer !== null) {\r\n            clearTimeout(ctx.layoutTimer);\r\n        }\r\n        this.resizeContext = null;\r\n\r\n        var table = this.getTable();\r\n        var tableHeaderRow = this.getTableHeaderRow();\r\n        var newTblWidth = table.offsetWidth;\r\n        this.width = (newTblWidth / ctx.scrWidth * 100).toFixed(2);\r\n        this.store('width', this.width);\r\n        for (var i = 0; i < this.opts.columns.length; i++) {\r\n            this.opts.columns[i].width = (pixelToFloat(tableHeaderRow.cells[i].style.width) / newTblWidth * 100).toFixed(2);\r\n            this.store(this.opts.columns[i].field + '.width', this.opts.columns[i].width);\r\n        }\r\n\r\n        this.updateLayout();\r\n    };\r\n\r\n    /**\r\n     * Check if the cursor is in the area where the user can click to drag a column.\r\n     * @param {Event} e - Event that triggered the check.\r\n     * @param {Function} callback - Function to run if in the resize area.\r\n     */\r\n    doTable.prototype.inResizeArea = function(e, callback) {\r\n        var tblX = e.clientX;\r\n        var el;\r\n        var table = this.getTable();\r\n        for (el = table.tHead; el !== null; el = el.offsetParent) {\r\n            tblX -= el.offsetLeft + el.clientLeft - el.scrollLeft;\r\n        }\r\n\r\n        var cellEl = e.target;\r\n        while (cellEl !== table.tHead && cellEl !== null) {\r\n            if (cellEl.nodeName === 'TH') {\r\n                break;\r\n            }\r\n            cellEl = cellEl.parentNode;\r\n        }\r\n\r\n        if (cellEl === table.tHead) {\r\n            var cells = this.getTableHeaderRow().cells;\r\n            for (var i = cells.length - 1; i >= 0; i--) {\r\n                cellEl = cells[i];\r\n                if (cellEl.offsetLeft <= tblX) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (cellEl !== null) {\r\n            var x = tblX;\r\n            for (el = cellEl; el !== table.tHead; el = el.offsetParent) {\r\n                if (el === null) {\r\n                    break;\r\n                }\r\n                x -= el.offsetLeft - el.scrollLeft + el.clientLeft;\r\n            }\r\n            if (x < 10 && cellEl.cellIndex !== 0) {\r\n                callback.call(this, cellEl.previousElementSibling);\r\n            } else if (x > cellEl.clientWidth - 10) {\r\n                callback.call(this, cellEl);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Make column resizing play nice with touch. \r\n     * http://stackoverflow.com/questions/28218888/touch-event-handler-overrides-click-handlers\r\n     * @param {Event} e Event that triggered the handler.\r\n     */\r\n    doTable.prototype.touchHandler = function(e) {\r\n        var mouseEvent = null;\r\n        var simulatedEvent = document.createEvent('MouseEvent');\r\n        var touch = e.changedTouches[0];\r\n\r\n        switch (e.type) {\r\n            case 'touchstart':\r\n                mouseEvent = 'mousedown';\r\n                this.totalDistance = 0;\r\n                this.lastSeenAt.x = touch.clientX;\r\n                this.lastSeenAt.y = touch.clientY;\r\n                break;\r\n            case 'touchmove':\r\n                mouseEvent = 'mousemove';\r\n                break;\r\n            case 'touchend':\r\n                if (this.lastSeenAt.x) {\r\n                    this.totalDistance += Math.sqrt(Math.pow(this.lastSeenAt.y - touch.clientY, 2) + Math.pow(this.lastSeenAt.x - touch.clientX, 2));\r\n                }\r\n                mouseEvent = this.totalDistance > 5 ? 'mouseup' : 'click';\r\n                this.lastSeenAt = { x: null, y: null };\r\n                break;\r\n        }\r\n\r\n        simulatedEvent.initMouseEvent(mouseEvent, true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);\r\n        $.dispatch(touch.target, simulatedEvent);\r\n        e.preventDefault();\r\n    };\r\n\r\n    /**\r\n     * Helper to get the table container node.\r\n     * @returns {Node} Container node reference.\r\n     */\r\n    doTable.prototype.getContainer = function() {\r\n        return $.get('#' + this.opts.id);\r\n    };\r\n\r\n    /**\r\n     * Helper to get the table node.\r\n     * @returns {Node} Table node reference.\r\n     */\r\n    doTable.prototype.getTable = function() {\r\n        return $.get('.dotable-data', this.getContainer());\r\n    };\r\n\r\n    /**\r\n     * Helper to get the table header row node.\r\n     * @returns {Node} Header row node reference.\r\n     */\r\n    doTable.prototype.getTableHeaderRow = function() {\r\n        return $.get('.dotable-data', this.getContainer()).tHead.rows[0];\r\n    };\r\n\r\n    /**\r\n     * Create the structure of the table and bind events.\r\n     */\r\n    doTable.prototype.create = function() {\r\n        var contentNode = this.getContainer();\r\n        contentNode.innerHTML = '';\r\n\r\n        var container = $.createNode('<div class=\"dash-table\"></div>');\r\n        container.innerHTML = _templates.headerFn(this) + _templates.bodyFn(this) + _templates.footerFn(this);\r\n        contentNode.appendChild(container);\r\n\r\n        $.on($.get('.dotable-search-input', container), 'input', this.setSearchQuery.bind(this));\r\n        $.on($.get('.dotable-items-input', container), 'change', this.setItemsPerPage.bind(this));\r\n        $.on($.get('.dotable-btn-first', container), 'click', this.moveToPage.bind(this, -1, true));\r\n        $.on($.get('.dotable-btn-previous', container), 'click', this.moveToPage.bind(this, -1, false));\r\n        $.on($.get('.dotable-btn-next', container), 'click', this.moveToPage.bind(this, 1, false));\r\n        $.on($.get('.dotable-btn-last', container), 'click', this.moveToPage.bind(this, 1, true));\r\n        $.on($.get('.dotable-area', container), 'scroll', this.onScroll.bind(this));\r\n\r\n        if (this.opts.editable) {\r\n            // bind column sort and column resize events\r\n            var thead = $.get('.dotable-head', container);\r\n            if (thead) {\r\n                var handler = this.touchHandler.bind(this);\r\n                $.on(thead, 'touchstart', handler);\r\n                $.on(thead, 'touchend', handler);\r\n                $.on(thead, 'touchmove', handler);\r\n                $.on(thead, 'touchcancel', handler);\r\n\r\n                var mouseFunc = this.onHeaderMouseDown.bind(this);\r\n                $.forEach($.getAll('th', thead), function(x) {\r\n                    $.on(x, 'mousedown', mouseFunc);\r\n                });\r\n\r\n                $.forEach($.getAll('.dotable-arrow', thead), function(x) {\r\n                    $.on(x, 'click', this.changeSort.bind(this, x.getAttribute('data-field'), x.getAttribute('data-type').toLowerCase()));\r\n                }, this);\r\n            }\r\n\r\n            this.events = {\r\n                resize: $.debounce(this.onResize.bind(this), 50),\r\n                move: this.onMouseMove.bind(this),\r\n                up: this.onMouseUp.bind(this)\r\n            };\r\n            $.on(window, 'resize', this.events.resize);\r\n            $.on(window, 'mousemove', this.events.move);\r\n            $.on(window, 'mouseup', this.events.up);\r\n        }\r\n\r\n        this.setLayout();\r\n    };\r\n\r\n    /**\r\n     * Process a single row making the formatted display values for each column.\r\n     * @param {Object} obj - Row of data to process.\r\n     * @returns {Object} New object with values ready to display.\r\n     */\r\n    doTable.prototype.makeRow = function(obj) {\r\n        var newObj = $.clone(obj);\r\n        $.forEach(this.opts.columns, function(x) {\r\n            if (newObj.hasOwnProperty(x.field)) {\r\n                newObj[x.field] = this(newObj[x.field], x.dataType);\r\n            }\r\n        }, this.opts.displayValueFn);\r\n        return newObj;\r\n    };\r\n\r\n    /**\r\n     * Update the table contents and other buttons/labels.\r\n     */\r\n    doTable.prototype.update = function() {\r\n        var contentNode = this.getContainer();\r\n\r\n        if (this.opts.editable) {\r\n            // update column sort icons\r\n            $.forEach($.getAll('.dotable-arrow', $.get('.dotable-head', $.get('.dash-table', contentNode))), function(x) {\r\n                var val = $.findByKey(this.opts.columns, 'field', x.getAttribute('data-field'));\r\n                if (val && val.sortDir) {\r\n                    $.removeClass(x, 'dash-sort-up');\r\n                    $.removeClass(x, 'dash-sort-down');\r\n                    $.removeClass(x, 'dash-sort');\r\n                    if (val.sortDir === 'ASC') {\r\n                        $.addClass(x, 'dash-sort-up');\r\n                    } else {\r\n                        $.addClass(x, 'dash-sort-down');\r\n                    }\r\n                } else {\r\n                    $.removeClass(x, 'dash-sort-up');\r\n                    $.removeClass(x, 'dash-sort-down');\r\n                    $.addClass(x, 'dash-sort');\r\n                }\r\n            }, this);\r\n        }\r\n\r\n        // toggle disabled status for pagination buttons\r\n        $.disableIf($.get('.dotable-btn-first', contentNode), this.currentStartItem === 0);\r\n        $.disableIf($.get('.dotable-btn-previous', contentNode), this.currentStartItem === 0);\r\n        $.disableIf($.get('.dotable-btn-next', contentNode), this.currentStartItem >= this.filteredTotal - this.itemsPerPage);\r\n        $.disableIf($.get('.dotable-btn-last', contentNode), this.currentStartItem >= this.filteredTotal - this.itemsPerPage);\r\n\r\n        // update table body\r\n        var body = $.get('.dotable-body', contentNode);\r\n        if (body) {\r\n            body.innerHTML = '';\r\n\r\n            if (this.loading) {\r\n                body.innerHTML = _templates.loadingFn(this.opts.columns.length);\r\n            } else if (this.loadingError) {\r\n                body.innerHTML = _templates.errorFn(this.opts.columns.length);\r\n                $.on($.get('.dotable-btn-refresh', body), 'click', this.refresh.bind(this));\r\n            } else if (this.filteredTotal === 0) {\r\n                body.innerHTML = _templates.noDataFn(this.opts.columns.length);\r\n            } else {\r\n                var bodyHTML = '';\r\n                $.forEach($.map(this.results, doTable.prototype.makeRow.bind(this)), function(x) {\r\n                    bodyHTML += this(x);\r\n                }, this.opts.rowTemplateFn);\r\n                body.innerHTML = bodyHTML;\r\n            }\r\n        }\r\n\r\n        // set values for showing `x - x of x` rows\r\n        $.setText($.get('.dotable-start-item', contentNode), this.filteredTotal ? this.currentStartItem + 1 : 0);\r\n        $.setText($.get('.dotable-end-item', contentNode), this.currentEndItem);\r\n        $.setText($.get('.dotable-total-items', contentNode), this.filteredTotal);\r\n\r\n        this.updateLayout();\r\n    };\r\n\r\n    /**\r\n     * Destroy the table. Remove bound events.\r\n     */\r\n    doTable.prototype.destroy = function() {\r\n        if (this.opts.editable) {\r\n            $.off(window, 'resize', this.events.resize);\r\n            $.off(window, 'mousemove', this.events.move);\r\n            $.off(window, 'mouseup', this.events.up);\r\n        }\r\n    };\r\n\r\n    return doTable;\r\n});\r\n","/*!\r\n * Wraps functionality needed to display a dashboard widget.\r\n */\r\n(function(root, factory) {\r\n    root.Widget = factory(root.$, root.DashChart, root.Draggabilly, root.Rect);\r\n})(this, function($, DashChart, Draggabilly, Rect) {\r\n    'use strict';\r\n\r\n    var _columns = 20;\r\n    var _rows = 20;\r\n\r\n    /**\r\n     * Use object properties to make class list for a widget container.\r\n     * @param {Object} obj - Widget properties.\r\n     * @returns {string} CSS class list.\r\n     */\r\n    var buildClassList = function(obj) {\r\n        return 'grid-item grid-item-width-' + obj.width + ' grid-item-height-' + obj.height +\r\n            ' grid-item-x-' + obj.x + ' grid-item-y-' + obj.y;\r\n    };\r\n\r\n    /**\r\n     * Sort widgets from top left to bottom right.\r\n     * @param {Widget} a - First widget to compare.\r\n     * @param {Widget} b - Second widget to compare.\r\n     * @returns {number} Negative number if a comes first, positive number if b, zero if equal.\r\n     */\r\n    var rectSort = function(a, b) {\r\n        if (a.rect.y === b.rect.y && a.rect.x === b.rect.x) {\r\n            return a.rect.updated ? -1 : b.rect.updated ? 1 : 0;\r\n        }\r\n        if (a.rect.x === b.rect.x) {\r\n            return a.rect.y - b.rect.y;\r\n        }\r\n        return a.rect.x - b.rect.x;\r\n    };\r\n\r\n    /**\r\n     * Declare Widget class.\r\n     * @param {Node} widgetNode - DOM node that contains the widget.\r\n     */\r\n    var Widget = function(widgetNode) {\r\n        this.init(widgetNode);\r\n    };\r\n\r\n    Widget.prototype = {\r\n        /**\r\n         * Initialize the widget.\r\n         * @param {Node} widgetNode - DOM node that contains the widget.\r\n         */\r\n        init: function(widgetNode) {\r\n            // attach this to the container for reference in the dashboard\r\n            widgetNode.widget = this;\r\n\r\n            this.opts = {\r\n                id: widgetNode.id,\r\n                dashboardId: 'bodyContent'\r\n            };\r\n            this.chart = null;\r\n            this.interval = null;\r\n            this.isFullscreen = false;\r\n            this.dragMargin = 0;\r\n\r\n            $.on($.get('.btn-refresh', widgetNode), 'click', this.forceRefresh.bind(this));\r\n            $.on($.get('.btn-fullscreen', widgetNode), 'click', this.toggleFullScreen.bind(this));\r\n            this.rect = new Rect(widgetNode);\r\n            this.setupDraggie(widgetNode);\r\n\r\n            var chartNode = $.get('.widget-chart', widgetNode);\r\n            if (chartNode) {\r\n                this.chart = new DashChart(chartNode, false);\r\n            }\r\n            var refreshSeconds = this.getRefreshRate();\r\n            if (refreshSeconds > 0) {\r\n                this.interval = setInterval(this.refresh.bind(this), refreshSeconds * 1000);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the container element for the widget.\r\n         * @returns {Node} DOM node that contains the widget content.\r\n         */\r\n        getContainer: function() {\r\n            return $.get('#' + this.opts.id);\r\n        },\r\n\r\n        /**\r\n         * Get the container element for the dashboard.\r\n         * @returns {Node} DOM node that contains the widget content.\r\n         */\r\n        getDashboardContainer: function() {\r\n            return $.get('#' + this.opts.dashboardId);\r\n        },\r\n\r\n        /**\r\n         * Get the refresh rate in seconds for the widget.\r\n         * @returns {Number} Refresh rate in seconds. Zero means no refresh.\r\n         */\r\n        getRefreshRate: function() {\r\n            var container = this.getContainer();\r\n            return container.hasAttribute('data-refresh') ? container.getAttribute('data-refresh') * 1 : 0;\r\n        },\r\n\r\n        makeGrid: function() {\r\n            var dashboardNode = this.getDashboardContainer();\r\n            return { columns: _columns, rows: _rows, columnWidth: dashboardNode.parentNode.offsetWidth / _columns, rowHeight: dashboardNode.parentNode.offsetHeight / _rows };\r\n        },\r\n\r\n        /**\r\n         * Get the widget objects for the dashboard.\r\n         * @returns {Widget[]} Array of widgets.\r\n         */\r\n        getWidgets: function() {\r\n            return $.getAll('.grid-item').map(function(x) { return x.widget; });\r\n        },\r\n\r\n        /**\r\n         * Update widget position to avoid collisions after a resize or drag.\r\n         */\r\n        updatePosition: function() {\r\n            var sorted = this.getWidgets();\r\n            sorted.sort(rectSort);\r\n\r\n            var l = sorted.length, aWidget, bWidget;\r\n            for (var i = 0; i < l; i++) {\r\n                aWidget = sorted[i];\r\n                aWidget.rect.updated = false;\r\n\r\n                for (var j = 0; j < l; j++) {\r\n                    if (i === j) {\r\n                        continue;\r\n                    }\r\n\r\n                    bWidget = sorted[j];\r\n                    if (bWidget.rect.overlaps(aWidget.rect)) {\r\n                        if (bWidget.rect.y > aWidget.rect.y) {\r\n                            // need to move down\r\n                            bWidget.setLocation(bWidget.rect.x, aWidget.rect.y + aWidget.rect.height);\r\n                        } else if (aWidget.rect.x + aWidget.rect.width + bWidget.rect.width > _columns) {\r\n                            // need to move down\r\n                            bWidget.setLocation(bWidget.rect.x, aWidget.rect.y + aWidget.rect.height);\r\n                        } else {\r\n                            // safe to move right\r\n                            bWidget.setLocation(aWidget.rect.x + aWidget.rect.width, bWidget.rect.y);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.savePosition();\r\n        },\r\n\r\n        /**\r\n         * Save position settings back to server.\r\n         */\r\n        savePosition: function() {\r\n            var positions = this.getWidgets().map(function(w) {\r\n                return {\r\n                    Id: w.opts.id || 0,\r\n                    Width: w.rect.width || 1,\r\n                    Height: w.rect.height || 1,\r\n                    X: w.rect.x || 0,\r\n                    Y: w.rect.y || 0\r\n                };\r\n            });\r\n\r\n            var dash = this.getDashboardContainer();\r\n            $.ajax({\r\n                method: 'POST',\r\n                url: dash.getAttribute('data-save-url'),\r\n                data: { Widgets: positions },\r\n                block: false\r\n            }, null);\r\n        },\r\n\r\n        /**\r\n         * Add the draggabilly handlers.\r\n         * @param {Node} container - DOM node that contains the widget content.\r\n         * @param {Object} grid - Object that contains the grid columnWidth and rowHeight.\r\n         */\r\n        setupDraggie: function(container, grid) {\r\n            container = $.coalesce(container, this.getContainer());\r\n            var g = this.opts.grid = $.coalesce(grid, this.makeGrid());\r\n\r\n            $.destroy(this.moveDraggie);\r\n            this.moveDraggie = new Draggabilly(container, { handle: '.drag-handle', grid: [g.columnWidth, g.rowHeight], minZero: true }).on('dragEnd', this.stopDrag.bind(this));\r\n\r\n            $.destroy(this.resizeDraggie);\r\n            var handle = $.get('.resizable-handle', container);\r\n            this.resizeDraggie = new Draggabilly(handle, { grid: [g.columnWidth, g.rowHeight] }).on('dragStart', this.initResize.bind(this)).on('dragEnd', this.stopResize.bind(this));\r\n\r\n            var style = handle.currentStyle || window.getComputedStyle(handle);\r\n            this.dragMargin = style.marginRight.replace('px', '') * 1;\r\n        },\r\n\r\n        /**\r\n         * Stop dragging the widget and updates its location.\r\n         */\r\n        stopDrag: function() {\r\n            var x = Math.max(Math.round(this.moveDraggie.position.x / this.opts.grid.columnWidth), 0);\r\n            var y = Math.max(Math.round(this.moveDraggie.position.y / this.opts.grid.rowHeight), 0);\r\n            if (x + this.rect.width > this.opts.grid.columns) {\r\n                x = this.opts.grid.columns - this.rect.width;\r\n            }\r\n            if (y + this.rect.height > this.opts.grid.rows) {\r\n                y = this.opts.grid.rows - this.rect.height;\r\n            }\r\n            this.setLocation(x, y);\r\n            this.rect.updated = true;\r\n            this.updatePosition();\r\n        },\r\n\r\n        /**\r\n         * Start resizing a widget\r\n         * @param {Event} event - Original mousedown or touchstart event\r\n         */\r\n        initResize: function(event) {\r\n            // clear any selection so browser doesn't think we are dragging the selection\r\n            window.getSelection().removeAllRanges();\r\n\r\n            var container = this.getContainer();\r\n            container.style['z-index'] = 9999;\r\n            var pos = event.changedTouches ? event.changedTouches[0] : event;\r\n            this.x = pos.clientX;\r\n            this.y = pos.clientY;\r\n\r\n            var styles = document.defaultView.getComputedStyle(container);\r\n            this.width = styles.width.replace('px', '') * 1;\r\n            this.height = styles.height.replace('px', '') * 1;\r\n\r\n            if (event.target !== event.currentTarget) {\r\n                event.stopPropagation();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update the widget after the user finishes resizing.\r\n         */\r\n        stopResize: function() {\r\n            var container = this.getContainer();\r\n            var w = Math.max(this.width + this.resizeDraggie.position.x + this.dragMargin, this.opts.grid.columnWidth * 4);\r\n            var h = Math.max(this.height + this.resizeDraggie.position.y, this.opts.grid.rowHeight * 4);\r\n\r\n            this.setSize(Math.min(Math.round(w / this.opts.grid.columnWidth), this.opts.grid.columns), Math.min(Math.round(h / this.opts.grid.rowHeight), this.opts.grid.rows));\r\n\r\n            var handle = $.get('.resizable-handle', container);\r\n            if (handle) {\r\n                handle.removeAttribute('style');\r\n            }\r\n\r\n            this.savePosition();\r\n            this.updateLayout();\r\n            this.rect.updated = true;\r\n        },\r\n\r\n        refresh: function() {\r\n            var container = this.getContainer();\r\n            var table = $.get('[data-toggle=\"dotable\"]', container);\r\n            if (table && table.doTable) {\r\n                table.doTable.refresh();\r\n            } else {\r\n                this.chart.run();\r\n            }\r\n            $.setText($.get('.grid-updated-time', container), new Date().toLocaleTimeString());\r\n        },\r\n\r\n        updateLayout: function() {\r\n            var table = $.get('[data-toggle=\"dotable\"]', this.getContainer());\r\n            if (table && table.doTable) {\r\n                table.doTable.updateLayout();\r\n            } else {\r\n                this.chart.resize();\r\n            }\r\n        },\r\n\r\n        forceRefresh: function() {\r\n            var refreshSeconds = this.getRefreshRate();\r\n            if (refreshSeconds > 0) {\r\n                clearInterval(this.interval);\r\n                this.interval = setInterval(this.refresh.bind(this), refreshSeconds * 1000);\r\n            }\r\n            this.refresh();\r\n        },\r\n\r\n        /**\r\n         * Refresh the style based on the dimensions.\r\n         * @param {number} width - New width of the widget.\r\n         * @param {number} height - New height of the widget.\r\n         */\r\n        setSize: function(width, height) {\r\n            this.rect.width = width;\r\n            this.rect.height = height;\r\n            this.updateStyle();\r\n        },\r\n\r\n        /**\r\n         * Refresh the style based on the dimensions.\r\n         * @param {number} x - New x coordinate of the widget.\r\n         * @param {number} y - New y coordinate of the widget.\r\n         */\r\n        setLocation: function(x, y) {\r\n            this.rect.x = x;\r\n            this.rect.y = y;\r\n            this.updateStyle();\r\n        },\r\n\r\n        /**\r\n        * Refresh the style based on the dimensions.\r\n        */\r\n        updateStyle: function() {\r\n            var container = this.getContainer();\r\n            container.className = buildClassList(this.rect);\r\n            container.removeAttribute('style');\r\n        },\r\n\r\n        /**\r\n         * Destroy the widget.\r\n         * @param {bool} totalDestruction - Remove the container node and null out the widget object if true.\r\n         */\r\n        destroy: function(totalDestruction) {\r\n            var table = $.get('[data-toggle=\"dotable\"]', this.getContainer());\r\n            if (table && table.doTable) {\r\n                table.doTable.destroy();\r\n            } else {\r\n                $.destroy(this.chart);\r\n            }\r\n\r\n            $.destroy(this.moveDraggie);\r\n            $.destroy(this.resizeDraggie);\r\n\r\n            if (this.interval) {\r\n                clearInterval(this.interval);\r\n                this.interval = null;\r\n            }\r\n\r\n            if ($.coalesce(totalDestruction, true)) {\r\n                var container = this.getContainer();\r\n                container.widget = null;\r\n                container.parentNode.removeChild(container);\r\n            }\r\n        },\r\n\r\n        toggleFullScreen: function() {\r\n            var container = this.getContainer();\r\n            var fullScreenIcon = $.get('.btn-fullscreen i', container);\r\n            $.toggleClass(container, 'full-screen', !this.isFullscreen);\r\n            $.toggleClass(fullScreenIcon, 'dash-min', !this.isFullscreen);\r\n            $.toggleClass(fullScreenIcon, 'dash-max', this.isFullscreen);\r\n            var isFullscreen = this.isFullscreen;\r\n            $.getAll('.fs-disabled', container).forEach(function(x) { $.toggleClass(x, 'disabled', !isFullscreen); });\r\n            this.isFullscreen = !this.isFullscreen;\r\n            this.updateLayout();\r\n        }\r\n    };\r\n\r\n    return Widget;\r\n});\r\n","/*!\r\n * Wraps content processing functionality.\r\n */\r\n(function($, Alertify, pjax, doTable, CollapsibleList, Autocomplete, Draggabilly, flatpickr, DashChart, ColorPicker, Widget) {\r\n    'use strict';\r\n\r\n    var _autocompletes = [];\r\n    var _draggabillies = [];\r\n    var _charts = [];\r\n    var _colorpickers = [];\r\n    var _dashboardEvents = null;\r\n\r\n    /**\r\n     * Display context help.\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var contextHelp = function() {\r\n        $.on(this, 'click', Alertify.alert.bind(null, this.getAttribute('data-message').replace(/&quot;/g, '\"'), focusOnClose, focusOnClose));\r\n    };\r\n\r\n    /**\r\n     * Get the correct node from the object.\r\n     * @param {Node|Event} node - Object to check.\r\n     * @returns {Node} Returns DOM node.\r\n     */\r\n    var getNode = function(node) {\r\n        return $.isNode(node) ? node : node.target;\r\n    };\r\n\r\n    /**\r\n     * Hide content.\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var hide = function() {\r\n        var node = $.get(this.getAttribute('data-target'));\r\n        if (node) {\r\n            $.on(this, 'click', $.hide.bind(null, node, false));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Conditionally disable inputs.\r\n     * @this {Node} Input the event is being bound to.\r\n     */\r\n    var conditionallyDisable = function() {\r\n        var node = $.get(this.getAttribute('data-target'));\r\n        $.disableIf(node, this.value == this.getAttribute('data-match'));\r\n        if (this.value != this.getAttribute('data-match')) {\r\n            node.value = '';\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Conditionally disable content.\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var disable = function() {\r\n        $.onChange(this, conditionallyDisable, true);\r\n    };\r\n\r\n    /**\r\n     * Initialize autocomplete.\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var autocompleteLoad = function() {\r\n        // @todo maybe add a way to include source list in original html response instead of requiring another request\r\n\r\n        var preload = ['true', 'True'].indexOf(this.getAttribute('data-preload')) > -1;\r\n        var self = this;\r\n        if (preload) {\r\n            $.ajax({\r\n                method: self.getAttribute('data-method') || 'GET',\r\n                url: self.getAttribute('data-url')\r\n            }, function(data) {\r\n                if (data && data.length) {\r\n                    _autocompletes.push(new Autocomplete({ selector: self, sourceData: data }));\r\n                } else {\r\n                    // error - @todo what do i do here?\r\n                    _autocompletes.push(new Autocomplete({ selector: self, sourceData: null }));\r\n                }\r\n            });\r\n        } else {\r\n            _autocompletes.push(new Autocomplete({\r\n                selector: self,\r\n                source: function(search, response) {\r\n                    var params = { search: search };\r\n                    if (self.hasAttribute('data-params')) {\r\n                        self.getAttribute('data-params').split(',').forEach(function(x) {\r\n                            var node = $.get(x);\r\n                            if (node) {\r\n                                params[node.id] = node.value;\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    $.ajax({\r\n                        method: self.getAttribute('data-method') || 'GET',\r\n                        url: self.getAttribute('data-url'),\r\n                        data: params\r\n                    }, function(data) {\r\n                        if (data && data.length) {\r\n                            response(data);\r\n                        } else {\r\n                            // error - @todo what do i do here?\r\n                        }\r\n                    });\r\n                }\r\n            }));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy autocompletes on this page.\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var autocompleteUnload = function() {\r\n        _autocompletes.forEach(function(x) {\r\n            x.destroy();\r\n        });\r\n        _autocompletes = [];\r\n    };\r\n\r\n    /**\r\n     * Set focus on an element after a dialog closes.\r\n     * @param {Event} e - Event that originally triggered this.\r\n     */\r\n    var focusOnClose = function(e) {\r\n        if (e && e.target) {\r\n            e.target.focus();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initialize a doTable instance\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var doTableLoad = function() {\r\n        var node = getNode(this);\r\n        if (node) {\r\n            new doTable(node);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy a doTable instance\r\n     * @this {Node} Node for the table to destroy.\r\n     */\r\n    var doTableUnload = function() {\r\n        var node = getNode(this);\r\n        if (node && node.doTable) {\r\n            node.doTable.destroy();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initialize a chart instance\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var chartLoad = function() {\r\n        var node = getNode(this);\r\n        if (node) {\r\n            _charts.push(new DashChart(node, true));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy a chart instance\r\n     * @this {Node} Node for the chart to destroy.\r\n     */\r\n    var chartUnload = function() {\r\n        _charts.forEach(function(x) {\r\n            x.destroy();\r\n        });\r\n        _charts = [];\r\n    };\r\n\r\n    /**\r\n     * Toggle for exporting a chart.\r\n     */\r\n    var chartExportLoad = function() {\r\n        var node = getNode(this);\r\n        if (node) {\r\n            $.on(node, 'click', function() {\r\n                var chartContainer = $.get('.chart-container');\r\n                if (chartContainer) {\r\n                    // @todo this is sloppy - probably need a data- attribute of some sort to help narrow querySelector down\r\n                    $.get('.export-width').value = chartContainer.offsetWidth;\r\n                    $.get('.export-data').value = _charts.length ? _charts[0].chart.toBase64Image() : null;\r\n                    $.get('.export-form').submit();\r\n                }\r\n            }, true);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Update zIndex of column being dragged so it is on top.\r\n     * @param {Event} event - Original mousedown or touchstart event\r\n     */\r\n    var startColumnDrag = function(event) {\r\n        var target = $.hasClass(event.target, 'column-item') ? event.target : event.target.parentNode;\r\n        target.style['z-index'] = 9999;\r\n    };\r\n\r\n    /**\r\n     * Update column lists when the user stops dragging a column.\r\n     * @param {Event} event - Original mouseup or touchend event\r\n     * @param {MouseEvent|Touch} pointer - Event object that has .pageX and .pageY\r\n     */\r\n    var stopColumnDrag = function(event, pointer) {\r\n        var target = $.hasClass(event.target, 'column-item') ? event.target : event.target.parentNode;\r\n        var isLeft = (pointer.x || pointer.clientX) + target.offsetWidth / 2 < document.documentElement.clientWidth / 2;\r\n        var newPos = Math.max(Math.round(target.offsetTop / target.offsetHeight), 0);\r\n\r\n        $.removeClass(target, 'column-item-right');\r\n        $.removeClass(target, 'column-item-left');\r\n        target.removeAttribute('style');\r\n\r\n        var leftItems = $.getAll('.column-item-left');\r\n        leftItems.sort(columnSort);\r\n        var rightItems = $.getAll('.column-item-right');\r\n        rightItems.sort(columnSort);\r\n        newPos = Math.min(newPos, isLeft ? leftItems.length : rightItems.length);\r\n\r\n        if (isLeft) {\r\n            $.addClass(target, 'column-item-left');\r\n            leftItems.splice(newPos, 0, target);\r\n        } else {\r\n            $.addClass(target, 'column-item-right');\r\n            rightItems.splice(newPos, 0, target);\r\n        }\r\n\r\n        updateColumnList(leftItems, true);\r\n        updateColumnList(rightItems, false);\r\n        $.addClass($.closest('form', target), 'has-changes');\r\n    };\r\n\r\n    /**\r\n     * Sort columns by their vertical position.\r\n     * @param {Object} a - Object for first column.\r\n     * @param {Object} b - Object for second column.\r\n     * @returns {bool} True if first column should be after second column, else false;\r\n     */\r\n    var columnSort = function(a, b) {\r\n        return a.offsetTop > b.offsetTop;\r\n    };\r\n\r\n    /**\r\n     * Update the position and displayOrder of columns in a list.\r\n     * @param {Node[]} items - Array of column nodes.\r\n     * @param {bool} isLeft - True if the left column list, else false.\r\n     */\r\n    var updateColumnList = function(items, isLeft) {\r\n        $.forEach(items, function(x, i) {\r\n            updateColumn(x, i, isLeft);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Update the class list and displayOrder for a column item.\r\n     * @param {Node} element - DOM node for the column.\r\n     * @param {number} index - New index of the column in the list.\r\n     * @param {bool} isLeft - True if the column is in the left list, else false.\r\n     */\r\n    var updateColumn = function(element, index, isLeft) {\r\n        element.className = element.className.replace(/column-item-y-([0-9]*)/i, '').trim() + ' column-item-y-' + index;\r\n        var input = $.get('.column-grid-display-order', element);\r\n        if (input) {\r\n            if (isLeft) {\r\n                input.value = 0;\r\n            } else {\r\n                input.value = index + 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initialize the column selector.\r\n     */\r\n    var columnSelectorLoad = function() {\r\n        var node = getNode(this);\r\n        if (node) {\r\n            $.forEach($.getAll('.column-item', node), function(x) {\r\n                _draggabillies.push(new Draggabilly(x).on('dragStart', startColumnDrag).on('dragEnd', stopColumnDrag));\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy the column selector.\r\n     */\r\n    var columnSelectorUnload = function() {\r\n        $.forEach(_draggabillies, function(x) {\r\n            x.destroy();\r\n        });\r\n        _draggabillies = [];\r\n    };\r\n\r\n    /**\r\n     * Initialize widget.\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var widgetLoad = function() {\r\n        var node = getNode(this);\r\n        if (node) {\r\n            new Widget(node);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy widget.\r\n     * @this {Node} Node the event is being unbound from.\r\n     */\r\n    var widgetUnload = function() {\r\n        if (this.widget) {\r\n            this.widget.destroy(true);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initialize datepicker.\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var datepickerLoad = function() {\r\n        var node = getNode(this);\r\n        if (node) {\r\n            var opts = {\r\n                altInput: true,\r\n                defaultDate: node.value,\r\n                enableTime: true,\r\n                enableSeconds: true,\r\n                time_24hr: true\r\n            };\r\n            var lang = $.get('body').getAttribute('data-lang');\r\n            if (lang !== 'en') {\r\n                // @todo update this to be able to handle languages more gracefully\r\n                opts.locale = 'Spanish';\r\n            }\r\n            flatpickr(node, opts);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy datepickers on this page.\r\n     * @this {Node} Node the event is being unbound from.\r\n     */\r\n    var datepickerUnload = function() {\r\n        if (this._flatpickr) {\r\n            this._flatpickr.destroy();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initialize colorpicker.\r\n     * @this {Node} Node the picker is being bound to.\r\n     */\r\n    var colorpickerLoad = function() {\r\n        var node = getNode(this);\r\n        if (node) {\r\n            // @todo probably want to replace this with a better looking picker later, but it'll do for now\r\n            var newNode = $.createNode('<div id=\"colorpickerContainer\" class=\"cp-fancy\"></div>');\r\n            node.parentNode.insertBefore(newNode, node.nextSibling);\r\n            var picker = new ColorPicker(newNode, function(hex) {\r\n                node.value = hex;\r\n                //$.style('#selectedColorSwatch', { 'background-color': hex });\r\n            });\r\n            picker.setHex(node.value);\r\n            //$.style('#selectedColorSwatch', { 'background-color': node.value });\r\n\r\n            $.on(node, 'change', function() {\r\n                picker.setHex(this.value);\r\n            });\r\n\r\n            _colorpickers.push(picker);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy colorpickers on this page.\r\n     * @this {Node} Node the event is being unbound from.\r\n     */\r\n    var colorpickerUnload = function() {\r\n        $.forEach(_colorpickers, function(x) {\r\n            x.destroy();\r\n        });\r\n        _colorpickers = [];\r\n    };\r\n\r\n    /**\r\n     * Initialize content replacer.\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var contentReplaceLoad = function() {\r\n        $.onChange(this, function() {\r\n            var params = {};\r\n            if (this.hasAttribute('data-params')) {\r\n                this.getAttribute('data-params').split(',').forEach(function(x) {\r\n                    var node = $.get(x);\r\n                    if (node) {\r\n                        params[node.id] = node.value;\r\n                    }\r\n                });\r\n            }\r\n\r\n            loading();\r\n            $.ajax({\r\n                method: this.getAttribute('data-method') || 'GET',\r\n                url: this.getAttribute('data-url'),\r\n                data: params\r\n            }, function(html) {\r\n                var node = $.createNode(html);\r\n                if (node.id) {\r\n                    var existingNode = $.get('#' + node.id);\r\n                    if (existingNode) {\r\n                        processToggles(existingNode, true);\r\n                        processToggles(node);\r\n                        existingNode.parentNode.replaceChild(node, existingNode);\r\n                    }\r\n                }\r\n                done();\r\n            }, function() {\r\n                done();\r\n            });\r\n        }, false);\r\n    };\r\n\r\n    /**\r\n     * Focus on the first error or input.\r\n     * @param {Node} node - Parent node to search in.\r\n     */\r\n    var autofocus = function(node) {\r\n        if (!node) {\r\n            return null;\r\n        }\r\n        var elems = $.getAll('input[autofocus]', node).filter($.isVisible);\r\n        if (!elems.length) {\r\n            elems = $.getAll('.form-control-error:not([type=\"hidden\"]):not([disabled]):not([readonly]), .mform-control-error:not([type=\"hidden\"]):not([disabled]):not([readonly])', node).filter($.isVisible);\r\n        }\r\n        if (!elems.length) {\r\n            elems = $.getAll('input:not([type=\"hidden\"]):not([disabled]):not([readonly]), select:not([disabled]):not([readonly])', node).filter($.isVisible);\r\n        }\r\n        if (!elems.length) {\r\n            elems = $.getAll('button:not([disabled]), a:not([disabled]), [tabindex]:not([disabled]):not([tabindex=\"-1\"])', node).filter($.isVisible);\r\n        }\r\n        if (!elems.length) {\r\n            var dlg = $.closest('.rd-dialog', node);\r\n            if (dlg) {\r\n                elems = $.getAll('.rd-close', dlg).filter($.isVisible);\r\n            }\r\n        }\r\n        if (elems.length) {\r\n            elems[0].focus();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Replace the value of the data-target node with the data-value from this. Used for providing defaults via a dropdown.\r\n     */\r\n    var inputReplace = function() {\r\n        if (this.hasAttribute('data-target') && this.hasAttribute('data-value')) {\r\n            var target = $.get(this.getAttribute('data-target'));\r\n            if (target && !$.isNull(target.value)) {\r\n                target.value = this.getAttribute('data-value');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set up click event for nav menu.\r\n     */\r\n    var menuLoad = function() {\r\n        $.on(this, 'click', function() {\r\n            $.toggleClass('body', 'toggled', null);\r\n            $.dispatch(window, new Event('resize'));\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Initialize the dashboard.\r\n     * @this {Node} Node the picker is being bound to.\r\n     */\r\n    var dashboardLoad = function() {\r\n        var node = getNode(this);\r\n        if (node) {\r\n            _dashboardEvents = {\r\n                keydown: dashboardCheckKeyPress,\r\n                resize: $.debounce(dashboardResizeLayout, 200)\r\n            };\r\n            $.on(window, 'keydown', _dashboardEvents.keydown);\r\n            $.on(window, 'resize', _dashboardEvents.resize);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destory dashboard.\r\n     */\r\n    var dashboardUnload = function() {\r\n        if (_dashboardEvents) {\r\n            $.off(window, 'keydown', _dashboardEvents.keydown);\r\n            $.off(window, 'resize', _dashboardEvents.resize);\r\n        }\r\n        _dashboardEvents = null;\r\n    };\r\n\r\n    /**\r\n     * Get the widget objects for the dashboard.\r\n     * @returns {Widget[]} Array of widgets.\r\n     */\r\n    var getWidgets = function() {\r\n        return $.getAll('.grid-item').map(function(x) { return x.widget; });\r\n    };\r\n\r\n    /**\r\n     * Update widget tables on window resize.\r\n     */\r\n    var dashboardResizeLayout = function() {\r\n        getWidgets().forEach(function(x) {\r\n            x.updateLayout();\r\n            x.setupDraggie();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Toggle full screen on escape key.\r\n     * @param {Event} evt - Key press event.\r\n     */\r\n    var dashboardCheckKeyPress = function(evt) {\r\n        evt = evt || window.event;\r\n        if (evt.keyCode === 27) {\r\n            getWidgets().filter(function(x) { return x.isFullscreen; }).forEach(function(x) { x.toggleFullScreen(); });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Selectors and callback function to create events.\r\n     */\r\n    var _toggles = {\r\n        'nav-menu': {\r\n            onLoad: menuLoad,\r\n            onUnload: null\r\n        },\r\n        'dotable': {\r\n            onLoad: doTableLoad,\r\n            onUnload: doTableUnload\r\n        },\r\n        'context-help': {\r\n            onLoad: contextHelp,\r\n            onUnload: null\r\n        },\r\n        'collapsible-list': {\r\n            onLoad: function() { new CollapsibleList(this); },\r\n            onUnload: null\r\n        },\r\n        'input-replace': {\r\n            onLoad: function() { $.on(this, 'click', inputReplace); },\r\n            onUnload: null\r\n        },\r\n        'hide': {\r\n            onLoad: hide,\r\n            onUnload: null\r\n        },\r\n        'disable': {\r\n            onLoad: disable,\r\n            onUnload: null\r\n        },\r\n        'autocomplete': {\r\n            onLoad: autocompleteLoad,\r\n            onUnload: autocompleteUnload\r\n        },\r\n        'column-selector': {\r\n            onLoad: columnSelectorLoad,\r\n            onUnload: columnSelectorUnload\r\n        },\r\n        'content-replace': {\r\n            onLoad: contentReplaceLoad\r\n        },\r\n        'datepicker': {\r\n            onLoad: datepickerLoad,\r\n            onUnload: datepickerUnload\r\n        },\r\n        'chart': {\r\n            onLoad: chartLoad,\r\n            onUnload: chartUnload\r\n        },\r\n        'chart-export': {\r\n            onLoad: chartExportLoad,\r\n            onUnload: null\r\n        },\r\n        'colorpicker': {\r\n            onLoad: colorpickerLoad,\r\n            onUnload: colorpickerUnload\r\n        },\r\n        'widget': {\r\n            onLoad: widgetLoad,\r\n            onUnload: widgetUnload\r\n        },\r\n        'dashboard': {\r\n            onLoad: dashboardLoad,\r\n            onUnload: dashboardUnload\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Process data-toggles for a node.\r\n     * @param {Node} node - Node to add events to.\r\n     * @param {bool} isUnload - True if unloading, false if loading\r\n     */\r\n    var processToggles = function(node, isUnload) {\r\n        // process all the toggles\r\n        var elems = $.getAll('[data-toggle]', node);\r\n        if ($.matches(node, '[data-toggle]')) {\r\n            elems.push(node);\r\n        }\r\n        $.forEach(elems, function(x) {\r\n            var toggle = x.getAttribute('data-toggle');\r\n            if (_toggles[toggle]) {\r\n                var func = isUnload ? _toggles[toggle].onUnload : _toggles[toggle].onLoad;\r\n                if (func) {\r\n                    func.call(x);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Process node content adding events.\r\n     * @param {Node} node - Node to add events to.\r\n     * @param {bool} isUnload - True if unloading, false if loading\r\n     */\r\n    var processContent = function(node, isUnload) {\r\n        node = $.isEvent(node) ? null : node;\r\n        if (!node) {\r\n            return;\r\n        }\r\n        processToggles(node, isUnload);\r\n        autofocus(node);\r\n    };\r\n\r\n    /**\r\n     * Process node content handling load events.\r\n     * @param {Node} node - Node to add events to.\r\n     */\r\n    var load = function(node) {\r\n        processContent(node, false);\r\n    };\r\n\r\n    /**\r\n     * Process node content handling unload events.\r\n     * @param {Node} node - Node to remove events from.\r\n     */\r\n    var unload = function(node) {\r\n        processContent(node, true);\r\n    };\r\n\r\n    /**\r\n     * Closure to set up the loading splash screen and return the node for it.\r\n     */\r\n    var _loadingDiv = (function() {\r\n        var div = $.get('#loader');\r\n        $.on(div, 'keydown', function(e) {\r\n            if ($.hasClass('#loader', 'd-none')) {\r\n                return;\r\n            }\r\n            // @todo maybe add a way to cancel a pending request using escape?\r\n\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            return false;\r\n        });\r\n        return div;\r\n    })();\r\n\r\n    /**\r\n     * Show loading indicator.\r\n     */\r\n    var loading = function() {\r\n        $.show(_loadingDiv);\r\n    };\r\n\r\n    /**\r\n     * Show refresh message and spinner.\r\n     */\r\n    var forceRefresh = function() {\r\n        $.show('#reloader');\r\n        Alertify.error($.get('body').getAttribute('data-error-refresh') || 'There was an error. Please refresh the page.');\r\n    };\r\n\r\n    /**\r\n     * Hide loading indicator.\r\n     */\r\n    var done = function() {\r\n        $.hide(_loadingDiv);\r\n    };\r\n\r\n    $.content = {\r\n        done: done,\r\n        focusOnClose: focusOnClose,\r\n        forceRefresh: forceRefresh,\r\n        load: load,\r\n        loading: loading,\r\n        unload: unload,\r\n    };\r\n\r\n    /**\r\n     * Run events needed for the inital page load.\r\n     */\r\n    $.ready(pjax.init);\r\n\r\n})(this.$, this.Alertify, this.pjax, this.doTable, this.CollapsibleList, this.Autocomplete, this.Draggabilly, this.flatpickr, this.DashChart, this.ColorPicker, this.Widget);\r\n"]}