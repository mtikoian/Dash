{"version":3,"sources":["mithril.js","core.js","Alertify.js","helpers.js","Autocomplete.js","Chart.js","CollapsibleList.js","ColorPicker.js","DashChart.js","DatePicker.js","Draggabilly.js","Help.js","Rect.js","Tab.js","Table.js","Prism.js","Validator.js","Widget.js","Form.js","shared.js","dialogs.js","datasets.js","reports.js","charts.js","dashboard.js"],"names":["Vnode","tag","key","attrs0","children","text","dom","attrs","domSize","undefined","state","events","instance","skip","isEmpty","object","hasOwn","call","hyperscript","selector","arguments","start","view","Error","cached","selectorCache","match","classes","selectorParser","exec","type","value","id","push","attrValue","replace","length","className","join","compileSelector","Array","isArray","normalized","normalizeChildren","childList","hasAttrs","class","newAttrs","execSelector","normalize","node","i","hasOwnProperty","trust","html","fragment","attrs1","m","PromisePolyfill","executor","handler","list","shouldAbsorb","execute","then","callAsync","console","error","resolvers","rejectors","retry","self","TypeError","executeOnce","bind","e","rejectCurrent","run","fn","runs","onerror","resolveCurrent","this","_instance","setImmediate","setTimeout","prototype","onFulfilled","onRejection","handle","callback","next","resolveNext","rejectNext","promise","resolve","reject","catch","finally","reason","all","total","count","values","consume","race","window","Promise","global","buildQueryString","destructure","key0","Object","toString","args","encodeURIComponent","FILE_PROTOCOL_REGEX","RegExp","requestService","$window","finalizer","complete","oncompletion","finalize","promise0","then0","apply","extra","url","interpolate","data","tokens","slice","assemble","querystring","indexOf","deserialize","JSON","parse","extract","xhr","responseText","cast","type0","callbackCount","request","method","toUpperCase","useBody","serialize","FormData","stringify","XMLHttpRequest","aborted","_abort","abort","open","async","user","password","headers","setRequestHeader","withCredentials","timeout","config","onreadystatechange","readyState","response","status","test","code","send","background","jsonp","callbackName","Math","round","random","script","document","createElement","parentNode","removeChild","callbackKey","src","documentElement","appendChild","setCompletionCallback","_9","coreRenderer","getNameSpace","vnode","xmlns","nameSpace","checkState","original","callHook","createNodes","parent","vnodes","end","hooks","nextSibling","ns","createNode","sentinel","create","$$reentrantLock$$","$emptyFragment","initLifecycle","initComponent","element","insertNode","createComponent","$doc","createTextNode","createText","createHTML","createDocumentFragment","firstChild","childNodes","createFragment","attrs2","is","createElementNS","key2","setAttr","setAttrs","contenteditable","setContentEditable","textContent","selectedIndex","setLateAttrs","match1","temp","possibleParents","innerHTML","child","updateNodes","old","removeNodes","commonLength","min","isUnkeyed","getNextSibling","updateNode","map","o","v","oldStart","oldEnd","toFragment","getKeyMap","oldIndex","oldTag","forceVnodeUpdate","forceComponentUpdate","onbeforeupdate","shouldNotUpdate","updateLifecycle","nodeValue","updateText","updateHTML","updateFragment","isLifecycleMethod","removeAttribute","updateEvent","updateAttrs","updateElement","removeNode","updateComponent","count0","insertBefore","content","continuation","called","expected","onremove","removeNodeFromDOM","onbeforeremove","result","attr","activeElement","isFormAttribute","setAttributeNS","style","cssText","updateStyle","isAttribute","isCustomElement","normalized0","setAttribute","EventDict","removeEventListener","addEventListener","source","oninit","oncreate","onupdate","onevent","svg","math","caption","thead","tbody","tfoot","tr","th","td","colgroup","col","handleEvent","ev","handler0","target","render","active","namespace","namespaceURI","focus","setEventCallback","redrawService","throttleMock","unsubscribe","key1","index","callbacks","splice","sync","rendering","renderService","redraw","last","pending","requestAnimationFrame","elapsed","Date","now","subscribe","_12","mount","redrawService0","root","component","run0","_17","parseQueryString","string","charAt","entries","split","data0","counters","entry","key5","decodeURIComponent","levels","cursor","pop","j","level","nextLevel","isNumber","isNaN","parseInt","isValue","coreRouter","normalize1","fragment0","location","parsePath","path","queryData","hashData","queryIndex","hashIndex","pathEnd","queryEnd","queryParams","key4","hashParams","asyncId","supportsPushState","history","pushState","callAsync0","router","prefix","getPath","setPath","options","match2","token","query","hash","title","onpopstate","replaceState","href","defineRoutes","routes","resolveRoute","params","pathname","k","route0","matcher","keys","debounceAsync","onhashchange","route","render1","attrs3","currentPath","lastUpdate","routeService","defaultRoute","run1","redraw2","bail","payload","update","routeResolver","comp","onmatch","resolved","set","get","prefix0","link","vnode1","onclick","ctrlKey","metaKey","shiftKey","which","preventDefault","getAttribute","args0","param","key3","_21","withAttr","attrName","context","currentTarget","_29","version","module","addClass","classList","add","clone","isNull","cpy","x","isDate","getTime","ignoreCase","multiline","lastIndex","isObject","prop","coalesce","defValue","equals","y","p","isUndefined","extend","l","container","querySelector","sel","simple","getElementById","substr","res","getElementsByClassName","getAll","querySelectorAll","hasClass","contains","hasValue","val","constructor","getMonth","isFunction","on","event","useCapture","removeClass","remove","_toPascalKeys","obj","newObj","_toLowerKeys","toLowerCase","_parseCss","regex","properties","_toCSS","css","$","closest","firstChar","tSelector","lowerSelector","hasAttribute","tagName","debounce","wait","timestamp","later","destroy","dispatch","dispatchEvent","findByKey","arr","_i","hasPositiveValue","hide","maintainLayout","isEvent","Event","isNode","nodeType","nodeName","isString","isVisible","offsetParent","matches","Element","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","s","noop","off","onChange","changeFn","immediate","ready","setText","show","styles","overwrite","toggleClass","toggle","toPascalKeys","_hideElement","el","removeThis","_alertify","body","defaultOkLabel","okLabel","defaultCancelLabel","cancelLabel","maxLogItems","promptValue","promptPlaceholder","closeLogOnClick","delay","logContainerClass","dialogs","buttons","holder","ok","cancel","input","message","log","build","item","btnTxt","close","elem","dialog","onOkay","onCancel","setup","click","existing","diff","notify","setupLogContainer","elLog","btnOK","btnCancel","label","placeholder","buttonClicked","inputValue","reset","select","okBtn","cancelBtn","logTemplateMethod","Alertify","alert","confirm","prompt","success","str","defaultValue","dismissAll","updateResources","okay","chartLoad","CustomEvent","chartShareLoad","chartShareUnload","chartUnload","columnSelectorLoad","dashboardLoad","dashboardReload","datasetFormLoad","datasetFormUnload","formValidate","layoutUpdate","reportLoad","reportUnload","reportShareLoad","reportShareUnload","resxLoaded","tableDestroy","tableRefresh","_ajax","onSuccess","onError","Content-Type","Accept","X-Requested-With","_deserialize","canBlock","block","_loadingDiv","reload","logError","resx","_requestQueue","Request","isInProcess","dequeue","filter","msg","lineNo","columnNo","stack","detail","div","stopPropagation","ajax","_resx","colors","hex2rgb","hex","r","g","b","rgb2hex","color","rgb2hsl","rgb","h","max","d","lib","settings","currency","symbol","format","decimal","thousand","precision","grouping","number","checkPrecision","abs","parseFormat","newFormat","unformat","unformatted","parseFloat","toFixed","power","pow","formatNumber","opts","usePrecision","base","mod","accounting","formatMoney","formats","pos","neg","zero","checkCurrencyFormat","shorten","sLen","newArr","len","monthUpdate","arrName","i18n","month","pad","String","fecha","twoDigits","word","literal","dayNames","monthNames","monthNamesShort","dayNamesShort","amPm","DoFn","D","formatFlags","dateObj","getDate","DD","Do","getDay","dd","ddd","dddd","M","MM","MMM","MMMM","YY","getFullYear","YYYY","getHours","hh","H","HH","getMinutes","mm","getSeconds","ss","S","getMilliseconds","SS","SSS","a","A","ZZ","getTimezoneOffset","floor","onejan","ceil","ll","q","parseFlags","day","cent","year","hour","minute","second","millisecond","isPm","minutes","parts","timezoneOffset","masks","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","mask","i18nSettings","literals","$0","$1","shift","dateStr","isValid","dateInfo","isUtc","info","search","today","date","UTC","factory","Autocomplete","_keys","DOWN","ENTER","ESC","TAB","UP","valueChanged","name","required","disabled","onSelect","filteredList","autocomplete","setList","onKeyDown","keyCode","selected","selectItem","selectIndex","onInput","onBlur","ul","scrollIntoView","highlightItem","regExpEscape","trim","aria-autocomplete","onkeydown","oninput","onblur","aria-selected","onmousedown","f","exports","define","amd","Chart","t","n","u","require","1","getRgba","colorNames","scale","getHsla","alpha","getHwb","rgbaString","rgba","percentaString","hslaString","hsla","num","hexDouble","getRgb","getHsl","getAlpha","vals","hexString","rgbString","percentString","hslString","hwbString","hwb","keyword","reverseNames","5","2","convert","Color","valid","hsl","hsv","cmyk","setValues","red","lightness","w","whiteness","c","cyan","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","spaces","maxes","getValues","space","chans","capped","sname","svalues","4","3","delta","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","hwb2rgb","wh","bl","cmyk2rgb","xyz2rgb","xyz2lab","lab2xyz","lab","y2","lab2lch","hr","atan2","PI","sqrt","lab2rgb","lch2lab","lch","cos","sin","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","conversions","Converter","func","arg","pair","from","to","convs","routeSpace","fspace","forEach","6","helpers","defaults","elements","Interaction","layouts","platform","plugins","Ticks","register","initialize","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","31","36","39","40","44","45","46","7","8","9","Bar","Doughnut","Line","_set","hover","mode","scales","xAxes","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","yAxes","axis","position","rectangle","borderSkipped","tooltips","yLabel","labels","datasets","datasetIndex","xLabel","controllers","bar","DatasetController","dataElementType","Rectangle","meta","getMeta","getDataset","ilen","rects","_ruler","getRuler","chart","dataset","custom","rectangleOptions","_xScale","getScaleForId","xAxisID","_yScale","yAxisID","_datasetIndex","_index","_model","datasetLabel","backgroundColor","valueAtIndexOrDefault","borderColor","borderWidth","updateElementGeometry","pivot","model","vscale","getValueScale","getBasePixel","horizontal","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","height","size","width","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacked","stacks","getDatasetMeta","isDatasetVisible","getStackCount","getStackIndex","stackCount","left","top","pixels","getPixelForValue","isNullOrUndef","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","valueOrDefault","maxBarThickness","Infinity","draw","canvas","clipArea","ctx","chartArea","unclipArea","setHoverStyle","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","rectangleElementOptions","horizontalBar","animation","animateRotate","animateScale","legendCallback","legend","generateLabels","ds","arc","arcOpts","fillStyle","strokeStyle","lineWidth","hidden","onClick","legendItem","cutoutPercentage","rotation","circumference","tooltipItem","dataLabel","doughnut","pie","Arc","linkScales","getRingIndex","ringIndex","me","availableWidth","right","availableHeight","bottom","minSize","startAngle","endAngle","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","calculateTotal","each","animationOpts","centerX","centerY","calculateCircumference","arcs","hoverWidth","_chart","showLines","spanGaps","lineEnabled","showLine","line","datasetElementType","Point","points","lineElementOptions","tension","lineTension","_scale","_children","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","fill","steppedLine","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","point","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","yScale","xScale","pointOptions","radius","pointRadius","hitRadius","pointHitRadius","NaN","calculatePointY","pointStyle","dsMeta","sumPos","sumNeg","stackedRightValue","Number","rightValue","capControlPoint","pt","controlPoints","area","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","controlPointNextY","capBezierPoints","hoverRadius","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","duration","easing","onProgress","onComplete","Animation","currentStep","numSteps","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","addAnimation","lazy","animating","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","framesToDrop","advance","endTime","defineProperty","positionIsHorizontal","types","instances","construct","configMerge","initConfig","acquireContext","uid","aspectRatio","_bufferedRender","retinaScale","devicePixelRatio","bindEvents","responsive","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","clear","stop","silent","maintainAspectRatio","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","responsiveAnimationDuration","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","items","updated","reduce","dtype","dposition","isDefault","scaleType","scaleClass","scaleService","getScaleConstructor","mergeTicksOptions","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","ControllerClass","resetElements","tooltip","newOptions","removeBox","_options","updateConfig","_invalidate","_data","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","effects","stepDecimal","easingValue","transition","boxes","box","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","modes","single","getElementsAtEvent","intersect","getElementsAtXAxis","getElementsAtEventForMode","getDatasetAtEvent","_meta","generateLegend","unbindEvents","releaseContext","toBase64Image","toDataURL","Tooltip","_chartInstance","listeners","_listeners","listener","eventHandler","updateHoverStyle","enabled","changed","_start","bufferedRequest","animationDuration","hoverOptions","onHover","native","arrayEquals","Controller","unlistenArrayEvents","array","stub","_chartjs","arrayEvents","addElements","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","configurable","enumerable","listenArrayEvents","resyncElements","elementOpts","numMeta","numData","insertElements","onDataPush","onDataPop","onDataShift","onDataSplice","onDataUnshift","inherits","scope","merge","configuration","_view","ease","actual","origin","c0","c1","isFinite","tooltipPosition","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","POSITIVE_INFINITY","merger","tval","sval","scaleMerge","getScaleDefaults","_merger","slen","where","collection","filterCallback","filtered","findNextWhere","arrayToSearch","startIndex","currentItem","findPreviousWhere","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","log10","exponent","LOG10E","powerOf10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distance","distanceBetweenPoints","pt1","pt2","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","current","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","alphaK","betaK","tauK","squaredMagnitude","deltaX","loop","niceNum","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","getRelativePosition","evt","mouseX","mouseY","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","getStyle","paddingTop","paddingRight","paddingBottom","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","clientWidth","cw","clientHeight","ch","property","currentStyle","getPropertyValue","forceRatio","pixelRatio","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","cache","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","defaultColor","colorValue","CanvasPattern","parseVisibleItems","jlen","getIntersectItems","inRange","getNearestItems","distanceMetric","minDistance","nearestItems","getCenterPoint","getDistanceMetricForAxis","useX","useY","deltaY","indexMode","x-axis","nearest","sort","ret","getArea","intersectsItem","inXRange","inYRange","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","layout","padding","filterByPosition","sortByWeight","reverse","_tmpIndex_","v0","v1","addBox","fullWidth","layoutItem","configure","props","fitBox","minBoxSize","minBoxSizes","minBox","scaleMargin","totalLeftBoxesWidth","maxHorizontalLeftPadding","totalRightBoxesWidth","maxHorizontalRightPadding","chartWidth","maxChartAreaWidth","chartHeight","maxChartAreaHeight","placeBox","leftPadding","rightPadding","totalTopBoxesHeight","layoutOptions","toPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","totalBottomBoxesHeight","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","_plugins","_cacheId","plugin","unregister","idx","hook","descriptor","descriptors","$plugins","labelsFromTicks","getLineValue","lineValue","display","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","formatters","minor","major","computeTextSize","tick","parseFontOptions","globalDefaults","fontSize","family","parseLineHeight","toLineHeight","Scale","_ticks","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","rawValue","getLabelForIndex","getValueForPixel","pixel","finalVal","innerHeight","getPixelForDecimal","valueOffset","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","optionMajorTicks","isRotated","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","zeroLineIndex","tx1","ty1","tx2","ty2","x1","y1","x2","labelX","labelY","textAlign","textBaseline","labelYOffset","xLineValue","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","save","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","constructors","registerScaleType","scaleConstructor","scaleDefaults","updateScaleDefaults","additions","linear","tickValue","logDelta","tickString","numDecimal","logarithmic","remain","toExponential","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","createTooltipItem","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","dataPoints","vm","paddingAndSize","radiusAndPadding","getBackgroundPoint","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","quadraticCurveTo","closePath","hasTooltipContent","average","eventPosition","nearestElement","tp","27","inLabelRange","chartX","chartY","pointRelativePosition","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","28","currentVM","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","29","xRange","drawPoint","30","isVertical","getBarBounds","halfWidth","halfHeight","cornerAt","corners","startCorner","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corner","bounds","32","clearRect","roundedRect","rx","ry","rect","edgeLength","xOffset","yOffset","SQRT2","leftX","topY","sideSize","drawImage","clip","flip","bezierCurveTo","drawRoundedRectangle","33","thisArg","loopable","a0","a1","klen","_mergerIf","mergeIf","sources","setFn","extensions","ChartElement","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","34","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","35","inputs","37","getContext","38","readUsedSize","eventListenerOptions","createEvent","nativeEvent","addResizeListener","expando","EXPANDO_KEY","resizer","cls","CSS_PREFIX","expand","shrink","_reset","scrollLeft","scrollTop","onScroll","createResizer","ticking","throttled","proxy","renderProxy","animationName","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","reflow","CSS_RENDER_MONITOR","watchForRender","removeResizeListener","unwatchForRender","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","supports","passive","_enabled","renderHeight","renderWidth","initial","displayWidth","displayHeight","initCanvas","proxies","fromNativeEvent","addEvent","removeEvent","basic","implementation","filler","41","42","43","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","getBasePosition","resolveTarget","propagate","visited","visible","createMapper","mappers","isDrawable","drawArea","curve0","curve1","len0","len1","boundary","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","span","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","createNewLegendAndAttach","legendOpts","Legend","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","_element","beforeInit","afterEvent","createNewTitleBlockAndAttach","titleOpts","Title","titleBlock","textSize","titleX","titleY","titleFont","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","LinearScaleBase","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","tickFontSize","handleDirectionalChanges","innerDimension","ticksAsNumbers","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","stepSize","fixedStepSize","generationOptions","dataRange","spacing","niceRange","niceMin","niceMax","numSpaces","generateTicks","CollapsibleList","init","lis","createClickListener","checked","pi","checkedRelative","relatives","forceOpen","uls","li","ColorPicker","substring","trigger","showEditor","setRed","setColor","setGreen","setBlue","role","DashChart","showLegend","dataFn","errorFn","toggleExportFn","randomWithin","randomColor","randomColors","cnt","parseColor","ranges","some","rows","yTitle","xType","currencyFormat","dateFormat","chartType","isRadial","yType","chartData","DatePicker","chooseDate","selectedDate","setFullYear","setDate","checkKey","relatedTarget","onchange","dismissAndCommit","prevNext","newDate","setMonth","pushToLastDay","lastDateInMonth","over","under","adjustedProps","oldDate","stringsForLocale","locale","_months","_days","toLocaleDateString","weekday","days","months","classForBox","SPACE","hours","prevNextTitles","weekStart","formatOptions","defaultFormat","Header","theseMonths","MonthView","prevDates","firstDay","lastDate","daysFromLastMonth","theseDates","daysFromThisMonth","nextDates","these","daysFromNextMonth","theseWeekdays","_","wrapAround","setHours","setMinutes","YearView","DecadeView","decade","yearsForDecade","Editor","done","localize","loc","strings","defaultDate","chosen","KeyboardEvent","readonly","getSize","getStyleSize","isSetup","borderStyle","boxSizing","isBoxSizeOuter","innerWidth","outerWidth","outerHeight","measurementsLength","measurements","getZeroSize","offsetWidth","offsetHeight","isBorderBox","measurement","paddingWidth","paddingHeight","marginWidth","marginLeft","marginRight","marginHeight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderHeight","borderTopWidth","borderBottomWidth","isBorderBoxSizeOuter","styleWidth","styleHeight","EvEmitter","eventName","_events","emitEvent","Unipointer","proto","bindStartEvent","_bindStartEvent","unbindStartEvent","isBind","bindMethod","navigator","pointerEnabled","msPointerEnabled","getTouch","pointerIdentifier","button","_pointerDown","ontouchstart","changedTouches","onMSPointerDown","onpointerdown","pointer","isPointerDown","pointerId","identifier","pointerDown","_bindPostStartEvents","postStartEvents","mousedown","MSPointerDown","_boundPointerEvents","_unbindPostStartEvents","onmousemove","_pointerMove","onMSPointerMove","onpointermove","ontouchmove","touch","pointerMove","onmouseup","_pointerUp","onMSPointerUp","onpointerup","ontouchend","_pointerDone","pointerUp","pointerDone","onMSPointerCancel","onpointercancel","_pointerCancel","ontouchcancel","pointerCancel","getPointerPoint","pageX","pageY","Unidragger","bindHandles","_bindHandles","unbindHandles","binderExtra","handles","_dragPointerDown","focused","blur","pointerDownPoint","canPreventDefaultOnPointerDown","moveVector","_dragPointerMove","_dragMove","movePoint","isDragging","hasDragStarted","_dragStart","_dragPointerUp","_dragEnd","_staticClick","dragStartPoint","isPreventingClicks","dragStart","dragMove","dragEnd","isIgnoringMouseUp","staticClick","Draggabilly","_create","applyGrid","grid","applyMinZero","drag","lastTime","currTime","timeToCall","transformProperty","transform","positionValues","relative","absolute","fixed","_getPosition","startPoint","dragPoint","startPosition","enable","setHandles","_getPositionCoord","_addTransformPosition","styleSide","measure","parentSize","matrixValues","xIndex","translateX","translateY","isEnabled","measureContainment","setLeftTop","animate","containment","elemSize","containerSize","elemRect","containerRect","borderSizeX","borderSizeY","relativeStartPosition","containSize","dragX","dragY","gridX","gridY","containDrag","minZero","positionDrag","disable","Help","showHelp","focusOnClose","Rect","overlaps","thisRight","thisBottom","rectRight","rectBottom","Tab","tab","action","getContent","getTab","activeTabs","links","Table","pageOptions","store","myKey","storageFunction","localStorage","itemsPerPage","currentStartItem","searchQuery","sorting","columns","field","processData","dataCallback","intColumns","dateColumns","dataDateFormat","currencyColumns","filteredTotal","loading","filterResults","loadData","loadingError","requestMethod","buildParams","errorCallback","refresh","dir","requestUsePascalCase","requestParams","StartItem","Items","Query","Sort","startItem","setCurrentStartItem","setItemsPerPage","setSearchQuery","runSearch","requestTimer","loadAllData","results","filterArray","pageTotal","moveToPage","changePage","page","changeSort","fieldName","dataType","getSelection","removeAllRanges","compare","defaultCompare","setLayout","layoutSet","table","tableLayout","tableHeaderRow","tHead","hWidth","tWidth","cells","cWidth","pixelToFloat","colGroup","scroll","offsetLeft","onHeaderMouseDown","inResizeArea","cellEl","stopImmediatePropagation","resizeContext","colIndex","cellIndex","initX","scrWidth","initTblWidth","initColWidth","layoutTimer","onMouseMove","newStyle","newColWidth","columnMinWidth","onMouseUp","clearTimeout","newTblWidth","tblX","clientLeft","previousElementSibling","touchHandler","mouseEvent","simulatedEvent","totalDistance","lastSeenAt","initMouseEvent","screenX","screenY","getFieldValue","getDisplayValue","displayCurrencyFormat","displayDateFormat","aa","bb","tableHeaders","sortable","arrowAttrs","editable","ontableRefresh","ontableDestroy","onlayoutUpdate","searchable","headerButtons","attributes","resources","perPage","onscroll","colGroups","tableBodyView","tableFooterView","tableCellView","column","columnRenderer","tableRowView","colspan","tryAgain","noData","currentPage","pageDropdown","optionList","firstPage","previousPage","nextPage","lastPage","showing","move","up","inputTimeout","isBtn","handleAjaxRequest","icon","lang","prism","util","encode","Token","alias","languages","redef","inside","insert","grammar","newToken","DFS","highlightAll","highlightElement","language","env","Worker","worker","filename","onmessage","highlightedCode","postMessage","immediateClose","highlight","tokenize","strarr","rest","tokenloop","patterns","pattern","lookbehind","lookbehindLength","wrapped","aliases","Prism","sql","comment","variable","function","boolean","operator","punctuation","Validator","errorMsgs","_errors","targetElement","resetAll","validateInput","onSubmit","validate","minlength","VALIDATORS","checkValidity","setCustomValidity","isValidatableInput","defaultPrevented","errors","runValidators","showErrors","clearErrors","inputSelector","visibility","validator","validationMessage","group","errorElement","errHtml","hasErrors","Widget","buildClassList","getContainer","widget","isData","refreshSeconds","baseUrl","interval","isFullscreen","initDate","dragMargin","updatedDate","tableOpts","Id","reportId","reportRowLimit","sortColumns","reportWidth","processJson","setupDraggie","setInterval","firstRender","forceRefresh","toggleFullScreen","chartId","deleteWidget","toLocaleTimeString","processContent","moveDraggie","columnWidth","rowHeight","stopDrag","resizeDraggie","initResize","stopResize","setLocation","layoutCallback","setSize","json","updateDate","showMsg","hasOpenDialog","clearInterval","totalDestruction","fullScreenIcon","Form","records","wantsHelp","appendRecord","deleteRecord","confirmDelete","confirmDeleteAll","areYouSure","moveUp","moveDown","help","addedCount","targetVal","setter","addRecord","newRecord","unshift","deleteFn","afterDeleteFn","deleteAllRecords","hasRecords","keyInput","withHelp","helpBody","innerContent","withError","requirePositive","withDisabled","isDisabled","withChecked","isChecked","withOptions","selectedValue","valueKey","textKey","buttonView","includeMove","btns","BaseDetails","columnList","openDialog","outerHTML","allowEdit","dataSql","setSql","dataError","countSql","countError","getColumnList","ShareForm","formOpts","userId","roleId","shares","users","userList","roles","roleList","formName","userSelectAttr","share","roleSelectAttr","Dialog","_buttons","onShow","tryGetValue","trySetValue","tabindex","contentView","firstElementChild","checkEvent","getId","getTarget","findForm","focusNode","form","validateForm","formData","serializeForm","__RequestVerificationToken","responseData","parentDlg","findDialogById","parentTarget","closeParent","dialogUrl","sendAjaxRequest","bracketRegEx","pieces","setTabStatus","mErrors","removeDialog","refreshTable","_contentActions","inputReplace","_dialogs","dlgs","getActiveDialog","getActiveContent","dlg","checkPrompt","updateObj","targetSelector","activeDlg","elems","act","activeDialog","dashboard","ColumnForm","columnName","dataTypeId","derived","filterTypeId","filterQuery","isParam","isExpanded","dataTypes","filterTypes","sourceFn","columnFn","selectedSourceFn","columnTitleSort","aTitle","bTitle","toggleExpanded","checkStatus","database","primarySource","importColumns","databaseId","newColumns","newRecords","existingColumns","colName","import","record","readOnly","for","JoinForm","joinTypeId","tableName","columnUpdateFn","joins","joinTypes","setJoinTable","isProc","Dataset","sourceList","formChanged","selectedSourceList","checkType","loadSourceList","loadColumnList","joinForm","getSourceList","columnForm","getSelectedSourceList","primary","updateColumnList","updateSelectedSources","updateList","DatabaseId","Tables","typeId","tables","_datasets","FilterForm","columnId","operatorId","criteria","criteria2","filters","saveFiltersUrl","filterOperators","filterOperatorIds","dateOperators","lookups","refreshFn","boolOptions","setColumnId","setOperator","setCriteria","criteriaJson","saveFilters","Filters","criteriaView","isRange","dateInterval","equal","multiple","lookup","numeric","isDatePicker","criteriaArr","operatorView","filterView","filterColumns","GroupForm","displayOrder","groups","saveGroupsUrl","aggregator","aggregatorId","aggregators","saveGroups","GroupAggregator","Groups","setAggregator","groupView","ReportDetails","reportColumns","saveUrl","saveColumnsUrl","saveStorageFunc","previousColumnWidths","Columns","ReportWidth","dataUrl","Save","exportUrl","rowLimit","filterForm","groupForm","_reports","_shares","startDrag","newPos","offsetTop","leftItems","columnSort","rightItems","updateColumn","report","RangeForm","xAxisColumnId","yAxisColumnId","dateIntervalId","saveRangesUrl","dateIntervals","reports","processJsonFn","canExportFn","saveRanges","Ranges","makeChart","chartContent","dashChart","exportChart","chartContainer","submit","setReport","rangeView","xColumns","yColumns","dateIntervalDisabled","inputsDisabled","ChartDetails","enableExport","rangeForm","canExport","toggleExport","_charts","_currentPositions","widgets","makeWidgetOpts","checkKeyPress","resizeLayout","updatePosition","dash","widgetOpts","getWidgets","widgetDate","widgetDateUpdated","oldWidget","sorted","rectSort","aWidget","bWidget","saveDashboard","positions","Width","Height","X","Y","Widgets","pageLoaded"],"mappings":"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","file":"bundle.js","sourcesContent":["/*!\r\n * Mithril JS Framework\r\n * https://github.com/lhorie/mithril.js/\r\n */\r\n/* eslint-disable */\r\n; (function() {\r\n    \"use strict\"\r\n    function Vnode(tag, key, attrs0, children, text, dom) {\r\n        return { tag: tag, key: key, attrs: attrs0, children: children, text: text, dom: dom, domSize: undefined, state: undefined, events: undefined, instance: undefined, skip: false }\r\n    }\r\n    Vnode.normalize = function(node) {\r\n        if (Array.isArray(node)) return Vnode(\"[\", undefined, undefined, Vnode.normalizeChildren(node), undefined, undefined)\r\n        if (node != null && typeof node !== \"object\") return Vnode(\"#\", undefined, undefined, node === false ? \"\" : node, undefined, undefined)\r\n        return node\r\n    }\r\n    Vnode.normalizeChildren = function normalizeChildren(children) {\r\n        for (var i = 0; i < children.length; i++) {\r\n            children[i] = Vnode.normalize(children[i])\r\n        }\r\n        return children\r\n    }\r\n    var selectorParser = /(?:(^|#|\\.)([^#\\.\\[\\]]+))|(\\[(.+?)(?:\\s*=\\s*(\"|'|)((?:\\\\[\"'\\]]|.)*?)\\5)?\\])/g\r\n    var selectorCache = {}\r\n    var hasOwn = {}.hasOwnProperty\r\n    function isEmpty(object) {\r\n        for (var key in object) if (hasOwn.call(object, key)) return false\r\n        return true\r\n    }\r\n    function compileSelector(selector) {\r\n        var match, tag = \"div\", classes = [], attrs = {}\r\n        while (match = selectorParser.exec(selector)) {\r\n            var type = match[1], value = match[2]\r\n            if (type === \"\" && value !== \"\") tag = value\r\n            else if (type === \"#\") attrs.id = value\r\n            else if (type === \".\") classes.push(value)\r\n            else if (match[3][0] === \"[\") {\r\n                var attrValue = match[6]\r\n                if (attrValue) attrValue = attrValue.replace(/\\\\([\"'])/g, \"$1\").replace(/\\\\\\\\/g, \"\\\\\")\r\n                if (match[4] === \"class\") classes.push(attrValue)\r\n                else attrs[match[4]] = attrValue === \"\" ? attrValue : attrValue || true\r\n            }\r\n        }\r\n        if (classes.length > 0) attrs.className = classes.join(\" \")\r\n        return selectorCache[selector] = { tag: tag, attrs: attrs }\r\n    }\r\n    function execSelector(state, attrs, children) {\r\n        var hasAttrs = false, childList, text\r\n        var className = attrs.className || attrs.class\r\n        if (!isEmpty(state.attrs) && !isEmpty(attrs)) {\r\n            var newAttrs = {}\r\n            for (var key in attrs) {\r\n                if (hasOwn.call(attrs, key)) {\r\n                    newAttrs[key] = attrs[key]\r\n                }\r\n            }\r\n            attrs = newAttrs\r\n        }\r\n        for (var key in state.attrs) {\r\n            if (hasOwn.call(state.attrs, key)) {\r\n                attrs[key] = state.attrs[key]\r\n            }\r\n        }\r\n        if (className !== undefined) {\r\n            if (attrs.class !== undefined) {\r\n                attrs.class = undefined\r\n                attrs.className = className\r\n            }\r\n            if (state.attrs.className != null) {\r\n                attrs.className = state.attrs.className + \" \" + className\r\n            }\r\n        }\r\n        for (var key in attrs) {\r\n            if (hasOwn.call(attrs, key) && key !== \"key\") {\r\n                hasAttrs = true\r\n                break\r\n            }\r\n        }\r\n        if (Array.isArray(children) && children.length === 1 && children[0] != null && children[0].tag === \"#\") {\r\n            text = children[0].children\r\n        } else {\r\n            childList = children\r\n        }\r\n        return Vnode(state.tag, attrs.key, hasAttrs ? attrs : undefined, childList, text)\r\n    }\r\n    function hyperscript(selector) {\r\n        // Because sloppy mode sucks\r\n        var attrs = arguments[1], start = 2, children\r\n        if (selector == null || typeof selector !== \"string\" && typeof selector !== \"function\" && typeof selector.view !== \"function\") {\r\n            throw Error(\"The selector must be either a string or a component.\");\r\n        }\r\n        if (typeof selector === \"string\") {\r\n            var cached = selectorCache[selector] || compileSelector(selector)\r\n        }\r\n        if (attrs == null) {\r\n            attrs = {}\r\n        } else if (typeof attrs !== \"object\" || attrs.tag != null || Array.isArray(attrs)) {\r\n            attrs = {}\r\n            start = 1\r\n        }\r\n        if (arguments.length === start + 1) {\r\n            children = arguments[start]\r\n            if (!Array.isArray(children)) children = [children]\r\n        } else {\r\n            children = []\r\n            while (start < arguments.length) children.push(arguments[start++])\r\n        }\r\n        var normalized = Vnode.normalizeChildren(children)\r\n        if (typeof selector === \"string\") {\r\n            return execSelector(cached, attrs, normalized)\r\n        } else {\r\n            return Vnode(selector, attrs.key, attrs, normalized)\r\n        }\r\n    }\r\n    hyperscript.trust = function(html) {\r\n        if (html == null) html = \"\"\r\n        return Vnode(\"<\", undefined, undefined, html, undefined, undefined)\r\n    }\r\n    hyperscript.fragment = function(attrs1, children) {\r\n        return Vnode(\"[\", attrs1.key, attrs1, Vnode.normalizeChildren(children), undefined, undefined)\r\n    }\r\n    var m = hyperscript\r\n    /** @constructor */\r\n    var PromisePolyfill = function(executor) {\r\n        if (!(this instanceof PromisePolyfill)) throw new Error(\"Promise must be called with `new`\")\r\n        if (typeof executor !== \"function\") throw new TypeError(\"executor must be a function\")\r\n        var self = this, resolvers = [], rejectors = [], resolveCurrent = handler(resolvers, true), rejectCurrent = handler(rejectors, false)\r\n        var instance = self._instance = { resolvers: resolvers, rejectors: rejectors }\r\n        var callAsync = typeof setImmediate === \"function\" ? setImmediate : setTimeout\r\n        function handler(list, shouldAbsorb) {\r\n            return function execute(value) {\r\n                var then\r\n                try {\r\n                    if (shouldAbsorb && value != null && (typeof value === \"object\" || typeof value === \"function\") && typeof (then = value.then) === \"function\") {\r\n                        if (value === self) throw new TypeError(\"Promise can't be resolved w/ itself\")\r\n                        executeOnce(then.bind(value))\r\n                    }\r\n                    else {\r\n                        callAsync(function() {\r\n                            if (!shouldAbsorb && list.length === 0) console.error(\"Possible unhandled promise rejection:\", value)\r\n                            for (var i = 0; i < list.length; i++) list[i](value)\r\n                            resolvers.length = 0, rejectors.length = 0\r\n                            instance.state = shouldAbsorb\r\n                            instance.retry = function() { execute(value) }\r\n                        })\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    rejectCurrent(e)\r\n                }\r\n            }\r\n        }\r\n        function executeOnce(then) {\r\n            var runs = 0\r\n            function run(fn) {\r\n                return function(value) {\r\n                    if (runs++ > 0) return\r\n                    fn(value)\r\n                }\r\n            }\r\n            var onerror = run(rejectCurrent)\r\n            try { then(run(resolveCurrent), onerror) } catch (e) { onerror(e) }\r\n        }\r\n        executeOnce(executor)\r\n    }\r\n    PromisePolyfill.prototype.then = function(onFulfilled, onRejection) {\r\n        var self = this, instance = self._instance\r\n        function handle(callback, list, next, state) {\r\n            list.push(function(value) {\r\n                if (typeof callback !== \"function\") next(value)\r\n                else try { resolveNext(callback(value)) } catch (e) { if (rejectNext) rejectNext(e) }\r\n            })\r\n            if (typeof instance.retry === \"function\" && state === instance.state) instance.retry()\r\n        }\r\n        var resolveNext, rejectNext\r\n        var promise = new PromisePolyfill(function(resolve, reject) { resolveNext = resolve, rejectNext = reject })\r\n        handle(onFulfilled, instance.resolvers, resolveNext, true), handle(onRejection, instance.rejectors, rejectNext, false)\r\n        return promise\r\n    }\r\n    PromisePolyfill.prototype.catch = function(onRejection) {\r\n        return this.then(null, onRejection)\r\n    }\r\n    PromisePolyfill.prototype.finally = function(callback) {\r\n        return this.then(\r\n            function(value) {\r\n                return PromisePolyfill.resolve(callback()).then(function() {\r\n                    return value\r\n                })\r\n            },\r\n            function(reason) {\r\n                return PromisePolyfill.resolve(callback()).then(function() {\r\n                    return PromisePolyfill.reject(reason);\r\n                })\r\n            }\r\n        )\r\n    }\r\n    PromisePolyfill.resolve = function(value) {\r\n        if (value instanceof PromisePolyfill) return value\r\n        return new PromisePolyfill(function(resolve) { resolve(value) })\r\n    }\r\n    PromisePolyfill.reject = function(value) {\r\n        return new PromisePolyfill(function(resolve, reject) { reject(value) })\r\n    }\r\n    PromisePolyfill.all = function(list) {\r\n        return new PromisePolyfill(function(resolve, reject) {\r\n            var total = list.length, count = 0, values = []\r\n            if (list.length === 0) resolve([])\r\n            else for (var i = 0; i < list.length; i++) {\r\n                (function(i) {\r\n                    function consume(value) {\r\n                        count++\r\n                        values[i] = value\r\n                        if (count === total) resolve(values)\r\n                    }\r\n                    if (list[i] != null && (typeof list[i] === \"object\" || typeof list[i] === \"function\") && typeof list[i].then === \"function\") {\r\n                        list[i].then(consume, reject)\r\n                    }\r\n                    else consume(list[i])\r\n                })(i)\r\n            }\r\n        })\r\n    }\r\n    PromisePolyfill.race = function(list) {\r\n        return new PromisePolyfill(function(resolve, reject) {\r\n            for (var i = 0; i < list.length; i++) {\r\n                list[i].then(resolve, reject)\r\n            }\r\n        })\r\n    }\r\n    if (typeof window !== \"undefined\") {\r\n        if (typeof window.Promise === \"undefined\") {\r\n            window.Promise = PromisePolyfill\r\n        } else if (!window.Promise.prototype.finally) {\r\n            window.Promise.prototype.finally = PromisePolyfill.prototype.finally\r\n        }\r\n        var PromisePolyfill = window.Promise\r\n    } else if (typeof global !== \"undefined\") {\r\n        if (typeof global.Promise === \"undefined\") {\r\n            global.Promise = PromisePolyfill\r\n        } else if (!global.Promise.prototype.finally) {\r\n            global.Promise.prototype.finally = PromisePolyfill.prototype.finally\r\n        }\r\n        var PromisePolyfill = global.Promise\r\n    } else {\r\n    }\r\n    var buildQueryString = function(object) {\r\n        if (Object.prototype.toString.call(object) !== \"[object Object]\") return \"\"\r\n        var args = []\r\n        for (var key0 in object) {\r\n            destructure(key0, object[key0])\r\n        }\r\n        return args.join(\"&\")\r\n        function destructure(key0, value) {\r\n            if (Array.isArray(value)) {\r\n                for (var i = 0; i < value.length; i++) {\r\n                    destructure(key0 + \"[\" + i + \"]\", value[i])\r\n                }\r\n            }\r\n            else if (Object.prototype.toString.call(value) === \"[object Object]\") {\r\n                for (var i in value) {\r\n                    destructure(key0 + \"[\" + i + \"]\", value[i])\r\n                }\r\n            }\r\n            else args.push(encodeURIComponent(key0) + (value != null && value !== \"\" ? \"=\" + encodeURIComponent(value) : \"\"))\r\n        }\r\n    }\r\n    var FILE_PROTOCOL_REGEX = new RegExp(\"^file://\", \"i\")\r\n    var _9 = function($window, Promise) {\r\n        var callbackCount = 0\r\n        var oncompletion\r\n        function setCompletionCallback(callback) { oncompletion = callback }\r\n        function finalizer() {\r\n            var count = 0\r\n            function complete() { if (--count === 0 && typeof oncompletion === \"function\") oncompletion() }\r\n            return function finalize(promise0) {\r\n                var then0 = promise0.then\r\n                promise0.then = function() {\r\n                    count++\r\n                    var next = then0.apply(promise0, arguments)\r\n                    next.then(complete, function(e) {\r\n                        complete()\r\n                        if (count === 0) throw e\r\n                    })\r\n                    return finalize(next)\r\n                }\r\n                return promise0\r\n            }\r\n        }\r\n        function normalize(args, extra) {\r\n            if (typeof args === \"string\") {\r\n                var url = args\r\n                args = extra || {}\r\n                if (args.url == null) args.url = url\r\n            }\r\n            return args\r\n        }\r\n        function request(args, extra) {\r\n            var finalize = finalizer()\r\n            args = normalize(args, extra)\r\n            var promise0 = new Promise(function(resolve, reject) {\r\n                if (args.method == null) args.method = \"GET\"\r\n                args.method = args.method.toUpperCase()\r\n                var useBody = (args.method === \"GET\" || args.method === \"TRACE\") ? false : (typeof args.useBody === \"boolean\" ? args.useBody : true)\r\n                if (typeof args.serialize !== \"function\") args.serialize = typeof FormData !== \"undefined\" && args.data instanceof FormData ? function(value) { return value } : JSON.stringify\r\n                if (typeof args.deserialize !== \"function\") args.deserialize = deserialize\r\n                if (typeof args.extract !== \"function\") args.extract = extract\r\n                args.url = interpolate(args.url, args.data)\r\n                if (useBody) args.data = args.serialize(args.data)\r\n                else args.url = assemble(args.url, args.data)\r\n                var xhr = new $window.XMLHttpRequest(),\r\n                    aborted = false,\r\n                    _abort = xhr.abort\r\n                xhr.abort = function abort() {\r\n                    aborted = true\r\n                    _abort.call(xhr)\r\n                }\r\n                xhr.open(args.method, args.url, typeof args.async === \"boolean\" ? args.async : true, typeof args.user === \"string\" ? args.user : undefined, typeof args.password === \"string\" ? args.password : undefined)\r\n                if (args.serialize === JSON.stringify && useBody && !(args.headers && args.headers.hasOwnProperty(\"Content-Type\"))) {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\")\r\n                }\r\n                if (args.deserialize === deserialize && !(args.headers && args.headers.hasOwnProperty(\"Accept\"))) {\r\n                    xhr.setRequestHeader(\"Accept\", \"application/json, text/*\")\r\n                }\r\n                if (args.withCredentials) xhr.withCredentials = args.withCredentials\r\n                if (args.timeout) xhr.timeout = args.timeout\r\n                for (var key in args.headers) if ({}.hasOwnProperty.call(args.headers, key)) {\r\n                    xhr.setRequestHeader(key, args.headers[key])\r\n                }\r\n                if (typeof args.config === \"function\") xhr = args.config(xhr, args) || xhr\r\n                xhr.onreadystatechange = function() {\r\n                    // Don't throw errors on xhr.abort().\r\n                    if (aborted) return\r\n                    if (xhr.readyState === 4) {\r\n                        try {\r\n                            var response = (args.extract !== extract) ? args.extract(xhr, args) : args.deserialize(args.extract(xhr, args))\r\n                            if (args.extract !== extract || (xhr.status >= 200 && xhr.status < 300) || xhr.status === 304 || FILE_PROTOCOL_REGEX.test(args.url)) {\r\n                                resolve(cast(args.type, response))\r\n                            }\r\n                            else {\r\n                                var error = new Error(xhr.responseText)\r\n                                error.code = xhr.status\r\n                                error.response = response\r\n                                reject(error)\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                            reject(e)\r\n                        }\r\n                    }\r\n                }\r\n                if (useBody && (args.data != null)) xhr.send(args.data)\r\n                else xhr.send()\r\n            })\r\n            return args.background === true ? promise0 : finalize(promise0)\r\n        }\r\n        function jsonp(args, extra) {\r\n            var finalize = finalizer()\r\n            args = normalize(args, extra)\r\n            var promise0 = new Promise(function(resolve, reject) {\r\n                var callbackName = args.callbackName || \"_mithril_\" + Math.round(Math.random() * 1e16) + \"_\" + callbackCount++\r\n                var script = $window.document.createElement(\"script\")\r\n                $window[callbackName] = function(data) {\r\n                    script.parentNode.removeChild(script)\r\n                    resolve(cast(args.type, data))\r\n                    delete $window[callbackName]\r\n                }\r\n                script.onerror = function() {\r\n                    script.parentNode.removeChild(script)\r\n                    reject(new Error(\"JSONP request failed\"))\r\n                    delete $window[callbackName]\r\n                }\r\n                if (args.data == null) args.data = {}\r\n                args.url = interpolate(args.url, args.data)\r\n                args.data[args.callbackKey || \"callback\"] = callbackName\r\n                script.src = assemble(args.url, args.data)\r\n                $window.document.documentElement.appendChild(script)\r\n            })\r\n            return args.background === true ? promise0 : finalize(promise0)\r\n        }\r\n        function interpolate(url, data) {\r\n            if (data == null) return url\r\n            var tokens = url.match(/:[^\\/]+/gi) || []\r\n            for (var i = 0; i < tokens.length; i++) {\r\n                var key = tokens[i].slice(1)\r\n                if (data[key] != null) {\r\n                    url = url.replace(tokens[i], data[key])\r\n                }\r\n            }\r\n            return url\r\n        }\r\n        function assemble(url, data) {\r\n            var querystring = buildQueryString(data)\r\n            if (querystring !== \"\") {\r\n                var prefix = url.indexOf(\"?\") < 0 ? \"?\" : \"&\"\r\n                url += prefix + querystring\r\n            }\r\n            return url\r\n        }\r\n        function deserialize(data) {\r\n            try { return data !== \"\" ? JSON.parse(data) : null }\r\n            catch (e) { throw new Error(data) }\r\n        }\r\n        function extract(xhr) { return xhr.responseText }\r\n        function cast(type0, data) {\r\n            if (typeof type0 === \"function\") {\r\n                if (Array.isArray(data)) {\r\n                    for (var i = 0; i < data.length; i++) {\r\n                        data[i] = new type0(data[i])\r\n                    }\r\n                }\r\n                else return new type0(data)\r\n            }\r\n            return data\r\n        }\r\n        return { request: request, jsonp: jsonp, setCompletionCallback: setCompletionCallback }\r\n    }\r\n    var requestService = _9(window, PromisePolyfill)\r\n    var coreRenderer = function($window) {\r\n        var $doc = $window.document\r\n        var $emptyFragment = $doc.createDocumentFragment()\r\n        var nameSpace = {\r\n            svg: \"http://www.w3.org/2000/svg\",\r\n            math: \"http://www.w3.org/1998/Math/MathML\"\r\n        }\r\n        var onevent\r\n        function setEventCallback(callback) { return onevent = callback }\r\n        function getNameSpace(vnode) {\r\n            return vnode.attrs && vnode.attrs.xmlns || nameSpace[vnode.tag]\r\n        }\r\n        //sanity check to discourage people from doing `vnode.state = ...`\r\n        function checkState(vnode, original) {\r\n            if (vnode.state !== original) throw new Error(\"`vnode.state` must not be modified\")\r\n        }\r\n        //Note: the hook is passed as the `this` argument to allow proxying the\r\n        //arguments without requiring a full array allocation to do so. It also\r\n        //takes advantage of the fact the current `vnode` is the first argument in\r\n        //all lifecycle methods.\r\n        function callHook(vnode) {\r\n            var original = vnode.state\r\n            try {\r\n                return this.apply(original, arguments)\r\n            } finally {\r\n                checkState(vnode, original)\r\n            }\r\n        }\r\n        //create\r\n        function createNodes(parent, vnodes, start, end, hooks, nextSibling, ns) {\r\n            for (var i = start; i < end; i++) {\r\n                var vnode = vnodes[i]\r\n                if (vnode != null) {\r\n                    createNode(parent, vnode, hooks, ns, nextSibling)\r\n                }\r\n            }\r\n        }\r\n        function createNode(parent, vnode, hooks, ns, nextSibling) {\r\n            var tag = vnode.tag\r\n            if (typeof tag === \"string\") {\r\n                vnode.state = {}\r\n                if (vnode.attrs != null) initLifecycle(vnode.attrs, vnode, hooks)\r\n                switch (tag) {\r\n                    case \"#\": return createText(parent, vnode, nextSibling)\r\n                    case \"<\": return createHTML(parent, vnode, ns, nextSibling)\r\n                    case \"[\": return createFragment(parent, vnode, hooks, ns, nextSibling)\r\n                    default: return createElement(parent, vnode, hooks, ns, nextSibling)\r\n                }\r\n            }\r\n            else return createComponent(parent, vnode, hooks, ns, nextSibling)\r\n        }\r\n        function createText(parent, vnode, nextSibling) {\r\n            vnode.dom = $doc.createTextNode(vnode.children)\r\n            insertNode(parent, vnode.dom, nextSibling)\r\n            return vnode.dom\r\n        }\r\n        var possibleParents = { caption: \"table\", thead: \"table\", tbody: \"table\", tfoot: \"table\", tr: \"tbody\", th: \"tr\", td: \"tr\", colgroup: \"table\", col: \"colgroup\" }\r\n        function createHTML(parent, vnode, ns, nextSibling) {\r\n            var match1 = vnode.children.match(/^\\s*?<(\\w+)/im) || []\r\n            // not using the proper parent makes the child element(s) vanish.\r\n            //     var div = document.createElement(\"div\")\r\n            //     div.innerHTML = \"<td>i</td><td>j</td>\"\r\n            //     console.log(div.innerHTML)\r\n            // --> \"ij\", no <td> in sight.\r\n            var temp = $doc.createElement(possibleParents[match1[1]] || \"div\")\r\n            if (ns === \"http://www.w3.org/2000/svg\") {\r\n                temp.innerHTML = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + vnode.children + \"</svg>\"\r\n                temp = temp.firstChild\r\n            } else {\r\n                temp.innerHTML = vnode.children\r\n            }\r\n            vnode.dom = temp.firstChild\r\n            vnode.domSize = temp.childNodes.length\r\n            var fragment = $doc.createDocumentFragment()\r\n            var child\r\n            while (child = temp.firstChild) {\r\n                fragment.appendChild(child)\r\n            }\r\n            insertNode(parent, fragment, nextSibling)\r\n            return fragment\r\n        }\r\n        function createFragment(parent, vnode, hooks, ns, nextSibling) {\r\n            var fragment = $doc.createDocumentFragment()\r\n            if (vnode.children != null) {\r\n                var children = vnode.children\r\n                createNodes(fragment, children, 0, children.length, hooks, null, ns)\r\n            }\r\n            vnode.dom = fragment.firstChild\r\n            vnode.domSize = fragment.childNodes.length\r\n            insertNode(parent, fragment, nextSibling)\r\n            return fragment\r\n        }\r\n        function createElement(parent, vnode, hooks, ns, nextSibling) {\r\n            var tag = vnode.tag\r\n            var attrs2 = vnode.attrs\r\n            var is = attrs2 && attrs2.is\r\n            ns = getNameSpace(vnode) || ns\r\n            var element = ns ?\r\n                is ? $doc.createElementNS(ns, tag, { is: is }) : $doc.createElementNS(ns, tag) :\r\n                is ? $doc.createElement(tag, { is: is }) : $doc.createElement(tag)\r\n            vnode.dom = element\r\n            if (attrs2 != null) {\r\n                setAttrs(vnode, attrs2, ns)\r\n            }\r\n            insertNode(parent, element, nextSibling)\r\n            if (vnode.attrs != null && vnode.attrs.contenteditable != null) {\r\n                setContentEditable(vnode)\r\n            }\r\n            else {\r\n                if (vnode.text != null) {\r\n                    if (vnode.text !== \"\") element.textContent = vnode.text\r\n                    else vnode.children = [Vnode(\"#\", undefined, undefined, vnode.text, undefined, undefined)]\r\n                }\r\n                if (vnode.children != null) {\r\n                    var children = vnode.children\r\n                    createNodes(element, children, 0, children.length, hooks, null, ns)\r\n                    setLateAttrs(vnode)\r\n                }\r\n            }\r\n            return element\r\n        }\r\n        function initComponent(vnode, hooks) {\r\n            var sentinel\r\n            if (typeof vnode.tag.view === \"function\") {\r\n                vnode.state = Object.create(vnode.tag)\r\n                sentinel = vnode.state.view\r\n                if (sentinel.$$reentrantLock$$ != null) return $emptyFragment\r\n                sentinel.$$reentrantLock$$ = true\r\n            } else {\r\n                vnode.state = void 0\r\n                sentinel = vnode.tag\r\n                if (sentinel.$$reentrantLock$$ != null) return $emptyFragment\r\n                sentinel.$$reentrantLock$$ = true\r\n                vnode.state = (vnode.tag.prototype != null && typeof vnode.tag.prototype.view === \"function\") ? new vnode.tag(vnode) : vnode.tag(vnode)\r\n            }\r\n            if (vnode.attrs != null) initLifecycle(vnode.attrs, vnode, hooks)\r\n            initLifecycle(vnode.state, vnode, hooks)\r\n            vnode.instance = Vnode.normalize(callHook.call(vnode.state.view, vnode))\r\n            if (vnode.instance === vnode) throw Error(\"A view cannot return the vnode it received as argument\")\r\n            sentinel.$$reentrantLock$$ = null\r\n        }\r\n        function createComponent(parent, vnode, hooks, ns, nextSibling) {\r\n            initComponent(vnode, hooks)\r\n            if (vnode.instance != null) {\r\n                var element = createNode(parent, vnode.instance, hooks, ns, nextSibling)\r\n                vnode.dom = vnode.instance.dom\r\n                vnode.domSize = vnode.dom != null ? vnode.instance.domSize : 0\r\n                insertNode(parent, element, nextSibling)\r\n                return element\r\n            }\r\n            else {\r\n                vnode.domSize = 0\r\n                return $emptyFragment\r\n            }\r\n        }\r\n        //update\r\n        /**\r\n         * @param {Element|Fragment} parent - the parent element\r\n         * @param {Vnode[] | null} old - the list of vnodes of the last0 `render()` call for\r\n         *                               this part of the tree\r\n         * @param {Vnode[] | null} vnodes - as above, but for the current `render()` call.\r\n         * @param {Function[]} hooks - an accumulator of post-render hooks (oncreate/onupdate)\r\n         * @param {Element | null} nextSibling - the next0 DOM node if we're dealing with a\r\n         *                                       fragment that is not the last0 item in its\r\n         *                                       parent\r\n         * @param {'svg' | 'math' | String | null} ns) - the current XML namespace, if any\r\n         * @returns void\r\n         */\r\n        // This function diffs and patches lists of vnodes, both keyed and unkeyed.\r\n        //\r\n        // We will:\r\n        //\r\n        // 1. describe its general structure\r\n        // 2. focus on the diff algorithm optimizations\r\n        // 3. discuss DOM node operations.\r\n        // ## Overview:\r\n        //\r\n        // The updateNodes() function:\r\n        // - deals with trivial cases\r\n        // - determines whether the lists are keyed or unkeyed\r\n        //   (Currently we look for the first pair of non-null nodes and deem the lists unkeyed\r\n        //   if both nodes are unkeyed. TODO (v2) We may later take advantage of the fact that\r\n        //   mixed diff is not supported and settle on the keyedness of the first vnode we find)\r\n        // - diffs them and patches the DOM if needed (that's the brunt of the code)\r\n        // - manages the leftovers: after diffing, are there:\r\n        //   - old nodes left to remove?\r\n        // \t - new nodes to insert?\r\n        // \t deal with them!\r\n        //\r\n        // The lists are only iterated over once, with an exception for the nodes in `old` that\r\n        // are visited in the fourth part of the diff and in the `removeNodes` loop.\r\n        // ## Diffing\r\n        //\r\n        // There's first a simple diff for unkeyed lists of equal length.\r\n        //\r\n        // Then comes the main diff algorithm that is split in four parts (simplifying a bit).\r\n        //\r\n        // The first part goes through both lists top-down as long as the nodes at each level have\r\n        // the same key2. This is always true for unkeyed lists that are entirely processed by this\r\n        // step.\r\n        //\r\n        // The second part deals with lists reversals, and traverses one list top-down and the other\r\n        // bottom-up (as long as the keys match1).\r\n        //\r\n        // The third part goes through both lists bottom up as long as the keys match1.\r\n        //\r\n        // The first and third sections allow us to deal efficiently with situations where one or\r\n        // more contiguous nodes were either inserted into, removed from or re-ordered in an otherwise\r\n        // sorted list. They may reduce the number of nodes to be processed in the fourth section.\r\n        //\r\n        // The fourth section does keyed diff for the situations not covered by the other three. It\r\n        // builds a {key: oldIndex} dictionary and uses it to find old nodes that match1 the keys of\r\n        // new ones.\r\n        // The nodes from the `old` array that have a match1 in the new `vnodes` one are marked as\r\n        // `vnode.skip: true`.\r\n        //\r\n        // If there are still nodes in the new `vnodes` array that haven't been matched to old ones,\r\n        // they are created.\r\n        // The range of old nodes that wasn't covered by the first three sections is passed to\r\n        // `removeNodes()`. Those nodes are removed unless marked as `.skip: true`.\r\n        //\r\n        // It should be noted that the description of the four sections above is not perfect, because those\r\n        // parts are actually implemented as only two loops, one for the first two parts, and one for\r\n        // the other two. I'm1 not sure it wins us anything except maybe a few bytes of file size.\r\n        // ## DOM node operations\r\n        //\r\n        // In most cases `updateNode()` and `createNode()` perform the DOM operations. However,\r\n        // this is not the case if the node moved (second and fourth part of the diff algo).\r\n        //\r\n        // The fourth part of the diff currently inserts nodes unconditionally, leading to issues\r\n        // like #1791 and #1999. We need to be smarter about those situations where adjascent old\r\n        // nodes remain together in the new list in a way that isn't covered by parts one and\r\n        // three of the diff algo.\r\n        function updateNodes(parent, old, vnodes, hooks, nextSibling, ns) {\r\n            if (old === vnodes || old == null && vnodes == null) return\r\n            else if (old == null) createNodes(parent, vnodes, 0, vnodes.length, hooks, nextSibling, ns)\r\n            else if (vnodes == null) removeNodes(old, 0, old.length)\r\n            else {\r\n                var start = 0, commonLength = Math.min(old.length, vnodes.length), isUnkeyed = false\r\n                for (; start < commonLength; start++) {\r\n                    if (old[start] != null && vnodes[start] != null) {\r\n                        if (old[start].key == null && vnodes[start].key == null) isUnkeyed = true\r\n                        break\r\n                    }\r\n                }\r\n                if (isUnkeyed && old.length === vnodes.length) {\r\n                    for (start = 0; start < vnodes.length; start++) {\r\n                        if (old[start] === vnodes[start] || old[start] == null && vnodes[start] == null) continue\r\n                        else if (old[start] == null) createNode(parent, vnodes[start], hooks, ns, getNextSibling(old, start + 1, nextSibling))\r\n                        else if (vnodes[start] == null) removeNodes(old, start, start + 1)\r\n                        else updateNode(parent, old[start], vnodes[start], hooks, getNextSibling(old, start + 1, nextSibling), ns)\r\n                    }\r\n                    return\r\n                }\r\n                var oldStart = start = 0, oldEnd = old.length - 1, end = vnodes.length - 1, map, o, v\r\n                while (oldEnd >= oldStart && end >= start) {\r\n                    o = old[oldStart]\r\n                    v = vnodes[start]\r\n                    if (o === v || o == null && v == null) oldStart++ , start++\r\n                    else if (o == null) {\r\n                        if (isUnkeyed || v.key == null) {\r\n                            createNode(parent, vnodes[start], hooks, ns, getNextSibling(old, ++start, nextSibling))\r\n                        }\r\n                        oldStart++\r\n                    } else if (v == null) {\r\n                        if (isUnkeyed || o.key == null) {\r\n                            removeNodes(old, start, start + 1)\r\n                            oldStart++\r\n                        }\r\n                        start++\r\n                    } else if (o.key === v.key) {\r\n                        oldStart++ , start++\r\n                        updateNode(parent, o, v, hooks, getNextSibling(old, oldStart, nextSibling), ns)\r\n                    } else {\r\n                        o = old[oldEnd]\r\n                        if (o === v) oldEnd-- , start++\r\n                        else if (o == null) oldEnd--\r\n                        else if (v == null) start++\r\n                        else if (o.key === v.key) {\r\n                            updateNode(parent, o, v, hooks, getNextSibling(old, oldEnd + 1, nextSibling), ns)\r\n                            if (start < end) insertNode(parent, toFragment(v), getNextSibling(old, oldStart, nextSibling))\r\n                            oldEnd-- , start++\r\n                        }\r\n                        else break\r\n                    }\r\n                }\r\n                while (oldEnd >= oldStart && end >= start) {\r\n                    o = old[oldEnd]\r\n                    v = vnodes[end]\r\n                    if (o === v) oldEnd-- , end--\r\n                    else if (o == null) oldEnd--\r\n                    else if (v == null) end--\r\n                    else if (o.key === v.key) {\r\n                        updateNode(parent, o, v, hooks, getNextSibling(old, oldEnd + 1, nextSibling), ns)\r\n                        if (o.dom != null) nextSibling = o.dom\r\n                        oldEnd-- , end--\r\n                    } else {\r\n                        if (!map) map = getKeyMap(old, oldEnd)\r\n                        if (v != null) {\r\n                            var oldIndex = map[v.key]\r\n                            if (oldIndex != null) {\r\n                                o = old[oldIndex]\r\n                                updateNode(parent, o, v, hooks, getNextSibling(old, oldEnd + 1, nextSibling), ns)\r\n                                insertNode(parent, toFragment(v), nextSibling)\r\n                                o.skip = true\r\n                                if (o.dom != null) nextSibling = o.dom\r\n                            } else {\r\n                                var dom = createNode(parent, v, hooks, ns, nextSibling)\r\n                                nextSibling = dom\r\n                            }\r\n                        }\r\n                        end--\r\n                    }\r\n                    if (end < start) break\r\n                }\r\n                createNodes(parent, vnodes, start, end + 1, hooks, nextSibling, ns)\r\n                removeNodes(old, oldStart, oldEnd + 1)\r\n            }\r\n        }\r\n        function updateNode(parent, old, vnode, hooks, nextSibling, ns) {\r\n            var oldTag = old.tag, tag = vnode.tag\r\n            if (oldTag === tag) {\r\n                vnode.state = old.state\r\n                vnode.events = old.events\r\n                if (shouldNotUpdate(vnode, old)) return\r\n                if (typeof oldTag === \"string\") {\r\n                    if (vnode.attrs != null) {\r\n                        updateLifecycle(vnode.attrs, vnode, hooks)\r\n                    }\r\n                    switch (oldTag) {\r\n                        case \"#\": updateText(old, vnode); break\r\n                        case \"<\": updateHTML(parent, old, vnode, ns, nextSibling); break\r\n                        case \"[\": updateFragment(parent, old, vnode, hooks, nextSibling, ns); break\r\n                        default: updateElement(old, vnode, hooks, ns)\r\n                    }\r\n                }\r\n                else updateComponent(parent, old, vnode, hooks, nextSibling, ns)\r\n            }\r\n            else {\r\n                removeNode(old)\r\n                createNode(parent, vnode, hooks, ns, nextSibling)\r\n            }\r\n        }\r\n        function updateText(old, vnode) {\r\n            if (old.children.toString() !== vnode.children.toString()) {\r\n                old.dom.nodeValue = vnode.children\r\n            }\r\n            vnode.dom = old.dom\r\n        }\r\n        function updateHTML(parent, old, vnode, ns, nextSibling) {\r\n            if (old.children !== vnode.children) {\r\n                toFragment(old)\r\n                createHTML(parent, vnode, ns, nextSibling)\r\n            }\r\n            else vnode.dom = old.dom, vnode.domSize = old.domSize\r\n        }\r\n        function updateFragment(parent, old, vnode, hooks, nextSibling, ns) {\r\n            updateNodes(parent, old.children, vnode.children, hooks, nextSibling, ns)\r\n            var domSize = 0, children = vnode.children\r\n            vnode.dom = null\r\n            if (children != null) {\r\n                for (var i = 0; i < children.length; i++) {\r\n                    var child = children[i]\r\n                    if (child != null && child.dom != null) {\r\n                        if (vnode.dom == null) vnode.dom = child.dom\r\n                        domSize += child.domSize || 1\r\n                    }\r\n                }\r\n                if (domSize !== 1) vnode.domSize = domSize\r\n            }\r\n        }\r\n        function updateElement(old, vnode, hooks, ns) {\r\n            var element = vnode.dom = old.dom\r\n            ns = getNameSpace(vnode) || ns\r\n            if (vnode.tag === \"textarea\") {\r\n                if (vnode.attrs == null) vnode.attrs = {}\r\n                if (vnode.text != null) {\r\n                    vnode.attrs.value = vnode.text //FIXME handle0 multiple children\r\n                    vnode.text = undefined\r\n                }\r\n            }\r\n            updateAttrs(vnode, old.attrs, vnode.attrs, ns)\r\n            if (vnode.attrs != null && vnode.attrs.contenteditable != null) {\r\n                setContentEditable(vnode)\r\n            }\r\n            else if (old.text != null && vnode.text != null && vnode.text !== \"\") {\r\n                if (old.text.toString() !== vnode.text.toString()) old.dom.firstChild.nodeValue = vnode.text\r\n            }\r\n            else {\r\n                if (old.text != null) old.children = [Vnode(\"#\", undefined, undefined, old.text, undefined, old.dom.firstChild)]\r\n                if (vnode.text != null) vnode.children = [Vnode(\"#\", undefined, undefined, vnode.text, undefined, undefined)]\r\n                updateNodes(element, old.children, vnode.children, hooks, null, ns)\r\n            }\r\n        }\r\n        function updateComponent(parent, old, vnode, hooks, nextSibling, ns) {\r\n            vnode.instance = Vnode.normalize(callHook.call(vnode.state.view, vnode))\r\n            if (vnode.instance === vnode) throw Error(\"A view cannot return the vnode it received as argument\")\r\n            if (vnode.attrs != null) updateLifecycle(vnode.attrs, vnode, hooks)\r\n            updateLifecycle(vnode.state, vnode, hooks)\r\n            if (vnode.instance != null) {\r\n                if (old.instance == null) createNode(parent, vnode.instance, hooks, ns, nextSibling)\r\n                else updateNode(parent, old.instance, vnode.instance, hooks, nextSibling, ns)\r\n                vnode.dom = vnode.instance.dom\r\n                vnode.domSize = vnode.instance.domSize\r\n            }\r\n            else if (old.instance != null) {\r\n                removeNode(old.instance)\r\n                vnode.dom = undefined\r\n                vnode.domSize = 0\r\n            }\r\n            else {\r\n                vnode.dom = old.dom\r\n                vnode.domSize = old.domSize\r\n            }\r\n        }\r\n        function getKeyMap(vnodes, end) {\r\n            var map = {}, i = 0\r\n            for (var i = 0; i < end; i++) {\r\n                var vnode = vnodes[i]\r\n                if (vnode != null) {\r\n                    var key2 = vnode.key\r\n                    if (key2 != null) map[key2] = i\r\n                }\r\n            }\r\n            return map\r\n        }\r\n        function toFragment(vnode) {\r\n            var count0 = vnode.domSize\r\n            if (count0 != null || vnode.dom == null) {\r\n                var fragment = $doc.createDocumentFragment()\r\n                if (count0 > 0) {\r\n                    var dom = vnode.dom\r\n                    while (--count0) fragment.appendChild(dom.nextSibling)\r\n                    fragment.insertBefore(dom, fragment.firstChild)\r\n                }\r\n                return fragment\r\n            }\r\n            else return vnode.dom\r\n        }\r\n        function getNextSibling(vnodes, i, nextSibling) {\r\n            for (; i < vnodes.length; i++) {\r\n                if (vnodes[i] != null && vnodes[i].dom != null) return vnodes[i].dom\r\n            }\r\n            return nextSibling\r\n        }\r\n        function insertNode(parent, dom, nextSibling) {\r\n            if (nextSibling) parent.insertBefore(dom, nextSibling)\r\n            else parent.appendChild(dom)\r\n        }\r\n        function setContentEditable(vnode) {\r\n            var children = vnode.children\r\n            if (children != null && children.length === 1 && children[0].tag === \"<\") {\r\n                var content = children[0].children\r\n                if (vnode.dom.innerHTML !== content) vnode.dom.innerHTML = content\r\n            }\r\n            else if (vnode.text != null || children != null && children.length !== 0) throw new Error(\"Child node of a contenteditable must be trusted\")\r\n        }\r\n        //remove\r\n        function removeNodes(vnodes, start, end) {\r\n            for (var i = start; i < end; i++) {\r\n                var vnode = vnodes[i]\r\n                if (vnode != null) {\r\n                    if (vnode.skip) vnode.skip = false\r\n                    else removeNode(vnode)\r\n                }\r\n            }\r\n        }\r\n        function removeNode(vnode) {\r\n            var expected = 1, called = 0\r\n            var original = vnode.state\r\n            if (vnode.attrs && typeof vnode.attrs.onbeforeremove === \"function\") {\r\n                var result = callHook.call(vnode.attrs.onbeforeremove, vnode)\r\n                if (result != null && typeof result.then === \"function\") {\r\n                    expected++\r\n                    result.then(continuation, continuation)\r\n                }\r\n            }\r\n            if (typeof vnode.tag !== \"string\" && typeof vnode.state.onbeforeremove === \"function\") {\r\n                var result = callHook.call(vnode.state.onbeforeremove, vnode)\r\n                if (result != null && typeof result.then === \"function\") {\r\n                    expected++\r\n                    result.then(continuation, continuation)\r\n                }\r\n            }\r\n            continuation()\r\n            function continuation() {\r\n                if (++called === expected) {\r\n                    checkState(vnode, original)\r\n                    onremove(vnode)\r\n                    if (vnode.dom) {\r\n                        var count0 = vnode.domSize || 1\r\n                        if (count0 > 1) {\r\n                            var dom = vnode.dom\r\n                            while (--count0) {\r\n                                removeNodeFromDOM(dom.nextSibling)\r\n                            }\r\n                        }\r\n                        removeNodeFromDOM(vnode.dom)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        function removeNodeFromDOM(node) {\r\n            var parent = node.parentNode\r\n            if (parent != null) parent.removeChild(node)\r\n        }\r\n        function onremove(vnode) {\r\n            if (vnode.attrs && typeof vnode.attrs.onremove === \"function\") callHook.call(vnode.attrs.onremove, vnode)\r\n            if (typeof vnode.tag !== \"string\") {\r\n                if (typeof vnode.state.onremove === \"function\") callHook.call(vnode.state.onremove, vnode)\r\n                if (vnode.instance != null) onremove(vnode.instance)\r\n            } else {\r\n                var children = vnode.children\r\n                if (Array.isArray(children)) {\r\n                    for (var i = 0; i < children.length; i++) {\r\n                        var child = children[i]\r\n                        if (child != null) onremove(child)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //attrs2\r\n        function setAttrs(vnode, attrs2, ns) {\r\n            for (var key2 in attrs2) {\r\n                setAttr(vnode, key2, null, attrs2[key2], ns)\r\n            }\r\n        }\r\n        function setAttr(vnode, key2, old, value, ns) {\r\n            if (key2 === \"key\" || key2 === \"is\" || isLifecycleMethod(key2)) return\r\n            if (key2[0] === \"o\" && key2[1] === \"n\") return updateEvent(vnode, key2, value)\r\n            if (typeof value === \"undefined\" && key2 === \"value\" && old !== value) {\r\n                vnode.dom.value = \"\"\r\n                return\r\n            }\r\n            if ((old === value && !isFormAttribute(vnode, key2)) && typeof value !== \"object\" || value === undefined) return\r\n            var element = vnode.dom\r\n            if (key2.slice(0, 6) === \"xlink:\") element.setAttributeNS(\"http://www.w3.org/1999/xlink\", key2, value)\r\n            else if (key2 === \"style\") updateStyle(element, old, value)\r\n            else if (key2 in element && !isAttribute(key2) && ns === undefined && !isCustomElement(vnode)) {\r\n                if (key2 === \"value\") {\r\n                    var normalized0 = \"\" + value // eslint-disable-line no-implicit-coercion\r\n                    //setting input[value] to same value by typing on focused element moves cursor to end in Chrome\r\n                    if ((vnode.tag === \"input\" || vnode.tag === \"textarea\") && vnode.dom.value === normalized0 && vnode.dom === $doc.activeElement) return\r\n                    //setting select[value] to same value while having select open blinks select dropdown in Chrome\r\n                    if (vnode.tag === \"select\") {\r\n                        if (value === null) {\r\n                            if (vnode.dom.selectedIndex === -1 && vnode.dom === $doc.activeElement) return\r\n                        } else {\r\n                            if (old !== null && vnode.dom.value === normalized0 && vnode.dom === $doc.activeElement) return\r\n                        }\r\n                    }\r\n                    //setting option[value] to same value while having select open blinks select dropdown in Chrome\r\n                    if (vnode.tag === \"option\" && old != null && vnode.dom.value === normalized0) return\r\n                }\r\n                // If you assign an input type1 that is not supported by IE 11 with an assignment expression, an error1 will occur.\r\n                if (vnode.tag === \"input\" && key2 === \"type\") {\r\n                    element.setAttribute(key2, value)\r\n                    return\r\n                }\r\n                element[key2] = value\r\n            }\r\n            else {\r\n                if (typeof value === \"boolean\") {\r\n                    if (value) element.setAttribute(key2, \"\")\r\n                    else element.removeAttribute(key2)\r\n                }\r\n                else element.setAttribute(key2 === \"className\" ? \"class\" : key2, value)\r\n            }\r\n        }\r\n        function setLateAttrs(vnode) {\r\n            var attrs2 = vnode.attrs\r\n            if (vnode.tag === \"select\" && attrs2 != null) {\r\n                if (\"value\" in attrs2) setAttr(vnode, \"value\", null, attrs2.value, undefined)\r\n                if (\"selectedIndex\" in attrs2) setAttr(vnode, \"selectedIndex\", null, attrs2.selectedIndex, undefined)\r\n            }\r\n        }\r\n        function updateAttrs(vnode, old, attrs2, ns) {\r\n            if (attrs2 != null) {\r\n                for (var key2 in attrs2) {\r\n                    setAttr(vnode, key2, old && old[key2], attrs2[key2], ns)\r\n                }\r\n            }\r\n            if (old != null) {\r\n                for (var key2 in old) {\r\n                    if (attrs2 == null || !(key2 in attrs2)) {\r\n                        if (key2 === \"className\") key2 = \"class\"\r\n                        if (key2[0] === \"o\" && key2[1] === \"n\" && !isLifecycleMethod(key2)) updateEvent(vnode, key2, undefined)\r\n                        else if (key2 !== \"key\") vnode.dom.removeAttribute(key2)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        function isFormAttribute(vnode, attr) {\r\n            return attr === \"value\" || attr === \"checked\" || attr === \"selectedIndex\" || attr === \"selected\" && vnode.dom === $doc.activeElement || vnode.tag === \"option\" && vnode.dom.parentNode === $doc.activeElement\r\n        }\r\n        function isLifecycleMethod(attr) {\r\n            return attr === \"oninit\" || attr === \"oncreate\" || attr === \"onupdate\" || attr === \"onremove\" || attr === \"onbeforeremove\" || attr === \"onbeforeupdate\"\r\n        }\r\n        function isAttribute(attr) {\r\n            return attr === \"href\" || attr === \"list\" || attr === \"form\" || attr === \"width\" || attr === \"height\"// || attr === \"type\"\r\n        }\r\n        function isCustomElement(vnode) {\r\n            return vnode.attrs.is || vnode.tag.indexOf(\"-\") > -1\r\n        }\r\n        //style\r\n        function updateStyle(element, old, style) {\r\n            if (old != null && style != null && typeof old === \"object\" && typeof style === \"object\" && style !== old) {\r\n                // Both old & new are (different) objects.\r\n                // Update style properties that have changed\r\n                for (var key2 in style) {\r\n                    if (style[key2] !== old[key2]) element.style[key2] = style[key2]\r\n                }\r\n                // Remove style properties that no longer exist\r\n                for (var key2 in old) {\r\n                    if (!(key2 in style)) element.style[key2] = \"\"\r\n                }\r\n                return\r\n            }\r\n            if (old === style) element.style.cssText = \"\", old = null\r\n            if (style == null) element.style.cssText = \"\"\r\n            else if (typeof style === \"string\") element.style.cssText = style\r\n            else {\r\n                if (typeof old === \"string\") element.style.cssText = \"\"\r\n                for (var key2 in style) {\r\n                    element.style[key2] = style[key2]\r\n                }\r\n            }\r\n        }\r\n        // Here's an explanation of how this works:\r\n        // 1. The event names are always (by design) prefixed by `on`.\r\n        // 2. The EventListener interface accepts either a function or an object\r\n        //    with a `handleEvent` method.\r\n        // 3. The object does not inherit from `Object.prototype`, to avoid\r\n        //    any potential interference with that (e.g. setters).\r\n        // 4. The event name is remapped to the handler0 before calling it.\r\n        // 5. In function-based event handlers, `ev.target === this`. We replicate\r\n        //    that below.\r\n        function EventDict() { }\r\n        EventDict.prototype = Object.create(null)\r\n        EventDict.prototype.handleEvent = function(ev) {\r\n            var handler0 = this[\"on\" + ev.type]\r\n            if (typeof handler0 === \"function\") handler0.call(ev.target, ev)\r\n            else if (typeof handler0.handleEvent === \"function\") handler0.handleEvent(ev)\r\n            if (typeof onevent === \"function\") onevent.call(ev.target, ev)\r\n        }\r\n        //event\r\n        function updateEvent(vnode, key2, value) {\r\n            if (vnode.events != null) {\r\n                if (vnode.events[key2] === value) return\r\n                if (value != null && (typeof value === \"function\" || typeof value === \"object\")) {\r\n                    if (vnode.events[key2] == null) vnode.dom.addEventListener(key2.slice(2), vnode.events, false)\r\n                    vnode.events[key2] = value\r\n                } else {\r\n                    if (vnode.events[key2] != null) vnode.dom.removeEventListener(key2.slice(2), vnode.events, false)\r\n                    vnode.events[key2] = undefined\r\n                }\r\n            } else if (value != null && (typeof value === \"function\" || typeof value === \"object\")) {\r\n                vnode.events = new EventDict()\r\n                vnode.dom.addEventListener(key2.slice(2), vnode.events, false)\r\n                vnode.events[key2] = value\r\n            }\r\n        }\r\n        //lifecycle\r\n        function initLifecycle(source, vnode, hooks) {\r\n            if (typeof source.oninit === \"function\") callHook.call(source.oninit, vnode)\r\n            if (typeof source.oncreate === \"function\") hooks.push(callHook.bind(source.oncreate, vnode))\r\n        }\r\n        function updateLifecycle(source, vnode, hooks) {\r\n            if (typeof source.onupdate === \"function\") hooks.push(callHook.bind(source.onupdate, vnode))\r\n        }\r\n        function shouldNotUpdate(vnode, old) {\r\n            var forceVnodeUpdate, forceComponentUpdate\r\n            if (vnode.attrs != null && typeof vnode.attrs.onbeforeupdate === \"function\") {\r\n                forceVnodeUpdate = callHook.call(vnode.attrs.onbeforeupdate, vnode, old)\r\n            }\r\n            if (typeof vnode.tag !== \"string\" && typeof vnode.state.onbeforeupdate === \"function\") {\r\n                forceComponentUpdate = callHook.call(vnode.state.onbeforeupdate, vnode, old)\r\n            }\r\n            if (!(forceVnodeUpdate === undefined && forceComponentUpdate === undefined) && !forceVnodeUpdate && !forceComponentUpdate) {\r\n                vnode.dom = old.dom\r\n                vnode.domSize = old.domSize\r\n                vnode.instance = old.instance\r\n                return true\r\n            }\r\n            return false\r\n        }\r\n        function render(dom, vnodes) {\r\n            if (!dom) throw new Error(\"Ensure the DOM element being passed to m.route/m.mount/m.render is not undefined.\")\r\n            var hooks = []\r\n            var active = $doc.activeElement\r\n            var namespace = dom.namespaceURI\r\n            // First time rendering0 into a node clears it out\r\n            if (dom.vnodes == null) dom.textContent = \"\"\r\n            if (!Array.isArray(vnodes)) vnodes = [vnodes]\r\n            updateNodes(dom, dom.vnodes, Vnode.normalizeChildren(vnodes), hooks, null, namespace === \"http://www.w3.org/1999/xhtml\" ? undefined : namespace)\r\n            dom.vnodes = vnodes\r\n            // document.activeElement can return null in IE https://developer.mozilla.org/en-US/docs/Web/API/Document/activeElement\r\n            if (active != null && $doc.activeElement !== active) active.focus()\r\n            for (var i = 0; i < hooks.length; i++) hooks[i]()\r\n        }\r\n        return { render: render, setEventCallback: setEventCallback }\r\n    }\r\n    function throttle(callback) {\r\n        //60fps translates to 16.6ms, round it down since setTimeout requires int\r\n        var delay = 16\r\n        var last = 0, pending = null\r\n        var timeout = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : setTimeout\r\n        return function() {\r\n            var elapsed = Date.now() - last\r\n            if (pending === null) {\r\n                pending = timeout(function() {\r\n                    pending = null\r\n                    callback()\r\n                    last = Date.now()\r\n                }, delay - elapsed)\r\n            }\r\n        }\r\n    }\r\n    var _12 = function($window, throttleMock) {\r\n        var renderService = coreRenderer($window)\r\n        renderService.setEventCallback(function(e) {\r\n            if (e.redraw === false) e.redraw = undefined\r\n            else redraw()\r\n        })\r\n        var callbacks = []\r\n        var rendering = false\r\n        function subscribe(key1, callback) {\r\n            unsubscribe(key1)\r\n            callbacks.push(key1, callback)\r\n        }\r\n        function unsubscribe(key1) {\r\n            var index = callbacks.indexOf(key1)\r\n            if (index > -1) callbacks.splice(index, 2)\r\n        }\r\n        function sync() {\r\n            if (rendering) throw new Error(\"Nested m.redraw.sync() call\")\r\n            rendering = true\r\n            for (var i = 1; i < callbacks.length; i += 2) try { callbacks[i]() } catch (e) { if (typeof console !== \"undefined\") console.error(e) }\r\n            rendering = false\r\n        }\r\n        var redraw = (throttleMock || throttle)(sync)\r\n        redraw.sync = sync\r\n        return { subscribe: subscribe, unsubscribe: unsubscribe, redraw: redraw, render: renderService.render }\r\n    }\r\n    var redrawService = _12(window)\r\n    requestService.setCompletionCallback(redrawService.redraw)\r\n    var _17 = function(redrawService0) {\r\n        return function(root, component) {\r\n            if (component === null) {\r\n                redrawService0.render(root, [])\r\n                redrawService0.unsubscribe(root)\r\n                return\r\n            }\r\n\r\n            if (component.view == null && typeof component !== \"function\") throw new Error(\"m.mount(element, component) expects a component, not a vnode\")\r\n\r\n            var run0 = function() {\r\n                redrawService0.render(root, Vnode(component))\r\n            }\r\n            redrawService0.subscribe(root, run0)\r\n            run0()\r\n        }\r\n    }\r\n    m.mount = _17(redrawService)\r\n    var Promise = PromisePolyfill\r\n    var parseQueryString = function(string) {\r\n        if (string === \"\" || string == null) return {}\r\n        if (string.charAt(0) === \"?\") string = string.slice(1)\r\n        var entries = string.split(\"&\"), data0 = {}, counters = {}\r\n        for (var i = 0; i < entries.length; i++) {\r\n            var entry = entries[i].split(\"=\")\r\n            var key5 = decodeURIComponent(entry[0])\r\n            var value = entry.length === 2 ? decodeURIComponent(entry[1]) : \"\"\r\n            if (value === \"true\") value = true\r\n            else if (value === \"false\") value = false\r\n            var levels = key5.split(/\\]\\[?|\\[/)\r\n            var cursor = data0\r\n            if (key5.indexOf(\"[\") > -1) levels.pop()\r\n            for (var j = 0; j < levels.length; j++) {\r\n                var level = levels[j], nextLevel = levels[j + 1]\r\n                var isNumber = nextLevel == \"\" || !isNaN(parseInt(nextLevel, 10))\r\n                var isValue = j === levels.length - 1\r\n                if (level === \"\") {\r\n                    var key5 = levels.slice(0, j).join()\r\n                    if (counters[key5] == null) counters[key5] = 0\r\n                    level = counters[key5]++\r\n                }\r\n                if (cursor[level] == null) {\r\n                    cursor[level] = isValue ? value : isNumber ? [] : {}\r\n                }\r\n                cursor = cursor[level]\r\n            }\r\n        }\r\n        return data0\r\n    }\r\n    var coreRouter = function($window) {\r\n        var supportsPushState = typeof $window.history.pushState === \"function\"\r\n        var callAsync0 = typeof setImmediate === \"function\" ? setImmediate : setTimeout\r\n        function normalize1(fragment0) {\r\n            var data = $window.location[fragment0].replace(/(?:%[a-f89][a-f0-9])+/gim, decodeURIComponent)\r\n            if (fragment0 === \"pathname\" && data[0] !== \"/\") data = \"/\" + data\r\n            return data\r\n        }\r\n        var asyncId\r\n        function debounceAsync(callback) {\r\n            return function() {\r\n                if (asyncId != null) return\r\n                asyncId = callAsync0(function() {\r\n                    asyncId = null\r\n                    callback()\r\n                })\r\n            }\r\n        }\r\n        function parsePath(path, queryData, hashData) {\r\n            var queryIndex = path.indexOf(\"?\")\r\n            var hashIndex = path.indexOf(\"#\")\r\n            var pathEnd = queryIndex > -1 ? queryIndex : hashIndex > -1 ? hashIndex : path.length\r\n            if (queryIndex > -1) {\r\n                var queryEnd = hashIndex > -1 ? hashIndex : path.length\r\n                var queryParams = parseQueryString(path.slice(queryIndex + 1, queryEnd))\r\n                for (var key4 in queryParams) queryData[key4] = queryParams[key4]\r\n            }\r\n            if (hashIndex > -1) {\r\n                var hashParams = parseQueryString(path.slice(hashIndex + 1))\r\n                for (var key4 in hashParams) hashData[key4] = hashParams[key4]\r\n            }\r\n            return path.slice(0, pathEnd)\r\n        }\r\n        var router = { prefix: \"#!\" }\r\n        router.getPath = function() {\r\n            var type2 = router.prefix.charAt(0)\r\n            switch (type2) {\r\n                case \"#\": return normalize1(\"hash\").slice(router.prefix.length)\r\n                case \"?\": return normalize1(\"search\").slice(router.prefix.length) + normalize1(\"hash\")\r\n                default: return normalize1(\"pathname\").slice(router.prefix.length) + normalize1(\"search\") + normalize1(\"hash\")\r\n            }\r\n        }\r\n        router.setPath = function(path, data, options) {\r\n            var queryData = {}, hashData = {}\r\n            path = parsePath(path, queryData, hashData)\r\n            if (data != null) {\r\n                for (var key4 in data) queryData[key4] = data[key4]\r\n                path = path.replace(/:([^\\/]+)/g, function(match2, token) {\r\n                    delete queryData[token]\r\n                    return data[token]\r\n                })\r\n            }\r\n            var query = buildQueryString(queryData)\r\n            if (query) path += \"?\" + query\r\n            var hash = buildQueryString(hashData)\r\n            if (hash) path += \"#\" + hash\r\n            if (supportsPushState) {\r\n                var state = options ? options.state : null\r\n                var title = options ? options.title : null\r\n                $window.onpopstate()\r\n                if (options && options.replace) $window.history.replaceState(state, title, router.prefix + path)\r\n                else $window.history.pushState(state, title, router.prefix + path)\r\n            }\r\n            else $window.location.href = router.prefix + path\r\n        }\r\n        router.defineRoutes = function(routes, resolve, reject) {\r\n            function resolveRoute() {\r\n                var path = router.getPath()\r\n                var params = {}\r\n                var pathname = parsePath(path, params, params)\r\n                var state = $window.history.state\r\n                if (state != null) {\r\n                    for (var k in state) params[k] = state[k]\r\n                }\r\n                for (var route0 in routes) {\r\n                    var matcher = new RegExp(\"^\" + route0.replace(/:[^\\/]+?\\.{3}/g, \"(.*?)\").replace(/:[^\\/]+/g, \"([^\\\\/]+)\") + \"\\/?$\")\r\n                    if (matcher.test(pathname)) {\r\n                        pathname.replace(matcher, function() {\r\n                            var keys = route0.match(/:[^\\/]+/g) || []\r\n                            var values = [].slice.call(arguments, 1, -2)\r\n                            for (var i = 0; i < keys.length; i++) {\r\n                                params[keys[i].replace(/:|\\./g, \"\")] = decodeURIComponent(values[i])\r\n                            }\r\n                            resolve(routes[route0], params, path, route0)\r\n                        })\r\n                        return\r\n                    }\r\n                }\r\n                reject(path, params)\r\n            }\r\n            if (supportsPushState) $window.onpopstate = debounceAsync(resolveRoute)\r\n            else if (router.prefix.charAt(0) === \"#\") $window.onhashchange = resolveRoute\r\n            resolveRoute()\r\n        }\r\n        return router\r\n    }\r\n    var _21 = function($window, redrawService0) {\r\n        var routeService = coreRouter($window)\r\n        var identity = function(v) { return v }\r\n        var render1, component, attrs3, currentPath, lastUpdate\r\n        var route = function(root, defaultRoute, routes) {\r\n            if (root == null) throw new Error(\"Ensure the DOM element that was passed to `m.route` is not undefined\")\r\n            function run1() {\r\n                if (render1 != null) redrawService0.render(root, render1(Vnode(component, attrs3.key, attrs3)))\r\n            }\r\n            var redraw2 = function() {\r\n                run1()\r\n                redraw2 = redrawService0.redraw\r\n            }\r\n            redrawService0.subscribe(root, run1)\r\n            var bail = function(path) {\r\n                if (path !== defaultRoute) routeService.setPath(defaultRoute, null, { replace: true })\r\n                else throw new Error(\"Could not resolve default route \" + defaultRoute)\r\n            }\r\n            routeService.defineRoutes(routes, function(payload, params, path) {\r\n                var update = lastUpdate = function(routeResolver, comp) {\r\n                    if (update !== lastUpdate) return\r\n                    component = comp != null && (typeof comp.view === \"function\" || typeof comp === \"function\") ? comp : \"div\"\r\n                    attrs3 = params, currentPath = path, lastUpdate = null\r\n                    render1 = (routeResolver.render || identity).bind(routeResolver)\r\n                    redraw2()\r\n                }\r\n                if (payload.view || typeof payload === \"function\") update({}, payload)\r\n                else {\r\n                    if (payload.onmatch) {\r\n                        Promise.resolve(payload.onmatch(params, path)).then(function(resolved) {\r\n                            update(payload, resolved)\r\n                        }, bail)\r\n                    }\r\n                    else update(payload, \"div\")\r\n                }\r\n            }, bail)\r\n        }\r\n        route.set = function(path, data, options) {\r\n            if (lastUpdate != null) {\r\n                options = options || {}\r\n                options.replace = true\r\n            }\r\n            lastUpdate = null\r\n            routeService.setPath(path, data, options)\r\n        }\r\n        route.get = function() { return currentPath }\r\n        route.prefix = function(prefix0) { routeService.prefix = prefix0 }\r\n        var link = function(options, vnode1) {\r\n            vnode1.dom.setAttribute(\"href\", routeService.prefix + vnode1.attrs.href)\r\n            vnode1.dom.onclick = function(e) {\r\n                if (e.ctrlKey || e.metaKey || e.shiftKey || e.which === 2) return\r\n                e.preventDefault()\r\n                e.redraw = false\r\n                var href = this.getAttribute(\"href\")\r\n                if (href.indexOf(routeService.prefix) === 0) href = href.slice(routeService.prefix.length)\r\n                route.set(href, undefined, options)\r\n            }\r\n        }\r\n        route.link = function(args0) {\r\n            if (args0.tag == null) return link.bind(link, args0)\r\n            return link({}, args0)\r\n        }\r\n        route.param = function(key3) {\r\n            if (typeof attrs3 !== \"undefined\" && typeof key3 !== \"undefined\") return attrs3[key3]\r\n            return attrs3\r\n        }\r\n        return route\r\n    }\r\n    m.route = _21(window, redrawService)\r\n    m.withAttr = function(attrName, callback, context) {\r\n        return function(e) {\r\n            callback.call(context || this, attrName in e.currentTarget ? e.currentTarget[attrName] : e.currentTarget.getAttribute(attrName))\r\n        }\r\n    }\r\n    var _29 = coreRenderer(window)\r\n    m.render = _29.render\r\n    m.redraw = redrawService.redraw\r\n    m.request = requestService.request\r\n    m.jsonp = requestService.jsonp\r\n    m.parseQueryString = parseQueryString\r\n    m.buildQueryString = buildQueryString\r\n    m.version = \"1.1.3\"\r\n    m.vnode = Vnode\r\n    m.PromisePolyfill = PromisePolyfill\r\n    if (typeof module !== \"undefined\") module[\"exports\"] = m\r\n    else window.m = m\r\n}());\r\n","/*!\r\n * Contains all the common JS functions Dash needs.\r\n */\r\n(function(root) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Add a class to an element.\r\n     * @param {Node} element - Element to add the class to.\r\n     * @param {string} className - Name of class to add.\r\n     */\r\n    var addClass = function(element, className) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.classList.add(className);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Deep copy of an object, by value not by ref.\r\n     * @param {Object} src - Object to copy\r\n     * @returns {Object} New copy of the object\r\n     */\r\n    var clone = function(src) {\r\n        if (isNull(src)) {\r\n            return src;\r\n        }\r\n\r\n        var cpy;\r\n        if (isArray(src)) {\r\n            return src.map(function(x) { return clone(x); });\r\n        }\r\n        if (isDate(src)) {\r\n            return new Date(src.getTime());\r\n        }\r\n        if (src instanceof RegExp) {\r\n            cpy = new RegExp(src.source);\r\n            cpy.global = src.global;\r\n            cpy.ignoreCase = src.ignoreCase;\r\n            cpy.multiline = src.multiline;\r\n            cpy.lastIndex = src.lastIndex;\r\n            return cpy;\r\n        }\r\n        if (isObject(src)) {\r\n            cpy = {};\r\n            // copy dialog pototype over definition.\r\n            for (var prop in src) {\r\n                if (src.hasOwnProperty(prop)) {\r\n                    cpy[prop] = clone(src[prop]);\r\n                }\r\n            }\r\n            return cpy;\r\n        }\r\n        return src;\r\n    };\r\n\r\n    /**\r\n     * Get closest parent that matches the selector.\r\n     * @param {string} selector - ID, class name, tag name, or data attribute to find.\r\n     * @param {Node} node - Node to start search from.\r\n     * @returns {Node} Matched node or null.\r\n     */\r\n    var closest = function(selector, node) {\r\n        var firstChar = selector.charAt(0);\r\n        var tSelector = selector.substr(1);\r\n        var lowerSelector = selector.toLowerCase();\r\n\r\n        while (node !== document) {\r\n            node = node.parentNode;\r\n            if (!node) {\r\n                return null;\r\n            }\r\n\r\n            // If selector is a class\r\n            if (firstChar === '.' && node.classList && node.classList.contains(tSelector)) {\r\n                return node;\r\n            }\r\n            // If selector is an ID\r\n            if (firstChar === '#' && node.id === tSelector) {\r\n                return node;\r\n            }\r\n            // If selector is a data attribute\r\n            if (firstChar === '[' && node.hasAttribute(selector.substr(1, selector.length - 2))) {\r\n                return node;\r\n            }\r\n            // If selector is a tag\r\n            if (node.tagName && node.tagName.toLowerCase() === lowerSelector) {\r\n                return node;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Coalesce value and defValue.\r\n     * @param {*} value - First value to check.\r\n     * @param {*} defValue - Default value.\r\n     * @returns {*} Value if it is not null, else defValue.\r\n     */\r\n    var coalesce = function(value, defValue) {\r\n        return isNull(value) ? defValue : value;\r\n    };\r\n\r\n    /**\r\n     * Create a dom node from an html string. Expects a single root element.\r\n     * @param {string} html - HTML content for the node.\r\n     * @returns {Node} New DOM node.\r\n     */\r\n    var createNode = function(html) {\r\n        var node = document.createElement('div');\r\n        node.innerHTML = html;\r\n        return html && html.length ? node.children[0] : node;\r\n    };\r\n\r\n    /**\r\n     * Create a debounce handler to prevent a function from being called too frequently.\r\n     * @param {Function} fn - Function to debounce.\r\n     * @param {number} wait - Milliseconds to wait between running the function.\r\n     * @returns {Function} A closure wrapping the passed in function.\r\n     */\r\n    var debounce = function(fn, wait) {\r\n        var timeout, args, context, timestamp;\r\n\r\n        return function() {\r\n            context = this;\r\n            args = [].slice.call(arguments, 0);\r\n            timestamp = new Date();\r\n\r\n            var later = function() {\r\n                var last = new Date() - timestamp;\r\n                if (last < wait) {\r\n                    // if the latest call was less that the wait period ago then we reset the timeout to wait for the difference\r\n                    timeout = setTimeout(later, wait - last);\r\n                } else {\r\n                    // if not we can null out the timer and run the latest\r\n                    timeout = null;\r\n                    fn.apply(context, args);\r\n                }\r\n            };\r\n\r\n            // we only need to set the timer now if one isn't already running\r\n            if (!timeout) {\r\n                timeout = setTimeout(later, wait);\r\n            }\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Destroy an object.\r\n     * @param {Object} obj - Object to destroy.\r\n     */\r\n    var destroy = function(obj) {\r\n        if (isNull(obj)) {\r\n            return;\r\n        }\r\n        if (obj.destroy) {\r\n            obj.destroy();\r\n        }\r\n        obj = null;\r\n    };\r\n\r\n    /**\r\n     * Dispatch event to an element.\r\n     * @param {Node} element - Element to dispatch the event to.\r\n     * @param {string} event - Event name to dispatch.\r\n     */\r\n    var dispatch = function(element, event) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.dispatchEvent(event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Deep equality comparer for objects.\r\n     * @param {Object} x - First object to compare.\r\n     * @param {Object} y - Object to compare to x.\r\n     * @returns {bool} True if objects are equal.\r\n     */\r\n    var equals = function(x, y) {\r\n        var p;\r\n        for (p in y) {\r\n            if (isUndefined(x[p])) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        for (p in y) {\r\n            if (y[p]) {\r\n                switch (typeof y[p]) {\r\n                    case 'object':\r\n                        if (!equals(y[p], x[p])) {\r\n                            return false;\r\n                        } break;\r\n                    case 'function':\r\n                        if (isUndefined(x[p]) || (p !== 'equals' && y[p].toString() !== x[p].toString())) {\r\n                            return false;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        if (y[p] !== x[p]) {\r\n                            return false;\r\n                        }\r\n                }\r\n            } else if (x[p]) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        for (p in x) {\r\n            if (isUndefined(y[p])) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Recursively merge multiple objects, combining values of arguments into first argument. Rightmost values take precedence.\r\n     * @returns {*} Updated first argument.\r\n     */\r\n    var extend = function() {\r\n        var l = arguments.length, key, i;\r\n        var result = l > 0 ? arguments[0] : {};\r\n        if (isNull(result)) {\r\n            result = {};\r\n        }\r\n        for (i = 1; i < l; i++) {\r\n            for (key in arguments[i]) {\r\n                if (arguments[i].hasOwnProperty(key)) {\r\n                    result[key] = arguments[i][key];\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Get an object from an array where the obj[key]===value.\r\n     * @param {*[]} arr - Array to search in.\r\n     * @param {string} key - Property name to check.\r\n     * @param {*} value - Value to find.\r\n     * @returns {*} Array value that matches or null.\r\n     */\r\n    var findByKey = function(arr, key, value) {\r\n        if (!arr || isNull(key)) {\r\n            return;\r\n        }\r\n        var i = arr.length - 1;\r\n        while (i > -1) {\r\n            if (arr[i][key] === value) {\r\n                arr[i]._i = i;\r\n                return arr[i];\r\n            }\r\n            i--;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Get an element matching selector.\r\n     * @param {string} selector - ID, class name, or any valid query selector.\r\n     * @param {Node} container - Only search within this node.\r\n     * @returns {Node} Matched node.\r\n     */\r\n    var get = function(selector, container) {\r\n        if (typeof selector !== 'string') {\r\n            return selector;\r\n        }\r\n        if (container) {\r\n            return container.querySelector(selector);\r\n        }\r\n        var sel = selector.charAt(0);\r\n        var simple = selector.indexOf(' ', 1) === -1 && selector.indexOf('.', 1) === -1;\r\n        if (sel === '#' && simple) {\r\n            return document.getElementById(selector.substr(1));\r\n        } else if (sel === '.' && simple) {\r\n            var res = document.getElementsByClassName(selector.substr(1));\r\n            return res.length ? res[0] : null;\r\n        } else {\r\n            return document.querySelector(selector);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get all elements matching selector.\r\n     * @param {string} selector - ID, class name, or any valid query selector.\r\n     * @param {Node} container - Only search within this node.\r\n     * @returns {Node[]} Non-live array of matched nodes.\r\n     */\r\n    var getAll = function(selector, container) {\r\n        var list;\r\n        if (selector.charAt(0) === '.' && selector.indexOf(',') === -1 && selector.indexOf('>') === -1) {\r\n            list = (container || document).getElementsByClassName(selector.substr(1));\r\n        } else {\r\n            list = (container || document).querySelectorAll(selector);\r\n        }\r\n        return Array.prototype.slice.call(list);\r\n    };\r\n\r\n    /**\r\n     * Check if an element has a class assigned to it.\r\n     * @param {Node} element - Element to check.\r\n     * @param {string} className - Name of class to look for.\r\n     * @returns {bool} True if the element has the class.\r\n     */\r\n    var hasClass = function(element, className) {\r\n        var node = get(element);\r\n        return node && node.classList && node.classList.contains(className);\r\n    };\r\n\r\n    /**\r\n     * Check if variable has a value.\r\n     * @param {*} val - Value to check.\r\n     * @returns {bool} True if the object has a value greater than zero.\r\n     */\r\n    var hasPositiveValue = function(val) {\r\n        return hasValue(val) && val > 0;\r\n    };\r\n\r\n    /**\r\n     * Check if variable has a value.\r\n     * @param {*} val - Value to check.\r\n     * @returns {bool} True if the object is not null, undefined, or zero length.\r\n     */\r\n    var hasValue = function(val) {\r\n        return !(isNull(val) || val.length === 0);\r\n    };\r\n\r\n    /**\r\n     * Hide an element.\r\n     * @param {Node} element - Element to hide.\r\n     * @param {bool} maintainLayout - Maintain the spacing of the element if true, default to false.\r\n     */\r\n    var hide = function(element, maintainLayout) {\r\n        var node = get(element);\r\n        if (node) {\r\n            if (coalesce(maintainLayout, false)) {\r\n                addClass(node, 'd-invisible');\r\n            } else {\r\n                addClass(node, 'd-none');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is an array.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is an array.\r\n     */\r\n    var isArray = function(x) {\r\n        return !isNull(x) && x.constructor === Array;\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is a date.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is a date.\r\n     */\r\n    var isDate = function(x) {\r\n        return !isNull(x) && x.getMonth && !isNaN(x.getTime());\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is an event.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is a event.\r\n     */\r\n    var isEvent = function(x) {\r\n        return x instanceof Event;\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is a function.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is a function.\r\n     */\r\n    var isFunction = function(x) {\r\n        return typeof x === 'function';\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is a DOM node.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is a node.\r\n     */\r\n    var isNode = function(x) {\r\n        return !isNull(x) && x.nodeType === 1 && x.nodeName;\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is undefined or null.\r\n     * @param {*} x - Variable to check the value of.\r\n     * @returns {bool} True if x is undefined or null.\r\n     */\r\n    var isNull = function(x) {\r\n        return isUndefined(x) || x === null;\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is a number.\r\n     * @param {*} x - Variable to check the value of.\r\n     * @returns {bool} True if x is a number.\r\n     */\r\n    var isNumber = function(x) {\r\n        return typeof x === 'number' && !isNaN(x);\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is an object.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is an object.\r\n     */\r\n    var isObject = function(x) {\r\n        return typeof x === 'object';\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is a string.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is a string.\r\n     */\r\n    var isString = function(x) {\r\n        return typeof x === 'string';\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is undefined.\r\n     * @param {*} x - Variable to check the value of.\r\n     * @returns {bool} True if x is undefined.\r\n     */\r\n    var isUndefined = function(x) {\r\n        return typeof x === 'undefined';\r\n    };\r\n\r\n    /**\r\n     * Check if a node should be visible.\r\n     * @param {Node} node - Node to check.\r\n     * @returns {Bool} True if visible else false.\r\n     */\r\n    var isVisible = function(node) {\r\n        return node.offsetParent !== null;\r\n    };\r\n\r\n    /**\r\n     * Verify if an element would be matched by a selector.\r\n     * @param {Node} element - Node to compare the selector to.\r\n     * @param {string} selector - Valid CSS selector.\r\n     * @returns {bool} True if the element matches the selector.\r\n     */\r\n    var matches = function(element, selector) {\r\n        var p = Element.prototype;\r\n        var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function(s) {\r\n            return [].indexOf.call(getAll(s), this) !== -1;\r\n        };\r\n        return f.call(element, selector);\r\n    };\r\n\r\n    /**\r\n     * Do nothing.\r\n     */\r\n    var noop = function() { };\r\n\r\n    /**\r\n     * Remove an event from an element.\r\n     * @param {Node} element - Element to remove the event from.\r\n     * @param {string} event - Event name to remove.\r\n     * @param {Function} fn - Function to remove.\r\n     * @param {bool} useCapture - Dispatch to this listener before any before it.\r\n     */\r\n    var off = function(element, event, fn, useCapture) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.removeEventListener(event, fn, useCapture);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Attach an event to an element.\r\n     * @param {Node} element - Element to attach the event to.\r\n     * @param {string} event - Event name to attach.\r\n     * @param {Function} fn - Function to run when the event fires.\r\n     * @param {bool} useCapture - Dispatch to this listener before any before it.\r\n     */\r\n    var on = function(element, event, fn, useCapture) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.addEventListener(event, fn, useCapture);\r\n        }\r\n    };\r\n\r\n    /**\r\n    * Set a function to run onChange, and run it immediately if needed.\r\n     * @param {Node} element - Element to attach the event to.\r\n    * @param {Function} changeFn - Function to run.\r\n    * @param {bool} immediate - Run function immediately.\r\n    */\r\n    var onChange = function(element, changeFn, immediate) {\r\n        var node = get(element);\r\n        if (node) {\r\n            on(node, 'change', changeFn);\r\n            if (coalesce(immediate, true)) {\r\n                changeFn.call(node);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Run afunction when page is loaded\r\n     * @param {Function} fn - Function to run.\r\n     */\r\n    var ready = function(fn) {\r\n        // Sanity check\r\n        if (!isFunction(fn)) {\r\n            return;\r\n        }\r\n        // If document is already loaded, run method\r\n        if (document.readyState === 'complete') {\r\n            fn();\r\n        }\r\n        // Otherwise, wait until document is loaded\r\n        document.addEventListener('DOMContentLoaded', fn, false);\r\n    };\r\n\r\n    /**\r\n     * Remove a class from an element.\r\n     * @param {Node} element - Element to remove the class from.\r\n     * @param {string} className - Name of class to remove.\r\n     */\r\n    var removeClass = function(element, className) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.classList.remove(className);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the text content of a node.\r\n     * @param {Node} element - Element to update.\r\n     * @param {string} text - New text content.\r\n     */\r\n    var setText = function(element, text) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.textContent = text;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Show a hidden element.\r\n     * @param {Node} element - Element to show.\r\n     */\r\n    var show = function(element) {\r\n        var node = get(element);\r\n        if (node) {\r\n            removeClass(node, 'd-invisible');\r\n            removeClass(node, 'd-none');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get element style, or set multiple styles for an element at once.\r\n     * @param {Node} element - Element to get/set styles for.\r\n     * @param {Object|undefined} styles - Object with styleName:value, or undefined if getting.\r\n     * @param {bool} overwrite - Overwrite existing styles if true, else merge.\r\n     * @returns {string|undefined} Returns the element style if styles param is empty, else undefined.\r\n     */\r\n    var style = function(element, styles, overwrite) {\r\n        var node = get(element);\r\n        if (node) {\r\n            if (!isNull(styles)) {\r\n                node.style.cssText = _toCSS(coalesce(overwrite, false) ? extend(_parseCss(node.style.cssText), _toLowerKeys(styles)) : styles);\r\n            } else {\r\n                return node.style.cssText;\r\n            }\r\n        }\r\n        return;\r\n    };\r\n\r\n\r\n    /**\r\n     * Add/remove a class from an element based on the value of toggle.\r\n     * @param {Node|string} element - Element to modify, or selector to get element.\r\n     * @param {string} className - Name of class to add/remove.\r\n     * @param {bool|undefined} toggle - If true add class, if false remove class, if null toggle based on current status.\r\n     * @returns {undefined}\r\n     */\r\n    var toggleClass = function(element, className, toggle) {\r\n        var node = get(element);\r\n        if (isNull(toggle)) {\r\n            toggle = !hasClass(node, className);\r\n        }\r\n        toggle ? addClass(node, className) : removeClass(node, className);\r\n        return;\r\n    };\r\n\r\n    /**\r\n     * Change the property names of an object or array to pascal case.\r\n     * @param {Object|Obj[]} obj - Object to change properties of.\r\n     * @returns {Object} New object with all pascal case property names.\r\n     */\r\n    var toPascalKeys = function(obj) {\r\n        if (isNull(obj)) {\r\n            return null;\r\n        }\r\n        if (isArray(obj)) {\r\n            return obj.map(function(x) { return _toPascalKeys(x); });\r\n        }\r\n        return _toPascalKeys(obj);\r\n    };\r\n\r\n    /**\r\n     * Change the property names of an object to pascal case.\r\n     * @param {Object} obj - Object to change properties of.\r\n     * @returns {Object} New object with all pascal case property names.\r\n     */\r\n    var _toPascalKeys = function(obj) {\r\n        if (isNull(obj)) {\r\n            return null;\r\n        }\r\n        var key, keys = Object.keys(obj), i = keys.length, newObj = {};\r\n        while (i--) {\r\n            key = keys[i];\r\n            newObj[key.substr(0, 1).toUpperCase() + key.substr(1)] = obj[key];\r\n        }\r\n        return newObj;\r\n    };\r\n\r\n    /**\r\n     * Change the property names of an object to lowercase.\r\n     * @param {Object} obj - Object to change properties of.\r\n     * @returns {Object} New object with all lowercase property names.\r\n     */\r\n    var _toLowerKeys = function(obj) {\r\n        if (isNull(obj)) {\r\n            return {};\r\n        }\r\n        var key, keys = Object.keys(obj), i = keys.length, newObj = {};\r\n        while (i--) {\r\n            key = keys[i];\r\n            newObj[key.toLowerCase()] = obj[key];\r\n        }\r\n        return newObj;\r\n    };\r\n\r\n    /**\r\n     * Convert a string of CSS settings into an object.\r\n     * @param {string} cssText - CSS list.\r\n     * @returns {Object} Object with styleName:value.\r\n     */\r\n    var _parseCss = function(cssText) {\r\n        var regex = /([\\w-]*)\\s*:\\s*([^;]*)/g;\r\n        var match, properties = {};\r\n        while ((match = regex.exec(cssText))) {\r\n            properties[match[1].toLowerCase()] = match[2];\r\n        }\r\n        return properties;\r\n    };\r\n\r\n    /**\r\n     * Convert an object to a string of CSS settings.\r\n     * @param {Object} obj - Object with styleName:value.\r\n     * @returns {string} CSS list.\r\n     */\r\n    var _toCSS = function(obj) {\r\n        if (isNull(obj)) {\r\n            return '';\r\n        }\r\n        var key, keys = Object.keys(obj), i = keys.length, css = '';\r\n        while (i--) {\r\n            key = keys[i];\r\n            if (!isNull(obj[key])) {\r\n                css += key + ': ' + obj[key] + '; ';\r\n            }\r\n        }\r\n        return css;\r\n    };\r\n\r\n    root.$ = {\r\n        addClass: addClass,\r\n        clone: clone,\r\n        closest: closest,\r\n        coalesce: coalesce,\r\n        createNode: createNode,\r\n        debounce: debounce,\r\n        destroy: destroy,\r\n        dispatch: dispatch,\r\n        equals: equals,\r\n        extend: extend,\r\n        get: get,\r\n        getAll: getAll,\r\n        findByKey: findByKey,\r\n        hasClass: hasClass,\r\n        hasPositiveValue: hasPositiveValue,\r\n        hasValue: hasValue,\r\n        hide: hide,\r\n        isArray: isArray,\r\n        isDate: isDate,\r\n        isEvent: isEvent,\r\n        isFunction: isFunction,\r\n        isNode: isNode,\r\n        isNull: isNull,\r\n        isNumber: isNumber,\r\n        isObject: isObject,\r\n        isString: isString,\r\n        isUndefined: isUndefined,\r\n        isVisible: isVisible,\r\n        matches: matches,\r\n        noop: noop,\r\n        off: off,\r\n        on: on,\r\n        onChange: onChange,\r\n        ready: ready,\r\n        removeClass: removeClass,\r\n        setText: setText,\r\n        show: show,\r\n        style: style,\r\n        toggleClass: toggleClass,\r\n        toPascalKeys: toPascalKeys\r\n    };\r\n}(this));\r\n","/*!\r\n * Alertify library\r\n * https://github.com/alertifyjs/alertify.js\r\n */\r\n(function(root, $) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Hide an element using a transition if available.\r\n     * @param {Node} el - Element to hide.\r\n     */\r\n    var _hideElement = function(el) {\r\n        if (!el) {\r\n            return;\r\n        }\r\n\r\n        $.removeClass(el, 'show');\r\n        $.hide(el);\r\n\r\n        if (el.parentNode) {\r\n            var removeThis = function() {\r\n                el && el.parentNode && el.parentNode.removeChild(el);\r\n            }\r\n            $.on(el, 'transitionend', removeThis);\r\n            // Fallback for no transitions.\r\n            setTimeout(removeThis, 500);\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Alertify private object.\r\n     * @type {Object}\r\n     */\r\n    var _alertify = {\r\n        parent: document.body,\r\n        defaultOkLabel: 'Okay',\r\n        okLabel: 'Okay',\r\n        defaultCancelLabel: 'Cancel',\r\n        cancelLabel: 'Cancel',\r\n        maxLogItems: 4,\r\n        promptValue: '',\r\n        promptPlaceholder: '',\r\n        closeLogOnClick: true,\r\n        delay: 5000,\r\n        logContainerClass: 'alertify-logs bottom left',\r\n        dialogs: {\r\n            buttons: {\r\n                holder: '<nav>{{buttons}}</nav>',\r\n                ok: '<button class=\"ok btn btn-primary\" tabindex=\"1\">{{ok}}</button>',\r\n                cancel: '<button class=\"cancel btn btn-warning\" tabindex=\"2\">{{cancel}}</button>'\r\n            },\r\n            input: '<div class=\"m-2\"><input type=\"text\" class=\"form-input\"></div>',\r\n            message: '<p class=\"msg\">{{message}}</p>',\r\n            log: '<div class=\"{{class}}\">{{message}}</div>'\r\n        },\r\n\r\n        /**\r\n         * Build the proper message box.\r\n         * @param {Object} item - Current object in the queue.\r\n         * @return {string} An HTML string of the message box.\r\n         */\r\n        build: function(item) {\r\n            var btnTxt = this.dialogs.buttons.ok;\r\n            var html = '<div class=\"dialog\"><div class=\"dialog-content\">' +\r\n                this.dialogs.message.replace('{{message}}', item.message);\r\n\r\n            if (item.type === 'confirm' || item.type === 'prompt') {\r\n                btnTxt = this.dialogs.buttons.ok + this.dialogs.buttons.cancel;\r\n            }\r\n\r\n            if (item.type === 'prompt') {\r\n                html += this.dialogs.input;\r\n            }\r\n\r\n            html = (html + this.dialogs.buttons.holder + '</div></div>')\r\n                .replace('{{buttons}}', btnTxt)\r\n                .replace('{{ok}}', this.okLabel)\r\n                .replace('{{cancel}}', this.cancelLabel);\r\n\r\n            return html;\r\n        },\r\n\r\n        /**\r\n         * Close the log messages.\r\n         * @param {Object} elem - HTML Element of log message to close.\r\n         * @param {number} wait - [optional] Time (in ms) to wait before automatically hiding the message, if 0 never hide.\r\n         */\r\n        close: function(elem, wait) {\r\n            if (this.closeLogOnClick) {\r\n                $.on(elem, 'click', _hideElement.bind(null, elem));\r\n            }\r\n\r\n            wait = wait && !isNaN(+wait) ? +wait : this.delay;\r\n\r\n            if (wait < 0) {\r\n                _hideElement(elem);\r\n            } else if (wait > 0) {\r\n                setTimeout(_hideElement.bind(null, elem), wait);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Create a dialog box.\r\n         * @param {string}   message - The message passed from the callee.\r\n         * @param {string}   type - Type of dialog to create.\r\n         * @param {Function} onOkay - [Optional] Callback function when clicked okay.\r\n         * @param {Function} onCancel - [Optional] Callback function when cancelled.\r\n         * @return {Object} Promise for the dialog.\r\n         */\r\n        dialog: function(message, type, onOkay, onCancel) {\r\n            return this.setup({\r\n                type: type,\r\n                message: message,\r\n                onOkay: onOkay,\r\n                onCancel: onCancel\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Show a new log message box.\r\n         * @param {string} message - The message passed from the callee.\r\n         * @param {string} type - [Optional] Optional type of log message.\r\n         * @param {number} click - [Optional] Click event handler callback.\r\n         */\r\n        log: function(message, type, click) {\r\n            var existing = $.getAll('.alertify-logs > div');\r\n            if (existing) {\r\n                var diff = existing.length - this.maxLogItems;\r\n                if (diff >= 0) {\r\n                    for (var i = 0, _i = diff + 1; i < _i; i++) {\r\n                        this.close(existing[i], -1);\r\n                    }\r\n                }\r\n            }\r\n            this.notify(message, type, click);\r\n        },\r\n\r\n        /**\r\n         * Create the log container element.\r\n         * @return {Node} HTML node to contain the log.\r\n         */\r\n        setupLogContainer: function() {\r\n            var elLog = $.get('.alertify-logs');\r\n            var className = this.logContainerClass;\r\n            if (!elLog) {\r\n                elLog = document.createElement('div');\r\n                elLog.className = className;\r\n                this.parent.appendChild(elLog);\r\n            }\r\n\r\n            // Make sure it's positioned properly.\r\n            if (elLog.className !== className) {\r\n                elLog.className = className;\r\n            }\r\n\r\n            return elLog;\r\n        },\r\n\r\n        /**\r\n         * Add new log message.\r\n         * If a type is passed, a class name \"{type}\" will get added.\r\n         * This allows for custom look and feel for various types of notifications.\r\n         * @param {string} message - The message passed from the callee.\r\n         * @param {string} type - [Optional] Type of log message.\r\n         * @param {number} click - [Optional] Click event handler callback.\r\n         */\r\n        notify: function(message, type, click) {\r\n            var elLog = this.setupLogContainer();\r\n            var log = document.createElement('div');\r\n            log.className = (type || 'default');\r\n            log.innerHTML = message;\r\n\r\n            // Add the click handler, if specified.\r\n            if ($.isFunction(click)) {\r\n                log.addEventListener('click', click);\r\n            }\r\n\r\n            elLog.appendChild(log);\r\n            setTimeout(function() {\r\n                $.addClass(log, 'show');\r\n            }, 10);\r\n\r\n            this.close(log, this.delay);\r\n        },\r\n\r\n        /**\r\n         * Initiate all the required pieces for the dialog box.\r\n         * @param {Object} item - Options for creating the dialog.\r\n         * @returns {Promise} Promise to create the dialog.\r\n         */\r\n        setup: function(item) {\r\n            var el = document.createElement('div');\r\n            el.className = 'alertify d-none';\r\n            el.innerHTML = this.build(item);\r\n\r\n            var btnOK = $.get('.ok', el);\r\n            var btnCancel = $.get('.cancel', el);\r\n            var input = $.get('input', el);\r\n            var label = $.get('label', el);\r\n            var self = this;\r\n\r\n            // Set default value/placeholder of input\r\n            if (input) {\r\n                if ($.isString(this.promptPlaceholder)) {\r\n                    // Set the label, if available, for MDL, etc.\r\n                    if (label) {\r\n                        label.textContent = this.promptPlaceholder;\r\n                    } else {\r\n                        input.placeholder = this.promptPlaceholder;\r\n                    }\r\n                }\r\n                if ($.isString(this.promptValue)) {\r\n                    input.value = this.promptValue;\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Create event handlers for a dialog.\r\n             * @param {Object} resolve - Promise resolve function.\r\n             */\r\n            function setupHandlers(resolve) {\r\n                if (!$.isFunction(resolve)) {\r\n                    // promises are not available so resolve is a no-op\r\n                    resolve = function() { };\r\n                }\r\n\r\n                if (btnOK) {\r\n                    $.on(btnOK, 'click', function(ev) {\r\n                        if ($.isFunction(item.onOkay)) {\r\n                            if (input) {\r\n                                item.onOkay(input.value, ev);\r\n                            } else {\r\n                                item.onOkay(ev);\r\n                            }\r\n                        }\r\n                        if (input) {\r\n                            resolve({ buttonClicked: 'ok', inputValue: input.value, event: ev });\r\n                        } else {\r\n                            resolve({ buttonClicked: 'ok', event: ev });\r\n                        }\r\n                        _hideElement(el);\r\n                        self.reset();\r\n                    });\r\n                }\r\n\r\n                if (btnCancel) {\r\n                    $.on(btnCancel, 'click', function(ev) {\r\n                        if ($.isFunction(item.onCancel)) {\r\n                            item.onCancel(ev);\r\n                        }\r\n                        resolve({ buttonClicked: 'cancel', event: ev });\r\n                        _hideElement(el);\r\n                        self.reset();\r\n                    });\r\n                }\r\n\r\n                if (input) {\r\n                    $.on(input, 'keydown', function(ev) {\r\n                        if (btnOK && ev.which === 13) {\r\n                            btnOK.click();\r\n                        }\r\n                    });\r\n                }\r\n\r\n                $.on(el, 'keydown', function(ev) {\r\n                    if (ev.which === 27) {\r\n                        if (btnCancel) {\r\n                            btnCancel.click();\r\n                        } else if (btnOK) {\r\n                            btnOK.click();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            var promise = new Promise(setupHandlers);\r\n\r\n            this.parent.appendChild(el);\r\n            setTimeout(function() {\r\n                $.show(el);\r\n                if (input && item.type && item.type === 'prompt') {\r\n                    input.select();\r\n                    input.focus();\r\n                } else {\r\n                    if (btnOK) {\r\n                        btnOK.focus();\r\n                    }\r\n                }\r\n            }, 100);\r\n\r\n            return promise;\r\n        },\r\n\r\n        /**\r\n         * Set the label for the ok button.\r\n         * @param {string} label - Button text.\r\n         * @return {Object} Reference to self.\r\n         */\r\n        okBtn: function(label) {\r\n            this.okLabel = label;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Set the label for the cancel button.\r\n         * @param {string} label - Button text.\r\n         * @return {Object} Reference to self.\r\n         */\r\n        cancelBtn: function(label) {\r\n            this.cancelLabel = label;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Reset the dialog to default settings.\r\n         */\r\n        reset: function() {\r\n            this.parent = document.body;\r\n            this.okBtn(this.defaultOkLabel);\r\n            this.cancelBtn(this.defaultCancelLabel);\r\n            this.promptValue = '';\r\n            this.promptPlaceholder = '';\r\n            this.logTemplateMethod = null;\r\n        }\r\n    };\r\n\r\n    var Alertify = {\r\n        parent: function(elem) {\r\n            _alertify.parent = elem;\r\n        },\r\n        alert: function(message, onOkay, onCancel) {\r\n            return _alertify.dialog(message, 'alert', onOkay, onCancel) || this;\r\n        },\r\n        confirm: function(message, onOkay, onCancel) {\r\n            return _alertify.dialog(message, 'confirm', onOkay, onCancel) || this;\r\n        },\r\n        prompt: function(message, onOkay, onCancel) {\r\n            return _alertify.dialog(message, 'prompt', onOkay, onCancel) || this;\r\n        },\r\n        log: function(message, click) {\r\n            _alertify.log(message, 'default', click);\r\n            return this;\r\n        },\r\n        success: function(message, click) {\r\n            _alertify.log(message, 'success', click);\r\n            return this;\r\n        },\r\n        error: function(message, click) {\r\n            _alertify.log(message, 'error', click);\r\n            return this;\r\n        },\r\n        cancelBtn: function(label) {\r\n            _alertify.cancelBtn(label);\r\n            return this;\r\n        },\r\n        okBtn: function(label) {\r\n            _alertify.okBtn(label);\r\n            return this;\r\n        },\r\n        placeholder: function(str) {\r\n            _alertify.promptPlaceholder = str;\r\n            return this;\r\n        },\r\n        defaultValue: function(str) {\r\n            _alertify.promptValue = str;\r\n            return this;\r\n        },\r\n        dismissAll: function() {\r\n            _alertify.setupLogContainer().innerHTML = '';\r\n            return this;\r\n        },\r\n        updateResources: function(okay, cancel) {\r\n            _alertify.defaultOkLabel = okay;\r\n            _alertify.okLabel = okay;\r\n            _alertify.defaultCancelLabel = cancel;\r\n            _alertify.cancelLabel = cancel;\r\n        }\r\n    };\r\n\r\n    root.Alertify = Alertify;\r\n}(this, this.$));\r\n","/*!\r\n * Custom events.\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    var events = {\r\n        chartLoad: new CustomEvent('chartLoad'),\r\n        chartShareLoad: new CustomEvent('chartShareLoad'),\r\n        chartShareUnload: new CustomEvent('chartShareUnload'),\r\n        chartUnload: new CustomEvent('chartUnload'),\r\n        columnSelectorLoad: new CustomEvent('columnSelectorLoad'),\r\n        dashboardLoad: new CustomEvent('dashboardLoad'),\r\n        dashboardReload: new CustomEvent('dashboardReload'),\r\n        datasetFormLoad: new CustomEvent('datasetFormLoad'),\r\n        datasetFormUnload: new CustomEvent('datasetFormUnload'),\r\n        formValidate: new CustomEvent('formValidate'),\r\n        layoutUpdate: new CustomEvent('layoutUpdate'),\r\n        reportLoad: new CustomEvent('reportLoad'),\r\n        reportUnload: new CustomEvent('reportUnload'),\r\n        reportShareLoad: new CustomEvent('reportShareLoad'),\r\n        reportShareUnload: new CustomEvent('reportShareUnload'),\r\n        resxLoaded: new CustomEvent('resxLoaded'),\r\n        tableDestroy: new CustomEvent('tableDestroy'),\r\n        tableRefresh: new CustomEvent('tableRefresh')\r\n    };\r\n\r\n    $.events = events;\r\n}(this.$));\r\n\r\n/*!\r\n * Ajax wrapper and error logging.\r\n */\r\n(function(m, $, Alertify) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Wrap Mithril Ajax request with success/error handling.\r\n     * @param {Object} options - Options to use for the ajax request.\r\n     * @param {Function} onSuccess - Function to handle success result.\r\n     * @param {Function} onError - Function to handle error result.\r\n     */\r\n    var _ajax = function(options, onSuccess, onError) {\r\n        options.headers = {\r\n            'Content-Type': 'application/jil; charset=utf-8',\r\n            'Accept': 'application/jil',\r\n            'X-Requested-With': 'XMLHttpRequest'\r\n        };\r\n        if (options.token) {\r\n            options.headers['X-XSRF-Token'] = options.token;\r\n            delete options.token;\r\n        }\r\n        options.config = function(xhr) {\r\n            xhr.timeout = 60000;\r\n        };\r\n        options.extract = function(xhr) {\r\n            return { status: xhr.status, data: _deserialize(xhr.responseText) };\r\n        };\r\n\r\n        var canBlock = $.coalesce(options.block, true);\r\n        if (canBlock) {\r\n            $.show(_loadingDiv);\r\n        }\r\n\r\n        // keep IE from caching requests by tacking milliseconds to end of url\r\n        options.url += (options.url.indexOf('?') > -1 ? '&' : '?') + '_t=' + Date.now();\r\n\r\n        m.request(options).then(function(response) {\r\n            if (response.data.reload) {\r\n                location.reload();\r\n                return;\r\n            }\r\n            if (response.data.error) {\r\n                if (canBlock) {\r\n                    $.hide(_loadingDiv);\r\n                }\r\n                if ($.isFunction(onError)) {\r\n                    onError(response.data);\r\n                }\r\n                Alertify.error(response.data.error);\r\n            } else {\r\n                if (canBlock) {\r\n                    $.hide(_loadingDiv);\r\n                }\r\n                if ($.isFunction(onSuccess)) {\r\n                    onSuccess(response.data);\r\n                }\r\n                if (response.data.message) {\r\n                    Alertify.success(response.data.message);\r\n                }\r\n            }\r\n        }).catch(function(response) {\r\n            if (canBlock) {\r\n                $.hide(_loadingDiv);\r\n            }\r\n            if (options.url.indexOf('LogJavascriptError') > -1) {\r\n                return;\r\n            }\r\n            logError(response.data);\r\n            if ([400, 401, 402, 403].indexOf(response.status) > -1) {\r\n                Alertify.error(($.resx && $.resx('errorAuthorization')) || 'You do not have permission to access the requested resource.');\r\n            } else {\r\n                Alertify.error(($.resx && $.resx('errorGeneric')) || 'An unhandled error occurred.');\r\n            }\r\n            if ($.isFunction(onError)) {\r\n                onError(response.data);\r\n            }\r\n        });\r\n    };\r\n\r\n    var _requestQueue = [];\r\n\r\n    var Request = function(options, onSuccess, onError) {\r\n        this.options = options;\r\n        this.onSuccess = onSuccess;\r\n        this.onError = onError;\r\n        this.status = 0;\r\n    };\r\n\r\n    Request.prototype = {\r\n        constructor: Request,\r\n        key: function() {\r\n            return this.options.key;\r\n        },\r\n        abort: function() {\r\n            if (this.isInProcess()) {\r\n                this.promise.reject();\r\n            }\r\n            this.dequeue();\r\n        },\r\n        execute: function() {\r\n            _ajax(this.options, this.success.bind(this), this.error.bind(this));\r\n            this.status = 1;\r\n        },\r\n        success: function(data) {\r\n            this.dequeue();\r\n            if (this.onSuccess) {\r\n                this.onSuccess(data);\r\n            }\r\n        },\r\n        error: function(data) {\r\n            this.dequeue();\r\n            if (this.onError) {\r\n                this.onError(data);\r\n            }\r\n        },\r\n        isInProcess: function() {\r\n            return this.status === 1;\r\n        },\r\n        dequeue: function() {\r\n            // remove this from the queue and start the next request\r\n            var self = this;\r\n            _requestQueue = _requestQueue.filter(function(x) { return x !== self; });\r\n            if (_requestQueue.length) {\r\n                _requestQueue[0].execute();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Queue up an ajax request. Queue prevents one user from hammering the server.\r\n     * @param {Object} options - Options to use for the ajax request.\r\n     * @param {Function} onSuccess - Function to handle success result.\r\n     * @param {Function} onError - Function to handle error result.\r\n     */\r\n    var ajax = function(options, onSuccess, onError) {\r\n        options.key = options.key || options.url;\r\n        var request = new Request(options, onSuccess, onError);\r\n\r\n        // remove requests from queue that are for this key and aren't already in process\r\n        _requestQueue = _requestQueue.filter(function(x) {\r\n            return x.key() !== options.key || x.isInProcess();\r\n        });\r\n        _requestQueue.push(request);\r\n\r\n        if (_requestQueue.length === 1) {\r\n            // nothing else in the queue, so execute now\r\n            request.execute();\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * Log JS errors to elmah.\r\n     * @param {string} msg - Error message.\r\n     * @param {string} url - Error source URL.\r\n     * @param {number} line - Line # error occurred on\r\n     * @param {number} columnNo - Column # error occurred on\r\n     * @param {string|string[]|null} stack - Stack trace.\r\n     */\r\n    var logError = function(msg, url, lineNo, columnNo, stack) {\r\n        if ($.isNull(msg)) {\r\n            return;\r\n        }\r\n\r\n        var detail = msg + ': at path \\'' + (url || document.location) + '\\'';\r\n        if (!$.isNull(lineNo)) {\r\n            detail += ' at ' + lineNo + ':' + columnNo;\r\n        }\r\n        if (!$.isNull(stack)) {\r\n            detail += '\\n    at ' + ($.isString(stack) ? stack : stack.join('\\n    at '));\r\n        }\r\n\r\n        // save error message to server\r\n        _ajax({ method: 'POST', url: '/Error/LogJavascriptError', data: { message: detail }, block: false }, null, null);\r\n    };\r\n\r\n    /**\r\n     * Deserialize response from ajax request.\r\n     * @param {string} data - String of data to deserialize.\r\n     * @returns {Object} Result object from JSON, or object with a single 'content' property if that fails.\r\n     */\r\n    var _deserialize = function(data) {\r\n        if ($.isNull(data) || data.length === 0) {\r\n            return null;\r\n        }\r\n        try {\r\n            return JSON.parse(data);\r\n        } catch (e) {\r\n            return { content: data };\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Closure to set up the loading splash screen and return the node for it.\r\n     */\r\n    var _loadingDiv = (function() {\r\n        var div = $.get('#loader');\r\n        $.on(div, 'keydown', function(e) {\r\n            if ($.hasClass('#loader', 'd-none')) {\r\n                return;\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            return false;\r\n        });\r\n        return div;\r\n    })();\r\n\r\n    $.ajax = ajax;\r\n    $.logError = logError;\r\n}(this.m, this.$, this.Alertify));\r\n\r\n/**\r\n * Add a application wide error handler to log errors.\r\n * Outside of strict mode to prevent errors.\r\n * @param {string} msg - Error message.\r\n * @param {string} url - Error source URL.\r\n * @param {number} line - Line # error occurred on\r\n * @param {number} columnNo - Column # error occurred on\r\n * @param {Error|null} error - Error object if browser supports it\r\n */\r\nwindow.onerror = function(msg, url, lineNo, columnNo, error) {\r\n    this.$.logError(msg, url, lineNo, columnNo, error && error.stack ? error.stack : null);\r\n};\r\n\r\n/*!\r\n * Resource handling.\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    var _resx = {};\r\n\r\n    /**\r\n     * Get/set i18n resource strings.\r\n     * @param {string|Object} key - Key of the resource to get/set, or an object of resource strings.\r\n     * @param {string} value - Set key to this value if provided\r\n     * @returns {string} Returns the value of key, or null if key is not defined.\r\n     */\r\n    var resx = function(key, value) {\r\n        if (!$.isString(key)) {\r\n            $.extend(_resx, key);\r\n        } else if ($.isNull(value)) {\r\n            if (_resx.hasOwnProperty(key)) {\r\n                return _resx[key];\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            _resx[key] = value;\r\n        }\r\n    };\r\n\r\n    var body = $.get('body');\r\n    if (body && body.hasAttribute('data-resx')) {\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: body.getAttribute('data-resx')\r\n        }, function(data) {\r\n            if (data) {\r\n                _resx = data;\r\n            }\r\n            $.dispatch(document, $.events.resxLoaded);\r\n            $.resxLoaded = true;\r\n        }, function() {\r\n            $.dispatch(document, $.events.resxLoaded);\r\n            $.resxLoaded = true;\r\n        });\r\n    }\r\n\r\n    $.resx = resx;\r\n})(this.$);\r\n\r\n/*!\r\n * Color functions.\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Convert hex string to RGB.\r\n     * @param {string} hex - Hex string.\r\n     * @returns {Object} Object with RGB properties.\r\n     */\r\n    var hex2rgb = function(hex) {\r\n        return { r: parseInt(hex.substr(1, 2), 16), g: parseInt(hex.substr(3, 2), 16), b: parseInt(hex.substr(5, 2), 16) };\r\n    };\r\n\r\n    /**\r\n     * Convert RGB to hex string.\r\n     * @param {Object} color Object with r/g/b properties.\r\n     * @returns {string} hex - Hex string.\r\n     */\r\n    var rgb2hex = function(color) {\r\n        var hex = [\r\n            (color.r * 1).toString(16),\r\n            (color.g * 1).toString(16),\r\n            (color.b * 1).toString(16)\r\n        ];\r\n        return '#' + hex.map(function(x) {\r\n            return ('00' + x.toString()).slice(-2);\r\n        }).join('').toUpperCase();\r\n    };\r\n\r\n    /**\r\n     * Converts an RGB color value to HSL. Conversion formula\r\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n     * Assumes r, g, and b are contained in the set [0, 255] and\r\n     * returns h, s, and l in the set [0, 1].\r\n     * @param {Object} rgb - Object with r, g, and b properties.\r\n     * @return {Number[]} The HSL representation.\r\n     */\r\n    var rgb2hsl = function(rgb) {\r\n        var r = rgb.r, g = rgb.g, b = rgb.b;\r\n        r /= 255, g /= 255, b /= 255;\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if (max === min) {\r\n            h = s = 0; // achromatic\r\n        } else {\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch (max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        return [h, s, l];\r\n    };\r\n\r\n    $.colors = {\r\n        hex2rgb: hex2rgb,\r\n        rgb2hex: rgb2hex,\r\n        rgb2hsl: rgb2hsl,\r\n    };\r\n})(this.$);\r\n\r\n/*!\r\n * accounting.js v0.4.2\r\n * Copyright 2014 Open Exchange Rates\r\n *\r\n * Freely distributable under the MIT license.\r\n * Portions of accounting.js are inspired or borrowed from underscore.js\r\n *\r\n * Full details and documentation:\r\n * http://openexchangerates.github.io/accounting.js/\r\n */\r\n(function($) {\r\n    var lib = {\r\n        settings: {\r\n            currency: {\r\n                symbol: '$',\t\t// default currency symbol is '$'\r\n                format: '%s%v',\t    // controls output: %s = symbol, %v = value (can be object, see docs)\r\n                decimal: '.',\t\t// decimal point separator\r\n                thousand: ',',\t\t// thousands separator\r\n                precision: 2,\t\t// decimal places\r\n                grouping: 3\t\t    // digit grouping (not implemented yet)\r\n            },\r\n            number: {\r\n                precision: 0,\t\t// default precision on numbers is 0\r\n                grouping: 3,\t\t// digit grouping (not implemented yet)\r\n                thousand: ',',\r\n                decimal: '.'\r\n            }\r\n        }\r\n    };\r\n\r\n    var tokens = {\r\n        symbol: /\\{s:(.?)\\}/i,\r\n        decimal: /\\[d:(.?)\\]/i,\r\n        thousand: /\\[t:(.?)\\]/i,\r\n        precision: /\\[p:(.?)\\]/i,\r\n        value: /\\{#+\\}/i\r\n    };\r\n\r\n    /**\r\n     * Check and normalise the value of precision (must be positive integer).\r\n     * @param {number} val - Value of precision to validate\r\n     * @returns {number} Positive integer value.\r\n     */\r\n    var checkPrecision = function(val) {\r\n        val = Math.round(Math.abs(val));\r\n        return isNaN(val) ? lib.settings.number.precision : val;\r\n    };\r\n\r\n    /**\r\n     * Parses a format string or object and returns format obj for use in rendering.\r\n     * @param {string|Object} format - Default (positive) format, or object containing `pos` (required), `neg` and `zero` values (or a function returning either a string or object)\r\n     * @returns {Object} Format object with pos, neg, and zero properties.\r\n     */\r\n    var checkCurrencyFormat = function(format) {\r\n        // Format can be a string, in which case `value` (\"%v\") must be present:\r\n        if ($.isString(format) && format.match('%v')) {\r\n            // Create and return positive, negative and zero formats:\r\n            return {\r\n                pos: format,\r\n                neg: format.replace('-', '').replace('%v', '-%v'),\r\n                zero: format\r\n            };\r\n        }\r\n        if (!format || !format.pos || !format.pos.match('%v')) {\r\n            // If no format, or object is missing valid positive value, use default.\r\n            // If default is a string, casts it to an object for faster checking next time.\r\n            var x = lib.settings.currency.format;\r\n            if ($.isString(x)) {\r\n                lib.settings.currency.format = x = { pos: x, neg: x.replace('%v', '-%v'), zero: x };\r\n            }\r\n            return x;\r\n        }\r\n        return format;\r\n    };\r\n\r\n    /**\r\n     * Takes a format string and parses it into an object.\r\n     * @param {string} format - Format string`\r\n     * @returns {Object} Object with format settings.\r\n     */\r\n    var parseFormat = function(format) {\r\n        if (!$.isString(format)) {\r\n            return format || {};\r\n        }\r\n\r\n        var res = {}, x;\r\n        var newFormat = format;\r\n        if ((x = tokens.symbol.exec(newFormat)) !== null && x.length > 1) {\r\n            res.symbol = x[1];\r\n            newFormat = newFormat.replace(x[0], '%s');\r\n        }\r\n        if ((x = tokens.decimal.exec(newFormat)) !== null && x.length > 1) {\r\n            res.decimal = x[1];\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.thousand.exec(newFormat)) !== null && x.length > 1) {\r\n            res.thousand = x[1];\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.precision.exec(newFormat)) !== null && x.length > 1) {\r\n            res.precision = x[1] * 1;\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.value.exec(newFormat)) !== null) {\r\n            res.format = newFormat.replace(x[0], '%v');\r\n        } else {\r\n            res.format = newFormat + ' %v';\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Takes a string/array of strings, removes all formatting/cruft and returns the raw float value.\r\n     * @param {string|number} value - Value to remove formatting from.\r\n     * @returns {number} Number with no formatting.\r\n     */\r\n    var unformat = function(value) {\r\n        value = value || 0;\r\n        if ($.isNumber(value)) {\r\n            return value;\r\n        }\r\n\r\n        // Build regex to strip out everything except digits, decimal point and minus sign:\r\n        var regex = new RegExp('[^0-9-' + lib.settings.number.decimal + ']', ['g']);\r\n        var unformatted = parseFloat(('' + value)\r\n            .replace(/\\((.*)\\)/, '-$1') // replace bracketed values with negatives\r\n            .replace(regex, '')         // strip out any cruft\r\n            .replace(lib.settings.number.decimal, '.')      // make sure decimal point is standard\r\n        );\r\n\r\n        // This will fail silently which may cause trouble, let's wait and see:\r\n        return !isNaN(unformatted) ? unformatted : 0;\r\n    };\r\n\r\n    /**\r\n     * Implementation of toFixed() that treats floats more like decimals.\r\n     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === \"0.61\") that present problems for accounting- and finance-related software.\r\n     * @param {number|string} value - Number to convert\r\n     * @param {number} precision - Number of digits after the decimal.\r\n     * @returns {number} Formatted value.\r\n     */\r\n    var toFixed = function(value, precision) {\r\n        precision = checkPrecision(precision);\r\n        var power = Math.pow(10, precision);\r\n        // Multiply up by precision, round accurately, then divide and use native toFixed():\r\n        return (Math.round(unformat(value) * power) / power).toFixed(precision);\r\n    };\r\n\r\n    /**\r\n     * Format a number, with comma-separated thousands and custom precision/decimal places.\r\n     * @param {number} number - Number to format.\r\n     * @param {string} format - Tokenized string format.\r\n     * @returns {string} Formatted number.\r\n     */\r\n    var formatNumber = function(number, format) {\r\n        number = unformat(number);\r\n        var opts = $.extend({}, lib.settings.number, parseFormat(format));\r\n        var usePrecision = checkPrecision(opts.precision);\r\n        var base = parseInt(toFixed(Math.abs(number || 0), usePrecision), 10) + '';\r\n        var mod = base.length > 3 ? base.length % 3 : 0;\r\n        return (number < 0 ? '-' : '') + (mod ? base.substr(0, mod) + opts.thousand : '') + base.substr(mod).replace(/(\\d{3})(?=\\d)/g, '$1' + opts.thousand) +\r\n            (usePrecision ? opts.decimal + toFixed(Math.abs(number), usePrecision).split('.')[1] : '');\r\n    };\r\n\r\n    /**\r\n     * Format a number as currency, with comma-separated thousands and custom precision/decimal places.\r\n     * @param {number} number - Number to format.\r\n     * @param {string} format - Tokenized string format.\r\n     * @returns {string} Formatted currency.\r\n     */\r\n    var formatMoney = function(number, format) {\r\n        number = unformat(number);\r\n        var opts = $.extend({}, lib.settings.currency, parseFormat(format));\r\n        var formats = checkCurrencyFormat(opts.format);\r\n        return (number > 0 ? formats.pos : number < 0 ? formats.neg : formats.zero)\r\n            .replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(number), format));\r\n    };\r\n\r\n    $.accounting = {\r\n        formatMoney: formatMoney,\r\n        formatNumber: formatNumber,\r\n        parseFormat: parseFormat,\r\n        unformat: unformat\r\n    };\r\n}(this.$));\r\n\r\n/*!\r\n * Lightweight date library\r\n * https://github.com/taylorhakes/fecha\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    var fecha = {};\r\n    var token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\r\n    var twoDigits = /\\d\\d?/;\r\n    var threeDigits = /\\d{3}/;\r\n    var fourDigits = /\\d{4}/;\r\n    var word = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\r\n    var literal = /\\[([^]*?)\\]/gm;\r\n    var noop = function() { };\r\n\r\n    /**\r\n     * Abbreviate a string.\r\n     * @param {string[]} arr - Array of strings to shorten.\r\n     * @param {number} sLen - Max length of new strings.\r\n     * @returns {string[]} New array of strings.\r\n     */\r\n    function shorten(arr, sLen) {\r\n        var newArr = [];\r\n        for (var i = 0, len = arr.length; i < len; i++) {\r\n            newArr.push(arr[i].substr(0, sLen));\r\n        }\r\n        return newArr;\r\n    }\r\n\r\n    /**\r\n     * Update months names based on i18n resource.\r\n     * @param {string[]} arrName - Array of month names.\r\n     * @returns {string[]} Updated array of month names.\r\n     */\r\n    function monthUpdate(arrName) {\r\n        return function(d, v, i18n) {\r\n            var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());\r\n            if (~index) {\r\n                d.month = index;\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Left pad a number to length len using zeros.\r\n     * @param {number|string} val - Value to pad.\r\n     * @param {number} len - Length to pad number to.\r\n     * @returns {string} Zero padded string.\r\n     */\r\n    function pad(val, len) {\r\n        val = String(val);\r\n        len = len || 2;\r\n        while (val.length < len) {\r\n            val = '0' + val;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    var monthNamesShort = shorten(monthNames, 3);\r\n    var dayNamesShort = shorten(dayNames, 3);\r\n    fecha.i18n = {\r\n        dayNamesShort: dayNamesShort,\r\n        dayNames: dayNames,\r\n        monthNamesShort: monthNamesShort,\r\n        monthNames: monthNames,\r\n        amPm: ['am', 'pm'],\r\n        DoFn: function DoFn(D) {\r\n            return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];\r\n        }\r\n    };\r\n\r\n    var formatFlags = {\r\n        D: function(dateObj) {\r\n            return dateObj.getDate();\r\n        },\r\n        DD: function(dateObj) {\r\n            return pad(dateObj.getDate());\r\n        },\r\n        Do: function(dateObj, i18n) {\r\n            return i18n.DoFn(dateObj.getDate());\r\n        },\r\n        d: function(dateObj) {\r\n            return dateObj.getDay();\r\n        },\r\n        dd: function(dateObj) {\r\n            return pad(dateObj.getDay());\r\n        },\r\n        ddd: function(dateObj, i18n) {\r\n            return i18n.dayNamesShort[dateObj.getDay()];\r\n        },\r\n        dddd: function(dateObj, i18n) {\r\n            return i18n.dayNames[dateObj.getDay()];\r\n        },\r\n        M: function(dateObj) {\r\n            return dateObj.getMonth() + 1;\r\n        },\r\n        MM: function(dateObj) {\r\n            return pad(dateObj.getMonth() + 1);\r\n        },\r\n        MMM: function(dateObj, i18n) {\r\n            return i18n.monthNamesShort[dateObj.getMonth()];\r\n        },\r\n        MMMM: function(dateObj, i18n) {\r\n            return i18n.monthNames[dateObj.getMonth()];\r\n        },\r\n        YY: function(dateObj) {\r\n            return String(dateObj.getFullYear()).substr(2);\r\n        },\r\n        YYYY: function(dateObj) {\r\n            return dateObj.getFullYear();\r\n        },\r\n        h: function(dateObj) {\r\n            return dateObj.getHours() % 12 || 12;\r\n        },\r\n        hh: function(dateObj) {\r\n            return pad(dateObj.getHours() % 12 || 12);\r\n        },\r\n        H: function(dateObj) {\r\n            return dateObj.getHours();\r\n        },\r\n        HH: function(dateObj) {\r\n            return pad(dateObj.getHours());\r\n        },\r\n        m: function(dateObj) {\r\n            return dateObj.getMinutes();\r\n        },\r\n        mm: function(dateObj) {\r\n            return pad(dateObj.getMinutes());\r\n        },\r\n        s: function(dateObj) {\r\n            return dateObj.getSeconds();\r\n        },\r\n        ss: function(dateObj) {\r\n            return pad(dateObj.getSeconds());\r\n        },\r\n        S: function(dateObj) {\r\n            return Math.round(dateObj.getMilliseconds() / 100);\r\n        },\r\n        SS: function(dateObj) {\r\n            return pad(Math.round(dateObj.getMilliseconds() / 10), 2);\r\n        },\r\n        SSS: function(dateObj) {\r\n            return pad(dateObj.getMilliseconds(), 3);\r\n        },\r\n        a: function(dateObj, i18n) {\r\n            return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];\r\n        },\r\n        A: function(dateObj, i18n) {\r\n            return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();\r\n        },\r\n        ZZ: function(dateObj) {\r\n            var o = dateObj.getTimezoneOffset();\r\n            return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);\r\n        },\r\n        l: function(dateObj) {\r\n            var onejan = new Date(dateObj.getFullYear(), 0, 1);\r\n            return Math.ceil((((dateObj - onejan) / 86400000) + onejan.getDay() + 1) / 7);\r\n        },\r\n        ll: function(dateObj) {\r\n            var onejan = new Date(dateObj.getFullYear(), 0, 1);\r\n            return pad(Math.ceil((((dateObj - onejan) / 86400000) + onejan.getDay() + 1) / 7), 2);\r\n        },\r\n        q: function(dateObj) {\r\n            return (Math.ceil(dateObj.getMonth() + 1 / 3));\r\n        }\r\n    };\r\n\r\n    var parseFlags = {\r\n        D: [twoDigits, function(d, v) {\r\n            d.day = v;\r\n        }],\r\n        Do: [new RegExp(twoDigits.source + word.source), function(d, v) {\r\n            d.day = parseInt(v, 10);\r\n        }],\r\n        M: [twoDigits, function(d, v) {\r\n            d.month = v - 1;\r\n        }],\r\n        YY: [twoDigits, function(d, v) {\r\n            var da = new Date(), cent = +('' + da.getFullYear()).substr(0, 2);\r\n            d.year = '' + (v > 68 ? cent - 1 : cent) + v;\r\n        }],\r\n        h: [twoDigits, function(d, v) {\r\n            d.hour = v;\r\n        }],\r\n        m: [twoDigits, function(d, v) {\r\n            d.minute = v;\r\n        }],\r\n        s: [twoDigits, function(d, v) {\r\n            d.second = v;\r\n        }],\r\n        YYYY: [fourDigits, function(d, v) {\r\n            d.year = v;\r\n        }],\r\n        S: [/\\d/, function(d, v) {\r\n            d.millisecond = v * 100;\r\n        }],\r\n        SS: [/\\d{2}/, function(d, v) {\r\n            d.millisecond = v * 10;\r\n        }],\r\n        SSS: [threeDigits, function(d, v) {\r\n            d.millisecond = v;\r\n        }],\r\n        d: [twoDigits, noop],\r\n        ddd: [word, noop],\r\n        MMM: [word, monthUpdate('monthNamesShort')],\r\n        MMMM: [word, monthUpdate('monthNames')],\r\n        a: [word, function(d, v, i18n) {\r\n            var val = v.toLowerCase();\r\n            if (val === i18n.amPm[0]) {\r\n                d.isPm = false;\r\n            } else if (val === i18n.amPm[1]) {\r\n                d.isPm = true;\r\n            }\r\n        }],\r\n        ZZ: [/[+-]\\d\\d:?\\d\\d/, function(d, v) {\r\n            var parts = (v + '').match(/([+-]|\\d\\d)/gi), minutes;\r\n\r\n            if (parts) {\r\n                minutes = +(parts[1] * 60) + parseInt(parts[2], 10);\r\n                d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;\r\n            }\r\n        }]\r\n    };\r\n    parseFlags.dd = parseFlags.d;\r\n    parseFlags.dddd = parseFlags.ddd;\r\n    parseFlags.DD = parseFlags.D;\r\n    parseFlags.mm = parseFlags.m;\r\n    parseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;\r\n    parseFlags.MM = parseFlags.M;\r\n    parseFlags.ss = parseFlags.s;\r\n    parseFlags.A = parseFlags.a;\r\n\r\n    // Some common format strings\r\n    fecha.masks = {\r\n        'default': 'ddd MMM DD YYYY HH:mm:ss',\r\n        shortDate: 'M/D/YY',\r\n        mediumDate: 'MMM D, YYYY',\r\n        longDate: 'MMMM D, YYYY',\r\n        fullDate: 'dddd, MMMM D, YYYY',\r\n        shortTime: 'HH:mm',\r\n        mediumTime: 'HH:mm:ss',\r\n        longTime: 'HH:mm:ss.SSS'\r\n    };\r\n\r\n    /***\r\n     * Format a date.\r\n     * @method format\r\n     * @param {Date|number} dateObj - JS date to format.\r\n     * @param {string} mask - New format for the date, i.e. 'mm-dd-yy' or 'shortDate'.\r\n     * @param {Object} i18nSettings - i18n resources.\r\n     * @return {string} Formatted date string.\r\n     */\r\n    fecha.format = function(dateObj, mask, i18nSettings) {\r\n        var i18n = i18nSettings || fecha.i18n;\r\n\r\n        if (typeof dateObj === 'number') {\r\n            dateObj = new Date(dateObj);\r\n        }\r\n\r\n        if (!dateObj.getMonth || isNaN(dateObj.getTime())) {\r\n            return '';\r\n            // throw new Error('Invalid Date in fecha.format');\r\n        }\r\n\r\n        mask = fecha.masks[mask] || mask || fecha.masks['default'];\r\n\r\n        var literals = [];\r\n\r\n        // Make literals inactive by replacing them with ??\r\n        mask = mask.replace(literal, function($0, $1) {\r\n            literals.push($1);\r\n            return '??';\r\n        });\r\n        // Apply formatting rules\r\n        mask = mask.replace(token, function($0) {\r\n            return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);\r\n        });\r\n        // Inline literal values back into the formatted value\r\n        return mask.replace(/\\?\\?/g, function() {\r\n            return literals.shift();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Parse a date string into an object.\r\n     * @method parse\r\n     * @param {string} dateStr - Date string\r\n     * @param {string} format - Date parse format\r\n     * @param {Object} i18nSettings - i18n resources.\r\n     * @returns {Date|boolean} JS date object or false.\r\n     */\r\n    fecha.parse = function(dateStr, format, i18nSettings) {\r\n        var i18n = i18nSettings || fecha.i18n;\r\n\r\n        if (typeof format !== 'string') {\r\n            throw new Error('Invalid format in fecha.parse');\r\n        }\r\n\r\n        format = fecha.masks[format] || format;\r\n\r\n        // Avoid regular expression denial of service, fail early for really long strings\r\n        // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\r\n        if (!dateStr || dateStr.length > 1000) {\r\n            return false;\r\n        }\r\n\r\n        var isValid = true;\r\n        var dateInfo = {};\r\n        var isUtc = false;\r\n\r\n        // Special handler for UTC. String will end in a Z but with no offset specified (ie '-0400')\r\n        if (dateStr.indexOf('Z') === dateStr.length - 1 && dateStr.indexOf('ZZ') === -1) {\r\n            dateStr = dateStr.substr(0, dateStr.length - 2);\r\n            dateInfo.timezoneOffset = new Date().getTimezoneOffset();\r\n            isUtc = true;\r\n        }\r\n\r\n        format.replace(token, function($0) {\r\n            if (parseFlags[$0]) {\r\n                var info = parseFlags[$0];\r\n                var index = dateStr.search(info[0]);\r\n                if (!~index) {\r\n                    isValid = false;\r\n                } else {\r\n                    dateStr.replace(info[0], function(result) {\r\n                        info[1](dateInfo, result, i18n);\r\n                        dateStr = dateStr.substr(index + result.length);\r\n                        return result;\r\n                    });\r\n                }\r\n            }\r\n\r\n            return parseFlags[$0] ? '' : $0.slice(1, $0.length - 1);\r\n        });\r\n\r\n        if (!isValid) {\r\n            return false;\r\n        }\r\n\r\n        var today = new Date();\r\n        if (dateInfo.isPm === true && typeof dateInfo.hour !== 'undefined' && +dateInfo.hour !== 12) {\r\n            dateInfo.hour = +dateInfo.hour + 12;\r\n        } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {\r\n            dateInfo.hour = 0;\r\n        }\r\n\r\n        var date;\r\n        if (typeof dateInfo.timezoneOffset !== 'undefined') {\r\n            if (!isUtc) {\r\n                dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;\r\n            }\r\n            date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\r\n                dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));\r\n        } else {\r\n            date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\r\n                dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);\r\n        }\r\n        return date;\r\n    };\r\n\r\n    $.fecha = fecha;\r\n})(this.$);\r\n","/*!\r\n * Autocomplete mithril component.\r\n */\r\n(function(root, factory) {\r\n    root.Autocomplete = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    var _keys = {\r\n        DOWN: 40,\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        TAB: 9,\r\n        UP: 38\r\n    };\r\n\r\n    /**\r\n     * Escape a string for use with a regex.\r\n     * @param {string} s - String to escape.\r\n     * @returns Escaped string.\r\n     */\r\n    var regExpEscape = function(s) {\r\n        return s.replace(/[-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n    };\r\n\r\n    var Autocomplete = {\r\n        /**\r\n         * Initialize the component.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            this.opts = {\r\n                value: attrs.value,\r\n                valueChanged: false,\r\n                name: attrs.name,\r\n                placeholder: attrs.placeholder,\r\n                active: false,\r\n                required: attrs.required,\r\n                disabled: attrs.disabled,\r\n                onSelect: attrs.onSelect,\r\n                onCancel: attrs.onCancel,\r\n                class: attrs.class,\r\n                list: attrs.list || [],\r\n                filteredList: [],\r\n                container: null,\r\n                selectedIndex: -1\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Update the opts in case the component name is changed.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         * @param vnode\r\n         */\r\n        onupdate: function(vnode) {\r\n            if (vnode.attrs) {\r\n                this.opts.name = vnode.attrs.name;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Grab the DOM containing node after it is created.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oncreate: function(vnode) {\r\n            this.opts.container = vnode.dom;\r\n            this.opts.container.autocomplete = this;\r\n        },\r\n\r\n        /**\r\n         * Update the list of items.\r\n         * @param {string[]} list - Array of strings to show.\r\n         */\r\n        setList: function(list) {\r\n            this.close();\r\n            this.opts.list = list;\r\n            this.opts.filteredList = [];\r\n        },\r\n\r\n        /**\r\n         * Check special keys and respond accordingly.\r\n         * @param {Event} e - Keypress event.\r\n         */\r\n        onKeyDown: function(e) {\r\n            if (this.opts.disabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.opts.active) {\r\n                if (e.keyCode === _keys.ENTER) {\r\n                    var selected = this.opts.filteredList[this.opts.selectedIndex];\r\n                    if (selected) {\r\n                        this.selectItem(selected);\r\n                    } else {\r\n                        this.cancel(true);\r\n                    }\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                } else if (e.keyCode === _keys.ESC) {\r\n                    this.cancel(true);\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                } else if (e.keyCode === _keys.DOWN) {\r\n                    this.selectIndex(Math.min(this.opts.selectedIndex + 1, this.opts.filteredList.length - 1));\r\n                } else if (e.keyCode === _keys.UP) {\r\n                    this.selectIndex(Math.max(this.opts.selectedIndex - 1, 0));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handle the input's value changing and show the list.\r\n         * @param {Event} e - Event that triggered the change.\r\n         */\r\n        onInput: function(e) {\r\n            if (this.opts.value !== e.target.value) {\r\n                this.opts.valueChanged = true;\r\n                this.opts.value = e.target.value;\r\n            }\r\n            if (this.opts.value.length > 1) {\r\n                this.opts.active = true;\r\n                this.opts.selectedIndex = 0;\r\n                var val = this.opts.value.toLowerCase();\r\n                this.opts.filteredList = ($.isFunction(this.opts.list) ? this.opts.list() : this.opts.list).filter(function(x) {\r\n                    return x.toLowerCase().indexOf(val) > -1;\r\n                });\r\n            } else {\r\n                this.opts.filteredList = [];\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Close autocomplete dropdown on lost focus.\r\n         */\r\n        onBlur: function() {\r\n            if (this.opts.active || this.opts.valueChanged) {\r\n                this.cancel(false);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select an item from the list by index.\r\n         * @param {number} index - Filtered list item index.\r\n         */\r\n        selectIndex: function(index) {\r\n            this.opts.selectedIndex = index;\r\n            var ul = $.get('ul', this.opts.container);\r\n            if (ul && ul.children[index]) {\r\n                ul.children[index].scrollIntoView();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select an item by text value.\r\n         * @param {string} item - Text to select.\r\n         * @param {Event} e - Event that triggered this.\r\n         */\r\n        selectItem: function(item, e, focus) {\r\n            if ($.isFunction(this.opts.onSelect)) {\r\n                this.opts.onSelect.call(null, item);\r\n            }\r\n            this.opts.value = item;\r\n            this.close($.isNull(focus) ? true : focus);\r\n            if (e && e.preventDefault) {\r\n                e.preventDefault();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Discard value and close the autocomplete.\r\n         * @param {bool} focus - Focus on the original control after closing if true.\r\n         */\r\n        cancel: function(focus) {\r\n            if (this.opts.valueChanged) {\r\n                this.opts.value = '';\r\n            }\r\n            if ($.isFunction(this.opts.onCancel)) {\r\n                this.opts.onCancel();\r\n            }\r\n            this.close(focus);\r\n        },\r\n\r\n        /**\r\n         * Set value and close the autocomplete.\r\n         * @param {bool} focus - Focus on the original control after closing if true.\r\n         */\r\n        close: function(focus) {\r\n            this.opts.active = false;\r\n            this.opts.selectedIndex = -1;\r\n            this.opts.valueChanged = false;\r\n            if (focus) {\r\n                var input = $.get('input', this.opts.container);\r\n                if (input) {\r\n                    input.focus();\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Highlight val inside item.\r\n         * @param {string} text - Text to highlight in.\r\n         * @param {string} val - Substring to highlight.\r\n         * @returns Marked up string.\r\n         */\r\n        highlightItem: function(text, val) {\r\n            return val === '' ? text : text.replace(RegExp(regExpEscape(val.trim()), 'gi'), '<mark>$&</mark>');\r\n        },\r\n\r\n        /**\r\n         * Create HTML to display component.\r\n         * @returns {Object} Mithril vnode\r\n         */\r\n        view: function() {\r\n            var self = this;\r\n            return m('.mithril-autocomplete-container.autocomplete', { class: self.opts.active ? 'autocomplete-active' : '' },\r\n                m('input.form-input', {\r\n                    type: 'text',\r\n                    name: self.opts.name,\r\n                    placeholder: self.opts.placeholder,\r\n                    class: (self.opts.class || '') + (self.opts.required && !$.hasValue(self.opts.value) ? ' mform-control-error' : ''),\r\n                    autocomplete: 'off',\r\n                    'aria-autocomplete': 'list',\r\n                    onkeydown: self.onKeyDown.bind(self),\r\n                    oninput: self.onInput.bind(self),\r\n                    value: self.opts.value,\r\n                    onblur: self.onBlur.bind(self)\r\n                }),\r\n                self.opts.active && m('ul', self.opts.filteredList.map(function(x, index) {\r\n                    return m('li', {\r\n                        'aria-selected': self.opts.selectedIndex == index,\r\n                        onmousedown: self.selectItem.bind(self, x)\r\n                    }, m.trust(self.highlightItem(x, self.opts.value)));\r\n                }))\r\n            );\r\n        }\r\n    };\r\n\r\n    return Autocomplete;\r\n});\r\n","/*!\r\n * Chart.js\r\n * http://chartjs.org/\r\n * Version: 2.7.1\r\n *\r\n * Copyright 2018 Chart.js Contributors\r\n * Released under the MIT license\r\n * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md\r\n */\r\n(function(f) { if (typeof exports === \"object\" && typeof module !== \"undefined\") { module.exports = f() } else if (typeof define === \"function\" && define.amd) { define([], f) } else { var g; if (typeof window !== \"undefined\") { g = window } else if (typeof global !== \"undefined\") { g = global } else if (typeof self !== \"undefined\") { g = self } else { g = this } g.Chart = f() } })(function() {\r\n    var define, module, exports; return (function e(t, n, r) { function s(o, u) { if (!n[o]) { if (!t[o]) { var a = typeof require == \"function\" && require; if (!u && a) return a(o, !0); if (i) return i(o, !0); var f = new Error(\"Cannot find module '\" + o + \"'\"); throw f.code = \"MODULE_NOT_FOUND\", f } var l = n[o] = { exports: {} }; t[o][0].call(l.exports, function(e) { var n = t[o][1][e]; return s(n ? n : e) }, l, l.exports, e, t, n, r) } return n[o].exports } var i = typeof require == \"function\" && require; for (var o = 0; o < r.length; o++)s(r[o]); return s })({\r\n        1: [function(require, module, exports) {\r\n            /* MIT license */\r\n            var colorNames = require(5);\r\n\r\n            module.exports = {\r\n                getRgba: getRgba,\r\n                getHsla: getHsla,\r\n                getRgb: getRgb,\r\n                getHsl: getHsl,\r\n                getHwb: getHwb,\r\n                getAlpha: getAlpha,\r\n\r\n                hexString: hexString,\r\n                rgbString: rgbString,\r\n                rgbaString: rgbaString,\r\n                percentString: percentString,\r\n                percentaString: percentaString,\r\n                hslString: hslString,\r\n                hslaString: hslaString,\r\n                hwbString: hwbString,\r\n                keyword: keyword\r\n            }\r\n\r\n            function getRgba(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var abbr = /^#([a-fA-F0-9]{3})$/i,\r\n                    hex = /^#([a-fA-F0-9]{6})$/i,\r\n                    rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n                    per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n                    keyword = /(\\w+)/;\r\n\r\n                var rgb = [0, 0, 0],\r\n                    a = 1,\r\n                    match = string.match(abbr);\r\n                if (match) {\r\n                    match = match[1];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match[i] + match[i], 16);\r\n                    }\r\n                }\r\n                else if (match = string.match(hex)) {\r\n                    match = match[1];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n                    }\r\n                }\r\n                else if (match = string.match(rgba)) {\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match[i + 1]);\r\n                    }\r\n                    a = parseFloat(match[4]);\r\n                }\r\n                else if (match = string.match(per)) {\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n                    }\r\n                    a = parseFloat(match[4]);\r\n                }\r\n                else if (match = string.match(keyword)) {\r\n                    if (match[1] == \"transparent\") {\r\n                        return [0, 0, 0, 0];\r\n                    }\r\n                    rgb = colorNames[match[1]];\r\n                    if (!rgb) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                for (var i = 0; i < rgb.length; i++) {\r\n                    rgb[i] = scale(rgb[i], 0, 255);\r\n                }\r\n                if (!a && a != 0) {\r\n                    a = 1;\r\n                }\r\n                else {\r\n                    a = scale(a, 0, 1);\r\n                }\r\n                rgb[3] = a;\r\n                return rgb;\r\n            }\r\n\r\n            function getHsla(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n                var match = string.match(hsl);\r\n                if (match) {\r\n                    var alpha = parseFloat(match[4]);\r\n                    var h = scale(parseInt(match[1]), 0, 360),\r\n                        s = scale(parseFloat(match[2]), 0, 100),\r\n                        l = scale(parseFloat(match[3]), 0, 100),\r\n                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n                    return [h, s, l, a];\r\n                }\r\n            }\r\n\r\n            function getHwb(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n                var match = string.match(hwb);\r\n                if (match) {\r\n                    var alpha = parseFloat(match[4]);\r\n                    var h = scale(parseInt(match[1]), 0, 360),\r\n                        w = scale(parseFloat(match[2]), 0, 100),\r\n                        b = scale(parseFloat(match[3]), 0, 100),\r\n                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n                    return [h, w, b, a];\r\n                }\r\n            }\r\n\r\n            function getRgb(string) {\r\n                var rgba = getRgba(string);\r\n                return rgba && rgba.slice(0, 3);\r\n            }\r\n\r\n            function getHsl(string) {\r\n                var hsla = getHsla(string);\r\n                return hsla && hsla.slice(0, 3);\r\n            }\r\n\r\n            function getAlpha(string) {\r\n                var vals = getRgba(string);\r\n                if (vals) {\r\n                    return vals[3];\r\n                }\r\n                else if (vals = getHsla(string)) {\r\n                    return vals[3];\r\n                }\r\n                else if (vals = getHwb(string)) {\r\n                    return vals[3];\r\n                }\r\n            }\r\n\r\n            // generators\r\n            function hexString(rgb) {\r\n                return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n                    + hexDouble(rgb[2]);\r\n            }\r\n\r\n            function rgbString(rgba, alpha) {\r\n                if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n                    return rgbaString(rgba, alpha);\r\n                }\r\n                return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n            }\r\n\r\n            function rgbaString(rgba, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n                }\r\n                return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n                    + \", \" + alpha + \")\";\r\n            }\r\n\r\n            function percentString(rgba, alpha) {\r\n                if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n                    return percentaString(rgba, alpha);\r\n                }\r\n                var r = Math.round(rgba[0] / 255 * 100),\r\n                    g = Math.round(rgba[1] / 255 * 100),\r\n                    b = Math.round(rgba[2] / 255 * 100);\r\n\r\n                return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n            }\r\n\r\n            function percentaString(rgba, alpha) {\r\n                var r = Math.round(rgba[0] / 255 * 100),\r\n                    g = Math.round(rgba[1] / 255 * 100),\r\n                    b = Math.round(rgba[2] / 255 * 100);\r\n                return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n            }\r\n\r\n            function hslString(hsla, alpha) {\r\n                if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n                    return hslaString(hsla, alpha);\r\n                }\r\n                return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n            }\r\n\r\n            function hslaString(hsla, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n                }\r\n                return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n                    + alpha + \")\";\r\n            }\r\n\r\n            // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n            // (hwb have alpha optional & 1 is default value)\r\n            function hwbString(hwb, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n                }\r\n                return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n                    + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n            }\r\n\r\n            function keyword(rgb) {\r\n                return reverseNames[rgb.slice(0, 3)];\r\n            }\r\n\r\n            // helpers\r\n            function scale(num, min, max) {\r\n                return Math.min(Math.max(min, num), max);\r\n            }\r\n\r\n            function hexDouble(num) {\r\n                var str = num.toString(16).toUpperCase();\r\n                return (str.length < 2) ? \"0\" + str : str;\r\n            }\r\n\r\n            //create a list of reverse color names\r\n            var reverseNames = {};\r\n            for (var name in colorNames) {\r\n                reverseNames[colorNames[name]] = name;\r\n            }\r\n        }, { \"5\": 5 }], 2: [function(require, module, exports) {\r\n            /* MIT license */\r\n            var convert = require(4);\r\n            var string = require(1);\r\n\r\n            var Color = function(obj) {\r\n                if (obj instanceof Color) {\r\n                    return obj;\r\n                }\r\n                if (!(this instanceof Color)) {\r\n                    return new Color(obj);\r\n                }\r\n\r\n                this.valid = false;\r\n                this.values = {\r\n                    rgb: [0, 0, 0],\r\n                    hsl: [0, 0, 0],\r\n                    hsv: [0, 0, 0],\r\n                    hwb: [0, 0, 0],\r\n                    cmyk: [0, 0, 0, 0],\r\n                    alpha: 1\r\n                };\r\n\r\n                // parse Color() argument\r\n                var vals;\r\n                if (typeof obj === 'string') {\r\n                    vals = string.getRgba(obj);\r\n                    if (vals) {\r\n                        this.setValues('rgb', vals);\r\n                    } else if (vals = string.getHsla(obj)) {\r\n                        this.setValues('hsl', vals);\r\n                    } else if (vals = string.getHwb(obj)) {\r\n                        this.setValues('hwb', vals);\r\n                    }\r\n                } else if (typeof obj === 'object') {\r\n                    vals = obj;\r\n                    if (vals.r !== undefined || vals.red !== undefined) {\r\n                        this.setValues('rgb', vals);\r\n                    } else if (vals.l !== undefined || vals.lightness !== undefined) {\r\n                        this.setValues('hsl', vals);\r\n                    } else if (vals.v !== undefined || vals.value !== undefined) {\r\n                        this.setValues('hsv', vals);\r\n                    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\r\n                        this.setValues('hwb', vals);\r\n                    } else if (vals.c !== undefined || vals.cyan !== undefined) {\r\n                        this.setValues('cmyk', vals);\r\n                    }\r\n                }\r\n            };\r\n\r\n            Color.prototype = {\r\n                isValid: function() {\r\n                    return this.valid;\r\n                },\r\n                rgb: function() {\r\n                    return this.setSpace('rgb', arguments);\r\n                },\r\n                hsl: function() {\r\n                    return this.setSpace('hsl', arguments);\r\n                },\r\n                hsv: function() {\r\n                    return this.setSpace('hsv', arguments);\r\n                },\r\n                hwb: function() {\r\n                    return this.setSpace('hwb', arguments);\r\n                },\r\n                cmyk: function() {\r\n                    return this.setSpace('cmyk', arguments);\r\n                },\r\n\r\n                rgbArray: function() {\r\n                    return this.values.rgb;\r\n                },\r\n                hslArray: function() {\r\n                    return this.values.hsl;\r\n                },\r\n                hsvArray: function() {\r\n                    return this.values.hsv;\r\n                },\r\n                hwbArray: function() {\r\n                    var values = this.values;\r\n                    if (values.alpha !== 1) {\r\n                        return values.hwb.concat([values.alpha]);\r\n                    }\r\n                    return values.hwb;\r\n                },\r\n                cmykArray: function() {\r\n                    return this.values.cmyk;\r\n                },\r\n                rgbaArray: function() {\r\n                    var values = this.values;\r\n                    return values.rgb.concat([values.alpha]);\r\n                },\r\n                hslaArray: function() {\r\n                    var values = this.values;\r\n                    return values.hsl.concat([values.alpha]);\r\n                },\r\n                alpha: function(val) {\r\n                    if (val === undefined) {\r\n                        return this.values.alpha;\r\n                    }\r\n                    this.setValues('alpha', val);\r\n                    return this;\r\n                },\r\n\r\n                red: function(val) {\r\n                    return this.setChannel('rgb', 0, val);\r\n                },\r\n                green: function(val) {\r\n                    return this.setChannel('rgb', 1, val);\r\n                },\r\n                blue: function(val) {\r\n                    return this.setChannel('rgb', 2, val);\r\n                },\r\n                hue: function(val) {\r\n                    if (val) {\r\n                        val %= 360;\r\n                        val = val < 0 ? 360 + val : val;\r\n                    }\r\n                    return this.setChannel('hsl', 0, val);\r\n                },\r\n                saturation: function(val) {\r\n                    return this.setChannel('hsl', 1, val);\r\n                },\r\n                lightness: function(val) {\r\n                    return this.setChannel('hsl', 2, val);\r\n                },\r\n                saturationv: function(val) {\r\n                    return this.setChannel('hsv', 1, val);\r\n                },\r\n                whiteness: function(val) {\r\n                    return this.setChannel('hwb', 1, val);\r\n                },\r\n                blackness: function(val) {\r\n                    return this.setChannel('hwb', 2, val);\r\n                },\r\n                value: function(val) {\r\n                    return this.setChannel('hsv', 2, val);\r\n                },\r\n                cyan: function(val) {\r\n                    return this.setChannel('cmyk', 0, val);\r\n                },\r\n                magenta: function(val) {\r\n                    return this.setChannel('cmyk', 1, val);\r\n                },\r\n                yellow: function(val) {\r\n                    return this.setChannel('cmyk', 2, val);\r\n                },\r\n                black: function(val) {\r\n                    return this.setChannel('cmyk', 3, val);\r\n                },\r\n\r\n                hexString: function() {\r\n                    return string.hexString(this.values.rgb);\r\n                },\r\n                rgbString: function() {\r\n                    return string.rgbString(this.values.rgb, this.values.alpha);\r\n                },\r\n                rgbaString: function() {\r\n                    return string.rgbaString(this.values.rgb, this.values.alpha);\r\n                },\r\n                percentString: function() {\r\n                    return string.percentString(this.values.rgb, this.values.alpha);\r\n                },\r\n                hslString: function() {\r\n                    return string.hslString(this.values.hsl, this.values.alpha);\r\n                },\r\n                hslaString: function() {\r\n                    return string.hslaString(this.values.hsl, this.values.alpha);\r\n                },\r\n                hwbString: function() {\r\n                    return string.hwbString(this.values.hwb, this.values.alpha);\r\n                },\r\n                keyword: function() {\r\n                    return string.keyword(this.values.rgb, this.values.alpha);\r\n                },\r\n\r\n                rgbNumber: function() {\r\n                    var rgb = this.values.rgb;\r\n                    return (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\r\n                },\r\n\r\n                luminosity: function() {\r\n                    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n                    var rgb = this.values.rgb;\r\n                    var lum = [];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        var chan = rgb[i] / 255;\r\n                        lum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\r\n                    }\r\n                    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n                },\r\n\r\n                contrast: function(color2) {\r\n                    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n                    var lum1 = this.luminosity();\r\n                    var lum2 = color2.luminosity();\r\n                    if (lum1 > lum2) {\r\n                        return (lum1 + 0.05) / (lum2 + 0.05);\r\n                    }\r\n                    return (lum2 + 0.05) / (lum1 + 0.05);\r\n                },\r\n\r\n                level: function(color2) {\r\n                    var contrastRatio = this.contrast(color2);\r\n                    if (contrastRatio >= 7.1) {\r\n                        return 'AAA';\r\n                    }\r\n\r\n                    return (contrastRatio >= 4.5) ? 'AA' : '';\r\n                },\r\n\r\n                dark: function() {\r\n                    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\r\n                    var rgb = this.values.rgb;\r\n                    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\r\n                    return yiq < 128;\r\n                },\r\n\r\n                light: function() {\r\n                    return !this.dark();\r\n                },\r\n\r\n                negate: function() {\r\n                    var rgb = [];\r\n                    for (var i = 0; i < 3; i++) {\r\n                        rgb[i] = 255 - this.values.rgb[i];\r\n                    }\r\n                    this.setValues('rgb', rgb);\r\n                    return this;\r\n                },\r\n\r\n                lighten: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[2] += hsl[2] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                darken: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[2] -= hsl[2] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                saturate: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[1] += hsl[1] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                desaturate: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[1] -= hsl[1] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                whiten: function(ratio) {\r\n                    var hwb = this.values.hwb;\r\n                    hwb[1] += hwb[1] * ratio;\r\n                    this.setValues('hwb', hwb);\r\n                    return this;\r\n                },\r\n\r\n                blacken: function(ratio) {\r\n                    var hwb = this.values.hwb;\r\n                    hwb[2] += hwb[2] * ratio;\r\n                    this.setValues('hwb', hwb);\r\n                    return this;\r\n                },\r\n\r\n                greyscale: function() {\r\n                    var rgb = this.values.rgb;\r\n                    // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\r\n                    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\r\n                    this.setValues('rgb', [val, val, val]);\r\n                    return this;\r\n                },\r\n\r\n                clearer: function(ratio) {\r\n                    var alpha = this.values.alpha;\r\n                    this.setValues('alpha', alpha - (alpha * ratio));\r\n                    return this;\r\n                },\r\n\r\n                opaquer: function(ratio) {\r\n                    var alpha = this.values.alpha;\r\n                    this.setValues('alpha', alpha + (alpha * ratio));\r\n                    return this;\r\n                },\r\n\r\n                rotate: function(degrees) {\r\n                    var hsl = this.values.hsl;\r\n                    var hue = (hsl[0] + degrees) % 360;\r\n                    hsl[0] = hue < 0 ? 360 + hue : hue;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                /**\r\n                 * Ported from sass implementation in C\r\n                 * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\r\n                 */\r\n                mix: function(mixinColor, weight) {\r\n                    var color1 = this;\r\n                    var color2 = mixinColor;\r\n                    var p = weight === undefined ? 0.5 : weight;\r\n\r\n                    var w = 2 * p - 1;\r\n                    var a = color1.alpha() - color2.alpha();\r\n\r\n                    var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n                    var w2 = 1 - w1;\r\n\r\n                    return this\r\n                        .rgb(\r\n                        w1 * color1.red() + w2 * color2.red(),\r\n                        w1 * color1.green() + w2 * color2.green(),\r\n                        w1 * color1.blue() + w2 * color2.blue()\r\n                        )\r\n                        .alpha(color1.alpha() * p + color2.alpha() * (1 - p));\r\n                },\r\n\r\n                toJSON: function() {\r\n                    return this.rgb();\r\n                },\r\n\r\n                clone: function() {\r\n                    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\r\n                    // making the final build way to big to embed in Chart.js. So let's do it manually,\r\n                    // assuming that values to clone are 1 dimension arrays containing only numbers,\r\n                    // except 'alpha' which is a number.\r\n                    var result = new Color();\r\n                    var source = this.values;\r\n                    var target = result.values;\r\n                    var value, type;\r\n\r\n                    for (var prop in source) {\r\n                        if (source.hasOwnProperty(prop)) {\r\n                            value = source[prop];\r\n                            type = ({}).toString.call(value);\r\n                            if (type === '[object Array]') {\r\n                                target[prop] = value.slice(0);\r\n                            } else if (type === '[object Number]') {\r\n                                target[prop] = value;\r\n                            } else {\r\n                                console.error('unexpected color value:', value);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return result;\r\n                }\r\n            };\r\n\r\n            Color.prototype.spaces = {\r\n                rgb: ['red', 'green', 'blue'],\r\n                hsl: ['hue', 'saturation', 'lightness'],\r\n                hsv: ['hue', 'saturation', 'value'],\r\n                hwb: ['hue', 'whiteness', 'blackness'],\r\n                cmyk: ['cyan', 'magenta', 'yellow', 'black']\r\n            };\r\n\r\n            Color.prototype.maxes = {\r\n                rgb: [255, 255, 255],\r\n                hsl: [360, 100, 100],\r\n                hsv: [360, 100, 100],\r\n                hwb: [360, 100, 100],\r\n                cmyk: [100, 100, 100, 100]\r\n            };\r\n\r\n            Color.prototype.getValues = function(space) {\r\n                var values = this.values;\r\n                var vals = {};\r\n\r\n                for (var i = 0; i < space.length; i++) {\r\n                    vals[space.charAt(i)] = values[space][i];\r\n                }\r\n\r\n                if (values.alpha !== 1) {\r\n                    vals.a = values.alpha;\r\n                }\r\n\r\n                // {r: 255, g: 255, b: 255, a: 0.4}\r\n                return vals;\r\n            };\r\n\r\n            Color.prototype.setValues = function(space, vals) {\r\n                var values = this.values;\r\n                var spaces = this.spaces;\r\n                var maxes = this.maxes;\r\n                var alpha = 1;\r\n                var i;\r\n\r\n                this.valid = true;\r\n\r\n                if (space === 'alpha') {\r\n                    alpha = vals;\r\n                } else if (vals.length) {\r\n                    // [10, 10, 10]\r\n                    values[space] = vals.slice(0, space.length);\r\n                    alpha = vals[space.length];\r\n                } else if (vals[space.charAt(0)] !== undefined) {\r\n                    // {r: 10, g: 10, b: 10}\r\n                    for (i = 0; i < space.length; i++) {\r\n                        values[space][i] = vals[space.charAt(i)];\r\n                    }\r\n\r\n                    alpha = vals.a;\r\n                } else if (vals[spaces[space][0]] !== undefined) {\r\n                    // {red: 10, green: 10, blue: 10}\r\n                    var chans = spaces[space];\r\n\r\n                    for (i = 0; i < space.length; i++) {\r\n                        values[space][i] = vals[chans[i]];\r\n                    }\r\n\r\n                    alpha = vals.alpha;\r\n                }\r\n\r\n                values.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\r\n\r\n                if (space === 'alpha') {\r\n                    return false;\r\n                }\r\n\r\n                var capped;\r\n\r\n                // cap values of the space prior converting all values\r\n                for (i = 0; i < space.length; i++) {\r\n                    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\r\n                    values[space][i] = Math.round(capped);\r\n                }\r\n\r\n                // convert to all the other color spaces\r\n                for (var sname in spaces) {\r\n                    if (sname !== space) {\r\n                        values[sname] = convert[space][sname](values[space]);\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            };\r\n\r\n            Color.prototype.setSpace = function(space, args) {\r\n                var vals = args[0];\r\n\r\n                if (vals === undefined) {\r\n                    // color.rgb()\r\n                    return this.getValues(space);\r\n                }\r\n\r\n                // color.rgb(10, 10, 10)\r\n                if (typeof vals === 'number') {\r\n                    vals = Array.prototype.slice.call(args);\r\n                }\r\n\r\n                this.setValues(space, vals);\r\n                return this;\r\n            };\r\n\r\n            Color.prototype.setChannel = function(space, index, val) {\r\n                var svalues = this.values[space];\r\n                if (val === undefined) {\r\n                    // color.red()\r\n                    return svalues[index];\r\n                } else if (val === svalues[index]) {\r\n                    // color.red(color.red())\r\n                    return this;\r\n                }\r\n\r\n                // color.red(100)\r\n                svalues[index] = val;\r\n                this.setValues(space, svalues);\r\n\r\n                return this;\r\n            };\r\n\r\n            if (typeof window !== 'undefined') {\r\n                window.Color = Color;\r\n            }\r\n\r\n            module.exports = Color;\r\n        }, { \"1\": 1, \"4\": 4 }], 3: [function(require, module, exports) {\r\n            /* MIT license */\r\n\r\n            module.exports = {\r\n                rgb2hsl: rgb2hsl,\r\n                rgb2hsv: rgb2hsv,\r\n                rgb2hwb: rgb2hwb,\r\n                rgb2cmyk: rgb2cmyk,\r\n                rgb2keyword: rgb2keyword,\r\n                rgb2xyz: rgb2xyz,\r\n                rgb2lab: rgb2lab,\r\n                rgb2lch: rgb2lch,\r\n\r\n                hsl2rgb: hsl2rgb,\r\n                hsl2hsv: hsl2hsv,\r\n                hsl2hwb: hsl2hwb,\r\n                hsl2cmyk: hsl2cmyk,\r\n                hsl2keyword: hsl2keyword,\r\n\r\n                hsv2rgb: hsv2rgb,\r\n                hsv2hsl: hsv2hsl,\r\n                hsv2hwb: hsv2hwb,\r\n                hsv2cmyk: hsv2cmyk,\r\n                hsv2keyword: hsv2keyword,\r\n\r\n                hwb2rgb: hwb2rgb,\r\n                hwb2hsl: hwb2hsl,\r\n                hwb2hsv: hwb2hsv,\r\n                hwb2cmyk: hwb2cmyk,\r\n                hwb2keyword: hwb2keyword,\r\n\r\n                cmyk2rgb: cmyk2rgb,\r\n                cmyk2hsl: cmyk2hsl,\r\n                cmyk2hsv: cmyk2hsv,\r\n                cmyk2hwb: cmyk2hwb,\r\n                cmyk2keyword: cmyk2keyword,\r\n\r\n                keyword2rgb: keyword2rgb,\r\n                keyword2hsl: keyword2hsl,\r\n                keyword2hsv: keyword2hsv,\r\n                keyword2hwb: keyword2hwb,\r\n                keyword2cmyk: keyword2cmyk,\r\n                keyword2lab: keyword2lab,\r\n                keyword2xyz: keyword2xyz,\r\n\r\n                xyz2rgb: xyz2rgb,\r\n                xyz2lab: xyz2lab,\r\n                xyz2lch: xyz2lch,\r\n\r\n                lab2xyz: lab2xyz,\r\n                lab2rgb: lab2rgb,\r\n                lab2lch: lab2lch,\r\n\r\n                lch2lab: lch2lab,\r\n                lch2xyz: lch2xyz,\r\n                lch2rgb: lch2rgb\r\n            }\r\n\r\n            function rgb2hsl(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255,\r\n                    min = Math.min(r, g, b),\r\n                    max = Math.max(r, g, b),\r\n                    delta = max - min,\r\n                    h, s, l;\r\n\r\n                if (max == min)\r\n                    h = 0;\r\n                else if (r == max)\r\n                    h = (g - b) / delta;\r\n                else if (g == max)\r\n                    h = 2 + (b - r) / delta;\r\n                else if (b == max)\r\n                    h = 4 + (r - g) / delta;\r\n\r\n                h = Math.min(h * 60, 360);\r\n\r\n                if (h < 0)\r\n                    h += 360;\r\n\r\n                l = (min + max) / 2;\r\n\r\n                if (max == min)\r\n                    s = 0;\r\n                else if (l <= 0.5)\r\n                    s = delta / (max + min);\r\n                else\r\n                    s = delta / (2 - max - min);\r\n\r\n                return [h, s * 100, l * 100];\r\n            }\r\n\r\n            function rgb2hsv(rgb) {\r\n                var r = rgb[0],\r\n                    g = rgb[1],\r\n                    b = rgb[2],\r\n                    min = Math.min(r, g, b),\r\n                    max = Math.max(r, g, b),\r\n                    delta = max - min,\r\n                    h, s, v;\r\n\r\n                if (max == 0)\r\n                    s = 0;\r\n                else\r\n                    s = (delta / max * 1000) / 10;\r\n\r\n                if (max == min)\r\n                    h = 0;\r\n                else if (r == max)\r\n                    h = (g - b) / delta;\r\n                else if (g == max)\r\n                    h = 2 + (b - r) / delta;\r\n                else if (b == max)\r\n                    h = 4 + (r - g) / delta;\r\n\r\n                h = Math.min(h * 60, 360);\r\n\r\n                if (h < 0)\r\n                    h += 360;\r\n\r\n                v = ((max / 255) * 1000) / 10;\r\n\r\n                return [h, s, v];\r\n            }\r\n\r\n            function rgb2hwb(rgb) {\r\n                var r = rgb[0],\r\n                    g = rgb[1],\r\n                    b = rgb[2],\r\n                    h = rgb2hsl(rgb)[0],\r\n                    w = 1 / 255 * Math.min(r, Math.min(g, b)),\r\n                    b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\r\n\r\n                return [h, w * 100, b * 100];\r\n            }\r\n\r\n            function rgb2cmyk(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255,\r\n                    c, m, y, k;\r\n\r\n                k = Math.min(1 - r, 1 - g, 1 - b);\r\n                c = (1 - r - k) / (1 - k) || 0;\r\n                m = (1 - g - k) / (1 - k) || 0;\r\n                y = (1 - b - k) / (1 - k) || 0;\r\n                return [c * 100, m * 100, y * 100, k * 100];\r\n            }\r\n\r\n            function rgb2keyword(rgb) {\r\n                return reverseKeywords[JSON.stringify(rgb)];\r\n            }\r\n\r\n            function rgb2xyz(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255;\r\n\r\n                // assume sRGB\r\n                r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\r\n                g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\r\n                b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\r\n\r\n                var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\r\n                var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\r\n                var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\r\n\r\n                return [x * 100, y * 100, z * 100];\r\n            }\r\n\r\n            function rgb2lab(rgb) {\r\n                var xyz = rgb2xyz(rgb),\r\n                    x = xyz[0],\r\n                    y = xyz[1],\r\n                    z = xyz[2],\r\n                    l, a, b;\r\n\r\n                x /= 95.047;\r\n                y /= 100;\r\n                z /= 108.883;\r\n\r\n                x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\r\n                y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\r\n                z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\r\n\r\n                l = (116 * y) - 16;\r\n                a = 500 * (x - y);\r\n                b = 200 * (y - z);\r\n\r\n                return [l, a, b];\r\n            }\r\n\r\n            function rgb2lch(args) {\r\n                return lab2lch(rgb2lab(args));\r\n            }\r\n\r\n            function hsl2rgb(hsl) {\r\n                var h = hsl[0] / 360,\r\n                    s = hsl[1] / 100,\r\n                    l = hsl[2] / 100,\r\n                    t1, t2, t3, rgb, val;\r\n\r\n                if (s == 0) {\r\n                    val = l * 255;\r\n                    return [val, val, val];\r\n                }\r\n\r\n                if (l < 0.5)\r\n                    t2 = l * (1 + s);\r\n                else\r\n                    t2 = l + s - l * s;\r\n                t1 = 2 * l - t2;\r\n\r\n                rgb = [0, 0, 0];\r\n                for (var i = 0; i < 3; i++) {\r\n                    t3 = h + 1 / 3 * - (i - 1);\r\n                    t3 < 0 && t3++;\r\n                    t3 > 1 && t3--;\r\n\r\n                    if (6 * t3 < 1)\r\n                        val = t1 + (t2 - t1) * 6 * t3;\r\n                    else if (2 * t3 < 1)\r\n                        val = t2;\r\n                    else if (3 * t3 < 2)\r\n                        val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\r\n                    else\r\n                        val = t1;\r\n\r\n                    rgb[i] = val * 255;\r\n                }\r\n\r\n                return rgb;\r\n            }\r\n\r\n            function hsl2hsv(hsl) {\r\n                var h = hsl[0],\r\n                    s = hsl[1] / 100,\r\n                    l = hsl[2] / 100,\r\n                    sv, v;\r\n\r\n                if (l === 0) {\r\n                    // no need to do calc on black\r\n                    // also avoids divide by 0 error\r\n                    return [0, 0, 0];\r\n                }\r\n\r\n                l *= 2;\r\n                s *= (l <= 1) ? l : 2 - l;\r\n                v = (l + s) / 2;\r\n                sv = (2 * s) / (l + s);\r\n                return [h, sv * 100, v * 100];\r\n            }\r\n\r\n            function hsl2hwb(args) {\r\n                return rgb2hwb(hsl2rgb(args));\r\n            }\r\n\r\n            function hsl2cmyk(args) {\r\n                return rgb2cmyk(hsl2rgb(args));\r\n            }\r\n\r\n            function hsl2keyword(args) {\r\n                return rgb2keyword(hsl2rgb(args));\r\n            }\r\n\r\n            function hsv2rgb(hsv) {\r\n                var h = hsv[0] / 60,\r\n                    s = hsv[1] / 100,\r\n                    v = hsv[2] / 100,\r\n                    hi = Math.floor(h) % 6;\r\n\r\n                var f = h - Math.floor(h),\r\n                    p = 255 * v * (1 - s),\r\n                    q = 255 * v * (1 - (s * f)),\r\n                    t = 255 * v * (1 - (s * (1 - f))),\r\n                    v = 255 * v;\r\n\r\n                switch (hi) {\r\n                    case 0:\r\n                        return [v, t, p];\r\n                    case 1:\r\n                        return [q, v, p];\r\n                    case 2:\r\n                        return [p, v, t];\r\n                    case 3:\r\n                        return [p, q, v];\r\n                    case 4:\r\n                        return [t, p, v];\r\n                    case 5:\r\n                        return [v, p, q];\r\n                }\r\n            }\r\n\r\n            function hsv2hsl(hsv) {\r\n                var h = hsv[0],\r\n                    s = hsv[1] / 100,\r\n                    v = hsv[2] / 100,\r\n                    sl, l;\r\n\r\n                l = (2 - s) * v;\r\n                sl = s * v;\r\n                sl /= (l <= 1) ? l : 2 - l;\r\n                sl = sl || 0;\r\n                l /= 2;\r\n                return [h, sl * 100, l * 100];\r\n            }\r\n\r\n            function hsv2hwb(args) {\r\n                return rgb2hwb(hsv2rgb(args))\r\n            }\r\n\r\n            function hsv2cmyk(args) {\r\n                return rgb2cmyk(hsv2rgb(args));\r\n            }\r\n\r\n            function hsv2keyword(args) {\r\n                return rgb2keyword(hsv2rgb(args));\r\n            }\r\n\r\n            // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\r\n            function hwb2rgb(hwb) {\r\n                var h = hwb[0] / 360,\r\n                    wh = hwb[1] / 100,\r\n                    bl = hwb[2] / 100,\r\n                    ratio = wh + bl,\r\n                    i, v, f, n;\r\n\r\n                // wh + bl cant be > 1\r\n                if (ratio > 1) {\r\n                    wh /= ratio;\r\n                    bl /= ratio;\r\n                }\r\n\r\n                i = Math.floor(6 * h);\r\n                v = 1 - bl;\r\n                f = 6 * h - i;\r\n                if ((i & 0x01) != 0) {\r\n                    f = 1 - f;\r\n                }\r\n                n = wh + f * (v - wh);  // linear interpolation\r\n\r\n                switch (i) {\r\n                    default:\r\n                    case 6:\r\n                    case 0: r = v; g = n; b = wh; break;\r\n                    case 1: r = n; g = v; b = wh; break;\r\n                    case 2: r = wh; g = v; b = n; break;\r\n                    case 3: r = wh; g = n; b = v; break;\r\n                    case 4: r = n; g = wh; b = v; break;\r\n                    case 5: r = v; g = wh; b = n; break;\r\n                }\r\n\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function hwb2hsl(args) {\r\n                return rgb2hsl(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2hsv(args) {\r\n                return rgb2hsv(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2cmyk(args) {\r\n                return rgb2cmyk(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2keyword(args) {\r\n                return rgb2keyword(hwb2rgb(args));\r\n            }\r\n\r\n            function cmyk2rgb(cmyk) {\r\n                var c = cmyk[0] / 100,\r\n                    m = cmyk[1] / 100,\r\n                    y = cmyk[2] / 100,\r\n                    k = cmyk[3] / 100,\r\n                    r, g, b;\r\n\r\n                r = 1 - Math.min(1, c * (1 - k) + k);\r\n                g = 1 - Math.min(1, m * (1 - k) + k);\r\n                b = 1 - Math.min(1, y * (1 - k) + k);\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function cmyk2hsl(args) {\r\n                return rgb2hsl(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2hsv(args) {\r\n                return rgb2hsv(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2hwb(args) {\r\n                return rgb2hwb(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2keyword(args) {\r\n                return rgb2keyword(cmyk2rgb(args));\r\n            }\r\n\r\n            function xyz2rgb(xyz) {\r\n                var x = xyz[0] / 100,\r\n                    y = xyz[1] / 100,\r\n                    z = xyz[2] / 100,\r\n                    r, g, b;\r\n\r\n                r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\r\n                g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\r\n                b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\r\n\r\n                // assume sRGB\r\n                r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\r\n                    : r = (r * 12.92);\r\n\r\n                g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\r\n                    : g = (g * 12.92);\r\n\r\n                b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\r\n                    : b = (b * 12.92);\r\n\r\n                r = Math.min(Math.max(0, r), 1);\r\n                g = Math.min(Math.max(0, g), 1);\r\n                b = Math.min(Math.max(0, b), 1);\r\n\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function xyz2lab(xyz) {\r\n                var x = xyz[0],\r\n                    y = xyz[1],\r\n                    z = xyz[2],\r\n                    l, a, b;\r\n\r\n                x /= 95.047;\r\n                y /= 100;\r\n                z /= 108.883;\r\n\r\n                x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\r\n                y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\r\n                z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\r\n\r\n                l = (116 * y) - 16;\r\n                a = 500 * (x - y);\r\n                b = 200 * (y - z);\r\n\r\n                return [l, a, b];\r\n            }\r\n\r\n            function xyz2lch(args) {\r\n                return lab2lch(xyz2lab(args));\r\n            }\r\n\r\n            function lab2xyz(lab) {\r\n                var l = lab[0],\r\n                    a = lab[1],\r\n                    b = lab[2],\r\n                    x, y, z, y2;\r\n\r\n                if (l <= 8) {\r\n                    y = (l * 100) / 903.3;\r\n                    y2 = (7.787 * (y / 100)) + (16 / 116);\r\n                } else {\r\n                    y = 100 * Math.pow((l + 16) / 116, 3);\r\n                    y2 = Math.pow(y / 100, 1 / 3);\r\n                }\r\n\r\n                x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\r\n\r\n                z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\r\n\r\n                return [x, y, z];\r\n            }\r\n\r\n            function lab2lch(lab) {\r\n                var l = lab[0],\r\n                    a = lab[1],\r\n                    b = lab[2],\r\n                    hr, h, c;\r\n\r\n                hr = Math.atan2(b, a);\r\n                h = hr * 360 / 2 / Math.PI;\r\n                if (h < 0) {\r\n                    h += 360;\r\n                }\r\n                c = Math.sqrt(a * a + b * b);\r\n                return [l, c, h];\r\n            }\r\n\r\n            function lab2rgb(args) {\r\n                return xyz2rgb(lab2xyz(args));\r\n            }\r\n\r\n            function lch2lab(lch) {\r\n                var l = lch[0],\r\n                    c = lch[1],\r\n                    h = lch[2],\r\n                    a, b, hr;\r\n\r\n                hr = h / 360 * 2 * Math.PI;\r\n                a = c * Math.cos(hr);\r\n                b = c * Math.sin(hr);\r\n                return [l, a, b];\r\n            }\r\n\r\n            function lch2xyz(args) {\r\n                return lab2xyz(lch2lab(args));\r\n            }\r\n\r\n            function lch2rgb(args) {\r\n                return lab2rgb(lch2lab(args));\r\n            }\r\n\r\n            function keyword2rgb(keyword) {\r\n                return cssKeywords[keyword];\r\n            }\r\n\r\n            function keyword2hsl(args) {\r\n                return rgb2hsl(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2hsv(args) {\r\n                return rgb2hsv(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2hwb(args) {\r\n                return rgb2hwb(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2cmyk(args) {\r\n                return rgb2cmyk(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2lab(args) {\r\n                return rgb2lab(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2xyz(args) {\r\n                return rgb2xyz(keyword2rgb(args));\r\n            }\r\n\r\n            var cssKeywords = {\r\n                aliceblue: [240, 248, 255],\r\n                antiquewhite: [250, 235, 215],\r\n                aqua: [0, 255, 255],\r\n                aquamarine: [127, 255, 212],\r\n                azure: [240, 255, 255],\r\n                beige: [245, 245, 220],\r\n                bisque: [255, 228, 196],\r\n                black: [0, 0, 0],\r\n                blanchedalmond: [255, 235, 205],\r\n                blue: [0, 0, 255],\r\n                blueviolet: [138, 43, 226],\r\n                brown: [165, 42, 42],\r\n                burlywood: [222, 184, 135],\r\n                cadetblue: [95, 158, 160],\r\n                chartreuse: [127, 255, 0],\r\n                chocolate: [210, 105, 30],\r\n                coral: [255, 127, 80],\r\n                cornflowerblue: [100, 149, 237],\r\n                cornsilk: [255, 248, 220],\r\n                crimson: [220, 20, 60],\r\n                cyan: [0, 255, 255],\r\n                darkblue: [0, 0, 139],\r\n                darkcyan: [0, 139, 139],\r\n                darkgoldenrod: [184, 134, 11],\r\n                darkgray: [169, 169, 169],\r\n                darkgreen: [0, 100, 0],\r\n                darkgrey: [169, 169, 169],\r\n                darkkhaki: [189, 183, 107],\r\n                darkmagenta: [139, 0, 139],\r\n                darkolivegreen: [85, 107, 47],\r\n                darkorange: [255, 140, 0],\r\n                darkorchid: [153, 50, 204],\r\n                darkred: [139, 0, 0],\r\n                darksalmon: [233, 150, 122],\r\n                darkseagreen: [143, 188, 143],\r\n                darkslateblue: [72, 61, 139],\r\n                darkslategray: [47, 79, 79],\r\n                darkslategrey: [47, 79, 79],\r\n                darkturquoise: [0, 206, 209],\r\n                darkviolet: [148, 0, 211],\r\n                deeppink: [255, 20, 147],\r\n                deepskyblue: [0, 191, 255],\r\n                dimgray: [105, 105, 105],\r\n                dimgrey: [105, 105, 105],\r\n                dodgerblue: [30, 144, 255],\r\n                firebrick: [178, 34, 34],\r\n                floralwhite: [255, 250, 240],\r\n                forestgreen: [34, 139, 34],\r\n                fuchsia: [255, 0, 255],\r\n                gainsboro: [220, 220, 220],\r\n                ghostwhite: [248, 248, 255],\r\n                gold: [255, 215, 0],\r\n                goldenrod: [218, 165, 32],\r\n                gray: [128, 128, 128],\r\n                green: [0, 128, 0],\r\n                greenyellow: [173, 255, 47],\r\n                grey: [128, 128, 128],\r\n                honeydew: [240, 255, 240],\r\n                hotpink: [255, 105, 180],\r\n                indianred: [205, 92, 92],\r\n                indigo: [75, 0, 130],\r\n                ivory: [255, 255, 240],\r\n                khaki: [240, 230, 140],\r\n                lavender: [230, 230, 250],\r\n                lavenderblush: [255, 240, 245],\r\n                lawngreen: [124, 252, 0],\r\n                lemonchiffon: [255, 250, 205],\r\n                lightblue: [173, 216, 230],\r\n                lightcoral: [240, 128, 128],\r\n                lightcyan: [224, 255, 255],\r\n                lightgoldenrodyellow: [250, 250, 210],\r\n                lightgray: [211, 211, 211],\r\n                lightgreen: [144, 238, 144],\r\n                lightgrey: [211, 211, 211],\r\n                lightpink: [255, 182, 193],\r\n                lightsalmon: [255, 160, 122],\r\n                lightseagreen: [32, 178, 170],\r\n                lightskyblue: [135, 206, 250],\r\n                lightslategray: [119, 136, 153],\r\n                lightslategrey: [119, 136, 153],\r\n                lightsteelblue: [176, 196, 222],\r\n                lightyellow: [255, 255, 224],\r\n                lime: [0, 255, 0],\r\n                limegreen: [50, 205, 50],\r\n                linen: [250, 240, 230],\r\n                magenta: [255, 0, 255],\r\n                maroon: [128, 0, 0],\r\n                mediumaquamarine: [102, 205, 170],\r\n                mediumblue: [0, 0, 205],\r\n                mediumorchid: [186, 85, 211],\r\n                mediumpurple: [147, 112, 219],\r\n                mediumseagreen: [60, 179, 113],\r\n                mediumslateblue: [123, 104, 238],\r\n                mediumspringgreen: [0, 250, 154],\r\n                mediumturquoise: [72, 209, 204],\r\n                mediumvioletred: [199, 21, 133],\r\n                midnightblue: [25, 25, 112],\r\n                mintcream: [245, 255, 250],\r\n                mistyrose: [255, 228, 225],\r\n                moccasin: [255, 228, 181],\r\n                navajowhite: [255, 222, 173],\r\n                navy: [0, 0, 128],\r\n                oldlace: [253, 245, 230],\r\n                olive: [128, 128, 0],\r\n                olivedrab: [107, 142, 35],\r\n                orange: [255, 165, 0],\r\n                orangered: [255, 69, 0],\r\n                orchid: [218, 112, 214],\r\n                palegoldenrod: [238, 232, 170],\r\n                palegreen: [152, 251, 152],\r\n                paleturquoise: [175, 238, 238],\r\n                palevioletred: [219, 112, 147],\r\n                papayawhip: [255, 239, 213],\r\n                peachpuff: [255, 218, 185],\r\n                peru: [205, 133, 63],\r\n                pink: [255, 192, 203],\r\n                plum: [221, 160, 221],\r\n                powderblue: [176, 224, 230],\r\n                purple: [128, 0, 128],\r\n                rebeccapurple: [102, 51, 153],\r\n                red: [255, 0, 0],\r\n                rosybrown: [188, 143, 143],\r\n                royalblue: [65, 105, 225],\r\n                saddlebrown: [139, 69, 19],\r\n                salmon: [250, 128, 114],\r\n                sandybrown: [244, 164, 96],\r\n                seagreen: [46, 139, 87],\r\n                seashell: [255, 245, 238],\r\n                sienna: [160, 82, 45],\r\n                silver: [192, 192, 192],\r\n                skyblue: [135, 206, 235],\r\n                slateblue: [106, 90, 205],\r\n                slategray: [112, 128, 144],\r\n                slategrey: [112, 128, 144],\r\n                snow: [255, 250, 250],\r\n                springgreen: [0, 255, 127],\r\n                steelblue: [70, 130, 180],\r\n                tan: [210, 180, 140],\r\n                teal: [0, 128, 128],\r\n                thistle: [216, 191, 216],\r\n                tomato: [255, 99, 71],\r\n                turquoise: [64, 224, 208],\r\n                violet: [238, 130, 238],\r\n                wheat: [245, 222, 179],\r\n                white: [255, 255, 255],\r\n                whitesmoke: [245, 245, 245],\r\n                yellow: [255, 255, 0],\r\n                yellowgreen: [154, 205, 50]\r\n            };\r\n\r\n            var reverseKeywords = {};\r\n            for (var key in cssKeywords) {\r\n                reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\r\n            }\r\n        }, {}], 4: [function(require, module, exports) {\r\n            var conversions = require(3);\r\n\r\n            var convert = function() {\r\n                return new Converter();\r\n            }\r\n\r\n            for (var func in conversions) {\r\n                // export Raw versions\r\n                convert[func + \"Raw\"] = (function(func) {\r\n                    // accept array or plain args\r\n                    return function(arg) {\r\n                        if (typeof arg == \"number\")\r\n                            arg = Array.prototype.slice.call(arguments);\r\n                        return conversions[func](arg);\r\n                    }\r\n                })(func);\r\n\r\n                var pair = /(\\w+)2(\\w+)/.exec(func),\r\n                    from = pair[1],\r\n                    to = pair[2];\r\n\r\n                // export rgb2hsl and [\"rgb\"][\"hsl\"]\r\n                convert[from] = convert[from] || {};\r\n\r\n                convert[from][to] = convert[func] = (function(func) {\r\n                    return function(arg) {\r\n                        if (typeof arg == \"number\")\r\n                            arg = Array.prototype.slice.call(arguments);\r\n\r\n                        var val = conversions[func](arg);\r\n                        if (typeof val == \"string\" || val === undefined)\r\n                            return val; // keyword\r\n\r\n                        for (var i = 0; i < val.length; i++)\r\n                            val[i] = Math.round(val[i]);\r\n                        return val;\r\n                    }\r\n                })(func);\r\n            }\r\n\r\n            /* Converter does lazy conversion and caching */\r\n            var Converter = function() {\r\n                this.convs = {};\r\n            };\r\n\r\n            /* Either get the values for a space or\r\n              set the values for a space, depending on args */\r\n            Converter.prototype.routeSpace = function(space, args) {\r\n                var values = args[0];\r\n                if (values === undefined) {\r\n                    // color.rgb()\r\n                    return this.getValues(space);\r\n                }\r\n                // color.rgb(10, 10, 10)\r\n                if (typeof values == \"number\") {\r\n                    values = Array.prototype.slice.call(args);\r\n                }\r\n\r\n                return this.setValues(space, values);\r\n            };\r\n\r\n            /* Set the values for a space, invalidating cache */\r\n            Converter.prototype.setValues = function(space, values) {\r\n                this.space = space;\r\n                this.convs = {};\r\n                this.convs[space] = values;\r\n                return this;\r\n            };\r\n\r\n            /* Get the values for a space. If there's already\r\n              a conversion for the space, fetch it, otherwise\r\n              compute it */\r\n            Converter.prototype.getValues = function(space) {\r\n                var vals = this.convs[space];\r\n                if (!vals) {\r\n                    var fspace = this.space,\r\n                        from = this.convs[fspace];\r\n                    vals = convert[fspace][space](from);\r\n\r\n                    this.convs[space] = vals;\r\n                }\r\n                return vals;\r\n            };\r\n\r\n            [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\r\n                Converter.prototype[space] = function(vals) {\r\n                    return this.routeSpace(space, arguments);\r\n                }\r\n            });\r\n\r\n            module.exports = convert;\r\n        }, { \"3\": 3 }], 5: [function(require, module, exports) {\r\n            'use strict'\r\n\r\n            module.exports = {\r\n                \"aliceblue\": [240, 248, 255],\r\n                \"antiquewhite\": [250, 235, 215],\r\n                \"aqua\": [0, 255, 255],\r\n                \"aquamarine\": [127, 255, 212],\r\n                \"azure\": [240, 255, 255],\r\n                \"beige\": [245, 245, 220],\r\n                \"bisque\": [255, 228, 196],\r\n                \"black\": [0, 0, 0],\r\n                \"blanchedalmond\": [255, 235, 205],\r\n                \"blue\": [0, 0, 255],\r\n                \"blueviolet\": [138, 43, 226],\r\n                \"brown\": [165, 42, 42],\r\n                \"burlywood\": [222, 184, 135],\r\n                \"cadetblue\": [95, 158, 160],\r\n                \"chartreuse\": [127, 255, 0],\r\n                \"chocolate\": [210, 105, 30],\r\n                \"coral\": [255, 127, 80],\r\n                \"cornflowerblue\": [100, 149, 237],\r\n                \"cornsilk\": [255, 248, 220],\r\n                \"crimson\": [220, 20, 60],\r\n                \"cyan\": [0, 255, 255],\r\n                \"darkblue\": [0, 0, 139],\r\n                \"darkcyan\": [0, 139, 139],\r\n                \"darkgoldenrod\": [184, 134, 11],\r\n                \"darkgray\": [169, 169, 169],\r\n                \"darkgreen\": [0, 100, 0],\r\n                \"darkgrey\": [169, 169, 169],\r\n                \"darkkhaki\": [189, 183, 107],\r\n                \"darkmagenta\": [139, 0, 139],\r\n                \"darkolivegreen\": [85, 107, 47],\r\n                \"darkorange\": [255, 140, 0],\r\n                \"darkorchid\": [153, 50, 204],\r\n                \"darkred\": [139, 0, 0],\r\n                \"darksalmon\": [233, 150, 122],\r\n                \"darkseagreen\": [143, 188, 143],\r\n                \"darkslateblue\": [72, 61, 139],\r\n                \"darkslategray\": [47, 79, 79],\r\n                \"darkslategrey\": [47, 79, 79],\r\n                \"darkturquoise\": [0, 206, 209],\r\n                \"darkviolet\": [148, 0, 211],\r\n                \"deeppink\": [255, 20, 147],\r\n                \"deepskyblue\": [0, 191, 255],\r\n                \"dimgray\": [105, 105, 105],\r\n                \"dimgrey\": [105, 105, 105],\r\n                \"dodgerblue\": [30, 144, 255],\r\n                \"firebrick\": [178, 34, 34],\r\n                \"floralwhite\": [255, 250, 240],\r\n                \"forestgreen\": [34, 139, 34],\r\n                \"fuchsia\": [255, 0, 255],\r\n                \"gainsboro\": [220, 220, 220],\r\n                \"ghostwhite\": [248, 248, 255],\r\n                \"gold\": [255, 215, 0],\r\n                \"goldenrod\": [218, 165, 32],\r\n                \"gray\": [128, 128, 128],\r\n                \"green\": [0, 128, 0],\r\n                \"greenyellow\": [173, 255, 47],\r\n                \"grey\": [128, 128, 128],\r\n                \"honeydew\": [240, 255, 240],\r\n                \"hotpink\": [255, 105, 180],\r\n                \"indianred\": [205, 92, 92],\r\n                \"indigo\": [75, 0, 130],\r\n                \"ivory\": [255, 255, 240],\r\n                \"khaki\": [240, 230, 140],\r\n                \"lavender\": [230, 230, 250],\r\n                \"lavenderblush\": [255, 240, 245],\r\n                \"lawngreen\": [124, 252, 0],\r\n                \"lemonchiffon\": [255, 250, 205],\r\n                \"lightblue\": [173, 216, 230],\r\n                \"lightcoral\": [240, 128, 128],\r\n                \"lightcyan\": [224, 255, 255],\r\n                \"lightgoldenrodyellow\": [250, 250, 210],\r\n                \"lightgray\": [211, 211, 211],\r\n                \"lightgreen\": [144, 238, 144],\r\n                \"lightgrey\": [211, 211, 211],\r\n                \"lightpink\": [255, 182, 193],\r\n                \"lightsalmon\": [255, 160, 122],\r\n                \"lightseagreen\": [32, 178, 170],\r\n                \"lightskyblue\": [135, 206, 250],\r\n                \"lightslategray\": [119, 136, 153],\r\n                \"lightslategrey\": [119, 136, 153],\r\n                \"lightsteelblue\": [176, 196, 222],\r\n                \"lightyellow\": [255, 255, 224],\r\n                \"lime\": [0, 255, 0],\r\n                \"limegreen\": [50, 205, 50],\r\n                \"linen\": [250, 240, 230],\r\n                \"magenta\": [255, 0, 255],\r\n                \"maroon\": [128, 0, 0],\r\n                \"mediumaquamarine\": [102, 205, 170],\r\n                \"mediumblue\": [0, 0, 205],\r\n                \"mediumorchid\": [186, 85, 211],\r\n                \"mediumpurple\": [147, 112, 219],\r\n                \"mediumseagreen\": [60, 179, 113],\r\n                \"mediumslateblue\": [123, 104, 238],\r\n                \"mediumspringgreen\": [0, 250, 154],\r\n                \"mediumturquoise\": [72, 209, 204],\r\n                \"mediumvioletred\": [199, 21, 133],\r\n                \"midnightblue\": [25, 25, 112],\r\n                \"mintcream\": [245, 255, 250],\r\n                \"mistyrose\": [255, 228, 225],\r\n                \"moccasin\": [255, 228, 181],\r\n                \"navajowhite\": [255, 222, 173],\r\n                \"navy\": [0, 0, 128],\r\n                \"oldlace\": [253, 245, 230],\r\n                \"olive\": [128, 128, 0],\r\n                \"olivedrab\": [107, 142, 35],\r\n                \"orange\": [255, 165, 0],\r\n                \"orangered\": [255, 69, 0],\r\n                \"orchid\": [218, 112, 214],\r\n                \"palegoldenrod\": [238, 232, 170],\r\n                \"palegreen\": [152, 251, 152],\r\n                \"paleturquoise\": [175, 238, 238],\r\n                \"palevioletred\": [219, 112, 147],\r\n                \"papayawhip\": [255, 239, 213],\r\n                \"peachpuff\": [255, 218, 185],\r\n                \"peru\": [205, 133, 63],\r\n                \"pink\": [255, 192, 203],\r\n                \"plum\": [221, 160, 221],\r\n                \"powderblue\": [176, 224, 230],\r\n                \"purple\": [128, 0, 128],\r\n                \"rebeccapurple\": [102, 51, 153],\r\n                \"red\": [255, 0, 0],\r\n                \"rosybrown\": [188, 143, 143],\r\n                \"royalblue\": [65, 105, 225],\r\n                \"saddlebrown\": [139, 69, 19],\r\n                \"salmon\": [250, 128, 114],\r\n                \"sandybrown\": [244, 164, 96],\r\n                \"seagreen\": [46, 139, 87],\r\n                \"seashell\": [255, 245, 238],\r\n                \"sienna\": [160, 82, 45],\r\n                \"silver\": [192, 192, 192],\r\n                \"skyblue\": [135, 206, 235],\r\n                \"slateblue\": [106, 90, 205],\r\n                \"slategray\": [112, 128, 144],\r\n                \"slategrey\": [112, 128, 144],\r\n                \"snow\": [255, 250, 250],\r\n                \"springgreen\": [0, 255, 127],\r\n                \"steelblue\": [70, 130, 180],\r\n                \"tan\": [210, 180, 140],\r\n                \"teal\": [0, 128, 128],\r\n                \"thistle\": [216, 191, 216],\r\n                \"tomato\": [255, 99, 71],\r\n                \"turquoise\": [64, 224, 208],\r\n                \"violet\": [238, 130, 238],\r\n                \"wheat\": [245, 222, 179],\r\n                \"white\": [255, 255, 255],\r\n                \"whitesmoke\": [245, 245, 245],\r\n                \"yellow\": [255, 255, 0],\r\n                \"yellowgreen\": [154, 205, 50]\r\n            };\r\n        }, {}], 6: [function(require, module, exports) {\r\n            /**\r\n             * @namespace Chart\r\n             */\r\n            var Chart = require(20)();\r\n\r\n            Chart.helpers = require(36);\r\n\r\n            // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\r\n            require(18)(Chart);\r\n\r\n            Chart.defaults = require(16);\r\n            Chart.Element = require(17);\r\n            Chart.elements = require(31);\r\n            Chart.Interaction = require(19);\r\n            Chart.layouts = require(21);\r\n            Chart.platform = require(39);\r\n            Chart.plugins = require(22);\r\n            Chart.Ticks = require(25);\r\n\r\n            require(13)(Chart);\r\n            require(14)(Chart);\r\n            require(15)(Chart);\r\n            require(24)(Chart);\r\n            require(23)(Chart);\r\n            require(26)(Chart);\r\n\r\n            require(46)(Chart);\r\n            require(44)(Chart);\r\n            require(45)(Chart);\r\n            // require('./scales/scale.logarithmic')(Chart);\r\n            // require('./scales/scale.radialLinear')(Chart);\r\n            // require('./scales/scale.time')(Chart);\r\n\r\n            // Controllers must be loaded after elements\r\n            // See Chart.core.datasetController.dataElementType\r\n            require(10)(Chart);\r\n            // require('./controllers/controller.bubble')(Chart);\r\n            require(11)(Chart);\r\n            require(12)(Chart);\r\n            // require('./controllers/controller.polarArea')(Chart);\r\n            // require('./controllers/controller.radar')(Chart);\r\n            // require('./controllers/controller.scatter')(Chart);\r\n\r\n            require(7)(Chart);\r\n            // require('./charts/Chart.Bubble')(Chart);\r\n            require(8)(Chart);\r\n            require(9)(Chart);\r\n            // require('./charts/Chart.PolarArea')(Chart);\r\n            // require('./charts/Chart.Radar')(Chart);\r\n            // require('./charts/Chart.Scatter')(Chart);\r\n\r\n            // Loading built-it plugins\r\n            var plugins = require(40);\r\n            for (var k in plugins) {\r\n                if (plugins.hasOwnProperty(k)) {\r\n                    Chart.plugins.register(plugins[k]);\r\n                }\r\n            }\r\n\r\n            Chart.platform.initialize();\r\n\r\n            module.exports = Chart;\r\n            if (typeof window !== 'undefined') {\r\n                window.Chart = Chart;\r\n            }\r\n        }, { \"10\": 10, \"11\": 11, \"12\": 12, \"13\": 13, \"14\": 14, \"15\": 15, \"16\": 16, \"17\": 17, \"18\": 18, \"19\": 19, \"20\": 20, \"21\": 21, \"22\": 22, \"23\": 23, \"24\": 24, \"25\": 25, \"26\": 26, \"31\": 31, \"36\": 36, \"39\": 39, \"40\": 40, \"44\": 44, \"45\": 45, \"46\": 46, \"7\": 7, \"8\": 8, \"9\": 9 }], 7: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Bar = function(context, config) {\r\n                    config.type = 'bar';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 8: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Doughnut = function(context, config) {\r\n                    config.type = 'doughnut';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 9: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Line = function(context, config) {\r\n                    config.type = 'line';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 10: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('bar', {\r\n                hover: {\r\n                    mode: 'label'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'category',\r\n\r\n                        // Specific to Bar Controller\r\n                        categoryPercentage: 0.8,\r\n                        barPercentage: 0.9,\r\n\r\n                        // offset settings\r\n                        offset: true,\r\n\r\n                        // grid line settings\r\n                        gridLines: {\r\n                            offsetGridLines: true\r\n                        }\r\n                    }],\r\n\r\n                    yAxes: [{\r\n                        type: 'linear'\r\n                    }]\r\n                }\r\n            });\r\n\r\n            defaults._set('horizontalBar', {\r\n                hover: {\r\n                    mode: 'index',\r\n                    axis: 'y'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'linear',\r\n                        position: 'bottom'\r\n                    }],\r\n\r\n                    yAxes: [{\r\n                        position: 'left',\r\n                        type: 'category',\r\n\r\n                        // Specific to Horizontal Bar Controller\r\n                        categoryPercentage: 0.8,\r\n                        barPercentage: 0.9,\r\n\r\n                        // offset settings\r\n                        offset: true,\r\n\r\n                        // grid line settings\r\n                        gridLines: {\r\n                            offsetGridLines: true\r\n                        }\r\n                    }]\r\n                },\r\n\r\n                elements: {\r\n                    rectangle: {\r\n                        borderSkipped: 'left'\r\n                    }\r\n                },\r\n\r\n                tooltips: {\r\n                    callbacks: {\r\n                        title: function(item, data) {\r\n                            // Pick first xLabel for now\r\n                            var title = '';\r\n\r\n                            if (item.length > 0) {\r\n                                if (item[0].yLabel) {\r\n                                    title = item[0].yLabel;\r\n                                } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\r\n                                    title = data.labels[item[0].index];\r\n                                }\r\n                            }\r\n\r\n                            return title;\r\n                        },\r\n\r\n                        label: function(item, data) {\r\n                            var datasetLabel = data.datasets[item.datasetIndex].label || '';\r\n                            return datasetLabel + ': ' + item.xLabel;\r\n                        }\r\n                    },\r\n                    mode: 'index',\r\n                    axis: 'y'\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\r\n             * @private\r\n             */\r\n            function computeMinSampleSize(scale, pixels) {\r\n                var min = scale.isHorizontal() ? scale.width : scale.height;\r\n                var ticks = scale.getTicks();\r\n                var prev, curr, i, ilen;\r\n\r\n                for (i = 1, ilen = pixels.length; i < ilen; ++i) {\r\n                    min = Math.min(min, pixels[i] - pixels[i - 1]);\r\n                }\r\n\r\n                for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n                    curr = scale.getPixelForTick(i);\r\n                    min = i > 0 ? Math.min(min, curr - prev) : min;\r\n                    prev = curr;\r\n                }\r\n\r\n                return min;\r\n            }\r\n\r\n            /**\r\n             * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\r\n             * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\r\n             * mode currently always generates bars equally sized (until we introduce scriptable options?).\r\n             * @private\r\n             */\r\n            function computeFitCategoryTraits(index, ruler, options) {\r\n                var thickness = options.barThickness;\r\n                var count = ruler.stackCount;\r\n                var curr = ruler.pixels[index];\r\n                var size, ratio;\r\n\r\n                if (helpers.isNullOrUndef(thickness)) {\r\n                    size = ruler.min * options.categoryPercentage;\r\n                    ratio = options.barPercentage;\r\n                } else {\r\n                    // When bar thickness is enforced, category and bar percentages are ignored.\r\n                    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\r\n                    // and deprecate barPercentage since this value is ignored when thickness is absolute.\r\n                    size = thickness * count;\r\n                    ratio = 1;\r\n                }\r\n\r\n                return {\r\n                    chunk: size / count,\r\n                    ratio: ratio,\r\n                    start: curr - (size / 2)\r\n                };\r\n            }\r\n\r\n            /**\r\n             * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\r\n             * percentage options are 1), based on the previous and following categories. This mode\r\n             * generates bars with different widths when data are not evenly spaced.\r\n             * @private\r\n             */\r\n            function computeFlexCategoryTraits(index, ruler, options) {\r\n                var pixels = ruler.pixels;\r\n                var curr = pixels[index];\r\n                var prev = index > 0 ? pixels[index - 1] : null;\r\n                var next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n                var percent = options.categoryPercentage;\r\n                var start, size;\r\n\r\n                if (prev === null) {\r\n                    // first data: its size is double based on the next point or,\r\n                    // if it's also the last data, we use the scale end extremity.\r\n                    prev = curr - (next === null ? ruler.end - curr : next - curr);\r\n                }\r\n\r\n                if (next === null) {\r\n                    // last data: its size is also double based on the previous point.\r\n                    next = curr + curr - prev;\r\n                }\r\n\r\n                start = curr - ((curr - prev) / 2) * percent;\r\n                size = ((next - prev) / 2) * percent;\r\n\r\n                return {\r\n                    chunk: size / ruler.stackCount,\r\n                    ratio: options.barPercentage,\r\n                    start: start\r\n                };\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.controllers.bar = Chart.DatasetController.extend({\r\n                    dataElementType: elements.Rectangle,\r\n\r\n                    initialize: function() {\r\n                        var me = this;\r\n                        var meta;\r\n\r\n                        Chart.DatasetController.prototype.initialize.apply(me, arguments);\r\n\r\n                        meta = me.getMeta();\r\n                        meta.stack = me.getDataset().stack;\r\n                        meta.bar = true;\r\n                    },\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var rects = me.getMeta().data;\r\n                        var i, ilen;\r\n\r\n                        me._ruler = me.getRuler();\r\n\r\n                        for (i = 0, ilen = rects.length; i < ilen; ++i) {\r\n                            me.updateElement(rects[i], i, reset);\r\n                        }\r\n                    },\r\n\r\n                    updateElement: function(rectangle, index, reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var dataset = me.getDataset();\r\n                        var custom = rectangle.custom || {};\r\n                        var rectangleOptions = chart.options.elements.rectangle;\r\n\r\n                        rectangle._xScale = me.getScaleForId(meta.xAxisID);\r\n                        rectangle._yScale = me.getScaleForId(meta.yAxisID);\r\n                        rectangle._datasetIndex = me.index;\r\n                        rectangle._index = index;\r\n\r\n                        rectangle._model = {\r\n                            datasetLabel: dataset.label,\r\n                            label: chart.data.labels[index],\r\n                            borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\r\n                            backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\r\n                            borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\r\n                            borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\r\n                        };\r\n\r\n                        me.updateElementGeometry(rectangle, index, reset);\r\n\r\n                        rectangle.pivot();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    updateElementGeometry: function(rectangle, index, reset) {\r\n                        var me = this;\r\n                        var model = rectangle._model;\r\n                        var vscale = me.getValueScale();\r\n                        var base = vscale.getBasePixel();\r\n                        var horizontal = vscale.isHorizontal();\r\n                        var ruler = me._ruler || me.getRuler();\r\n                        var vpixels = me.calculateBarValuePixels(me.index, index);\r\n                        var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\r\n\r\n                        model.horizontal = horizontal;\r\n                        model.base = reset ? base : vpixels.base;\r\n                        model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\r\n                        model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\r\n                        model.height = horizontal ? ipixels.size : undefined;\r\n                        model.width = horizontal ? undefined : ipixels.size;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScaleId: function() {\r\n                        return this.getMeta().yAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScaleId: function() {\r\n                        return this.getMeta().xAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScale: function() {\r\n                        return this.getScaleForId(this.getValueScaleId());\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScale: function() {\r\n                        return this.getScaleForId(this.getIndexScaleId());\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the stacks based on groups and bar visibility.\r\n                     * @param {Number} [last] - The dataset index\r\n                     * @returns {Array} The stack list\r\n                     * @private\r\n                     */\r\n                    _getStacks: function(last) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var scale = me.getIndexScale();\r\n                        var stacked = scale.options.stacked;\r\n                        var ilen = last === undefined ? chart.data.datasets.length : last + 1;\r\n                        var stacks = [];\r\n                        var i, meta;\r\n\r\n                        for (i = 0; i < ilen; ++i) {\r\n                            meta = chart.getDatasetMeta(i);\r\n                            if (meta.bar && chart.isDatasetVisible(i) &&\r\n                                (stacked === false ||\r\n                                    (stacked === true && stacks.indexOf(meta.stack) === -1) ||\r\n                                    (stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\r\n                                stacks.push(meta.stack);\r\n                            }\r\n                        }\r\n\r\n                        return stacks;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the effective number of stacks based on groups and bar visibility.\r\n                     * @private\r\n                     */\r\n                    getStackCount: function() {\r\n                        return this._getStacks().length;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the stack index for the given dataset based on groups and bar visibility.\r\n                     * @param {Number} [datasetIndex] - The dataset index\r\n                     * @param {String} [name] - The stack name to find\r\n                     * @returns {Number} The stack index\r\n                     * @private\r\n                     */\r\n                    getStackIndex: function(datasetIndex, name) {\r\n                        var stacks = this._getStacks(datasetIndex);\r\n                        var index = (name !== undefined)\r\n                            ? stacks.indexOf(name)\r\n                            : -1; // indexOf returns -1 if element is not present\r\n\r\n                        return (index === -1)\r\n                            ? stacks.length - 1\r\n                            : index;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getRuler: function() {\r\n                        var me = this;\r\n                        var scale = me.getIndexScale();\r\n                        var stackCount = me.getStackCount();\r\n                        var datasetIndex = me.index;\r\n                        var isHorizontal = scale.isHorizontal();\r\n                        var start = isHorizontal ? scale.left : scale.top;\r\n                        var end = start + (isHorizontal ? scale.width : scale.height);\r\n                        var pixels = [];\r\n                        var i, ilen, min;\r\n\r\n                        for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\r\n                            pixels.push(scale.getPixelForValue(null, i, datasetIndex));\r\n                        }\r\n\r\n                        min = helpers.isNullOrUndef(scale.options.barThickness)\r\n                            ? computeMinSampleSize(scale, pixels)\r\n                            : -1;\r\n\r\n                        return {\r\n                            min: min,\r\n                            pixels: pixels,\r\n                            start: start,\r\n                            end: end,\r\n                            stackCount: stackCount,\r\n                            scale: scale\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Note: pixel values are not clamped to the scale area.\r\n                     * @private\r\n                     */\r\n                    calculateBarValuePixels: function(datasetIndex, index) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var scale = me.getValueScale();\r\n                        var datasets = chart.data.datasets;\r\n                        var value = scale.getRightValue(datasets[datasetIndex].data[index]);\r\n                        var stacked = scale.options.stacked;\r\n                        var stack = meta.stack;\r\n                        var start = 0;\r\n                        var i, imeta, ivalue, base, head, size;\r\n\r\n                        if (stacked || (stacked === undefined && stack !== undefined)) {\r\n                            for (i = 0; i < datasetIndex; ++i) {\r\n                                imeta = chart.getDatasetMeta(i);\r\n\r\n                                if (imeta.bar &&\r\n                                    imeta.stack === stack &&\r\n                                    imeta.controller.getValueScaleId() === scale.id &&\r\n                                    chart.isDatasetVisible(i)) {\r\n                                    ivalue = scale.getRightValue(datasets[i].data[index]);\r\n                                    if ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\r\n                                        start += ivalue;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        base = scale.getPixelForValue(start);\r\n                        head = scale.getPixelForValue(start + value);\r\n                        size = (head - base) / 2;\r\n\r\n                        return {\r\n                            size: size,\r\n                            base: base,\r\n                            head: head,\r\n                            center: head + size / 2\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    calculateBarIndexPixels: function(datasetIndex, index, ruler) {\r\n                        var me = this;\r\n                        var options = ruler.scale.options;\r\n                        var range = options.barThickness === 'flex'\r\n                            ? computeFlexCategoryTraits(index, ruler, options)\r\n                            : computeFitCategoryTraits(index, ruler, options);\r\n\r\n                        var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\r\n                        var center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\r\n                        var size = Math.min(\r\n                            helpers.valueOrDefault(options.maxBarThickness, Infinity),\r\n                            range.chunk * range.ratio);\r\n\r\n                        return {\r\n                            base: center - size / 2,\r\n                            head: center + size / 2,\r\n                            center: center,\r\n                            size: size\r\n                        };\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var scale = me.getValueScale();\r\n                        var rects = me.getMeta().data;\r\n                        var dataset = me.getDataset();\r\n                        var ilen = rects.length;\r\n                        var i = 0;\r\n\r\n                        helpers.canvas.clipArea(chart.ctx, chart.chartArea);\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            if (!isNaN(scale.getRightValue(dataset.data[i]))) {\r\n                                rects[i].draw();\r\n                            }\r\n                        }\r\n\r\n                        helpers.canvas.unclipArea(chart.ctx);\r\n                    },\r\n\r\n                    setHoverStyle: function(rectangle) {\r\n                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n                        var index = rectangle._index;\r\n                        var custom = rectangle.custom || {};\r\n                        var model = rectangle._model;\r\n\r\n                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    removeHoverStyle: function(rectangle) {\r\n                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n                        var index = rectangle._index;\r\n                        var custom = rectangle.custom || {};\r\n                        var model = rectangle._model;\r\n                        var rectangleElementOptions = this.chart.options.elements.rectangle;\r\n\r\n                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\r\n                        model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\r\n                        model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\r\n                    }\r\n                });\r\n\r\n                Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScaleId: function() {\r\n                        return this.getMeta().xAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScaleId: function() {\r\n                        return this.getMeta().yAxisID;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 11: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('doughnut', {\r\n                animation: {\r\n                    // Boolean - Whether we animate the rotation of the Doughnut\r\n                    animateRotate: true,\r\n                    // Boolean - Whether we animate scaling the Doughnut from the centre\r\n                    animateScale: false\r\n                },\r\n                hover: {\r\n                    mode: 'single'\r\n                },\r\n                legendCallback: function(chart) {\r\n                    var text = [];\r\n                    text.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n                    var data = chart.data;\r\n                    var datasets = data.datasets;\r\n                    var labels = data.labels;\r\n\r\n                    if (datasets.length) {\r\n                        for (var i = 0; i < datasets[0].data.length; ++i) {\r\n                            text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\r\n                            if (labels[i]) {\r\n                                text.push(labels[i]);\r\n                            }\r\n                            text.push('</li>');\r\n                        }\r\n                    }\r\n\r\n                    text.push('</ul>');\r\n                    return text.join('');\r\n                },\r\n                legend: {\r\n                    labels: {\r\n                        generateLabels: function(chart) {\r\n                            var data = chart.data;\r\n                            if (data.labels.length && data.datasets.length) {\r\n                                return data.labels.map(function(label, i) {\r\n                                    var meta = chart.getDatasetMeta(0);\r\n                                    var ds = data.datasets[0];\r\n                                    var arc = meta.data[i];\r\n                                    var custom = arc && arc.custom || {};\r\n                                    var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n                                    var arcOpts = chart.options.elements.arc;\r\n                                    var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n                                    var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n                                    var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\r\n                                    return {\r\n                                        text: label,\r\n                                        fillStyle: fill,\r\n                                        strokeStyle: stroke,\r\n                                        lineWidth: bw,\r\n                                        hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n                                        // Extra data used for toggling the correct item\r\n                                        index: i\r\n                                    };\r\n                                });\r\n                            }\r\n                            return [];\r\n                        }\r\n                    },\r\n\r\n                    onClick: function(e, legendItem) {\r\n                        var index = legendItem.index;\r\n                        var chart = this.chart;\r\n                        var i, ilen, meta;\r\n\r\n                        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n                            meta = chart.getDatasetMeta(i);\r\n                            // toggle visibility of index if exists\r\n                            if (meta.data[index]) {\r\n                                meta.data[index].hidden = !meta.data[index].hidden;\r\n                            }\r\n                        }\r\n\r\n                        chart.update();\r\n                    }\r\n                },\r\n\r\n                // The percentage of the chart that we cut out of the middle.\r\n                cutoutPercentage: 50,\r\n\r\n                // The rotation of the chart, where the first data arc begins.\r\n                rotation: Math.PI * -0.5,\r\n\r\n                // The total circumference of the chart.\r\n                circumference: Math.PI * 2.0,\r\n\r\n                // Need to override these to give a nice default\r\n                tooltips: {\r\n                    callbacks: {\r\n                        title: function() {\r\n                            return '';\r\n                        },\r\n                        label: function(tooltipItem, data) {\r\n                            var dataLabel = data.labels[tooltipItem.index];\r\n                            var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\r\n                            if (helpers.isArray(dataLabel)) {\r\n                                // show value on first line of multiline label\r\n                                // need to clone because we are changing the value\r\n                                dataLabel = dataLabel.slice();\r\n                                dataLabel[0] += value;\r\n                            } else {\r\n                                dataLabel += value;\r\n                            }\r\n\r\n                            return dataLabel;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            defaults._set('pie', helpers.clone(defaults.doughnut));\r\n            defaults._set('pie', {\r\n                cutoutPercentage: 0\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\r\n                    dataElementType: elements.Arc,\r\n\r\n                    linkScales: helpers.noop,\r\n\r\n                    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\r\n                    getRingIndex: function(datasetIndex) {\r\n                        var ringIndex = 0;\r\n\r\n                        for (var j = 0; j < datasetIndex; ++j) {\r\n                            if (this.chart.isDatasetVisible(j)) {\r\n                                ++ringIndex;\r\n                            }\r\n                        }\r\n\r\n                        return ringIndex;\r\n                    },\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var chartArea = chart.chartArea;\r\n                        var opts = chart.options;\r\n                        var arcOpts = opts.elements.arc;\r\n                        var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\r\n                        var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\r\n                        var minSize = Math.min(availableWidth, availableHeight);\r\n                        var offset = { x: 0, y: 0 };\r\n                        var meta = me.getMeta();\r\n                        var cutoutPercentage = opts.cutoutPercentage;\r\n                        var circumference = opts.circumference;\r\n\r\n                        // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\r\n                        if (circumference < Math.PI * 2.0) {\r\n                            var startAngle = opts.rotation % (Math.PI * 2.0);\r\n                            startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\r\n                            var endAngle = startAngle + circumference;\r\n                            var start = { x: Math.cos(startAngle), y: Math.sin(startAngle) };\r\n                            var end = { x: Math.cos(endAngle), y: Math.sin(endAngle) };\r\n                            var contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\r\n                            var contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\r\n                            var contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\r\n                            var contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\r\n                            var cutout = cutoutPercentage / 100.0;\r\n                            var min = { x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout)) };\r\n                            var max = { x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout)) };\r\n                            var size = { width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5 };\r\n                            minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\r\n                            offset = { x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5 };\r\n                        }\r\n\r\n                        chart.borderWidth = me.getMaxBorderWidth(meta.data);\r\n                        chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\r\n                        chart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\r\n                        chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n                        chart.offsetX = offset.x * chart.outerRadius;\r\n                        chart.offsetY = offset.y * chart.outerRadius;\r\n\r\n                        meta.total = me.calculateTotal();\r\n\r\n                        me.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\r\n                        me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\r\n\r\n                        helpers.each(meta.data, function(arc, index) {\r\n                            me.updateElement(arc, index, reset);\r\n                        });\r\n                    },\r\n\r\n                    updateElement: function(arc, index, reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var chartArea = chart.chartArea;\r\n                        var opts = chart.options;\r\n                        var animationOpts = opts.animation;\r\n                        var centerX = (chartArea.left + chartArea.right) / 2;\r\n                        var centerY = (chartArea.top + chartArea.bottom) / 2;\r\n                        var startAngle = opts.rotation; // non reset case handled later\r\n                        var endAngle = opts.rotation; // non reset case handled later\r\n                        var dataset = me.getDataset();\r\n                        var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\r\n                        var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\r\n                        var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\r\n                        var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n\r\n                        helpers.extend(arc, {\r\n                            // Utility\r\n                            _datasetIndex: me.index,\r\n                            _index: index,\r\n\r\n                            // Desired view properties\r\n                            _model: {\r\n                                x: centerX + chart.offsetX,\r\n                                y: centerY + chart.offsetY,\r\n                                startAngle: startAngle,\r\n                                endAngle: endAngle,\r\n                                circumference: circumference,\r\n                                outerRadius: outerRadius,\r\n                                innerRadius: innerRadius,\r\n                                label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\r\n                            }\r\n                        });\r\n\r\n                        var model = arc._model;\r\n                        // Resets the visual styles\r\n                        this.removeHoverStyle(arc);\r\n\r\n                        // Set correct angles if not resetting\r\n                        if (!reset || !animationOpts.animateRotate) {\r\n                            if (index === 0) {\r\n                                model.startAngle = opts.rotation;\r\n                            } else {\r\n                                model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\r\n                            }\r\n\r\n                            model.endAngle = model.startAngle + model.circumference;\r\n                        }\r\n\r\n                        arc.pivot();\r\n                    },\r\n\r\n                    removeHoverStyle: function(arc) {\r\n                        Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n                    },\r\n\r\n                    calculateTotal: function() {\r\n                        var dataset = this.getDataset();\r\n                        var meta = this.getMeta();\r\n                        var total = 0;\r\n                        var value;\r\n\r\n                        helpers.each(meta.data, function(element, index) {\r\n                            value = dataset.data[index];\r\n                            if (!isNaN(value) && !element.hidden) {\r\n                                total += Math.abs(value);\r\n                            }\r\n                        });\r\n\r\n                        /* if (total === 0) {\r\n                            total = NaN;\r\n                        }*/\r\n\r\n                        return total;\r\n                    },\r\n\r\n                    calculateCircumference: function(value) {\r\n                        var total = this.getMeta().total;\r\n                        if (total > 0 && !isNaN(value)) {\r\n                            return (Math.PI * 2.0) * (Math.abs(value) / total);\r\n                        }\r\n                        return 0;\r\n                    },\r\n\r\n                    // gets the max border or hover width to properly scale pie charts\r\n                    getMaxBorderWidth: function(arcs) {\r\n                        var max = 0;\r\n                        var index = this.index;\r\n                        var length = arcs.length;\r\n                        var borderWidth;\r\n                        var hoverWidth;\r\n\r\n                        for (var i = 0; i < length; i++) {\r\n                            borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\r\n                            hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\r\n\r\n                            max = borderWidth > max ? borderWidth : max;\r\n                            max = hoverWidth > max ? hoverWidth : max;\r\n                        }\r\n                        return max;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 12: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('line', {\r\n                showLines: true,\r\n                spanGaps: false,\r\n\r\n                hover: {\r\n                    mode: 'label'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'category',\r\n                        id: 'x-axis-0'\r\n                    }],\r\n                    yAxes: [{\r\n                        type: 'linear',\r\n                        id: 'y-axis-0'\r\n                    }]\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                function lineEnabled(dataset, options) {\r\n                    return helpers.valueOrDefault(dataset.showLine, options.showLines);\r\n                }\r\n\r\n                Chart.controllers.line = Chart.DatasetController.extend({\r\n                    datasetElementType: elements.Line,\r\n\r\n                    dataElementType: elements.Point,\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var line = meta.dataset;\r\n                        var points = meta.data || [];\r\n                        var options = me.chart.options;\r\n                        var lineElementOptions = options.elements.line;\r\n                        var scale = me.getScaleForId(meta.yAxisID);\r\n                        var i, ilen, custom;\r\n                        var dataset = me.getDataset();\r\n                        var showLine = lineEnabled(dataset, options);\r\n\r\n                        // Update Line\r\n                        if (showLine) {\r\n                            custom = line.custom || {};\r\n\r\n                            // Compatibility: If the properties are defined with only the old name, use those values\r\n                            if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n                                dataset.lineTension = dataset.tension;\r\n                            }\r\n\r\n                            // Utility\r\n                            line._scale = scale;\r\n                            line._datasetIndex = me.index;\r\n                            // Data\r\n                            line._children = points;\r\n                            // Model\r\n                            line._model = {\r\n                                // Appearance\r\n                                // The default behavior of lines is to break at null values, according\r\n                                // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\r\n                                // This option gives lines the ability to span gaps\r\n                                spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\r\n                                tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n                                backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n                                borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n                                borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n                                borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n                                borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n                                borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n                                borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n                                fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n                                steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\r\n                                cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\r\n                            };\r\n\r\n                            line.pivot();\r\n                        }\r\n\r\n                        // Update Points\r\n                        for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                            me.updateElement(points[i], i, reset);\r\n                        }\r\n\r\n                        if (showLine && line._model.tension !== 0) {\r\n                            me.updateBezierControlPoints();\r\n                        }\r\n\r\n                        // Now pivot the point for animation\r\n                        for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                            points[i].pivot();\r\n                        }\r\n                    },\r\n\r\n                    getPointBackgroundColor: function(point, index) {\r\n                        var backgroundColor = this.chart.options.elements.point.backgroundColor;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (custom.backgroundColor) {\r\n                            backgroundColor = custom.backgroundColor;\r\n                        } else if (dataset.pointBackgroundColor) {\r\n                            backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\r\n                        } else if (dataset.backgroundColor) {\r\n                            backgroundColor = dataset.backgroundColor;\r\n                        }\r\n\r\n                        return backgroundColor;\r\n                    },\r\n\r\n                    getPointBorderColor: function(point, index) {\r\n                        var borderColor = this.chart.options.elements.point.borderColor;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (custom.borderColor) {\r\n                            borderColor = custom.borderColor;\r\n                        } else if (dataset.pointBorderColor) {\r\n                            borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\r\n                        } else if (dataset.borderColor) {\r\n                            borderColor = dataset.borderColor;\r\n                        }\r\n\r\n                        return borderColor;\r\n                    },\r\n\r\n                    getPointBorderWidth: function(point, index) {\r\n                        var borderWidth = this.chart.options.elements.point.borderWidth;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (!isNaN(custom.borderWidth)) {\r\n                            borderWidth = custom.borderWidth;\r\n                        } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\r\n                            borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\r\n                        } else if (!isNaN(dataset.borderWidth)) {\r\n                            borderWidth = dataset.borderWidth;\r\n                        }\r\n\r\n                        return borderWidth;\r\n                    },\r\n\r\n                    updateElement: function(point, index, reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var custom = point.custom || {};\r\n                        var dataset = me.getDataset();\r\n                        var datasetIndex = me.index;\r\n                        var value = dataset.data[index];\r\n                        var yScale = me.getScaleForId(meta.yAxisID);\r\n                        var xScale = me.getScaleForId(meta.xAxisID);\r\n                        var pointOptions = me.chart.options.elements.point;\r\n                        var x, y;\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n                            dataset.pointRadius = dataset.radius;\r\n                        }\r\n                        if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\r\n                            dataset.pointHitRadius = dataset.hitRadius;\r\n                        }\r\n\r\n                        x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\r\n                        y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\r\n\r\n                        // Utility\r\n                        point._xScale = xScale;\r\n                        point._yScale = yScale;\r\n                        point._datasetIndex = datasetIndex;\r\n                        point._index = index;\r\n\r\n                        // Desired view properties\r\n                        point._model = {\r\n                            x: x,\r\n                            y: y,\r\n                            skip: custom.skip || isNaN(x) || isNaN(y),\r\n                            // Appearance\r\n                            radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\r\n                            pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\r\n                            backgroundColor: me.getPointBackgroundColor(point, index),\r\n                            borderColor: me.getPointBorderColor(point, index),\r\n                            borderWidth: me.getPointBorderWidth(point, index),\r\n                            tension: meta.dataset._model ? meta.dataset._model.tension : 0,\r\n                            steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\r\n                            // Tooltip\r\n                            hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\r\n                        };\r\n                    },\r\n\r\n                    calculatePointY: function(value, index, datasetIndex) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var yScale = me.getScaleForId(meta.yAxisID);\r\n                        var sumPos = 0;\r\n                        var sumNeg = 0;\r\n                        var i, ds, dsMeta;\r\n\r\n                        if (yScale.options.stacked) {\r\n                            for (i = 0; i < datasetIndex; i++) {\r\n                                ds = chart.data.datasets[i];\r\n                                dsMeta = chart.getDatasetMeta(i);\r\n                                if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\r\n                                    var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\r\n                                    if (stackedRightValue < 0) {\r\n                                        sumNeg += stackedRightValue || 0;\r\n                                    } else {\r\n                                        sumPos += stackedRightValue || 0;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            var rightValue = Number(yScale.getRightValue(value));\r\n                            if (rightValue < 0) {\r\n                                return yScale.getPixelForValue(sumNeg + rightValue);\r\n                            }\r\n                            return yScale.getPixelForValue(sumPos + rightValue);\r\n                        }\r\n\r\n                        return yScale.getPixelForValue(value);\r\n                    },\r\n\r\n                    updateBezierControlPoints: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var area = me.chart.chartArea;\r\n                        var points = (meta.data || []);\r\n                        var i, ilen, point, model, controlPoints;\r\n\r\n                        // Only consider points that are drawn in case the spanGaps option is used\r\n                        if (meta.dataset._model.spanGaps) {\r\n                            points = points.filter(function(pt) {\r\n                                return !pt._model.skip;\r\n                            });\r\n                        }\r\n\r\n                        function capControlPoint(pt, min, max) {\r\n                            return Math.max(Math.min(pt, max), min);\r\n                        }\r\n\r\n                        if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\r\n                            helpers.splineCurveMonotone(points);\r\n                        } else {\r\n                            for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                                point = points[i];\r\n                                model = point._model;\r\n                                controlPoints = helpers.splineCurve(\r\n                                    helpers.previousItem(points, i)._model,\r\n                                    model,\r\n                                    helpers.nextItem(points, i)._model,\r\n                                    meta.dataset._model.tension\r\n                                );\r\n                                model.controlPointPreviousX = controlPoints.previous.x;\r\n                                model.controlPointPreviousY = controlPoints.previous.y;\r\n                                model.controlPointNextX = controlPoints.next.x;\r\n                                model.controlPointNextY = controlPoints.next.y;\r\n                            }\r\n                        }\r\n\r\n                        if (me.chart.options.elements.line.capBezierPoints) {\r\n                            for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                                model = points[i]._model;\r\n                                model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\r\n                                model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\r\n                                model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\r\n                                model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var points = meta.data || [];\r\n                        var area = chart.chartArea;\r\n                        var ilen = points.length;\r\n                        var i = 0;\r\n\r\n                        helpers.canvas.clipArea(chart.ctx, area);\r\n\r\n                        if (lineEnabled(me.getDataset(), chart.options)) {\r\n                            meta.dataset.draw();\r\n                        }\r\n\r\n                        helpers.canvas.unclipArea(chart.ctx);\r\n\r\n                        // Draw the points\r\n                        for (; i < ilen; ++i) {\r\n                            points[i].draw(area);\r\n                        }\r\n                    },\r\n\r\n                    setHoverStyle: function(point) {\r\n                        // Point\r\n                        var dataset = this.chart.data.datasets[point._datasetIndex];\r\n                        var index = point._index;\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n\r\n                        model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n                        model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    removeHoverStyle: function(point) {\r\n                        var me = this;\r\n                        var dataset = me.chart.data.datasets[point._datasetIndex];\r\n                        var index = point._index;\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n                            dataset.pointRadius = dataset.radius;\r\n                        }\r\n\r\n                        model.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\r\n                        model.backgroundColor = me.getPointBackgroundColor(point, index);\r\n                        model.borderColor = me.getPointBorderColor(point, index);\r\n                        model.borderWidth = me.getPointBorderWidth(point, index);\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 13: [function(require, module, exports) {\r\n            /* global window: false */\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                animation: {\r\n                    duration: 1000,\r\n                    easing: 'easeOutQuart',\r\n                    onProgress: helpers.noop,\r\n                    onComplete: helpers.noop\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Animation = Element.extend({\r\n                    chart: null, // the animation associated chart instance\r\n                    currentStep: 0, // the current animation step\r\n                    numSteps: 60, // default number of steps\r\n                    easing: '', // the easing to use for this animation\r\n                    render: null, // render function used by the animation service\r\n\r\n                    onAnimationProgress: null, // user specified callback to fire on each step of the animation\r\n                    onAnimationComplete: null, // user specified callback to fire when the animation finishes\r\n                });\r\n\r\n                Chart.animationService = {\r\n                    frameDuration: 17,\r\n                    animations: [],\r\n                    dropFrames: 0,\r\n                    request: null,\r\n\r\n                    /**\r\n                     * @param {Chart} chart - The chart to animate.\r\n                     * @param {Chart.Animation} animation - The animation that we will animate.\r\n                     * @param {Number} duration - The animation duration in ms.\r\n                     * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\r\n                     */\r\n                    addAnimation: function(chart, animation, duration, lazy) {\r\n                        var animations = this.animations;\r\n                        var i, ilen;\r\n\r\n                        animation.chart = chart;\r\n\r\n                        if (!lazy) {\r\n                            chart.animating = true;\r\n                        }\r\n\r\n                        for (i = 0, ilen = animations.length; i < ilen; ++i) {\r\n                            if (animations[i].chart === chart) {\r\n                                animations[i] = animation;\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        animations.push(animation);\r\n\r\n                        // If there are no animations queued, manually kickstart a digest, for lack of a better word\r\n                        if (animations.length === 1) {\r\n                            this.requestAnimationFrame();\r\n                        }\r\n                    },\r\n\r\n                    cancelAnimation: function(chart) {\r\n                        var index = helpers.findIndex(this.animations, function(animation) {\r\n                            return animation.chart === chart;\r\n                        });\r\n\r\n                        if (index !== -1) {\r\n                            this.animations.splice(index, 1);\r\n                            chart.animating = false;\r\n                        }\r\n                    },\r\n\r\n                    requestAnimationFrame: function() {\r\n                        var me = this;\r\n                        if (me.request === null) {\r\n                            // Skip animation frame requests until the active one is executed.\r\n                            // This can happen when processing mouse events, e.g. 'mousemove'\r\n                            // and 'mouseout' events will trigger multiple renders.\r\n                            me.request = helpers.requestAnimFrame.call(window, function() {\r\n                                me.request = null;\r\n                                me.startDigest();\r\n                            });\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    startDigest: function() {\r\n                        var me = this;\r\n                        var startTime = Date.now();\r\n                        var framesToDrop = 0;\r\n\r\n                        if (me.dropFrames > 1) {\r\n                            framesToDrop = Math.floor(me.dropFrames);\r\n                            me.dropFrames = me.dropFrames % 1;\r\n                        }\r\n\r\n                        me.advance(1 + framesToDrop);\r\n\r\n                        var endTime = Date.now();\r\n\r\n                        me.dropFrames += (endTime - startTime) / me.frameDuration;\r\n\r\n                        // Do we have more stuff to animate?\r\n                        if (me.animations.length > 0) {\r\n                            me.requestAnimationFrame();\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    advance: function(count) {\r\n                        var animations = this.animations;\r\n                        var animation, chart;\r\n                        var i = 0;\r\n\r\n                        while (i < animations.length) {\r\n                            animation = animations[i];\r\n                            chart = animation.chart;\r\n\r\n                            animation.currentStep = (animation.currentStep || 0) + count;\r\n                            animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\r\n\r\n                            helpers.callback(animation.render, [chart, animation], chart);\r\n                            helpers.callback(animation.onAnimationProgress, [animation], chart);\r\n\r\n                            if (animation.currentStep >= animation.numSteps) {\r\n                                helpers.callback(animation.onAnimationComplete, [animation], chart);\r\n                                chart.animating = false;\r\n                                animations.splice(i, 1);\r\n                            } else {\r\n                                ++i;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.Animation instead\r\n                 * @prop Chart.Animation#animationObject\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 */\r\n                Object.defineProperty(Chart.Animation.prototype, 'animationObject', {\r\n                    get: function() {\r\n                        return this;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.Animation#chart instead\r\n                 * @prop Chart.Animation#chartInstance\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 */\r\n                Object.defineProperty(Chart.Animation.prototype, 'chartInstance', {\r\n                    get: function() {\r\n                        return this.chart;\r\n                    },\r\n                    set: function(value) {\r\n                        this.chart = value;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 14: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var Interaction = require(19);\r\n            var layouts = require(21);\r\n            var platform = require(39);\r\n            var plugins = require(22);\r\n\r\n            module.exports = function(Chart) {\r\n                // Create a dictionary of chart types, to allow for extension of existing types\r\n                Chart.types = {};\r\n\r\n                // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\r\n                // Destroy method on the chart will remove the instance of the chart from this reference.\r\n                Chart.instances = {};\r\n\r\n                // Controllers available for dataset visualization eg. bar, line, slice, etc.\r\n                Chart.controllers = {};\r\n\r\n                /**\r\n                 * Initializes the given config with global and chart default values.\r\n                 */\r\n                function initConfig(config) {\r\n                    config = config || {};\r\n\r\n                    // Do NOT use configMerge() for the data object because this method merges arrays\r\n                    // and so would change references to labels and datasets, preventing data updates.\r\n                    var data = config.data = config.data || {};\r\n                    data.datasets = data.datasets || [];\r\n                    data.labels = data.labels || [];\r\n\r\n                    config.options = helpers.configMerge(\r\n                        defaults.global,\r\n                        defaults[config.type],\r\n                        config.options || {});\r\n\r\n                    return config;\r\n                }\r\n\r\n                /**\r\n                 * Updates the config of the chart\r\n                 * @param chart {Chart} chart to update the options for\r\n                 */\r\n                function updateConfig(chart) {\r\n                    var newOptions = chart.options;\r\n\r\n                    helpers.each(chart.scales, function(scale) {\r\n                        layouts.removeBox(chart, scale);\r\n                    });\r\n\r\n                    newOptions = helpers.configMerge(\r\n                        Chart.defaults.global,\r\n                        Chart.defaults[chart.config.type],\r\n                        newOptions);\r\n\r\n                    chart.options = chart.config.options = newOptions;\r\n                    chart.ensureScalesHaveIDs();\r\n                    chart.buildOrUpdateScales();\r\n                    // Tooltip\r\n                    chart.tooltip._options = newOptions.tooltips;\r\n                    chart.tooltip.initialize();\r\n                }\r\n\r\n                function positionIsHorizontal(position) {\r\n                    return position === 'top' || position === 'bottom';\r\n                }\r\n\r\n                helpers.extend(Chart.prototype, /** @lends Chart */ {\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    construct: function(item, config) {\r\n                        var me = this;\r\n\r\n                        config = initConfig(config);\r\n\r\n                        var context = platform.acquireContext(item, config);\r\n                        var canvas = context && context.canvas;\r\n                        var height = canvas && canvas.height;\r\n                        var width = canvas && canvas.width;\r\n\r\n                        me.id = helpers.uid();\r\n                        me.ctx = context;\r\n                        me.canvas = canvas;\r\n                        me.config = config;\r\n                        me.width = width;\r\n                        me.height = height;\r\n                        me.aspectRatio = height ? width / height : null;\r\n                        me.options = config.options;\r\n                        me._bufferedRender = false;\r\n\r\n                        /**\r\n                         * Provided for backward compatibility, Chart and Chart.Controller have been merged,\r\n                         * the \"instance\" still need to be defined since it might be called from plugins.\r\n                         * @prop Chart#chart\r\n                         * @deprecated since version 2.6.0\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        me.chart = me;\r\n                        me.controller = me; // chart.chart.controller #inception\r\n\r\n                        // Add the chart instance to the global namespace\r\n                        Chart.instances[me.id] = me;\r\n\r\n                        // Define alias to the config data: `chart.data === chart.config.data`\r\n                        Object.defineProperty(me, 'data', {\r\n                            get: function() {\r\n                                return me.config.data;\r\n                            },\r\n                            set: function(value) {\r\n                                me.config.data = value;\r\n                            }\r\n                        });\r\n\r\n                        if (!context || !canvas) {\r\n                            // The given item is not a compatible context2d element, let's return before finalizing\r\n                            // the chart initialization but after setting basic chart / controller properties that\r\n                            // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\r\n                            // https://github.com/chartjs/Chart.js/issues/2807\r\n                            console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n                            return;\r\n                        }\r\n\r\n                        me.initialize();\r\n                        me.update();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    initialize: function() {\r\n                        var me = this;\r\n\r\n                        // Before init plugin notification\r\n                        plugins.notify(me, 'beforeInit');\r\n\r\n                        helpers.retinaScale(me, me.options.devicePixelRatio);\r\n\r\n                        me.bindEvents();\r\n\r\n                        if (me.options.responsive) {\r\n                            // Initial resize before chart draws (must be silent to preserve initial animations).\r\n                            me.resize(true);\r\n                        }\r\n\r\n                        // Make sure scales have IDs and are built before we build any controllers.\r\n                        me.ensureScalesHaveIDs();\r\n                        me.buildOrUpdateScales();\r\n                        me.initToolTip();\r\n\r\n                        // After init plugin notification\r\n                        plugins.notify(me, 'afterInit');\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    clear: function() {\r\n                        helpers.canvas.clear(this);\r\n                        return this;\r\n                    },\r\n\r\n                    stop: function() {\r\n                        // Stops any current animation loop occurring\r\n                        Chart.animationService.cancelAnimation(this);\r\n                        return this;\r\n                    },\r\n\r\n                    resize: function(silent) {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        var canvas = me.canvas;\r\n                        var aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\r\n\r\n                        // the canvas render width and height will be casted to integers so make sure that\r\n                        // the canvas display style uses the same integer values to avoid blurring effect.\r\n\r\n                        // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\r\n                        var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\r\n                        var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\r\n\r\n                        if (me.width === newWidth && me.height === newHeight) {\r\n                            return;\r\n                        }\r\n\r\n                        canvas.width = me.width = newWidth;\r\n                        canvas.height = me.height = newHeight;\r\n                        canvas.style.width = newWidth + 'px';\r\n                        canvas.style.height = newHeight + 'px';\r\n\r\n                        helpers.retinaScale(me, options.devicePixelRatio);\r\n\r\n                        if (!silent) {\r\n                            // Notify any plugins about the resize\r\n                            var newSize = { width: newWidth, height: newHeight };\r\n                            plugins.notify(me, 'resize', [newSize]);\r\n\r\n                            // Notify of resize\r\n                            if (me.options.onResize) {\r\n                                me.options.onResize(me, newSize);\r\n                            }\r\n\r\n                            me.stop();\r\n                            me.update(me.options.responsiveAnimationDuration);\r\n                        }\r\n                    },\r\n\r\n                    ensureScalesHaveIDs: function() {\r\n                        var options = this.options;\r\n                        var scalesOptions = options.scales || {};\r\n                        var scaleOptions = options.scale;\r\n\r\n                        helpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\r\n                            xAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\r\n                        });\r\n\r\n                        helpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\r\n                            yAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\r\n                        });\r\n\r\n                        if (scaleOptions) {\r\n                            scaleOptions.id = scaleOptions.id || 'scale';\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Builds a map of scale ID to scale object for future lookup.\r\n                     */\r\n                    buildOrUpdateScales: function() {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        var scales = me.scales || {};\r\n                        var items = [];\r\n                        var updated = Object.keys(scales).reduce(function(obj, id) {\r\n                            obj[id] = false;\r\n                            return obj;\r\n                        }, {});\r\n\r\n                        if (options.scales) {\r\n                            items = items.concat(\r\n                                (options.scales.xAxes || []).map(function(xAxisOptions) {\r\n                                    return { options: xAxisOptions, dtype: 'category', dposition: 'bottom' };\r\n                                }),\r\n                                (options.scales.yAxes || []).map(function(yAxisOptions) {\r\n                                    return { options: yAxisOptions, dtype: 'linear', dposition: 'left' };\r\n                                })\r\n                            );\r\n                        }\r\n\r\n                        if (options.scale) {\r\n                            items.push({\r\n                                options: options.scale,\r\n                                dtype: 'radialLinear',\r\n                                isDefault: true,\r\n                                dposition: 'chartArea'\r\n                            });\r\n                        }\r\n\r\n                        helpers.each(items, function(item) {\r\n                            var scaleOptions = item.options;\r\n                            var id = scaleOptions.id;\r\n                            var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\r\n\r\n                            if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\r\n                                scaleOptions.position = item.dposition;\r\n                            }\r\n\r\n                            updated[id] = true;\r\n                            var scale = null;\r\n                            if (id in scales && scales[id].type === scaleType) {\r\n                                scale = scales[id];\r\n                                scale.options = scaleOptions;\r\n                                scale.ctx = me.ctx;\r\n                                scale.chart = me;\r\n                            } else {\r\n                                var scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\r\n                                if (!scaleClass) {\r\n                                    return;\r\n                                }\r\n                                scale = new scaleClass({\r\n                                    id: id,\r\n                                    type: scaleType,\r\n                                    options: scaleOptions,\r\n                                    ctx: me.ctx,\r\n                                    chart: me\r\n                                });\r\n                                scales[scale.id] = scale;\r\n                            }\r\n\r\n                            scale.mergeTicksOptions();\r\n\r\n                            // TODO(SB): I think we should be able to remove this custom case (options.scale)\r\n                            // and consider it as a regular scale part of the \"scales\"\" map only! This would\r\n                            // make the logic easier and remove some useless? custom code.\r\n                            if (item.isDefault) {\r\n                                me.scale = scale;\r\n                            }\r\n                        });\r\n                        // clear up discarded scales\r\n                        helpers.each(updated, function(hasUpdated, id) {\r\n                            if (!hasUpdated) {\r\n                                delete scales[id];\r\n                            }\r\n                        });\r\n\r\n                        me.scales = scales;\r\n\r\n                        Chart.scaleService.addScalesToLayout(this);\r\n                    },\r\n\r\n                    buildOrUpdateControllers: function() {\r\n                        var me = this;\r\n                        var types = [];\r\n                        var newControllers = [];\r\n\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            var meta = me.getDatasetMeta(datasetIndex);\r\n                            var type = dataset.type || me.config.type;\r\n\r\n                            if (meta.type && meta.type !== type) {\r\n                                me.destroyDatasetMeta(datasetIndex);\r\n                                meta = me.getDatasetMeta(datasetIndex);\r\n                            }\r\n                            meta.type = type;\r\n\r\n                            types.push(meta.type);\r\n\r\n                            if (meta.controller) {\r\n                                meta.controller.updateIndex(datasetIndex);\r\n                                meta.controller.linkScales();\r\n                            } else {\r\n                                var ControllerClass = Chart.controllers[meta.type];\r\n                                if (ControllerClass === undefined) {\r\n                                    throw new Error('\"' + meta.type + '\" is not a chart type.');\r\n                                }\r\n\r\n                                meta.controller = new ControllerClass(me, datasetIndex);\r\n                                newControllers.push(meta.controller);\r\n                            }\r\n                        }, me);\r\n\r\n                        return newControllers;\r\n                    },\r\n\r\n                    /**\r\n                     * Reset the elements of all datasets\r\n                     * @private\r\n                     */\r\n                    resetElements: function() {\r\n                        var me = this;\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            me.getDatasetMeta(datasetIndex).controller.reset();\r\n                        }, me);\r\n                    },\r\n\r\n                    /**\r\n                    * Resets the chart back to it's state before the initial animation\r\n                    */\r\n                    reset: function() {\r\n                        this.resetElements();\r\n                        this.tooltip.initialize();\r\n                    },\r\n\r\n                    update: function(config) {\r\n                        var me = this;\r\n\r\n                        if (!config || typeof config !== 'object') {\r\n                            // backwards compatibility\r\n                            config = {\r\n                                duration: config,\r\n                                lazy: arguments[1]\r\n                            };\r\n                        }\r\n\r\n                        updateConfig(me);\r\n\r\n                        // plugins options references might have change, let's invalidate the cache\r\n                        // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\r\n                        plugins._invalidate(me);\r\n\r\n                        if (plugins.notify(me, 'beforeUpdate') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // In case the entire data object changed\r\n                        me.tooltip._data = me.data;\r\n\r\n                        // Make sure dataset controllers are updated and new controllers are reset\r\n                        var newControllers = me.buildOrUpdateControllers();\r\n\r\n                        // Make sure all dataset controllers have correct meta data counts\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\r\n                        }, me);\r\n\r\n                        me.updateLayout();\r\n\r\n                        // Can only reset the new controllers after the scales have been updated\r\n                        if (me.options.animation && me.options.animation.duration) {\r\n                            helpers.each(newControllers, function(controller) {\r\n                                controller.reset();\r\n                            });\r\n                        }\r\n\r\n                        me.updateDatasets();\r\n\r\n                        // Need to reset tooltip in case it is displayed with elements that are removed\r\n                        // after update.\r\n                        me.tooltip.initialize();\r\n\r\n                        // Last active contains items that were previously in the tooltip.\r\n                        // When we reset the tooltip, we need to clear it\r\n                        me.lastActive = [];\r\n\r\n                        // Do this before render so that any plugins that need final scale updates can use it\r\n                        plugins.notify(me, 'afterUpdate');\r\n\r\n                        if (me._bufferedRender) {\r\n                            me._bufferedRequest = {\r\n                                duration: config.duration,\r\n                                easing: config.easing,\r\n                                lazy: config.lazy\r\n                            };\r\n                        } else {\r\n                            me.render(config);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\r\n                     * hook, in which case, plugins will not be called on `afterLayout`.\r\n                     * @private\r\n                     */\r\n                    updateLayout: function() {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeLayout') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        layouts.update(this, this.width, this.height);\r\n\r\n                        /**\r\n                         * Provided for backward compatibility, use `afterLayout` instead.\r\n                         * @method IPlugin#afterScaleUpdate\r\n                         * @deprecated since version 2.5.0\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        plugins.notify(me, 'afterScaleUpdate');\r\n                        plugins.notify(me, 'afterLayout');\r\n                    },\r\n\r\n                    /**\r\n                     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\r\n                     * @private\r\n                     */\r\n                    updateDatasets: function() {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                            me.updateDataset(i);\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterDatasetsUpdate');\r\n                    },\r\n\r\n                    /**\r\n                     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\r\n                     * @private\r\n                     */\r\n                    updateDataset: function(index) {\r\n                        var me = this;\r\n                        var meta = me.getDatasetMeta(index);\r\n                        var args = {\r\n                            meta: meta,\r\n                            index: index\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        meta.controller.update();\r\n\r\n                        plugins.notify(me, 'afterDatasetUpdate', [args]);\r\n                    },\r\n\r\n                    render: function(config) {\r\n                        var me = this;\r\n\r\n                        if (!config || typeof config !== 'object') {\r\n                            // backwards compatibility\r\n                            config = {\r\n                                duration: config,\r\n                                lazy: arguments[1]\r\n                            };\r\n                        }\r\n\r\n                        var duration = config.duration;\r\n                        var lazy = config.lazy;\r\n\r\n                        if (plugins.notify(me, 'beforeRender') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        var animationOptions = me.options.animation;\r\n                        var onComplete = function(animation) {\r\n                            plugins.notify(me, 'afterRender');\r\n                            helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\r\n                        };\r\n\r\n                        if (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\r\n                            var animation = new Chart.Animation({\r\n                                numSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\r\n                                easing: config.easing || animationOptions.easing,\r\n\r\n                                render: function(chart, animationObject) {\r\n                                    var easingFunction = helpers.easing.effects[animationObject.easing];\r\n                                    var currentStep = animationObject.currentStep;\r\n                                    var stepDecimal = currentStep / animationObject.numSteps;\r\n\r\n                                    chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\r\n                                },\r\n\r\n                                onAnimationProgress: animationOptions.onProgress,\r\n                                onAnimationComplete: onComplete\r\n                            });\r\n\r\n                            Chart.animationService.addAnimation(me, animation, duration, lazy);\r\n                        } else {\r\n                            me.draw();\r\n\r\n                            // See https://github.com/chartjs/Chart.js/issues/3781\r\n                            onComplete(new Chart.Animation({ numSteps: 0, chart: me }));\r\n                        }\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    draw: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        me.clear();\r\n\r\n                        if (helpers.isNullOrUndef(easingValue)) {\r\n                            easingValue = 1;\r\n                        }\r\n\r\n                        me.transition(easingValue);\r\n\r\n                        if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Draw all the scales\r\n                        helpers.each(me.boxes, function(box) {\r\n                            box.draw(me.chartArea);\r\n                        }, me);\r\n\r\n                        if (me.scale) {\r\n                            me.scale.draw();\r\n                        }\r\n\r\n                        me.drawDatasets(easingValue);\r\n                        me._drawTooltip(easingValue);\r\n\r\n                        plugins.notify(me, 'afterDraw', [easingValue]);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    transition: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\r\n                            if (me.isDatasetVisible(i)) {\r\n                                me.getDatasetMeta(i).controller.transition(easingValue);\r\n                            }\r\n                        }\r\n\r\n                        me.tooltip.transition(easingValue);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\r\n                     * @private\r\n                     */\r\n                    drawDatasets: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Draw datasets reversed to support proper line stacking\r\n                        for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\r\n                            if (me.isDatasetVisible(i)) {\r\n                                me.drawDataset(i, easingValue);\r\n                            }\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\r\n                     * @private\r\n                     */\r\n                    drawDataset: function(index, easingValue) {\r\n                        var me = this;\r\n                        var meta = me.getDatasetMeta(index);\r\n                        var args = {\r\n                            meta: meta,\r\n                            index: index,\r\n                            easingValue: easingValue\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        meta.controller.draw(easingValue);\r\n\r\n                        plugins.notify(me, 'afterDatasetDraw', [args]);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\r\n                     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\r\n                     * @private\r\n                     */\r\n                    _drawTooltip: function(easingValue) {\r\n                        var me = this;\r\n                        var tooltip = me.tooltip;\r\n                        var args = {\r\n                            tooltip: tooltip,\r\n                            easingValue: easingValue\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        tooltip.draw();\r\n\r\n                        plugins.notify(me, 'afterTooltipDraw', [args]);\r\n                    },\r\n\r\n                    // Get the single element that was clicked on\r\n                    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\r\n                    getElementAtEvent: function(e) {\r\n                        return Interaction.modes.single(this, e);\r\n                    },\r\n\r\n                    getElementsAtEvent: function(e) {\r\n                        return Interaction.modes.label(this, e, { intersect: true });\r\n                    },\r\n\r\n                    getElementsAtXAxis: function(e) {\r\n                        return Interaction.modes['x-axis'](this, e, { intersect: true });\r\n                    },\r\n\r\n                    getElementsAtEventForMode: function(e, mode, options) {\r\n                        var method = Interaction.modes[mode];\r\n                        if (typeof method === 'function') {\r\n                            return method(this, e, options);\r\n                        }\r\n\r\n                        return [];\r\n                    },\r\n\r\n                    getDatasetAtEvent: function(e) {\r\n                        return Interaction.modes.dataset(this, e, { intersect: true });\r\n                    },\r\n\r\n                    getDatasetMeta: function(datasetIndex) {\r\n                        var me = this;\r\n                        var dataset = me.data.datasets[datasetIndex];\r\n                        if (!dataset._meta) {\r\n                            dataset._meta = {};\r\n                        }\r\n\r\n                        var meta = dataset._meta[me.id];\r\n                        if (!meta) {\r\n                            meta = dataset._meta[me.id] = {\r\n                                type: null,\r\n                                data: [],\r\n                                dataset: null,\r\n                                controller: null,\r\n                                hidden: null,\t\t\t// See isDatasetVisible() comment\r\n                                xAxisID: null,\r\n                                yAxisID: null\r\n                            };\r\n                        }\r\n\r\n                        return meta;\r\n                    },\r\n\r\n                    getVisibleDatasetCount: function() {\r\n                        var count = 0;\r\n                        for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n                            if (this.isDatasetVisible(i)) {\r\n                                count++;\r\n                            }\r\n                        }\r\n                        return count;\r\n                    },\r\n\r\n                    isDatasetVisible: function(datasetIndex) {\r\n                        var meta = this.getDatasetMeta(datasetIndex);\r\n\r\n                        // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\r\n                        // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\r\n                        return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\r\n                    },\r\n\r\n                    generateLegend: function() {\r\n                        return this.options.legendCallback(this);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    destroyDatasetMeta: function(datasetIndex) {\r\n                        var id = this.id;\r\n                        var dataset = this.data.datasets[datasetIndex];\r\n                        var meta = dataset._meta && dataset._meta[id];\r\n\r\n                        if (meta) {\r\n                            meta.controller.destroy();\r\n                            delete dataset._meta[id];\r\n                        }\r\n                    },\r\n\r\n                    destroy: function() {\r\n                        var me = this;\r\n                        var canvas = me.canvas;\r\n                        var i, ilen;\r\n\r\n                        me.stop();\r\n\r\n                        // dataset controllers need to cleanup associated data\r\n                        for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                            me.destroyDatasetMeta(i);\r\n                        }\r\n\r\n                        if (canvas) {\r\n                            me.unbindEvents();\r\n                            helpers.canvas.clear(me);\r\n                            platform.releaseContext(me.ctx);\r\n                            me.canvas = null;\r\n                            me.ctx = null;\r\n                        }\r\n\r\n                        plugins.notify(me, 'destroy');\r\n\r\n                        delete Chart.instances[me.id];\r\n                    },\r\n\r\n                    toBase64Image: function() {\r\n                        return this.canvas.toDataURL.apply(this.canvas, arguments);\r\n                    },\r\n\r\n                    initToolTip: function() {\r\n                        var me = this;\r\n                        me.tooltip = new Chart.Tooltip({\r\n                            _chart: me,\r\n                            _chartInstance: me, // deprecated, backward compatibility\r\n                            _data: me.data,\r\n                            _options: me.options.tooltips\r\n                        }, me);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    bindEvents: function() {\r\n                        var me = this;\r\n                        var listeners = me._listeners = {};\r\n                        var listener = function() {\r\n                            me.eventHandler.apply(me, arguments);\r\n                        };\r\n\r\n                        helpers.each(me.options.events, function(type) {\r\n                            platform.addEventListener(me, type, listener);\r\n                            listeners[type] = listener;\r\n                        });\r\n\r\n                        // Elements used to detect size change should not be injected for non responsive charts.\r\n                        // See https://github.com/chartjs/Chart.js/issues/2210\r\n                        if (me.options.responsive) {\r\n                            listener = function() {\r\n                                me.resize();\r\n                            };\r\n\r\n                            platform.addEventListener(me, 'resize', listener);\r\n                            listeners.resize = listener;\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    unbindEvents: function() {\r\n                        var me = this;\r\n                        var listeners = me._listeners;\r\n                        if (!listeners) {\r\n                            return;\r\n                        }\r\n\r\n                        delete me._listeners;\r\n                        helpers.each(listeners, function(listener, type) {\r\n                            platform.removeEventListener(me, type, listener);\r\n                        });\r\n                    },\r\n\r\n                    updateHoverStyle: function(elements, mode, enabled) {\r\n                        var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\r\n                        var element, i, ilen;\r\n\r\n                        for (i = 0, ilen = elements.length; i < ilen; ++i) {\r\n                            element = elements[i];\r\n                            if (element) {\r\n                                this.getDatasetMeta(element._datasetIndex).controller[method](element);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    eventHandler: function(e) {\r\n                        var me = this;\r\n                        var tooltip = me.tooltip;\r\n\r\n                        if (plugins.notify(me, 'beforeEvent', [e]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Buffer any update calls so that renders do not occur\r\n                        me._bufferedRender = true;\r\n                        me._bufferedRequest = null;\r\n\r\n                        var changed = me.handleEvent(e);\r\n                        // for smooth tooltip animations issue #4989\r\n                        // the tooltip should be the source of change\r\n                        // Animation check workaround:\r\n                        // tooltip._start will be null when tooltip isn't animating\r\n                        if (tooltip) {\r\n                            changed = tooltip._start\r\n                                ? tooltip.handleEvent(e)\r\n                                : changed | tooltip.handleEvent(e);\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterEvent', [e]);\r\n\r\n                        var bufferedRequest = me._bufferedRequest;\r\n                        if (bufferedRequest) {\r\n                            // If we have an update that was triggered, we need to do a normal render\r\n                            me.render(bufferedRequest);\r\n                        } else if (changed && !me.animating) {\r\n                            // If entering, leaving, or changing elements, animate the change via pivot\r\n                            me.stop();\r\n\r\n                            // We only need to render at this point. Updating will cause scales to be\r\n                            // recomputed generating flicker & using more memory than necessary.\r\n                            me.render(me.options.hover.animationDuration, true);\r\n                        }\r\n\r\n                        me._bufferedRender = false;\r\n                        me._bufferedRequest = null;\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    /**\r\n                     * Handle an event\r\n                     * @private\r\n                     * @param {IEvent} event the event to handle\r\n                     * @return {Boolean} true if the chart needs to re-render\r\n                     */\r\n                    handleEvent: function(e) {\r\n                        var me = this;\r\n                        var options = me.options || {};\r\n                        var hoverOptions = options.hover;\r\n                        var changed = false;\r\n\r\n                        me.lastActive = me.lastActive || [];\r\n\r\n                        // Find Active Elements for hover and tooltips\r\n                        if (e.type === 'mouseout') {\r\n                            me.active = [];\r\n                        } else {\r\n                            me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\r\n                        }\r\n\r\n                        // Invoke onHover hook\r\n                        // Need to call with native event here to not break backwards compatibility\r\n                        helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\r\n\r\n                        if (e.type === 'mouseup' || e.type === 'click') {\r\n                            if (options.onClick) {\r\n                                // Use e.native here for backwards compatibility\r\n                                options.onClick.call(me, e.native, me.active);\r\n                            }\r\n                        }\r\n\r\n                        // Remove styling for last active (even if it may still be active)\r\n                        if (me.lastActive.length) {\r\n                            me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\r\n                        }\r\n\r\n                        // Built in hover styling\r\n                        if (me.active.length && hoverOptions.mode) {\r\n                            me.updateHoverStyle(me.active, hoverOptions.mode, true);\r\n                        }\r\n\r\n                        changed = !helpers.arrayEquals(me.active, me.lastActive);\r\n\r\n                        // Remember Last Actives\r\n                        me.lastActive = me.active;\r\n\r\n                        return changed;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart instead.\r\n                 * @class Chart.Controller\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 * @private\r\n                 */\r\n                Chart.Controller = Chart;\r\n            };\r\n        }, { \"16\": 16, \"19\": 19, \"21\": 21, \"22\": 22, \"36\": 36, \"39\": 39 }], 15: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            module.exports = function(Chart) {\r\n                var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\r\n\r\n                /**\r\n                 * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\r\n                 * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\r\n                 * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\r\n                 */\r\n                function listenArrayEvents(array, listener) {\r\n                    if (array._chartjs) {\r\n                        array._chartjs.listeners.push(listener);\r\n                        return;\r\n                    }\r\n\r\n                    Object.defineProperty(array, '_chartjs', {\r\n                        configurable: true,\r\n                        enumerable: false,\r\n                        value: {\r\n                            listeners: [listener]\r\n                        }\r\n                    });\r\n\r\n                    arrayEvents.forEach(function(key) {\r\n                        var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\r\n                        var base = array[key];\r\n\r\n                        Object.defineProperty(array, key, {\r\n                            configurable: true,\r\n                            enumerable: false,\r\n                            value: function() {\r\n                                var args = Array.prototype.slice.call(arguments);\r\n                                var res = base.apply(this, args);\r\n\r\n                                helpers.each(array._chartjs.listeners, function(object) {\r\n                                    if (typeof object[method] === 'function') {\r\n                                        object[method].apply(object, args);\r\n                                    }\r\n                                });\r\n\r\n                                return res;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Removes the given array event listener and cleanup extra attached properties (such as\r\n                 * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\r\n                 */\r\n                function unlistenArrayEvents(array, listener) {\r\n                    var stub = array._chartjs;\r\n                    if (!stub) {\r\n                        return;\r\n                    }\r\n\r\n                    var listeners = stub.listeners;\r\n                    var index = listeners.indexOf(listener);\r\n                    if (index !== -1) {\r\n                        listeners.splice(index, 1);\r\n                    }\r\n\r\n                    if (listeners.length > 0) {\r\n                        return;\r\n                    }\r\n\r\n                    arrayEvents.forEach(function(key) {\r\n                        delete array[key];\r\n                    });\r\n\r\n                    delete array._chartjs;\r\n                }\r\n\r\n                // Base class for all dataset controllers (line, bar, etc)\r\n                Chart.DatasetController = function(chart, datasetIndex) {\r\n                    this.initialize(chart, datasetIndex);\r\n                };\r\n\r\n                helpers.extend(Chart.DatasetController.prototype, {\r\n                    /**\r\n                     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\r\n                     * @type {Chart.core.element}\r\n                     */\r\n                    datasetElementType: null,\r\n\r\n                    /**\r\n                     * Element type used to generate a meta data (e.g. Chart.element.Point).\r\n                     * @type {Chart.core.element}\r\n                     */\r\n                    dataElementType: null,\r\n\r\n                    initialize: function(chart, datasetIndex) {\r\n                        var me = this;\r\n                        me.chart = chart;\r\n                        me.index = datasetIndex;\r\n                        me.linkScales();\r\n                        me.addElements();\r\n                    },\r\n\r\n                    updateIndex: function(datasetIndex) {\r\n                        this.index = datasetIndex;\r\n                    },\r\n\r\n                    linkScales: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var dataset = me.getDataset();\r\n\r\n                        if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\r\n                            meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\r\n                        }\r\n                        if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\r\n                            meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\r\n                        }\r\n                    },\r\n\r\n                    getDataset: function() {\r\n                        return this.chart.data.datasets[this.index];\r\n                    },\r\n\r\n                    getMeta: function() {\r\n                        return this.chart.getDatasetMeta(this.index);\r\n                    },\r\n\r\n                    getScaleForId: function(scaleID) {\r\n                        return this.chart.scales[scaleID];\r\n                    },\r\n\r\n                    reset: function() {\r\n                        this.update(true);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    destroy: function() {\r\n                        if (this._data) {\r\n                            unlistenArrayEvents(this._data, this);\r\n                        }\r\n                    },\r\n\r\n                    createMetaDataset: function() {\r\n                        var me = this;\r\n                        var type = me.datasetElementType;\r\n                        return type && new type({\r\n                            _chart: me.chart,\r\n                            _datasetIndex: me.index\r\n                        });\r\n                    },\r\n\r\n                    createMetaData: function(index) {\r\n                        var me = this;\r\n                        var type = me.dataElementType;\r\n                        return type && new type({\r\n                            _chart: me.chart,\r\n                            _datasetIndex: me.index,\r\n                            _index: index\r\n                        });\r\n                    },\r\n\r\n                    addElements: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var data = me.getDataset().data || [];\r\n                        var metaData = meta.data;\r\n                        var i, ilen;\r\n\r\n                        for (i = 0, ilen = data.length; i < ilen; ++i) {\r\n                            metaData[i] = metaData[i] || me.createMetaData(i);\r\n                        }\r\n\r\n                        meta.dataset = meta.dataset || me.createMetaDataset();\r\n                    },\r\n\r\n                    addElementAndReset: function(index) {\r\n                        var element = this.createMetaData(index);\r\n                        this.getMeta().data.splice(index, 0, element);\r\n                        this.updateElement(element, index, true);\r\n                    },\r\n\r\n                    buildOrUpdateElements: function() {\r\n                        var me = this;\r\n                        var dataset = me.getDataset();\r\n                        var data = dataset.data || (dataset.data = []);\r\n\r\n                        // In order to correctly handle data addition/deletion animation (an thus simulate\r\n                        // real-time charts), we need to monitor these data modifications and synchronize\r\n                        // the internal meta data accordingly.\r\n                        if (me._data !== data) {\r\n                            if (me._data) {\r\n                                // This case happens when the user replaced the data array instance.\r\n                                unlistenArrayEvents(me._data, me);\r\n                            }\r\n\r\n                            listenArrayEvents(data, me);\r\n                            me._data = data;\r\n                        }\r\n\r\n                        // Re-sync meta data in case the user replaced the data array or if we missed\r\n                        // any updates and so make sure that we handle number of datapoints changing.\r\n                        me.resyncElements();\r\n                    },\r\n\r\n                    update: helpers.noop,\r\n\r\n                    transition: function(easingValue) {\r\n                        var meta = this.getMeta();\r\n                        var elements = meta.data || [];\r\n                        var ilen = elements.length;\r\n                        var i = 0;\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            elements[i].transition(easingValue);\r\n                        }\r\n\r\n                        if (meta.dataset) {\r\n                            meta.dataset.transition(easingValue);\r\n                        }\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var meta = this.getMeta();\r\n                        var elements = meta.data || [];\r\n                        var ilen = elements.length;\r\n                        var i = 0;\r\n\r\n                        if (meta.dataset) {\r\n                            meta.dataset.draw();\r\n                        }\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            elements[i].draw();\r\n                        }\r\n                    },\r\n\r\n                    removeHoverStyle: function(element, elementOpts) {\r\n                        var dataset = this.chart.data.datasets[element._datasetIndex];\r\n                        var index = element._index;\r\n                        var custom = element.custom || {};\r\n                        var valueOrDefault = helpers.valueAtIndexOrDefault;\r\n                        var model = element._model;\r\n\r\n                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\r\n                        model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\r\n                        model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\r\n                    },\r\n\r\n                    setHoverStyle: function(element) {\r\n                        var dataset = this.chart.data.datasets[element._datasetIndex];\r\n                        var index = element._index;\r\n                        var custom = element.custom || {};\r\n                        var valueOrDefault = helpers.valueAtIndexOrDefault;\r\n                        var getHoverColor = helpers.getHoverColor;\r\n                        var model = element._model;\r\n\r\n                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    resyncElements: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var data = me.getDataset().data;\r\n                        var numMeta = meta.data.length;\r\n                        var numData = data.length;\r\n\r\n                        if (numData < numMeta) {\r\n                            meta.data.splice(numData, numMeta - numData);\r\n                        } else if (numData > numMeta) {\r\n                            me.insertElements(numMeta, numData - numMeta);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    insertElements: function(start, count) {\r\n                        for (var i = 0; i < count; ++i) {\r\n                            this.addElementAndReset(start + i);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataPush: function() {\r\n                        this.insertElements(this.getDataset().data.length - 1, arguments.length);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataPop: function() {\r\n                        this.getMeta().data.pop();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataShift: function() {\r\n                        this.getMeta().data.shift();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataSplice: function(start, count) {\r\n                        this.getMeta().data.splice(start, count);\r\n                        this.insertElements(start, arguments.length - 2);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataUnshift: function() {\r\n                        this.insertElements(0, arguments.length);\r\n                    }\r\n                });\r\n\r\n                Chart.DatasetController.extend = helpers.inherits;\r\n            };\r\n        }, { \"36\": 36 }], 16: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            module.exports = {\r\n                /**\r\n                 * @private\r\n                 */\r\n                _set: function(scope, values) {\r\n                    return helpers.merge(this[scope] || (this[scope] = {}), values);\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 17: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var color = require(2);\r\n            var helpers = require(36);\r\n\r\n            function interpolate(start, view, model, ease) {\r\n                var keys = Object.keys(model);\r\n                var i, ilen, key, actual, origin, target, type, c0, c1;\r\n\r\n                for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n                    key = keys[i];\r\n\r\n                    target = model[key];\r\n\r\n                    // if a value is added to the model after pivot() has been called, the view\r\n                    // doesn't contain it, so let's initialize the view to the target value.\r\n                    if (!view.hasOwnProperty(key)) {\r\n                        view[key] = target;\r\n                    }\r\n\r\n                    actual = view[key];\r\n\r\n                    if (actual === target || key[0] === '_') {\r\n                        continue;\r\n                    }\r\n\r\n                    if (!start.hasOwnProperty(key)) {\r\n                        start[key] = actual;\r\n                    }\r\n\r\n                    origin = start[key];\r\n\r\n                    type = typeof target;\r\n\r\n                    if (type === typeof origin) {\r\n                        if (type === 'string') {\r\n                            c0 = color(origin);\r\n                            if (c0.valid) {\r\n                                c1 = color(target);\r\n                                if (c1.valid) {\r\n                                    view[key] = c1.mix(c0, ease).rgbString();\r\n                                    continue;\r\n                                }\r\n                            }\r\n                        } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\r\n                            view[key] = origin + (target - origin) * ease;\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    view[key] = target;\r\n                }\r\n            }\r\n\r\n            var Element = function(configuration) {\r\n                helpers.extend(this, configuration);\r\n                this.initialize.apply(this, arguments);\r\n            };\r\n\r\n            helpers.extend(Element.prototype, {\r\n                initialize: function() {\r\n                    this.hidden = false;\r\n                },\r\n\r\n                pivot: function() {\r\n                    var me = this;\r\n                    if (!me._view) {\r\n                        me._view = helpers.clone(me._model);\r\n                    }\r\n                    me._start = {};\r\n                    return me;\r\n                },\r\n\r\n                transition: function(ease) {\r\n                    var me = this;\r\n                    var model = me._model;\r\n                    var start = me._start;\r\n                    var view = me._view;\r\n\r\n                    // No animation -> No Transition\r\n                    if (!model || ease === 1) {\r\n                        me._view = model;\r\n                        me._start = null;\r\n                        return me;\r\n                    }\r\n\r\n                    if (!view) {\r\n                        view = me._view = {};\r\n                    }\r\n\r\n                    if (!start) {\r\n                        start = me._start = {};\r\n                    }\r\n\r\n                    interpolate(start, view, model, ease);\r\n\r\n                    return me;\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    return {\r\n                        x: this._model.x,\r\n                        y: this._model.y\r\n                    };\r\n                },\r\n\r\n                hasValue: function() {\r\n                    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\r\n                }\r\n            });\r\n\r\n            Element.extend = helpers.inherits;\r\n\r\n            module.exports = Element;\r\n        }, { \"2\": 2, \"36\": 36 }], 18: [function(require, module, exports) {\r\n            /* global window: false */\r\n            /* global document: false */\r\n            'use strict';\r\n\r\n            var color = require(2);\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n\r\n            module.exports = function(Chart) {\r\n                // -- Basic js utility methods\r\n\r\n                helpers.configMerge = function(/* objects ... */) {\r\n                    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\r\n                        merger: function(key, target, source, options) {\r\n                            var tval = target[key] || {};\r\n                            var sval = source[key];\r\n\r\n                            if (key === 'scales') {\r\n                                // scale config merging is complex. Add our own function here for that\r\n                                target[key] = helpers.scaleMerge(tval, sval);\r\n                            } else if (key === 'scale') {\r\n                                // used in polar area & radar charts since there is only one scale\r\n                                target[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\r\n                            } else {\r\n                                helpers._merger(key, target, source, options);\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n\r\n                helpers.scaleMerge = function(/* objects ... */) {\r\n                    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\r\n                        merger: function(key, target, source, options) {\r\n                            if (key === 'xAxes' || key === 'yAxes') {\r\n                                var slen = source[key].length;\r\n                                var i, type, scale;\r\n\r\n                                if (!target[key]) {\r\n                                    target[key] = [];\r\n                                }\r\n\r\n                                for (i = 0; i < slen; ++i) {\r\n                                    scale = source[key][i];\r\n                                    type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\r\n\r\n                                    if (i >= target[key].length) {\r\n                                        target[key].push({});\r\n                                    }\r\n\r\n                                    if (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\r\n                                        // new/untyped scale or type changed: let's apply the new defaults\r\n                                        // then merge source scale to correctly overwrite the defaults.\r\n                                        helpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\r\n                                    } else {\r\n                                        // scales type are the same\r\n                                        helpers.merge(target[key][i], scale);\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                helpers._merger(key, target, source, options);\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n\r\n                helpers.where = function(collection, filterCallback) {\r\n                    if (helpers.isArray(collection) && Array.prototype.filter) {\r\n                        return collection.filter(filterCallback);\r\n                    }\r\n                    var filtered = [];\r\n\r\n                    helpers.each(collection, function(item) {\r\n                        if (filterCallback(item)) {\r\n                            filtered.push(item);\r\n                        }\r\n                    });\r\n\r\n                    return filtered;\r\n                };\r\n                helpers.findIndex = Array.prototype.findIndex ?\r\n                    function(array, callback, scope) {\r\n                        return array.findIndex(callback, scope);\r\n                    } :\r\n                    function(array, callback, scope) {\r\n                        scope = scope === undefined ? array : scope;\r\n                        for (var i = 0, ilen = array.length; i < ilen; ++i) {\r\n                            if (callback.call(scope, array[i], i, array)) {\r\n                                return i;\r\n                            }\r\n                        }\r\n                        return -1;\r\n                    };\r\n                helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n                    // Default to start of the array\r\n                    if (helpers.isNullOrUndef(startIndex)) {\r\n                        startIndex = -1;\r\n                    }\r\n                    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\r\n                        var currentItem = arrayToSearch[i];\r\n                        if (filterCallback(currentItem)) {\r\n                            return currentItem;\r\n                        }\r\n                    }\r\n                };\r\n                helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n                    // Default to end of the array\r\n                    if (helpers.isNullOrUndef(startIndex)) {\r\n                        startIndex = arrayToSearch.length;\r\n                    }\r\n                    for (var i = startIndex - 1; i >= 0; i--) {\r\n                        var currentItem = arrayToSearch[i];\r\n                        if (filterCallback(currentItem)) {\r\n                            return currentItem;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // -- Math methods\r\n                helpers.isNumber = function(n) {\r\n                    return !isNaN(parseFloat(n)) && isFinite(n);\r\n                };\r\n                helpers.almostEquals = function(x, y, epsilon) {\r\n                    return Math.abs(x - y) < epsilon;\r\n                };\r\n                helpers.almostWhole = function(x, epsilon) {\r\n                    var rounded = Math.round(x);\r\n                    return (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\r\n                };\r\n                helpers.max = function(array) {\r\n                    return array.reduce(function(max, value) {\r\n                        if (!isNaN(value)) {\r\n                            return Math.max(max, value);\r\n                        }\r\n                        return max;\r\n                    }, Number.NEGATIVE_INFINITY);\r\n                };\r\n                helpers.min = function(array) {\r\n                    return array.reduce(function(min, value) {\r\n                        if (!isNaN(value)) {\r\n                            return Math.min(min, value);\r\n                        }\r\n                        return min;\r\n                    }, Number.POSITIVE_INFINITY);\r\n                };\r\n                helpers.sign = Math.sign ?\r\n                    function(x) {\r\n                        return Math.sign(x);\r\n                    } :\r\n                    function(x) {\r\n                        x = +x; // convert to a number\r\n                        if (x === 0 || isNaN(x)) {\r\n                            return x;\r\n                        }\r\n                        return x > 0 ? 1 : -1;\r\n                    };\r\n                helpers.log10 = Math.log10 ?\r\n                    function(x) {\r\n                        return Math.log10(x);\r\n                    } :\r\n                    function(x) {\r\n                        var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\r\n                        // Check for whole powers of 10,\r\n                        // which due to floating point rounding error should be corrected.\r\n                        var powerOf10 = Math.round(exponent);\r\n                        var isPowerOf10 = x === Math.pow(10, powerOf10);\r\n\r\n                        return isPowerOf10 ? powerOf10 : exponent;\r\n                    };\r\n                helpers.toRadians = function(degrees) {\r\n                    return degrees * (Math.PI / 180);\r\n                };\r\n                helpers.toDegrees = function(radians) {\r\n                    return radians * (180 / Math.PI);\r\n                };\r\n                // Gets the angle from vertical upright to the point about a centre.\r\n                helpers.getAngleFromPoint = function(centrePoint, anglePoint) {\r\n                    var distanceFromXCenter = anglePoint.x - centrePoint.x;\r\n                    var distanceFromYCenter = anglePoint.y - centrePoint.y;\r\n                    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n\r\n                    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n\r\n                    if (angle < (-0.5 * Math.PI)) {\r\n                        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\r\n                    }\r\n\r\n                    return {\r\n                        angle: angle,\r\n                        distance: radialDistanceFromCenter\r\n                    };\r\n                };\r\n                helpers.distanceBetweenPoints = function(pt1, pt2) {\r\n                    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\r\n                };\r\n                helpers.aliasPixel = function(pixelWidth) {\r\n                    return (pixelWidth % 2 === 0) ? 0 : 0.5;\r\n                };\r\n                helpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\r\n                    // Props to Rob Spencer at scaled innovation for his post on splining between points\r\n                    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\r\n\r\n                    // This function must also respect \"skipped\" points\r\n\r\n                    var previous = firstPoint.skip ? middlePoint : firstPoint;\r\n                    var current = middlePoint;\r\n                    var next = afterPoint.skip ? middlePoint : afterPoint;\r\n\r\n                    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\r\n                    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\r\n\r\n                    var s01 = d01 / (d01 + d12);\r\n                    var s12 = d12 / (d01 + d12);\r\n\r\n                    // If all points are the same, s01 & s02 will be inf\r\n                    s01 = isNaN(s01) ? 0 : s01;\r\n                    s12 = isNaN(s12) ? 0 : s12;\r\n\r\n                    var fa = t * s01; // scaling factor for triangle Ta\r\n                    var fb = t * s12;\r\n\r\n                    return {\r\n                        previous: {\r\n                            x: current.x - fa * (next.x - previous.x),\r\n                            y: current.y - fa * (next.y - previous.y)\r\n                        },\r\n                        next: {\r\n                            x: current.x + fb * (next.x - previous.x),\r\n                            y: current.y + fb * (next.y - previous.y)\r\n                        }\r\n                    };\r\n                };\r\n                helpers.EPSILON = Number.EPSILON || 1e-14;\r\n                helpers.splineCurveMonotone = function(points) {\r\n                    // This function calculates Bézier control points in a similar way than |splineCurve|,\r\n                    // but preserves monotonicity of the provided data and ensures no local extremums are added\r\n                    // between the dataset discrete points due to the interpolation.\r\n                    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\r\n\r\n                    var pointsWithTangents = (points || []).map(function(point) {\r\n                        return {\r\n                            model: point._model,\r\n                            deltaK: 0,\r\n                            mK: 0\r\n                        };\r\n                    });\r\n\r\n                    // Calculate slopes (deltaK) and initialize tangents (mK)\r\n                    var pointsLen = pointsWithTangents.length;\r\n                    var i, pointBefore, pointCurrent, pointAfter;\r\n                    for (i = 0; i < pointsLen; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        if (pointCurrent.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n                        if (pointAfter && !pointAfter.model.skip) {\r\n                            var slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\r\n\r\n                            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\r\n                            pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\r\n                        }\r\n\r\n                        if (!pointBefore || pointBefore.model.skip) {\r\n                            pointCurrent.mK = pointCurrent.deltaK;\r\n                        } else if (!pointAfter || pointAfter.model.skip) {\r\n                            pointCurrent.mK = pointBefore.deltaK;\r\n                        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\r\n                            pointCurrent.mK = 0;\r\n                        } else {\r\n                            pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\r\n                        }\r\n                    }\r\n\r\n                    // Adjust tangents to ensure monotonic properties\r\n                    var alphaK, betaK, tauK, squaredMagnitude;\r\n                    for (i = 0; i < pointsLen - 1; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        pointAfter = pointsWithTangents[i + 1];\r\n                        if (pointCurrent.model.skip || pointAfter.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\r\n                            pointCurrent.mK = pointAfter.mK = 0;\r\n                            continue;\r\n                        }\r\n\r\n                        alphaK = pointCurrent.mK / pointCurrent.deltaK;\r\n                        betaK = pointAfter.mK / pointCurrent.deltaK;\r\n                        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\r\n                        if (squaredMagnitude <= 9) {\r\n                            continue;\r\n                        }\r\n\r\n                        tauK = 3 / Math.sqrt(squaredMagnitude);\r\n                        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\r\n                        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\r\n                    }\r\n\r\n                    // Compute control points\r\n                    var deltaX;\r\n                    for (i = 0; i < pointsLen; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        if (pointCurrent.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n                        if (pointBefore && !pointBefore.model.skip) {\r\n                            deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\r\n                            pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\r\n                            pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\r\n                        }\r\n                        if (pointAfter && !pointAfter.model.skip) {\r\n                            deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\r\n                            pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\r\n                            pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\r\n                        }\r\n                    }\r\n                };\r\n                helpers.nextItem = function(collection, index, loop) {\r\n                    if (loop) {\r\n                        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\r\n                    }\r\n                    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\r\n                };\r\n                helpers.previousItem = function(collection, index, loop) {\r\n                    if (loop) {\r\n                        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\r\n                    }\r\n                    return index <= 0 ? collection[0] : collection[index - 1];\r\n                };\r\n                // Implementation of the nice number algorithm used in determining where axis labels will go\r\n                helpers.niceNum = function(range, round) {\r\n                    var exponent = Math.floor(helpers.log10(range));\r\n                    var fraction = range / Math.pow(10, exponent);\r\n                    var niceFraction;\r\n\r\n                    if (round) {\r\n                        if (fraction < 1.5) {\r\n                            niceFraction = 1;\r\n                        } else if (fraction < 3) {\r\n                            niceFraction = 2;\r\n                        } else if (fraction < 7) {\r\n                            niceFraction = 5;\r\n                        } else {\r\n                            niceFraction = 10;\r\n                        }\r\n                    } else if (fraction <= 1.0) {\r\n                        niceFraction = 1;\r\n                    } else if (fraction <= 2) {\r\n                        niceFraction = 2;\r\n                    } else if (fraction <= 5) {\r\n                        niceFraction = 5;\r\n                    } else {\r\n                        niceFraction = 10;\r\n                    }\r\n\r\n                    return niceFraction * Math.pow(10, exponent);\r\n                };\r\n                // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n                helpers.requestAnimFrame = (function() {\r\n                    if (typeof window === 'undefined') {\r\n                        return function(callback) {\r\n                            callback();\r\n                        };\r\n                    }\r\n                    return window.requestAnimationFrame ||\r\n                        window.webkitRequestAnimationFrame ||\r\n                        window.mozRequestAnimationFrame ||\r\n                        window.oRequestAnimationFrame ||\r\n                        window.msRequestAnimationFrame ||\r\n                        function(callback) {\r\n                            return window.setTimeout(callback, 1000 / 60);\r\n                        };\r\n                }());\r\n                // -- DOM methods\r\n                helpers.getRelativePosition = function(evt, chart) {\r\n                    var mouseX, mouseY;\r\n                    var e = evt.originalEvent || evt;\r\n                    var canvas = evt.currentTarget || evt.srcElement;\r\n                    var boundingRect = canvas.getBoundingClientRect();\r\n\r\n                    var touches = e.touches;\r\n                    if (touches && touches.length > 0) {\r\n                        mouseX = touches[0].clientX;\r\n                        mouseY = touches[0].clientY;\r\n                    } else {\r\n                        mouseX = e.clientX;\r\n                        mouseY = e.clientY;\r\n                    }\r\n\r\n                    // Scale mouse coordinates into canvas coordinates\r\n                    // by following the pattern laid out by 'jerryj' in the comments of\r\n                    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\r\n                    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\r\n                    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\r\n                    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\r\n                    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\r\n                    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\r\n                    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\r\n\r\n                    // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\r\n                    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\r\n                    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\r\n                    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\r\n\r\n                    return {\r\n                        x: mouseX,\r\n                        y: mouseY\r\n                    };\r\n                };\r\n\r\n                // Private helper function to convert max-width/max-height values that may be percentages into a number\r\n                function parseMaxStyle(styleValue, node, parentProperty) {\r\n                    var valueInPixels;\r\n                    if (typeof styleValue === 'string') {\r\n                        valueInPixels = parseInt(styleValue, 10);\r\n\r\n                        if (styleValue.indexOf('%') !== -1) {\r\n                            // percentage * size in dimension\r\n                            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\r\n                        }\r\n                    } else {\r\n                        valueInPixels = styleValue;\r\n                    }\r\n\r\n                    return valueInPixels;\r\n                }\r\n\r\n                /**\r\n                 * Returns if the given value contains an effective constraint.\r\n                 * @private\r\n                 */\r\n                function isConstrainedValue(value) {\r\n                    return value !== undefined && value !== null && value !== 'none';\r\n                }\r\n\r\n                // Private helper to get a constraint dimension\r\n                // @param domNode : the node to check the constraint on\r\n                // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\r\n                // @param percentageProperty : property of parent to use when calculating width as a percentage\r\n                // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\r\n                function getConstraintDimension(domNode, maxStyle, percentageProperty) {\r\n                    var view = document.defaultView;\r\n                    var parentNode = domNode.parentNode;\r\n                    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\r\n                    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\r\n                    var hasCNode = isConstrainedValue(constrainedNode);\r\n                    var hasCContainer = isConstrainedValue(constrainedContainer);\r\n                    var infinity = Number.POSITIVE_INFINITY;\r\n\r\n                    if (hasCNode || hasCContainer) {\r\n                        return Math.min(\r\n                            hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\r\n                            hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\r\n                    }\r\n\r\n                    return 'none';\r\n                }\r\n                // returns Number or undefined if no constraint\r\n                helpers.getConstraintWidth = function(domNode) {\r\n                    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\r\n                };\r\n                // returns Number or undefined if no constraint\r\n                helpers.getConstraintHeight = function(domNode) {\r\n                    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\r\n                };\r\n                helpers.getMaximumWidth = function(domNode) {\r\n                    var container = domNode.parentNode;\r\n                    if (!container) {\r\n                        return domNode.clientWidth;\r\n                    }\r\n\r\n                    var paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\r\n                    var paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\r\n                    var w = container.clientWidth - paddingLeft - paddingRight;\r\n                    var cw = helpers.getConstraintWidth(domNode);\r\n                    return isNaN(cw) ? w : Math.min(w, cw);\r\n                };\r\n                helpers.getMaximumHeight = function(domNode) {\r\n                    var container = domNode.parentNode;\r\n                    if (!container) {\r\n                        return domNode.clientHeight;\r\n                    }\r\n\r\n                    var paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\r\n                    var paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\r\n                    var h = container.clientHeight - paddingTop - paddingBottom;\r\n                    var ch = helpers.getConstraintHeight(domNode);\r\n                    return isNaN(ch) ? h : Math.min(h, ch);\r\n                };\r\n                helpers.getStyle = function(el, property) {\r\n                    return el.currentStyle ?\r\n                        el.currentStyle[property] :\r\n                        document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\r\n                };\r\n                helpers.retinaScale = function(chart, forceRatio) {\r\n                    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\r\n                    if (pixelRatio === 1) {\r\n                        return;\r\n                    }\r\n\r\n                    var canvas = chart.canvas;\r\n                    var height = chart.height;\r\n                    var width = chart.width;\r\n\r\n                    canvas.height = height * pixelRatio;\r\n                    canvas.width = width * pixelRatio;\r\n                    chart.ctx.scale(pixelRatio, pixelRatio);\r\n\r\n                    // If no style has been set on the canvas, the render size is used as display size,\r\n                    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\r\n                    // See https://github.com/chartjs/Chart.js/issues/3575\r\n                    if (!canvas.style.height && !canvas.style.width) {\r\n                        canvas.style.height = height + 'px';\r\n                        canvas.style.width = width + 'px';\r\n                    }\r\n                };\r\n                // -- Canvas methods\r\n                helpers.fontString = function(pixelSize, fontStyle, fontFamily) {\r\n                    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\r\n                };\r\n                helpers.longestText = function(ctx, font, arrayOfThings, cache) {\r\n                    cache = cache || {};\r\n                    var data = cache.data = cache.data || {};\r\n                    var gc = cache.garbageCollect = cache.garbageCollect || [];\r\n\r\n                    if (cache.font !== font) {\r\n                        data = cache.data = {};\r\n                        gc = cache.garbageCollect = [];\r\n                        cache.font = font;\r\n                    }\r\n\r\n                    ctx.font = font;\r\n                    var longest = 0;\r\n                    helpers.each(arrayOfThings, function(thing) {\r\n                        // Undefined strings and arrays should not be measured\r\n                        if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\r\n                            longest = helpers.measureText(ctx, data, gc, longest, thing);\r\n                        } else if (helpers.isArray(thing)) {\r\n                            // if it is an array lets measure each element\r\n                            // to do maybe simplify this function a bit so we can do this more recursively?\r\n                            helpers.each(thing, function(nestedThing) {\r\n                                // Undefined strings and arrays should not be measured\r\n                                if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\r\n                                    longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    var gcLen = gc.length / 2;\r\n                    if (gcLen > arrayOfThings.length) {\r\n                        for (var i = 0; i < gcLen; i++) {\r\n                            delete data[gc[i]];\r\n                        }\r\n                        gc.splice(0, gcLen);\r\n                    }\r\n                    return longest;\r\n                };\r\n                helpers.measureText = function(ctx, data, gc, longest, string) {\r\n                    var textWidth = data[string];\r\n                    if (!textWidth) {\r\n                        textWidth = data[string] = ctx.measureText(string).width;\r\n                        gc.push(string);\r\n                    }\r\n                    if (textWidth > longest) {\r\n                        longest = textWidth;\r\n                    }\r\n                    return longest;\r\n                };\r\n                helpers.numberOfLabelLines = function(arrayOfThings) {\r\n                    var numberOfLines = 1;\r\n                    helpers.each(arrayOfThings, function(thing) {\r\n                        if (helpers.isArray(thing)) {\r\n                            if (thing.length > numberOfLines) {\r\n                                numberOfLines = thing.length;\r\n                            }\r\n                        }\r\n                    });\r\n                    return numberOfLines;\r\n                };\r\n\r\n                helpers.color = !color ?\r\n                    function(value) {\r\n                        console.error('Color.js not found!');\r\n                        return value;\r\n                    } :\r\n                    function(value) {\r\n                        /* global CanvasGradient */\r\n                        if (value instanceof CanvasGradient) {\r\n                            value = defaults.global.defaultColor;\r\n                        }\r\n\r\n                        return color(value);\r\n                    };\r\n\r\n                helpers.getHoverColor = function(colorValue) {\r\n                    /* global CanvasPattern */\r\n                    return (colorValue instanceof CanvasPattern) ?\r\n                        colorValue :\r\n                        helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"2\": 2, \"36\": 36 }], 19: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Helper function to get relative position for an event\r\n             * @param {Event|IEvent} event - The event to get the position for\r\n             * @param {Chart} chart - The chart\r\n             * @returns {Point} the event position\r\n             */\r\n            function getRelativePosition(e, chart) {\r\n                if (e.native) {\r\n                    return {\r\n                        x: e.x,\r\n                        y: e.y\r\n                    };\r\n                }\r\n\r\n                return helpers.getRelativePosition(e, chart);\r\n            }\r\n\r\n            /**\r\n             * Helper function to traverse all of the visible elements in the chart\r\n             * @param chart {chart} the chart\r\n             * @param handler {Function} the callback to execute for each visible item\r\n             */\r\n            function parseVisibleItems(chart, handler) {\r\n                var datasets = chart.data.datasets;\r\n                var meta, i, j, ilen, jlen;\r\n\r\n                for (i = 0, ilen = datasets.length; i < ilen; ++i) {\r\n                    if (!chart.isDatasetVisible(i)) {\r\n                        continue;\r\n                    }\r\n\r\n                    meta = chart.getDatasetMeta(i);\r\n                    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\r\n                        var element = meta.data[j];\r\n                        if (!element._view.skip) {\r\n                            handler(element);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the items that intersect the event position\r\n             * @param items {ChartElement[]} elements to filter\r\n             * @param position {Point} the point to be nearest to\r\n             * @return {ChartElement[]} the nearest items\r\n             */\r\n            function getIntersectItems(chart, position) {\r\n                var elements = [];\r\n\r\n                parseVisibleItems(chart, function(element) {\r\n                    if (element.inRange(position.x, position.y)) {\r\n                        elements.push(element);\r\n                    }\r\n                });\r\n\r\n                return elements;\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the items nearest to the event position considering all visible items in teh chart\r\n             * @param chart {Chart} the chart to look at elements from\r\n             * @param position {Point} the point to be nearest to\r\n             * @param intersect {Boolean} if true, only consider items that intersect the position\r\n             * @param distanceMetric {Function} function to provide the distance between points\r\n             * @return {ChartElement[]} the nearest items\r\n             */\r\n            function getNearestItems(chart, position, intersect, distanceMetric) {\r\n                var minDistance = Number.POSITIVE_INFINITY;\r\n                var nearestItems = [];\r\n\r\n                parseVisibleItems(chart, function(element) {\r\n                    if (intersect && !element.inRange(position.x, position.y)) {\r\n                        return;\r\n                    }\r\n\r\n                    var center = element.getCenterPoint();\r\n                    var distance = distanceMetric(position, center);\r\n\r\n                    if (distance < minDistance) {\r\n                        nearestItems = [element];\r\n                        minDistance = distance;\r\n                    } else if (distance === minDistance) {\r\n                        // Can have multiple items at the same distance in which case we sort by size\r\n                        nearestItems.push(element);\r\n                    }\r\n                });\r\n\r\n                return nearestItems;\r\n            }\r\n\r\n            /**\r\n             * Get a distance metric function for two points based on the\r\n             * axis mode setting\r\n             * @param {String} axis the axis mode. x|y|xy\r\n             */\r\n            function getDistanceMetricForAxis(axis) {\r\n                var useX = axis.indexOf('x') !== -1;\r\n                var useY = axis.indexOf('y') !== -1;\r\n\r\n                return function(pt1, pt2) {\r\n                    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n                    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n                    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n                };\r\n            }\r\n\r\n            function indexMode(chart, e, options) {\r\n                var position = getRelativePosition(e, chart);\r\n                // Default axis for index mode is 'x' to match old behaviour\r\n                options.axis = options.axis || 'x';\r\n                var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\r\n                var elements = [];\r\n\r\n                if (!items.length) {\r\n                    return [];\r\n                }\r\n\r\n                chart.data.datasets.forEach(function(dataset, datasetIndex) {\r\n                    if (chart.isDatasetVisible(datasetIndex)) {\r\n                        var meta = chart.getDatasetMeta(datasetIndex);\r\n                        var element = meta.data[items[0]._index];\r\n\r\n                        // don't count items that are skipped (null data)\r\n                        if (element && !element._view.skip) {\r\n                            elements.push(element);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                return elements;\r\n            }\r\n\r\n            /**\r\n             * @interface IInteractionOptions\r\n             */\r\n            /**\r\n             * If true, only consider items that intersect the point\r\n             * @name IInterfaceOptions#boolean\r\n             * @type Boolean\r\n             */\r\n\r\n            /**\r\n             * Contains interaction related functions\r\n             * @namespace Chart.Interaction\r\n             */\r\n            module.exports = {\r\n                // Helper function for different modes\r\n                modes: {\r\n                    single: function(chart, e) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var elements = [];\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                elements.push(element);\r\n                                return elements;\r\n                            }\r\n                        });\r\n\r\n                        return elements.slice(0, 1);\r\n                    },\r\n\r\n                    /**\r\n                     * @function Chart.Interaction.modes.label\r\n                     * @deprecated since version 2.4.0\r\n                     * @todo remove at version 3\r\n                     * @private\r\n                     */\r\n                    label: indexMode,\r\n\r\n                    /**\r\n                     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\r\n                     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\r\n                     * @function Chart.Interaction.modes.index\r\n                     * @since v2.4.0\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use during interaction\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    index: indexMode,\r\n\r\n                    /**\r\n                     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\r\n                     * If the options.intersect is false, we find the nearest item and return the items in that dataset\r\n                     * @function Chart.Interaction.modes.dataset\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use during interaction\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    dataset: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        options.axis = options.axis || 'xy';\r\n                        var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\r\n\r\n                        if (items.length > 0) {\r\n                            items = chart.getDatasetMeta(items[0]._datasetIndex).data;\r\n                        }\r\n\r\n                        return items;\r\n                    },\r\n\r\n                    /**\r\n                     * @function Chart.Interaction.modes.x-axis\r\n                     * @deprecated since version 2.4.0. Use index mode and intersect == true\r\n                     * @todo remove at version 3\r\n                     * @private\r\n                     */\r\n                    'x-axis': function(chart, e) {\r\n                        return indexMode(chart, e, { intersect: false });\r\n                    },\r\n\r\n                    /**\r\n                     * Point mode returns all elements that hit test based on the event position\r\n                     * of the event\r\n                     * @function Chart.Interaction.modes.intersect\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    point: function(chart, e) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        return getIntersectItems(chart, position);\r\n                    },\r\n\r\n                    /**\r\n                     * nearest mode returns the element closest to the point\r\n                     * @function Chart.Interaction.modes.intersect\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    nearest: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        options.axis = options.axis || 'xy';\r\n                        var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                        var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\r\n\r\n                        // We have multiple items at the same distance from the event. Now sort by smallest\r\n                        if (nearestItems.length > 1) {\r\n                            nearestItems.sort(function(a, b) {\r\n                                var sizeA = a.getArea();\r\n                                var sizeB = b.getArea();\r\n                                var ret = sizeA - sizeB;\r\n\r\n                                if (ret === 0) {\r\n                                    // if equal sort by dataset index\r\n                                    ret = a._datasetIndex - b._datasetIndex;\r\n                                }\r\n\r\n                                return ret;\r\n                            });\r\n                        }\r\n\r\n                        // Return only 1 item\r\n                        return nearestItems.slice(0, 1);\r\n                    },\r\n\r\n                    /**\r\n                     * x mode returns the elements that hit-test at the current x coordinate\r\n                     * @function Chart.Interaction.modes.x\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    x: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var items = [];\r\n                        var intersectsItem = false;\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inXRange(position.x)) {\r\n                                items.push(element);\r\n                            }\r\n\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                intersectsItem = true;\r\n                            }\r\n                        });\r\n\r\n                        // If we want to trigger on an intersect and we don't have any items\r\n                        // that intersect the position, return nothing\r\n                        if (options.intersect && !intersectsItem) {\r\n                            items = [];\r\n                        }\r\n                        return items;\r\n                    },\r\n\r\n                    /**\r\n                     * y mode returns the elements that hit-test at the current y coordinate\r\n                     * @function Chart.Interaction.modes.y\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    y: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var items = [];\r\n                        var intersectsItem = false;\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inYRange(position.y)) {\r\n                                items.push(element);\r\n                            }\r\n\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                intersectsItem = true;\r\n                            }\r\n                        });\r\n\r\n                        // If we want to trigger on an intersect and we don't have any items\r\n                        // that intersect the position, return nothing\r\n                        if (options.intersect && !intersectsItem) {\r\n                            items = [];\r\n                        }\r\n                        return items;\r\n                    }\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 20: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n\r\n            defaults._set('global', {\r\n                responsive: true,\r\n                responsiveAnimationDuration: 0,\r\n                maintainAspectRatio: true,\r\n                events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\r\n                hover: {\r\n                    onHover: null,\r\n                    mode: 'nearest',\r\n                    intersect: true,\r\n                    animationDuration: 400\r\n                },\r\n                onClick: null,\r\n                defaultColor: 'rgba(0,0,0,0.1)',\r\n                defaultFontColor: '#666',\r\n                defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n                defaultFontSize: 12,\r\n                defaultFontStyle: 'normal',\r\n                showLines: true,\r\n\r\n                // Element defaults defined in element extensions\r\n                elements: {},\r\n\r\n                // Layout options such as padding\r\n                layout: {\r\n                    padding: {\r\n                        top: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        left: 0\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = function() {\r\n                // Occupy the global variable of Chart, and create a simple base class\r\n                var Chart = function(item, config) {\r\n                    this.construct(item, config);\r\n                    return this;\r\n                };\r\n\r\n                Chart.Chart = Chart;\r\n\r\n                return Chart;\r\n            };\r\n        }, { \"16\": 16 }], 21: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            function filterByPosition(array, position) {\r\n                return helpers.where(array, function(v) {\r\n                    return v.position === position;\r\n                });\r\n            }\r\n\r\n            function sortByWeight(array, reverse) {\r\n                array.forEach(function(v, i) {\r\n                    v._tmpIndex_ = i;\r\n                    return v;\r\n                });\r\n                array.sort(function(a, b) {\r\n                    var v0 = reverse ? b : a;\r\n                    var v1 = reverse ? a : b;\r\n                    return v0.weight === v1.weight ?\r\n                        v0._tmpIndex_ - v1._tmpIndex_ :\r\n                        v0.weight - v1.weight;\r\n                });\r\n                array.forEach(function(v) {\r\n                    delete v._tmpIndex_;\r\n                });\r\n            }\r\n\r\n            /**\r\n             * @interface ILayoutItem\r\n             * @prop {String} position - The position of the item in the chart layout. Possible values are\r\n             * 'left', 'top', 'right', 'bottom', and 'chartArea'\r\n             * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\r\n             * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\r\n             * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\r\n             * @prop {Function} update - Takes two parameters: width and height. Returns size of item\r\n             * @prop {Function} getPadding -  Returns an object with padding on the edges\r\n             * @prop {Number} width - Width of item. Must be valid after update()\r\n             * @prop {Number} height - Height of item. Must be valid after update()\r\n             * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\r\n             */\r\n\r\n            // The layout service is very self explanatory.  It's responsible for the layout within a chart.\r\n            // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\r\n            // It is this service's responsibility of carrying out that layout.\r\n            module.exports = {\r\n                defaults: {},\r\n\r\n                /**\r\n                 * Register a box to a chart.\r\n                 * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\r\n                 * @param {Chart} chart - the chart to use\r\n                 * @param {ILayoutItem} item - the item to add to be layed out\r\n                 */\r\n                addBox: function(chart, item) {\r\n                    if (!chart.boxes) {\r\n                        chart.boxes = [];\r\n                    }\r\n\r\n                    // initialize item with default values\r\n                    item.fullWidth = item.fullWidth || false;\r\n                    item.position = item.position || 'top';\r\n                    item.weight = item.weight || 0;\r\n\r\n                    chart.boxes.push(item);\r\n                },\r\n\r\n                /**\r\n                 * Remove a layoutItem from a chart\r\n                 * @param {Chart} chart - the chart to remove the box from\r\n                 * @param {Object} layoutItem - the item to remove from the layout\r\n                 */\r\n                removeBox: function(chart, layoutItem) {\r\n                    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n                    if (index !== -1) {\r\n                        chart.boxes.splice(index, 1);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Sets (or updates) options on the given `item`.\r\n                 * @param {Chart} chart - the chart in which the item lives (or will be added to)\r\n                 * @param {Object} item - the item to configure with the given options\r\n                 * @param {Object} options - the new item options.\r\n                 */\r\n                configure: function(chart, item, options) {\r\n                    var props = ['fullWidth', 'position', 'weight'];\r\n                    var ilen = props.length;\r\n                    var i = 0;\r\n                    var prop;\r\n\r\n                    for (; i < ilen; ++i) {\r\n                        prop = props[i];\r\n                        if (options.hasOwnProperty(prop)) {\r\n                            item[prop] = options[prop];\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Fits boxes of the given chart into the given size by having each box measure itself\r\n                 * then running a fitting algorithm\r\n                 * @param {Chart} chart - the chart\r\n                 * @param {Number} width - the width to fit into\r\n                 * @param {Number} height - the height to fit into\r\n                 */\r\n                update: function(chart, width, height) {\r\n                    if (!chart) {\r\n                        return;\r\n                    }\r\n\r\n                    var layoutOptions = chart.options.layout || {};\r\n                    var padding = helpers.options.toPadding(layoutOptions.padding);\r\n                    var leftPadding = padding.left;\r\n                    var rightPadding = padding.right;\r\n                    var topPadding = padding.top;\r\n                    var bottomPadding = padding.bottom;\r\n\r\n                    var leftBoxes = filterByPosition(chart.boxes, 'left');\r\n                    var rightBoxes = filterByPosition(chart.boxes, 'right');\r\n                    var topBoxes = filterByPosition(chart.boxes, 'top');\r\n                    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\r\n                    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\r\n\r\n                    // Sort boxes by weight. A higher weight is further away from the chart area\r\n                    sortByWeight(leftBoxes, true);\r\n                    sortByWeight(rightBoxes, false);\r\n                    sortByWeight(topBoxes, true);\r\n                    sortByWeight(bottomBoxes, false);\r\n\r\n                    // Essentially we now have any number of boxes on each of the 4 sides.\r\n                    // Our canvas looks like the following.\r\n                    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\r\n                    // B1 is the bottom axis\r\n                    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\r\n                    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\r\n                    // an error will be thrown.\r\n                    //\r\n                    // |----------------------------------------------------|\r\n                    // |                  T1 (Full Width)                   |\r\n                    // |----------------------------------------------------|\r\n                    // |    |    |                 T2                  |    |\r\n                    // |    |----|-------------------------------------|----|\r\n                    // |    |    | C1 |                           | C2 |    |\r\n                    // |    |    |----|                           |----|    |\r\n                    // |    |    |                                     |    |\r\n                    // | L1 | L2 |           ChartArea (C0)            | R1 |\r\n                    // |    |    |                                     |    |\r\n                    // |    |    |----|                           |----|    |\r\n                    // |    |    | C3 |                           | C4 |    |\r\n                    // |    |----|-------------------------------------|----|\r\n                    // |    |    |                 B1                  |    |\r\n                    // |----------------------------------------------------|\r\n                    // |                  B2 (Full Width)                   |\r\n                    // |----------------------------------------------------|\r\n                    //\r\n                    // What we do to find the best sizing, we do the following\r\n                    // 1. Determine the minimum size of the chart area.\r\n                    // 2. Split the remaining width equally between each vertical axis\r\n                    // 3. Split the remaining height equally between each horizontal axis\r\n                    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\r\n                    // 5. Adjust the sizes of each axis based on it's minimum reported size.\r\n                    // 6. Refit each axis\r\n                    // 7. Position each axis in the final location\r\n                    // 8. Tell the chart the final location of the chart area\r\n                    // 9. Tell any axes that overlay the chart area the positions of the chart area\r\n\r\n                    // Step 1\r\n                    var chartWidth = width - leftPadding - rightPadding;\r\n                    var chartHeight = height - topPadding - bottomPadding;\r\n                    var chartAreaWidth = chartWidth / 2; // min 50%\r\n                    var chartAreaHeight = chartHeight / 2; // min 50%\r\n\r\n                    // Step 2\r\n                    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\r\n\r\n                    // Step 3\r\n                    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\r\n\r\n                    // Step 4\r\n                    var maxChartAreaWidth = chartWidth;\r\n                    var maxChartAreaHeight = chartHeight;\r\n                    var minBoxSizes = [];\r\n\r\n                    function getMinimumBoxSize(box) {\r\n                        var minSize;\r\n                        var isHorizontal = box.isHorizontal();\r\n\r\n                        if (isHorizontal) {\r\n                            minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\r\n                            maxChartAreaHeight -= minSize.height;\r\n                        } else {\r\n                            minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\r\n                            maxChartAreaWidth -= minSize.width;\r\n                        }\r\n\r\n                        minBoxSizes.push({\r\n                            horizontal: isHorizontal,\r\n                            minSize: minSize,\r\n                            box: box,\r\n                        });\r\n                    }\r\n\r\n                    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\r\n\r\n                    // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\r\n                    var maxHorizontalLeftPadding = 0;\r\n                    var maxHorizontalRightPadding = 0;\r\n                    var maxVerticalTopPadding = 0;\r\n                    var maxVerticalBottomPadding = 0;\r\n\r\n                    helpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\r\n                        if (horizontalBox.getPadding) {\r\n                            var boxPadding = horizontalBox.getPadding();\r\n                            maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\r\n                            maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\r\n                        }\r\n                    });\r\n\r\n                    helpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\r\n                        if (verticalBox.getPadding) {\r\n                            var boxPadding = verticalBox.getPadding();\r\n                            maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\r\n                            maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\r\n                        }\r\n                    });\r\n\r\n                    // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\r\n                    // be if the axes are drawn at their minimum sizes.\r\n                    // Steps 5 & 6\r\n                    var totalLeftBoxesWidth = leftPadding;\r\n                    var totalRightBoxesWidth = rightPadding;\r\n                    var totalTopBoxesHeight = topPadding;\r\n                    var totalBottomBoxesHeight = bottomPadding;\r\n\r\n                    // Function to fit a box\r\n                    function fitBox(box) {\r\n                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\r\n                            return minBox.box === box;\r\n                        });\r\n\r\n                        if (minBoxSize) {\r\n                            if (box.isHorizontal()) {\r\n                                var scaleMargin = {\r\n                                    left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\r\n                                    right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\r\n                                    top: 0,\r\n                                    bottom: 0\r\n                                };\r\n\r\n                                // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\r\n                                // on the margin. Sometimes they need to increase in size slightly\r\n                                box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\r\n                            } else {\r\n                                box.update(minBoxSize.minSize.width, maxChartAreaHeight);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Update, and calculate the left and right margins for the horizontal boxes\r\n                    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\r\n\r\n                    helpers.each(leftBoxes, function(box) {\r\n                        totalLeftBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(rightBoxes, function(box) {\r\n                        totalRightBoxesWidth += box.width;\r\n                    });\r\n\r\n                    // Set the Left and Right margins for the horizontal boxes\r\n                    helpers.each(topBoxes.concat(bottomBoxes), fitBox);\r\n\r\n                    // Figure out how much margin is on the top and bottom of the vertical boxes\r\n                    helpers.each(topBoxes, function(box) {\r\n                        totalTopBoxesHeight += box.height;\r\n                    });\r\n\r\n                    helpers.each(bottomBoxes, function(box) {\r\n                        totalBottomBoxesHeight += box.height;\r\n                    });\r\n\r\n                    function finalFitVerticalBox(box) {\r\n                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\r\n                            return minSize.box === box;\r\n                        });\r\n\r\n                        var scaleMargin = {\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: totalTopBoxesHeight,\r\n                            bottom: totalBottomBoxesHeight\r\n                        };\r\n\r\n                        if (minBoxSize) {\r\n                            box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\r\n                        }\r\n                    }\r\n\r\n                    // Let the left layout know the final margin\r\n                    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\r\n\r\n                    // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\r\n                    totalLeftBoxesWidth = leftPadding;\r\n                    totalRightBoxesWidth = rightPadding;\r\n                    totalTopBoxesHeight = topPadding;\r\n                    totalBottomBoxesHeight = bottomPadding;\r\n\r\n                    helpers.each(leftBoxes, function(box) {\r\n                        totalLeftBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(rightBoxes, function(box) {\r\n                        totalRightBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(topBoxes, function(box) {\r\n                        totalTopBoxesHeight += box.height;\r\n                    });\r\n                    helpers.each(bottomBoxes, function(box) {\r\n                        totalBottomBoxesHeight += box.height;\r\n                    });\r\n\r\n                    // We may be adding some padding to account for rotated x axis labels\r\n                    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\r\n                    totalLeftBoxesWidth += leftPaddingAddition;\r\n                    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\r\n\r\n                    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\r\n                    totalTopBoxesHeight += topPaddingAddition;\r\n                    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\r\n\r\n                    // Figure out if our chart area changed. This would occur if the dataset layout label rotation\r\n                    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\r\n                    // without calling `fit` again\r\n                    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\r\n                    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\r\n\r\n                    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\r\n                        helpers.each(leftBoxes, function(box) {\r\n                            box.height = newMaxChartAreaHeight;\r\n                        });\r\n\r\n                        helpers.each(rightBoxes, function(box) {\r\n                            box.height = newMaxChartAreaHeight;\r\n                        });\r\n\r\n                        helpers.each(topBoxes, function(box) {\r\n                            if (!box.fullWidth) {\r\n                                box.width = newMaxChartAreaWidth;\r\n                            }\r\n                        });\r\n\r\n                        helpers.each(bottomBoxes, function(box) {\r\n                            if (!box.fullWidth) {\r\n                                box.width = newMaxChartAreaWidth;\r\n                            }\r\n                        });\r\n\r\n                        maxChartAreaHeight = newMaxChartAreaHeight;\r\n                        maxChartAreaWidth = newMaxChartAreaWidth;\r\n                    }\r\n\r\n                    // Step 7 - Position the boxes\r\n                    var left = leftPadding + leftPaddingAddition;\r\n                    var top = topPadding + topPaddingAddition;\r\n\r\n                    function placeBox(box) {\r\n                        if (box.isHorizontal()) {\r\n                            box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\r\n                            box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\r\n                            box.top = top;\r\n                            box.bottom = top + box.height;\r\n\r\n                            // Move to next point\r\n                            top = box.bottom;\r\n                        } else {\r\n                            box.left = left;\r\n                            box.right = left + box.width;\r\n                            box.top = totalTopBoxesHeight;\r\n                            box.bottom = totalTopBoxesHeight + maxChartAreaHeight;\r\n\r\n                            // Move to next point\r\n                            left = box.right;\r\n                        }\r\n                    }\r\n\r\n                    helpers.each(leftBoxes.concat(topBoxes), placeBox);\r\n\r\n                    // Account for chart width and height\r\n                    left += maxChartAreaWidth;\r\n                    top += maxChartAreaHeight;\r\n\r\n                    helpers.each(rightBoxes, placeBox);\r\n                    helpers.each(bottomBoxes, placeBox);\r\n\r\n                    // Step 8\r\n                    chart.chartArea = {\r\n                        left: totalLeftBoxesWidth,\r\n                        top: totalTopBoxesHeight,\r\n                        right: totalLeftBoxesWidth + maxChartAreaWidth,\r\n                        bottom: totalTopBoxesHeight + maxChartAreaHeight\r\n                    };\r\n\r\n                    // Step 9\r\n                    helpers.each(chartAreaBoxes, function(box) {\r\n                        box.left = chart.chartArea.left;\r\n                        box.top = chart.chartArea.top;\r\n                        box.right = chart.chartArea.right;\r\n                        box.bottom = chart.chartArea.bottom;\r\n\r\n                        box.update(maxChartAreaWidth, maxChartAreaHeight);\r\n                    });\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 22: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                plugins: {}\r\n            });\r\n\r\n            /**\r\n             * The plugin service singleton\r\n             * @namespace Chart.plugins\r\n             * @since 2.1.0\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Globally registered plugins.\r\n                 * @private\r\n                 */\r\n                _plugins: [],\r\n\r\n                /**\r\n                 * This identifier is used to invalidate the descriptors cache attached to each chart\r\n                 * when a global plugin is registered or unregistered. In this case, the cache ID is\r\n                 * incremented and descriptors are regenerated during following API calls.\r\n                 * @private\r\n                 */\r\n                _cacheId: 0,\r\n\r\n                /**\r\n                 * Registers the given plugin(s) if not already registered.\r\n                 * @param {Array|Object} plugins plugin instance(s).\r\n                 */\r\n                register: function(plugins) {\r\n                    var p = this._plugins;\r\n                    ([]).concat(plugins).forEach(function(plugin) {\r\n                        if (p.indexOf(plugin) === -1) {\r\n                            p.push(plugin);\r\n                        }\r\n                    });\r\n\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Unregisters the given plugin(s) only if registered.\r\n                 * @param {Array|Object} plugins plugin instance(s).\r\n                 */\r\n                unregister: function(plugins) {\r\n                    var p = this._plugins;\r\n                    ([]).concat(plugins).forEach(function(plugin) {\r\n                        var idx = p.indexOf(plugin);\r\n                        if (idx !== -1) {\r\n                            p.splice(idx, 1);\r\n                        }\r\n                    });\r\n\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Remove all registered plugins.\r\n                 * @since 2.1.5\r\n                 */\r\n                clear: function() {\r\n                    this._plugins = [];\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Returns the number of registered plugins?\r\n                 * @returns {Number}\r\n                 * @since 2.1.5\r\n                 */\r\n                count: function() {\r\n                    return this._plugins.length;\r\n                },\r\n\r\n                /**\r\n                 * Returns all registered plugin instances.\r\n                 * @returns {Array} array of plugin objects.\r\n                 * @since 2.1.5\r\n                 */\r\n                getAll: function() {\r\n                    return this._plugins;\r\n                },\r\n\r\n                /**\r\n                 * Calls enabled plugins for `chart` on the specified hook and with the given args.\r\n                 * This method immediately returns as soon as a plugin explicitly returns false. The\r\n                 * returned value can be used, for instance, to interrupt the current action.\r\n                 * @param {Object} chart - The chart instance for which plugins should be called.\r\n                 * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\r\n                 * @param {Array} [args] - Extra arguments to apply to the hook call.\r\n                 * @returns {Boolean} false if any of the plugins return false, else returns true.\r\n                 */\r\n                notify: function(chart, hook, args) {\r\n                    var descriptors = this.descriptors(chart);\r\n                    var ilen = descriptors.length;\r\n                    var i, descriptor, plugin, params, method;\r\n\r\n                    for (i = 0; i < ilen; ++i) {\r\n                        descriptor = descriptors[i];\r\n                        plugin = descriptor.plugin;\r\n                        method = plugin[hook];\r\n                        if (typeof method === 'function') {\r\n                            params = [chart].concat(args || []);\r\n                            params.push(descriptor.options);\r\n                            if (method.apply(plugin, params) === false) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                },\r\n\r\n                /**\r\n                 * Returns descriptors of enabled plugins for the given chart.\r\n                 * @returns {Array} [{ plugin, options }]\r\n                 * @private\r\n                 */\r\n                descriptors: function(chart) {\r\n                    var cache = chart.$plugins || (chart.$plugins = {});\r\n                    if (cache.id === this._cacheId) {\r\n                        return cache.descriptors;\r\n                    }\r\n\r\n                    var plugins = [];\r\n                    var descriptors = [];\r\n                    var config = (chart && chart.config) || {};\r\n                    var options = (config.options && config.options.plugins) || {};\r\n\r\n                    this._plugins.concat(config.plugins || []).forEach(function(plugin) {\r\n                        var idx = plugins.indexOf(plugin);\r\n                        if (idx !== -1) {\r\n                            return;\r\n                        }\r\n\r\n                        var id = plugin.id;\r\n                        var opts = options[id];\r\n                        if (opts === false) {\r\n                            return;\r\n                        }\r\n\r\n                        if (opts === true) {\r\n                            opts = helpers.clone(defaults.global.plugins[id]);\r\n                        }\r\n\r\n                        plugins.push(plugin);\r\n                        descriptors.push({\r\n                            plugin: plugin,\r\n                            options: opts || {}\r\n                        });\r\n                    });\r\n\r\n                    cache.descriptors = descriptors;\r\n                    cache.id = this._cacheId;\r\n                    return descriptors;\r\n                },\r\n\r\n                /**\r\n                 * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\r\n                 * but in some cases, this reference can be changed by the user when updating options.\r\n                 * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\r\n                 * @private\r\n                 */\r\n                _invalidate: function(chart) {\r\n                    delete chart.$plugins;\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Plugin extension hooks.\r\n             * @interface IPlugin\r\n             * @since 2.1.0\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeInit\r\n             * @desc Called before initializing `chart`.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterInit\r\n             * @desc Called after `chart` has been initialized and before the first update.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeUpdate\r\n             * @desc Called before updating `chart`. If any plugin returns `false`, the update\r\n             * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart update.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterUpdate\r\n             * @desc Called after `chart` has been updated and before rendering. Note that this\r\n             * hook will not be called if the chart update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetsUpdate\r\n             * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\r\n             * the datasets update is cancelled until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} false to cancel the datasets update.\r\n             * @since version 2.1.5\r\n            */\r\n            /**\r\n             * @method IPlugin#afterDatasetsUpdate\r\n             * @desc Called after the `chart` datasets have been updated. Note that this hook\r\n             * will not be called if the datasets update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @since version 2.1.5\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetUpdate\r\n             * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\r\n             * returns `false`, the datasets update is cancelled until another `update` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetUpdate\r\n             * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\r\n             * that this hook will not be called if the datasets update has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeLayout\r\n             * @desc Called before laying out `chart`. If any plugin returns `false`,\r\n             * the layout update is cancelled until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart layout.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterLayout\r\n             * @desc Called after the `chart` has been layed out. Note that this hook will not\r\n             * be called if the layout update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeRender\r\n             * @desc Called before rendering `chart`. If any plugin returns `false`,\r\n             * the rendering is cancelled until another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart rendering.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterRender\r\n             * @desc Called after the `chart` has been fully rendered (and animation completed). Note\r\n             * that this hook will not be called if the rendering has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDraw\r\n             * @desc Called before drawing `chart` at every animation frame specified by the given\r\n             * easing value. If any plugin returns `false`, the frame drawing is cancelled until\r\n             * another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDraw\r\n             * @desc Called after the `chart` has been drawn for the specific easing value. Note\r\n             * that this hook will not be called if the drawing has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetsDraw\r\n             * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\r\n             * the datasets drawing is cancelled until another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetsDraw\r\n             * @desc Called after the `chart` datasets have been drawn. Note that this hook\r\n             * will not be called if the datasets drawing has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetDraw\r\n             * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\r\n             * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\r\n             * is cancelled until another `render` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetDraw\r\n             * @desc Called after the `chart` datasets at the given `args.index` have been drawn\r\n             * (datasets are drawn in the reverse order). Note that this hook will not be called\r\n             * if the datasets drawing has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeTooltipDraw\r\n             * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\r\n             * the tooltip drawing is cancelled until another `render` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Object} args.tooltip - The tooltip.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart tooltip drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterTooltipDraw\r\n             * @desc Called after drawing the `tooltip`. Note that this hook will not\r\n             * be called if the tooltip drawing has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Object} args.tooltip - The tooltip.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeEvent\r\n             * @desc Called before processing the specified `event`. If any plugin returns `false`,\r\n             * the event will be discarded.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {IEvent} event - The event object.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterEvent\r\n             * @desc Called after the `event` has been consumed. Note that this hook\r\n             * will not be called if the `event` has been previously discarded.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {IEvent} event - The event object.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#resize\r\n             * @desc Called after the chart as been resized.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#destroy\r\n             * @desc Called after the chart as been destroyed.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n        }, { \"16\": 16, \"36\": 36 }], 23: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var Ticks = require(25);\r\n\r\n            defaults._set('scale', {\r\n                display: true,\r\n                position: 'left',\r\n                offset: false,\r\n\r\n                // grid line settings\r\n                gridLines: {\r\n                    display: true,\r\n                    color: 'rgba(0, 0, 0, 0.1)',\r\n                    lineWidth: 1,\r\n                    drawBorder: true,\r\n                    drawOnChartArea: true,\r\n                    drawTicks: true,\r\n                    tickMarkLength: 10,\r\n                    zeroLineWidth: 1,\r\n                    zeroLineColor: 'rgba(0,0,0,0.25)',\r\n                    zeroLineBorderDash: [],\r\n                    zeroLineBorderDashOffset: 0.0,\r\n                    offsetGridLines: false,\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0\r\n                },\r\n\r\n                // scale label\r\n                scaleLabel: {\r\n                    // display property\r\n                    display: false,\r\n\r\n                    // actual label\r\n                    labelString: '',\r\n\r\n                    // line height\r\n                    lineHeight: 1.2,\r\n\r\n                    // top/bottom padding\r\n                    padding: {\r\n                        top: 4,\r\n                        bottom: 4\r\n                    }\r\n                },\r\n\r\n                // label settings\r\n                ticks: {\r\n                    beginAtZero: false,\r\n                    minRotation: 0,\r\n                    maxRotation: 50,\r\n                    mirror: false,\r\n                    padding: 0,\r\n                    reverse: false,\r\n                    display: true,\r\n                    autoSkip: true,\r\n                    autoSkipPadding: 0,\r\n                    labelOffset: 0,\r\n                    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\r\n                    callback: Ticks.formatters.values,\r\n                    minor: {},\r\n                    major: {}\r\n                }\r\n            });\r\n\r\n            function labelsFromTicks(ticks) {\r\n                var labels = [];\r\n                var i, ilen;\r\n\r\n                for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n                    labels.push(ticks[i].label);\r\n                }\r\n\r\n                return labels;\r\n            }\r\n\r\n            function getLineValue(scale, index, offsetGridLines) {\r\n                var lineValue = scale.getPixelForTick(index);\r\n\r\n                if (offsetGridLines) {\r\n                    if (index === 0) {\r\n                        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\r\n                    } else {\r\n                        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\r\n                    }\r\n                }\r\n                return lineValue;\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                function computeTextSize(context, tick, font) {\r\n                    return helpers.isArray(tick) ?\r\n                        helpers.longestText(context, font, tick) :\r\n                        context.measureText(tick).width;\r\n                }\r\n\r\n                function parseFontOptions(options) {\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var globalDefaults = defaults.global;\r\n                    var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\r\n                    var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\r\n                    var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\r\n\r\n                    return {\r\n                        size: size,\r\n                        style: style,\r\n                        family: family,\r\n                        font: helpers.fontString(size, style, family)\r\n                    };\r\n                }\r\n\r\n                function parseLineHeight(options) {\r\n                    return helpers.options.toLineHeight(\r\n                        helpers.valueOrDefault(options.lineHeight, 1.2),\r\n                        helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\r\n                }\r\n\r\n                Chart.Scale = Element.extend({\r\n                    /**\r\n                     * Get the padding needed for the scale\r\n                     * @method getPadding\r\n                     * @private\r\n                     * @returns {Padding} the necessary padding\r\n                     */\r\n                    getPadding: function() {\r\n                        var me = this;\r\n                        return {\r\n                            left: me.paddingLeft || 0,\r\n                            top: me.paddingTop || 0,\r\n                            right: me.paddingRight || 0,\r\n                            bottom: me.paddingBottom || 0\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the scale tick objects ({label, major})\r\n                     * @since 2.7\r\n                     */\r\n                    getTicks: function() {\r\n                        return this._ticks;\r\n                    },\r\n\r\n                    // These methods are ordered by lifecyle. Utilities then follow.\r\n                    // Any function defined here is inherited by all scale types.\r\n                    // Any function can be extended by the scale type\r\n\r\n                    mergeTicksOptions: function() {\r\n                        var ticks = this.options.ticks;\r\n                        if (ticks.minor === false) {\r\n                            ticks.minor = {\r\n                                display: false\r\n                            };\r\n                        }\r\n                        if (ticks.major === false) {\r\n                            ticks.major = {\r\n                                display: false\r\n                            };\r\n                        }\r\n                        for (var key in ticks) {\r\n                            if (key !== 'major' && key !== 'minor') {\r\n                                if (typeof ticks.minor[key] === 'undefined') {\r\n                                    ticks.minor[key] = ticks[key];\r\n                                }\r\n                                if (typeof ticks.major[key] === 'undefined') {\r\n                                    ticks.major[key] = ticks[key];\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    beforeUpdate: function() {\r\n                        helpers.callback(this.options.beforeUpdate, [this]);\r\n                    },\r\n                    update: function(maxWidth, maxHeight, margins) {\r\n                        var me = this;\r\n                        var i, ilen, labels, label, ticks, tick;\r\n\r\n                        // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                        me.beforeUpdate();\r\n\r\n                        // Absorb the master measurements\r\n                        me.maxWidth = maxWidth;\r\n                        me.maxHeight = maxHeight;\r\n                        me.margins = helpers.extend({\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: 0,\r\n                            bottom: 0\r\n                        }, margins);\r\n                        me.longestTextCache = me.longestTextCache || {};\r\n\r\n                        // Dimensions\r\n                        me.beforeSetDimensions();\r\n                        me.setDimensions();\r\n                        me.afterSetDimensions();\r\n\r\n                        // Data min/max\r\n                        me.beforeDataLimits();\r\n                        me.determineDataLimits();\r\n                        me.afterDataLimits();\r\n\r\n                        // Ticks - `this.ticks` is now DEPRECATED!\r\n                        // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\r\n                        // and must not be accessed directly from outside this class. `this.ticks` being\r\n                        // around for long time and not marked as private, we can't change its structure\r\n                        // without unexpected breaking changes. If you need to access the scale ticks,\r\n                        // use scale.getTicks() instead.\r\n\r\n                        me.beforeBuildTicks();\r\n\r\n                        // New implementations should return an array of objects but for BACKWARD COMPAT,\r\n                        // we still support no return (`this.ticks` internally set by calling this method).\r\n                        ticks = me.buildTicks() || [];\r\n\r\n                        me.afterBuildTicks();\r\n\r\n                        me.beforeTickToLabelConversion();\r\n\r\n                        // New implementations should return the formatted tick labels but for BACKWARD\r\n                        // COMPAT, we still support no return (`this.ticks` internally changed by calling\r\n                        // this method and supposed to contain only string values).\r\n                        labels = me.convertTicksToLabels(ticks) || me.ticks;\r\n\r\n                        me.afterTickToLabelConversion();\r\n\r\n                        me.ticks = labels;   // BACKWARD COMPATIBILITY\r\n\r\n                        // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\r\n\r\n                        // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\r\n                        for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n                            label = labels[i];\r\n                            tick = ticks[i];\r\n                            if (!tick) {\r\n                                ticks.push(tick = {\r\n                                    label: label,\r\n                                    major: false\r\n                                });\r\n                            } else {\r\n                                tick.label = label;\r\n                            }\r\n                        }\r\n\r\n                        me._ticks = ticks;\r\n\r\n                        // Tick Rotation\r\n                        me.beforeCalculateTickRotation();\r\n                        me.calculateTickRotation();\r\n                        me.afterCalculateTickRotation();\r\n                        // Fit\r\n                        me.beforeFit();\r\n                        me.fit();\r\n                        me.afterFit();\r\n                        //\r\n                        me.afterUpdate();\r\n\r\n                        return me.minSize;\r\n                    },\r\n                    afterUpdate: function() {\r\n                        helpers.callback(this.options.afterUpdate, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeSetDimensions: function() {\r\n                        helpers.callback(this.options.beforeSetDimensions, [this]);\r\n                    },\r\n                    setDimensions: function() {\r\n                        var me = this;\r\n                        // Set the unconstrained dimension before label rotation\r\n                        if (me.isHorizontal()) {\r\n                            // Reset position before calculating rotation\r\n                            me.width = me.maxWidth;\r\n                            me.left = 0;\r\n                            me.right = me.width;\r\n                        } else {\r\n                            me.height = me.maxHeight;\r\n\r\n                            // Reset position before calculating rotation\r\n                            me.top = 0;\r\n                            me.bottom = me.height;\r\n                        }\r\n\r\n                        // Reset padding\r\n                        me.paddingLeft = 0;\r\n                        me.paddingTop = 0;\r\n                        me.paddingRight = 0;\r\n                        me.paddingBottom = 0;\r\n                    },\r\n                    afterSetDimensions: function() {\r\n                        helpers.callback(this.options.afterSetDimensions, [this]);\r\n                    },\r\n\r\n                    // Data limits\r\n                    beforeDataLimits: function() {\r\n                        helpers.callback(this.options.beforeDataLimits, [this]);\r\n                    },\r\n                    determineDataLimits: helpers.noop,\r\n                    afterDataLimits: function() {\r\n                        helpers.callback(this.options.afterDataLimits, [this]);\r\n                    },\r\n\r\n                    //\r\n                    beforeBuildTicks: function() {\r\n                        helpers.callback(this.options.beforeBuildTicks, [this]);\r\n                    },\r\n                    buildTicks: helpers.noop,\r\n                    afterBuildTicks: function() {\r\n                        helpers.callback(this.options.afterBuildTicks, [this]);\r\n                    },\r\n\r\n                    beforeTickToLabelConversion: function() {\r\n                        helpers.callback(this.options.beforeTickToLabelConversion, [this]);\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        // Convert ticks to strings\r\n                        var tickOpts = me.options.ticks;\r\n                        me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\r\n                    },\r\n                    afterTickToLabelConversion: function() {\r\n                        helpers.callback(this.options.afterTickToLabelConversion, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeCalculateTickRotation: function() {\r\n                        helpers.callback(this.options.beforeCalculateTickRotation, [this]);\r\n                    },\r\n                    calculateTickRotation: function() {\r\n                        var me = this;\r\n                        var context = me.ctx;\r\n                        var tickOpts = me.options.ticks;\r\n                        var labels = labelsFromTicks(me._ticks);\r\n\r\n                        // Get the width of each grid by calculating the difference\r\n                        // between x offsets between 0 and 1.\r\n                        var tickFont = parseFontOptions(tickOpts);\r\n                        context.font = tickFont.font;\r\n\r\n                        var labelRotation = tickOpts.minRotation || 0;\r\n\r\n                        if (labels.length && me.options.display && me.isHorizontal()) {\r\n                            var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\r\n                            var labelWidth = originalLabelWidth;\r\n                            var cosRotation, sinRotation;\r\n\r\n                            // Allow 3 pixels x2 padding either side for label readability\r\n                            var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\r\n\r\n                            // Max label rotation can be set or default to 90 - also act as a loop counter\r\n                            while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\r\n                                var angleRadians = helpers.toRadians(labelRotation);\r\n                                cosRotation = Math.cos(angleRadians);\r\n                                sinRotation = Math.sin(angleRadians);\r\n\r\n                                if (sinRotation * originalLabelWidth > me.maxHeight) {\r\n                                    // go back one step\r\n                                    labelRotation--;\r\n                                    break;\r\n                                }\r\n\r\n                                labelRotation++;\r\n                                labelWidth = cosRotation * originalLabelWidth;\r\n                            }\r\n                        }\r\n\r\n                        me.labelRotation = labelRotation;\r\n                    },\r\n                    afterCalculateTickRotation: function() {\r\n                        helpers.callback(this.options.afterCalculateTickRotation, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeFit: function() {\r\n                        helpers.callback(this.options.beforeFit, [this]);\r\n                    },\r\n                    fit: function() {\r\n                        var me = this;\r\n                        // Reset\r\n                        var minSize = me.minSize = {\r\n                            width: 0,\r\n                            height: 0\r\n                        };\r\n\r\n                        var labels = labelsFromTicks(me._ticks);\r\n\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n                        var scaleLabelOpts = opts.scaleLabel;\r\n                        var gridLineOpts = opts.gridLines;\r\n                        var display = opts.display;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        var tickFont = parseFontOptions(tickOpts);\r\n                        var tickMarkLength = opts.gridLines.tickMarkLength;\r\n\r\n                        // Width\r\n                        if (isHorizontal) {\r\n                            // subtract the margins to line up with the chartArea if we are a full width scale\r\n                            minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\r\n                        } else {\r\n                            minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n                        }\r\n\r\n                        // height\r\n                        if (isHorizontal) {\r\n                            minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n                        } else {\r\n                            minSize.height = me.maxHeight; // fill all the height\r\n                        }\r\n\r\n                        // Are we showing a title for the scale?\r\n                        if (scaleLabelOpts.display && display) {\r\n                            var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\r\n                            var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\r\n                            var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\r\n\r\n                            if (isHorizontal) {\r\n                                minSize.height += deltaHeight;\r\n                            } else {\r\n                                minSize.width += deltaHeight;\r\n                            }\r\n                        }\r\n\r\n                        // Don't bother fitting the ticks if we are not showing them\r\n                        if (tickOpts.display && display) {\r\n                            var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\r\n                            var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\r\n                            var lineSpace = tickFont.size * 0.5;\r\n                            var tickPadding = me.options.ticks.padding;\r\n\r\n                            if (isHorizontal) {\r\n                                // A horizontal axis is more constrained by the height.\r\n                                me.longestLabelWidth = largestTextWidth;\r\n\r\n                                var angleRadians = helpers.toRadians(me.labelRotation);\r\n                                var cosRotation = Math.cos(angleRadians);\r\n                                var sinRotation = Math.sin(angleRadians);\r\n\r\n                                // TODO - improve this calculation\r\n                                var labelHeight = (sinRotation * largestTextWidth)\r\n                                    + (tickFont.size * tallestLabelHeightInLines)\r\n                                    + (lineSpace * (tallestLabelHeightInLines - 1))\r\n                                    + lineSpace; // padding\r\n\r\n                                minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\r\n\r\n                                me.ctx.font = tickFont.font;\r\n                                var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\r\n                                var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\r\n\r\n                                // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\r\n                                // which means that the right padding is dominated by the font height\r\n                                if (me.labelRotation !== 0) {\r\n                                    me.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\r\n                                    me.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\r\n                                } else {\r\n                                    me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\r\n                                    me.paddingRight = lastLabelWidth / 2 + 3;\r\n                                }\r\n                            } else {\r\n                                // A vertical axis is more constrained by the width. Labels are the\r\n                                // dominant factor here, so get that length first and account for padding\r\n                                if (tickOpts.mirror) {\r\n                                    largestTextWidth = 0;\r\n                                } else {\r\n                                    // use lineSpace for consistency with horizontal axis\r\n                                    // tickPadding is not implemented for horizontal\r\n                                    largestTextWidth += tickPadding + lineSpace;\r\n                                }\r\n\r\n                                minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\r\n\r\n                                me.paddingTop = tickFont.size / 2;\r\n                                me.paddingBottom = tickFont.size / 2;\r\n                            }\r\n                        }\r\n\r\n                        me.handleMargins();\r\n\r\n                        me.width = minSize.width;\r\n                        me.height = minSize.height;\r\n                    },\r\n\r\n                    /**\r\n                     * Handle margins and padding interactions\r\n                     * @private\r\n                     */\r\n                    handleMargins: function() {\r\n                        var me = this;\r\n                        if (me.margins) {\r\n                            me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\r\n                            me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\r\n                            me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\r\n                            me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\r\n                        }\r\n                    },\r\n\r\n                    afterFit: function() {\r\n                        helpers.callback(this.options.afterFit, [this]);\r\n                    },\r\n\r\n                    // Shared Methods\r\n                    isHorizontal: function() {\r\n                        return this.options.position === 'top' || this.options.position === 'bottom';\r\n                    },\r\n                    isFullWidth: function() {\r\n                        return (this.options.fullWidth);\r\n                    },\r\n\r\n                    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\r\n                    getRightValue: function(rawValue) {\r\n                        // Null and undefined values first\r\n                        if (helpers.isNullOrUndef(rawValue)) {\r\n                            return NaN;\r\n                        }\r\n                        // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\r\n                        if (typeof rawValue === 'number' && !isFinite(rawValue)) {\r\n                            return NaN;\r\n                        }\r\n                        // If it is in fact an object, dive in one more level\r\n                        if (rawValue) {\r\n                            if (this.isHorizontal()) {\r\n                                if (rawValue.x !== undefined) {\r\n                                    return this.getRightValue(rawValue.x);\r\n                                }\r\n                            } else if (rawValue.y !== undefined) {\r\n                                return this.getRightValue(rawValue.y);\r\n                            }\r\n                        }\r\n\r\n                        // Value is good, return it\r\n                        return rawValue;\r\n                    },\r\n\r\n                    /**\r\n                     * Used to get the value to display in the tooltip for the data at the given index\r\n                     * @param index\r\n                     * @param datasetIndex\r\n                     */\r\n                    getLabelForIndex: helpers.noop,\r\n\r\n                    /**\r\n                     * Returns the location of the given data point. Value can either be an index or a numerical value\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     * @param value\r\n                     * @param index\r\n                     * @param datasetIndex\r\n                     */\r\n                    getPixelForValue: helpers.noop,\r\n\r\n                    /**\r\n                     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     * @param pixel\r\n                     */\r\n                    getValueForPixel: helpers.noop,\r\n\r\n                    /**\r\n                     * Returns the location of the tick at the given index\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getPixelForTick: function(index) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        if (me.isHorizontal()) {\r\n                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n                            var tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\r\n                            var pixel = (tickWidth * index) + me.paddingLeft;\r\n\r\n                            if (offset) {\r\n                                pixel += tickWidth / 2;\r\n                            }\r\n\r\n                            var finalVal = me.left + Math.round(pixel);\r\n                            finalVal += me.isFullWidth() ? me.margins.left : 0;\r\n                            return finalVal;\r\n                        }\r\n                        var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\r\n                        return me.top + (index * (innerHeight / (me._ticks.length - 1)));\r\n                    },\r\n\r\n                    /**\r\n                     * Utility for getting the pixel location of a percentage of scale\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getPixelForDecimal: function(decimal) {\r\n                        var me = this;\r\n                        if (me.isHorizontal()) {\r\n                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n                            var valueOffset = (innerWidth * decimal) + me.paddingLeft;\r\n\r\n                            var finalVal = me.left + Math.round(valueOffset);\r\n                            finalVal += me.isFullWidth() ? me.margins.left : 0;\r\n                            return finalVal;\r\n                        }\r\n                        return me.top + (decimal * me.height);\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the pixel for the minimum chart value\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getBasePixel: function() {\r\n                        return this.getPixelForValue(this.getBaseValue());\r\n                    },\r\n\r\n                    getBaseValue: function() {\r\n                        var me = this;\r\n                        var min = me.min;\r\n                        var max = me.max;\r\n\r\n                        return me.beginAtZero ? 0 :\r\n                            min < 0 && max < 0 ? max :\r\n                                min > 0 && max > 0 ? min :\r\n                                    0;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns a subset of ticks to be plotted to avoid overlapping labels.\r\n                     * @private\r\n                     */\r\n                    _autoSkip: function(ticks) {\r\n                        var skipRatio;\r\n                        var me = this;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var optionTicks = me.options.ticks.minor;\r\n                        var tickCount = ticks.length;\r\n                        var labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n                        var cosRotation = Math.cos(labelRotationRadians);\r\n                        var longestRotatedLabel = me.longestLabelWidth * cosRotation;\r\n                        var result = [];\r\n                        var i, tick, shouldSkip;\r\n\r\n                        // figure out the maximum number of gridlines to show\r\n                        var maxTicks;\r\n                        if (optionTicks.maxTicksLimit) {\r\n                            maxTicks = optionTicks.maxTicksLimit;\r\n                        }\r\n\r\n                        if (isHorizontal) {\r\n                            skipRatio = false;\r\n\r\n                            if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\r\n                                skipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\r\n                            }\r\n\r\n                            // if they defined a max number of optionTicks,\r\n                            // increase skipRatio until that number is met\r\n                            if (maxTicks && tickCount > maxTicks) {\r\n                                skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\r\n                            }\r\n                        }\r\n\r\n                        for (i = 0; i < tickCount; i++) {\r\n                            tick = ticks[i];\r\n\r\n                            // Since we always show the last tick,we need may need to hide the last shown one before\r\n                            shouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\r\n                            if (shouldSkip && i !== tickCount - 1) {\r\n                                // leave tick in place but make sure it's not displayed (#4635)\r\n                                delete tick.label;\r\n                            }\r\n                            result.push(tick);\r\n                        }\r\n                        return result;\r\n                    },\r\n\r\n                    // Actually draw the scale on the canvas\r\n                    // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\r\n                    draw: function(chartArea) {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        if (!options.display) {\r\n                            return;\r\n                        }\r\n\r\n                        var context = me.ctx;\r\n                        var globalDefaults = defaults.global;\r\n                        var optionTicks = options.ticks.minor;\r\n                        var optionMajorTicks = options.ticks.major || optionTicks;\r\n                        var gridLines = options.gridLines;\r\n                        var scaleLabel = options.scaleLabel;\r\n\r\n                        var isRotated = me.labelRotation !== 0;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\r\n                        var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\r\n                        var tickFont = parseFontOptions(optionTicks);\r\n                        var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\r\n                        var majorTickFont = parseFontOptions(optionMajorTicks);\r\n\r\n                        var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\r\n\r\n                        var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\r\n                        var scaleLabelFont = parseFontOptions(scaleLabel);\r\n                        var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\r\n                        var labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n\r\n                        var itemsToDraw = [];\r\n\r\n                        var axisWidth = me.options.gridLines.lineWidth;\r\n                        var xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\r\n                        var xTickEnd = options.position === 'right' ? me.right + tl : me.right;\r\n                        var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\r\n                        var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\r\n\r\n                        helpers.each(ticks, function(tick, index) {\r\n                            // autoskipper skipped this tick (#4635)\r\n                            if (helpers.isNullOrUndef(tick.label)) {\r\n                                return;\r\n                            }\r\n\r\n                            var label = tick.label;\r\n                            var lineWidth, lineColor, borderDash, borderDashOffset;\r\n                            if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\r\n                                // Draw the first index specially\r\n                                lineWidth = gridLines.zeroLineWidth;\r\n                                lineColor = gridLines.zeroLineColor;\r\n                                borderDash = gridLines.zeroLineBorderDash;\r\n                                borderDashOffset = gridLines.zeroLineBorderDashOffset;\r\n                            } else {\r\n                                lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\r\n                                lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\r\n                                borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\r\n                                borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\r\n                            }\r\n\r\n                            // Common properties\r\n                            var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\r\n                            var textAlign = 'middle';\r\n                            var textBaseline = 'middle';\r\n                            var tickPadding = optionTicks.padding;\r\n\r\n                            if (isHorizontal) {\r\n                                var labelYOffset = tl + tickPadding;\r\n\r\n                                if (options.position === 'bottom') {\r\n                                    // bottom\r\n                                    textBaseline = !isRotated ? 'top' : 'middle';\r\n                                    textAlign = !isRotated ? 'center' : 'right';\r\n                                    labelY = me.top + labelYOffset;\r\n                                } else {\r\n                                    // top\r\n                                    textBaseline = !isRotated ? 'bottom' : 'middle';\r\n                                    textAlign = !isRotated ? 'center' : 'left';\r\n                                    labelY = me.bottom - labelYOffset;\r\n                                }\r\n\r\n                                var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\r\n                                if (xLineValue < me.left) {\r\n                                    lineColor = 'rgba(0,0,0,0)';\r\n                                }\r\n                                xLineValue += helpers.aliasPixel(lineWidth);\r\n\r\n                                labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\r\n\r\n                                tx1 = tx2 = x1 = x2 = xLineValue;\r\n                                ty1 = yTickStart;\r\n                                ty2 = yTickEnd;\r\n                                y1 = chartArea.top;\r\n                                y2 = chartArea.bottom + axisWidth;\r\n                            } else {\r\n                                var isLeft = options.position === 'left';\r\n                                var labelXOffset;\r\n\r\n                                if (optionTicks.mirror) {\r\n                                    textAlign = isLeft ? 'left' : 'right';\r\n                                    labelXOffset = tickPadding;\r\n                                } else {\r\n                                    textAlign = isLeft ? 'right' : 'left';\r\n                                    labelXOffset = tl + tickPadding;\r\n                                }\r\n\r\n                                labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\r\n\r\n                                var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\r\n                                if (yLineValue < me.top) {\r\n                                    lineColor = 'rgba(0,0,0,0)';\r\n                                }\r\n                                yLineValue += helpers.aliasPixel(lineWidth);\r\n\r\n                                labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\r\n\r\n                                tx1 = xTickStart;\r\n                                tx2 = xTickEnd;\r\n                                x1 = chartArea.left;\r\n                                x2 = chartArea.right + axisWidth;\r\n                                ty1 = ty2 = y1 = y2 = yLineValue;\r\n                            }\r\n\r\n                            itemsToDraw.push({\r\n                                tx1: tx1,\r\n                                ty1: ty1,\r\n                                tx2: tx2,\r\n                                ty2: ty2,\r\n                                x1: x1,\r\n                                y1: y1,\r\n                                x2: x2,\r\n                                y2: y2,\r\n                                labelX: labelX,\r\n                                labelY: labelY,\r\n                                glWidth: lineWidth,\r\n                                glColor: lineColor,\r\n                                glBorderDash: borderDash,\r\n                                glBorderDashOffset: borderDashOffset,\r\n                                rotation: -1 * labelRotationRadians,\r\n                                label: label,\r\n                                major: tick.major,\r\n                                textBaseline: textBaseline,\r\n                                textAlign: textAlign\r\n                            });\r\n                        });\r\n\r\n                        // Draw all of the tick labels, tick marks, and grid lines at the correct places\r\n                        helpers.each(itemsToDraw, function(itemToDraw) {\r\n                            if (gridLines.display) {\r\n                                context.save();\r\n                                context.lineWidth = itemToDraw.glWidth;\r\n                                context.strokeStyle = itemToDraw.glColor;\r\n                                if (context.setLineDash) {\r\n                                    context.setLineDash(itemToDraw.glBorderDash);\r\n                                    context.lineDashOffset = itemToDraw.glBorderDashOffset;\r\n                                }\r\n\r\n                                context.beginPath();\r\n\r\n                                if (gridLines.drawTicks) {\r\n                                    context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\r\n                                    context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\r\n                                }\r\n\r\n                                if (gridLines.drawOnChartArea) {\r\n                                    context.moveTo(itemToDraw.x1, itemToDraw.y1);\r\n                                    context.lineTo(itemToDraw.x2, itemToDraw.y2);\r\n                                }\r\n\r\n                                context.stroke();\r\n                                context.restore();\r\n                            }\r\n\r\n                            if (optionTicks.display) {\r\n                                // Make sure we draw text in the correct color and font\r\n                                context.save();\r\n                                context.translate(itemToDraw.labelX, itemToDraw.labelY);\r\n                                context.rotate(itemToDraw.rotation);\r\n                                context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\r\n                                context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\r\n                                context.textBaseline = itemToDraw.textBaseline;\r\n                                context.textAlign = itemToDraw.textAlign;\r\n\r\n                                var label = itemToDraw.label;\r\n                                if (helpers.isArray(label)) {\r\n                                    var lineCount = label.length;\r\n                                    var lineHeight = tickFont.size * 1.5;\r\n                                    var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\r\n\r\n                                    for (var i = 0; i < lineCount; ++i) {\r\n                                        // We just make sure the multiline element is a string here..\r\n                                        context.fillText('' + label[i], 0, y);\r\n                                        // apply same lineSpacing as calculated @ L#320\r\n                                        y += lineHeight;\r\n                                    }\r\n                                } else {\r\n                                    context.fillText(label, 0, 0);\r\n                                }\r\n                                context.restore();\r\n                            }\r\n                        });\r\n\r\n                        if (scaleLabel.display) {\r\n                            // Draw the scale label\r\n                            var scaleLabelX;\r\n                            var scaleLabelY;\r\n                            var rotation = 0;\r\n                            var halfLineHeight = parseLineHeight(scaleLabel) / 2;\r\n\r\n                            if (isHorizontal) {\r\n                                scaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\r\n                                scaleLabelY = options.position === 'bottom'\r\n                                    ? me.bottom - halfLineHeight - scaleLabelPadding.bottom\r\n                                    : me.top + halfLineHeight + scaleLabelPadding.top;\r\n                            } else {\r\n                                var isLeft = options.position === 'left';\r\n                                scaleLabelX = isLeft\r\n                                    ? me.left + halfLineHeight + scaleLabelPadding.top\r\n                                    : me.right - halfLineHeight - scaleLabelPadding.top;\r\n                                scaleLabelY = me.top + ((me.bottom - me.top) / 2);\r\n                                rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\r\n                            }\r\n\r\n                            context.save();\r\n                            context.translate(scaleLabelX, scaleLabelY);\r\n                            context.rotate(rotation);\r\n                            context.textAlign = 'center';\r\n                            context.textBaseline = 'middle';\r\n                            context.fillStyle = scaleLabelFontColor; // render in correct colour\r\n                            context.font = scaleLabelFont.font;\r\n                            context.fillText(scaleLabel.labelString, 0, 0);\r\n                            context.restore();\r\n                        }\r\n\r\n                        if (gridLines.drawBorder) {\r\n                            // Draw the line at the edge of the axis\r\n                            context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\r\n                            context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\r\n                            var x1 = me.left;\r\n                            var x2 = me.right + axisWidth;\r\n                            var y1 = me.top;\r\n                            var y2 = me.bottom + axisWidth;\r\n\r\n                            var aliasPixel = helpers.aliasPixel(context.lineWidth);\r\n                            if (isHorizontal) {\r\n                                y1 = y2 = options.position === 'top' ? me.bottom : me.top;\r\n                                y1 += aliasPixel;\r\n                                y2 += aliasPixel;\r\n                            } else {\r\n                                x1 = x2 = options.position === 'left' ? me.right : me.left;\r\n                                x1 += aliasPixel;\r\n                                x2 += aliasPixel;\r\n                            }\r\n\r\n                            context.beginPath();\r\n                            context.moveTo(x1, y1);\r\n                            context.lineTo(x2, y2);\r\n                            context.stroke();\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"25\": 25, \"36\": 36 }], 24: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.scaleService = {\r\n                    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\r\n                    // use the new chart options to grab the correct scale\r\n                    constructors: {},\r\n                    // Use a registration function so that we can move to an ES6 map when we no longer need to support\r\n                    // old browsers\r\n\r\n                    // Scale config defaults\r\n                    defaults: {},\r\n                    registerScaleType: function(type, scaleConstructor, scaleDefaults) {\r\n                        this.constructors[type] = scaleConstructor;\r\n                        this.defaults[type] = helpers.clone(scaleDefaults);\r\n                    },\r\n                    getScaleConstructor: function(type) {\r\n                        return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\r\n                    },\r\n                    getScaleDefaults: function(type) {\r\n                        // Return the scale defaults merged with the global settings so that we always use the latest ones\r\n                        return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\r\n                    },\r\n                    updateScaleDefaults: function(type, additions) {\r\n                        var me = this;\r\n                        if (me.defaults.hasOwnProperty(type)) {\r\n                            me.defaults[type] = helpers.extend(me.defaults[type], additions);\r\n                        }\r\n                    },\r\n                    addScalesToLayout: function(chart) {\r\n                        // Adds each scale to the chart.boxes array to be sized accordingly\r\n                        helpers.each(chart.scales, function(scale) {\r\n                            // Set ILayoutItem parameters for backwards compatibility\r\n                            scale.fullWidth = scale.options.fullWidth;\r\n                            scale.position = scale.options.position;\r\n                            scale.weight = scale.options.weight;\r\n                            layouts.addBox(chart, scale);\r\n                        });\r\n                    }\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"21\": 21, \"36\": 36 }], 25: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Namespace to hold static tick generation functions\r\n             * @namespace Chart.Ticks\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Namespace to hold formatters for different types of ticks\r\n                 * @namespace Chart.Ticks.formatters\r\n                 */\r\n                formatters: {\r\n                    /**\r\n                     * Formatter for value labels\r\n                     * @method Chart.Ticks.formatters.values\r\n                     * @param value the value to display\r\n                     * @return {String|Array} the label to display\r\n                     */\r\n                    values: function(value) {\r\n                        return helpers.isArray(value) ? value : '' + value;\r\n                    },\r\n\r\n                    /**\r\n                     * Formatter for linear numeric ticks\r\n                     * @method Chart.Ticks.formatters.linear\r\n                     * @param tickValue {Number} the value to be formatted\r\n                     * @param index {Number} the position of the tickValue parameter in the ticks array\r\n                     * @param ticks {Array<Number>} the list of ticks being converted\r\n                     * @return {String} string representation of the tickValue parameter\r\n                     */\r\n                    linear: function(tickValue, index, ticks) {\r\n                        // If we have lots of ticks, don't use the ones\r\n                        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\r\n\r\n                        // If we have a number like 2.5 as the delta, figure out how many decimal places we need\r\n                        if (Math.abs(delta) > 1) {\r\n                            if (tickValue !== Math.floor(tickValue)) {\r\n                                // not an integer\r\n                                delta = tickValue - Math.floor(tickValue);\r\n                            }\r\n                        }\r\n\r\n                        var logDelta = helpers.log10(Math.abs(delta));\r\n                        var tickString = '';\r\n\r\n                        if (tickValue !== 0) {\r\n                            var numDecimal = -1 * Math.floor(logDelta);\r\n                            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\r\n                            tickString = tickValue.toFixed(numDecimal);\r\n                        } else {\r\n                            tickString = '0'; // never show decimal places for 0\r\n                        }\r\n\r\n                        return tickString;\r\n                    },\r\n\r\n                    logarithmic: function(tickValue, index, ticks) {\r\n                        var remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\r\n\r\n                        if (tickValue === 0) {\r\n                            return '0';\r\n                        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\r\n                            return tickValue.toExponential();\r\n                        }\r\n                        return '';\r\n                    }\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 26: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                tooltips: {\r\n                    enabled: true,\r\n                    custom: null,\r\n                    mode: 'nearest',\r\n                    position: 'average',\r\n                    intersect: true,\r\n                    backgroundColor: 'rgba(0,0,0,0.8)',\r\n                    titleFontStyle: 'bold',\r\n                    titleSpacing: 2,\r\n                    titleMarginBottom: 6,\r\n                    titleFontColor: '#fff',\r\n                    titleAlign: 'left',\r\n                    bodySpacing: 2,\r\n                    bodyFontColor: '#fff',\r\n                    bodyAlign: 'left',\r\n                    footerFontStyle: 'bold',\r\n                    footerSpacing: 2,\r\n                    footerMarginTop: 6,\r\n                    footerFontColor: '#fff',\r\n                    footerAlign: 'left',\r\n                    yPadding: 6,\r\n                    xPadding: 6,\r\n                    caretPadding: 2,\r\n                    caretSize: 5,\r\n                    cornerRadius: 6,\r\n                    multiKeyBackground: '#fff',\r\n                    displayColors: true,\r\n                    borderColor: 'rgba(0,0,0,0)',\r\n                    borderWidth: 0,\r\n                    callbacks: {\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeTitle: helpers.noop,\r\n                        title: function(tooltipItems, data) {\r\n                            // Pick first xLabel for now\r\n                            var title = '';\r\n                            var labels = data.labels;\r\n                            var labelCount = labels ? labels.length : 0;\r\n\r\n                            if (tooltipItems.length > 0) {\r\n                                var item = tooltipItems[0];\r\n\r\n                                if (item.xLabel) {\r\n                                    title = item.xLabel;\r\n                                } else if (labelCount > 0 && item.index < labelCount) {\r\n                                    title = labels[item.index];\r\n                                }\r\n                            }\r\n\r\n                            return title;\r\n                        },\r\n                        afterTitle: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeBody: helpers.noop,\r\n\r\n                        // Args are: (tooltipItem, data)\r\n                        beforeLabel: helpers.noop,\r\n                        label: function(tooltipItem, data) {\r\n                            var label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\r\n                            if (label) {\r\n                                label += ': ';\r\n                            }\r\n                            label += tooltipItem.yLabel;\r\n                            return label;\r\n                        },\r\n                        labelColor: function(tooltipItem, chart) {\r\n                            var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n                            var activeElement = meta.data[tooltipItem.index];\r\n                            var view = activeElement._view;\r\n                            return {\r\n                                borderColor: view.borderColor,\r\n                                backgroundColor: view.backgroundColor\r\n                            };\r\n                        },\r\n                        labelTextColor: function() {\r\n                            return this._options.bodyFontColor;\r\n                        },\r\n                        afterLabel: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        afterBody: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeFooter: helpers.noop,\r\n                        footer: helpers.noop,\r\n                        afterFooter: helpers.noop\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                /**\r\n                   * Helper method to merge the opacity into a color\r\n                   */\r\n                function mergeOpacity(colorString, opacity) {\r\n                    var color = helpers.color(colorString);\r\n                    return color.alpha(opacity * color.alpha()).rgbaString();\r\n                }\r\n\r\n                // Helper to push or concat based on if the 2nd parameter is an array or not\r\n                function pushOrConcat(base, toPush) {\r\n                    if (toPush) {\r\n                        if (helpers.isArray(toPush)) {\r\n                            // base = base.concat(toPush);\r\n                            Array.prototype.push.apply(base, toPush);\r\n                        } else {\r\n                            base.push(toPush);\r\n                        }\r\n                    }\r\n\r\n                    return base;\r\n                }\r\n\r\n                // Private helper to create a tooltip item model\r\n                // @param element : the chart element (point, arc, bar) to create the tooltip item for\r\n                // @return : new tooltip item\r\n                function createTooltipItem(element) {\r\n                    var xScale = element._xScale;\r\n                    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\r\n                    var index = element._index;\r\n                    var datasetIndex = element._datasetIndex;\r\n\r\n                    return {\r\n                        xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\r\n                        yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\r\n                        index: index,\r\n                        datasetIndex: datasetIndex,\r\n                        x: element._model.x,\r\n                        y: element._model.y\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Helper to get the reset model for the tooltip\r\n                 * @param tooltipOpts {Object} the tooltip options\r\n                 */\r\n                function getBaseModel(tooltipOpts) {\r\n                    var globalDefaults = defaults.global;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n\r\n                    return {\r\n                        // Positioning\r\n                        xPadding: tooltipOpts.xPadding,\r\n                        yPadding: tooltipOpts.yPadding,\r\n                        xAlign: tooltipOpts.xAlign,\r\n                        yAlign: tooltipOpts.yAlign,\r\n\r\n                        // Body\r\n                        bodyFontColor: tooltipOpts.bodyFontColor,\r\n                        _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\r\n                        _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\r\n                        _bodyAlign: tooltipOpts.bodyAlign,\r\n                        bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\r\n                        bodySpacing: tooltipOpts.bodySpacing,\r\n\r\n                        // Title\r\n                        titleFontColor: tooltipOpts.titleFontColor,\r\n                        _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\r\n                        _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\r\n                        titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\r\n                        _titleAlign: tooltipOpts.titleAlign,\r\n                        titleSpacing: tooltipOpts.titleSpacing,\r\n                        titleMarginBottom: tooltipOpts.titleMarginBottom,\r\n\r\n                        // Footer\r\n                        footerFontColor: tooltipOpts.footerFontColor,\r\n                        _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\r\n                        _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\r\n                        footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\r\n                        _footerAlign: tooltipOpts.footerAlign,\r\n                        footerSpacing: tooltipOpts.footerSpacing,\r\n                        footerMarginTop: tooltipOpts.footerMarginTop,\r\n\r\n                        // Appearance\r\n                        caretSize: tooltipOpts.caretSize,\r\n                        cornerRadius: tooltipOpts.cornerRadius,\r\n                        backgroundColor: tooltipOpts.backgroundColor,\r\n                        opacity: 0,\r\n                        legendColorBackground: tooltipOpts.multiKeyBackground,\r\n                        displayColors: tooltipOpts.displayColors,\r\n                        borderColor: tooltipOpts.borderColor,\r\n                        borderWidth: tooltipOpts.borderWidth\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Get the size of the tooltip\r\n                 */\r\n                function getTooltipSize(tooltip, model) {\r\n                    var ctx = tooltip._chart.ctx;\r\n\r\n                    var height = model.yPadding * 2; // Tooltip Padding\r\n                    var width = 0;\r\n\r\n                    // Count of all lines in the body\r\n                    var body = model.body;\r\n                    var combinedBodyLength = body.reduce(function(count, bodyItem) {\r\n                        return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\r\n                    }, 0);\r\n                    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\r\n\r\n                    var titleLineCount = model.title.length;\r\n                    var footerLineCount = model.footer.length;\r\n                    var titleFontSize = model.titleFontSize;\r\n                    var bodyFontSize = model.bodyFontSize;\r\n                    var footerFontSize = model.footerFontSize;\r\n\r\n                    height += titleLineCount * titleFontSize; // Title Lines\r\n                    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\r\n                    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\r\n                    height += combinedBodyLength * bodyFontSize; // Body Lines\r\n                    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\r\n                    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\r\n                    height += footerLineCount * (footerFontSize); // Footer Lines\r\n                    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\r\n\r\n                    // Title width\r\n                    var widthPadding = 0;\r\n                    var maxLineWidth = function(line) {\r\n                        width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n                    };\r\n\r\n                    ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\r\n                    helpers.each(model.title, maxLineWidth);\r\n\r\n                    // Body width\r\n                    ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\r\n                    helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\r\n\r\n                    // Body lines may include some extra width due to the color box\r\n                    widthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\r\n                    helpers.each(body, function(bodyItem) {\r\n                        helpers.each(bodyItem.before, maxLineWidth);\r\n                        helpers.each(bodyItem.lines, maxLineWidth);\r\n                        helpers.each(bodyItem.after, maxLineWidth);\r\n                    });\r\n\r\n                    // Reset back to 0\r\n                    widthPadding = 0;\r\n\r\n                    // Footer width\r\n                    ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\r\n                    helpers.each(model.footer, maxLineWidth);\r\n\r\n                    // Add padding\r\n                    width += 2 * model.xPadding;\r\n\r\n                    return {\r\n                        width: width,\r\n                        height: height\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Helper to get the alignment of a tooltip given the size\r\n                 */\r\n                function determineAlignment(tooltip, size) {\r\n                    var model = tooltip._model;\r\n                    var chart = tooltip._chart;\r\n                    var chartArea = tooltip._chart.chartArea;\r\n                    var xAlign = 'center';\r\n                    var yAlign = 'center';\r\n\r\n                    if (model.y < size.height) {\r\n                        yAlign = 'top';\r\n                    } else if (model.y > (chart.height - size.height)) {\r\n                        yAlign = 'bottom';\r\n                    }\r\n\r\n                    var lf, rf; // functions to determine left, right alignment\r\n                    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\r\n                    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\r\n                    var midX = (chartArea.left + chartArea.right) / 2;\r\n                    var midY = (chartArea.top + chartArea.bottom) / 2;\r\n\r\n                    if (yAlign === 'center') {\r\n                        lf = function(x) {\r\n                            return x <= midX;\r\n                        };\r\n                        rf = function(x) {\r\n                            return x > midX;\r\n                        };\r\n                    } else {\r\n                        lf = function(x) {\r\n                            return x <= (size.width / 2);\r\n                        };\r\n                        rf = function(x) {\r\n                            return x >= (chart.width - (size.width / 2));\r\n                        };\r\n                    }\r\n\r\n                    olf = function(x) {\r\n                        return x + size.width + model.caretSize + model.caretPadding > chart.width;\r\n                    };\r\n                    orf = function(x) {\r\n                        return x - size.width - model.caretSize - model.caretPadding < 0;\r\n                    };\r\n                    yf = function(y) {\r\n                        return y <= midY ? 'top' : 'bottom';\r\n                    };\r\n\r\n                    if (lf(model.x)) {\r\n                        xAlign = 'left';\r\n\r\n                        // Is tooltip too wide and goes over the right side of the chart.?\r\n                        if (olf(model.x)) {\r\n                            xAlign = 'center';\r\n                            yAlign = yf(model.y);\r\n                        }\r\n                    } else if (rf(model.x)) {\r\n                        xAlign = 'right';\r\n\r\n                        // Is tooltip too wide and goes outside left edge of canvas?\r\n                        if (orf(model.x)) {\r\n                            xAlign = 'center';\r\n                            yAlign = yf(model.y);\r\n                        }\r\n                    }\r\n\r\n                    var opts = tooltip._options;\r\n                    return {\r\n                        xAlign: opts.xAlign ? opts.xAlign : xAlign,\r\n                        yAlign: opts.yAlign ? opts.yAlign : yAlign\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\r\n                 */\r\n                function getBackgroundPoint(vm, size, alignment, chart) {\r\n                    // Background Position\r\n                    var x = vm.x;\r\n                    var y = vm.y;\r\n\r\n                    var caretSize = vm.caretSize;\r\n                    var caretPadding = vm.caretPadding;\r\n                    var cornerRadius = vm.cornerRadius;\r\n                    var xAlign = alignment.xAlign;\r\n                    var yAlign = alignment.yAlign;\r\n                    var paddingAndSize = caretSize + caretPadding;\r\n                    var radiusAndPadding = cornerRadius + caretPadding;\r\n\r\n                    if (xAlign === 'right') {\r\n                        x -= size.width;\r\n                    } else if (xAlign === 'center') {\r\n                        x -= (size.width / 2);\r\n                        if (x + size.width > chart.width) {\r\n                            x = chart.width - size.width;\r\n                        }\r\n                        if (x < 0) {\r\n                            x = 0;\r\n                        }\r\n                    }\r\n\r\n                    if (yAlign === 'top') {\r\n                        y += paddingAndSize;\r\n                    } else if (yAlign === 'bottom') {\r\n                        y -= size.height + paddingAndSize;\r\n                    } else {\r\n                        y -= (size.height / 2);\r\n                    }\r\n\r\n                    if (yAlign === 'center') {\r\n                        if (xAlign === 'left') {\r\n                            x += paddingAndSize;\r\n                        } else if (xAlign === 'right') {\r\n                            x -= paddingAndSize;\r\n                        }\r\n                    } else if (xAlign === 'left') {\r\n                        x -= radiusAndPadding;\r\n                    } else if (xAlign === 'right') {\r\n                        x += radiusAndPadding;\r\n                    }\r\n\r\n                    return {\r\n                        x: x,\r\n                        y: y\r\n                    };\r\n                }\r\n\r\n                Chart.Tooltip = Element.extend({\r\n                    initialize: function() {\r\n                        this._model = getBaseModel(this._options);\r\n                        this._lastActive = [];\r\n                    },\r\n\r\n                    // Get the title\r\n                    // Args are: (tooltipItem, data)\r\n                    getTitle: function() {\r\n                        var me = this;\r\n                        var opts = me._options;\r\n                        var callbacks = opts.callbacks;\r\n\r\n                        var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\r\n                        var title = callbacks.title.apply(me, arguments);\r\n                        var afterTitle = callbacks.afterTitle.apply(me, arguments);\r\n\r\n                        var lines = [];\r\n                        lines = pushOrConcat(lines, beforeTitle);\r\n                        lines = pushOrConcat(lines, title);\r\n                        lines = pushOrConcat(lines, afterTitle);\r\n\r\n                        return lines;\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getBeforeBody: function() {\r\n                        var lines = this._options.callbacks.beforeBody.apply(this, arguments);\r\n                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getBody: function(tooltipItems, data) {\r\n                        var me = this;\r\n                        var callbacks = me._options.callbacks;\r\n                        var bodyItems = [];\r\n\r\n                        helpers.each(tooltipItems, function(tooltipItem) {\r\n                            var bodyItem = {\r\n                                before: [],\r\n                                lines: [],\r\n                                after: []\r\n                            };\r\n                            pushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\r\n                            pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\r\n                            pushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\r\n\r\n                            bodyItems.push(bodyItem);\r\n                        });\r\n\r\n                        return bodyItems;\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getAfterBody: function() {\r\n                        var lines = this._options.callbacks.afterBody.apply(this, arguments);\r\n                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n                    },\r\n\r\n                    // Get the footer and beforeFooter and afterFooter lines\r\n                    // Args are: (tooltipItem, data)\r\n                    getFooter: function() {\r\n                        var me = this;\r\n                        var callbacks = me._options.callbacks;\r\n\r\n                        var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\r\n                        var footer = callbacks.footer.apply(me, arguments);\r\n                        var afterFooter = callbacks.afterFooter.apply(me, arguments);\r\n\r\n                        var lines = [];\r\n                        lines = pushOrConcat(lines, beforeFooter);\r\n                        lines = pushOrConcat(lines, footer);\r\n                        lines = pushOrConcat(lines, afterFooter);\r\n\r\n                        return lines;\r\n                    },\r\n\r\n                    update: function(changed) {\r\n                        var me = this;\r\n                        var opts = me._options;\r\n\r\n                        // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\r\n                        // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\r\n                        // which breaks any animations.\r\n                        var existingModel = me._model;\r\n                        var model = me._model = getBaseModel(opts);\r\n                        var active = me._active;\r\n\r\n                        var data = me._data;\r\n\r\n                        // In the case where active.length === 0 we need to keep these at existing values for good animations\r\n                        var alignment = {\r\n                            xAlign: existingModel.xAlign,\r\n                            yAlign: existingModel.yAlign\r\n                        };\r\n                        var backgroundPoint = {\r\n                            x: existingModel.x,\r\n                            y: existingModel.y\r\n                        };\r\n                        var tooltipSize = {\r\n                            width: existingModel.width,\r\n                            height: existingModel.height\r\n                        };\r\n                        var tooltipPosition = {\r\n                            x: existingModel.caretX,\r\n                            y: existingModel.caretY\r\n                        };\r\n\r\n                        var i, len;\r\n\r\n                        if (active.length) {\r\n                            model.opacity = 1;\r\n\r\n                            var labelColors = [];\r\n                            var labelTextColors = [];\r\n                            tooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\r\n\r\n                            var tooltipItems = [];\r\n                            for (i = 0, len = active.length; i < len; ++i) {\r\n                                tooltipItems.push(createTooltipItem(active[i]));\r\n                            }\r\n\r\n                            // If the user provided a filter function, use it to modify the tooltip items\r\n                            if (opts.filter) {\r\n                                tooltipItems = tooltipItems.filter(function(a) {\r\n                                    return opts.filter(a, data);\r\n                                });\r\n                            }\r\n\r\n                            // If the user provided a sorting function, use it to modify the tooltip items\r\n                            if (opts.itemSort) {\r\n                                tooltipItems = tooltipItems.sort(function(a, b) {\r\n                                    return opts.itemSort(a, b, data);\r\n                                });\r\n                            }\r\n\r\n                            // Determine colors for boxes\r\n                            helpers.each(tooltipItems, function(tooltipItem) {\r\n                                labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\r\n                                labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\r\n                            });\r\n\r\n                            // Build the Text Lines\r\n                            model.title = me.getTitle(tooltipItems, data);\r\n                            model.beforeBody = me.getBeforeBody(tooltipItems, data);\r\n                            model.body = me.getBody(tooltipItems, data);\r\n                            model.afterBody = me.getAfterBody(tooltipItems, data);\r\n                            model.footer = me.getFooter(tooltipItems, data);\r\n\r\n                            // Initial positioning and colors\r\n                            model.x = Math.round(tooltipPosition.x);\r\n                            model.y = Math.round(tooltipPosition.y);\r\n                            model.caretPadding = opts.caretPadding;\r\n                            model.labelColors = labelColors;\r\n                            model.labelTextColors = labelTextColors;\r\n\r\n                            // data points\r\n                            model.dataPoints = tooltipItems;\r\n\r\n                            // We need to determine alignment of the tooltip\r\n                            tooltipSize = getTooltipSize(this, model);\r\n                            alignment = determineAlignment(this, tooltipSize);\r\n                            // Final Size and Position\r\n                            backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\r\n                        } else {\r\n                            model.opacity = 0;\r\n                        }\r\n\r\n                        model.xAlign = alignment.xAlign;\r\n                        model.yAlign = alignment.yAlign;\r\n                        model.x = backgroundPoint.x;\r\n                        model.y = backgroundPoint.y;\r\n                        model.width = tooltipSize.width;\r\n                        model.height = tooltipSize.height;\r\n\r\n                        // Point where the caret on the tooltip points to\r\n                        model.caretX = tooltipPosition.x;\r\n                        model.caretY = tooltipPosition.y;\r\n\r\n                        me._model = model;\r\n\r\n                        if (changed && opts.custom) {\r\n                            opts.custom.call(me, model);\r\n                        }\r\n\r\n                        return me;\r\n                    },\r\n                    drawCaret: function(tooltipPoint, size) {\r\n                        var ctx = this._chart.ctx;\r\n                        var vm = this._view;\r\n                        var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\r\n\r\n                        ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n                        ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n                        ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n                    },\r\n                    getCaretPosition: function(tooltipPoint, size, vm) {\r\n                        var x1, x2, x3, y1, y2, y3;\r\n                        var caretSize = vm.caretSize;\r\n                        var cornerRadius = vm.cornerRadius;\r\n                        var xAlign = vm.xAlign;\r\n                        var yAlign = vm.yAlign;\r\n                        var ptX = tooltipPoint.x;\r\n                        var ptY = tooltipPoint.y;\r\n                        var width = size.width;\r\n                        var height = size.height;\r\n\r\n                        if (yAlign === 'center') {\r\n                            y2 = ptY + (height / 2);\r\n\r\n                            if (xAlign === 'left') {\r\n                                x1 = ptX;\r\n                                x2 = x1 - caretSize;\r\n                                x3 = x1;\r\n\r\n                                y1 = y2 + caretSize;\r\n                                y3 = y2 - caretSize;\r\n                            } else {\r\n                                x1 = ptX + width;\r\n                                x2 = x1 + caretSize;\r\n                                x3 = x1;\r\n\r\n                                y1 = y2 - caretSize;\r\n                                y3 = y2 + caretSize;\r\n                            }\r\n                        } else {\r\n                            if (xAlign === 'left') {\r\n                                x2 = ptX + cornerRadius + (caretSize);\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            } else if (xAlign === 'right') {\r\n                                x2 = ptX + width - cornerRadius - caretSize;\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            } else {\r\n                                x2 = vm.caretX;\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            }\r\n                            if (yAlign === 'top') {\r\n                                y1 = ptY;\r\n                                y2 = y1 - caretSize;\r\n                                y3 = y1;\r\n                            } else {\r\n                                y1 = ptY + height;\r\n                                y2 = y1 + caretSize;\r\n                                y3 = y1;\r\n                                // invert drawing order\r\n                                var tmp = x3;\r\n                                x3 = x1;\r\n                                x1 = tmp;\r\n                            }\r\n                        }\r\n                        return { x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3 };\r\n                    },\r\n                    drawTitle: function(pt, vm, ctx, opacity) {\r\n                        var title = vm.title;\r\n\r\n                        if (title.length) {\r\n                            ctx.textAlign = vm._titleAlign;\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            var titleFontSize = vm.titleFontSize;\r\n                            var titleSpacing = vm.titleSpacing;\r\n\r\n                            ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\r\n                            ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\r\n                            var i, len;\r\n                            for (i = 0, len = title.length; i < len; ++i) {\r\n                                ctx.fillText(title[i], pt.x, pt.y);\r\n                                pt.y += titleFontSize + titleSpacing; // Line Height and spacing\r\n\r\n                                if (i + 1 === title.length) {\r\n                                    pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    drawBody: function(pt, vm, ctx, opacity) {\r\n                        var bodyFontSize = vm.bodyFontSize;\r\n                        var bodySpacing = vm.bodySpacing;\r\n                        var body = vm.body;\r\n\r\n                        ctx.textAlign = vm._bodyAlign;\r\n                        ctx.textBaseline = 'top';\r\n                        ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\r\n                        // Before Body\r\n                        var xLinePadding = 0;\r\n                        var fillLineOfText = function(line) {\r\n                            ctx.fillText(line, pt.x + xLinePadding, pt.y);\r\n                            pt.y += bodyFontSize + bodySpacing;\r\n                        };\r\n\r\n                        // Before body lines\r\n                        ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\r\n                        helpers.each(vm.beforeBody, fillLineOfText);\r\n\r\n                        var drawColorBoxes = vm.displayColors;\r\n                        xLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\r\n\r\n                        // Draw body lines now\r\n                        helpers.each(body, function(bodyItem, i) {\r\n                            var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\r\n                            ctx.fillStyle = textColor;\r\n                            helpers.each(bodyItem.before, fillLineOfText);\r\n\r\n                            helpers.each(bodyItem.lines, function(line) {\r\n                                // Draw Legend-like boxes if needed\r\n                                if (drawColorBoxes) {\r\n                                    // Fill a white rect so that colours merge nicely if the opacity is < 1\r\n                                    ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\r\n                                    ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n                                    // Border\r\n                                    ctx.lineWidth = 1;\r\n                                    ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\r\n                                    ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n                                    // Inner square\r\n                                    ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\r\n                                    ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\r\n                                    ctx.fillStyle = textColor;\r\n                                }\r\n\r\n                                fillLineOfText(line);\r\n                            });\r\n\r\n                            helpers.each(bodyItem.after, fillLineOfText);\r\n                        });\r\n\r\n                        // Reset back to 0 for after body\r\n                        xLinePadding = 0;\r\n\r\n                        // After body lines\r\n                        helpers.each(vm.afterBody, fillLineOfText);\r\n                        pt.y -= bodySpacing; // Remove last body spacing\r\n                    },\r\n                    drawFooter: function(pt, vm, ctx, opacity) {\r\n                        var footer = vm.footer;\r\n\r\n                        if (footer.length) {\r\n                            pt.y += vm.footerMarginTop;\r\n\r\n                            ctx.textAlign = vm._footerAlign;\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\r\n                            ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\r\n                            helpers.each(footer, function(line) {\r\n                                ctx.fillText(line, pt.x, pt.y);\r\n                                pt.y += vm.footerFontSize + vm.footerSpacing;\r\n                            });\r\n                        }\r\n                    },\r\n                    drawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\r\n                        ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\r\n                        ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\r\n                        ctx.lineWidth = vm.borderWidth;\r\n                        var xAlign = vm.xAlign;\r\n                        var yAlign = vm.yAlign;\r\n                        var x = pt.x;\r\n                        var y = pt.y;\r\n                        var width = tooltipSize.width;\r\n                        var height = tooltipSize.height;\r\n                        var radius = vm.cornerRadius;\r\n\r\n                        ctx.beginPath();\r\n                        ctx.moveTo(x + radius, y);\r\n                        if (yAlign === 'top') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + width - radius, y);\r\n                        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n                        if (yAlign === 'center' && xAlign === 'right') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + width, y + height - radius);\r\n                        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n                        if (yAlign === 'bottom') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + radius, y + height);\r\n                        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n                        if (yAlign === 'center' && xAlign === 'left') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x, y + radius);\r\n                        ctx.quadraticCurveTo(x, y, x + radius, y);\r\n                        ctx.closePath();\r\n\r\n                        ctx.fill();\r\n\r\n                        if (vm.borderWidth > 0) {\r\n                            ctx.stroke();\r\n                        }\r\n                    },\r\n                    draw: function() {\r\n                        var ctx = this._chart.ctx;\r\n                        var vm = this._view;\r\n\r\n                        if (vm.opacity === 0) {\r\n                            return;\r\n                        }\r\n\r\n                        var tooltipSize = {\r\n                            width: vm.width,\r\n                            height: vm.height\r\n                        };\r\n                        var pt = {\r\n                            x: vm.x,\r\n                            y: vm.y\r\n                        };\r\n\r\n                        // IE11/Edge does not like very small opacities, so snap to 0\r\n                        var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\r\n\r\n                        // Truthy/falsey value for empty tooltip\r\n                        var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\r\n\r\n                        if (this._options.enabled && hasTooltipContent) {\r\n                            // Draw Background\r\n                            this.drawBackground(pt, vm, ctx, tooltipSize, opacity);\r\n\r\n                            // Draw Title, Body, and Footer\r\n                            pt.x += vm.xPadding;\r\n                            pt.y += vm.yPadding;\r\n\r\n                            // Titles\r\n                            this.drawTitle(pt, vm, ctx, opacity);\r\n\r\n                            // Body\r\n                            this.drawBody(pt, vm, ctx, opacity);\r\n\r\n                            // Footer\r\n                            this.drawFooter(pt, vm, ctx, opacity);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Handle an event\r\n                     * @private\r\n                     * @param {IEvent} event - The event to handle\r\n                     * @returns {Boolean} true if the tooltip changed\r\n                     */\r\n                    handleEvent: function(e) {\r\n                        var me = this;\r\n                        var options = me._options;\r\n                        var changed = false;\r\n\r\n                        me._lastActive = me._lastActive || [];\r\n\r\n                        // Find Active Elements for tooltips\r\n                        if (e.type === 'mouseout') {\r\n                            me._active = [];\r\n                        } else {\r\n                            me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\r\n                        }\r\n\r\n                        // Remember Last Actives\r\n                        changed = !helpers.arrayEquals(me._active, me._lastActive);\r\n\r\n                        // Only handle target event on tooltip change\r\n                        if (changed) {\r\n                            me._lastActive = me._active;\r\n\r\n                            if (options.enabled || options.custom) {\r\n                                me._eventPosition = {\r\n                                    x: e.x,\r\n                                    y: e.y\r\n                                };\r\n\r\n                                me.update(true);\r\n                                me.pivot();\r\n                            }\r\n                        }\r\n\r\n                        return changed;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * @namespace Chart.Tooltip.positioners\r\n                 */\r\n                Chart.Tooltip.positioners = {\r\n                    /**\r\n                     * Average mode places the tooltip at the average position of the elements shown\r\n                     * @function Chart.Tooltip.positioners.average\r\n                     * @param elements {ChartElement[]} the elements being displayed in the tooltip\r\n                     * @returns {Point} tooltip position\r\n                     */\r\n                    average: function(elements) {\r\n                        if (!elements.length) {\r\n                            return false;\r\n                        }\r\n\r\n                        var i, len;\r\n                        var x = 0;\r\n                        var y = 0;\r\n                        var count = 0;\r\n\r\n                        for (i = 0, len = elements.length; i < len; ++i) {\r\n                            var el = elements[i];\r\n                            if (el && el.hasValue()) {\r\n                                var pos = el.tooltipPosition();\r\n                                x += pos.x;\r\n                                y += pos.y;\r\n                                ++count;\r\n                            }\r\n                        }\r\n\r\n                        return {\r\n                            x: Math.round(x / count),\r\n                            y: Math.round(y / count)\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Gets the tooltip position nearest of the item nearest to the event position\r\n                     * @function Chart.Tooltip.positioners.nearest\r\n                     * @param elements {Chart.Element[]} the tooltip elements\r\n                     * @param eventPosition {Point} the position of the event in canvas coordinates\r\n                     * @returns {Point} the tooltip position\r\n                     */\r\n                    nearest: function(elements, eventPosition) {\r\n                        var x = eventPosition.x;\r\n                        var y = eventPosition.y;\r\n                        var minDistance = Number.POSITIVE_INFINITY;\r\n                        var i, len, nearestElement;\r\n\r\n                        for (i = 0, len = elements.length; i < len; ++i) {\r\n                            var el = elements[i];\r\n                            if (el && el.hasValue()) {\r\n                                var center = el.getCenterPoint();\r\n                                var d = helpers.distanceBetweenPoints(eventPosition, center);\r\n\r\n                                if (d < minDistance) {\r\n                                    minDistance = d;\r\n                                    nearestElement = el;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (nearestElement) {\r\n                            var tp = nearestElement.tooltipPosition();\r\n                            x = tp.x;\r\n                            y = tp.y;\r\n                        }\r\n\r\n                        return {\r\n                            x: x,\r\n                            y: y\r\n                        };\r\n                    }\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 27: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    arc: {\r\n                        backgroundColor: defaults.global.defaultColor,\r\n                        borderColor: '#fff',\r\n                        borderWidth: 2\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = Element.extend({\r\n                inLabelRange: function(mouseX) {\r\n                    var vm = this._view;\r\n\r\n                    if (vm) {\r\n                        return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                inRange: function(chartX, chartY) {\r\n                    var vm = this._view;\r\n\r\n                    if (vm) {\r\n                        var pointRelativePosition = helpers.getAngleFromPoint(vm, { x: chartX, y: chartY });\r\n                        var angle = pointRelativePosition.angle;\r\n                        var distance = pointRelativePosition.distance;\r\n\r\n                        // Sanitise angle range\r\n                        var startAngle = vm.startAngle;\r\n                        var endAngle = vm.endAngle;\r\n                        while (endAngle < startAngle) {\r\n                            endAngle += 2.0 * Math.PI;\r\n                        }\r\n                        while (angle > endAngle) {\r\n                            angle -= 2.0 * Math.PI;\r\n                        }\r\n                        while (angle < startAngle) {\r\n                            angle += 2.0 * Math.PI;\r\n                        }\r\n\r\n                        // Check if within the range of the open/close angle\r\n                        var betweenAngles = (angle >= startAngle && angle <= endAngle);\r\n                        var withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\r\n\r\n                        return (betweenAngles && withinRadius);\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\r\n                    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\r\n                    return {\r\n                        x: vm.x + Math.cos(halfAngle) * halfRadius,\r\n                        y: vm.y + Math.sin(halfAngle) * halfRadius\r\n                    };\r\n                },\r\n\r\n                getArea: function() {\r\n                    var vm = this._view;\r\n                    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\r\n                    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\r\n\r\n                    return {\r\n                        x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\r\n                        y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\r\n                    };\r\n                },\r\n\r\n                draw: function() {\r\n                    var ctx = this._chart.ctx;\r\n                    var vm = this._view;\r\n                    var sA = vm.startAngle;\r\n                    var eA = vm.endAngle;\r\n\r\n                    ctx.beginPath();\r\n\r\n                    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\r\n                    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\r\n\r\n                    ctx.closePath();\r\n                    ctx.strokeStyle = vm.borderColor;\r\n                    ctx.lineWidth = vm.borderWidth;\r\n\r\n                    ctx.fillStyle = vm.backgroundColor;\r\n\r\n                    ctx.fill();\r\n                    ctx.lineJoin = 'bevel';\r\n\r\n                    if (vm.borderWidth) {\r\n                        ctx.stroke();\r\n                    }\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 28: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            var globalDefaults = defaults.global;\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    line: {\r\n                        tension: 0.4,\r\n                        backgroundColor: globalDefaults.defaultColor,\r\n                        borderWidth: 3,\r\n                        borderColor: globalDefaults.defaultColor,\r\n                        borderCapStyle: 'butt',\r\n                        borderDash: [],\r\n                        borderDashOffset: 0.0,\r\n                        borderJoinStyle: 'miter',\r\n                        capBezierPoints: true,\r\n                        fill: true, // do we fill in the area between the line and its base axis\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = Element.extend({\r\n                draw: function() {\r\n                    var me = this;\r\n                    var vm = me._view;\r\n                    var ctx = me._chart.ctx;\r\n                    var spanGaps = vm.spanGaps;\r\n                    var points = me._children.slice(); // clone array\r\n                    var globalOptionLineElements = globalDefaults.elements.line;\r\n                    var lastDrawnIndex = -1;\r\n                    var index, current, previous, currentVM;\r\n\r\n                    // If we are looping, adding the first point again\r\n                    if (me._loop && points.length) {\r\n                        points.push(points[0]);\r\n                    }\r\n\r\n                    ctx.save();\r\n\r\n                    // Stroke Line Options\r\n                    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\r\n\r\n                    // IE 9 and 10 do not support line dash\r\n                    if (ctx.setLineDash) {\r\n                        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\r\n                    }\r\n\r\n                    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\r\n                    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\r\n                    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\r\n                    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\r\n\r\n                    // Stroke Line\r\n                    ctx.beginPath();\r\n                    lastDrawnIndex = -1;\r\n\r\n                    for (index = 0; index < points.length; ++index) {\r\n                        current = points[index];\r\n                        previous = helpers.previousItem(points, index);\r\n                        currentVM = current._view;\r\n\r\n                        // First point moves to it's starting position no matter what\r\n                        if (index === 0) {\r\n                            if (!currentVM.skip) {\r\n                                ctx.moveTo(currentVM.x, currentVM.y);\r\n                                lastDrawnIndex = index;\r\n                            }\r\n                        } else {\r\n                            previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\r\n\r\n                            if (!currentVM.skip) {\r\n                                if ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\r\n                                    // There was a gap and this is the first point after the gap\r\n                                    ctx.moveTo(currentVM.x, currentVM.y);\r\n                                } else {\r\n                                    // Line to next point\r\n                                    helpers.canvas.lineTo(ctx, previous._view, current._view);\r\n                                }\r\n                                lastDrawnIndex = index;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    ctx.stroke();\r\n                    ctx.restore();\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 29: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            var defaultColor = defaults.global.defaultColor;\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    point: {\r\n                        radius: 3,\r\n                        pointStyle: 'circle',\r\n                        backgroundColor: defaultColor,\r\n                        borderColor: defaultColor,\r\n                        borderWidth: 1,\r\n                        // Hover\r\n                        hitRadius: 1,\r\n                        hoverRadius: 4,\r\n                        hoverBorderWidth: 1\r\n                    }\r\n                }\r\n            });\r\n\r\n            function xRange(mouseX) {\r\n                var vm = this._view;\r\n                return vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\r\n            }\r\n\r\n            function yRange(mouseY) {\r\n                var vm = this._view;\r\n                return vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\r\n            }\r\n\r\n            module.exports = Element.extend({\r\n                inRange: function(mouseX, mouseY) {\r\n                    var vm = this._view;\r\n                    return vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\r\n                },\r\n\r\n                inLabelRange: xRange,\r\n                inXRange: xRange,\r\n                inYRange: yRange,\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y\r\n                    };\r\n                },\r\n\r\n                getArea: function() {\r\n                    return Math.PI * Math.pow(this._view.radius, 2);\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y,\r\n                        padding: vm.radius + vm.borderWidth\r\n                    };\r\n                },\r\n\r\n                draw: function(chartArea) {\r\n                    var vm = this._view;\r\n                    var model = this._model;\r\n                    var ctx = this._chart.ctx;\r\n                    var pointStyle = vm.pointStyle;\r\n                    var radius = vm.radius;\r\n                    var x = vm.x;\r\n                    var y = vm.y;\r\n                    var color = helpers.color;\r\n                    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\r\n                    var ratio = 0;\r\n\r\n                    if (vm.skip) {\r\n                        return;\r\n                    }\r\n\r\n                    ctx.strokeStyle = vm.borderColor || defaultColor;\r\n                    ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\r\n                    ctx.fillStyle = vm.backgroundColor || defaultColor;\r\n\r\n                    // Cliping for Points.\r\n                    // going out from inner charArea?\r\n                    if ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\r\n                        // Point fade out\r\n                        if (model.x < chartArea.left) {\r\n                            ratio = (x - model.x) / (chartArea.left - model.x);\r\n                        } else if (chartArea.right * errMargin < model.x) {\r\n                            ratio = (model.x - x) / (model.x - chartArea.right);\r\n                        } else if (model.y < chartArea.top) {\r\n                            ratio = (y - model.y) / (chartArea.top - model.y);\r\n                        } else if (chartArea.bottom * errMargin < model.y) {\r\n                            ratio = (model.y - y) / (model.y - chartArea.bottom);\r\n                        }\r\n                        ratio = Math.round(ratio * 100) / 100;\r\n                        ctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\r\n                        ctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\r\n                    }\r\n\r\n                    helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 30: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    rectangle: {\r\n                        backgroundColor: defaults.global.defaultColor,\r\n                        borderColor: defaults.global.defaultColor,\r\n                        borderSkipped: 'bottom',\r\n                        borderWidth: 0\r\n                    }\r\n                }\r\n            });\r\n\r\n            function isVertical(bar) {\r\n                return bar._view.width !== undefined;\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the bounds of the bar regardless of the orientation\r\n             * @param bar {Chart.Element.Rectangle} the bar\r\n             * @return {Bounds} bounds of the bar\r\n             * @private\r\n             */\r\n            function getBarBounds(bar) {\r\n                var vm = bar._view;\r\n                var x1, x2, y1, y2;\r\n\r\n                if (isVertical(bar)) {\r\n                    // vertical\r\n                    var halfWidth = vm.width / 2;\r\n                    x1 = vm.x - halfWidth;\r\n                    x2 = vm.x + halfWidth;\r\n                    y1 = Math.min(vm.y, vm.base);\r\n                    y2 = Math.max(vm.y, vm.base);\r\n                } else {\r\n                    // horizontal bar\r\n                    var halfHeight = vm.height / 2;\r\n                    x1 = Math.min(vm.x, vm.base);\r\n                    x2 = Math.max(vm.x, vm.base);\r\n                    y1 = vm.y - halfHeight;\r\n                    y2 = vm.y + halfHeight;\r\n                }\r\n\r\n                return {\r\n                    left: x1,\r\n                    top: y1,\r\n                    right: x2,\r\n                    bottom: y2\r\n                };\r\n            }\r\n\r\n            module.exports = Element.extend({\r\n                draw: function() {\r\n                    var ctx = this._chart.ctx;\r\n                    var vm = this._view;\r\n                    var left, right, top, bottom, signX, signY, borderSkipped;\r\n                    var borderWidth = vm.borderWidth;\r\n\r\n                    if (!vm.horizontal) {\r\n                        // bar\r\n                        left = vm.x - vm.width / 2;\r\n                        right = vm.x + vm.width / 2;\r\n                        top = vm.y;\r\n                        bottom = vm.base;\r\n                        signX = 1;\r\n                        signY = bottom > top ? 1 : -1;\r\n                        borderSkipped = vm.borderSkipped || 'bottom';\r\n                    } else {\r\n                        // horizontal bar\r\n                        left = vm.base;\r\n                        right = vm.x;\r\n                        top = vm.y - vm.height / 2;\r\n                        bottom = vm.y + vm.height / 2;\r\n                        signX = right > left ? 1 : -1;\r\n                        signY = 1;\r\n                        borderSkipped = vm.borderSkipped || 'left';\r\n                    }\r\n\r\n                    // Canvas doesn't allow us to stroke inside the width so we can\r\n                    // adjust the sizes to fit if we're setting a stroke on the line\r\n                    if (borderWidth) {\r\n                        // borderWidth shold be less than bar width and bar height.\r\n                        var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n                        borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n                        var halfStroke = borderWidth / 2;\r\n                        // Adjust borderWidth when bar top position is near vm.base(zero).\r\n                        var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n                        var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n                        var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n                        var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n                        // not become a vertical line?\r\n                        if (borderLeft !== borderRight) {\r\n                            top = borderTop;\r\n                            bottom = borderBottom;\r\n                        }\r\n                        // not become a horizontal line?\r\n                        if (borderTop !== borderBottom) {\r\n                            left = borderLeft;\r\n                            right = borderRight;\r\n                        }\r\n                    }\r\n\r\n                    ctx.beginPath();\r\n                    ctx.fillStyle = vm.backgroundColor;\r\n                    ctx.strokeStyle = vm.borderColor;\r\n                    ctx.lineWidth = borderWidth;\r\n\r\n                    // Corner points, from bottom-left to bottom-right clockwise\r\n                    // | 1 2 |\r\n                    // | 0 3 |\r\n                    var corners = [\r\n                        [left, bottom],\r\n                        [left, top],\r\n                        [right, top],\r\n                        [right, bottom]\r\n                    ];\r\n\r\n                    // Find first (starting) corner with fallback to 'bottom'\r\n                    var borders = ['bottom', 'left', 'top', 'right'];\r\n                    var startCorner = borders.indexOf(borderSkipped, 0);\r\n                    if (startCorner === -1) {\r\n                        startCorner = 0;\r\n                    }\r\n\r\n                    function cornerAt(index) {\r\n                        return corners[(startCorner + index) % 4];\r\n                    }\r\n\r\n                    // Draw rectangle from 'startCorner'\r\n                    var corner = cornerAt(0);\r\n                    ctx.moveTo(corner[0], corner[1]);\r\n\r\n                    for (var i = 1; i < 4; i++) {\r\n                        corner = cornerAt(i);\r\n                        ctx.lineTo(corner[0], corner[1]);\r\n                    }\r\n\r\n                    ctx.fill();\r\n                    if (borderWidth) {\r\n                        ctx.stroke();\r\n                    }\r\n                },\r\n\r\n                height: function() {\r\n                    var vm = this._view;\r\n                    return vm.base - vm.y;\r\n                },\r\n\r\n                inRange: function(mouseX, mouseY) {\r\n                    var inRange = false;\r\n\r\n                    if (this._view) {\r\n                        var bounds = getBarBounds(this);\r\n                        inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                    }\r\n\r\n                    return inRange;\r\n                },\r\n\r\n                inLabelRange: function(mouseX, mouseY) {\r\n                    var me = this;\r\n                    if (!me._view) {\r\n                        return false;\r\n                    }\r\n\r\n                    var inRange = false;\r\n                    var bounds = getBarBounds(me);\r\n\r\n                    if (isVertical(me)) {\r\n                        inRange = mouseX >= bounds.left && mouseX <= bounds.right;\r\n                    } else {\r\n                        inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                    }\r\n\r\n                    return inRange;\r\n                },\r\n\r\n                inXRange: function(mouseX) {\r\n                    var bounds = getBarBounds(this);\r\n                    return mouseX >= bounds.left && mouseX <= bounds.right;\r\n                },\r\n\r\n                inYRange: function(mouseY) {\r\n                    var bounds = getBarBounds(this);\r\n                    return mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                },\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    var x, y;\r\n                    if (isVertical(this)) {\r\n                        x = vm.x;\r\n                        y = (vm.y + vm.base) / 2;\r\n                    } else {\r\n                        x = (vm.x + vm.base) / 2;\r\n                        y = vm.y;\r\n                    }\r\n\r\n                    return { x: x, y: y };\r\n                },\r\n\r\n                getArea: function() {\r\n                    var vm = this._view;\r\n                    return vm.width * Math.abs(vm.y - vm.base);\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y\r\n                    };\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17 }], 31: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = {};\r\n            module.exports.Arc = require(27);\r\n            module.exports.Line = require(28);\r\n            module.exports.Point = require(29);\r\n            module.exports.Rectangle = require(30);\r\n        }, { \"27\": 27, \"28\": 28, \"29\": 29, \"30\": 30 }], 32: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * @namespace Chart.helpers.canvas\r\n             */\r\n            var exports = module.exports = {\r\n                /**\r\n                 * Clears the entire canvas associated to the given `chart`.\r\n                 * @param {Chart} chart - The chart for which to clear the canvas.\r\n                 */\r\n                clear: function(chart) {\r\n                    chart.ctx.clearRect(0, 0, chart.width, chart.height);\r\n                },\r\n\r\n                /**\r\n                 * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\r\n                 * given size (width, height) and the same `radius` for all corners.\r\n                 * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\r\n                 * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\r\n                 * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\r\n                 * @param {Number} width - The rectangle's width.\r\n                 * @param {Number} height - The rectangle's height.\r\n                 * @param {Number} radius - The rounded amount (in pixels) for the four corners.\r\n                 * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\r\n                 */\r\n                roundedRect: function(ctx, x, y, width, height, radius) {\r\n                    if (radius) {\r\n                        var rx = Math.min(radius, width / 2);\r\n                        var ry = Math.min(radius, height / 2);\r\n\r\n                        ctx.moveTo(x + rx, y);\r\n                        ctx.lineTo(x + width - rx, y);\r\n                        ctx.quadraticCurveTo(x + width, y, x + width, y + ry);\r\n                        ctx.lineTo(x + width, y + height - ry);\r\n                        ctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\r\n                        ctx.lineTo(x + rx, y + height);\r\n                        ctx.quadraticCurveTo(x, y + height, x, y + height - ry);\r\n                        ctx.lineTo(x, y + ry);\r\n                        ctx.quadraticCurveTo(x, y, x + rx, y);\r\n                    } else {\r\n                        ctx.rect(x, y, width, height);\r\n                    }\r\n                },\r\n\r\n                drawPoint: function(ctx, style, radius, x, y) {\r\n                    var type, edgeLength, xOffset, yOffset, height, size;\r\n\r\n                    if (style && typeof style === 'object') {\r\n                        type = style.toString();\r\n                        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n                            ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    if (isNaN(radius) || radius <= 0) {\r\n                        return;\r\n                    }\r\n\r\n                    switch (style) {\r\n                        // Default includes circle\r\n                        default:\r\n                            ctx.beginPath();\r\n                            ctx.arc(x, y, radius, 0, Math.PI * 2);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'triangle':\r\n                            ctx.beginPath();\r\n                            edgeLength = 3 * radius / Math.sqrt(3);\r\n                            height = edgeLength * Math.sqrt(3) / 2;\r\n                            ctx.moveTo(x - edgeLength / 2, y + height / 3);\r\n                            ctx.lineTo(x + edgeLength / 2, y + height / 3);\r\n                            ctx.lineTo(x, y - 2 * height / 3);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'rect':\r\n                            size = 1 / Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            ctx.fillRect(x - size, y - size, 2 * size, 2 * size);\r\n                            ctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\r\n                            break;\r\n                        case 'rectRounded':\r\n                            var offset = radius / Math.SQRT2;\r\n                            var leftX = x - offset;\r\n                            var topY = y - offset;\r\n                            var sideSize = Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'rectRot':\r\n                            size = 1 / Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x - size, y);\r\n                            ctx.lineTo(x, y + size);\r\n                            ctx.lineTo(x + size, y);\r\n                            ctx.lineTo(x, y - size);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'cross':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y + radius);\r\n                            ctx.lineTo(x, y - radius);\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'crossRot':\r\n                            ctx.beginPath();\r\n                            xOffset = Math.cos(Math.PI / 4) * radius;\r\n                            yOffset = Math.sin(Math.PI / 4) * radius;\r\n                            ctx.moveTo(x - xOffset, y - yOffset);\r\n                            ctx.lineTo(x + xOffset, y + yOffset);\r\n                            ctx.moveTo(x - xOffset, y + yOffset);\r\n                            ctx.lineTo(x + xOffset, y - yOffset);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'star':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y + radius);\r\n                            ctx.lineTo(x, y - radius);\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            xOffset = Math.cos(Math.PI / 4) * radius;\r\n                            yOffset = Math.sin(Math.PI / 4) * radius;\r\n                            ctx.moveTo(x - xOffset, y - yOffset);\r\n                            ctx.lineTo(x + xOffset, y + yOffset);\r\n                            ctx.moveTo(x - xOffset, y + yOffset);\r\n                            ctx.lineTo(x + xOffset, y - yOffset);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'line':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'dash':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                    }\r\n\r\n                    ctx.stroke();\r\n                },\r\n\r\n                clipArea: function(ctx, area) {\r\n                    ctx.save();\r\n                    ctx.beginPath();\r\n                    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\r\n                    ctx.clip();\r\n                },\r\n\r\n                unclipArea: function(ctx) {\r\n                    ctx.restore();\r\n                },\r\n\r\n                lineTo: function(ctx, previous, target, flip) {\r\n                    if (target.steppedLine) {\r\n                        if ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\r\n                            ctx.lineTo(previous.x, target.y);\r\n                        } else {\r\n                            ctx.lineTo(target.x, previous.y);\r\n                        }\r\n                        ctx.lineTo(target.x, target.y);\r\n                        return;\r\n                    }\r\n\r\n                    if (!target.tension) {\r\n                        ctx.lineTo(target.x, target.y);\r\n                        return;\r\n                    }\r\n\r\n                    ctx.bezierCurveTo(\r\n                        flip ? previous.controlPointPreviousX : previous.controlPointNextX,\r\n                        flip ? previous.controlPointPreviousY : previous.controlPointNextY,\r\n                        flip ? target.controlPointNextX : target.controlPointPreviousX,\r\n                        flip ? target.controlPointNextY : target.controlPointPreviousY,\r\n                        target.x,\r\n                        target.y);\r\n                }\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\r\n             * @namespace Chart.helpers.clear\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.clear = exports.clear;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\r\n             * @namespace Chart.helpers.drawRoundedRectangle\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.drawRoundedRectangle = function(ctx) {\r\n                ctx.beginPath();\r\n                exports.roundedRect.apply(exports, arguments);\r\n                ctx.closePath();\r\n            };\r\n        }, { \"33\": 33 }], 33: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            /**\r\n             * @namespace Chart.helpers\r\n             */\r\n            var helpers = {\r\n                /**\r\n                 * An empty function that can be used, for example, for optional callback.\r\n                 */\r\n                noop: function() { },\r\n\r\n                /**\r\n                 * Returns a unique id, sequentially generated from a global variable.\r\n                 * @returns {Number}\r\n                 * @function\r\n                 */\r\n                uid: (function() {\r\n                    var id = 0;\r\n                    return function() {\r\n                        return id++;\r\n                    };\r\n                }()),\r\n\r\n                /**\r\n                 * Returns true if `value` is neither null nor undefined, else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @since 2.7.0\r\n                 */\r\n                isNullOrUndef: function(value) {\r\n                    return value === null || typeof value === 'undefined';\r\n                },\r\n\r\n                /**\r\n                 * Returns true if `value` is an array, else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @function\r\n                 */\r\n                isArray: Array.isArray ? Array.isArray : function(value) {\r\n                    return Object.prototype.toString.call(value) === '[object Array]';\r\n                },\r\n\r\n                /**\r\n                 * Returns true if `value` is an object (excluding null), else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @since 2.7.0\r\n                 */\r\n                isObject: function(value) {\r\n                    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\r\n                },\r\n\r\n                /**\r\n                 * Returns `value` if defined, else returns `defaultValue`.\r\n                 * @param {*} value - The value to return if defined.\r\n                 * @param {*} defaultValue - The value to return if `value` is undefined.\r\n                 * @returns {*}\r\n                 */\r\n                valueOrDefault: function(value, defaultValue) {\r\n                    return typeof value === 'undefined' ? defaultValue : value;\r\n                },\r\n\r\n                /**\r\n                 * Returns value at the given `index` in array if defined, else returns `defaultValue`.\r\n                 * @param {Array} value - The array to lookup for value at `index`.\r\n                 * @param {Number} index - The index in `value` to lookup for value.\r\n                 * @param {*} defaultValue - The value to return if `value[index]` is undefined.\r\n                 * @returns {*}\r\n                 */\r\n                valueAtIndexOrDefault: function(value, index, defaultValue) {\r\n                    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\r\n                },\r\n\r\n                /**\r\n                 * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\r\n                 * value returned by `fn`. If `fn` is not a function, this method returns undefined.\r\n                 * @param {Function} fn - The function to call.\r\n                 * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\r\n                 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\r\n                 * @returns {*}\r\n                 */\r\n                callback: function(fn, args, thisArg) {\r\n                    if (fn && typeof fn.call === 'function') {\r\n                        return fn.apply(thisArg, args);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Note(SB) for performance sake, this method should only be used when loopable type\r\n                 * is unknown or in none intensive code (not called often and small loopable). Else\r\n                 * it's preferable to use a regular for() loop and save extra function calls.\r\n                 * @param {Object|Array} loopable - The object or array to be iterated.\r\n                 * @param {Function} fn - The function to call for each item.\r\n                 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\r\n                 * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\r\n                 */\r\n                each: function(loopable, fn, thisArg, reverse) {\r\n                    var i, len, keys;\r\n                    if (helpers.isArray(loopable)) {\r\n                        len = loopable.length;\r\n                        if (reverse) {\r\n                            for (i = len - 1; i >= 0; i--) {\r\n                                fn.call(thisArg, loopable[i], i);\r\n                            }\r\n                        } else {\r\n                            for (i = 0; i < len; i++) {\r\n                                fn.call(thisArg, loopable[i], i);\r\n                            }\r\n                        }\r\n                    } else if (helpers.isObject(loopable)) {\r\n                        keys = Object.keys(loopable);\r\n                        len = keys.length;\r\n                        for (i = 0; i < len; i++) {\r\n                            fn.call(thisArg, loopable[keys[i]], keys[i]);\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\r\n                 * @see http://stackoverflow.com/a/14853974\r\n                 * @param {Array} a0 - The array to compare\r\n                 * @param {Array} a1 - The array to compare\r\n                 * @returns {Boolean}\r\n                 */\r\n                arrayEquals: function(a0, a1) {\r\n                    var i, ilen, v0, v1;\r\n\r\n                    if (!a0 || !a1 || a0.length !== a1.length) {\r\n                        return false;\r\n                    }\r\n\r\n                    for (i = 0, ilen = a0.length; i < ilen; ++i) {\r\n                        v0 = a0[i];\r\n                        v1 = a1[i];\r\n\r\n                        if (v0 instanceof Array && v1 instanceof Array) {\r\n                            if (!helpers.arrayEquals(v0, v1)) {\r\n                                return false;\r\n                            }\r\n                        } else if (v0 !== v1) {\r\n                            // NOTE: two different object instances will never be equal: {x:20} != {x:20}\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                },\r\n\r\n                /**\r\n                 * Returns a deep copy of `source` without keeping references on objects and arrays.\r\n                 * @param {*} source - The value to clone.\r\n                 * @returns {*}\r\n                 */\r\n                clone: function(source) {\r\n                    if (helpers.isArray(source)) {\r\n                        return source.map(helpers.clone);\r\n                    }\r\n\r\n                    if (helpers.isObject(source)) {\r\n                        var target = {};\r\n                        var keys = Object.keys(source);\r\n                        var klen = keys.length;\r\n                        var k = 0;\r\n\r\n                        for (; k < klen; ++k) {\r\n                            target[keys[k]] = helpers.clone(source[keys[k]]);\r\n                        }\r\n\r\n                        return target;\r\n                    }\r\n\r\n                    return source;\r\n                },\r\n\r\n                /**\r\n                 * The default merger when Chart.helpers.merge is called without merger option.\r\n                 * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\r\n                 * @private\r\n                 */\r\n                _merger: function(key, target, source, options) {\r\n                    var tval = target[key];\r\n                    var sval = source[key];\r\n\r\n                    if (helpers.isObject(tval) && helpers.isObject(sval)) {\r\n                        helpers.merge(tval, sval, options);\r\n                    } else {\r\n                        target[key] = helpers.clone(sval);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Merges source[key] in target[key] only if target[key] is undefined.\r\n                 * @private\r\n                 */\r\n                _mergerIf: function(key, target, source) {\r\n                    var tval = target[key];\r\n                    var sval = source[key];\r\n\r\n                    if (helpers.isObject(tval) && helpers.isObject(sval)) {\r\n                        helpers.mergeIf(tval, sval);\r\n                    } else if (!target.hasOwnProperty(key)) {\r\n                        target[key] = helpers.clone(sval);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Recursively deep copies `source` properties into `target` with the given `options`.\r\n                 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n                 * @param {Object} target - The target object in which all sources are merged into.\r\n                 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\r\n                 * @param {Object} [options] - Merging options:\r\n                 * @param {Function} [options.merger] - The merge method (key, target, source, options)\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                merge: function(target, source, options) {\r\n                    var sources = helpers.isArray(source) ? source : [source];\r\n                    var ilen = sources.length;\r\n                    var merge, i, keys, klen, k;\r\n\r\n                    if (!helpers.isObject(target)) {\r\n                        return target;\r\n                    }\r\n\r\n                    options = options || {};\r\n                    merge = options.merger || helpers._merger;\r\n\r\n                    for (i = 0; i < ilen; ++i) {\r\n                        source = sources[i];\r\n                        if (!helpers.isObject(source)) {\r\n                            continue;\r\n                        }\r\n\r\n                        keys = Object.keys(source);\r\n                        for (k = 0, klen = keys.length; k < klen; ++k) {\r\n                            merge(keys[k], target, source, options);\r\n                        }\r\n                    }\r\n\r\n                    return target;\r\n                },\r\n\r\n                /**\r\n                 * Recursively deep copies `source` properties into `target` *only* if not defined in target.\r\n                 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n                 * @param {Object} target - The target object in which all sources are merged into.\r\n                 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                mergeIf: function(target, source) {\r\n                    return helpers.merge(target, source, { merger: helpers._mergerIf });\r\n                },\r\n\r\n                /**\r\n                 * Applies the contents of two or more objects together into the first object.\r\n                 * @param {Object} target - The target object in which all objects are merged into.\r\n                 * @param {Object} arg1 - Object containing additional properties to merge in target.\r\n                 * @param {Object} argN - Additional objects containing properties to merge in target.\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                extend: function(target) {\r\n                    var setFn = function(value, key) {\r\n                        target[key] = value;\r\n                    };\r\n                    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\r\n                        helpers.each(arguments[i], setFn);\r\n                    }\r\n                    return target;\r\n                },\r\n\r\n                /**\r\n                 * Basic javascript inheritance based on the model created in Backbone.js\r\n                 */\r\n                inherits: function(extensions) {\r\n                    var me = this;\r\n                    var ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\r\n                        return me.apply(this, arguments);\r\n                    };\r\n\r\n                    var Surrogate = function() {\r\n                        this.constructor = ChartElement;\r\n                    };\r\n\r\n                    Surrogate.prototype = me.prototype;\r\n                    ChartElement.prototype = new Surrogate();\r\n                    ChartElement.extend = helpers.inherits;\r\n\r\n                    if (extensions) {\r\n                        helpers.extend(ChartElement.prototype, extensions);\r\n                    }\r\n\r\n                    ChartElement.__super__ = me.prototype;\r\n                    return ChartElement;\r\n                }\r\n            };\r\n\r\n            module.exports = helpers;\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.callback instead.\r\n             * @function Chart.helpers.callCallback\r\n             * @deprecated since version 2.6.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.callCallback = helpers.callback;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Array.prototype.indexOf instead.\r\n             * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\r\n             * @function Chart.helpers.indexOf\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.indexOf = function(array, item, fromIndex) {\r\n                return Array.prototype.indexOf.call(array, item, fromIndex);\r\n            };\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\r\n             * @function Chart.helpers.getValueOrDefault\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.getValueOrDefault = helpers.valueOrDefault;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\r\n             * @function Chart.helpers.getValueAtIndexOrDefault\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n        }, {}], 34: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * Easing functions adapted from Robert Penner's easing equations.\r\n             * @namespace Chart.helpers.easingEffects\r\n             * @see http://www.robertpenner.com/easing/\r\n             */\r\n            var effects = {\r\n                linear: function(t) {\r\n                    return t;\r\n                },\r\n\r\n                easeInQuad: function(t) {\r\n                    return t * t;\r\n                },\r\n\r\n                easeOutQuad: function(t) {\r\n                    return -t * (t - 2);\r\n                },\r\n\r\n                easeInOutQuad: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t;\r\n                    }\r\n                    return -0.5 * ((--t) * (t - 2) - 1);\r\n                },\r\n\r\n                easeInCubic: function(t) {\r\n                    return t * t * t;\r\n                },\r\n\r\n                easeOutCubic: function(t) {\r\n                    return (t = t - 1) * t * t + 1;\r\n                },\r\n\r\n                easeInOutCubic: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t;\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * t + 2);\r\n                },\r\n\r\n                easeInQuart: function(t) {\r\n                    return t * t * t * t;\r\n                },\r\n\r\n                easeOutQuart: function(t) {\r\n                    return -((t = t - 1) * t * t * t - 1);\r\n                },\r\n\r\n                easeInOutQuart: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t * t;\r\n                    }\r\n                    return -0.5 * ((t -= 2) * t * t * t - 2);\r\n                },\r\n\r\n                easeInQuint: function(t) {\r\n                    return t * t * t * t * t;\r\n                },\r\n\r\n                easeOutQuint: function(t) {\r\n                    return (t = t - 1) * t * t * t * t + 1;\r\n                },\r\n\r\n                easeInOutQuint: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t * t * t;\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * t * t * t + 2);\r\n                },\r\n\r\n                easeInSine: function(t) {\r\n                    return -Math.cos(t * (Math.PI / 2)) + 1;\r\n                },\r\n\r\n                easeOutSine: function(t) {\r\n                    return Math.sin(t * (Math.PI / 2));\r\n                },\r\n\r\n                easeInOutSine: function(t) {\r\n                    return -0.5 * (Math.cos(Math.PI * t) - 1);\r\n                },\r\n\r\n                easeInExpo: function(t) {\r\n                    return (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\r\n                },\r\n\r\n                easeOutExpo: function(t) {\r\n                    return (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\r\n                },\r\n\r\n                easeInOutExpo: function(t) {\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * Math.pow(2, 10 * (t - 1));\r\n                    }\r\n                    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\r\n                },\r\n\r\n                easeInCirc: function(t) {\r\n                    if (t >= 1) {\r\n                        return t;\r\n                    }\r\n                    return -(Math.sqrt(1 - t * t) - 1);\r\n                },\r\n\r\n                easeOutCirc: function(t) {\r\n                    return Math.sqrt(1 - (t = t - 1) * t);\r\n                },\r\n\r\n                easeInOutCirc: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return -0.5 * (Math.sqrt(1 - t * t) - 1);\r\n                    }\r\n                    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\r\n                },\r\n\r\n                easeInElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.3;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\r\n                },\r\n\r\n                easeOutElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.3;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\r\n                },\r\n\r\n                easeInOutElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if ((t /= 0.5) === 2) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.45;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    if (t < 1) {\r\n                        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\r\n                    }\r\n                    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n                },\r\n                easeInBack: function(t) {\r\n                    var s = 1.70158;\r\n                    return t * t * ((s + 1) * t - s);\r\n                },\r\n\r\n                easeOutBack: function(t) {\r\n                    var s = 1.70158;\r\n                    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\r\n                },\r\n\r\n                easeInOutBack: function(t) {\r\n                    var s = 1.70158;\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n                },\r\n\r\n                easeInBounce: function(t) {\r\n                    return 1 - effects.easeOutBounce(1 - t);\r\n                },\r\n\r\n                easeOutBounce: function(t) {\r\n                    if (t < (1 / 2.75)) {\r\n                        return 7.5625 * t * t;\r\n                    }\r\n                    if (t < (2 / 2.75)) {\r\n                        return 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\r\n                    }\r\n                    if (t < (2.5 / 2.75)) {\r\n                        return 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\r\n                    }\r\n                    return 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\r\n                },\r\n\r\n                easeInOutBounce: function(t) {\r\n                    if (t < 0.5) {\r\n                        return effects.easeInBounce(t * 2) * 0.5;\r\n                    }\r\n                    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\r\n                }\r\n            };\r\n\r\n            module.exports = {\r\n                effects: effects\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\r\n             * @function Chart.helpers.easingEffects\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.easingEffects = effects;\r\n        }, { \"33\": 33 }], 35: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * @alias Chart.helpers.options\r\n             * @namespace\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Converts the given line height `value` in pixels for a specific font `size`.\r\n                 * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\r\n                 * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\r\n                 * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\r\n                 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\r\n                 * @since 2.7.0\r\n                 */\r\n                toLineHeight: function(value, size) {\r\n                    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\r\n                    if (!matches || matches[1] === 'normal') {\r\n                        return size * 1.2;\r\n                    }\r\n\r\n                    value = +matches[2];\r\n\r\n                    switch (matches[3]) {\r\n                        case 'px':\r\n                            return value;\r\n                        case '%':\r\n                            value /= 100;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n\r\n                    return size * value;\r\n                },\r\n\r\n                /**\r\n                 * Converts the given value into a padding object with pre-computed width/height.\r\n                 * @param {Number|Object} value - If a number, set the value to all TRBL component,\r\n                 *  else, if and object, use defined properties and sets undefined ones to 0.\r\n                 * @returns {Object} The padding values (top, right, bottom, left, width, height)\r\n                 * @since 2.7.0\r\n                 */\r\n                toPadding: function(value) {\r\n                    var t, r, b, l;\r\n\r\n                    if (helpers.isObject(value)) {\r\n                        t = +value.top || 0;\r\n                        r = +value.right || 0;\r\n                        b = +value.bottom || 0;\r\n                        l = +value.left || 0;\r\n                    } else {\r\n                        t = r = b = l = +value || 0;\r\n                    }\r\n\r\n                    return {\r\n                        top: t,\r\n                        right: r,\r\n                        bottom: b,\r\n                        left: l,\r\n                        height: t + b,\r\n                        width: l + r\r\n                    };\r\n                },\r\n\r\n                /**\r\n                 * Evaluates the given `inputs` sequentially and returns the first defined value.\r\n                 * @param {Array[]} inputs - An array of values, falling back to the last value.\r\n                 * @param {Object} [context] - If defined and the current value is a function, the value\r\n                 * is called with `context` as first argument and the result becomes the new input.\r\n                 * @param {Number} [index] - If defined and the current value is an array, the value\r\n                 * at `index` become the new input.\r\n                 * @since 2.7.0\r\n                 */\r\n                resolve: function(inputs, context, index) {\r\n                    var i, ilen, value;\r\n\r\n                    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\r\n                        value = inputs[i];\r\n                        if (value === undefined) {\r\n                            continue;\r\n                        }\r\n                        if (context !== undefined && typeof value === 'function') {\r\n                            value = value(context);\r\n                        }\r\n                        if (index !== undefined && helpers.isArray(value)) {\r\n                            value = value[index];\r\n                        }\r\n                        if (value !== undefined) {\r\n                            return value;\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }, { \"33\": 33 }], 36: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = require(33);\r\n            module.exports.easing = require(34);\r\n            module.exports.canvas = require(32);\r\n            module.exports.options = require(35);\r\n        }, { \"32\": 32, \"33\": 33, \"34\": 34, \"35\": 35 }], 37: [function(require, module, exports) {\r\n            /**\r\n             * Platform fallback implementation (minimal).\r\n             * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\r\n             */\r\n\r\n            module.exports = {\r\n                acquireContext: function(item) {\r\n                    if (item && item.canvas) {\r\n                        // Support for any object associated to a canvas (including a context2d)\r\n                        item = item.canvas;\r\n                    }\r\n\r\n                    return item && item.getContext('2d') || null;\r\n                }\r\n            };\r\n        }, {}], 38: [function(require, module, exports) {\r\n            /**\r\n             * Chart.Platform implementation for targeting a web browser\r\n             */\r\n\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            var EXPANDO_KEY = '$chartjs';\r\n            var CSS_PREFIX = 'chartjs-';\r\n            var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\r\n            var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\r\n            var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\r\n\r\n            /**\r\n             * DOM event types -> Chart.js event types.\r\n             * Note: only events with different types are mapped.\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/Events\r\n             */\r\n            var EVENT_TYPES = {\r\n                touchstart: 'mousedown',\r\n                touchmove: 'mousemove',\r\n                touchend: 'mouseup',\r\n                pointerenter: 'mouseenter',\r\n                pointerdown: 'mousedown',\r\n                pointermove: 'mousemove',\r\n                pointerup: 'mouseup',\r\n                pointerleave: 'mouseout',\r\n                pointerout: 'mouseout'\r\n            };\r\n\r\n            /**\r\n             * The \"used\" size is the final value of a dimension property after all calculations have\r\n             * been performed. This method uses the computed style of `element` but returns undefined\r\n             * if the computed style is not expressed in pixels. That can happen in some cases where\r\n             * `element` has a size relative to its parent and this last one is not yet displayed,\r\n             * for example because of `display: none` on a parent node.\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\r\n             * @returns {Number} Size in pixels or undefined if unknown.\r\n             */\r\n            function readUsedSize(element, property) {\r\n                var value = helpers.getStyle(element, property);\r\n                var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\r\n                return matches ? Number(matches[1]) : undefined;\r\n            }\r\n\r\n            /**\r\n             * Initializes the canvas style and render size without modifying the canvas display size,\r\n             * since responsiveness is handled by the controller.resize() method. The config is used\r\n             * to determine the aspect ratio to apply in case no explicit height has been specified.\r\n             */\r\n            function initCanvas(canvas, config) {\r\n                var style = canvas.style;\r\n\r\n                // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\r\n                // returns null or '' if no explicit value has been set to the canvas attribute.\r\n                var renderHeight = canvas.getAttribute('height');\r\n                var renderWidth = canvas.getAttribute('width');\r\n\r\n                // Chart.js modifies some canvas values that we want to restore on destroy\r\n                canvas[EXPANDO_KEY] = {\r\n                    initial: {\r\n                        height: renderHeight,\r\n                        width: renderWidth,\r\n                        style: {\r\n                            display: style.display,\r\n                            height: style.height,\r\n                            width: style.width\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // Force canvas to display as block to avoid extra space caused by inline\r\n                // elements, which would interfere with the responsive resize process.\r\n                // https://github.com/chartjs/Chart.js/issues/2538\r\n                style.display = style.display || 'block';\r\n\r\n                if (renderWidth === null || renderWidth === '') {\r\n                    var displayWidth = readUsedSize(canvas, 'width');\r\n                    if (displayWidth !== undefined) {\r\n                        canvas.width = displayWidth;\r\n                    }\r\n                }\r\n\r\n                if (renderHeight === null || renderHeight === '') {\r\n                    if (canvas.style.height === '') {\r\n                        // If no explicit render height and style height, let's apply the aspect ratio,\r\n                        // which one can be specified by the user but also by charts as default option\r\n                        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\r\n                        canvas.height = canvas.width / (config.options.aspectRatio || 2);\r\n                    } else {\r\n                        var displayHeight = readUsedSize(canvas, 'height');\r\n                        if (displayWidth !== undefined) {\r\n                            canvas.height = displayHeight;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return canvas;\r\n            }\r\n\r\n            /**\r\n             * Detects support for options object argument in addEventListener.\r\n             * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\r\n             * @private\r\n             */\r\n            var supportsEventListenerOptions = (function() {\r\n                var supports = false;\r\n                try {\r\n                    var options = Object.defineProperty({}, 'passive', {\r\n                        get: function() {\r\n                            supports = true;\r\n                        }\r\n                    });\r\n                    window.addEventListener('e', null, options);\r\n                } catch (e) {\r\n                    // continue regardless of error\r\n                }\r\n                return supports;\r\n            }());\r\n\r\n            // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\r\n            // https://github.com/chartjs/Chart.js/issues/4287\r\n            var eventListenerOptions = supportsEventListenerOptions ? { passive: true } : false;\r\n\r\n            function addEventListener(node, type, listener) {\r\n                node.addEventListener(type, listener, eventListenerOptions);\r\n            }\r\n\r\n            function removeEventListener(node, type, listener) {\r\n                node.removeEventListener(type, listener, eventListenerOptions);\r\n            }\r\n\r\n            function createEvent(type, chart, x, y, nativeEvent) {\r\n                return {\r\n                    type: type,\r\n                    chart: chart,\r\n                    native: nativeEvent || null,\r\n                    x: x !== undefined ? x : null,\r\n                    y: y !== undefined ? y : null,\r\n                };\r\n            }\r\n\r\n            function fromNativeEvent(event, chart) {\r\n                var type = EVENT_TYPES[event.type] || event.type;\r\n                var pos = helpers.getRelativePosition(event, chart);\r\n                return createEvent(type, chart, pos.x, pos.y, event);\r\n            }\r\n\r\n            function throttled(fn, thisArg) {\r\n                var ticking = false;\r\n                var args = [];\r\n\r\n                return function() {\r\n                    args = Array.prototype.slice.call(arguments);\r\n                    thisArg = thisArg || this;\r\n\r\n                    if (!ticking) {\r\n                        ticking = true;\r\n                        helpers.requestAnimFrame.call(window, function() {\r\n                            ticking = false;\r\n                            fn.apply(thisArg, args);\r\n                        });\r\n                    }\r\n                };\r\n            }\r\n\r\n            // Implementation based on https://github.com/marcj/css-element-queries\r\n            function createResizer(handler) {\r\n                var resizer = document.createElement('div');\r\n                var cls = CSS_PREFIX + 'size-monitor';\r\n                var maxSize = 1000000;\r\n                var style =\r\n                    'position:absolute;' +\r\n                    'left:0;' +\r\n                    'top:0;' +\r\n                    'right:0;' +\r\n                    'bottom:0;' +\r\n                    'overflow:hidden;' +\r\n                    'pointer-events:none;' +\r\n                    'visibility:hidden;' +\r\n                    'z-index:-1;';\r\n\r\n                resizer.style.cssText = style;\r\n                resizer.className = cls;\r\n                resizer.innerHTML =\r\n                    '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\r\n                    '<div style=\"' +\r\n                    'position:absolute;' +\r\n                    'width:' + maxSize + 'px;' +\r\n                    'height:' + maxSize + 'px;' +\r\n                    'left:0;' +\r\n                    'top:0\">' +\r\n                    '</div>' +\r\n                    '</div>' +\r\n                    '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\r\n                    '<div style=\"' +\r\n                    'position:absolute;' +\r\n                    'width:200%;' +\r\n                    'height:200%;' +\r\n                    'left:0; ' +\r\n                    'top:0\">' +\r\n                    '</div>' +\r\n                    '</div>';\r\n\r\n                var expand = resizer.childNodes[0];\r\n                var shrink = resizer.childNodes[1];\r\n\r\n                resizer._reset = function() {\r\n                    expand.scrollLeft = maxSize;\r\n                    expand.scrollTop = maxSize;\r\n                    shrink.scrollLeft = maxSize;\r\n                    shrink.scrollTop = maxSize;\r\n                };\r\n                var onScroll = function() {\r\n                    resizer._reset();\r\n                    handler();\r\n                };\r\n\r\n                addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\r\n                addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\r\n\r\n                return resizer;\r\n            }\r\n\r\n            // https://davidwalsh.name/detect-node-insertion\r\n            function watchForRender(node, handler) {\r\n                var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\r\n                var proxy = expando.renderProxy = function(e) {\r\n                    if (e.animationName === CSS_RENDER_ANIMATION) {\r\n                        handler();\r\n                    }\r\n                };\r\n\r\n                helpers.each(ANIMATION_START_EVENTS, function(type) {\r\n                    addEventListener(node, type, proxy);\r\n                });\r\n\r\n                // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\r\n                // is removed then added back immediately (same animation frame?). Accessing the\r\n                // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\r\n                // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\r\n                // https://github.com/chartjs/Chart.js/issues/4737\r\n                expando.reflow = !!node.offsetParent;\r\n\r\n                node.classList.add(CSS_RENDER_MONITOR);\r\n            }\r\n\r\n            function unwatchForRender(node) {\r\n                var expando = node[EXPANDO_KEY] || {};\r\n                var proxy = expando.renderProxy;\r\n\r\n                if (proxy) {\r\n                    helpers.each(ANIMATION_START_EVENTS, function(type) {\r\n                        removeEventListener(node, type, proxy);\r\n                    });\r\n\r\n                    delete expando.renderProxy;\r\n                }\r\n\r\n                node.classList.remove(CSS_RENDER_MONITOR);\r\n            }\r\n\r\n            function addResizeListener(node, listener, chart) {\r\n                var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\r\n\r\n                // Let's keep track of this added resizer and thus avoid DOM query when removing it.\r\n                var resizer = expando.resizer = createResizer(throttled(function() {\r\n                    if (expando.resizer) {\r\n                        return listener(createEvent('resize', chart));\r\n                    }\r\n                }));\r\n\r\n                // The resizer needs to be attached to the node parent, so we first need to be\r\n                // sure that `node` is attached to the DOM before injecting the resizer element.\r\n                watchForRender(node, function() {\r\n                    if (expando.resizer) {\r\n                        var container = node.parentNode;\r\n                        if (container && container !== resizer.parentNode) {\r\n                            container.insertBefore(resizer, container.firstChild);\r\n                        }\r\n\r\n                        // The container size might have changed, let's reset the resizer state.\r\n                        resizer._reset();\r\n                    }\r\n                });\r\n            }\r\n\r\n            function removeResizeListener(node) {\r\n                var expando = node[EXPANDO_KEY] || {};\r\n                var resizer = expando.resizer;\r\n\r\n                delete expando.resizer;\r\n                unwatchForRender(node);\r\n\r\n                if (resizer && resizer.parentNode) {\r\n                    resizer.parentNode.removeChild(resizer);\r\n                }\r\n            }\r\n\r\n            //function injectCSS(platform, css) {\r\n            //    // http://stackoverflow.com/q/3922139\r\n            //    var style = platform._style || document.createElement('style');\r\n            //    if (!platform._style) {\r\n            //        platform._style = style;\r\n            //        css = '/* Chart.js */\\n' + css;\r\n            //        style.setAttribute('type', 'text/css');\r\n            //        document.getElementsByTagName('head')[0].appendChild(style);\r\n            //    }\r\n\r\n            //    style.appendChild(document.createTextNode(css));\r\n            //}\r\n\r\n            module.exports = {\r\n                /**\r\n                 * This property holds whether this platform is enabled for the current environment.\r\n                 * Currently used by platform.js to select the proper implementation.\r\n                 * @private\r\n                 */\r\n                _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\r\n\r\n                initialize: function() {\r\n                    var keyframes = 'from{opacity:0.99}to{opacity:1}';\r\n                    //injectCSS(this,\r\n                    //    // DOM rendering detection\r\n                    //    // https://davidwalsh.name/detect-node-insertion\r\n                    //    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\r\n                    //    '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\r\n                    //    '.' + CSS_RENDER_MONITOR + '{' +\r\n                    //    '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\r\n                    //    'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\r\n                    //    '}'\r\n                    //);\r\n                },\r\n\r\n                acquireContext: function(item, config) {\r\n                    if (typeof item === 'string') {\r\n                        item = document.getElementById(item);\r\n                    } else if (item.length) {\r\n                        // Support for array based queries (such as jQuery)\r\n                        item = item[0];\r\n                    }\r\n\r\n                    if (item && item.canvas) {\r\n                        // Support for any object associated to a canvas (including a context2d)\r\n                        item = item.canvas;\r\n                    }\r\n\r\n                    // To prevent canvas fingerprinting, some add-ons undefine the getContext\r\n                    // method, for example: https://github.com/kkapsner/CanvasBlocker\r\n                    // https://github.com/chartjs/Chart.js/issues/2807\r\n                    var context = item && item.getContext && item.getContext('2d');\r\n\r\n                    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\r\n                    // inside an iframe or when running in a protected environment. We could guess the\r\n                    // types from their toString() value but let's keep things flexible and assume it's\r\n                    // a sufficient condition if the item has a context2D which has item as `canvas`.\r\n                    // https://github.com/chartjs/Chart.js/issues/3887\r\n                    // https://github.com/chartjs/Chart.js/issues/4102\r\n                    // https://github.com/chartjs/Chart.js/issues/4152\r\n                    if (context && context.canvas === item) {\r\n                        initCanvas(item, config);\r\n                        return context;\r\n                    }\r\n\r\n                    return null;\r\n                },\r\n\r\n                releaseContext: function(context) {\r\n                    var canvas = context.canvas;\r\n                    if (!canvas[EXPANDO_KEY]) {\r\n                        return;\r\n                    }\r\n\r\n                    var initial = canvas[EXPANDO_KEY].initial;\r\n                    ['height', 'width'].forEach(function(prop) {\r\n                        var value = initial[prop];\r\n                        if (helpers.isNullOrUndef(value)) {\r\n                            canvas.removeAttribute(prop);\r\n                        } else {\r\n                            canvas.setAttribute(prop, value);\r\n                        }\r\n                    });\r\n\r\n                    helpers.each(initial.style || {}, function(value, key) {\r\n                        canvas.style[key] = value;\r\n                    });\r\n\r\n                    // The canvas render size might have been changed (and thus the state stack discarded),\r\n                    // we can't use save() and restore() to restore the initial state. So make sure that at\r\n                    // least the canvas context is reset to the default state by setting the canvas width.\r\n                    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\r\n                    canvas.width = canvas.width;\r\n\r\n                    delete canvas[EXPANDO_KEY];\r\n                },\r\n\r\n                addEventListener: function(chart, type, listener) {\r\n                    var canvas = chart.canvas;\r\n                    if (type === 'resize') {\r\n                        // Note: the resize event is not supported on all browsers.\r\n                        addResizeListener(canvas, listener, chart);\r\n                        return;\r\n                    }\r\n\r\n                    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\r\n                    var proxies = expando.proxies || (expando.proxies = {});\r\n                    var proxy = proxies[chart.id + '_' + type] = function(event) {\r\n                        listener(fromNativeEvent(event, chart));\r\n                    };\r\n\r\n                    addEventListener(canvas, type, proxy);\r\n                },\r\n\r\n                removeEventListener: function(chart, type, listener) {\r\n                    var canvas = chart.canvas;\r\n                    if (type === 'resize') {\r\n                        // Note: the resize event is not supported on all browsers.\r\n                        removeResizeListener(canvas, listener);\r\n                        return;\r\n                    }\r\n\r\n                    var expando = listener[EXPANDO_KEY] || {};\r\n                    var proxies = expando.proxies || {};\r\n                    var proxy = proxies[chart.id + '_' + type];\r\n                    if (!proxy) {\r\n                        return;\r\n                    }\r\n\r\n                    removeEventListener(canvas, type, proxy);\r\n                }\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use EventTarget.addEventListener instead.\r\n             * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\r\n             * @function Chart.helpers.addEvent\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.addEvent = addEventListener;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use EventTarget.removeEventListener instead.\r\n             * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\r\n             * @function Chart.helpers.removeEvent\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.removeEvent = removeEventListener;\r\n        }, { \"36\": 36 }], 39: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n            var basic = require(37);\r\n            var dom = require(38);\r\n\r\n            // @TODO Make possible to select another platform at build time.\r\n            var implementation = dom._enabled ? dom : basic;\r\n\r\n            /**\r\n             * @namespace Chart.platform\r\n             * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\r\n             * @since 2.4.0\r\n             */\r\n            module.exports = helpers.extend({\r\n                /**\r\n                 * @since 2.7.0\r\n                 */\r\n                initialize: function() { },\r\n\r\n                /**\r\n                 * Called at chart construction time, returns a context2d instance implementing\r\n                 * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\r\n                 * @param {*} item - The native item from which to acquire context (platform specific)\r\n                 * @param {Object} options - The chart options\r\n                 * @returns {CanvasRenderingContext2D} context2d instance\r\n                 */\r\n                acquireContext: function() { },\r\n\r\n                /**\r\n                 * Called at chart destruction time, releases any resources associated to the context\r\n                 * previously returned by the acquireContext() method.\r\n                 * @param {CanvasRenderingContext2D} context - The context2d instance\r\n                 * @returns {Boolean} true if the method succeeded, else false\r\n                 */\r\n                releaseContext: function() { },\r\n\r\n                /**\r\n                 * Registers the specified listener on the given chart.\r\n                 * @param {Chart} chart - Chart from which to listen for event\r\n                 * @param {String} type - The ({@link IEvent}) type to listen for\r\n                 * @param {Function} listener - Receives a notification (an object that implements\r\n                 * the {@link IEvent} interface) when an event of the specified type occurs.\r\n                 */\r\n                addEventListener: function() { },\r\n\r\n                /**\r\n                 * Removes the specified listener previously registered with addEventListener.\r\n                 * @param {Chart} chart -Chart from which to remove the listener\r\n                 * @param {String} type - The ({@link IEvent}) type to remove\r\n                 * @param {Function} listener - The listener function to remove from the event target.\r\n                 */\r\n                removeEventListener: function() { }\r\n            }, implementation);\r\n\r\n            /**\r\n             * @interface IPlatform\r\n             * Allows abstracting platform dependencies away from the chart\r\n             * @borrows Chart.platform.acquireContext as acquireContext\r\n             * @borrows Chart.platform.releaseContext as releaseContext\r\n             * @borrows Chart.platform.addEventListener as addEventListener\r\n             * @borrows Chart.platform.removeEventListener as removeEventListener\r\n             */\r\n\r\n            /**\r\n             * @interface IEvent\r\n             * @prop {String} type - The event type name, possible values are:\r\n             * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\r\n             * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\r\n             * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\r\n             * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\r\n             * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\r\n             */\r\n        }, { \"36\": 36, \"37\": 37, \"38\": 38 }], 40: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = {};\r\n            module.exports.filler = require(41);\r\n            module.exports.legend = require(42);\r\n            module.exports.title = require(43);\r\n        }, { \"41\": 41, \"42\": 42, \"43\": 43 }], 41: [function(require, module, exports) {\r\n            /**\r\n             * Plugin based on discussion from the following Chart.js issues:\r\n             * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\r\n             * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\r\n             */\r\n\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                plugins: {\r\n                    filler: {\r\n                        propagate: true\r\n                    }\r\n                }\r\n            });\r\n\r\n            var mappers = {\r\n                dataset: function(source) {\r\n                    var index = source.fill;\r\n                    var chart = source.chart;\r\n                    var meta = chart.getDatasetMeta(index);\r\n                    var visible = meta && chart.isDatasetVisible(index);\r\n                    var points = (visible && meta.dataset._children) || [];\r\n                    var length = points.length || 0;\r\n\r\n                    return !length ? null : function(point, i) {\r\n                        return (i < length && points[i]._view) || null;\r\n                    };\r\n                },\r\n\r\n                boundary: function(source) {\r\n                    var boundary = source.boundary;\r\n                    var x = boundary ? boundary.x : null;\r\n                    var y = boundary ? boundary.y : null;\r\n\r\n                    return function(point) {\r\n                        return {\r\n                            x: x === null ? point.x : x,\r\n                            y: y === null ? point.y : y,\r\n                        };\r\n                    };\r\n                }\r\n            };\r\n\r\n            // @todo if (fill[0] === '#')\r\n            function decodeFill(el, index, count) {\r\n                var model = el._model || {};\r\n                var fill = model.fill;\r\n                var target;\r\n\r\n                if (fill === undefined) {\r\n                    fill = !!model.backgroundColor;\r\n                }\r\n\r\n                if (fill === false || fill === null) {\r\n                    return false;\r\n                }\r\n\r\n                if (fill === true) {\r\n                    return 'origin';\r\n                }\r\n\r\n                target = parseFloat(fill, 10);\r\n                if (isFinite(target) && Math.floor(target) === target) {\r\n                    if (fill[0] === '-' || fill[0] === '+') {\r\n                        target = index + target;\r\n                    }\r\n\r\n                    if (target === index || target < 0 || target >= count) {\r\n                        return false;\r\n                    }\r\n\r\n                    return target;\r\n                }\r\n\r\n                switch (fill) {\r\n                    // compatibility\r\n                    case 'bottom':\r\n                        return 'start';\r\n                    case 'top':\r\n                        return 'end';\r\n                    case 'zero':\r\n                        return 'origin';\r\n                    // supported boundaries\r\n                    case 'origin':\r\n                    case 'start':\r\n                    case 'end':\r\n                        return fill;\r\n                    // invalid fill values\r\n                    default:\r\n                        return false;\r\n                }\r\n            }\r\n\r\n            function computeBoundary(source) {\r\n                var model = source.el._model || {};\r\n                var scale = source.el._scale || {};\r\n                var fill = source.fill;\r\n                var target = null;\r\n                var horizontal;\r\n\r\n                if (isFinite(fill)) {\r\n                    return null;\r\n                }\r\n\r\n                // Backward compatibility: until v3, we still need to support boundary values set on\r\n                // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\r\n                // controllers might still use it (e.g. the Smith chart).\r\n\r\n                if (fill === 'start') {\r\n                    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\r\n                } else if (fill === 'end') {\r\n                    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\r\n                } else if (model.scaleZero !== undefined) {\r\n                    target = model.scaleZero;\r\n                } else if (scale.getBasePosition) {\r\n                    target = scale.getBasePosition();\r\n                } else if (scale.getBasePixel) {\r\n                    target = scale.getBasePixel();\r\n                }\r\n\r\n                if (target !== undefined && target !== null) {\r\n                    if (target.x !== undefined && target.y !== undefined) {\r\n                        return target;\r\n                    }\r\n\r\n                    if (typeof target === 'number' && isFinite(target)) {\r\n                        horizontal = scale.isHorizontal();\r\n                        return {\r\n                            x: horizontal ? target : null,\r\n                            y: horizontal ? null : target\r\n                        };\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n\r\n            function resolveTarget(sources, index, propagate) {\r\n                var source = sources[index];\r\n                var fill = source.fill;\r\n                var visited = [index];\r\n                var target;\r\n\r\n                if (!propagate) {\r\n                    return fill;\r\n                }\r\n\r\n                while (fill !== false && visited.indexOf(fill) === -1) {\r\n                    if (!isFinite(fill)) {\r\n                        return fill;\r\n                    }\r\n\r\n                    target = sources[fill];\r\n                    if (!target) {\r\n                        return false;\r\n                    }\r\n\r\n                    if (target.visible) {\r\n                        return fill;\r\n                    }\r\n\r\n                    visited.push(fill);\r\n                    fill = target.fill;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            function createMapper(source) {\r\n                var fill = source.fill;\r\n                var type = 'dataset';\r\n\r\n                if (fill === false) {\r\n                    return null;\r\n                }\r\n\r\n                if (!isFinite(fill)) {\r\n                    type = 'boundary';\r\n                }\r\n\r\n                return mappers[type](source);\r\n            }\r\n\r\n            function isDrawable(point) {\r\n                return point && !point.skip;\r\n            }\r\n\r\n            function drawArea(ctx, curve0, curve1, len0, len1) {\r\n                var i;\r\n\r\n                if (!len0 || !len1) {\r\n                    return;\r\n                }\r\n\r\n                // building first area curve (normal)\r\n                ctx.moveTo(curve0[0].x, curve0[0].y);\r\n                for (i = 1; i < len0; ++i) {\r\n                    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\r\n                }\r\n\r\n                // joining the two area curves\r\n                ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\r\n\r\n                // building opposite area curve (reverse)\r\n                for (i = len1 - 1; i > 0; --i) {\r\n                    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\r\n                }\r\n            }\r\n\r\n            function doFill(ctx, points, mapper, view, color, loop) {\r\n                var count = points.length;\r\n                var span = view.spanGaps;\r\n                var curve0 = [];\r\n                var curve1 = [];\r\n                var len0 = 0;\r\n                var len1 = 0;\r\n                var i, ilen, index, p0, p1, d0, d1;\r\n\r\n                ctx.beginPath();\r\n\r\n                for (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\r\n                    index = i % count;\r\n                    p0 = points[index]._view;\r\n                    p1 = mapper(p0, index, view);\r\n                    d0 = isDrawable(p0);\r\n                    d1 = isDrawable(p1);\r\n\r\n                    if (d0 && d1) {\r\n                        len0 = curve0.push(p0);\r\n                        len1 = curve1.push(p1);\r\n                    } else if (len0 && len1) {\r\n                        if (!span) {\r\n                            drawArea(ctx, curve0, curve1, len0, len1);\r\n                            len0 = len1 = 0;\r\n                            curve0 = [];\r\n                            curve1 = [];\r\n                        } else {\r\n                            if (d0) {\r\n                                curve0.push(p0);\r\n                            }\r\n                            if (d1) {\r\n                                curve1.push(p1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                drawArea(ctx, curve0, curve1, len0, len1);\r\n\r\n                ctx.closePath();\r\n                ctx.fillStyle = color;\r\n                ctx.fill();\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'filler',\r\n\r\n                afterDatasetsUpdate: function(chart, options) {\r\n                    var count = (chart.data.datasets || []).length;\r\n                    var propagate = options.propagate;\r\n                    var sources = [];\r\n                    var meta, i, el, source;\r\n\r\n                    for (i = 0; i < count; ++i) {\r\n                        meta = chart.getDatasetMeta(i);\r\n                        el = meta.dataset;\r\n                        source = null;\r\n\r\n                        if (el && el._model && el instanceof elements.Line) {\r\n                            source = {\r\n                                visible: chart.isDatasetVisible(i),\r\n                                fill: decodeFill(el, i, count),\r\n                                chart: chart,\r\n                                el: el\r\n                            };\r\n                        }\r\n\r\n                        meta.$filler = source;\r\n                        sources.push(source);\r\n                    }\r\n\r\n                    for (i = 0; i < count; ++i) {\r\n                        source = sources[i];\r\n                        if (!source) {\r\n                            continue;\r\n                        }\r\n\r\n                        source.fill = resolveTarget(sources, i, propagate);\r\n                        source.boundary = computeBoundary(source);\r\n                        source.mapper = createMapper(source);\r\n                    }\r\n                },\r\n\r\n                beforeDatasetDraw: function(chart, args) {\r\n                    var meta = args.meta.$filler;\r\n                    if (!meta) {\r\n                        return;\r\n                    }\r\n\r\n                    var ctx = chart.ctx;\r\n                    var el = meta.el;\r\n                    var view = el._view;\r\n                    var points = el._children || [];\r\n                    var mapper = meta.mapper;\r\n                    var color = view.backgroundColor || defaults.global.defaultColor;\r\n\r\n                    if (mapper && color && points.length) {\r\n                        helpers.canvas.clipArea(ctx, chart.chartArea);\r\n                        doFill(ctx, points, mapper, view, color, el._loop);\r\n                        helpers.canvas.unclipArea(ctx);\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 42: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            var noop = helpers.noop;\r\n\r\n            defaults._set('global', {\r\n                legend: {\r\n                    display: true,\r\n                    position: 'top',\r\n                    fullWidth: true,\r\n                    reverse: false,\r\n                    weight: 1000,\r\n\r\n                    // a callback that will handle\r\n                    onClick: function(e, legendItem) {\r\n                        var index = legendItem.datasetIndex;\r\n                        var ci = this.chart;\r\n                        var meta = ci.getDatasetMeta(index);\r\n\r\n                        // See controller.isDatasetVisible comment\r\n                        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\r\n\r\n                        // We hid a dataset ... rerender the chart\r\n                        ci.update();\r\n                    },\r\n\r\n                    onHover: null,\r\n\r\n                    labels: {\r\n                        boxWidth: 40,\r\n                        padding: 10,\r\n                        // Generates labels shown in the legend\r\n                        // Valid properties to return:\r\n                        // text : text to display\r\n                        // fillStyle : fill of coloured box\r\n                        // strokeStyle: stroke of coloured box\r\n                        // hidden : if this legend item refers to a hidden item\r\n                        // lineCap : cap style for line\r\n                        // lineDash\r\n                        // lineDashOffset :\r\n                        // lineJoin :\r\n                        // lineWidth :\r\n                        generateLabels: function(chart) {\r\n                            var data = chart.data;\r\n                            return helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\r\n                                return {\r\n                                    text: dataset.label,\r\n                                    fillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\r\n                                    hidden: !chart.isDatasetVisible(i),\r\n                                    lineCap: dataset.borderCapStyle,\r\n                                    lineDash: dataset.borderDash,\r\n                                    lineDashOffset: dataset.borderDashOffset,\r\n                                    lineJoin: dataset.borderJoinStyle,\r\n                                    lineWidth: dataset.borderWidth,\r\n                                    strokeStyle: dataset.borderColor,\r\n                                    pointStyle: dataset.pointStyle,\r\n\r\n                                    // Below is extra data used for toggling the datasets\r\n                                    datasetIndex: i\r\n                                };\r\n                            }, this) : [];\r\n                        }\r\n                    }\r\n                },\r\n\r\n                legendCallback: function(chart) {\r\n                    var text = [];\r\n                    text.push('<ul class=\"' + chart.id + '-legend\">');\r\n                    for (var i = 0; i < chart.data.datasets.length; i++) {\r\n                        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\r\n                        if (chart.data.datasets[i].label) {\r\n                            text.push(chart.data.datasets[i].label);\r\n                        }\r\n                        text.push('</li>');\r\n                    }\r\n                    text.push('</ul>');\r\n                    return text.join('');\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Helper function to get the box width based on the usePointStyle option\r\n             * @param labelopts {Object} the label options on the legend\r\n             * @param fontSize {Number} the label font size\r\n             * @return {Number} width of the color box area\r\n             */\r\n            function getBoxWidth(labelOpts, fontSize) {\r\n                return labelOpts.usePointStyle ?\r\n                    fontSize * Math.SQRT2 :\r\n                    labelOpts.boxWidth;\r\n            }\r\n\r\n            /**\r\n             * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\r\n             */\r\n            var Legend = Element.extend({\r\n                initialize: function(config) {\r\n                    helpers.extend(this, config);\r\n\r\n                    // Contains hit boxes for each dataset (in dataset order)\r\n                    this.legendHitBoxes = [];\r\n\r\n                    // Are we in doughnut mode which has a different data type\r\n                    this.doughnutMode = false;\r\n                },\r\n\r\n                // These methods are ordered by lifecycle. Utilities then follow.\r\n                // Any function defined here is inherited by all legend types.\r\n                // Any function can be extended by the legend type\r\n\r\n                beforeUpdate: noop,\r\n                update: function(maxWidth, maxHeight, margins) {\r\n                    var me = this;\r\n\r\n                    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                    me.beforeUpdate();\r\n\r\n                    // Absorb the master measurements\r\n                    me.maxWidth = maxWidth;\r\n                    me.maxHeight = maxHeight;\r\n                    me.margins = margins;\r\n\r\n                    // Dimensions\r\n                    me.beforeSetDimensions();\r\n                    me.setDimensions();\r\n                    me.afterSetDimensions();\r\n                    // Labels\r\n                    me.beforeBuildLabels();\r\n                    me.buildLabels();\r\n                    me.afterBuildLabels();\r\n\r\n                    // Fit\r\n                    me.beforeFit();\r\n                    me.fit();\r\n                    me.afterFit();\r\n                    //\r\n                    me.afterUpdate();\r\n\r\n                    return me.minSize;\r\n                },\r\n                afterUpdate: noop,\r\n\r\n                //\r\n\r\n                beforeSetDimensions: noop,\r\n                setDimensions: function() {\r\n                    var me = this;\r\n                    // Set the unconstrained dimension before label rotation\r\n                    if (me.isHorizontal()) {\r\n                        // Reset position before calculating rotation\r\n                        me.width = me.maxWidth;\r\n                        me.left = 0;\r\n                        me.right = me.width;\r\n                    } else {\r\n                        me.height = me.maxHeight;\r\n\r\n                        // Reset position before calculating rotation\r\n                        me.top = 0;\r\n                        me.bottom = me.height;\r\n                    }\r\n\r\n                    // Reset padding\r\n                    me.paddingLeft = 0;\r\n                    me.paddingTop = 0;\r\n                    me.paddingRight = 0;\r\n                    me.paddingBottom = 0;\r\n\r\n                    // Reset minSize\r\n                    me.minSize = {\r\n                        width: 0,\r\n                        height: 0\r\n                    };\r\n                },\r\n                afterSetDimensions: noop,\r\n\r\n                //\r\n\r\n                beforeBuildLabels: noop,\r\n                buildLabels: function() {\r\n                    var me = this;\r\n                    var labelOpts = me.options.labels || {};\r\n                    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\r\n\r\n                    if (labelOpts.filter) {\r\n                        legendItems = legendItems.filter(function(item) {\r\n                            return labelOpts.filter(item, me.chart.data);\r\n                        });\r\n                    }\r\n\r\n                    if (me.options.reverse) {\r\n                        legendItems.reverse();\r\n                    }\r\n\r\n                    me.legendItems = legendItems;\r\n                },\r\n                afterBuildLabels: noop,\r\n\r\n                //\r\n\r\n                beforeFit: noop,\r\n                fit: function() {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var labelOpts = opts.labels;\r\n                    var display = opts.display;\r\n\r\n                    var ctx = me.ctx;\r\n\r\n                    var globalDefault = defaults.global;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\r\n                    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\r\n                    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\r\n                    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n                    // Reset hit boxes\r\n                    var hitboxes = me.legendHitBoxes = [];\r\n\r\n                    var minSize = me.minSize;\r\n                    var isHorizontal = me.isHorizontal();\r\n\r\n                    if (isHorizontal) {\r\n                        minSize.width = me.maxWidth; // fill all the width\r\n                        minSize.height = display ? 10 : 0;\r\n                    } else {\r\n                        minSize.width = display ? 10 : 0;\r\n                        minSize.height = me.maxHeight; // fill all the height\r\n                    }\r\n\r\n                    // Increase sizes here\r\n                    if (display) {\r\n                        ctx.font = labelFont;\r\n\r\n                        if (isHorizontal) {\r\n                            // Labels\r\n\r\n                            // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\r\n                            var lineWidths = me.lineWidths = [0];\r\n                            var totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\r\n\r\n                            ctx.textAlign = 'left';\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            helpers.each(me.legendItems, function(legendItem, i) {\r\n                                var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                                var width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n                                if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\r\n                                    totalHeight += fontSize + (labelOpts.padding);\r\n                                    lineWidths[lineWidths.length] = me.left;\r\n                                }\r\n\r\n                                // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                                hitboxes[i] = {\r\n                                    left: 0,\r\n                                    top: 0,\r\n                                    width: width,\r\n                                    height: fontSize\r\n                                };\r\n\r\n                                lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\r\n                            });\r\n\r\n                            minSize.height += totalHeight;\r\n                        } else {\r\n                            var vPadding = labelOpts.padding;\r\n                            var columnWidths = me.columnWidths = [];\r\n                            var totalWidth = labelOpts.padding;\r\n                            var currentColWidth = 0;\r\n                            var currentColHeight = 0;\r\n                            var itemHeight = fontSize + vPadding;\r\n\r\n                            helpers.each(me.legendItems, function(legendItem, i) {\r\n                                var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                                var itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n                                // If too tall, go to new column\r\n                                if (currentColHeight + itemHeight > minSize.height) {\r\n                                    totalWidth += currentColWidth + labelOpts.padding;\r\n                                    columnWidths.push(currentColWidth); // previous column width\r\n\r\n                                    currentColWidth = 0;\r\n                                    currentColHeight = 0;\r\n                                }\r\n\r\n                                // Get max width\r\n                                currentColWidth = Math.max(currentColWidth, itemWidth);\r\n                                currentColHeight += itemHeight;\r\n\r\n                                // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                                hitboxes[i] = {\r\n                                    left: 0,\r\n                                    top: 0,\r\n                                    width: itemWidth,\r\n                                    height: fontSize\r\n                                };\r\n                            });\r\n\r\n                            totalWidth += currentColWidth;\r\n                            columnWidths.push(currentColWidth);\r\n                            minSize.width += totalWidth;\r\n                        }\r\n                    }\r\n\r\n                    me.width = minSize.width;\r\n                    me.height = minSize.height;\r\n                },\r\n                afterFit: noop,\r\n\r\n                // Shared Methods\r\n                isHorizontal: function() {\r\n                    return this.options.position === 'top' || this.options.position === 'bottom';\r\n                },\r\n\r\n                // Actually draw the legend on the canvas\r\n                draw: function() {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var labelOpts = opts.labels;\r\n                    var globalDefault = defaults.global;\r\n                    var lineDefault = globalDefault.elements.line;\r\n                    var legendWidth = me.width;\r\n                    var lineWidths = me.lineWidths;\r\n\r\n                    if (opts.display) {\r\n                        var ctx = me.ctx;\r\n                        var valueOrDefault = helpers.valueOrDefault;\r\n                        var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\r\n                        var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\r\n                        var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\r\n                        var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\r\n                        var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n                        var cursor;\r\n\r\n                        // Canvas setup\r\n                        ctx.textAlign = 'left';\r\n                        ctx.textBaseline = 'middle';\r\n                        ctx.lineWidth = 0.5;\r\n                        ctx.strokeStyle = fontColor; // for strikethrough effect\r\n                        ctx.fillStyle = fontColor; // render in correct colour\r\n                        ctx.font = labelFont;\r\n\r\n                        var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                        var hitboxes = me.legendHitBoxes;\r\n\r\n                        // current position\r\n                        var drawLegendBox = function(x, y, legendItem) {\r\n                            if (isNaN(boxWidth) || boxWidth <= 0) {\r\n                                return;\r\n                            }\r\n\r\n                            // Set the ctx for the box\r\n                            ctx.save();\r\n\r\n                            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\r\n                            ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\r\n                            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\r\n                            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\r\n                            ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\r\n                            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\r\n                            var isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\r\n\r\n                            if (ctx.setLineDash) {\r\n                                // IE 9 and 10 do not support line dash\r\n                                ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\r\n                            }\r\n\r\n                            if (opts.labels && opts.labels.usePointStyle) {\r\n                                // Recalculate x and y for drawPoint() because its expecting\r\n                                // x and y to be center of figure (instead of top left)\r\n                                var radius = fontSize * Math.SQRT2 / 2;\r\n                                var offSet = radius / Math.SQRT2;\r\n                                var centerX = x + offSet;\r\n                                var centerY = y + offSet;\r\n\r\n                                // Draw pointStyle as legend symbol\r\n                                helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\r\n                            } else {\r\n                                // Draw box as legend symbol\r\n                                if (!isLineWidthZero) {\r\n                                    ctx.strokeRect(x, y, boxWidth, fontSize);\r\n                                }\r\n                                ctx.fillRect(x, y, boxWidth, fontSize);\r\n                            }\r\n\r\n                            ctx.restore();\r\n                        };\r\n                        var fillText = function(x, y, legendItem, textWidth) {\r\n                            var halfFontSize = fontSize / 2;\r\n                            var xLeft = boxWidth + halfFontSize + x;\r\n                            var yMiddle = y + halfFontSize;\r\n\r\n                            ctx.fillText(legendItem.text, xLeft, yMiddle);\r\n\r\n                            if (legendItem.hidden) {\r\n                                // Strikethrough the text if hidden\r\n                                ctx.beginPath();\r\n                                ctx.lineWidth = 2;\r\n                                ctx.moveTo(xLeft, yMiddle);\r\n                                ctx.lineTo(xLeft + textWidth, yMiddle);\r\n                                ctx.stroke();\r\n                            }\r\n                        };\r\n\r\n                        // Horizontal\r\n                        var isHorizontal = me.isHorizontal();\r\n                        if (isHorizontal) {\r\n                            cursor = {\r\n                                x: me.left + ((legendWidth - lineWidths[0]) / 2),\r\n                                y: me.top + labelOpts.padding,\r\n                                line: 0\r\n                            };\r\n                        } else {\r\n                            cursor = {\r\n                                x: me.left + labelOpts.padding,\r\n                                y: me.top + labelOpts.padding,\r\n                                line: 0\r\n                            };\r\n                        }\r\n\r\n                        var itemHeight = fontSize + labelOpts.padding;\r\n                        helpers.each(me.legendItems, function(legendItem, i) {\r\n                            var textWidth = ctx.measureText(legendItem.text).width;\r\n                            var width = boxWidth + (fontSize / 2) + textWidth;\r\n                            var x = cursor.x;\r\n                            var y = cursor.y;\r\n\r\n                            if (isHorizontal) {\r\n                                if (x + width >= legendWidth) {\r\n                                    y = cursor.y += itemHeight;\r\n                                    cursor.line++;\r\n                                    x = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\r\n                                }\r\n                            } else if (y + itemHeight > me.bottom) {\r\n                                x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\r\n                                y = cursor.y = me.top + labelOpts.padding;\r\n                                cursor.line++;\r\n                            }\r\n\r\n                            drawLegendBox(x, y, legendItem);\r\n\r\n                            hitboxes[i].left = x;\r\n                            hitboxes[i].top = y;\r\n\r\n                            // Fill the actual label\r\n                            fillText(x, y, legendItem, textWidth);\r\n\r\n                            if (isHorizontal) {\r\n                                cursor.x += width + (labelOpts.padding);\r\n                            } else {\r\n                                cursor.y += itemHeight;\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Handle an event\r\n                 * @private\r\n                 * @param {IEvent} event - The event to handle\r\n                 * @return {Boolean} true if a change occured\r\n                 */\r\n                handleEvent: function(e) {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var type = e.type === 'mouseup' ? 'click' : e.type;\r\n                    var changed = false;\r\n\r\n                    if (type === 'mousemove') {\r\n                        if (!opts.onHover) {\r\n                            return;\r\n                        }\r\n                    } else if (type === 'click') {\r\n                        if (!opts.onClick) {\r\n                            return;\r\n                        }\r\n                    } else {\r\n                        return;\r\n                    }\r\n\r\n                    // Chart event already has relative position in it\r\n                    var x = e.x;\r\n                    var y = e.y;\r\n\r\n                    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\r\n                        // See if we are touching one of the dataset boxes\r\n                        var lh = me.legendHitBoxes;\r\n                        for (var i = 0; i < lh.length; ++i) {\r\n                            var hitBox = lh[i];\r\n\r\n                            if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n                                // Touching an element\r\n                                if (type === 'click') {\r\n                                    // use e.native for backwards compatibility\r\n                                    opts.onClick.call(me, e.native, me.legendItems[i]);\r\n                                    changed = true;\r\n                                    break;\r\n                                } else if (type === 'mousemove') {\r\n                                    // use e.native for backwards compatibility\r\n                                    opts.onHover.call(me, e.native, me.legendItems[i]);\r\n                                    changed = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return changed;\r\n                }\r\n            });\r\n\r\n            function createNewLegendAndAttach(chart, legendOpts) {\r\n                var legend = new Legend({\r\n                    ctx: chart.ctx,\r\n                    options: legendOpts,\r\n                    chart: chart\r\n                });\r\n\r\n                layouts.configure(chart, legend, legendOpts);\r\n                layouts.addBox(chart, legend);\r\n                chart.legend = legend;\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'legend',\r\n\r\n                /**\r\n                 * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\r\n                 * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\r\n                 * the plugin, which one will be re-exposed in the chart.js file.\r\n                 * https://github.com/chartjs/Chart.js/pull/2640\r\n                 * @private\r\n                 */\r\n                _element: Legend,\r\n\r\n                beforeInit: function(chart) {\r\n                    var legendOpts = chart.options.legend;\r\n\r\n                    if (legendOpts) {\r\n                        createNewLegendAndAttach(chart, legendOpts);\r\n                    }\r\n                },\r\n\r\n                beforeUpdate: function(chart) {\r\n                    var legendOpts = chart.options.legend;\r\n                    var legend = chart.legend;\r\n\r\n                    if (legendOpts) {\r\n                        helpers.mergeIf(legendOpts, defaults.global.legend);\r\n\r\n                        if (legend) {\r\n                            layouts.configure(chart, legend, legendOpts);\r\n                            legend.options = legendOpts;\r\n                        } else {\r\n                            createNewLegendAndAttach(chart, legendOpts);\r\n                        }\r\n                    } else if (legend) {\r\n                        layouts.removeBox(chart, legend);\r\n                        delete chart.legend;\r\n                    }\r\n                },\r\n\r\n                afterEvent: function(chart, e) {\r\n                    var legend = chart.legend;\r\n                    if (legend) {\r\n                        legend.handleEvent(e);\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"21\": 21, \"36\": 36 }], 43: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            var noop = helpers.noop;\r\n\r\n            defaults._set('global', {\r\n                title: {\r\n                    display: false,\r\n                    fontStyle: 'bold',\r\n                    fullWidth: true,\r\n                    lineHeight: 1.2,\r\n                    padding: 10,\r\n                    position: 'top',\r\n                    text: '',\r\n                    weight: 2000         // by default greater than legend (1000) to be above\r\n                }\r\n            });\r\n\r\n            /**\r\n             * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\r\n             */\r\n            var Title = Element.extend({\r\n                initialize: function(config) {\r\n                    var me = this;\r\n                    helpers.extend(me, config);\r\n\r\n                    // Contains hit boxes for each dataset (in dataset order)\r\n                    me.legendHitBoxes = [];\r\n                },\r\n\r\n                // These methods are ordered by lifecycle. Utilities then follow.\r\n\r\n                beforeUpdate: noop,\r\n                update: function(maxWidth, maxHeight, margins) {\r\n                    var me = this;\r\n\r\n                    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                    me.beforeUpdate();\r\n\r\n                    // Absorb the master measurements\r\n                    me.maxWidth = maxWidth;\r\n                    me.maxHeight = maxHeight;\r\n                    me.margins = margins;\r\n\r\n                    // Dimensions\r\n                    me.beforeSetDimensions();\r\n                    me.setDimensions();\r\n                    me.afterSetDimensions();\r\n                    // Labels\r\n                    me.beforeBuildLabels();\r\n                    me.buildLabels();\r\n                    me.afterBuildLabels();\r\n\r\n                    // Fit\r\n                    me.beforeFit();\r\n                    me.fit();\r\n                    me.afterFit();\r\n                    //\r\n                    me.afterUpdate();\r\n\r\n                    return me.minSize;\r\n                },\r\n                afterUpdate: noop,\r\n\r\n                //\r\n\r\n                beforeSetDimensions: noop,\r\n                setDimensions: function() {\r\n                    var me = this;\r\n                    // Set the unconstrained dimension before label rotation\r\n                    if (me.isHorizontal()) {\r\n                        // Reset position before calculating rotation\r\n                        me.width = me.maxWidth;\r\n                        me.left = 0;\r\n                        me.right = me.width;\r\n                    } else {\r\n                        me.height = me.maxHeight;\r\n\r\n                        // Reset position before calculating rotation\r\n                        me.top = 0;\r\n                        me.bottom = me.height;\r\n                    }\r\n\r\n                    // Reset padding\r\n                    me.paddingLeft = 0;\r\n                    me.paddingTop = 0;\r\n                    me.paddingRight = 0;\r\n                    me.paddingBottom = 0;\r\n\r\n                    // Reset minSize\r\n                    me.minSize = {\r\n                        width: 0,\r\n                        height: 0\r\n                    };\r\n                },\r\n                afterSetDimensions: noop,\r\n\r\n                //\r\n\r\n                beforeBuildLabels: noop,\r\n                buildLabels: noop,\r\n                afterBuildLabels: noop,\r\n\r\n                //\r\n\r\n                beforeFit: noop,\r\n                fit: function() {\r\n                    var me = this;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var opts = me.options;\r\n                    var display = opts.display;\r\n                    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\r\n                    var minSize = me.minSize;\r\n                    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\r\n                    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\r\n                    var textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\r\n\r\n                    if (me.isHorizontal()) {\r\n                        minSize.width = me.maxWidth; // fill all the width\r\n                        minSize.height = textSize;\r\n                    } else {\r\n                        minSize.width = textSize;\r\n                        minSize.height = me.maxHeight; // fill all the height\r\n                    }\r\n\r\n                    me.width = minSize.width;\r\n                    me.height = minSize.height;\r\n                },\r\n                afterFit: noop,\r\n\r\n                // Shared Methods\r\n                isHorizontal: function() {\r\n                    var pos = this.options.position;\r\n                    return pos === 'top' || pos === 'bottom';\r\n                },\r\n\r\n                // Actually draw the title block on the canvas\r\n                draw: function() {\r\n                    var me = this;\r\n                    var ctx = me.ctx;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var opts = me.options;\r\n                    var globalDefaults = defaults.global;\r\n\r\n                    if (opts.display) {\r\n                        var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\r\n                        var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\r\n                        var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\r\n                        var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n                        var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\r\n                        var offset = lineHeight / 2 + opts.padding;\r\n                        var rotation = 0;\r\n                        var top = me.top;\r\n                        var left = me.left;\r\n                        var bottom = me.bottom;\r\n                        var right = me.right;\r\n                        var maxWidth, titleX, titleY;\r\n\r\n                        ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\r\n                        ctx.font = titleFont;\r\n\r\n                        // Horizontal\r\n                        if (me.isHorizontal()) {\r\n                            titleX = left + ((right - left) / 2); // midpoint of the width\r\n                            titleY = top + offset;\r\n                            maxWidth = right - left;\r\n                        } else {\r\n                            titleX = opts.position === 'left' ? left + offset : right - offset;\r\n                            titleY = top + ((bottom - top) / 2);\r\n                            maxWidth = bottom - top;\r\n                            rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\r\n                        }\r\n\r\n                        ctx.save();\r\n                        ctx.translate(titleX, titleY);\r\n                        ctx.rotate(rotation);\r\n                        ctx.textAlign = 'center';\r\n                        ctx.textBaseline = 'middle';\r\n\r\n                        var text = opts.text;\r\n                        if (helpers.isArray(text)) {\r\n                            var y = 0;\r\n                            for (var i = 0; i < text.length; ++i) {\r\n                                ctx.fillText(text[i], 0, y, maxWidth);\r\n                                y += lineHeight;\r\n                            }\r\n                        } else {\r\n                            ctx.fillText(text, 0, 0, maxWidth);\r\n                        }\r\n\r\n                        ctx.restore();\r\n                    }\r\n                }\r\n            });\r\n\r\n            function createNewTitleBlockAndAttach(chart, titleOpts) {\r\n                var title = new Title({\r\n                    ctx: chart.ctx,\r\n                    options: titleOpts,\r\n                    chart: chart\r\n                });\r\n\r\n                layouts.configure(chart, title, titleOpts);\r\n                layouts.addBox(chart, title);\r\n                chart.titleBlock = title;\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'title',\r\n\r\n                /**\r\n                 * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\r\n                 * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\r\n                 * the plugin, which one will be re-exposed in the chart.js file.\r\n                 * https://github.com/chartjs/Chart.js/pull/2640\r\n                 * @private\r\n                 */\r\n                _element: Title,\r\n\r\n                beforeInit: function(chart) {\r\n                    var titleOpts = chart.options.title;\r\n\r\n                    if (titleOpts) {\r\n                        createNewTitleBlockAndAttach(chart, titleOpts);\r\n                    }\r\n                },\r\n\r\n                beforeUpdate: function(chart) {\r\n                    var titleOpts = chart.options.title;\r\n                    var titleBlock = chart.titleBlock;\r\n\r\n                    if (titleOpts) {\r\n                        helpers.mergeIf(titleOpts, defaults.global.title);\r\n\r\n                        if (titleBlock) {\r\n                            layouts.configure(chart, titleBlock, titleOpts);\r\n                            titleBlock.options = titleOpts;\r\n                        } else {\r\n                            createNewTitleBlockAndAttach(chart, titleOpts);\r\n                        }\r\n                    } else if (titleBlock) {\r\n                        layouts.removeBox(chart, titleBlock);\r\n                        delete chart.titleBlock;\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"21\": 21, \"36\": 36 }], 44: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                // Default config for a category scale\r\n                var defaultConfig = {\r\n                    position: 'bottom'\r\n                };\r\n\r\n                var DatasetScale = Chart.Scale.extend({\r\n                    /**\r\n                    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\r\n                    * else fall back to data.labels\r\n                    * @private\r\n                    */\r\n                    getLabels: function() {\r\n                        var data = this.chart.data;\r\n                        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\r\n                    },\r\n\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var labels = me.getLabels();\r\n                        me.minIndex = 0;\r\n                        me.maxIndex = labels.length - 1;\r\n                        var findIndex;\r\n\r\n                        if (me.options.ticks.min !== undefined) {\r\n                            // user specified min value\r\n                            findIndex = labels.indexOf(me.options.ticks.min);\r\n                            me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\r\n                        }\r\n\r\n                        if (me.options.ticks.max !== undefined) {\r\n                            // user specified max value\r\n                            findIndex = labels.indexOf(me.options.ticks.max);\r\n                            me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\r\n                        }\r\n\r\n                        me.min = labels[me.minIndex];\r\n                        me.max = labels[me.maxIndex];\r\n                    },\r\n\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var labels = me.getLabels();\r\n                        // If we are viewing some subset of labels, slice the original array\r\n                        me.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\r\n                    },\r\n\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        var me = this;\r\n                        var data = me.chart.data;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        if (data.yLabels && !isHorizontal) {\r\n                            return me.getRightValue(data.datasets[datasetIndex].data[index]);\r\n                        }\r\n                        return me.ticks[index - me.minIndex];\r\n                    },\r\n\r\n                    // Used to get data value locations.  Value can either be an index or a numerical value\r\n                    getPixelForValue: function(value, index) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        // 1 is added because we need the length but we have the indexes\r\n                        var offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\r\n\r\n                        // If value is a data object, then index is the index in the data array,\r\n                        // not the index of the scale. We need to change that.\r\n                        var valueCategory;\r\n                        if (value !== undefined && value !== null) {\r\n                            valueCategory = me.isHorizontal() ? value.x : value.y;\r\n                        }\r\n                        if (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\r\n                            var labels = me.getLabels();\r\n                            value = valueCategory || value;\r\n                            var idx = labels.indexOf(value);\r\n                            index = idx !== -1 ? idx : index;\r\n                        }\r\n\r\n                        if (me.isHorizontal()) {\r\n                            var valueWidth = me.width / offsetAmt;\r\n                            var widthOffset = (valueWidth * (index - me.minIndex));\r\n\r\n                            if (offset) {\r\n                                widthOffset += (valueWidth / 2);\r\n                            }\r\n\r\n                            return me.left + Math.round(widthOffset);\r\n                        }\r\n                        var valueHeight = me.height / offsetAmt;\r\n                        var heightOffset = (valueHeight * (index - me.minIndex));\r\n\r\n                        if (offset) {\r\n                            heightOffset += (valueHeight / 2);\r\n                        }\r\n\r\n                        return me.top + Math.round(heightOffset);\r\n                    },\r\n                    getPixelForTick: function(index) {\r\n                        return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        var value;\r\n                        var offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\r\n                        var horz = me.isHorizontal();\r\n                        var valueDimension = (horz ? me.width : me.height) / offsetAmt;\r\n\r\n                        pixel -= horz ? me.left : me.top;\r\n\r\n                        if (offset) {\r\n                            pixel -= (valueDimension / 2);\r\n                        }\r\n\r\n                        if (pixel <= 0) {\r\n                            value = 0;\r\n                        } else {\r\n                            value = Math.round(pixel / valueDimension);\r\n                        }\r\n\r\n                        return value + me.minIndex;\r\n                    },\r\n                    getBasePixel: function() {\r\n                        return this.bottom;\r\n                    }\r\n                });\r\n\r\n                Chart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\r\n            };\r\n        }, {}], 45: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var Ticks = require(25);\r\n\r\n            module.exports = function(Chart) {\r\n                var defaultConfig = {\r\n                    position: 'left',\r\n                    ticks: {\r\n                        callback: Ticks.formatters.linear\r\n                    }\r\n                };\r\n\r\n                var LinearScale = Chart.LinearScaleBase.extend({\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var chart = me.chart;\r\n                        var data = chart.data;\r\n                        var datasets = data.datasets;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var DEFAULT_MIN = 0;\r\n                        var DEFAULT_MAX = 1;\r\n\r\n                        function IDMatches(meta) {\r\n                            return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\r\n                        }\r\n\r\n                        // First Calculate the range\r\n                        me.min = null;\r\n                        me.max = null;\r\n\r\n                        var hasStacks = opts.stacked;\r\n                        if (hasStacks === undefined) {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                if (hasStacks) {\r\n                                    return;\r\n                                }\r\n\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\r\n                                    meta.stack !== undefined) {\r\n                                    hasStacks = true;\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        if (opts.stacked || hasStacks) {\r\n                            var valuesPerStack = {};\r\n\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                var key = [\r\n                                    meta.type,\r\n                                    // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\r\n                                    ((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\r\n                                    meta.stack\r\n                                ].join('.');\r\n\r\n                                if (valuesPerStack[key] === undefined) {\r\n                                    valuesPerStack[key] = {\r\n                                        positiveValues: [],\r\n                                        negativeValues: []\r\n                                    };\r\n                                }\r\n\r\n                                // Store these per type\r\n                                var positiveValues = valuesPerStack[key].positiveValues;\r\n                                var negativeValues = valuesPerStack[key].negativeValues;\r\n\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        positiveValues[index] = positiveValues[index] || 0;\r\n                                        negativeValues[index] = negativeValues[index] || 0;\r\n\r\n                                        if (opts.relativePoints) {\r\n                                            positiveValues[index] = 100;\r\n                                        } else if (value < 0) {\r\n                                            negativeValues[index] += value;\r\n                                        } else {\r\n                                            positiveValues[index] += value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n\r\n                            helpers.each(valuesPerStack, function(valuesForType) {\r\n                                var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\r\n                                var minVal = helpers.min(values);\r\n                                var maxVal = helpers.max(values);\r\n                                me.min = me.min === null ? minVal : Math.min(me.min, minVal);\r\n                                me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\r\n                            });\r\n                        } else {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        if (me.min === null) {\r\n                                            me.min = value;\r\n                                        } else if (value < me.min) {\r\n                                            me.min = value;\r\n                                        }\r\n\r\n                                        if (me.max === null) {\r\n                                            me.max = value;\r\n                                        } else if (value > me.max) {\r\n                                            me.max = value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\r\n                        me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\r\n\r\n                        // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\r\n                        this.handleTickRangeOptions();\r\n                    },\r\n                    getTickLimit: function() {\r\n                        var maxTicks;\r\n                        var me = this;\r\n                        var tickOpts = me.options.ticks;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\r\n                        } else {\r\n                            // The factor of 2 used to scale the font size has been experimentally determined.\r\n                            var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\r\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\r\n                        }\r\n\r\n                        return maxTicks;\r\n                    },\r\n                    // Called after the ticks are built. We need\r\n                    handleDirectionalChanges: function() {\r\n                        if (!this.isHorizontal()) {\r\n                            // We are in a vertical orientation. The top value is the highest. So reverse the array\r\n                            this.ticks.reverse();\r\n                        }\r\n                    },\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n                    },\r\n                    // Utils\r\n                    getPixelForValue: function(value) {\r\n                        // This must be called after fit has been run so that\r\n                        // this.left, this.top, this.right, and this.bottom have been defined\r\n                        var me = this;\r\n                        var start = me.start;\r\n\r\n                        var rightValue = +me.getRightValue(value);\r\n                        var pixel;\r\n                        var range = me.end - start;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            pixel = me.left + (me.width / range * (rightValue - start));\r\n                        } else {\r\n                            pixel = me.bottom - (me.height / range * (rightValue - start));\r\n                        }\r\n                        return pixel;\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var innerDimension = isHorizontal ? me.width : me.height;\r\n                        var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\r\n                        return me.start + ((me.end - me.start) * offset);\r\n                    },\r\n                    getPixelForTick: function(index) {\r\n                        return this.getPixelForValue(this.ticksAsNumbers[index]);\r\n                    }\r\n                });\r\n                Chart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\r\n            };\r\n        }, { \"16\": 16, \"25\": 25, \"36\": 36 }], 46: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Generate a set of linear ticks\r\n             * @param generationOptions the options used to generate the ticks\r\n             * @param dataRange the range of the data\r\n             * @returns {Array<Number>} array of tick values\r\n             */\r\n            function generateTicks(generationOptions, dataRange) {\r\n                var ticks = [];\r\n                // To get a \"nice\" value for the tick spacing, we will use the appropriately named\r\n                // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\r\n                // for details.\r\n\r\n                var spacing;\r\n                if (generationOptions.stepSize && generationOptions.stepSize > 0) {\r\n                    spacing = generationOptions.stepSize;\r\n                } else {\r\n                    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\r\n                    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\r\n                }\r\n                var niceMin = Math.floor(dataRange.min / spacing) * spacing;\r\n                var niceMax = Math.ceil(dataRange.max / spacing) * spacing;\r\n\r\n                // If min, max and stepSize is set and they make an evenly spaced scale use it.\r\n                if (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\r\n                    // If very close to our whole number, use it.\r\n                    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\r\n                        niceMin = generationOptions.min;\r\n                        niceMax = generationOptions.max;\r\n                    }\r\n                }\r\n\r\n                var numSpaces = (niceMax - niceMin) / spacing;\r\n                // If very close to our rounded value, use it.\r\n                if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n                    numSpaces = Math.round(numSpaces);\r\n                } else {\r\n                    numSpaces = Math.ceil(numSpaces);\r\n                }\r\n\r\n                var precision = 1;\r\n                if (spacing < 1) {\r\n                    precision = Math.pow(10, spacing.toString().length - 2);\r\n                    niceMin = Math.round(niceMin * precision) / precision;\r\n                    niceMax = Math.round(niceMax * precision) / precision;\r\n                }\r\n                ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\r\n                for (var j = 1; j < numSpaces; ++j) {\r\n                    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\r\n                }\r\n                ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\r\n\r\n                return ticks;\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                var noop = helpers.noop;\r\n\r\n                Chart.LinearScaleBase = Chart.Scale.extend({\r\n                    getRightValue: function(value) {\r\n                        if (typeof value === 'string') {\r\n                            return +value;\r\n                        }\r\n                        return Chart.Scale.prototype.getRightValue.call(this, value);\r\n                    },\r\n\r\n                    handleTickRangeOptions: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\r\n                        // do nothing since that would make the chart weird. If the user really wants a weird chart\r\n                        // axis, they can manually override it\r\n                        if (tickOpts.beginAtZero) {\r\n                            var minSign = helpers.sign(me.min);\r\n                            var maxSign = helpers.sign(me.max);\r\n\r\n                            if (minSign < 0 && maxSign < 0) {\r\n                                // move the top up to 0\r\n                                me.max = 0;\r\n                            } else if (minSign > 0 && maxSign > 0) {\r\n                                // move the bottom down to 0\r\n                                me.min = 0;\r\n                            }\r\n                        }\r\n\r\n                        var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\r\n                        var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\r\n\r\n                        if (tickOpts.min !== undefined) {\r\n                            me.min = tickOpts.min;\r\n                        } else if (tickOpts.suggestedMin !== undefined) {\r\n                            if (me.min === null) {\r\n                                me.min = tickOpts.suggestedMin;\r\n                            } else {\r\n                                me.min = Math.min(me.min, tickOpts.suggestedMin);\r\n                            }\r\n                        }\r\n\r\n                        if (tickOpts.max !== undefined) {\r\n                            me.max = tickOpts.max;\r\n                        } else if (tickOpts.suggestedMax !== undefined) {\r\n                            if (me.max === null) {\r\n                                me.max = tickOpts.suggestedMax;\r\n                            } else {\r\n                                me.max = Math.max(me.max, tickOpts.suggestedMax);\r\n                            }\r\n                        }\r\n\r\n                        if (setMin !== setMax) {\r\n                            // We set the min or the max but not both.\r\n                            // So ensure that our range is good\r\n                            // Inverted or 0 length range can happen when\r\n                            // ticks.min is set, and no datasets are visible\r\n                            if (me.min >= me.max) {\r\n                                if (setMin) {\r\n                                    me.max = me.min + 1;\r\n                                } else {\r\n                                    me.min = me.max - 1;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (me.min === me.max) {\r\n                            me.max++;\r\n\r\n                            if (!tickOpts.beginAtZero) {\r\n                                me.min--;\r\n                            }\r\n                        }\r\n                    },\r\n                    getTickLimit: noop,\r\n                    handleDirectionalChanges: noop,\r\n\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        // Figure out what the max number of ticks we can support it is based on the size of\r\n                        // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n                        // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n                        // the graph. Make sure we always have at least 2 ticks\r\n                        var maxTicks = me.getTickLimit();\r\n                        maxTicks = Math.max(2, maxTicks);\r\n\r\n                        var numericGeneratorOptions = {\r\n                            maxTicks: maxTicks,\r\n                            min: tickOpts.min,\r\n                            max: tickOpts.max,\r\n                            stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\r\n                        };\r\n                        var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\r\n\r\n                        me.handleDirectionalChanges();\r\n\r\n                        // At this point, we need to update our max and min given the tick values since we have expanded the\r\n                        // range of the scale\r\n                        me.max = helpers.max(ticks);\r\n                        me.min = helpers.min(ticks);\r\n\r\n                        if (tickOpts.reverse) {\r\n                            ticks.reverse();\r\n\r\n                            me.start = me.max;\r\n                            me.end = me.min;\r\n                        } else {\r\n                            me.start = me.min;\r\n                            me.end = me.max;\r\n                        }\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        me.ticksAsNumbers = me.ticks.slice();\r\n                        me.zeroLineIndex = me.ticks.indexOf(0);\r\n\r\n                        Chart.Scale.prototype.convertTicksToLabels.call(me);\r\n                    }\r\n                });\r\n            };\r\n        }, { \"36\": 36 }]\r\n    }, {}, [6])(6)\r\n});\r\n","/*!\r\n * Allowing lists to dynamically expand and collapse.\r\n * Created by Stephen Morley - http://code.stephenmorley.org/ - and released under the terms of the CC0 1.0 Universal legal code:\r\n * http://creativecommons.org/publicdomain/zero/1.0/legalcode\r\n *\r\n * Modified to work with bootstrap/fontAwesome and incorporate cascading checkboxes.\r\n */\r\n(function(root, factory) {\r\n    root.CollapsibleList = factory(root.$);\r\n})(this, function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare CollapsibleList class.\r\n     * @param {Node} element - Node to make collapsible.\r\n     */\r\n    var CollapsibleList = function(element) {\r\n        this.container = $.get(element);\r\n        this.init();\r\n    };\r\n\r\n    CollapsibleList.prototype = {\r\n        init: function() {\r\n            var node = this.container;\r\n            // loop over the list items within this node\r\n            var lis = $.getAll('li', node);\r\n            for (var i = 0; i < lis.length; i++) {\r\n                // prevent text from being selected unintentionally\r\n                $.on(lis[i], 'mousedown', function(e) { e.preventDefault(); }, false);\r\n                // add the click listener\r\n                $.on(lis[i], 'click', this.createClickListener(lis[i]), false);\r\n                // close the unordered lists within this list item\r\n                this.toggle(lis[i]);\r\n\r\n                // check any parent items if this item is checked\r\n                node = $.get('input[type=\"checkbox\"]', lis[i]);\r\n                if (node.checked) {\r\n                    var p = node;\r\n                    while (this.container !== (p = p.parentNode)) {\r\n                        if (p.nodeName === 'LI') {\r\n                            var parent = p.parentNode.parentNode;\r\n                            if (parent.nodeName === 'LI') {\r\n                                var pi = $.get('input[type=\"checkbox\"]', parent);\r\n                                if (pi && pi !== node) {\r\n                                    pi.checked = true;\r\n                                }\r\n                                this.toggle(parent, true);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Toggles the display status of any unordered list elements within the specified node.\r\n         * @param {Node} node - Node containing the unordered list elements.\r\n         * @returns {Function} Click handler function.\r\n         */\r\n        createClickListener: function(node) {\r\n            var self = this;\r\n            return function(e) {\r\n                if (!e) {\r\n                    return;\r\n                }\r\n\r\n                // find the list item containing the target of the event\r\n                var elem = $.coalesce(e.target, e.srcElement);\r\n\r\n                // handle checking/unchecking buttons\r\n                if (elem.nodeName === 'INPUT') {\r\n                    var checked = elem.checked;\r\n\r\n                    // first toggle the check for all of the children\r\n                    var inputs = $.getAll('ul input[type=\"checkbox\"]', $.closest('li', elem));\r\n                    i = inputs.length;\r\n                    while (i--) {\r\n                        inputs[i].checked = checked;\r\n                    }\r\n\r\n                    // then check all parents. if any of the children of a checkbox are checked, then it should be checked.\r\n                    var checkedRelative = false;\r\n                    var p = elem;\r\n                    while (self.container !== (p = p.parentNode)) {\r\n                        if (p.nodeName === 'LI') {\r\n                            // see if anybody else on this node level is checked\r\n                            var relatives = $.getAll('input[type=\"checkbox\"]', p.parentNode);\r\n                            var i = relatives.length;\r\n                            checkedRelative = false;\r\n                            while (i--) {\r\n                                if (relatives[i].checked) {\r\n                                    checkedRelative = true;\r\n                                }\r\n                            }\r\n\r\n                            if (p.parentNode.parentNode !== self.container) {\r\n                                var pi = $.get('input[type=\"checkbox\"]', p.parentNode.parentNode);\r\n                                if (pi && pi !== elem) {\r\n                                    pi.checked = checkedRelative || checked;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                if ($.hasClass(elem, 'form-group') || $.hasClass(elem, 'form-icon') || (elem.parentNode && $.hasClass(elem.parentNode, 'form-group'))) {\r\n                    // prevent toggling tree when checking/unchecking an element\r\n                    return;\r\n                }\r\n\r\n                // now handle the tree itself\r\n                while (elem.nodeName !== 'LI') {\r\n                    elem = elem.parentNode;\r\n                }\r\n\r\n                // toggle the state of the node if it was the target of the event\r\n                if (elem === node) {\r\n                    self.toggle(node);\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Opens or closes the unordered list elements directly within the specified node.\r\n         * @param {Node} node - Node containing the unordered list elements.\r\n         * @param {bool} forceOpen - Set to true to force the node to be open regardless of current status.\r\n         */\r\n        toggle: function(node, forceOpen) {\r\n            // determine whether to open or close the unordered lists\r\n            var open = $.coalesce(forceOpen, $.hasClass(node, 'collapsible-list-closed'));\r\n\r\n            // loop over the unordered list elements with the node\r\n            var uls = $.getAll('ul', node);\r\n            for (var i = 0; i < uls.length; i++) {\r\n                // find the parent list item of this unordered list\r\n                var li = uls[i];\r\n                while (li.nodeName !== 'LI') {\r\n                    li = li.parentNode;\r\n                }\r\n\r\n                // style the unordered list if it is directly within this node\r\n                if (li === node) {\r\n                    uls[i].style.display = open ? 'block' : 'none';\r\n                }\r\n            }\r\n\r\n            // remove the current class from the node\r\n            $.removeClass(node, 'collapsible-list-' + (open ? 'closed' : 'open'));\r\n\r\n            // if the node contains unordered lists, set its class\r\n            if (uls.length) {\r\n                $.addClass(node, 'collapsible-list-' + (open ? 'open' : 'closed'));\r\n            }\r\n        }\r\n    };\r\n\r\n    return CollapsibleList;\r\n});\r\n","/*!\r\n * ColorPicker mithril component.\r\n */\r\n(function(root, factory) {\r\n    root.ColorPicker = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    var _keys = { ESC: 27 };\r\n\r\n    var ColorPicker = {\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            this.value = attrs.value;\r\n            if (this.value && this.value.substring(0, 1) !== '#') {\r\n                this.value = '#' + this.value;\r\n            }\r\n            this.color = $.colors.hex2rgb(this.value);\r\n            this.opts = {\r\n                name: attrs.name,\r\n                active: false,\r\n                disabled: attrs.disabled,\r\n                onSelect: attrs.onSelect,\r\n                container: null\r\n            };\r\n        },\r\n\r\n        oncreate: function(vnode) {\r\n            this.opts.container = vnode.dom;\r\n        },\r\n\r\n        onupdate: function(vnode) {\r\n            if (vnode.attrs) {\r\n                this.opts.name = vnode.attrs.name;\r\n            }\r\n        },\r\n\r\n        onKeyDown: function(e) {\r\n            if (this.opts.disabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.opts.active && e.keyCode === _keys.ESC) {\r\n                this.close();\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n        },\r\n\r\n        close: function() {\r\n            this.opts.active = false;\r\n            var trigger = $.get('.colorpicker-trigger', this.opts.container);\r\n            if (trigger) {\r\n                trigger.focus();\r\n            }\r\n        },\r\n\r\n        showEditor: function() {\r\n            if (this.opts.disabled) {\r\n                return;\r\n            }\r\n            this.opts.active = !this.opts.active;\r\n        },\r\n\r\n        setRed: function(value) {\r\n            this.color.r = value * 1;\r\n            this.setColor();\r\n        },\r\n\r\n        setGreen: function(value) {\r\n            this.color.g = value * 1;\r\n            this.setColor();\r\n        },\r\n\r\n        setBlue: function(value) {\r\n            this.color.b = value * 1;\r\n            this.setColor();\r\n        },\r\n\r\n        setColor: function() {\r\n            this.value = $.colors.rgb2hex(this.color);\r\n            if (this.opts.onSelect) {\r\n                this.opts.onSelect(this.value);\r\n            }\r\n        },\r\n\r\n        view: function() {\r\n            return m('.mithril-colorpicker', {\r\n                class: this.opts.active ? 'active' : '', onkeydown: this.onKeyDown.bind(this)\r\n            }, [m('button.btn.btn-secondary.colorpicker-trigger', {\r\n                type: 'button', role: 'button', disabled: this.opts.disabled,\r\n                onclick: this.showEditor.bind(this),\r\n                style: 'background-color: ' + this.value\r\n            }, [m.trust('&nbsp;'), m('i.dash.colorpicker-indicator', { class: this.opts.active ? 'dash-sort-up' : 'dash-sort-down' })]),\r\n            this.opts.active && m('.editor',\r\n                m('div', [\r\n                    m('input.range-red', { type: 'range', min: 0, max: 255, oninput: m.withAttr('value', this.setRed.bind(this)), value: this.color.r }),\r\n                    m('input.range-green', { type: 'range', min: 0, max: 255, oninput: m.withAttr('value', this.setGreen.bind(this)), value: this.color.g }),\r\n                    m('input.range-blue', { type: 'range', min: 0, max: 255, oninput: m.withAttr('value', this.setBlue.bind(this)), value: this.color.b })\r\n                ])\r\n            ),\r\n            m('input', { type: 'hidden', name: this.opts.name, value: this.value })]);\r\n        }\r\n    };\r\n\r\n    return ColorPicker;\r\n});\r\n","/*!\r\n * Wraps functionality needed for creating charts using Chart.js.\r\n */\r\n(function(root, factory) {\r\n    root.DashChart = factory(root.$, root.Alertify, root.Chart);\r\n})(this, function($, Alertify, Chart) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare DashChart class.\r\n     * @param {Node} content - DOM node that contains the chart.\r\n     * @param {bool} showLegend - Show or hide the chart legend.\r\n     * @param {Function} dataFn - Function to call if after loading data. Runs before other functions.\r\n     * @param {Function} errorFn - Function to call if an error occurs loading data.\r\n     * @param {Function} toggleExportFn - Function to enable/disable export.\r\n     */\r\n    var DashChart = function(content, showLegend, dataFn, errorFn, toggleExportFn) {\r\n        this.content = content;\r\n        this.url = content.getAttribute('data-url');\r\n        this.canvas = $.get('.chart-canvas', content);\r\n        this.showLegend = $.coalesce(showLegend, true);\r\n        this.dataFn = dataFn;\r\n        this.errorFn = errorFn;\r\n        this.toggleExportFn = toggleExportFn;\r\n        this.chart = null;\r\n        this.events = { resize: $.debounce(this.resize.bind(this), 50) };\r\n        $.on(window, 'resize', this.events.resize);\r\n        this.run();\r\n    };\r\n\r\n    DashChart.prototype = {\r\n        /**\r\n         * Generate a random number within range.\r\n         * @param {number[]} range - Min and max value.\r\n         * @returns {number} Random number.\r\n         */\r\n        randomWithin: function(range) {\r\n            return Math.floor(range[0] + Math.random() * (range[1] + 1 - range[0]));\r\n        },\r\n\r\n        /**\r\n         * Generates a random color and a lighter partner color.\r\n         * @returns {string[]} Color codes.\r\n         */\r\n        randomColor: function() {\r\n            var hsl = [this.randomWithin([0, 360]), this.randomWithin([50, 100]), this.randomWithin([30, 80])];\r\n            return [\r\n                'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%, 1)',\r\n                'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%, .2)'\r\n            ];\r\n        },\r\n\r\n        /**\r\n         * Generates an array of random colors.\r\n         * @param {number} cnt - Number of colors to generate.\r\n         * @returns {string[]} Array of color codes.\r\n         */\r\n        randomColors: function(cnt) {\r\n            var result = new Array(cnt);\r\n            for (var i = 0; i < cnt; i++) {\r\n                result[i] = this.randomColor()[0];\r\n            }\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Parse a hex color into a hsla color and a lighter partner color.\r\n         * @param {string} hex - Hex color code with leading '#'.\r\n         * @returns {string[]} Color codes.\r\n         */\r\n        parseColor: function(hex) {\r\n            if (!hex) {\r\n                return this.randomColor();\r\n            }\r\n            var hsl = $.colors.rgb2hsl($.colors.hex2rgb(hex));\r\n            return [\r\n                'hsla(' + (hsl[0] * 360).toFixed(0) + ',' + (hsl[1] * 100).toFixed(0) + '%,' + (hsl[2] * 100).toFixed(0) + '%, 1)',\r\n                'hsla(' + (hsl[0] * 360).toFixed(0) + ',' + (hsl[1] * 100).toFixed(0) + '%,' + (hsl[2] * 100).toFixed(0) + '%, .2)'\r\n            ];\r\n        },\r\n\r\n        run: function() {\r\n            var self = this;\r\n\r\n            $.show($.get('.chart-spinner', self.content));\r\n            $.hide($.get('.chart-error', self.content));\r\n            $.hide(self.canvas);\r\n            if (self.toggleExportFn) {\r\n                self.toggleExportFn(false);\r\n            }\r\n\r\n            $.ajax({\r\n                method: 'POST',\r\n                url: self.url,\r\n                block: false\r\n            }, function(data) {\r\n                if ($.isFunction(self.dataFn)) {\r\n                    if (!self.dataFn(data)) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                var ranges = $.isArray(data.ranges) ? data.ranges : [data];\r\n                if (!ranges.some(function(x) { return x.rows && x.rows.length; })) {\r\n                    $.hide($.get('.chart-spinner', self.content));\r\n                    Alertify.error($.resx('chart.noData'));\r\n                    return;\r\n                }\r\n\r\n                $.hide($.get('.chart-spinner', self.content));\r\n                $.hide($.get('.chart-error', self.content));\r\n                $.show(self.canvas);\r\n                if (self.toggleExportFn) {\r\n                    self.toggleExportFn(true);\r\n                }\r\n\r\n                if (self.chart) {\r\n                    // this code is used for refreshing dashboard chart data, but won't be used on the chart dialog\r\n                    ranges.forEach(function(x, i) {\r\n                        self.chart.data.datasets[i].data = ranges[i].rows;\r\n                        self.chart.data.datasets[i].label = ranges[i].yTitle;\r\n                    });\r\n                    self.chart.data.labels = ranges[0].labels;\r\n                    self.chart.update();\r\n                } else {\r\n                    var scales = {};\r\n                    var tooltips = { callbacks: {} };\r\n                    if (ranges[0].xType === 'currency') {\r\n                        var currencyFormat = $.accounting.parseFormat(ranges[0].currencyFormat);\r\n                        scales.xAxes = [{\r\n                            ticks: {\r\n                                callback: function(value) {\r\n                                    return $.accounting.formatMoney(value, currencyFormat);\r\n                                }\r\n                            }\r\n                        }];\r\n                        tooltips.callbacks.title = function(tooltipItems, data) {\r\n                            var title = '';\r\n                            if (tooltipItems.length > 0) {\r\n                                if (tooltipItems[0].xLabel) {\r\n                                    title = tooltipItems[0].xLabel;\r\n                                } else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n                                    title = data.labels[tooltipItems[0].index];\r\n                                }\r\n                                title = $.accounting.formatMoney(title, currencyFormat);\r\n                            }\r\n                            return title;\r\n                        };\r\n                    } else if (ranges[0].xType === 'date') {\r\n                        var dateFormat = ranges[0].dateFormat;\r\n                        scales.xAxes = [{\r\n                            ticks: {\r\n                                callback: function(value) {\r\n                                    return $.fecha.format(new Date(value), dateFormat);\r\n                                }\r\n                            }\r\n                        }];\r\n                        tooltips.callbacks.title = function(tooltipItems, data) {\r\n                            var title = '';\r\n                            if (tooltipItems.length > 0) {\r\n                                if (tooltipItems[0].xLabel) {\r\n                                    title = tooltipItems[0].xLabel;\r\n                                } else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n                                    title = data.labels[tooltipItems[0].index];\r\n                                }\r\n                                title = $.fecha.format(new Date(title), dateFormat);\r\n                            }\r\n                            return title;\r\n                        };\r\n                    }\r\n\r\n                    var chartType = data.type.toLowerCase();\r\n                    var isRadial = chartType === 'pie' || chartType === 'doughnut';\r\n                    var datasets = [];\r\n                    scales.yAxes = [];\r\n                    ranges.forEach(function(x, i) {\r\n                        var color = self.parseColor(x.color);\r\n                        datasets.push({\r\n                            backgroundColor: color[0],\r\n                            borderColor: 'rgb(255, 255, 255)',\r\n                            borderWidth: 2,\r\n                            data: x.rows,\r\n                            label: x.yTitle,\r\n                            yAxisID: 'y-axis-' + i\r\n                        });\r\n\r\n                        var ticks = {};\r\n                        if (x.yType === 'currency') {\r\n                            var currencyFormat = $.accounting.parseFormat(x.currencyFormat);\r\n                            ticks.callback = function(value) {\r\n                                return $.accounting.formatMoney(value, currencyFormat);\r\n                            };\r\n                            tooltips.callbacks.label = function(item) {\r\n                                return $.accounting.formatMoney(item.yLabel, currencyFormat);\r\n                            };\r\n                        } else if (x.yType === 'date') {\r\n                            var dateFormat = x.dateFormat;\r\n                            ticks.callback = function(value) {\r\n                                return $.fecha.format(new Date(value), dateFormat);\r\n                            };\r\n                            tooltips.callbacks.label = function(item) {\r\n                                return $.fecha.format(new Date(item.yLabel), dateFormat);\r\n                            };\r\n                        }\r\n\r\n                        if (!isRadial) {\r\n                            scales.yAxes.push({\r\n                                id: 'y-axis-' + i,\r\n                                position: i === 0 ? 'left' : 'right',\r\n                                ticks: ticks,\r\n                                gridLines: {\r\n                                    color: color[1]\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    var chartData = {\r\n                        type: chartType === 'horizontalbar' ? 'horizontalBar' : chartType,\r\n                        options: {\r\n                            scales: isRadial ? null : scales,\r\n                            tooltips: tooltips,\r\n                            legend: { display: self.showLegend }\r\n                        },\r\n                        data: {\r\n                            labels: ranges[0].labels,\r\n                            datasets: datasets\r\n                        }\r\n                    };\r\n\r\n                    if (isRadial) {\r\n                        chartData.data.datasets[0].backgroundColor = self.randomColors(ranges[0].rows.length);\r\n                    }\r\n\r\n                    self.chart = new Chart(self.canvas.getContext('2d'), chartData);\r\n                }\r\n            }, function() {\r\n                if ($.isFunction(self.errorFn)) {\r\n                    if (!self.errorFn()) {\r\n                        return;\r\n                    }\r\n                }\r\n                $.hide($.get('.chart-spinner', self.content));\r\n                $.show($.get('.chart-error', self.content));\r\n                if (self.toggleExportFn) {\r\n                    self.toggleExportFn(false);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @todo Eventually this may not be necessary, but responsive functionality for Chart.js does not seem to work correctly.\r\n         */\r\n        resize: function() {\r\n            if (this.chart) {\r\n                this.chart.resize();\r\n            }\r\n        },\r\n\r\n        destroy: function() {\r\n            $.destroy(this.chart);\r\n            if (this.events) {\r\n                $.off(window, 'resize', this.events.resize);\r\n            }\r\n        }\r\n    };\r\n\r\n    return DashChart;\r\n});\r\n","/*!\r\n * DatePicker mithril component.\r\n * Modified from https://github.com/CreaturesInUnitards/mithril-datepicker\r\n */\r\n(function(root, factory) {\r\n    root.DatePicker = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    var _keys = {\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        SPACE: 32\r\n    };\r\n\r\n    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    var hours = [];\r\n    var minutes = [];\r\n    var i = 0;\r\n    while (hours.push(i++) < 24) { /* nothing to do here */ }\r\n    i = 0;\r\n    while (minutes.push(i++) < 60) { /* nothing to do here */ }\r\n    var prevNextTitles = ['1 Mo', '1 Yr', '10 Yr'];\r\n    var weekStart = 0;\r\n    var locale = 'en-us';\r\n    var formatOptions = null;\r\n    var defaultFormat = 'YYYY-MM-DD HH:mm';\r\n\r\n    function chooseDate(props, e) {\r\n        var box = e.target;\r\n        var selectedDate = parseInt(box.textContent);\r\n        var dateObj = props.date;\r\n        if ($.hasClass(box, 'other-scope')) {\r\n            dateObj.setFullYear(dateObj.getFullYear(), dateObj.getMonth() + (selectedDate > 6 ? -1 : 1), selectedDate);\r\n        } else {\r\n            dateObj.setDate(selectedDate);\r\n        }\r\n    }\r\n\r\n    function dismissAndCommit(props, e) {\r\n        if (e) {\r\n            if (e.target && $.hasClass('number', e.target)) {\r\n                e.preventDefault();\r\n                chooseDate(props, e);\r\n            } else {\r\n                var parent = e.relatedTarget && $.closest('.mithril-date-picker-container', e.relatedTarget);\r\n                if (!parent) {\r\n                    e.preventDefault();\r\n                    props.view = 0;\r\n                    props.active = false;\r\n                }\r\n            }\r\n        }\r\n        // @todo this probably needs more testing to make sure it triggers correctly\r\n        if (props.onchange) {\r\n            props.onchange(props.date);\r\n        }\r\n    }\r\n\r\n    function checkKey(props, e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (e.keyCode === _keys.ESC) {\r\n            dismissAndCommit(props, e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function prevNext(props, delta) {\r\n        var newDate = new Date(props.date);\r\n        switch (props.view) {\r\n            case 0:\r\n                newDate.setMonth(newDate.getMonth() + delta);\r\n                break;\r\n            case 1:\r\n                newDate.setFullYear(newDate.getFullYear() + delta);\r\n                break;\r\n            default:\r\n                newDate.setFullYear(newDate.getFullYear() + (delta * 10));\r\n        }\r\n        props.date = pushToLastDay(props.date, newDate);\r\n    }\r\n\r\n    function adjustedProps(date, delta) {\r\n        var month = date.getMonth() + delta, year = date.getFullYear();\r\n        var over = month > 11, under = month < 0;\r\n        return {\r\n            month: over ? 0 : under ? 11 : month,\r\n            year: over ? year + 1 : under ? year - 1 : year\r\n        };\r\n    }\r\n\r\n    function lastDateInMonth(date, delta) {\r\n        var obj = adjustedProps(date, delta);\r\n        if ([0, 2, 4, 6, 7, 9, 11].indexOf(obj.month) > -1) {\r\n            return 31; // array of 31-day props.months\r\n        }\r\n        if (obj.month === 1) { // February\r\n            if (!(obj.year % 400)) {\r\n                return 29;\r\n            }\r\n            if (!(obj.year % 100)) {\r\n                return 28;\r\n            }\r\n            return (obj.year % 4) ? 28 : 29;\r\n        }\r\n        return 30;\r\n    }\r\n\r\n    function pushToLastDay(oldDate, newDate) {\r\n        if (oldDate.getDate() !== newDate.getDate()) {\r\n            newDate.setMonth(newDate.getMonth() - 1, lastDateInMonth(newDate, -1));\r\n        }\r\n        return newDate;\r\n    }\r\n\r\n    function stringsForLocale(locale) {\r\n        var date = new Date('jan 1 2017'), _months = [], _days = []; // 1/1/2017 was month:0 and weekday:0, so perfect\r\n        while (_days.length < 7) {\r\n            _days.push(date.toLocaleDateString(locale, { weekday: 'long' }));\r\n            date.setDate(date.getDate() + 1);\r\n        }\r\n        while (_months.length < 12) {\r\n            _months.push(date.toLocaleDateString(locale, { month: 'long' }));\r\n            date.setMonth(date.getMonth() + 1);\r\n        }\r\n        return { days: _days, months: _months };\r\n    }\r\n\r\n    function wrapAround(idx, array) {\r\n        var len = array.length;\r\n        var n = idx >= len ? idx - len : idx;\r\n        return array[n];\r\n    }\r\n\r\n    function daysFromLastMonth(props) {\r\n        var month = props.date.getMonth(), year = props.date.getFullYear();\r\n        var firstDay = (new Date(year, month, 1)).getDay() - props.weekStart;\r\n        if (firstDay < 0) firstDay += 7;\r\n        var array = [];\r\n        var lastDate = lastDateInMonth(props.date, -1);\r\n        var offsetStart = lastDate - firstDay + 1;\r\n        for (var i = offsetStart; i <= lastDate; i++) {\r\n            array.push(i);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function daysFromThisMonth(props) {\r\n        var max = lastDateInMonth(props.date, 0);\r\n        var array = [];\r\n        for (var i = 1; i <= max; i++) {\r\n            array.push(i);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function daysFromNextMonth(prev, these) {\r\n        var soFar = prev.concat(these);\r\n        var mod = soFar.length % 7;\r\n        var array = [];\r\n        if (mod > 0) {\r\n            var n = 7 - mod;\r\n            for (var i = 1; i <= n; i++) {\r\n                array.push(i);\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function defaultDate() {\r\n        var now = new Date();\r\n        now.setHours(0, 0, 0, 0);\r\n        return now;\r\n    }\r\n\r\n    function yearsForDecade(date) {\r\n        var year = date.getFullYear();\r\n        var start = year - (year % 10);\r\n        var array = [];\r\n        for (var i = start; i < start + 10; i++) {\r\n            array.push(i);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function classForBox(a, b) {\r\n        return a === b ? 'chosen' : '';\r\n    }\r\n\r\n    var Header = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var date = props.date;\r\n            var theseMonths = props.months || months;\r\n            return m('.header',\r\n                m('button.header-button.prev', { onclick: prevNext.bind(null, props, -1) }, [\r\n                    m('i.dash.dash-to-start'),\r\n                    prevNextTitles[props.view]\r\n                ]),\r\n                m('button.header-button.segment', { onclick: function() { props.view = 0; } }, date.getDate()),\r\n                m('button.header-button.segment', { onclick: function() { props.view = 1; } }, theseMonths[date.getMonth()].substr(0, 3)),\r\n                m('button.header-button.segment', { onclick: function() { props.view = 2; } }, date.getFullYear()),\r\n                m('button.header-button.next', { onclick: prevNext.bind(null, props, 1) }, [\r\n                    prevNextTitles[props.view],\r\n                    m('i.dash.dash-to-end')\r\n                ])\r\n            );\r\n        }\r\n    };\r\n\r\n    var MonthView = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var prevDates = daysFromLastMonth(props);\r\n            var theseDates = daysFromThisMonth(props);\r\n            var nextDates = daysFromNextMonth(prevDates, theseDates);\r\n            var theseWeekdays = props.days || days;\r\n            return m('.calendar',\r\n                m('.weekdays', theseWeekdays.map(function(_, idx) {\r\n                    var day = wrapAround(idx + props.weekStart, theseWeekdays);\r\n                    return m('.day.dummy', day.substring(0, 2));\r\n                })),\r\n                m('.weekdays', {\r\n                    onclick: function(e) {\r\n                        chooseDate(props, e);\r\n                    }\r\n                }, prevDates.map(function(date) {\r\n                    return m('button.day.other-scope', date);\r\n                }), theseDates.map(function(date) {\r\n                    return m('button.day', { class: classForBox(props.date.getDate(), date) }, m('.number', date));\r\n                }), nextDates.map(function(date) {\r\n                    return m('button.day.other-scope', date);\r\n                })),\r\n                m('.time',\r\n                    m('select.form-select', {\r\n                        value: props.date.getHours(), onchange: function(e) {\r\n                            props.date.setHours(e.target.value);\r\n                            props.date.setHours(e.target.value);\r\n                            if (props.onchange) {\r\n                                props.onchange(props.date);\r\n                            }\r\n                        }\r\n                    }, hours.map(function(x) {\r\n                        return m('option', { value: x }, ('00' + x).slice(-2));\r\n                    })),\r\n                    m('select.form-select', {\r\n                        value: props.date.getMinutes(), onchange: function(e) {\r\n                            props.date.setMinutes(e.target.value);\r\n                            props.date.setMinutes(e.target.value);\r\n                            if (props.onchange) {\r\n                                props.onchange(props.date);\r\n                            }\r\n                        }\r\n                    }, minutes.map(function(x) {\r\n                        return m('option', { value: x }, ('00' + x).slice(-2));\r\n                    }))\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var YearView = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var theseMonths = props.months || months;\r\n            return m('.calendar',\r\n                m('.months',\r\n                    theseMonths.map(function(month, idx) {\r\n                        return m('button.month', {\r\n                            class: classForBox(props.date.getMonth(), idx), onclick: function() {\r\n                                var newDate = new Date(props.date);\r\n                                newDate.setMonth(idx);\r\n                                props.date = pushToLastDay(props.date, newDate);\r\n                                props.view = 0;\r\n                            }\r\n                        }, m('.number', month));\r\n                    })\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var DecadeView = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var decade = yearsForDecade(props.date);\r\n            return m('.calendar',\r\n                m('.years',\r\n                    decade.map(function(year) {\r\n                        return m('button.year', {\r\n                            class: classForBox(props.date.getFullYear(), year), onclick: function() {\r\n                                var newDate = new Date(props.date);\r\n                                newDate.setFullYear(year);\r\n                                props.date = pushToLastDay(props.date, newDate);\r\n                                props.view = 1;\r\n                            }\r\n                        }, m('.number', year));\r\n                    })\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var Editor = {\r\n        oncreate: function(vnode) {\r\n            requestAnimationFrame(function() {\r\n                vnode.dom.classList.add('active');\r\n            });\r\n        },\r\n        onbeforeremove: function(vnode) {\r\n            vnode.dom.classList.remove('active');\r\n            return new Promise(function(done) {\r\n                setTimeout(done, 200);\r\n            });\r\n        },\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            return m('.editor', { onkeydown: checkKey.bind(null, props) },\r\n                m(Header, { props: props }),\r\n                m('.sled', { class: 'p' + props.view },\r\n                    m(MonthView, { props: props }),\r\n                    m(YearView, { props: props }),\r\n                    m(DecadeView, { props: props })\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var DatePicker = {\r\n        localize: function(loc) {\r\n            if (loc) {\r\n                prevNextTitles = loc.prevNextTitles || prevNextTitles;\r\n                locale = loc.locale || locale;\r\n                formatOptions = loc.formatOptions || formatOptions;\r\n                weekStart = $.isNumber(loc.weekStart) ? loc.weekStart : weekStart;\r\n                var strings = stringsForLocale(locale);\r\n                days = strings.days;\r\n                months = strings.months;\r\n            }\r\n        },\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            var date = new Date(attrs.date || defaultDate());\r\n            if (!attrs.date) {\r\n                attrs.onchange(date);\r\n            }\r\n            var props = {\r\n                date: date,\r\n                format: attrs.format || defaultFormat,\r\n                name: attrs.name,\r\n                active: false,\r\n                view: 0,\r\n                required: attrs.required,\r\n                disabled: attrs.disabled,\r\n                onchange: attrs.onchange,\r\n                class: attrs.class\r\n            };\r\n\r\n            ['prevNextTitles', 'locale', 'formatOptions'].forEach(function(prop) {\r\n                props[prop] = attrs[prop] || prop;\r\n            });\r\n            props.weekStart = $.isNumber(attrs.weekStart) ? attrs.weekStart : weekStart;\r\n\r\n            if (attrs.locale && attrs.locale !== locale) {\r\n                var strings = stringsForLocale(props.locale);\r\n                props.days = strings.days;\r\n                props.months = strings.months;\r\n            }\r\n\r\n            vnode.state.props = props;\r\n        },\r\n        onbeforeupdate: function(vnode) {\r\n            vnode.state.props.class = vnode.attrs.class;\r\n        },\r\n        onupdate: function(vnode) {\r\n            var chosen = $.get('.chosen', vnode.dom);\r\n            if (chosen) {\r\n                chosen.focus();\r\n            }\r\n        },\r\n        showEditor: function(props, e) {\r\n            if (e && e instanceof KeyboardEvent) {\r\n                if (e.keyCode !== _keys.SPACE && e.keyCode !== _keys.ENTER) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (props.disabled) {\r\n                return;\r\n            }\r\n            if (props.active) {\r\n                props.view = 0;\r\n            }\r\n            props.active = !props.active;\r\n        },\r\n        view: function(vnode) {\r\n            var props = vnode.state.props;\r\n            return m('.mithril-date-picker-container', { class: ((props.active ? 'active' : '') + ' ' + props.class).trim() },\r\n                m('input.current-date.form-input', {\r\n                    name: props.name,\r\n                    class: props.required ? 'required' : null,\r\n                    format: props.format,\r\n                    readonly: true,\r\n                    onclick: this.showEditor.bind(null, props),\r\n                    onkeydown: this.showEditor.bind(null, props),\r\n                    value: $.fecha.format(props.date, props.format || defaultFormat)\r\n                }),\r\n                m('i.dash.current-date-indicator', { class: props.active ? 'dash-sort-up' : 'dash-sort-down' }),\r\n                props.active && m(Editor, { props: props })\r\n            );\r\n        }\r\n    };\r\n\r\n    return DatePicker;\r\n});\r\n","/*!\r\n * Draggabilly PACKAGED v2.1.1\r\n * Make that shiz draggable\r\n * http://draggabilly.desandro.com\r\n * MIT license\r\n *\r\n * Modified to remove jQuery completely.\r\n */\r\n\r\n/*!\r\n * getSize v2.0.2\r\n * measure size of elements\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    root.getSize = factory(root.$);\r\n})(this, function factory($) {\r\n    /**\r\n     * Get a number from a string, not a percentage.\r\n     * @param {string} value - String to parse.\r\n     * @returns {Number} Returns the number.\r\n     */\r\n    function getStyleSize(value) {\r\n        var num = parseFloat(value);\r\n        // not a percent like '100%', and a number\r\n        return value.indexOf('%') === -1 && !isNaN(num) && num;\r\n    }\r\n\r\n    var measurements = [\r\n        'paddingLeft',\r\n        'paddingRight',\r\n        'paddingTop',\r\n        'paddingBottom',\r\n        'marginLeft',\r\n        'marginRight',\r\n        'marginTop',\r\n        'marginBottom',\r\n        'borderLeftWidth',\r\n        'borderRightWidth',\r\n        'borderTopWidth',\r\n        'borderBottomWidth'\r\n    ];\r\n\r\n    var measurementsLength = measurements.length;\r\n\r\n    /**\r\n     * Build the size measurements for a hidden element.\r\n     * @returns {Object} Measurements for the element.\r\n     */\r\n    function getZeroSize() {\r\n        var size = {\r\n            width: 0,\r\n            height: 0,\r\n            innerWidth: 0,\r\n            innerHeight: 0,\r\n            outerWidth: 0,\r\n            outerHeight: 0\r\n        };\r\n        for (var i = 0; i < measurementsLength; i++) {\r\n            size[measurements[i]] = 0;\r\n        }\r\n        return size;\r\n    }\r\n\r\n    var isSetup = false;\r\n    var isBoxSizeOuter;\r\n\r\n    /**\r\n     * Setup the instance.\r\n     */\r\n    function setup() {\r\n        // setup once\r\n        if (isSetup) {\r\n            return;\r\n        }\r\n        isSetup = true;\r\n\r\n        /**\r\n         * WebKit measures the outer-width on style.width on border-box elems\r\n         * IE & Firefox<29 measures the inner-width\r\n         */\r\n        var div = document.createElement('div');\r\n        $.style(div, { width: '200px', padding: '1px 2px 3px 4px', borderStyle: 'solid', borderWidth: '1px 2px 3px 4px', boxSizing: 'border-box' });\r\n\r\n        var body = document.body || document.documentElement;\r\n        body.appendChild(div);\r\n        var style = getComputedStyle(div);\r\n\r\n        getSize.isBoxSizeOuter = isBoxSizeOuter = getStyleSize(style.width) === 200;\r\n        body.removeChild(div);\r\n    }\r\n\r\n    /**\r\n     * Get the dimensions of a node.\r\n     * @param {Node|string} elem - Node object or query selector.\r\n     * @returns {Object} Dimensions for node.\r\n     */\r\n    function getSize(elem) {\r\n        setup();\r\n\r\n        elem = $.get(elem);\r\n        if (!$.isNode(elem)) {\r\n            return;\r\n        }\r\n\r\n        var style = getComputedStyle(elem);\r\n\r\n        // if hidden, everything is 0\r\n        if (style.display === 'none') {\r\n            return getZeroSize();\r\n        }\r\n\r\n        var size = { width: elem.offsetWidth, height: elem.offsetHeight };\r\n        var isBorderBox = size.isBorderBox = style.boxSizing === 'border-box';\r\n\r\n        // get all measurements\r\n        for (var i = 0; i < measurementsLength; i++) {\r\n            var measurement = measurements[i];\r\n            var value = style[measurement];\r\n            var num = parseFloat(value);\r\n            // any 'auto', 'medium' value will be 0\r\n            size[measurement] = !isNaN(num) ? num : 0;\r\n        }\r\n\r\n        var paddingWidth = size.paddingLeft + size.paddingRight;\r\n        var paddingHeight = size.paddingTop + size.paddingBottom;\r\n        var marginWidth = size.marginLeft + size.marginRight;\r\n        var marginHeight = size.marginTop + size.marginBottom;\r\n        var borderWidth = size.borderLeftWidth + size.borderRightWidth;\r\n        var borderHeight = size.borderTopWidth + size.borderBottomWidth;\r\n        var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\r\n\r\n        // overwrite width and height if we can get it from style\r\n        var styleWidth = getStyleSize(style.width);\r\n        if (styleWidth !== false) {\r\n            // add padding and border unless it's already including it\r\n            size.width = styleWidth + (isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth);\r\n        }\r\n\r\n        var styleHeight = getStyleSize(style.height);\r\n        if (styleHeight !== false) {\r\n            // add padding and border unless it's already including it\r\n            size.height = styleHeight + (isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight);\r\n        }\r\n\r\n        size.innerWidth = size.width - (paddingWidth + borderWidth);\r\n        size.innerHeight = size.height - (paddingHeight + borderHeight);\r\n        size.outerWidth = size.width + marginWidth;\r\n        size.outerHeight = size.height + marginHeight;\r\n\r\n        return size;\r\n    }\r\n\r\n    return getSize;\r\n});\r\n\r\n/**\r\n * EvEmitter v1.0.3\r\n * Lil' event emitter\r\n * MIT License\r\n */\r\n\r\n/* jshint unused: true, undef: true, strict: true */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.EvEmitter = factory();\r\n}(this, function() {\r\n    /**\r\n     * Constructor for the event emitter.\r\n     */\r\n    function EvEmitter() { }\r\n\r\n    EvEmitter.prototype = {\r\n        /**\r\n         * Add an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Function} listener - Callback function\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        on: function(eventName, listener) {\r\n            if (!eventName || !listener) {\r\n                return;\r\n            }\r\n            // set events hash\r\n            var events = this._events = this._events || {};\r\n            // set listeners array\r\n            var listeners = events[eventName] = events[eventName] || [];\r\n            // only add once\r\n            if (listeners.indexOf(listener) === -1) {\r\n                listeners.push(listener);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Remove an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Function} listener - Callback function\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        off: function(eventName, listener) {\r\n            var listeners = this._events && this._events[eventName];\r\n            if (!listeners || !listeners.length) {\r\n                return;\r\n            }\r\n            var index = listeners.indexOf(listener);\r\n            if (index !== -1) {\r\n                listeners.splice(index, 1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Dispatch an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Array} args - Arguments for the callback.\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        emitEvent: function(eventName, args) {\r\n            var listeners = this._events && this._events[eventName];\r\n            if (!listeners || !listeners.length) {\r\n                return;\r\n            }\r\n            args = args || [];\r\n            listeners.forEach(function(x) {\r\n                x.apply(this, args);\r\n            });\r\n            return this;\r\n        }\r\n    };\r\n\r\n    return EvEmitter;\r\n}));\r\n\r\n/*!\r\n * Unipointer v2.1.0\r\n * base class for doing one thing with pointer event\r\n * MIT license\r\n */\r\n\r\n/*jshint browser: true, undef: true, unused: true, strict: true */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Unipointer = factory(root.$, root, root.EvEmitter);\r\n}(this, function factory($, root, EvEmitter) {\r\n    /**\r\n     * Constructor for the Unipointer\r\n     */\r\n    function Unipointer() { }\r\n\r\n    // inherit EvEmitter\r\n    var proto = Unipointer.prototype = Object.create(EvEmitter.prototype);\r\n\r\n    /**\r\n     * Add an event to start dragging.\r\n     * @param {Node} elem - Node to add the event to.\r\n     */\r\n    proto.bindStartEvent = function(elem) {\r\n        this._bindStartEvent(elem, true);\r\n    };\r\n\r\n    /**\r\n     * Remove an event to start dragging.\r\n     * @param {Node} elem - Node to remove the event from.\r\n     */\r\n    proto.unbindStartEvent = function(elem) {\r\n        this._bindStartEvent(elem, false);\r\n    };\r\n\r\n    /**\r\n     * Add/remove the event to start dragging.\r\n     * @param {Node} elem - Node to add/remove the event to.\r\n     * @param {Boolean} isBind - will unbind if falsey.\r\n     * @private\r\n     */\r\n    proto._bindStartEvent = function(elem, isBind) {\r\n        var bindMethod = $.coalesce(isBind, true) ? 'addEventListener' : 'removeEventListener';\r\n\r\n        if (window.navigator.pointerEnabled) {\r\n            // W3C Pointer Events, IE11. See https://coderwall.com/p/mfreca\r\n            elem[bindMethod]('pointerdown', this);\r\n        } else if (window.navigator.msPointerEnabled) {\r\n            // IE10 Pointer Events\r\n            elem[bindMethod]('MSPointerDown', this);\r\n        } else {\r\n            // listen for both, for devices like Chrome Pixel\r\n            elem[bindMethod]('mousedown', this);\r\n            elem[bindMethod]('touchstart', this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Trigger handler methods for events\r\n     * @param {Event} event - Event to trigger.\r\n     */\r\n    proto.handleEvent = function(event) {\r\n        var method = 'on' + event.type;\r\n        if (this[method]) {\r\n            this[method](event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns the touch that we're keeping track of.\r\n     * @param {Touch[]} touches - Touch history\r\n     * @returns {Touch} Touch event.\r\n     */\r\n    proto.getTouch = function(touches) {\r\n        return $.findByKey(touches, 'identifier', this.pointerIdentifier);\r\n    };\r\n\r\n    /**\r\n     * Handle a mouse click.\r\n     * @param {Event} event - Click event.\r\n     */\r\n    proto.onmousedown = function(event) {\r\n        // dismiss clicks from right or middle buttons\r\n        var button = event.button;\r\n        if (button && (button !== 0 && button !== 1)) {\r\n            return;\r\n        }\r\n        this._pointerDown(event, event);\r\n    };\r\n\r\n    /**\r\n     * Handle a touch.\r\n     * @param {Touch} event - Touch event.\r\n     */\r\n    proto.ontouchstart = function(event) {\r\n        this._pointerDown(event, event.changedTouches[0]);\r\n    };\r\n\r\n    /**\r\n     * Handle a mouse click for IE.\r\n     * @param {Event} event - Click event.\r\n     */\r\n    proto.onMSPointerDown = proto.onpointerdown = function(event) {\r\n        this._pointerDown(event, event);\r\n    };\r\n\r\n    /**\r\n     * Start a click/touch event.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerDown = function(event, pointer) {\r\n        // dismiss other pointers\r\n        if (this.isPointerDown) {\r\n            return;\r\n        }\r\n\r\n        this.isPointerDown = true;\r\n        // save pointer identifier to match up touch events\r\n        // pointerId for pointer events, touch.indentifier for touch events\r\n        this.pointerIdentifier = pointer.pointerId !== undefined ? pointer.pointerId : pointer.identifier;\r\n        this.pointerDown(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Bind events after the start of a click/touch event.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        this._bindPostStartEvents(event);\r\n        this.emitEvent('pointerDown', [event, pointer]);\r\n    };\r\n\r\n    // hash of events to be bound after start event\r\n    var postStartEvents = {\r\n        mousedown: ['mousemove', 'mouseup'],\r\n        touchstart: ['touchmove', 'touchend', 'touchcancel'],\r\n        pointerdown: ['pointermove', 'pointerup', 'pointercancel'],\r\n        MSPointerDown: ['MSPointerMove', 'MSPointerUp', 'MSPointerCancel']\r\n    };\r\n\r\n    /**\r\n     * Add all of the events that are needed after start dragging.\r\n     * @param {Event} event - Original click/touch event.\r\n     * @private\r\n     */\r\n    proto._bindPostStartEvents = function(event) {\r\n        if (!event) {\r\n            return;\r\n        }\r\n        // get proper events to match start event\r\n        var events = postStartEvents[event.type];\r\n        // bind events to node\r\n        events.forEach(function(eventName) {\r\n            window.addEventListener(eventName, this);\r\n        }, this);\r\n        // save these arguments\r\n        this._boundPointerEvents = events;\r\n    };\r\n\r\n    /**\r\n     * Remove all of the events that are needed after start dragging.\r\n     * @param {Event} event - Original click/touch event.\r\n     * @private\r\n     */\r\n    proto._unbindPostStartEvents = function() {\r\n        // check for _boundEvents, in case dragEnd triggered twice (old IE8 bug)\r\n        if (!this._boundPointerEvents) {\r\n            return;\r\n        }\r\n        this._boundPointerEvents.forEach(function(eventName) {\r\n            window.removeEventListener(eventName, this);\r\n        }, this);\r\n\r\n        delete this._boundPointerEvents;\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse moves.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onmousemove = function(event) {\r\n        this._pointerMove(event, event);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse moves for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerMove = proto.onpointermove = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerMove(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch moves.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchmove = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerMove(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer move from all the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerMove = function(event, pointer) {\r\n        this.pointerMove(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer move event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        this.emitEvent('pointerMove', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse button is released.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onmouseup = function(event) {\r\n        this._pointerUp(event, event);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse button is released for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerUp = proto.onpointerup = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerUp(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch is released.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchend = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerUp(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer up from all the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerUp = function(event, pointer) {\r\n        this._pointerDone();\r\n        this.pointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer up event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        this.emitEvent('pointerUp', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Event handler for when the dragging stops.\r\n     * @private\r\n     */\r\n    proto._pointerDone = function() {\r\n        // reset properties\r\n        this.isPointerDown = false;\r\n        delete this.pointerIdentifier;\r\n        // remove events\r\n        this._unbindPostStartEvents();\r\n        this.pointerDone();\r\n    };\r\n\r\n    proto.pointerDone = $.noop;\r\n\r\n    /**\r\n     * Event handler when the mouse click is canceled for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerCancel = proto.onpointercancel = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerCancel(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch is canceled.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchcancel = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerCancel(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer cancel from all of the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerCancel = function(event, pointer) {\r\n        this._pointerDone();\r\n        this.pointerCancel(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer cancel event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerCancel = function(event, pointer) {\r\n        this.emitEvent('pointerCancel', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Utility function for getting x/y coords from event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @returns {Object} Object with x & y coordinates.\r\n     */\r\n    Unipointer.getPointerPoint = function(pointer) {\r\n        return {\r\n            x: pointer.pageX,\r\n            y: pointer.pageY\r\n        };\r\n    };\r\n\r\n    return Unipointer;\r\n}));\r\n\r\n/*!\r\n * Unidragger v2.1.0\r\n * Draggable base class\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Unidragger = factory(root.$, root, root.Unipointer);\r\n}(this, function factory($, root, Unipointer) {\r\n    /**\r\n     * Unidragger constructor.\r\n     */\r\n    function Unidragger() { }\r\n\r\n    /**\r\n     * Inherit Unipointer & EvEmitter\r\n     */\r\n    var proto = Unidragger.prototype = Object.create(Unipointer.prototype);\r\n\r\n    /**\r\n     * Add events for drag handle.\r\n     */\r\n    proto.bindHandles = function() {\r\n        this._bindHandles(true);\r\n    };\r\n\r\n    /**\r\n     * Remove events for drag handle.\r\n     */\r\n    proto.unbindHandles = function() {\r\n        this._bindHandles(false);\r\n    };\r\n\r\n    /**\r\n     * Handle adding/removing events for the drag handle.\r\n     * @param {Bool} isBind - Unbind if falsey.\r\n     */\r\n    proto._bindHandles = function(isBind) {\r\n        isBind = $.coalesce(isBind, true);\r\n        // extra bind logic\r\n        var binderExtra;\r\n        var navigator = window.navigator;\r\n        if (navigator.pointerEnabled || navigator.msPointerEnabled) {\r\n            var prop = navigator.pointerEnabled ? 'touchAction' : 'msTouchAction';\r\n            binderExtra = function(handle) {\r\n                // disable scrolling on the element\r\n                handle.style[prop] = isBind ? 'none' : '';\r\n            };\r\n        } else {\r\n            binderExtra = $.noop;\r\n        }\r\n        // bind each handle\r\n        var bindMethod = isBind ? 'addEventListener' : 'removeEventListener';\r\n        for (var i = 0; i < this.handles.length; i++) {\r\n            var handle = this.handles[i];\r\n            this._bindStartEvent(handle, isBind);\r\n            binderExtra(handle);\r\n            handle[bindMethod]('click', this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Pointer start\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        // dismiss range sliders\r\n        if (event.target.nodeName === 'INPUT' && event.target.type === 'range') {\r\n            // reset pointerDown logic\r\n            this.isPointerDown = false;\r\n            delete this.pointerIdentifier;\r\n            return;\r\n        }\r\n\r\n        this._dragPointerDown(event, pointer);\r\n        // kludge to blur focused inputs in dragger\r\n        var focused = document.activeElement;\r\n        if (focused && focused.blur) {\r\n            focused.blur();\r\n        }\r\n        // bind move and end events\r\n        this._bindPostStartEvents(event);\r\n        this.emitEvent('pointerDown', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Base pointer down logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragPointerDown = function(event, pointer) {\r\n        // track to see when dragging starts\r\n        this.pointerDownPoint = Unipointer.getPointerPoint(pointer);\r\n        if (this.canPreventDefaultOnPointerDown(event, pointer)) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Overwriteable method so Flickity can prevent for scrolling\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @returns {Bool} True if allowed to prevent default event, else false.\r\n     */\r\n    proto.canPreventDefaultOnPointerDown = function(event) {\r\n        // prevent default, unless touchstart or <select>\r\n        return event.target.nodeName !== 'SELECT';\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        var moveVector = this._dragPointerMove(event, pointer);\r\n        this.emitEvent('pointerMove', [event, pointer, moveVector]);\r\n        this._dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Base pointer move logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @returns {Object} Object with x & y coordinates.\r\n     */\r\n    proto._dragPointerMove = function(event, pointer) {\r\n        var movePoint = Unipointer.getPointerPoint(pointer);\r\n        var moveVector = {\r\n            x: movePoint.x - this.pointerDownPoint.x,\r\n            y: movePoint.y - this.pointerDownPoint.y\r\n        };\r\n        // start drag if pointer has moved far enough to start drag\r\n        if (!this.isDragging && this.hasDragStarted(moveVector)) {\r\n            this._dragStart(event, pointer);\r\n        }\r\n        return moveVector;\r\n    };\r\n\r\n    /**\r\n     * Check if pointer has moved far enough to start drag.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     * @returns {Bool} True if moved far enough to count as move.\r\n     */\r\n    proto.hasDragStarted = function(moveVector) {\r\n        return Math.abs(moveVector.x) > 3 || Math.abs(moveVector.y) > 3;\r\n    };\r\n\r\n    /**\r\n     * Pointer up.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        this.emitEvent('pointerUp', [event, pointer]);\r\n        this._dragPointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Handle mouse/touch up.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragPointerUp = function(event, pointer) {\r\n        if (this.isDragging) {\r\n            this._dragEnd(event, pointer);\r\n        } else {\r\n            // pointer didn't move enough for drag to start\r\n            this._staticClick(event, pointer);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Base drag start logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._dragStart = function(event, pointer) {\r\n        this.isDragging = true;\r\n        this.dragStartPoint = Unipointer.getPointerPoint(pointer);\r\n        this.isPreventingClicks = true;\r\n        this.dragStart(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag start event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragStart = function(event, pointer) {\r\n        this.emitEvent('dragStart', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Base drag move logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     * @private\r\n     */\r\n    proto._dragMove = function(event, pointer, moveVector) {\r\n        // do not drag if not dragging yet\r\n        if (!this.isDragging) {\r\n            return;\r\n        }\r\n        this.dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag move event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     */\r\n    proto.dragMove = function(event, pointer, moveVector) {\r\n        event.preventDefault();\r\n        this.emitEvent('dragMove', [event, pointer, moveVector]);\r\n    };\r\n\r\n    /**\r\n     * Base logic for drag end.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragEnd = function(event, pointer) {\r\n        this.isDragging = false;\r\n        // re-enable clicking async\r\n        setTimeout(function() {\r\n            delete this.isPreventingClicks;\r\n        }.bind(this));\r\n        this.dragEnd(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag end event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragEnd = function(event, pointer) {\r\n        this.emitEvent('dragEnd', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Handle all clicks and prevent clicks when dragging\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     */\r\n    proto.onclick = function(event) {\r\n        if (this.isPreventingClicks) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Triggered after pointer down & up with no/tiny movement.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._staticClick = function(event, pointer) {\r\n        // ignore emulated mouse up clicks\r\n        if (this.isIgnoringMouseUp && event.type === 'mouseup') {\r\n            return;\r\n        }\r\n\r\n        // allow click in <input>s and <textarea>s\r\n        var nodeName = event.target.nodeName;\r\n        if (nodeName === 'INPUT' || nodeName === 'TEXTAREA') {\r\n            event.target.focus();\r\n        }\r\n        this.staticClick(event, pointer);\r\n\r\n        // set flag for emulated clicks 300ms after touchend\r\n        if (event.type !== 'mouseup') {\r\n            this.isIgnoringMouseUp = true;\r\n            // reset flag after 300ms\r\n            setTimeout(function() {\r\n                delete this.isIgnoringMouseUp;\r\n            }.bind(this), 400);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Dispatch event for staticClick for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.staticClick = function(event, pointer) {\r\n        this.emitEvent('staticClick', [event, pointer]);\r\n    };\r\n\r\n    return Unidragger;\r\n}));\r\n\r\n/*!\r\n * Draggabilly v2.1.1\r\n * Make that shiz draggable\r\n * http://draggabilly.desandro.com\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Draggabilly = factory(root.$, root, root.getSize, root.Unidragger);\r\n}(this, function factory($, root, getSize, Unidragger) {\r\n    var lastTime = 0;\r\n    // get rAF, prefixed, if present. fallback to setTimeout\r\n    var requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(callback) {\r\n        var currTime = new Date().getTime();\r\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n        var id = setTimeout(callback, timeToCall);\r\n        lastTime = currTime + timeToCall;\r\n        return id;\r\n    };\r\n    var transformProperty = $.isString(document.documentElement.style.transform) ? 'transform' : 'WebkitTransform';\r\n\r\n    /**\r\n     * Draggabilly constructor.\r\n     * @param {Node|string} element - Node, or querySelector string of node, to make draggable.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    function Draggabilly(element, options) {\r\n        this.element = $.get(element);\r\n        this.options = options || {};\r\n        this._create();\r\n    }\r\n\r\n    /**\r\n     * Inherit Unidragger methods.\r\n     */\r\n    var proto = Draggabilly.prototype = Object.create(Unidragger.prototype);\r\n\r\n    /**\r\n     * CSS position values that don't need to be set.\r\n     */\r\n    var positionValues = { relative: true, absolute: true, fixed: true };\r\n\r\n    /**\r\n     * Initialize draggabilly.\r\n     */\r\n    proto._create = function() {\r\n        // properties\r\n        this.position = {};\r\n        this._getPosition();\r\n\r\n        this.startPoint = { x: 0, y: 0 };\r\n        this.dragPoint = { x: 0, y: 0 };\r\n        this.startPosition = {};\r\n\r\n        // set relative positioning\r\n        var style = getComputedStyle(this.element);\r\n        if (!positionValues[style.position]) {\r\n            this.element.style.position = 'relative';\r\n        }\r\n\r\n        this.enable();\r\n        this.setHandles();\r\n    };\r\n\r\n    /**\r\n     * Set this.handles and bind start events to the handles.\r\n     */\r\n    proto.setHandles = function() {\r\n        this.handles = this.options.handle ? $.getAll(this.options.handle, this.element) : [this.element];\r\n        this.bindHandles();\r\n    };\r\n\r\n    /**\r\n     * Emits events via EvEmitter.\r\n     * @param {String} type - Name of event.\r\n     * @param {Event} event - Original event.\r\n     * @param {Array} args - Extra arguments.\r\n     */\r\n    proto.dispatchEvent = function(type, event, args) {\r\n        this.emitEvent(type, [event].concat(args));\r\n    };\r\n\r\n    /**\r\n     * Get x/y position from style.\r\n     */\r\n    proto._getPosition = function() {\r\n        var style = getComputedStyle(this.element);\r\n        var x = this._getPositionCoord(style.left, 'width');\r\n        var y = this._getPositionCoord(style.top, 'height');\r\n        // clean up 'auto' or other non-integer values\r\n        this.position.x = isNaN(x) ? 0 : x;\r\n        this.position.y = isNaN(y) ? 0 : y;\r\n\r\n        this._addTransformPosition(style);\r\n    };\r\n\r\n    /**\r\n     * Get a numeric coordinate from a style.\r\n     * @param {String} styleSide - CSS style to parse.\r\n     * @param {String} measure - Property name to get the size for.\r\n     * @returns {Number} Resulting size in pixels.\r\n     */\r\n    proto._getPositionCoord = function(styleSide, measure) {\r\n        if (styleSide.indexOf('%') !== -1) {\r\n            // convert percent into pixel for Safari, #75\r\n            var parentSize = getSize(this.element.parentNode);\r\n            // prevent not-in-DOM element throwing bug, #131\r\n            return !parentSize ? 0 : (parseFloat(styleSide) / 100) * parentSize[measure];\r\n        }\r\n        return parseInt(styleSide, 10);\r\n    };\r\n\r\n    /**\r\n     * Add `transform: translate( x, y )` to position.\r\n     * @param {CSSStyleDeclaration} style - Element styles to add to.\r\n     */\r\n    proto._addTransformPosition = function(style) {\r\n        var transform = style[transformProperty];\r\n        // bail out if value is 'none'\r\n        if (transform.indexOf('matrix') !== 0) {\r\n            return;\r\n        }\r\n        // split matrix(1, 0, 0, 1, x, y)\r\n        var matrixValues = transform.split(',');\r\n        // translate X value is in 12th or 4th position\r\n        var xIndex = transform.indexOf('matrix3d') === 0 ? 12 : 4;\r\n        var translateX = parseInt(matrixValues[xIndex], 10);\r\n        // translate Y value is in 13th or 5th position\r\n        var translateY = parseInt(matrixValues[xIndex + 1], 10);\r\n        this.position.x += translateX;\r\n        this.position.y += translateY;\r\n    };\r\n\r\n    /**\r\n     * Pointer start.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        this._dragPointerDown(event, pointer);\r\n        // kludge to blur focused inputs in dragger\r\n        var focused = document.activeElement;\r\n        // do not blur body for IE10, metafizzy/flickity#117\r\n        if (focused && focused.blur && focused !== document.body) {\r\n            focused.blur();\r\n        }\r\n        // bind move and end events\r\n        this._bindPostStartEvents(event);\r\n        $.addClass(this.element, 'is-pointer-down');\r\n        this.dispatchEvent('pointerDown', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        var moveVector = this._dragPointerMove(event, pointer);\r\n        this.dispatchEvent('pointerMove', event, [pointer, moveVector]);\r\n        this._dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Drag start.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragStart = function(event, pointer) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n        this._getPosition();\r\n        this.measureContainment();\r\n        // position _when_ drag began\r\n        this.startPosition.x = this.position.x;\r\n        this.startPosition.y = this.position.y;\r\n        // reset left/top style\r\n        this.setLeftTop();\r\n\r\n        this.dragPoint.x = 0;\r\n        this.dragPoint.y = 0;\r\n\r\n        $.addClass(this.element, 'is-dragging');\r\n        this.dispatchEvent('dragStart', event, [pointer]);\r\n        // start animation\r\n        this.animate();\r\n    };\r\n\r\n    /**\r\n     * Calculate the correct position of the element within its container.\r\n     */\r\n    proto.measureContainment = function() {\r\n        var containment = this.options.containment;\r\n        if (!containment) {\r\n            return;\r\n        }\r\n\r\n        // use element if element, otherwise just `true`, use the parent\r\n        var container = $.isNode(containment) ? containment : $.isString(containment) ? $.get(containment) : this.element.parentNode;\r\n        var elemSize = getSize(this.element);\r\n        var containerSize = getSize(container);\r\n        var elemRect = this.element.getBoundingClientRect();\r\n        var containerRect = container.getBoundingClientRect();\r\n        var borderSizeX = containerSize.borderLeftWidth + containerSize.borderRightWidth;\r\n        var borderSizeY = containerSize.borderTopWidth + containerSize.borderBottomWidth;\r\n\r\n        var position = this.relativeStartPosition = {\r\n            x: elemRect.left - (containerRect.left + containerSize.borderLeftWidth),\r\n            y: elemRect.top - (containerRect.top + containerSize.borderTopWidth)\r\n        };\r\n\r\n        this.containSize = {\r\n            width: (containerSize.width - borderSizeX) - position.x - elemSize.width,\r\n            height: (containerSize.height - borderSizeY) - position.y - elemSize.height\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x and y coordinates of current position.\r\n     */\r\n    proto.dragMove = function(event, pointer, moveVector) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n\r\n        var dragX = moveVector.x;\r\n        var dragY = moveVector.y;\r\n        var grid = this.options.grid;\r\n        var gridX = grid && grid[0];\r\n        var gridY = grid && grid[1];\r\n\r\n        dragX = applyGrid(dragX, gridX);\r\n        dragY = applyGrid(dragY, gridY);\r\n\r\n        dragX = this.containDrag('x', dragX, gridX);\r\n        dragY = this.containDrag('y', dragY, gridY);\r\n\r\n        // constrain to axis\r\n        dragX = this.options.axis === 'y' ? 0 : dragX;\r\n        dragY = this.options.axis === 'x' ? 0 : dragY;\r\n\r\n        if (this.options.minZero) {\r\n            dragX = applyMinZero(this.startPosition.x, dragX);\r\n            dragY = applyMinZero(this.startPosition.y, dragY);\r\n        }\r\n\r\n        this.position.x = this.startPosition.x + dragX;\r\n        this.position.y = this.startPosition.y + dragY;\r\n        // set dragPoint properties\r\n        this.dragPoint.x = dragX;\r\n        this.dragPoint.y = dragY;\r\n\r\n        this.dispatchEvent('dragMove', event, [pointer, moveVector]);\r\n    };\r\n\r\n    /**\r\n     * Adjust a coordinate to snap to the grid.\r\n     * @param {Number} value - Coordinate to snap to grid.\r\n     * @param {Number} grid - Grid width/height.\r\n     * @param {String} method - Math method to apply.\r\n     * @returns {Number} Closes number that snaps to grid.\r\n     */\r\n    function applyGrid(value, grid, method) {\r\n        return grid ? Math[method || 'round'](value / grid) * grid : value;\r\n    }\r\n\r\n    /**\r\n     * Adjust the drag position to prevent the item from moving out of the container to the left or top.\r\n     * @param {Number} start - Element starting coordinate.\r\n     * @param {Number} drag - Distance element was dragged.\r\n     * @returns {Number} Corrected drag coordinate.\r\n     */\r\n    function applyMinZero(start, drag) {\r\n        return start + drag < 0 ? -start : drag;\r\n    }\r\n\r\n    /**\r\n     * Limit dragging within boundaries.\r\n     * @param {string} axis - X or Y Axis\r\n     * @param {number} drag - Position coordinate on axis\r\n     * @param {number} grid - Boundary coordinate on axis.\r\n     * @returns {number} Coordinate contained with drag.\r\n     */\r\n    proto.containDrag = function(axis, drag, grid) {\r\n        if (!this.options.containment) {\r\n            return drag;\r\n        }\r\n        var measure = axis === 'x' ? 'width' : 'height';\r\n\r\n        var rel = this.relativeStartPosition[axis];\r\n        var min = applyGrid(-rel, grid, 'ceil');\r\n        var max = this.containSize[measure];\r\n        max = applyGrid(max, grid, 'floor');\r\n        return Math.min(max, Math.max(min, drag));\r\n    };\r\n\r\n    /**\r\n     * pointer up\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        $.removeClass(this.element, 'is-pointer-down');\r\n        this.dispatchEvent('pointerUp', event, [pointer]);\r\n        this._dragPointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Drag end.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragEnd = function(event, pointer) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n        // use top left position when complete\r\n        if (transformProperty) {\r\n            this.element.style[transformProperty] = '';\r\n            this.setLeftTop();\r\n        }\r\n        $.removeClass(this.element, 'is-dragging');\r\n        this.dispatchEvent('dragEnd', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Animate while dragging.\r\n     */\r\n    proto.animate = function() {\r\n        if (!this.isDragging) {\r\n            return;\r\n        }\r\n        this.positionDrag();\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    };\r\n\r\n    /**\r\n     * Set left/top positioning.\r\n     */\r\n    proto.setLeftTop = function() {\r\n        $.style(this.element, { left: this.position.x + 'px', top: this.position.y + 'px' });\r\n    };\r\n\r\n    /**\r\n     * Set position transform based on drag.\r\n     */\r\n    proto.positionDrag = function() {\r\n        this.element.style[transformProperty] = 'translate3d( ' + this.dragPoint.x + 'px, ' + this.dragPoint.y + 'px, 0)';\r\n    };\r\n\r\n    /**\r\n     * Dispatch the event for static click callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.staticClick = function(event, pointer) {\r\n        this.dispatchEvent('staticClick', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Enable dragging.\r\n     */\r\n    proto.enable = function() {\r\n        this.isEnabled = true;\r\n    };\r\n\r\n    /**\r\n     * Disable dragging.\r\n     */\r\n    proto.disable = function() {\r\n        this.isEnabled = false;\r\n        if (this.isDragging) {\r\n            this.dragEnd();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy this instance.\r\n     */\r\n    proto.destroy = function() {\r\n        this.disable();\r\n        this.element.removeAttribute('style');\r\n        this.unbindHandles();\r\n    };\r\n\r\n    return Draggabilly;\r\n}));\r\n","/*!\r\n * Help mithril component. Shows input groups with help button.\r\n */\r\n(function(root, factory) {\r\n    root.Help = factory(root.m, root.$, root.Alertify);\r\n})(this, function(m, $, Alertify) {\r\n    'use strict';\r\n\r\n    var Help = {\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            this.opts = {\r\n                enabled: attrs.enabled,\r\n                message: attrs.message\r\n            };\r\n        },\r\n\r\n        showHelp: function(e) {\r\n            Alertify.alert(this.opts.message, $.dialogs.focusOnClose.bind(e), $.dialogs.focusOnClose.bind(e));\r\n        },\r\n\r\n        view: function(vnode) {\r\n            if (!this.opts.enabled) {\r\n                return $.isArray(vnode.children) ? m('.input-group', vnode.children) : vnode.children;\r\n            }\r\n            if (!(vnode.children && vnode.children.length)) {\r\n                return m('span', m('button.btn.btn-secondary.dash-context-help', {\r\n                    type: 'button', role: 'button', onclick: this.showHelp.bind(this)\r\n                }, m('i.dash.dash-help')));\r\n            }\r\n            return m('.input-group',\r\n                vnode.children.concat(m('span.input-group-addon.input-group-custom', m('button.btn.btn-secondary.dash-context-help', {\r\n                    type: 'button', role: 'button', onclick: this.showHelp.bind(this)\r\n                }, m('i.dash.dash-help'))))\r\n            );\r\n        }\r\n    };\r\n\r\n    return Help;\r\n});\r\n","/*!\r\n * Library for storing widget positions and detecting collisions.\r\n */\r\n(function(root, factory) {\r\n    root.Rect = factory(root.$);\r\n})(this, function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Constructor for a rect.\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     */\r\n    function Rect(width, height, x, y) {\r\n        this.x = $.coalesce(x, 0);\r\n        this.y = $.coalesce(y, 0);\r\n        this.width = $.coalesce(width, 0);\r\n        this.height = $.coalesce(height, 0);\r\n        this.updated = false;\r\n    }\r\n\r\n    Rect.prototype = {\r\n        /**\r\n         * Check if rect intersects with this rect.\r\n         * @param {Rect} rect - Rect to check for intersection with.\r\n         * @returns {bool} True if the rectangles collide, else false.\r\n         */\r\n        overlaps: function(rect) {\r\n            var thisRight = this.x + this.width;\r\n            var thisBottom = this.y + this.height;\r\n            var rectRight = rect.x + rect.width;\r\n            var rectBottom = rect.y + rect.height;\r\n\r\n            // http://stackoverflow.com/a/306332\r\n            return this.x < rectRight && thisRight > rect.x && this.y < rectBottom && thisBottom > rect.y;\r\n        }\r\n    };\r\n\r\n    return Rect;\r\n});\r\n","/*!\r\n * Spectre tab component.\r\n */\r\n(function(root, factory) {\r\n    root.Tab = factory(root.$);\r\n})(this, function($) {\r\n    var Tab = function(element) {\r\n        var tab = $.get(element);\r\n        if (tab) {\r\n            $.on($.get(element), 'click', this.action.bind(this), false);\r\n            this.container = tab.parentNode.parentNode;\r\n        }\r\n    };\r\n\r\n    Tab.prototype = {\r\n        action: function(e) {\r\n            if (!e) {\r\n                return;\r\n            }\r\n\r\n            e.preventDefault();\r\n            var target = e.target;\r\n            if (!$.hasClass(target.parentNode, 'active')) {\r\n                var content = this.getContent();\r\n                $.removeClass($.getAll('a', this.getTab())[0], 'active');\r\n                $.addClass(target, 'active');\r\n                setTimeout(function() {\r\n                    $.removeClass(content, 'active');\r\n                    $.addClass($.get(target.getAttribute('href')), 'active');\r\n                }, 100);\r\n            }\r\n        },\r\n\r\n        getTab: function() {\r\n            var activeTabs = $.getAll('.active', this.container);\r\n            return activeTabs[activeTabs.length - 1].parentNode;\r\n        },\r\n\r\n        getContent: function() {\r\n            var tab = this.getTab();\r\n            var links = tab && $.getAll('a', tab);\r\n            return links.length && $.get(links[0].getAttribute('href'));\r\n        }\r\n    }\r\n\r\n    return Tab;\r\n});\r\n","/*!\r\n * Mithril based table component. Supports ajax data, searching, sorting, paging, & resizing columns.\r\n */\r\n(function(root, factory) {\r\n    root.Table = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    var Table = {\r\n        pageOptions: [m('option', { value: '10' }, '10'), m('option', { value: '20' }, '20'), m('option', { value: '50' }, '50'), m('option', { value: '100' }, '100')],\r\n\r\n        /**\r\n         * Get/set persistent values.\r\n         * @param {string} key - Key name of the value to get/set.\r\n         * @param {*} value - Value to set.\r\n         * @returns {string|undefined} Value if getting, else undefined.\r\n         */\r\n        store: function(key, value) {\r\n            var myKey = this.opts.id + '.' + key;\r\n            // getter\r\n            if ($.isUndefined(value)) {\r\n                return $.isNull(this.opts.storageFunction) ? localStorage[myKey] : $.coalesce(this.opts[key], null);\r\n            }\r\n\r\n            // setter\r\n            if ($.isNull(this.opts.storageFunction)) {\r\n                localStorage[myKey] = value;\r\n            } else {\r\n                // ignore the param actually passed and use the values from the object\r\n                // passing the whole object lets the storage function decide when to actually save using a debounce\r\n                if ($.isFunction(this.opts.storageFunction)) {\r\n                    this.opts.storageFunction({\r\n                        itemsPerPage: this.itemsPerPage,\r\n                        currentStartItem: this.currentStartItem,\r\n                        searchQuery: this.searchQuery,\r\n                        width: this.width,\r\n                        sorting: this.sorting,\r\n                        columnWidths: this.opts.columns.map(function(c) { return { field: c.field, width: c.width * 1.0 }; })\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Process the data array result from the ajax request.\r\n         * @param {Object[]} data - Array of records to display.\r\n         */\r\n        processData: function(data) {\r\n            if (this.opts.dataCallback) {\r\n                this.opts.dataCallback(data);\r\n            }\r\n\r\n            var i = 0, len = data.rows.length, j = 0;\r\n            for (; i < len; i++) {\r\n                // add an index to the data so we can reset to the default sort order later if the user wants\r\n                data.rows[i]._index = i;\r\n\r\n                var x;\r\n                // convert input to appropriate types\r\n                for (j = 0; j < this.intColumns.length; j++) {\r\n                    x = this.intColumns[j];\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : data.rows[i][x] * 1;\r\n                }\r\n                for (j = 0; j < this.dateColumns.length; j++) {\r\n                    x = this.dateColumns[j];\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : $.fecha.parse(data.rows[i][x], this.opts.dataDateFormat);\r\n                }\r\n                for (j = 0; j < this.currencyColumns.length; j++) {\r\n                    x = this.currencyColumns[j];\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : $.accounting.unformat(data.rows[i][x]);\r\n                }\r\n            }\r\n            this.data = data.rows;\r\n            this.filteredTotal = data.filteredTotal;\r\n\r\n            this.loading = false;\r\n            this.sort(false);\r\n            this.filterResults();\r\n        },\r\n\r\n        /**\r\n         * Load the data to populate the table.\r\n         */\r\n        loadData: function() {\r\n            this.loading = true;\r\n            this.loadingError = false;\r\n\r\n            var self = this;\r\n            $.ajax({\r\n                method: this.opts.requestMethod,\r\n                url: this.opts.url,\r\n                data: this.buildParams(),\r\n                block: false\r\n            }, this.processData.bind(this), function(data) {\r\n                self.loading = false;\r\n                self.loadingError = true;\r\n                if (self.opts.errorCallback) {\r\n                    self.opts.errorCallback(data);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Force the table to refresh its data.\r\n         */\r\n        refresh: function() {\r\n            this.loading = true;\r\n            this.loadingError = false;\r\n            this.loadData();\r\n        },\r\n\r\n        /**\r\n         * Build querystring params to fetch data from the server.\r\n         * @returns {Object} Request parameters.\r\n         */\r\n        buildParams: function() {\r\n            var sort = this.sorting.length > 0 ? this.sorting.map(function(obj, i) { return { field: obj.field, dir: obj.dir, index: i }; }) : null;\r\n            if (this.opts.requestUsePascalCase) {\r\n                return $.extend(this.opts.requestParams, {\r\n                    StartItem: this.currentStartItem,\r\n                    Items: this.itemsPerPage,\r\n                    Query: this.searchQuery,\r\n                    Sort: $.toPascalKeys(sort)\r\n                });\r\n            }\r\n            return $.extend(this.opts.requestParams, {\r\n                startItem: this.currentStartItem,\r\n                items: this.itemsPerPage,\r\n                query: this.searchQuery,\r\n                sort: sort\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Set the first item index to display.\r\n         * @param {type} index - Record index to start on.\r\n         */\r\n        setCurrentStartItem: function(index) {\r\n            this.currentStartItem = index;\r\n            this.store('currentStartItem', index);\r\n            this.filterResults(true);\r\n        },\r\n\r\n        /**\r\n         * Set the number of items to display per page.\r\n         * @param {number|Event} e - Number or items per page, or an event that triggered the change.\r\n         */\r\n        setItemsPerPage: function(e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var items = (isNaN(e) ? e.target.value : e) * 1;\r\n            if (this.itemsPerPage !== items) {\r\n                this.itemsPerPage = items;\r\n                this.store('itemsPerPage', items);\r\n                this.setCurrentStartItem(0);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set the search query for filtering table data.\r\n         * @param {string} val - New search text.\r\n         */\r\n        setSearchQuery: function(val) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var query = val.target ? val.target.value : val;\r\n            if (this.searchQuery !== query) {\r\n                this.searchQuery = query;\r\n                this.runSearch(query);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change search query and filter results.\r\n         * @param {string} query - New search text.\r\n         */\r\n        runSearch: function(query) {\r\n            this.store('searchQuery', query);\r\n            this.requestTimer = null;\r\n            this.currentStartItem = 0;\r\n            this.filterResults(true);\r\n        },\r\n\r\n        /**\r\n         * Filter the data based on the search query, current page, and items per page.\r\n         * @param {bool} refresh - Force it to refresh its data.\r\n         */\r\n        filterResults: function(refresh) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            if (refresh && !this.opts.loadAllData) {\r\n                // force the data to reload. filterResults will get called again after the data loads\r\n                this.loadData();\r\n            } else if (!this.opts.loadAllData) {\r\n                // we're not loading all the data to begin with. so whatever data we have should be displayed.\r\n                this.results = this.data;\r\n                this.pageTotal = Math.ceil(this.filteredTotal / this.itemsPerPage);\r\n            } else {\r\n                // we're loading all the data to begin with. so figure out what data to display.\r\n                var filteredTotal = 0;\r\n                if (this.data.constructor !== Array) {\r\n                    this.loading = true;\r\n                    this.results = [];\r\n                } else {\r\n                    var startItem = this.currentStartItem;\r\n                    var res = this.searchQuery ? this.data.filter(this.filterArray.bind(this.searchQuery.toLowerCase())) : this.data;\r\n                    filteredTotal = res.length;\r\n                    this.results = res.slice(startItem, startItem + this.itemsPerPage);\r\n                }\r\n\r\n                this.filteredTotal = filteredTotal;\r\n                this.pageTotal = Math.ceil(filteredTotal / this.itemsPerPage);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Page forward or backward.\r\n         * @param {number} d - Direction to move, 1 is forward, -1 is backward.\r\n         * @param {number} m - Move to end (first or last page) if true.\r\n         */\r\n        moveToPage: function(d, m) {\r\n            this.changePage(d === 1 ? m ? this.pageTotal : this.currentStartItem / this.itemsPerPage + 2 : m ? 1 : this.currentStartItem / this.itemsPerPage);\r\n        },\r\n\r\n        /**\r\n         * Move to the specified page number.\r\n         * @param {number|Event} e - New page number, or an event that triggered the change.\r\n         */\r\n        changePage: function(e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var page = (isNaN(e) ? e.target.value : e) * 1;\r\n            if (page <= this.pageTotal && page > 0) {\r\n                this.setCurrentStartItem((page - 1) * this.itemsPerPage);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change the sorting order.\r\n         * @param {string} fieldName - Name of the field to sort on.\r\n         * @param {string} dataType - Data type of the field.\r\n         * @param {Event} e - Event that triggered the change.\r\n         */\r\n        changeSort: function(fieldName, dataType, e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var val = $.findByKey(this.sorting, 'field', fieldName);\r\n            if (e.shiftKey) {\r\n                document.getSelection().removeAllRanges();\r\n            } else {\r\n                this.sorting = [];\r\n            }\r\n\r\n            if (val === null) {\r\n                this.sorting.push({ field: fieldName, dir: 'ASC', dataType: dataType || 'string' });\r\n            } else if (e.shiftKey) {\r\n                if (val.dir === 'DESC') {\r\n                    this.sorting.splice(val._i, 1);\r\n                } else {\r\n                    val.dir = 'DESC';\r\n                    this.sorting[val._i] = val;\r\n                }\r\n            } else {\r\n                val.dir = val.dir === 'ASC' ? 'DESC' : 'ASC';\r\n                this.sorting.push(val);\r\n            }\r\n\r\n            this.sort();\r\n            this.setCurrentStartItem(0);\r\n        },\r\n\r\n        /**\r\n         * Sort the underlying data.\r\n         * @param {bool} refresh - Refresh the data from the server.\r\n         */\r\n        sort: function(refresh) {\r\n            refresh = $.coalesce(refresh, true);\r\n            this.data.sort(this.sorting.length > 0 ? this.compare.bind(this) : this.defaultCompare);\r\n            this.filterResults(refresh);\r\n            this.store('sorting', JSON.stringify(this.sorting));\r\n        },\r\n\r\n        /**\r\n         * Set up the table and column styles and events.\r\n         */\r\n        setLayout: function() {\r\n            if (this.layoutSet) {\r\n                return;\r\n            }\r\n\r\n            this.layoutSet = true;\r\n            this.table = $.get('.table-data', this.content);\r\n            this.table.style.tableLayout = 'fixed';\r\n            this.tableHeaderRow = this.table.tHead.rows[0];\r\n\r\n            if (this.table !== null) {\r\n                this.clientWidth = this.content.clientWidth;\r\n                this.table.tHead.style.width = this.table.style.width = (this.width / 100 * this.table.offsetWidth) + 'px';\r\n\r\n                var hWidth = this.table.tHead.offsetWidth;\r\n                var tWidth = this.table.offsetWidth;\r\n                var i = 0;\r\n                var cells = this.tableHeaderRow.cells;\r\n                this.opts.columns.forEach(function(x) {\r\n                    if (!x.width) {\r\n                        x.width = cells[i].offsetWidth / hWidth * 100;\r\n                    }\r\n                    cells[i].style.width = x.width / 100 * tWidth + 'px';\r\n                    ++i;\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update the table and column widths based on a window resize.\r\n         */\r\n        onResize: function() {\r\n            var cWidth = this.content.clientWidth;\r\n            if (cWidth === 0) {\r\n                return;\r\n            }\r\n            var scale = cWidth / this.clientWidth;\r\n            this.clientWidth = cWidth;\r\n            this.table.tHead.style.width = this.table.style.width = (this.pixelToFloat(this.table.style.width) * scale) + 'px';\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                this.tableHeaderRow.cells[i].style.width = (this.pixelToFloat(this.tableHeaderRow.cells[i].style.width) * scale) + 'px';\r\n            }\r\n            this.updateLayout();\r\n        },\r\n\r\n        /**\r\n         * Update the table header style.\r\n         */\r\n        updateLayout: function() {\r\n            if (!$.isVisible(this.table)) {\r\n                return;\r\n            }\r\n            $.get('.table-scrollable', this.content).style.paddingTop = this.table.tHead.offsetHeight + 'px';\r\n            var colGroup = $.get('.table-column-group', this.content);\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                colGroup.children[i].style.width = this.tableHeaderRow.cells[i].style.width;\r\n            }\r\n            if (this.clientWidth > 0 && this.content.clientWidth / this.clientWidth !== 1) {\r\n                this.onResize();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Make the table header scroll horizontally with the table\r\n         * @param {Event} e - Event that triggered the scroll.\r\n         */\r\n        onScroll: function(e) {\r\n            var head = this.table.tHead;\r\n            var scroll = e.target;\r\n            if (-head.offsetLeft !== scroll.scrollLeft) {\r\n                head.style.left = '-' + scroll.scrollLeft + 'px';\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handle dragging to change column widths.\r\n         * @param {type} e - Event that triggered the change.\r\n         */\r\n        onHeaderMouseDown: function(e) {\r\n            if (e.button !== 0) {\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            var callbackFunc = function(cellEl) {\r\n                e.stopImmediatePropagation();\r\n                e.preventDefault();\r\n\r\n                self.resizeContext = {\r\n                    colIndex: cellEl.cellIndex,\r\n                    initX: e.clientX,\r\n                    scrWidth: $.get('.table-scrollable', self.content).offsetWidth,\r\n                    initTblWidth: self.table.offsetWidth,\r\n                    initColWidth: self.pixelToFloat($.get('.table-column-group', self.content).children[cellEl.cellIndex].style.width),\r\n                    layoutTimer: null\r\n                };\r\n            };\r\n            self.inResizeArea(e, callbackFunc);\r\n        },\r\n\r\n        /**\r\n         * Handle resizing columns.\r\n         * @param {Event} e - Event that triggered the change.\r\n         */\r\n        onMouseMove: function(e) {\r\n            var newStyle = '';\r\n            var cursorFunc = function() {\r\n                newStyle = 'col-resize';\r\n            };\r\n            this.inResizeArea(e, cursorFunc);\r\n            if (this.table.tHead.style.cursor !== newStyle) {\r\n                this.table.tHead.style.cursor = newStyle;\r\n            }\r\n\r\n            var ctx = this.resizeContext;\r\n            if ($.isNull(ctx)) {\r\n                return;\r\n            }\r\n\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n\r\n            var newColWidth = Math.max(ctx.initColWidth + e.clientX - ctx.initX, this.opts.columnMinWidth);\r\n            this.table.tHead.style.width = this.table.style.width = (ctx.initTblWidth + (newColWidth - ctx.initColWidth)) + 'px';\r\n            $.get('.table-column-group', this.content).children[ctx.colIndex].style.width = this.tableHeaderRow.cells[ctx.colIndex].style.width = newColWidth + 'px';\r\n\r\n            if (ctx.layoutTimer === null) {\r\n                var self = this;\r\n                var timerFunc = function() {\r\n                    self.resizeContext.layoutTimer = null;\r\n                    self.updateLayout();\r\n                };\r\n                ctx.layoutTimer = setTimeout(timerFunc, 25);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update column widths and save them.\r\n         */\r\n        onMouseUp: function() {\r\n            var ctx = this.resizeContext;\r\n            if ($.isNull(ctx)) {\r\n                return;\r\n            }\r\n\r\n            if (ctx.layoutTimer !== null) {\r\n                clearTimeout(ctx.layoutTimer);\r\n            }\r\n            this.resizeContext = null;\r\n\r\n            var newTblWidth = this.table.offsetWidth;\r\n            this.width = (newTblWidth / ctx.scrWidth * 100).toFixed(2);\r\n            this.store('width', this.width);\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                this.opts.columns[i].width = (this.pixelToFloat(this.tableHeaderRow.cells[i].style.width) / newTblWidth * 100).toFixed(2);\r\n                this.store(this.opts.columns[i].field + '.width', this.opts.columns[i].width);\r\n            }\r\n\r\n            this.updateLayout();\r\n        },\r\n\r\n        /**\r\n         * Check if the cursor is in the area where the user can click to drag a column.\r\n         * @param {Event} e - Event that triggered the check.\r\n         * @param {Function} callback - Function to run if in the resize area.\r\n         */\r\n        inResizeArea: function(e, callback) {\r\n            var tblX = e.clientX;\r\n            var el;\r\n            for (el = this.table.tHead; el !== null; el = el.offsetParent) {\r\n                tblX -= el.offsetLeft + el.clientLeft - el.scrollLeft;\r\n            }\r\n\r\n            var cellEl = e.target;\r\n            while (cellEl !== this.table.tHead && cellEl !== null) {\r\n                if (cellEl.nodeName === 'TH') {\r\n                    break;\r\n                }\r\n                cellEl = cellEl.parentNode;\r\n            }\r\n\r\n            if (cellEl === this.table.tHead) {\r\n                for (var i = this.tableHeaderRow.cells.length - 1; i >= 0; i--) {\r\n                    cellEl = this.tableHeaderRow.cells[i];\r\n                    if (cellEl.offsetLeft <= tblX) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (cellEl !== null) {\r\n                var x = tblX;\r\n                for (el = cellEl; el !== this.table.tHead; el = el.offsetParent) {\r\n                    if (el === null) {\r\n                        break;\r\n                    }\r\n                    x -= el.offsetLeft - el.scrollLeft + el.clientLeft;\r\n                }\r\n                if (x < 10 && cellEl.cellIndex !== 0) {\r\n                    callback.call(this, cellEl.previousElementSibling);\r\n                } else if (x > cellEl.clientWidth - 10) {\r\n                    callback.call(this, cellEl);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Make column resizing play nice with touch. \r\n         * http://stackoverflow.com/questions/28218888/touch-event-handler-overrides-click-handlers\r\n         * @param {Event} e Event that triggered the handler.\r\n         */\r\n        touchHandler: function(e) {\r\n            var mouseEvent = null;\r\n            var simulatedEvent = document.createEvent('MouseEvent');\r\n            var touch = e.changedTouches[0];\r\n\r\n            switch (e.type) {\r\n                case 'touchstart':\r\n                    mouseEvent = 'mousedown';\r\n                    this.totalDistance = 0;\r\n                    this.lastSeenAt.x = touch.clientX;\r\n                    this.lastSeenAt.y = touch.clientY;\r\n                    break;\r\n                case 'touchmove':\r\n                    mouseEvent = 'mousemove';\r\n                    break;\r\n                case 'touchend':\r\n                    if (this.lastSeenAt.x) {\r\n                        this.totalDistance += Math.sqrt(Math.pow(this.lastSeenAt.y - touch.clientY, 2) + Math.pow(this.lastSeenAt.x - touch.clientX, 2));\r\n                    }\r\n                    mouseEvent = this.totalDistance > 5 ? 'mouseup' : 'click';\r\n                    this.lastSeenAt = { x: null, y: null };\r\n                    break;\r\n            }\r\n\r\n            simulatedEvent.initMouseEvent(mouseEvent, true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);\r\n            $.dispatch(touch.target, simulatedEvent);\r\n            e.preventDefault();\r\n        },\r\n\r\n        /**\r\n         * Get the value for the field coverted to the correct data type.\r\n         * @param {string} value - Value to convert.\r\n         * @returns {*} Converted value.\r\n         */\r\n        getFieldValue: function(value) {\r\n            if ($.isNull(value)) {\r\n                return null;\r\n            }\r\n            return value.getMonth ? value : value.toLowerCase ? value.toLowerCase() : value;\r\n        },\r\n\r\n        /**\r\n         * Get the formatted value to display for the field.\r\n         * @param {string} value - Value to format.\r\n         * @param {string} dataType - Data type to format to.\r\n         * @returns {*} Converted value.\r\n         */\r\n        getDisplayValue: function(value, dataType) {\r\n            if (!dataType || $.isNull(value)) {\r\n                return value;\r\n            }\r\n\r\n            var val = value;\r\n            if (dataType === 'currency') {\r\n                val = $.accounting.formatMoney(val, this.opts.displayCurrencyFormat);\r\n            } else if (dataType === 'date') {\r\n                val = $.fecha.format(val, this.opts.displayDateFormat);\r\n            }\r\n            return val;\r\n        },\r\n\r\n        /**\r\n         * Default sorting function for the data - resets to order when data was loaded.\r\n         * @param {Object} a - First object to compare.\r\n         * @param {Object} b - Object to compare to.\r\n         * @returns {number} 1 if a comes first, -1 if b comes first, else 0.\r\n         */\r\n        defaultCompare: function(a, b) {\r\n            return a._index > b._index ? 1 : a._index < b._index ? -1 : 0;\r\n        },\r\n\r\n        /**\r\n         * Multi-sorting function for the data.\r\n         * @param {Object} a - First object to compare.\r\n         * @param {Object} b - Object to compare to.\r\n         * @returns {number} 1 if a comes first, -1 if b comes first, else 0.\r\n         */\r\n        compare: function(a, b) {\r\n            var sorting = this.sorting;\r\n            var i = 0, len = sorting.length;\r\n            for (; i < len; i++) {\r\n                var sort = sorting[i];\r\n                var aa = this.getFieldValue(a[sort.field]);\r\n                var bb = this.getFieldValue(b[sort.field]);\r\n\r\n                if (aa === null) {\r\n                    return 1;\r\n                }\r\n                if (bb === null) {\r\n                    return -1;\r\n                }\r\n                if (aa < bb) {\r\n                    return sort.dir === 'ASC' ? -1 : 1;\r\n                }\r\n                if (aa > bb) {\r\n                    return sort.dir === 'ASC' ? 1 : -1;\r\n                }\r\n            }\r\n            return 0;\r\n        },\r\n\r\n        /**\r\n         * Filter an array of objects to find objects where value contains the value of `this`\r\n         * @param {Object} obj - Object to search in.\r\n         * @returns {bool} True if object contains `this`.\r\n         */\r\n        filterArray: function(obj) {\r\n            for (var key in obj) {\r\n                if (key.indexOf('_') < 0 && obj.hasOwnProperty(key) && (obj[key] + '').toLowerCase().indexOf(this) > -1) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Convert a style with 'px' to a float.\r\n         * @param {string} val - CSS style to convert.\r\n         * @returns {number} Numeric value.\r\n         */\r\n        pixelToFloat: function(val) {\r\n            return val.replace('px', '').replace('%', '') * 1.0;\r\n        },\r\n\r\n        /**\r\n         * Build the table header tags.\r\n         * @param {Object} obj - Column to build the tag for.\r\n         * @returns {Object} Mithril TH node.\r\n         */\r\n        tableHeaders: function(obj) {\r\n            var field = obj.field;\r\n            var attrs = { class: obj.classes || '' };\r\n\r\n            var content = [obj.label || field];\r\n            if ($.isUndefined(obj.sortable) || obj.sortable === true) {\r\n                var val = $.findByKey(this.sorting, 'field', field);\r\n                var arrowAttrs = {\r\n                    class: val ? (val.dir === 'ASC' ? 'dash-sort-up' : 'dash-sort-down') : this.opts.editable ? 'dash-sort' : ''\r\n                };\r\n                if (this.opts.editable) {\r\n                    arrowAttrs.onclick = this.changeSort.bind(this, field, obj.dataType.toLowerCase());\r\n                }\r\n                content.push(m('i.float-right.dash.data-table-arrow', arrowAttrs));\r\n            } else {\r\n                attrs.class += ' disabled';\r\n            }\r\n            if (this.opts.editable) {\r\n                attrs.onmousedown = this.onHeaderMouseDown.bind(this);\r\n            }\r\n            return m('th.text-no-select', attrs, content);\r\n        },\r\n\r\n        /**\r\n         * Build the view that actually shows the table.\r\n         * @returns {Object}  Mithril DIV node.\r\n         */\r\n        view: function() {\r\n            return m('.dash-table',\r\n                {\r\n                    ontableRefresh: this.refresh.bind(this),\r\n                    ontableDestroy: this.destroy.bind(this),\r\n                    onlayoutUpdate: this.updateLayout.bind(this)\r\n                }, [\r\n                    !this.opts.editable ? m('span#table-items-per-page') :\r\n                        m('.container',\r\n                            m('.columns.form-horizontal.m-2', [\r\n                                m('.col-4',\r\n                                    this.opts.searchable ? m('.input-group.col-8.col-mr-auto', [\r\n                                        m('span.input-group-addon.text-no-select', m('i.dash.dash-search')),\r\n                                        m('input.form-input', { type: 'text', oninput: this.setSearchQuery.bind(this), value: this.searchQuery, disabled: this.loading })\r\n                                    ]) : null\r\n                                ),\r\n                                m('.col-4',\r\n                                    m('.text-center', (this.opts.headerButtons || []).map(function(x) {\r\n                                        return m(x.type, x.attributes, x.label);\r\n                                    }))\r\n                                ),\r\n                                m('.col-4',\r\n                                    m('.input-group.col-8.col-ml-auto', [\r\n                                        m('span.input-group-addon.text-no-select', this.opts.resources.perPage),\r\n                                        m('select.form-select', {\r\n                                            id: 'table-items-per-page', onchange: this.setItemsPerPage.bind(this),\r\n                                            value: this.itemsPerPage, disabled: this.loading\r\n                                        }, this.pageOptions)\r\n                                    ])\r\n                                )\r\n                            ])\r\n                        ),\r\n                    m('.table-scrollable', { class: this.opts.editable ? '' : ' table-no-edit' }, [\r\n                        m('.table-area', { onscroll: this.onScroll.bind(this) }, [\r\n                            m('table.table.table-hover.table-sm.table-striped.table-data', [\r\n                                m('colgroup.table-column-group', this.colGroups),\r\n                                m('thead', {\r\n                                    ontouchstart: this.touchHandler.bind(this),\r\n                                    ontouchend: this.touchHandler.bind(this),\r\n                                    ontouchmove: this.touchHandler.bind(this),\r\n                                    ontouchcancel: this.touchHandler.bind(this)\r\n                                }, [m('tr', this.opts.columns.map(this.tableHeaders.bind(this)))]),\r\n                                m('tbody', this.tableBodyView())\r\n                            ])\r\n                        ])\r\n                    ]),\r\n                    this.tableFooterView()\r\n                ]);\r\n        },\r\n\r\n        /**\r\n         * Build a single table cell.\r\n         * @param {Object} obj - Table record to build cell for.\r\n         * @param {number} index - Row index of this row.\r\n         * @param {Object} column - Column to build cell for.\r\n         * @returns {Object} Mithril TD node.\r\n         */\r\n        tableCellView: function(obj, index, column) {\r\n            return m('td', this.columnRenderer[column.field](obj, column, index));\r\n        },\r\n\r\n        /**\r\n         * Build a table row.\r\n         * @param {Object} obj - Table record to build row for.\r\n         * @param {number} index - Row index of this row.\r\n         * @returns {Object} Mithril TR node.\r\n         */\r\n        tableRowView: function(obj, index) {\r\n            return m('tr', { key: obj._index }, this.opts.columns.map(this.tableCellView.bind(this, obj, index)));\r\n        },\r\n\r\n        /**\r\n         * Build the table footer nodes\r\n         * @returns {Object} Mithril TR node(s).\r\n         */\r\n        tableBodyView: function() {\r\n            if (this.loading) {\r\n                return m('tr', m('td', { colspan: this.opts.columns.length }, m('.loading.loading-lg')));\r\n            }\r\n            if (this.loadingError) {\r\n                return m('tr.table-loading-error', m('td', { colspan: this.opts.columns.length }, [\r\n                    m('.table-loading-error-message', this.opts.resources.loadingError),\r\n                    m('.btn.btn-info', { onclick: this.refresh.bind(this) }, this.opts.resources.tryAgain)\r\n                ]));\r\n            }\r\n            if (this.filteredTotal === 0) {\r\n                return m('tr', [m('td', { colspan: this.opts.columns.length }, this.opts.resources.noData)]);\r\n            }\r\n            return this.results.map(this.tableRowView.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Build the table footer nodes.\r\n         * @returns {Object} Mithril DIV node.\r\n         */\r\n        tableFooterView: function() {\r\n            if (this.loading || this.loadingError) {\r\n                return null;\r\n            }\r\n\r\n            var currentPage = (this.currentStartItem + this.itemsPerPage) / this.itemsPerPage;\r\n            if (this.opts.pageDropdown) {\r\n                // limit page dropdown to 10000 options\r\n                var max = Math.min(this.pageTotal, 10000);\r\n                var optionList = [max], i = max;\r\n                while (i > 0) {\r\n                    optionList[i] = m('option', { value: i }, i);\r\n                    --i;\r\n                }\r\n            }\r\n\r\n            var res = this.opts.resources;\r\n            return m('.container', m('.columns.m-2', [\r\n                m('.col-4.btn-toolbar', { class: this.filteredTotal > this.itemsPerPage ? '' : ' invisible' }, [\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.firstPage, onclick: this.moveToPage.bind(this, -1, true)\r\n                    }, m('i.dash.dash-to-start-alt.text-primary')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.previousPage, onclick: this.moveToPage.bind(this, -1, false)\r\n                    }, m('i.dash.dash-to-start.text-primary')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.nextPage, onclick: this.moveToPage.bind(this, 1, false)\r\n                    }, m('i.dash.dash-to-end.text-primary')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.lastPage, onclick: this.moveToPage.bind(this, 1, true)\r\n                    }, m('i.dash.dash-to-end-alt.text-primary'))\r\n                ]),\r\n                m('.col-4', { class: this.filteredTotal > this.itemsPerPage ? '' : ' invisible' },\r\n                    !this.opts.pageDropdown ? null : m('.input-group.col-8.col-mx-auto', [\r\n                        m('span.input-group-addon.text-no-select', res.page),\r\n                        m('select.form-select', { onchange: this.changePage.bind(this), value: currentPage, disabled: this.pageTotal === 0 }, optionList)\r\n                    ])\r\n                ),\r\n                m('.col-4.text-right.my-auto', res.showing\r\n                    .replace('{0}', Math.min(this.currentStartItem + 1, this.filteredTotal))\r\n                    .replace('{1}', Math.min(this.currentStartItem + this.itemsPerPage, this.filteredTotal))\r\n                    .replace('{2}', this.filteredTotal)\r\n                )\r\n            ]));\r\n        },\r\n\r\n        destroy: function() {\r\n            // @todo Test and make sure this is firing correctly\r\n            if (this.opts.editable) {\r\n                $.off(window, 'resize', this.events.resize);\r\n                $.off(window, 'mousemove', this.events.move);\r\n                $.off(window, 'mouseup', this.events.up);\r\n            }\r\n        },\r\n\r\n        oninit: function(vnode) {\r\n            var opts = vnode.attrs || {};\r\n\r\n            var data = null;\r\n            if (opts.data) {\r\n                data = opts.data;\r\n                delete opts.data;\r\n            }\r\n\r\n            this.opts = $.extend({\r\n                content: null,\r\n                id: null,\r\n                columns: [],\r\n                url: '',\r\n                requestMethod: 'GET',\r\n                requestUsePascalCase: true,\r\n                requestParams: {},\r\n                searchable: true,\r\n                loadAllData: true,\r\n                inputTimeout: 200,\r\n                columnMinWidth: 50,\r\n                width: 100,\r\n                editable: true,\r\n                pageDropdown: true,\r\n                headerButtons: null,\r\n                storageFunction: null,\r\n                itemsPerPage: null,\r\n                searchQuery: null,\r\n                currentStartItem: null,\r\n                sorting: null,\r\n                dataCallback: null,\r\n                errorCallback: null,\r\n                dataDateFormat: 'YYYY-MM-DD HH:mm:ss',\r\n                displayDateFormat: 'YYYY-MM-DD HH:mm',\r\n                displayCurrencyFormat: '{s:$} {[t:,][d:.][p:2]}',\r\n                resources: {\r\n                    firstPage: $.resx('firstPage'),\r\n                    previousPage: $.resx('previousPage'),\r\n                    nextPage: $.resx('nextPage'),\r\n                    lastPage: $.resx('lastPage'),\r\n                    noData: $.resx('noData'),\r\n                    showing: $.resx('showing'),\r\n                    page: $.resx('page') || 'Page',\r\n                    perPage: $.resx('perPage'),\r\n                    loadingError: $.resx('loadingError'),\r\n                    tryAgain: $.resx('tryAgain')\r\n                }\r\n            }, opts);\r\n\r\n            this.layoutSet = false;\r\n            this.data = null;\r\n            this.loading = true;\r\n            this.loadingError = false;\r\n            this.filteredTotal = 0;\r\n            this.results = [];\r\n            this.pageTotal = 0;\r\n            this.totalDistance = 0;\r\n            this.lastSeenAt = { x: null, y: null };\r\n            this.columnRenderer = {};\r\n            this.colGroups = [];\r\n            this.intColumns = [];\r\n            this.dateColumns = [];\r\n            this.currencyColumns = [];\r\n\r\n            var self = this;\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                var column = this.opts.columns[i];\r\n                column.width = $.hasPositiveValue(column.width) ? column.width : this.store(column.field + '.width');\r\n                if (!($.isNull(column.links) || column.links.length === 0)) {\r\n                    column.links = column.links.filter(function(link) {\r\n                        return !$.isNull(link);\r\n                    });\r\n                }\r\n\r\n                this.columnRenderer[column.field] = $.isNull(column.links) || column.links.length === 0 ?\r\n                    function(obj, column) { return self.getDisplayValue(obj[column.field], column.dataType.toLowerCase()); } :\r\n                    function(obj, column) {\r\n                        return column.links.map(function(link) {\r\n                            var label = $.coalesce(link.label, self.getDisplayValue(obj[column.field], column.dataType.toLowerCase()));\r\n                            var attr = $.clone(link.attributes) || {};\r\n                            var href = link.href || null;\r\n                            if (href) {\r\n                                for (var prop in obj) {\r\n                                    if (href.indexOf('{' + prop + '}') > -1 && obj.hasOwnProperty(prop)) {\r\n                                        href = href.replace(new RegExp('{' + prop + '}', 'g'), obj[prop]);\r\n                                    }\r\n                                }\r\n                            }\r\n                            var classes = attr['class'].split(' ');\r\n                            var isBtn = classes.indexOf('btn') !== -1;\r\n                            if (isBtn) {\r\n                                attr['type'] = attr['role'] = 'button';\r\n                            } else {\r\n                                classes.push('btn');\r\n                                classes.push('btn-link');\r\n                            }\r\n                            if (classes.indexOf('dash-ajax') === -1) {\r\n                                classes.push('dash-ajax');\r\n                            }\r\n                            attr['class'] = classes.filter(function(x) { return x && x.length; }).join(' ');\r\n                            attr['data-method'] = link.method ? link.method.toUpperCase() : 'GET';\r\n                            attr['data-href'] = href;\r\n                            attr['title'] = label;\r\n                            attr['onclick'] = $.dialogs.handleAjaxRequest;\r\n                            return m(isBtn ? 'button' : 'a', attr, $.isNull(link.icon) ? label : m('i', { class: 'dash dash-' + link.icon.toLowerCase() }));\r\n                        });\r\n                    };\r\n\r\n                this.colGroups.push(m('col'));\r\n\r\n                var type = column.dataType.toLowerCase();\r\n                if (type === 'int') {\r\n                    this.intColumns.push(column.field);\r\n                } else if (type === 'date') {\r\n                    this.dateColumns.push(column.field);\r\n                } else if (type === 'currency') {\r\n                    this.currencyColumns.push(column.field);\r\n                }\r\n            }\r\n\r\n            if (this.opts.headerButtons) {\r\n                this.opts.headerButtons = this.opts.headerButtons.filter(function(x) { return !$.isNull(x); });\r\n                this.opts.headerButtons.forEach(function(x) {\r\n                    if (!x.attributes.onclick && !x.attributes.target) {\r\n                        x.attributes.onclick = $.dialogs.handleAjaxRequest;\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.itemsPerPage = this.store('itemsPerPage') * 1 || 10;\r\n            this.currentStartItem = this.store('currentStartItem') * 1 || 0;\r\n            this.searchQuery = this.store('searchQuery') || '';\r\n            this.width = this.store('width') * 1 || 100;\r\n            var sorting = this.store('sorting');\r\n            this.sorting = (typeof sorting === 'string' ? JSON.parse(sorting) : sorting) || [];\r\n\r\n            if (data) {\r\n                this.processData({ rows: data });\r\n            } else {\r\n                this.loadData();\r\n            }\r\n        },\r\n\r\n        oncreate: function(vnode) {\r\n            this.content = vnode.dom;\r\n            if (this.opts.editable) {\r\n                this.events = {\r\n                    resize: $.debounce(this.onResize.bind(this), 50),\r\n                    move: this.onMouseMove.bind(this),\r\n                    up: this.onMouseUp.bind(this)\r\n                };\r\n                $.on(window, 'resize', this.events.resize);\r\n                $.on(window, 'mousemove', this.events.move);\r\n                $.on(window, 'mouseup', this.events.up);\r\n            }\r\n\r\n            this.setLayout();\r\n            this.updateLayout();\r\n        },\r\n\r\n        onupdate: function() {\r\n            this.updateLayout();\r\n        }\r\n    };\r\n\r\n    return Table;\r\n});\r\n","/*!\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n * MIT license http://www.opensource.org/licenses/mit-license.php/\r\n * @author Lea Verou http://lea.verou.me\r\n */\r\n(function(root) {\r\n    // Private helper vars\r\n    var lang = /\\blang(?:uage)?-(?!\\*)(\\w+)\\b/i;\r\n\r\n    var _ = prism = {\r\n        util: {\r\n            encode: function(tokens) {\r\n                if (tokens instanceof Token) {\r\n                    return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\r\n                } else if (_.util.type(tokens) === 'Array') {\r\n                    return tokens.map(_.util.encode);\r\n                } else {\r\n                    return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\r\n                }\r\n            },\r\n\r\n            type: function(o) {\r\n                return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\r\n            },\r\n\r\n            // Deep clone a language definition (e.g. to extend it)\r\n            clone: function(o) {\r\n                var type = _.util.type(o);\r\n\r\n                switch (type) {\r\n                    case 'Object':\r\n                        var clone = {};\r\n\r\n                        for (var key in o) {\r\n                            if (o.hasOwnProperty(key)) {\r\n                                clone[key] = _.util.clone(o[key]);\r\n                            }\r\n                        }\r\n\r\n                        return clone;\r\n\r\n                    case 'Array':\r\n                        // Check for existence for IE8\r\n                        return o.map && o.map(function(v) { return _.util.clone(v); });\r\n                }\r\n\r\n                return o;\r\n            }\r\n        },\r\n\r\n        languages: {\r\n            extend: function(id, redef) {\r\n                var lang = _.util.clone(_.languages[id]);\r\n\r\n                for (var key in redef) {\r\n                    lang[key] = redef[key];\r\n                }\r\n\r\n                return lang;\r\n            },\r\n\r\n            /**\r\n             * Insert a token before another token in a language literal\r\n             * As this needs to recreate the object (we cannot actually insert before keys in object literals),\r\n             * we cannot just provide an object, we need anobject and a key.\r\n             * @param inside The key (or language id) of the parent\r\n             * @param before The key to insert before. If not provided, the function appends instead.\r\n             * @param insert Object with the key/value pairs to insert\r\n             * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\r\n             */\r\n            insertBefore: function(inside, before, insert, root) {\r\n                root = root || _.languages;\r\n                var grammar = root[inside];\r\n\r\n                if (arguments.length == 2) {\r\n                    insert = arguments[1];\r\n\r\n                    for (var newToken in insert) {\r\n                        if (insert.hasOwnProperty(newToken)) {\r\n                            grammar[newToken] = insert[newToken];\r\n                        }\r\n                    }\r\n\r\n                    return grammar;\r\n                }\r\n\r\n                var ret = {};\r\n\r\n                for (var token in grammar) {\r\n                    if (grammar.hasOwnProperty(token)) {\r\n                        if (token == before) {\r\n                            for (var newToken in insert) {\r\n                                if (insert.hasOwnProperty(newToken)) {\r\n                                    ret[newToken] = insert[newToken];\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        ret[token] = grammar[token];\r\n                    }\r\n                }\r\n\r\n                // Update references in other language definitions\r\n                _.languages.DFS(_.languages, function(key, value) {\r\n                    if (value === root[inside] && key != inside) {\r\n                        this[key] = ret;\r\n                    }\r\n                });\r\n\r\n                return root[inside] = ret;\r\n            },\r\n\r\n            // Traverse a language definition with Depth First Search\r\n            DFS: function(o, callback, type, visited) {\r\n                visited = visited || {};\r\n                for (var i in o) {\r\n                    if (o.hasOwnProperty(i)) {\r\n                        callback.call(o, i, o[i], type || i);\r\n\r\n                        if (_.util.type(o[i]) === 'Object' && !visited[o[i]]) {\r\n                            visited[o[i]] = true;\r\n                            _.languages.DFS(o[i], callback, null, visited);\r\n                        }\r\n                        else if (_.util.type(o[i]) === 'Array' && !visited[o[i]]) {\r\n                            visited[o[i]] = true;\r\n                            _.languages.DFS(o[i], callback, i, visited);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        plugins: {},\r\n\r\n        highlightAll: function(async, callback) {\r\n            var elements = document.querySelectorAll('code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code');\r\n\r\n            for (var i = 0, element; element = elements[i++];) {\r\n                _.highlightElement(element, async === true, callback);\r\n            }\r\n        },\r\n\r\n        highlightElement: function(element, async, callback) {\r\n            // Find language\r\n            var language, grammar, parent = element;\r\n\r\n            while (parent && !lang.test(parent.className)) {\r\n                parent = parent.parentNode;\r\n            }\r\n\r\n            if (parent) {\r\n                language = (parent.className.match(lang) || [, ''])[1];\r\n                grammar = _.languages[language];\r\n            }\r\n\r\n            // Set language on the element, if not present\r\n            element.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\r\n\r\n            // Set language on the parent, for styling\r\n            parent = element.parentNode;\r\n\r\n            if (/pre/i.test(parent.nodeName)) {\r\n                parent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\r\n            }\r\n\r\n            var code = element.textContent;\r\n\r\n            var env = {\r\n                element: element,\r\n                language: language,\r\n                grammar: grammar,\r\n                code: code\r\n            };\r\n\r\n            if (!code || !grammar) {\r\n                _.hooks.run('complete', env);\r\n                return;\r\n            }\r\n\r\n            _.hooks.run('before-highlight', env);\r\n\r\n            if (async && root.Worker) {\r\n                var worker = new Worker(_.filename);\r\n\r\n                worker.onmessage = function(evt) {\r\n                    env.highlightedCode = evt.data;\r\n\r\n                    _.hooks.run('before-insert', env);\r\n\r\n                    env.element.innerHTML = env.highlightedCode;\r\n\r\n                    callback && callback.call(env.element);\r\n                    _.hooks.run('after-highlight', env);\r\n                    _.hooks.run('complete', env);\r\n                };\r\n\r\n                worker.postMessage(JSON.stringify({\r\n                    language: env.language,\r\n                    code: env.code,\r\n                    immediateClose: true\r\n                }));\r\n            }\r\n            else {\r\n                env.highlightedCode = _.highlight(env.code, env.grammar, env.language);\r\n\r\n                _.hooks.run('before-insert', env);\r\n\r\n                env.element.innerHTML = env.highlightedCode;\r\n\r\n                callback && callback.call(element);\r\n\r\n                _.hooks.run('after-highlight', env);\r\n                _.hooks.run('complete', env);\r\n            }\r\n        },\r\n\r\n        highlight: function(text, grammar, language) {\r\n            var tokens = _.tokenize(text, grammar);\r\n            return Token.stringify(_.util.encode(tokens), language);\r\n        },\r\n\r\n        tokenize: function(text, grammar, language) {\r\n            var Token = _.Token;\r\n\r\n            var strarr = [text];\r\n\r\n            var rest = grammar.rest;\r\n\r\n            if (rest) {\r\n                for (var token in rest) {\r\n                    grammar[token] = rest[token];\r\n                }\r\n\r\n                delete grammar.rest;\r\n            }\r\n\r\n            tokenloop: for (var token in grammar) {\r\n                if (!grammar.hasOwnProperty(token) || !grammar[token]) {\r\n                    continue;\r\n                }\r\n\r\n                var patterns = grammar[token];\r\n                patterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\r\n\r\n                for (var j = 0; j < patterns.length; ++j) {\r\n                    var pattern = patterns[j],\r\n                        inside = pattern.inside,\r\n                        lookbehind = !!pattern.lookbehind,\r\n                        lookbehindLength = 0,\r\n                        alias = pattern.alias;\r\n\r\n                    pattern = pattern.pattern || pattern;\r\n\r\n                    for (var i = 0; i < strarr.length; i++) { // Don’t cache length as it changes during the loop\r\n                        var str = strarr[i];\r\n\r\n                        if (strarr.length > text.length) {\r\n                            // Something went terribly wrong, ABORT, ABORT!\r\n                            break tokenloop;\r\n                        }\r\n\r\n                        if (str instanceof Token) {\r\n                            continue;\r\n                        }\r\n\r\n                        pattern.lastIndex = 0;\r\n\r\n                        var match = pattern.exec(str);\r\n\r\n                        if (match) {\r\n                            if (lookbehind) {\r\n                                lookbehindLength = match[1].length;\r\n                            }\r\n\r\n                            var from = match.index - 1 + lookbehindLength,\r\n                                match = match[0].slice(lookbehindLength),\r\n                                len = match.length,\r\n                                to = from + len,\r\n                                before = str.slice(0, from + 1),\r\n                                after = str.slice(to + 1);\r\n\r\n                            var args = [i, 1];\r\n\r\n                            if (before) {\r\n                                args.push(before);\r\n                            }\r\n\r\n                            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias);\r\n\r\n                            args.push(wrapped);\r\n\r\n                            if (after) {\r\n                                args.push(after);\r\n                            }\r\n\r\n                            Array.prototype.splice.apply(strarr, args);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return strarr;\r\n        },\r\n\r\n        hooks: {\r\n            all: {},\r\n\r\n            add: function(name, callback) {\r\n                var hooks = _.hooks.all;\r\n\r\n                hooks[name] = hooks[name] || [];\r\n\r\n                hooks[name].push(callback);\r\n            },\r\n\r\n            run: function(name, env) {\r\n                var callbacks = _.hooks.all[name];\r\n\r\n                if (!callbacks || !callbacks.length) {\r\n                    return;\r\n                }\r\n\r\n                for (var i = 0, callback; callback = callbacks[i++];) {\r\n                    callback(env);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var Token = _.Token = function(type, content, alias) {\r\n        this.type = type;\r\n        this.content = content;\r\n        this.alias = alias;\r\n    };\r\n\r\n    Token.stringify = function(o, language, parent) {\r\n        if (typeof o == 'string') {\r\n            return o;\r\n        }\r\n\r\n        if (_.util.type(o) === 'Array') {\r\n            return o.map(function(element) {\r\n                return Token.stringify(element, language, o);\r\n            }).join('');\r\n        }\r\n\r\n        var env = {\r\n            type: o.type,\r\n            content: Token.stringify(o.content, language, parent),\r\n            tag: 'span',\r\n            classes: ['token', o.type],\r\n            attributes: {},\r\n            language: language,\r\n            parent: parent\r\n        };\r\n\r\n        if (env.type == 'comment') {\r\n            env.attributes['spellcheck'] = 'true';\r\n        }\r\n\r\n        if (o.alias) {\r\n            var aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\r\n            Array.prototype.push.apply(env.classes, aliases);\r\n        }\r\n\r\n        _.hooks.run('wrap', env);\r\n\r\n        var attributes = '';\r\n\r\n        for (var name in env.attributes) {\r\n            attributes += (attributes ? ' ' : '') + name + '=\"' + (env.attributes[name] || '') + '\"';\r\n        }\r\n\r\n        return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\" ' + attributes + '>' + env.content + '</' + env.tag + '>';\r\n    };\r\n\r\n    root.Prism = prism;\r\n})(this);\r\n\r\nPrism.languages.sql = {\r\n    'comment': {\r\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\w\\W]*?\\*\\/|(?:--|\\/\\/|#).*)/,\r\n        lookbehind: true\r\n    },\r\n    'string': {\r\n        pattern: /(^|[^@\\\\])(\"|')(?:\\\\?[\\s\\S])*?\\2/,\r\n        lookbehind: true\r\n    },\r\n    'variable': /@[\\w.$]+|@(\"|'|`)(?:\\\\?[\\s\\S])+?\\1/,\r\n    'function': /\\b(?:COUNT|SUM|AVG|MIN|MAX|FIRST|LAST|UCASE|LCASE|MID|LEN|ROUND|NOW|FORMAT)(?=\\s*\\()/i, // Should we highlight user defined functions too?\r\n    'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR VARYING|CHARACTER (?:SET|VARYING)|CHARSET|CHECK|CHECKPOINT|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMN|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS|CONTAINSTABLE|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|DATA(?:BASES?)?|DATETIME|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE(?: PRECISION)?|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE KEY|ELSE|ENABLE|ENCLOSED BY|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPE(?:D BY)?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTO|INVOKER|ISOLATION LEVEL|JOIN|KEYS?|KILL|LANGUAGE SQL|LAST|LEFT|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MODIFIES SQL DATA|MODIFY|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL(?: CHAR VARYING| CHARACTER(?: VARYING)?| VARCHAR)?|NATURAL|NCHAR(?: VARCHAR)?|NEXT|NO(?: SQL|CHECK|CYCLE)?|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READ(?:S SQL DATA|TEXT)?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEATABLE|REPLICATION|REQUIRE|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE MODE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|START(?:ING BY)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED BY|TEXT(?:SIZE)?|THEN|TIMESTAMP|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNPIVOT|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?)\\b/i,\r\n    'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\r\n    'number': /\\b-?(?:0x)?\\d*\\.?[\\da-f]+\\b/,\r\n    'operator': /[-+*\\/=%^~]|&&?|\\|?\\||!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\r\n    'punctuation': /[;[\\]()`,.]/\r\n};\r\n","/*!\r\n * Validator that converts HTML5 form validation errors into bootstrap friendly errors.\r\n * Based on the library below, but ported from jQuery to native js.\r\n *\r\n * Validator v0.9.0 for Bootstrap 3, by @1000hz\r\n * Copyright 2015 Cina Saffary\r\n * Licensed under http://opensource.org/licenses/MIT\r\n * https://github.com/1000hz/bootstrap-validator\r\n *\r\n * Modified to use Dash's core library instead of jQuery, with unneeded functionality removed.\r\n */\r\n(function(root, factory) {\r\n    root.Validator = factory(root.$);\r\n})(this, function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare validator class.\r\n     * @param {Node} element - Form to validate.\r\n     * @param {Object} errorMsgs - Error messages for custom errors.\r\n     */\r\n    var Validator = function(element, errorMsgs) {\r\n        this.element = element;\r\n        this.element.setAttribute('novalidate', true); // disable automatic native validation\r\n        this.errorMsgs = $.extend({}, Validator._errors, errorMsgs || {});\r\n\r\n        var inputs = $.getAll('[data-match]', this.element);\r\n        for (var i = 0; i < inputs.length; i++) {\r\n            // add the data match attribute to the target if it doesn't already exist\r\n            var target = inputs[i].getAttribute('data-match');\r\n            if (target) {\r\n                var targetElement = $.get('#' + target, this.element);\r\n                if (targetElement && !targetElement.hasAttribute('data-match')) {\r\n                    targetElement.setAttribute('data-match', inputs[i].id);\r\n                }\r\n            }\r\n        }\r\n\r\n        // check for pre-existing error classes because razor is weird sometimes\r\n        this.resetAll();\r\n\r\n        $.on(this.element, 'input', this.validateInput.bind(this));\r\n        $.on(this.element, 'change', this.validateInput.bind(this));\r\n        $.on(this.element, 'focusout', this.validateInput.bind(this));\r\n        $.on(this.element, 'submit', this.onSubmit.bind(this));\r\n        $.on(this.element, 'formValidate', this.validate.bind(this));\r\n    };\r\n\r\n    /**\r\n     * Default error messages for custom errors.\r\n     * @type {Object}\r\n     */\r\n    Validator._errors = {\r\n        match: '{0} does not match {1}.',\r\n        minlength: 'This field is not long enough.'\r\n    };\r\n\r\n    /**\r\n     * Functions to validate inputs against.\r\n     * @type {Object}\r\n     */\r\n    Validator.VALIDATORS = {\r\n        'native': function(el) {\r\n            return el.checkValidity();\r\n        },\r\n        'match': function(el) {\r\n            var target = $.get('#' + el.getAttribute('data-match'), this.element);\r\n            var res = !target ? false : el.value === target.value;\r\n            if (res) {\r\n                el.setCustomValidity('');\r\n            } else {\r\n                el.setCustomValidity(this.errorMsgs.match.replace('{0}', el.name).replace('{1}', el.getAttribute('data-match')));\r\n            }\r\n            return res;\r\n        },\r\n        'minlength': function(el) {\r\n            var minlength = el.getAttribute('data-minlength');\r\n            var res = !el.value || el.value.length >= minlength;\r\n            if (res) {\r\n                el.setCustomValidity('');\r\n            } else {\r\n                el.setCustomValidity(this.errorMsgs.minlength);\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n\r\n    Validator.prototype = {\r\n        /**\r\n         * Validate a single input element.\r\n         * @param {Node} e - Element to validate\r\n         */\r\n        validateInput: function(e) {\r\n            var el;\r\n            if (this.isValidatableInput(e)) {\r\n                el = e;\r\n            } else if (e.target && this.isValidatableInput(e.target)) {\r\n                el = e.target;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            if (el.type === 'radio') {\r\n                el = $.getAll('input[name=\"' + el.getAttribute('name') + '\"]', self.element);\r\n            }\r\n\r\n            if (e.defaultPrevented) {\r\n                return;\r\n            }\r\n\r\n            var errors = this.runValidators(el);\r\n            if (errors.length) {\r\n                self.showErrors(el, errors);\r\n            } else {\r\n                self.clearErrors(el);\r\n                if (el.getAttribute('data-match')) {\r\n                    self.clearErrors($.get('#' + el.getAttribute('data-match'), self.element));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get all the validatable inputs in the form.\r\n         * @returns {Node[]} Array of input elements.\r\n         */\r\n        inputSelector: function() {\r\n            var inputs = $.getAll('input,select,textarea', this.element);\r\n            var length = inputs.length, i = 0, results = [];\r\n            for (; i < length; i++) {\r\n                var input = inputs[i];\r\n                if (input.type !== 'submit' && input.type !== 'button' && !input.getAttribute('disabled') && input.style.visibility !== 'hidden') {\r\n                    results.push(input);\r\n                } else {\r\n                    // remove error class on disabled items\r\n                    $.removeClass(input, 'form-control-error');\r\n                }\r\n            }\r\n            return results;\r\n        },\r\n\r\n        /**\r\n         * Get all the inputs in the form and remove error styling.\r\n         */\r\n        resetAll: function() {\r\n            $.getAll('input,select,textarea', this.element).forEach(function(x) {\r\n                $.removeClass(x, 'form-control-error');\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Check if a node is an input that can be validated.\r\n         * @param {Node} input - Node to check.\r\n         * @returns {bool} True if input is an input that can be validated.\r\n         */\r\n        isValidatableInput: function(input) {\r\n            return (input.tagName === 'INPUT' || input.tagName === 'SELECT' || input.tagName === 'TEXTAREA') && !input.getAttribute('disabled') && input.style.visibility !== 'hidden';\r\n        },\r\n\r\n        /**\r\n         * Run all of the validator functions against an element.\r\n         * @param {Node} el - Element to validate.\r\n         * @returns {string[]} Array of error messages.\r\n         */\r\n        runValidators: function(el) {\r\n            var errors = [];\r\n\r\n            for (var key in Validator.VALIDATORS) {\r\n                if (Validator.VALIDATORS.hasOwnProperty(key)) {\r\n                    var validator = Validator.VALIDATORS[key];\r\n                    var attr = el.getAttribute('data-' + key);\r\n                    if ((attr || key === 'native') && !validator.call(this, el)) {\r\n                        var error = el.getAttribute('data' + key + '-error') || el.getAttribute('data-error') || (key === 'native' ? el.validationMessage : this.errorMsgs[key]);\r\n                        if (key === 'match') {\r\n                            error = error.replace('{0}', el.name).replace('{1}', attr);\r\n                        }\r\n                        !~errors.indexOf(error) && errors.push(error);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        validate: function() {\r\n            var inputs = this.inputSelector();\r\n            var length = inputs.length, i = 0;\r\n            for (; i < length; i++) {\r\n                this.validateInput(inputs[i]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Display errors for an element.\r\n         * @param {Node} el - Element to display errors for.\r\n         * @param {string[]} errors - List of error messages.\r\n         */\r\n        showErrors: function(el, errors) {\r\n            if (!errors.length) {\r\n                return;\r\n            }\r\n\r\n            var group = $.closest('.form-group', el);\r\n            var block = $.get('.help-block.with-errors', group);\r\n\r\n            if (block) {\r\n                var errorElement = document.createElement('ul');\r\n                $.addClass(errorElement, 'list-unstyled');\r\n\r\n                var errHtml = '', i = 0, len = errors.length;\r\n                for (; i < len; i++) {\r\n                    errHtml += '<li>' + errors[i] + '</li>';\r\n                }\r\n                errorElement.innerHTML = errHtml;\r\n\r\n                block.innerHTML = '';\r\n                block.appendChild(errorElement);\r\n            }\r\n\r\n            $.addClass(el, 'form-control-error');\r\n\r\n            var tab = $.closest('.tab-pane', el);\r\n            if (tab) {\r\n                // add error class to tab\r\n                var id = tab.getAttribute('aria-labelledby');\r\n                if (id) {\r\n                    $.addClass($.get('#' + id), 'tab-validation-error');\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Hide all error messages for an element.\r\n         * @param {Node} el - Element to hide errors for.\r\n         */\r\n        clearErrors: function(el) {\r\n            $.removeClass(el, 'form-control-error');\r\n\r\n            var group = $.closest('.form-group', el);\r\n            if (group) {\r\n                var block = $.get('.help-block.with-errors', group);\r\n                if (block) {\r\n                    block.innerHTML = '';\r\n                }\r\n            }\r\n            var tab = $.closest('.tab-pane', el);\r\n            if (tab) {\r\n                if ($.getAll('.form-control-error', tab).length == 0) {\r\n                    var id = tab.getAttribute('aria-labelledby');\r\n                    if (id) {\r\n                        $.removeClass($.get('#' + id), 'tab-validation-error');\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check if the validator found any errors.\r\n         * @returns {bool} True if there are any errors.\r\n         */\r\n        hasErrors: function() {\r\n            return $.getAll('.form-control-error', this.element).length;\r\n        },\r\n\r\n        /**\r\n         * Validate the form and prevent submit if there are errors.\r\n         * @param {Event} e - Form submit event.\r\n         */\r\n        onSubmit: function(e) {\r\n            this.validate();\r\n            if (this.hasErrors()) {\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    };\r\n\r\n    return Validator;\r\n});\r\n","/*!\r\n * Wraps functionality needed to display a dashboard widget.\r\n */\r\n(function(root, factory) {\r\n    root.Widget = factory(root.m, root.$, root.Alertify, root.Table, root.DashChart, root.Draggabilly, root.Rect);\r\n})(this, function(m, $, Alertify, Table, DashChart, Draggabilly, Rect) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Use object properties to make class list for a widget container.\r\n     * @param {Object} obj - Widget properties.\r\n     * @returns {string} CSS class list.\r\n     */\r\n    var buildClassList = function(obj) {\r\n        return 'grid-item grid-item-width-' + obj.width + ' grid-item-height-' + obj.height +\r\n            ' grid-item-x-' + obj.x + ' grid-item-y-' + obj.y;\r\n    };\r\n\r\n    /**\r\n     * Declare Widget class.\r\n     * @param {Object} opts - Widget settings\r\n     */\r\n    var Widget = function(opts) {\r\n        this.init(opts);\r\n\r\n        // attach this to the container for reference in the dashboard\r\n        var container = this.getContainer();\r\n        container.widget = this;\r\n    };\r\n\r\n    Widget.prototype = {\r\n        /**\r\n         * Initialize the widget.\r\n         * @param {Object} opts - Widget settings\r\n         */\r\n        init: function(opts) {\r\n            opts.isData = $.coalesce(opts.isData, true);\r\n            opts.refreshSeconds = $.coalesce(opts.refreshSeconds, 0);\r\n            opts.baseUrl = $.get('body').getAttribute('data-base-url');\r\n            this.opts = opts;\r\n\r\n            this.id = opts.id;\r\n            this.chart = null;\r\n            this.interval = null;\r\n            this.isFullscreen = false;\r\n            this.initDate = new Date();\r\n            this.dragMargin = 0;\r\n            this.updatedDate = new Date();\r\n\r\n            if (opts.isData) {\r\n                this.tableOpts = {\r\n                    id: 'widgetTable_' + opts.id,\r\n                    url: opts.url,\r\n                    requestMethod: 'POST',\r\n                    requestParams: { Id: opts.reportId },\r\n                    loadAllData: false,\r\n                    editable: false,\r\n                    itemsPerPage: opts.reportRowLimit || 10,\r\n                    currentStartItem: 0,\r\n                    sorting: opts.sortColumns,\r\n                    storageFunction: $.noop,\r\n                    width: Math.max(opts.reportWidth || 100, 100),\r\n                    columns: opts.columns,\r\n                    dataCallback: this.processJson.bind(this),\r\n                    errorCallback: this.onError.bind(this),\r\n                    displayDateFormat: opts.displayDateFormat,\r\n                    displayCurrencyFormat: opts.displayCurrencyFormat\r\n                };\r\n            }\r\n\r\n            this.render();\r\n\r\n            var container = this.getContainer();\r\n            this.rect = new Rect(opts.width, opts.height, opts.x, opts.y);\r\n            this.setupDraggie(container);\r\n\r\n            if (!opts.isData) {\r\n                this.chart = new DashChart(container, false, this.processJson.bind(this), this.onError.bind(this));\r\n            }\r\n            if (opts.refreshSeconds > 0) {\r\n                this.interval = setInterval(this.refresh.bind(this), opts.refreshSeconds * 1000);\r\n            }\r\n\r\n            if (opts.title) {\r\n                $.setText($.get('.grid-title', container), opts.title);\r\n            }\r\n        },\r\n\r\n        render: function() {\r\n            var parentNode = $.get('#widget_' + this.opts.id);\r\n            var firstRender = !parentNode;\r\n\r\n            if (firstRender) {\r\n                // have to create the parent node by hand first - rendering multiple views to the same parentNode with mithril causes an overwrite\r\n                parentNode = $.createNode();\r\n                parentNode.id = 'widget_' + this.opts.id;\r\n                parentNode.setAttribute('data-url', this.opts.url);\r\n                parentNode.className = buildClassList(this.opts);\r\n                $.get('#dashboard').appendChild(parentNode);\r\n            }\r\n\r\n            var self = this;\r\n            // now render the rest of the widget content\r\n            m.mount(parentNode, {\r\n                view: function() {\r\n                    return [\r\n                        m('.grid-header.columns', [\r\n                            m('span.grid-title.col-8', self.opts.title),\r\n                            m('span.grid-buttons.col-4.text-right', [\r\n                                m('a.btn.btn-link.btn-refresh', { title: $.resx('refresh'), onclick: self.forceRefresh.bind(self) },\r\n                                    m('i.dash.dash-arrows-cw')\r\n                                ),\r\n                                m('a.btn.btn-link.btn-fullscreen', { title: $.resx('toggleFullScreen'), onclick: self.toggleFullScreen.bind(self) },\r\n                                    m('i.dash.dash-max')\r\n                                ),\r\n                                m('a.btn.btn-link.dash-ajax.fs-disabled', {\r\n                                    href: self.opts.baseUrl + (self.opts.isData ? 'Report' : 'Chart') + '/Details/' + (self.opts.isData ? self.opts.reportId : self.opts.chartId),\r\n                                    title: $.resx(self.opts.isData ? 'viewReport' : 'viewChart')\r\n                                }, m('i.dash.dash-info')),\r\n                                m('a.btn.btn-link.dash-ajax.fs-disabled', { href: self.opts.baseUrl + 'Dashboard/Edit/' + self.opts.id, title: $.resx('editWidget') },\r\n                                    m('i.dash.dash-pencil')\r\n                                ),\r\n                                m('a.btn.btn-link.dash-ajax.fs-disabled', { title: $.resx('deleteWidget'), onclick: self.deleteWidget.bind(self) },\r\n                                    m('i.dash.dash-trash')\r\n                                )\r\n                            ])\r\n                        ]),\r\n                        m('.grid-body', [\r\n                            self.opts.isData ? m('.widget-data', { id: 'widgetData_' + self.opts.id }, m(Table, self.tableOpts)) :\r\n                                m('.widget-chart', { id: 'widgetChart_' + self.opts.id }, [\r\n                                    m('.chart-spinner', m('.loading.loading-lg')),\r\n                                    m('.chart-error.d-none.pl-1',\r\n                                        m('div', [\r\n                                            m('p', $.resx('errorChartLoad')),\r\n                                            m('.btn.btn-info.btn-sm', { onclick: self.refresh.bind(self) }, $.resx('tryAgain'))\r\n                                        ])\r\n                                    ),\r\n                                    m('.canvas-container', m('canvas.chart-canvas.d-none'))\r\n                                ])\r\n                        ]),\r\n                        m('.grid-footer', [\r\n                            m('span.grid-updated-time', self.updatedDate.toLocaleTimeString()),\r\n                            m('span.resizable-handle.float-right', m('i.dash.dash-corner')),\r\n                            m('span.drag-handle.float-right', m('i.dash.dash-move'))\r\n                        ])\r\n                    ];\r\n                }\r\n            });\r\n\r\n            if (firstRender) {\r\n                // add our system wide events\r\n                $.dialogs.processContent($.get('#widget_' + this.opts.id));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the container element for the widget.\r\n         * @returns {Node} DOM node that contains the widget content.\r\n         */\r\n        getContainer: function() {\r\n            return $.get('#widget_' + this.opts.id);\r\n        },\r\n\r\n        /**\r\n         * Add the draggabilly handlers.\r\n         * @param {Node} container - DOM node that contains the widget content.\r\n         * @param {Object} grid - Object that contains the grid columnWidth and rowHeight.\r\n         */\r\n        setupDraggie: function(container, grid) {\r\n            container = $.coalesce(container, this.getContainer());\r\n            var g = this.opts.grid = $.coalesce(grid, this.opts.grid);\r\n\r\n            $.destroy(this.moveDraggie);\r\n            this.moveDraggie = new Draggabilly(container, { handle: '.drag-handle', grid: [g.columnWidth, g.rowHeight], minZero: true }).on('dragEnd', this.stopDrag.bind(this));\r\n\r\n            $.destroy(this.resizeDraggie);\r\n            var handle = $.get('.resizable-handle', container);\r\n            this.resizeDraggie = new Draggabilly(handle, { grid: [g.columnWidth, g.rowHeight] }).on('dragStart', this.initResize.bind(this)).on('dragEnd', this.stopResize.bind(this));\r\n\r\n            var style = handle.currentStyle || window.getComputedStyle(handle);\r\n            this.dragMargin = style.marginRight.replace('px', '') * 1;\r\n        },\r\n\r\n        /**\r\n         * Stop dragging the widget and updates its location.\r\n         */\r\n        stopDrag: function() {\r\n            var x = Math.max(Math.round(this.moveDraggie.position.x / this.opts.grid.columnWidth), 0);\r\n            var y = Math.max(Math.round(this.moveDraggie.position.y / this.opts.grid.rowHeight), 0);\r\n            if (x + this.rect.width > this.opts.grid.columns) {\r\n                x = this.opts.grid.columns - this.rect.width;\r\n            }\r\n            if (y + this.rect.height > this.opts.grid.rows) {\r\n                y = this.opts.grid.rows - this.rect.height;\r\n            }\r\n            this.setLocation(x, y);\r\n            this.rect.updated = true;\r\n            this.opts.layoutCallback();\r\n        },\r\n\r\n        /**\r\n         * Start resizing a widget\r\n         * @param {Event} event - Original mousedown or touchstart event\r\n         */\r\n        initResize: function(event) {\r\n            // clear any selection so browser doesn't think we are dragging the selection\r\n            window.getSelection().removeAllRanges();\r\n\r\n            var container = this.getContainer();\r\n            container.style['z-index'] = 9999;\r\n            var pos = event.changedTouches ? event.changedTouches[0] : event;\r\n            this.x = pos.clientX;\r\n            this.y = pos.clientY;\r\n\r\n            var styles = document.defaultView.getComputedStyle(container);\r\n            this.width = styles.width.replace('px', '') * 1;\r\n            this.height = styles.height.replace('px', '') * 1;\r\n\r\n            if (event.target !== event.currentTarget) {\r\n                event.stopPropagation();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update the widget after the user finishes resizing.\r\n         */\r\n        stopResize: function() {\r\n            var container = this.getContainer();\r\n            var w = Math.max(this.width + this.resizeDraggie.position.x + this.dragMargin, this.opts.grid.columnWidth * 4);\r\n            var h = Math.max(this.height + this.resizeDraggie.position.y, this.opts.grid.rowHeight * 4);\r\n\r\n            this.setSize(Math.min(Math.round(w / this.opts.grid.columnWidth), this.opts.grid.columns), Math.min(Math.round(h / this.opts.grid.rowHeight), this.opts.grid.rows));\r\n\r\n            var handle = $.get('.resizable-handle', container);\r\n            if (handle) {\r\n                handle.removeAttribute('style');\r\n            }\r\n\r\n            this.opts.layoutCallback();\r\n            this.updateLayout();\r\n            this.rect.updated = true;\r\n        },\r\n\r\n        deleteWidget: function() {\r\n            var self = this;\r\n            Alertify.confirm($.resx('areYouSure'), function() {\r\n                $.ajax({\r\n                    method: 'DELETE',\r\n                    url: self.opts.baseUrl + 'Dashboard/Delete/' + self.opts.id\r\n                }, self.destroy.bind(self));\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Handle the result of a query for report data.\r\n         * @param {Object} json - Data to display in the widget.\r\n         * @returns {bool} True if the json data is valid\r\n         */\r\n        processJson: function(json) {\r\n            if (json.updatedDate && this.initDate) {\r\n                var updateDate = new Date(json.updatedDate);\r\n                if (updateDate && updateDate > this.initDate) {\r\n                    this.reload();\r\n                    return false;\r\n                }\r\n            }\r\n            if ((this.opts.isData && $.isNull(json.rows)) || (!this.opts.isData && ($.isNull(json.ranges) || json.ranges.length === 0))) {\r\n                Alertify.error($.resx('errorConnectingToDataSource'));\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Reload the widget options and reinitialize.\r\n         * @param {bool} showMsg - If true show the widget reloaded message to the user.\r\n         * @param {Object} options - Options to use to reload the widget instead of requesting from the server.\r\n         */\r\n        reload: function(showMsg, options) {\r\n            var callback = function(opts) {\r\n                this.destroy(false);\r\n                this.init($.extend(this.opts, opts));\r\n                if ($.coalesce(showMsg, true)) {\r\n                    Alertify.success($.resx('widgetReloaded').replace('{0}', this.opts.title));\r\n                }\r\n                return;\r\n            };\r\n\r\n            if (!$.isNull(options)) {\r\n                callback.call(this, options);\r\n            } else {\r\n                $.ajax({ method: 'GET', url: this.opts.baseUrl + 'Dashboard/WidgetOptions/' + this.opts.id }, callback.bind(this));\r\n            }\r\n        },\r\n\r\n        refresh: function() {\r\n            if ($.dialogs.hasOpenDialog()) {\r\n                // don't refresh when a dialog is open\r\n                return;\r\n            }\r\n\r\n            if (this.opts.isData) {\r\n                $.dispatch($.get('.dash-table', this.getContainer()), $.events.tableRefresh);\r\n            } else {\r\n                this.chart.run();\r\n            }\r\n\r\n            this.updatedDate = new Date();\r\n        },\r\n\r\n        updateLayout: function() {\r\n            if (this.opts.isData) {\r\n                $.dispatch($.get('.dash-table', this.getContainer()), $.events.layoutUpdate);\r\n            } else {\r\n                this.chart.resize();\r\n            }\r\n        },\r\n\r\n        forceRefresh: function() {\r\n            if (this.opts.refreshSeconds > 0) {\r\n                clearInterval(this.interval);\r\n                this.interval = setInterval(this.refresh.bind(this), this.opts.refreshSeconds * 1000);\r\n            }\r\n            this.refresh();\r\n        },\r\n\r\n        /**\r\n         * Refresh the style based on the dimensions.\r\n         * @param {number} width - New width of the widget.\r\n         * @param {number} height - New height of the widget.\r\n         */\r\n        setSize: function(width, height) {\r\n            this.rect.width = width;\r\n            this.rect.height = height;\r\n            this.updateStyle();\r\n        },\r\n\r\n        /**\r\n         * Refresh the style based on the dimensions.\r\n         * @param {number} x - New x coordinate of the widget.\r\n         * @param {number} y - New y coordinate of the widget.\r\n         */\r\n        setLocation: function(x, y) {\r\n            this.rect.x = x;\r\n            this.rect.y = y;\r\n            this.updateStyle();\r\n        },\r\n\r\n        /**\r\n        * Refresh the style based on the dimensions.\r\n        */\r\n        updateStyle: function() {\r\n            var container = this.getContainer();\r\n            container.className = buildClassList(this.rect);\r\n            container.removeAttribute('style');\r\n        },\r\n\r\n        /**\r\n         * Handle an error.\r\n         * @returns {bool} Always returns true.\r\n         */\r\n        onError: function() {\r\n            if (this.interval) {\r\n                clearInterval(this.interval);\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Destroy the widget.\r\n         * @param {bool} totalDestruction - Remove the container node and null out the widget object if true.\r\n         */\r\n        destroy: function(totalDestruction) {\r\n            if (this.opts.isData) {\r\n                $.dispatch($.get('.dash-table', this.getContainer()), $.events.tableDestroy);\r\n            } else {\r\n                $.destroy(this.chart);\r\n            }\r\n\r\n            $.destroy(this.moveDraggie);\r\n            $.destroy(this.resizeDraggie);\r\n\r\n            if (this.interval) {\r\n                clearInterval(this.interval);\r\n                this.interval = null;\r\n            }\r\n\r\n            if ($.coalesce(totalDestruction, true)) {\r\n                var container = this.getContainer();\r\n                container.widget = null;\r\n                container.parentNode.removeChild(container);\r\n            }\r\n        },\r\n\r\n        toggleFullScreen: function() {\r\n            var container = this.getContainer();\r\n            var fullScreenIcon = $.get('.btn-fullscreen i', container);\r\n            $.toggleClass(container, 'full-screen', !this.isFullscreen);\r\n            $.toggleClass(fullScreenIcon, 'dash-min', !this.isFullscreen);\r\n            $.toggleClass(fullScreenIcon, 'dash-max', this.isFullscreen);\r\n            var isFullscreen = this.isFullscreen;\r\n            $.getAll('.fs-disabled', container).forEach(function(x) { $.toggleClass(x, 'disabled', !isFullscreen); });\r\n            this.isFullscreen = !this.isFullscreen;\r\n            this.updateLayout();\r\n        }\r\n    };\r\n\r\n    return Widget;\r\n});\r\n","/*!\r\n * Mithril based form component. For repetitive form elements.\r\n */\r\n(function(root, factory) {\r\n    root.Form = factory(root.m, root.$, root.Alertify, root.Help);\r\n})(this, function(m, $, Alertify, Help) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare form class.\r\n     * @param {Object} opts - Form settings\r\n     * @param {Object[]} records - Array of objects the form will display/update.\r\n     */\r\n    function Form(opts, records) {\r\n        opts = opts || {};\r\n        this.opts = $.extend({\r\n            container: null,\r\n            id: null,\r\n            columns: null,\r\n            wantsHelp: false,\r\n            appendRecord: false,\r\n            resx: {\r\n                deleteRecord: $.resx('delete'),\r\n                confirmDelete: $.resx('confirmDelete'),\r\n                confirmDeleteAll: $.resx('confirmDeleteAll'),\r\n                areYouSure: $.resx('areYouSure'),\r\n                moveUp: $.resx('moveUp'),\r\n                moveDown: $.resx('moveDown'),\r\n                help: $.resx('help')\r\n            }\r\n        }, opts);\r\n\r\n        this.container = $.get(this.opts.container);\r\n        this.records = $.isArray(records) ? records.map(function(x, i) { x._index = i; return x; }) : [];\r\n        this.addedCount = 0;\r\n        this.changed = false;\r\n    }\r\n\r\n    Form.prototype = {\r\n        /**\r\n         * Get the value of an element.\r\n         * @param {*} e - Event that triggered the value change, or the new value.\r\n         * @returns {string} Value of the element.\r\n         */\r\n        targetVal: function(e) {\r\n            return e && e.target ? e.target.value : e;\r\n        },\r\n\r\n        /**\r\n         * Set the value of a field on a record.\r\n         * @param {number} index - Record index.\r\n         * @param {string} field - Name of field to set.\r\n         * @param {Event} e - Event that triggered the change.\r\n         * @returns {bool} True if value changed, else false.\r\n         */\r\n        set: function(index, field, e) {\r\n            var val = this.targetVal(e);\r\n            if (this.opts.columns[field].type === 'int') {\r\n                val = $.isNull(val) ? null : val * 1;\r\n            }\r\n\r\n            if ($.isFunction(this.opts.columns[field].setter)) {\r\n                this.opts.columns[field].setter.call(this, index, field, e);\r\n            } else {\r\n                if (this.records[index][field] !== val) {\r\n                    this.records[index][field] = val;\r\n                    this.changed = true;\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        addRecord: function() {\r\n            --this.addedCount;\r\n            var obj = $.clone(this.opts.newRecord);\r\n            obj._index = this.addedCount;\r\n            if (this.opts.appendRecord) {\r\n                this.records.push(obj);\r\n            } else {\r\n                this.records.unshift(obj);\r\n            }\r\n            this.changed = true;\r\n        },\r\n\r\n        /**\r\n         * Delete a record.\r\n         * @param {number} index - Record index to delete.\r\n         * @param {Event} e - Event that triggered the delete.\r\n         */\r\n        deleteRecord: function(index, e) {\r\n            var self = this;\r\n            if ($.isFunction(this.opts.deleteFn)) {\r\n                this.opts.deleteFn.call(this, index, e);\r\n            } else {\r\n                // timeout prevents hitting enter on the button to trigger this confirmation from confirming it immediately\r\n                setTimeout(function() {\r\n                    Alertify.confirm(self.opts.resx.areYouSure, function(e) {\r\n                        self.records.splice(index, 1);\r\n                        if ($.isFunction(self.opts.afterDeleteFn)) {\r\n                            self.opts.afterDeleteFn.call(self, index, e);\r\n                        }\r\n                        self.changed = true;\r\n                        self.run();\r\n                    });\r\n                }, 100);\r\n            }\r\n        },\r\n\r\n        deleteAllRecords: function() {\r\n            var self = this;\r\n            setTimeout(function() {\r\n                Alertify.confirm(self.opts.resx.areYouSure, function() {\r\n                    self.records = [];\r\n                    self.changed = true;\r\n                    self.run();\r\n                });\r\n            }, 100);\r\n        },\r\n\r\n        /**\r\n         * Move a record up in the record list.\r\n         * @param {number} index - Index of record to move up.\r\n         */\r\n        moveUp: function(index) {\r\n            var t = this.records[index - 1];\r\n            if (t) {\r\n                this.records[index - 1] = this.records[index];\r\n                this.records[index] = t;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Move a record down in the record list.\r\n         * @param {number} index - Index of record to move down.\r\n         */\r\n        moveDown: function(index) {\r\n            var t = this.records[index + 1];\r\n            if (t) {\r\n                this.records[index + 1] = this.records[index];\r\n                this.records[index] = t;\r\n            }\r\n        },\r\n\r\n        hasRecords: function() {\r\n            return this.records && this.records.length > 0;\r\n        },\r\n\r\n        /**\r\n         * Trigger the click event if the enter or space key is hit.\r\n         * @param {Event} e - Event that triggered this.\r\n         */\r\n        keyInput: function(e) {\r\n            if (e && e.keyCode && (e.keyCode === 13 || e.keyCode === 32)) {\r\n                e.target.onclick.call(this, e);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Create the mithril node to show help wrapped around the provided content.\r\n         * @param {string} helpBody - Content of the help dialog.\r\n         * @param {Object} innerContent - Mithril node for the input that help is for.\r\n         * @returns {Object} Mithril node for input-group if help is enabled, else innerContent.\r\n         */\r\n        withHelp: function(helpBody, innerContent) {\r\n            return m(Help, { message: helpBody, enabled: this.opts.wantsHelp }, innerContent);\r\n        },\r\n\r\n        /**\r\n         * Return the error class if the value isn't valid.\r\n         * @param {string|number} value - Value to check against.\r\n         * @param {bool} requirePositive - Require the value be a positive number.\r\n         * @param {bool} isDate - Check if the value is a valid date.\r\n         * @returns {string}  Error class name if value isn't set, else empty string.\r\n         */\r\n        withError: function(value, requirePositive, isDate) {\r\n            requirePositive = $.coalesce(requirePositive, false);\r\n            isDate = $.coalesce(isDate, false);\r\n            var result = isDate ? $.fecha.parse(value, this.opts.dateFormat) : $.hasValue(value) && (!requirePositive || $.hasPositiveValue(value));\r\n            return result ? '' : ' mform-control-error';\r\n        },\r\n\r\n        /**\r\n         * Add a disabled attribute to the input attributes if isDisabled=true.\r\n         * @param {Object} attrs - Attribute object to update.\r\n         * @param {bool} isDisabled - Is the input diabled or not.\r\n         * @returns {Object} Updated attribute object.\r\n         */\r\n        withDisabled: function(attrs, isDisabled) {\r\n            if (isDisabled) {\r\n                attrs.disabled = true;\r\n            }\r\n            return attrs;\r\n        },\r\n\r\n        /**\r\n         * Add a checked attribute to the input attributes if isChecked=true.\r\n         * @param {Object} attrs - Attribute object to update.\r\n         * @param {bool} isChecked - Is the input checked or not.\r\n         * @returns {Object} Updated attribute object.\r\n         */\r\n        withChecked: function(attrs, isChecked) {\r\n            if (isChecked) {\r\n                attrs.checked = true;\r\n            }\r\n            return attrs;\r\n        },\r\n\r\n        /**\r\n         * Build list of options nodes.\r\n         * @param {Object[]} arr - Array of objects to build options for.\r\n         * @param {*} selectedValue - Value of the selected option. Can be a string, number, or array of either.\r\n         * @param {string} valueKey - Object key that stores the value of the option.\r\n         * @param {string} textKey - Object key that stores the text for the option.\r\n         * @returns {Object[]} Array of mithril option nodes.\r\n         */\r\n        withOptions: function(arr, selectedValue, valueKey, textKey) {\r\n            if (!$.isArray(arr)) {\r\n                return null;\r\n            }\r\n            return arr.map(function(x) {\r\n                var attr = { value: x[valueKey] === 0 ? '' : x[valueKey] };\r\n                if (x[valueKey] === 0) {\r\n                    attr.disabled = true;\r\n                }\r\n                if (x[valueKey] === selectedValue || ($.isArray(selectedValue) && selectedValue.indexOf(x[valueKey]) > -1)) {\r\n                    attr.selected = true;\r\n                }\r\n                return m('option', attr, x[textKey]);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Create the mithril node for the record buttons (move up/move down/delete).\r\n         * @param {number} index - Index of the record to create buttons for.\r\n         * @param {bool} includeMove - Optionally include the move up/down buttons.\r\n         * @returns {Object} Mithril node with buttons.\r\n         */\r\n        buttonView: function(index, includeMove) {\r\n            var btns = [];\r\n            if ($.coalesce(includeMove, false)) {\r\n                btns.push(m('button.btn.btn-sm.btn-secondary', {\r\n                    type: 'button', role: 'button', disabled: index < 1,\r\n                    onclick: this.moveUp.bind(this, index), title: this.opts.resx.moveUp\r\n                }, m('i.dash.dash-up-big.dash-lg.dash-fw'))\r\n                );\r\n                btns.push(m('button.btn.btn-sm.btn-secondary', {\r\n                    type: 'button', role: 'button', disabled: index === this.records.length - 1,\r\n                    onclick: this.moveDown.bind(this, index), title: this.opts.resx.moveDown\r\n                }, m('i.dash.dash-down-big.dash-lg.dash-fw'))\r\n                );\r\n            }\r\n            btns.push(m('button.btn.btn-sm.btn-secondary.confirm-delete-row-button', {\r\n                type: 'button', role: 'button', onclick: this.deleteRecord.bind(this, index), title: this.opts.resx.deleteRecord\r\n            }, m('i.dash.dash-trash.dash-lg.text-error')));\r\n            return m('.btn-toolbar.float-right', btns);\r\n        },\r\n\r\n        destroy: function() {\r\n            m.mount(this.container, null);\r\n        },\r\n\r\n        /**\r\n         * Build the view that actually shows the form. This is meant to be overridden.\r\n         * @returns {Object}  Mithril DIV node.\r\n         */\r\n        view: function() {\r\n            return m('div');\r\n        },\r\n\r\n        /**\r\n         * Render the view.\r\n         */\r\n        run: function() {\r\n            var self = this;\r\n            m.mount(self.container, {\r\n                view: self.view.bind(self)\r\n            });\r\n        }\r\n    };\r\n\r\n    return Form;\r\n});\r\n","/*!\r\n * Wraps shared functionality for report and chart detail pages.\r\n */\r\n(function(root, factory) {\r\n    root.BaseDetails = factory(root.$, root.Alertify, root.Prism);\r\n})(this, function($, Alertify, Prism) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare base details class.\r\n     * @param {Object} opts - Form settings\r\n     */\r\n    function BaseDetails(opts) {\r\n        opts = opts || {};\r\n        this.content = opts.content;\r\n        this.columnList = opts.columns || [];\r\n\r\n        $.on($.get('.view-sql', opts.content), 'click', function() {\r\n            $.dialogs.openDialog($.get('.modal-sql', opts.content).outerHTML);\r\n        });\r\n\r\n        if (!opts.allowEdit) {\r\n            this.initDate = new Date();\r\n        }\r\n    }\r\n\r\n    BaseDetails.prototype = {\r\n        /**\r\n         * Handle the result of a query for report data.\r\n         * @param {Object} json - Query result.\r\n         * @returns {bool}  True if data is valid.\r\n         */\r\n        processJson: function(json) {\r\n            if (json.updatedDate && this.initDate) {\r\n                var updateDate = new Date(json.updatedDate);\r\n                if (updateDate && updateDate > this.initDate) {\r\n                    // report has been modified - warn the user to refresh\r\n                    Alertify.error($.resx('reportModified'));\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if (json.dataSql) {\r\n                this.setSql($.get('.sql-data-content', this.content), json.dataSql, json.dataError);\r\n            }\r\n            if (json.countSql) {\r\n                this.setSql($.get('.sql-count-content', this.content), json.countSql, json.countError);\r\n            }\r\n\r\n            if ($.isNull(json.rows)) {\r\n                Alertify.error($.resx('errorConnectingToDataSource'));\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Show sql and error message in the correct place.\r\n         * @param {Node} node - DOM node to update.\r\n         * @param {string} sql - SQL statement to display.\r\n         * @param {string} error - Error to display if any.\r\n         */\r\n        setSql: function(node, sql, error) {\r\n            if (node) {\r\n                var elem = $.get('.sql-text', node);\r\n                if (elem) {\r\n                    elem.textContent = sql;\r\n                    Prism.highlightElement(elem);\r\n                }\r\n                elem = $.get('.sql-error', node);\r\n                if (elem) {\r\n                    elem.textContent = error || '';\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the list of columns for the autocomplete.\r\n         * @returns {string[]} Returns array of columns.\r\n         */\r\n        getColumnList: function() {\r\n            return this.columnList;\r\n        }\r\n    };\r\n\r\n    return BaseDetails;\r\n});\r\n\r\n/*!\r\n * Wraps share form functionality. Used for report and chart.\r\n */\r\n(function(root, factory) {\r\n    root.ShareForm = factory(root.m, root.$, root.Form);\r\n})(this, function(m, $, Form) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the share form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function ShareForm(opts) {\r\n        var container = $.get('.share-table-wrapper', opts.content);\r\n        var formOpts = JSON.parse(container.getAttribute('data-json'));\r\n        container.removeAttribute('data-json');\r\n\r\n        Form.call(this, {\r\n            container: container,\r\n            columns: {\r\n                id: { type: 'int' },\r\n                userId: { type: 'int' },\r\n                roleId: { type: 'int' }\r\n            },\r\n            appendRecord: true,\r\n            wantsHelp: formOpts.wantsHelp,\r\n            newRecord: { id: 0, userId: 0, roleId: 0 }\r\n        }, formOpts.shares || []);\r\n\r\n        this.users = formOpts.userList || [];\r\n        this.roles = formOpts.roleList || [];\r\n        this.formName = opts.formName;\r\n    }\r\n\r\n    ShareForm.prototype = Object.create(Form.prototype);\r\n    ShareForm.prototype.constructor = ShareForm;\r\n\r\n    /**\r\n     * Build the user dropdown attributes.\r\n     * @param {Object} share - Share to build the dropdown for.\r\n     * @param {number} index - Index of the share record.\r\n     * @returns {Object} Dropdown attribute object.\r\n     */\r\n    ShareForm.prototype.userSelectAttr = function(share, index) {\r\n        var res = {\r\n            name: this.formName + '[' + index + '].UserId', class: 'form-select' + ($.hasPositiveValue(share.userId) || $.hasPositiveValue(share.roleId) ? '' : ' mform-control-error'),\r\n            placeholder: $.resx('selectUser'), onchange: this.set.bind(this, index, 'userId'), value: share.userId\r\n        };\r\n        if ($.hasPositiveValue(share.roleId)) {\r\n            res['disabled'] = true;\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Build the role dropdown attributes.\r\n     * @param {Object} share - Share to build the dropdown for.\r\n     * @param {number} index - Index of the share record.\r\n     * @returns {Object} Dropdown attribute object.\r\n     */\r\n    ShareForm.prototype.roleSelectAttr = function(share, index) {\r\n        var res = {\r\n            name: this.formName + '[' + index + '].RoleId', class: 'form-select' + ($.hasPositiveValue(share.userId) || $.hasPositiveValue(share.roleId) ? '' : ' mform-control-error'),\r\n            placeholder: $.resx('selectRole'), onchange: this.set.bind(this, index, 'roleId'), value: share.roleId\r\n        };\r\n        if ($.hasPositiveValue(share.userId)) {\r\n            res['disabled'] = true;\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Create the view for the share form.\r\n     * @returns {Object} Mithril node containing the share form.\r\n     */\r\n    ShareForm.prototype.view = function() {\r\n        var self = this;\r\n        return m('.table-wrapper', [\r\n            m('.columns', [\r\n                m('.col-5', m('h5', $.resx('user'))),\r\n                m('.col-5', m('h5', $.resx('role'))),\r\n                m('.col-2')\r\n            ]),\r\n            self.records.map(function(share, index) {\r\n                return m('.columns.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: share._index }, [\r\n                    m('input', { type: 'hidden', name: self.formName + '[' + index + '].Id', value: share.id }),\r\n                    m('.col-5.pr-2',\r\n                        m('select', self.userSelectAttr(share, index), self.withOptions(self.users, share.userId, 'id', 'fullName'))\r\n                    ),\r\n                    m('.col-5',\r\n                        m('select', self.roleSelectAttr(share, index), self.withOptions(self.roles, share.roleId, 'id', 'name'))\r\n                    ),\r\n                    m('.col-2', self.buttonView(index, false))\r\n                ]);\r\n            }),\r\n            m('.columns.pt-1', [\r\n                m('.col-12', [\r\n                    m('.text-right', [\r\n                        m('button.btn.btn-info.mr-2', { type: 'button', role: 'button', onclick: self.addRecord.bind(self) }, $.resx('add')),\r\n                        m('button.btn.btn-warning', {\r\n                            type: 'button', role: 'button', disabled: !self.hasRecords(),\r\n                            onclick: self.hasRecords() ? self.deleteAllRecords.bind(self) : $.noop\r\n                        }, $.resx('deleteAll'))\r\n                    ])\r\n                ])\r\n            ])\r\n        ]);\r\n    };\r\n\r\n    return ShareForm;\r\n});\r\n","/*!\r\n * Dialog mithril component.\r\n */\r\n(function(root, factory) {\r\n    root.Dialog = factory(root.m, root.$, root.Alertify, root.Table);\r\n})(this, function(m, $, Alertify, Table) {\r\n    'use strict';\r\n\r\n    var _buttons = {\r\n        'ok': 'Okay',\r\n        'cancel': 'Cancel',\r\n        'close': 'Close'\r\n    };\r\n\r\n    var _keys = {\r\n        ENTER: 13,\r\n        ESC: 27\r\n    };\r\n\r\n    /**\r\n     * Convert a value for a field to the correct data type.\r\n     * @param {Node} field - Input that we are converting value for.\r\n     * @param {string} val - Value to convert.\r\n     * @returns {string|number|bool} Returns correctly casted value.\r\n     */\r\n    var tryGetValue = function(field, val) {\r\n        var fieldName = field.name.split('.').pop();\r\n        if ((fieldName.substring(0, 2) === 'Is' || fieldName.substring(0, 5) === 'Allow') && (field.value.toLowerCase() === 'true' || field.value.toLowerCase() === 'false')) {\r\n            return field.value.toLowerCase() === 'true';\r\n        } else if (field.type.toLowerCase() === 'number' || field.name.slice(-2) === 'Id' || !($.isNull(val) || val.length == 0 || isNaN(val))) {\r\n            return val.length ? parseInt(val) : null;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    /**\r\n     * Try to set a value in an object.\r\n     * @param {Object} obj - Object to add value to.\r\n     * @param {Node} field - Input that we are converting value for.\r\n     * @param {string} name - Name of property.\r\n     * @param {string} val - Value to set.\r\n     * @returns {Object} Returns correctly updated object.\r\n     */\r\n    var trySetValue = function(obj, field, name, val) {\r\n        if (obj.hasOwnProperty(name) || $.hasClass(field, 'custom-control-input-multiple')) {\r\n            if (!$.isArray(obj[name])) {\r\n                obj[name] = $.isNull(obj[name]) ? [] : [obj[name]];\r\n            }\r\n            if (!$.isNull(val)) {\r\n                obj[name].push(val);\r\n            }\r\n        } else if (!$.isNull(val)) {\r\n            obj[name] = val;\r\n        }\r\n        return obj;\r\n    };\r\n\r\n    /**\r\n     * Declare Dialog class.\r\n     * @param {Object} opts - Dialog settings\r\n     */\r\n    function Dialog(opts) {\r\n        this.opts = $.extend({\r\n            id: null,\r\n            title: null,\r\n            basic: true,\r\n            buttons: _buttons,\r\n            content: null,\r\n            target: null,\r\n            onOkay: null,\r\n            onCancel: null,\r\n            onShow: null,\r\n            parent: null\r\n        }, opts || {});\r\n        this.elements = {\r\n            container: null,\r\n            content: null\r\n        };\r\n        this.changed = false;\r\n        this.run();\r\n    }\r\n\r\n    Dialog.prototype = {\r\n        /**\r\n         * Generates the components HTML.\r\n         * @returns {Object} Mithril virtual node\r\n         */\r\n        view: function() {\r\n            return m('.rd-dialog', { onkeydown: this.checkKey.bind(this), tabindex: 0 }, [\r\n                m('.rd-header.columns', [\r\n                    m('.col-8.mt-1.text-no-select.dialog-header', this.opts.title),\r\n                    m('.col-4.text-right', m('button.btn.btn-secondary.rd-close', { type: 'button', role: 'button', onclick: this.onCancel.bind(this) },\r\n                        m('i.dash.dash-cancel.text-error', { title: this.opts.buttons.close })\r\n                    ))\r\n                ]),\r\n                m('.rd-content', { class: this.opts.basic ? 'rd-no-footer' : '' }, this.contentView()),\r\n                this.opts.basic ? null : m('.rd-footer', [\r\n                    m('button.btn.btn-primary', {\r\n                        type: 'button', role: 'button', onclick: this.onOkay.bind(this)\r\n                    }, this.opts.buttons.ok),\r\n                    m('button.btn.btn-warning', {\r\n                        type: 'button', role: 'button', onclick: this.onCancel.bind(this)\r\n                    }, this.opts.buttons.cancel)\r\n                ])\r\n            ]);\r\n        },\r\n\r\n        contentView: function() {\r\n            if (!this.opts.content.component) {\r\n                return m.trust(this.opts.content);\r\n            }\r\n\r\n            this.opts.title = this.opts.content.title;\r\n            this.opts.basic = this.opts.content.basic;\r\n            if (this.opts.content.component.toLowerCase() === 'table') {\r\n                return m('.col-12', m(Table, this.opts.content.data));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Runs after the dialog is first created by mithril.\r\n         * @param {Object} vnode - Mithril virtual node.\r\n         */\r\n        oncreate: function(vnode) {\r\n            if (this.elements.content) {\r\n                return;\r\n            }\r\n            var node = $.get('.rd-content', vnode.dom);\r\n            if (!(node && node.firstElementChild)) {\r\n                return;\r\n            }\r\n            node = node.firstElementChild;\r\n            if ($.isNull(this.opts.title)) {\r\n                this.opts.title = node.getAttribute('data-title');\r\n                this.opts.basic = node.hasAttribute('data-basic-dialog');\r\n                m.redraw();\r\n            }\r\n            var self = this;\r\n            $.on(node, 'change', function() {\r\n                self.changed = true;\r\n            });\r\n            this.elements.content = node;\r\n            setTimeout(this.onShow.bind(this), 25);\r\n        },\r\n\r\n        run: function() {\r\n            this.elements.container = document.createElement('div');\r\n            this.elements.container.id = 'dialog' + this.opts.id;\r\n            $.addClass(this.elements.container, 'rd-dialog-container');\r\n            document.body.appendChild(this.elements.container);\r\n            m.mount(this.elements.container, {\r\n                view: this.view.bind(this),\r\n                oncreate: this.oncreate.bind(this),\r\n            });\r\n\r\n            if (!this.opts.content.component) {\r\n                $.dialogs.processContent(this.elements.content);\r\n                setTimeout(this.checkEvent.bind(this, this.elements.content, 'data-event'), 25);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the dialog id.\r\n         * @returns {number} ID of dialog.\r\n         */\r\n        getId: function() {\r\n            return this.opts.id;\r\n        },\r\n\r\n        /**\r\n         * Get the dialog container node.\r\n         * @returns {Node} DOM node of dialog container.\r\n         */\r\n        getContainer: function() {\r\n            return this.elements.container;\r\n        },\r\n\r\n        /**\r\n         * Get the dialog content node.\r\n         * @returns {Node} DOM node of dialog content.\r\n         */\r\n        getContent: function() {\r\n            return this.elements.content;\r\n        },\r\n\r\n        /**\r\n         * Get the dialog target node.\r\n         * @returns {Node} DOM node to target on close.\r\n         */\r\n        getTarget: function() {\r\n            return this.opts.target;\r\n        },\r\n\r\n        /**\r\n         * Find a form node inside the dialog.\r\n         * @returns {Node} Form node if exists else null.\r\n         */\r\n        findForm: function() {\r\n            return $.matches(this.elements.content, 'form.dash-form') ? this.elements.content : $.get('form.dash-form', this.elements.content);\r\n        },\r\n\r\n        /**\r\n         * Find element to focus on when dialog is displayed.\r\n         */\r\n        onShow: function() {\r\n            if ($.isFunction(this.opts.onShow)) {\r\n                if (!this.opts.onShow.call(this)) {\r\n                    return;\r\n                }\r\n            }\r\n            document.title = this.opts.title;\r\n            $.dialogs.focusNode(this.elements.content);\r\n        },\r\n\r\n        /**\r\n         * User okayed dialog. Save changes; close dialog.\r\n         */\r\n        onOkay: function() {\r\n            if ($.isFunction(this.opts.onOkay)) {\r\n                if (!this.opts.onOkay.call(this)) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            var form = this.findForm();\r\n            if (!form) {\r\n                this.destroy();\r\n                return;\r\n            }\r\n            if (!this.validateForm()) {\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            var formData = this.serializeForm();\r\n            $.ajax({\r\n                method: form.hasAttribute('data-method') ? form.getAttribute('data-method') : 'POST',\r\n                url: form.getAttribute('action'),\r\n                data: formData,\r\n                token: formData.__RequestVerificationToken\r\n            }, function(responseData) {\r\n                var target = self.opts.target;\r\n                var parentDlg = $.dialogs.findDialogById(self.opts.parent);\r\n                if (responseData.parentTarget && parentDlg) {\r\n                    target = parentDlg.getTarget();\r\n                }\r\n\r\n                self.destroy();\r\n                if (responseData.closeParent && parentDlg) {\r\n                    parentDlg.destroy();\r\n                }\r\n                if (responseData.dialogUrl) {\r\n                    $.dialogs.sendAjaxRequest(responseData.dialogUrl, 'GET', target);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * User canceled dialog. Check for changes; close dialog.\r\n         * @param {Event} e - Event that triggered the cancel.\r\n         */\r\n        onCancel: function(e) {\r\n            if ($.isFunction(this.opts.onCancel)) {\r\n                if (!this.opts.onCancel.call(this)) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (!this.changed || !this.findForm()) {\r\n                this.destroy();\r\n                return;\r\n            }\r\n\r\n            Alertify.confirm($.resx('discardChanges'), this.destroy.bind(this), function() {\r\n                if (e.target) {\r\n                    e.target.focus();\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Trigger okay or cancel action based on keydown.\r\n         * @param {KeyboardEvent} e - Keydown event that triggered this.\r\n         */\r\n        checkKey: function(e) {\r\n            if (e.keyCode === _keys.ESC) {\r\n                this.onCancel(e);\r\n            }\r\n            if (e.keyCode === _keys.ENTER && !this.opts.basic) {\r\n                this.onOkay(e);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Dispatch event named in attribute `attrName` if it exists.\r\n         * @param {Node} node - Node to look for an event attribute in.\r\n         * @param {string} attrName - Name of the attribute to check for the event in.\r\n         */\r\n        checkEvent: function(node, attrName) {\r\n            if (!node || !node.hasAttribute(attrName)) {\r\n                return;\r\n            }\r\n            var ev = node.getAttribute(attrName);\r\n            if ($.events.hasOwnProperty(ev)) {\r\n                $.dispatch(document, $.events[ev]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Convert form data into an object.\r\n         * @returns {Object} Form data.\r\n         */\r\n        serializeForm: function() {\r\n            var form = this.findForm();\r\n            if (!form) {\r\n                return {};\r\n            }\r\n\r\n            var field, data = {};\r\n            var len = form.elements.length;\r\n            var bracketRegEx = /\\[([^\\]]+)\\]/;\r\n            for (var i = 0; i < len; i++) {\r\n                field = form.elements[i];\r\n                if (!field.name || field.disabled || ['file', 'reset', 'submit', 'button'].indexOf(field.type) > -1) {\r\n                    continue;\r\n                }\r\n\r\n                var value = null;\r\n                if (field.type === 'select' && field.hasAttribute('multiple')) {\r\n                    value = Array.apply(null, form.elements[i].options).filter(function(x) {\r\n                        return x.selected;\r\n                    }).map(function(x) {\r\n                        return tryGetValue(field, x.value);\r\n                    });\r\n                } else if (field.type === 'checkbox') {\r\n                    if (field.checked) {\r\n                        value = tryGetValue(field, field.value);\r\n                    }\r\n                } else if (field.type !== 'radio' || field.checked) {\r\n                    value = tryGetValue(field, field.value);\r\n                }\r\n\r\n                var pieces = field.name.split('.');\r\n                var name = field.name;\r\n                if (pieces.length > 1) {\r\n                    var matches = bracketRegEx.exec(pieces[0]);\r\n                    name = matches.length > 1 ? pieces[0].replace(matches[0], '') : pieces[0];\r\n                    if (!data.hasOwnProperty(name)) {\r\n                        data[name] = [];\r\n                    }\r\n                    if (matches.length > 1) {\r\n                        if (!data[name].hasOwnProperty(matches[1])) {\r\n                            data[name][matches[1]] = {};\r\n                        }\r\n                        data[name][matches[1]] = trySetValue(data[name][matches[1]], field, pieces[1], value);\r\n                    } else {\r\n                        data[name][matches[0]] = trySetValue(data[name][matches[0]], field, pieces[1], value);\r\n                    }\r\n                } else {\r\n                    data = trySetValue(data, field, name, value);\r\n                }\r\n            }\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Set tab status when validating form.\r\n         * @param {Node} el - Node that has a validation error.\r\n         */\r\n        setTabStatus: function(el) {\r\n            var tab = $.closest('.tab-pane', el);\r\n            if (tab) {\r\n                // add error class to tab\r\n                var id = tab.getAttribute('aria-labelledby');\r\n                if (id) {\r\n                    $.toggleClass($.get('#' + id), 'tab-validation-error', $.hasClass(el, 'mform-control-error'));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Run the form validator and display an error if needed.\r\n         * @returns {bool} Return true if form is valid, else false.\r\n         */\r\n        validateForm: function() {\r\n            var form = this.findForm();\r\n            $.getAll('.tab-validation-error', form).forEach(function(x) {\r\n                $.removeClass(x, 'tab-validation-error');\r\n            });\r\n\r\n            $.dispatch(form, $.events.formValidate);\r\n\r\n            var mErrors = $.getAll('.mform-control-error', form);\r\n            if (mErrors.length) {\r\n                mErrors.forEach(this.setTabStatus);\r\n            }\r\n\r\n            if (mErrors.length || $.getAll('.form-control-error', form).length) {\r\n                Alertify.error($.resx('fixIt'));\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        destroy: function() {\r\n            this.checkEvent(this.elements.content, 'data-close-event');\r\n            $.dispatch($.get('.dash-table', this.elements.content), $.events.tableDestroy);\r\n            m.mount(this.elements.container, null);\r\n            document.body.removeChild(this.elements.container);\r\n            $.dialogs.removeDialog(this.opts.id);\r\n            $.dialogs.refreshTable();\r\n        }\r\n    };\r\n\r\n    return Dialog;\r\n});\r\n\r\n/*!\r\n * Wraps dialog functionality.\r\n */\r\n(function($, Alertify, Dialog, Table, Tab, CollapsibleList, Validator, DatePicker) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Set focus on an element after a dialog closes.\r\n     * @this {Event} Event that originally opened the dialog.\r\n     */\r\n    var focusOnClose = function() {\r\n        if (this && this.target) {\r\n            this.target.focus();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Selectors and callback function to create events.\r\n     */\r\n    var _contentActions = [\r\n        { selector: '[data-toggle=\"tab\"], [data-toggle=\"pill\"]', action: function() { new Tab(this); } },\r\n        { selector: '.dash-ajax', action: function() { $.on(this, 'click', handleAjaxRequest); } },\r\n        { selector: '.dash-form', action: function() { $.on(this, 'submit', function(e) { e.preventDefault(); }, true); } },\r\n        {\r\n            selector: '.dash-context-help', action: function() {\r\n                $.on(this, 'click', function(e) {\r\n                    Alertify.alert(this.getAttribute('data-message').replace(/&quot;/g, '\"'), focusOnClose.bind(e), focusOnClose.bind(e));\r\n                });\r\n            }\r\n        },\r\n        { selector: '.dash-collapsible-list', action: function() { new CollapsibleList(this); } },\r\n        {\r\n            selector: '[data-toggle=\"validator\"]', action: function() {\r\n                new Validator(this, { match: $.resx('errorMatch'), minlength: $.resx('errorMinLength') });\r\n            }\r\n        },\r\n        { selector: '.dash-input-replace', action: function() { $.on(this, 'click', inputReplace); } }\r\n    ];\r\n\r\n    var _dialogs = [];\r\n\r\n    /**\r\n     * Find a dialog in the internal list by ID.\r\n     * @param {number} id - Dialog ID\r\n     */\r\n    var findDialogById = function(id) {\r\n        var dlgs = _dialogs.filter(function(x) {\r\n            return x.getId() === id;\r\n        });\r\n        return dlgs.length ? dlgs[0] : null;\r\n    };\r\n\r\n    /**\r\n     * Get active dialog.\r\n     * @param {Object} Return currently open dialog object.\r\n     */\r\n    var getActiveDialog = function() {\r\n        if (!_dialogs.length) {\r\n            return null;\r\n        }\r\n        return findDialogById(Math.max.apply(Math, _dialogs.map(function(x) { return x.getId(); })));\r\n    };\r\n\r\n    /**\r\n     * Get active dialog content.\r\n     * @param {Object} Return content node of currently open dialog object.\r\n     */\r\n    var getActiveContent = function() {\r\n        var dlg = getActiveDialog();\r\n        return dlg ? dlg.getContent() : null;\r\n    };\r\n\r\n    var hasOpenDialog = function() {\r\n        return _dialogs.length > 0;\r\n    };\r\n\r\n    /**\r\n     * Remove a dialog from internal list.\r\n     * @param {number} id - Dialog ID\r\n     */\r\n    var removeDialog = function(id) {\r\n        _dialogs = _dialogs.filter(function(x) {\r\n            return x.getId() !== id;\r\n        });\r\n        var activeDialog = getActiveDialog();\r\n        if (activeDialog) {\r\n            setTimeout(activeDialog.onShow.bind(activeDialog), 25);\r\n        } else {\r\n            // back to dashboard so set title\r\n            var dashboard = $.get('#dashboard');\r\n            if (dashboard) {\r\n                document.title = dashboard.getAttribute('data-title');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle action from a click on an ajax link.\r\n     * @param {Event} e - Event that triggered the request.\r\n     */\r\n    var handleAjaxRequest = function(e) {\r\n        if (!(e && e.target)) {\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n        e.target.blur();\r\n\r\n        var obj = e.target;\r\n        while (obj !== document.body && obj.parentNode && !$.hasClass(obj, 'dash-ajax')) {\r\n            obj = obj.parentNode;\r\n        }\r\n        if (!obj || !(obj.hasAttribute('href') || obj.hasAttribute('data-href')) || $.hasClass(obj, 'disabled')) {\r\n            return;\r\n        }\r\n\r\n        var url = obj.getAttribute('href') || obj.getAttribute('data-href');\r\n        var method = obj.getAttribute('data-method') || 'GET';\r\n        var message = obj.getAttribute('data-message');\r\n        var target = obj.getAttribute('target');\r\n\r\n        if ($.hasClass(obj, 'dash-confirm')) {\r\n            Alertify.dismissAll();\r\n            Alertify.confirm(message, sendAjaxRequest.bind(this, url, method, obj), function() { e.target.focus(); });\r\n        } else if ($.hasClass(obj, 'dash-prompt')) {\r\n            Alertify.dismissAll();\r\n            Alertify.prompt(message, checkPrompt.bind(this, url, method, obj));\r\n        } else if (target) {\r\n            window.open(url, target);\r\n        } else {\r\n            sendAjaxRequest(url, method, obj);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Send a request to the server and display the results\r\n     * @param {string} url - URL to send request for.\r\n     * @param {string} method - Request method type.\r\n     * @param {Node} target - Node that requested the data.\r\n     * @param {Event} e - Event that triggered the request.\r\n     * @param {string} promptValue - If coming from a prompt dialog, the value entered.\r\n     */\r\n    var sendAjaxRequest = function(url, method, target, e, promptValue) {\r\n        if (!url) {\r\n            return;\r\n        }\r\n\r\n        if (promptValue) {\r\n            if (url.indexOf('?') > -1) {\r\n                url += '&Prompt=' + encodeURIComponent(promptValue);\r\n            } else {\r\n                url += '?Prompt=' + encodeURIComponent(promptValue);\r\n            }\r\n        }\r\n        $.ajax({\r\n            method: method || 'GET',\r\n            url: url\r\n        }, function(responseData) {\r\n            if (!(responseData.content || responseData.component)) {\r\n                refreshTable();\r\n                return;\r\n            }\r\n\r\n            if (target && target.hasAttribute('data-update-target')) {\r\n                var targetSelector = target.getAttribute('data-update-target');\r\n                var updateObj;\r\n                if (targetSelector.substr(1) === '#') {\r\n                    updateObj = $.get(targetSelector);\r\n                } else {\r\n                    var dialog = getActiveDialog();\r\n                    if (dialog) {\r\n                        updateObj = $.get(targetSelector, dialog.getContainer());\r\n                    }\r\n                }\r\n                if (updateObj) {\r\n                    if (responseData.html) {\r\n                        updateObj.innerHTML = responseData.content;\r\n                        processContent(updateObj);\r\n                    } else {\r\n                        $.setText(updateObj, responseData.content);\r\n                    }\r\n                }\r\n            } else {\r\n                openDialog($.isNull(responseData.component) ? responseData.content : responseData, target);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Open a new dialog.\r\n     * @param {string} content - HTML content for the dialog\r\n     * @param {Node} target - Node that triggered the dialog to open.\r\n     * @param {Function} onOkay - Function to run if the user clicks ok.\r\n     * @param {Function} onCancel - Function to run if the user clicks cancel.\r\n     * @param {Function} onShow - Function to run after the dialog loads.\r\n     */\r\n    var openDialog = function(content, target, onOkay, onCancel, onShow) {\r\n        Alertify.dismissAll();\r\n\r\n        // get max dialog id, and increment\r\n        var id = _dialogs.length ? Math.max.apply(Math, _dialogs.map(function(x) { return x.getId(); })) + 1 : 1;\r\n        var activeDlg = getActiveDialog();\r\n        _dialogs.push(new Dialog({\r\n            id: id, content: content, target: target, onOkay: onOkay, onCancel: onCancel, onShow: onShow,\r\n            buttons: { 'ok': $.resx('okay'), 'cancel': $.resx('cancel'), 'close': $.resx('close') },\r\n            parent: activeDlg ? activeDlg.getId() : null\r\n        }));\r\n    };\r\n\r\n    /**\r\n     * Check that a prompt value was supplied.\r\n     * @param {string} url - URL to send request for.\r\n     * @param {string} method - Request method type.\r\n     * @param {Node} target - Node that requested the data.\r\n     * @param {string} promptValue - If coming from a prompt dialog, the value entered.\r\n     * @param {Event} e - Event that triggered the request.\r\n     */\r\n    var checkPrompt = function(url, method, target, promptValue, e) {\r\n        if (!$.hasValue(promptValue)) {\r\n            Alertify.error($.resx('errorNameRequired'));\r\n            return false;\r\n        }\r\n        sendAjaxRequest.call(this, url, method, target, e, promptValue);\r\n    };\r\n\r\n    /**\r\n     * Refresh data for the table instance in the active dialog.\r\n     */\r\n    var refreshTable = function() {\r\n        var content = getActiveContent();\r\n        if (!content) {\r\n            return;\r\n        }\r\n        $.dispatch($.hasClass(content, 'dash-table') ? content : $.get('.dash-table', content), $.events.tableRefresh);\r\n    };\r\n\r\n    /**\r\n     * Focus on the first error or input.\r\n     * @param {Node} node - Parent node to search in.\r\n     */\r\n    var focusNode = function(node) {\r\n        if (!node) {\r\n            return null;\r\n        }\r\n        var elems = $.getAll('.form-control-error:not([type=\"hidden\"]):not([disabled]):not([readonly]), .mform-control-error:not([type=\"hidden\"]):not([disabled]):not([readonly])', node).filter($.isVisible);\r\n        if (!elems.length) {\r\n            elems = $.getAll('input:not([type=\"hidden\"]):not([disabled]):not([readonly]), select:not([disabled]):not([readonly])', node).filter($.isVisible);\r\n        }\r\n        if (!elems.length) {\r\n            elems = $.getAll('button:not([disabled]), a:not([disabled]), [tabindex]:not([disabled]):not([tabindex=\"-1\"])', node).filter($.isVisible);\r\n        }\r\n        if (!elems.length) {\r\n            var dlg = $.closest('.rd-dialog', node);\r\n            if (dlg) {\r\n                elems = $.getAll('.rd-close', dlg).filter($.isVisible);\r\n            }\r\n        }\r\n        if (elems.length) {\r\n            elems[0].focus();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Replace the value of the data-target node with the data-value from this. Used for providing defaults via a dropdown.\r\n     */\r\n    var inputReplace = function() {\r\n        if (this.hasAttribute('data-target') && this.hasAttribute('data-value')) {\r\n            var target = $.get('#' + this.getAttribute('data-target'));\r\n            if (target && !$.isNull(target.value)) {\r\n                target.value = this.getAttribute('data-value');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Process node content adding events.\r\n     * @param {Node} node - Node to add events to.\r\n     */\r\n    var processContent = function(node) {\r\n        node = $.isEvent(node) ? null : node;\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        // process all the content actions\r\n        var elems;\r\n        _contentActions.forEach(function(act) {\r\n            elems = $.getAll(act.selector, node);\r\n            if ($.matches(node, act.selector)) {\r\n                elems.push(node);\r\n            }\r\n            elems.forEach(function(x) {\r\n                act.action.call(x);\r\n            });\r\n        });\r\n\r\n        if (node.nodeName === 'BODY') {\r\n            var lang = node.getAttribute('data-lang');\r\n            if (lang && lang !== 'en') {\r\n                DatePicker.localize({ locale: lang });\r\n            }\r\n            focusNode(node);\r\n        }\r\n    };\r\n\r\n    $.dialogs = {\r\n        openDialog: openDialog,\r\n        findDialogById: findDialogById,\r\n        focusNode: focusNode,\r\n        focusOnClose: focusOnClose,\r\n        getActiveContent: getActiveContent,\r\n        getActiveDialog: getActiveDialog,\r\n        handleAjaxRequest: handleAjaxRequest,\r\n        hasOpenDialog: hasOpenDialog,\r\n        processContent: processContent,\r\n        refreshTable: refreshTable,\r\n        removeDialog: removeDialog,\r\n        sendAjaxRequest: sendAjaxRequest\r\n    };\r\n})(this.$, this.Alertify, this.Dialog, this.Table, this.Tab, this.CollapsibleList, this.Validator, this.DatePicker);\r\n","/*!\r\n * Dataset column form component.\r\n */\r\n(function(root, factory) {\r\n    root.ColumnForm = factory(root.m, root.$, root.Alertify, root.Form, root.Autocomplete, root.Help);\r\n})(this, function(m, $, Alertify, Form, Autocomplete, Help) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Sort columns by title.\r\n     * @param {Object} a - First column to compare.\r\n     * @param {Object} b - Second column to compare.\r\n     * @returns {bool} True if column a should be before column b.\r\n     */\r\n    var columnTitleSort = function(a, b) {\r\n        var aTitle = a.title.toLowerCase(), bTitle = b.title.toLowerCase();\r\n        return aTitle > bTitle ? 1 : (bTitle > aTitle ? -1 : 0);\r\n    };\r\n\r\n    /**\r\n     * Build the column form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function ColumnForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.column-table-wrapper', opts.content),\r\n            columns: {\r\n                title: { type: 'str' },\r\n                columnName: { type: 'str' },\r\n                dataTypeId: { type: 'int' },\r\n                derived: { type: 'str' },\r\n                filterTypeId: { type: 'int' },\r\n                filterQuery: { type: 'str' },\r\n                link: { type: 'str' },\r\n                isParam: { type: 'int' }\r\n            },\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, title: null, columnName: '', dataTypeId: '', derived: null, filterTypeId: '', filterQuery: null, link: null, isParam: 0, isExpanded: true }\r\n        }, opts.columns || []);\r\n\r\n        this.content = opts.content;\r\n        this.dataTypes = opts.dataTypes;\r\n        this.filterTypes = opts.filterTypes;\r\n        this.sourceFn = opts.sourceFn;\r\n        this.columnFn = opts.columnFn;\r\n        this.selectedSourceFn = opts.selectedSourceFn;\r\n    }\r\n\r\n    ColumnForm.prototype = Object.create(Form.prototype);\r\n    ColumnForm.prototype.constructor = ColumnForm;\r\n\r\n    /**\r\n     * Expand/collapse the fields for a column.\r\n     * @param {Object} column - The column record to expand/collapse.\r\n     */\r\n    ColumnForm.prototype.toggleExpanded = function(column) {\r\n        column.isExpanded = !column.isExpanded;\r\n    };\r\n\r\n    /**\r\n     * Check if the database and primary source are set.\r\n     * @returns {bool} True if a database and a primary source are provided, else false.\r\n     */\r\n    ColumnForm.prototype.checkStatus = function() {\r\n        var database = $.get('.dataset-database', this.content);\r\n        if (!(database && $.hasPositiveValue(database.value))) {\r\n            Alertify.error($.resx('dataset.importErrorDatabaseRequired'));\r\n            return false;\r\n        }\r\n        var primarySource = $.get('.primary-source-autocomplete', this.content);\r\n        if (!(primarySource && primarySource.value)) {\r\n            Alertify.error($.resx('dataset.importErrorPrimarySourceRequired'));\r\n            return false;\r\n        }\r\n        var type = $.get('.dataset-type', this.content);\r\n        if (type && type.value * 1 === 2) {\r\n            Alertify.error($.resx('dataset.importErrorNoProcs'));\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Import columns for the selected tables into the dataset.\r\n     * @param {Event} e - Event that triggered this.\r\n     */\r\n    ColumnForm.prototype.importColumns = function(e) {\r\n        var form = this.content;\r\n        if (!($.hasClass(form, 'dataset-form') && this.checkStatus())) {\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        var database = $.get('.dataset-database');\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-import-url'),\r\n            data: { databaseId: database.value, sources: self.selectedSourceFn() }\r\n        }, function(data) {\r\n            if (!data.columns || data.columns.length === 0) {\r\n                Alertify.error($.resx('dataset.importErrorNoColumns'));\r\n                return;\r\n            }\r\n\r\n            var newColumns = {};\r\n            data.columns.forEach(function(x) {\r\n                newColumns[x.columnName.toLowerCase()] = x;\r\n            });\r\n\r\n            var newRecords = [];\r\n            var existingColumns = [];\r\n            self.records.forEach(function(x) {\r\n                var colName = x.columnName.toLowerCase();\r\n                if (newColumns[colName]) {\r\n                    // record matches - update datatype and add to new list\r\n                    x.dataTypeId = newColumns[colName].dataTypeId;\r\n                    newRecords.push(x);\r\n                    existingColumns.push(colName);\r\n                }\r\n            });\r\n\r\n            data.columns.forEach(function(x) {\r\n                // now add any new columns from server\r\n                if (existingColumns.indexOf(x.columnName.toLowerCase()) === -1) {\r\n                    newRecords.push(x);\r\n                }\r\n            });\r\n\r\n            newRecords.sort(columnTitleSort);\r\n            self.records = newRecords;\r\n\r\n            Alertify.success($.resx('dataset.importSuccess'));\r\n            $.dialogs.focusOnClose.call(e);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Open the confirmation before importing columns.\r\n     * @param {Event} e - Event that triggered this.\r\n     */\r\n    ColumnForm.prototype.import = function(e) {\r\n        if (this.checkStatus()) {\r\n            Alertify.confirm($.resx('dataset.confirmImport'), this.importColumns.bind(this, e), $.dialogs.focusOnClose.bind(e));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Create the node for the column form.\r\n     * @returns {Object} Mithril node containing the form.\r\n     */\r\n    ColumnForm.prototype.view = function() {\r\n        var self = this;\r\n        return m('.table-wrapper', [\r\n            m('.columns.wrapper-row.pb-1',\r\n                m('.col-12',\r\n                    m('.text-right', [\r\n                        m('button.btn.btn-info.mr-2', {\r\n                            type: 'button', role: 'button', onclick: self.addRecord.bind(self)\r\n                        }, $.resx('add')),\r\n                        m('button.btn.btn-error.mr-2', {\r\n                            type: 'button', role: 'button', onclick: self.import.bind(self)\r\n                        }, $.resx('dataset.import')),\r\n                        m(Help, { enabled: this.opts.wantsHelp, message: $.resx('dataset.columnsText') })\r\n                    ])\r\n                )\r\n            ),\r\n            self.records.map(function(record, index) {\r\n                return m('.col-12.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: record._index }, [\r\n                    m('.columns', [\r\n                        m('input', { type: 'hidden', name: 'DatasetColumn[' + index + '].Id', value: record.id }),\r\n                        m('.col-4', self.withHelp($.resx('dataset.columnTitleText'), [\r\n                            m('span.input-group-addon.input-group-custom', m('button.btn.btn-secondary', {\r\n                                type: 'button', role: 'button',\r\n                                onclick: self.toggleExpanded.bind(self, record)\r\n                            }, m('i.dash.text-primary', { class: record.isExpanded ? 'dash-minus' : 'dash-plus' }))),\r\n                            m('input.form-input.required', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].Title', class: self.withError(record.title),\r\n                                placeholder: $.resx('dataset.columnTitle'), oninput: self.set.bind(self, index, 'title'), value: record.title\r\n                            }),\r\n                        ])),\r\n                        m('.col-4', self.withHelp($.resx('dataset.columnNameText'), m(Autocomplete, {\r\n                            name: 'DatasetColumn[' + index + '].ColumnName',\r\n                            required: true,\r\n                            placeholder: $.resx('dataset.columnName'),\r\n                            value: record.columnName,\r\n                            list: self.columnFn,\r\n                            onSelect: self.set.bind(self, index, 'columnName')\r\n                        }))),\r\n                        m('.col-3', self.withHelp($.resx('dataset.dataTypeText'),\r\n                            m('select.form-select.required', {\r\n                                name: 'DatasetColumn[' + index + '].DataTypeId', class: self.withError(record.dataTypeId),\r\n                                placeholder: $.resx('dataset.dataType'), oninput: self.set.bind(self, index, 'dataTypeId'), value: record.dataTypeId\r\n                            }, self.withOptions(self.dataTypes, record.dataTypeId, 'id', 'name'))\r\n                        )),\r\n                        m('.col-1', self.buttonView(index, false))\r\n                    ]),\r\n                    m('.columns', { class: record.isExpanded ? '' : ' d-none' },\r\n                        m('.col-10.col-mx-auto', self.withHelp($.resx('dataset.derivedText'),\r\n                            m('input.form-input', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].Derived', placeholder: $.resx('dataset.derived'),\r\n                                oninput: self.set.bind(self, index, 'derived'), value: record.derived\r\n                            })\r\n                        ))\r\n                    ),\r\n                    m('.columns', { class: record.isExpanded ? '' : ' d-none' }, [\r\n                        m('.col-3.col-mx-auto', self.withHelp($.resx('dataset.filterTypeText'),\r\n                            m('select.form-select', {\r\n                                name: 'DatasetColumn[' + index + '].FilterTypeId', class: self.withError(record.filterTypeId),\r\n                                placeholder: $.resx('dataset.filterType'), oninput: self.set.bind(self, index, 'filterTypeId'), value: record.filterTypeId\r\n                            }, self.withOptions(self.filterTypes, record.filterTypeId, 'id', 'name'))\r\n                        )),\r\n                        m('.col-7', self.withHelp($.resx('dataset.queryText'),\r\n                            m('input.form-input', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].FilterQuery', placeholder: $.resx('dataset.query'),\r\n                                oninput: self.set.bind(self, index, 'filterQuery'), value: record.filterQuery, readOnly: record.filterTypeId !== 3\r\n                            }))\r\n                        )\r\n                    ]),\r\n                    m('.columns', { class: record.isExpanded ? '' : ' d-none' }, [\r\n                        m('.col-8.col-mx-auto', self.withHelp($.resx('dataset.linkText'),\r\n                            m('input.form-input', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].Link', placeholder: $.resx('dataset.link'),\r\n                                oninput: self.set.bind(self, index, 'link'), value: record.link\r\n                            })\r\n                        )),\r\n                        m('.col-1', [\r\n                            m('label.form-checkbox', { for: 'DatasetColumn_' + index + '_.IsParam' }, [\r\n                                m('input.custom-control-input', self.withChecked({\r\n                                    type: 'checkbox', name: 'DatasetColumn[' + index + '].IsParam', id: 'DatasetColumn_' + index + '_.IsParam',\r\n                                    oninput: self.set.bind(self, index, 'isParam'), value: 'true'\r\n                                }, record.isParam)),\r\n                                m('i.form-icon'),\r\n                                $.resx('dataset.isParam')\r\n                            ])\r\n                        ]),\r\n                        m('.col-1', m(Help, { enabled: self.opts.wantsHelp, message: $.resx('dataset.isParamText') }))\r\n                    ])\r\n                ]);\r\n            })\r\n        ]);\r\n    };\r\n\r\n    return ColumnForm;\r\n});\r\n\r\n/*!\r\n * Dataset join form component.\r\n */\r\n(function(root, factory) {\r\n    root.JoinForm = factory(root.m, root.$, root.Form, root.Autocomplete, root.Help);\r\n})(this, function(m, $, Form, Autocomplete, Help) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the join form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function JoinForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.join-table-wrapper', opts.content),\r\n            columns: {\r\n                joinTypeId: { type: 'int' },\r\n                tableName: { type: 'str' },\r\n                keys: { type: 'str' }\r\n            },\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, tableName: '', joinTypeId: 1, keys: null },\r\n            afterDeleteFn: opts.columnUpdateFn\r\n        }, opts.joins || []);\r\n\r\n        this.joinTypes = opts.joinTypes;\r\n        this.sourceFn = opts.sourceFn;\r\n        this.columnUpdateFn = opts.columnUpdateFn;\r\n    }\r\n\r\n    JoinForm.prototype = Object.create(Form.prototype);\r\n    JoinForm.prototype.constructor = JoinForm;\r\n\r\n    /**\r\n     * Set the table name for the join record, and update the column list.\r\n     * @param {number} index - Index of the record to update.\r\n     * @param {string} value - New table name value\r\n     */\r\n    JoinForm.prototype.setJoinTable = function(index, value) {\r\n        this.set(index, 'tableName', value);\r\n        this.columnUpdateFn();\r\n    };\r\n\r\n    /**\r\n     * Create the view for the joins tab.\r\n     * @returns {Object} Mithril node containing the join form.\r\n     */\r\n    JoinForm.prototype.view = function() {\r\n        var self = this;\r\n\r\n        if (self.isProc) {\r\n            return m('.table-wrapper.p-t-1.col-12', m('.card.bg-info.text-white', m('.card-body', $.resx('dataset.errorProcNoJoins'))));\r\n        }\r\n\r\n        return m('.table-wrapper', [\r\n            m('.columns.wrapper-row.pb-1',\r\n                m('.col-12', m('.text-right', [\r\n                    m('button.btn.btn-info.mr-2', { type: 'button', role: 'button', onclick: self.addRecord.bind(self) }, $.resx('add')),\r\n                    m(Help, { enabled: this.opts.wantsHelp, message: $.resx('dataset.joinsText') })\r\n                ]))\r\n            ),\r\n            self.records.map(function(record, index) {\r\n                return m('.columns.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: record._index }, [\r\n                    m('input', { type: 'hidden', name: 'DatasetJoin[' + index + '].Id', value: record.id }),\r\n                    m('input', { type: 'hidden', name: 'DatasetJoin[' + index + '].JoinOrder', value: index }),\r\n                    m('.col-3', self.withHelp($.resx('dataset.joinTableText'), m(Autocomplete, {\r\n                        name: 'DatasetJoin[' + index + '].TableName',\r\n                        required: true,\r\n                        placeholder: $.resx('dataset.joinTableName'),\r\n                        value: record.tableName,\r\n                        list: self.sourceFn,\r\n                        onSelect: self.setJoinTable.bind(self, index),\r\n                        onCancel: self.setJoinTable.bind(self, index),\r\n                    }))),\r\n                    m('.col-2', self.withHelp($.resx('dataset.joinTypeText'),\r\n                        m('select.form-select.required', {\r\n                            name: 'DatasetJoin[' + index + '].JoinTypeId', class: self.withError(record.joinTypeId),\r\n                            placeholder: $.resx('dataset.joinType'), oninput: self.set.bind(self, index, 'joinTypeId'), value: record.joinTypeId\r\n                        }, self.withOptions(self.joinTypes, record.joinTypeId, 'id', 'name'))\r\n                    )),\r\n                    m('.col-5', self.withHelp($.resx('dataset.joinKeysText'),\r\n                        m('input.form-input.required', {\r\n                            type: 'text', name: 'DatasetJoin[' + index + '].Keys', class: self.withError(record.keys),\r\n                            placeholder: $.resx('dataset.joinKeys'), oninput: self.set.bind(self, index, 'keys'), value: record.keys\r\n                        }))\r\n                    ),\r\n                    m('.col-2', self.buttonView.call(self, index, true))\r\n                ]);\r\n            })\r\n        ]);\r\n    };\r\n\r\n    return JoinForm;\r\n});\r\n\r\n/*!\r\n * Dataset form component.\r\n */\r\n(function(root, factory) {\r\n    root.Dataset = factory(root.m, root.$, root.Alertify, root.Form, root.Autocomplete, root.Help, root.JoinForm, root.ColumnForm);\r\n})(this, function(m, $, Alertify, Form, Autocomplete, Help, JoinForm, ColumnForm) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare Dataset class.\r\n     * @param {Object} opts - Dataset settings\r\n     */\r\n    function Dataset(opts) {\r\n        opts = opts || {};\r\n        if (opts.columns) {\r\n            opts.columns.forEach(function(x) { x.isExpanded = false; });\r\n        }\r\n\r\n        this.sourceList = null;\r\n        this.columnList = null;\r\n        this.formChanged = false;\r\n        this.selectedSourceList = [];\r\n        this.content = opts.content;\r\n\r\n        this.checkType(false);\r\n        this.loadSourceList();\r\n        this.loadColumnList();\r\n\r\n        this.joinForm = new JoinForm({\r\n            content: opts.content,\r\n            wantsHelp: opts.wantsHelp,\r\n            joins: opts.joins,\r\n            joinTypes: opts.joinTypes,\r\n            sourceFn: this.getSourceList.bind(this),\r\n            columnUpdateFn: this.loadColumnList.bind(this)\r\n        });\r\n        this.joinForm.run();\r\n\r\n        this.columnForm = new ColumnForm({\r\n            content: opts.content,\r\n            wantsHelp: opts.wantsHelp,\r\n            columns: opts.columns,\r\n            dataTypes: opts.dataTypes,\r\n            filterTypes: opts.filterTypes,\r\n            sourceFn: this.getSourceList.bind(this),\r\n            columnFn: this.getColumnList.bind(this),\r\n            selectedSourceFn: this.getSelectedSourceList.bind(this)\r\n        });\r\n        this.columnForm.run();\r\n\r\n        $.onChange($.get('.dataset-database', this.content), this.loadSourceList.bind(this), false);\r\n        $.onChange($.get('.dataset-type', this.content), this.checkType.bind(this), false);\r\n\r\n        var self = this;\r\n        var primary = $.get('.dataset-primary-source', this.content);\r\n        if (primary) {\r\n            m.mount(primary, {\r\n                view: function() {\r\n                    return m(Help, { message: $.resx('dataset.primarySourceHelp'), enabled: opts.wantsHelp }, m(Autocomplete, {\r\n                        name: 'PrimarySource',\r\n                        class: 'primary-source-autocomplete',\r\n                        value: primary.getAttribute('data-value'),\r\n                        required: true,\r\n                        list: self.getSourceList.bind(self),\r\n                        onSelect: self.updateColumnList.bind(self),\r\n                        onCancel: self.updateColumnList.bind(self)\r\n                    }));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    Dataset.prototype = {\r\n        /**\r\n         * Build a list of all tables used by this dataset.\r\n         * @returns {bool} Returns true if list has changed, else false.\r\n         */\r\n        updateSelectedSources: function() {\r\n            var list = [];\r\n            var primarySource = $.get('.primary-source-autocomplete', this.content);\r\n            if (primarySource && primarySource.value) {\r\n                list.push(primarySource.value);\r\n            }\r\n            if (this.joinForm) {\r\n                this.joinForm.records.map(function(x) { list.push(x.tableName); });\r\n            }\r\n            list = list.filter(function(x) {\r\n                return !$.isNull(x) && x.length > 0;\r\n            });\r\n            if (!$.equals(list, this.selectedSourceList)) {\r\n                this.selectedSourceList = list;\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Check if the dataset is using a proc instead of tables.\r\n         * @param {bool} updateList - If true update the table/proc list.\r\n         */\r\n        checkType: function(updateList) {\r\n            var type = $.get('.dataset-type', this.content);\r\n            if (!type) {\r\n                return;\r\n            }\r\n            if ($.coalesce(updateList, true)) {\r\n                this.loadSourceList();\r\n            }\r\n            if (this.joinForm) {\r\n                this.joinForm.isProc = type.value * 1 === 2;\r\n                this.joinForm.run();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Fetch a list of available columns from the server. Autocompletes will update automatically.\r\n         */\r\n        loadColumnList: function() {\r\n            var url = this.content.getAttribute('data-column-url');\r\n            var database = $.get('.dataset-database', this.content);\r\n            if (!(url && database && $.hasPositiveValue(database.value))) {\r\n                this.columnList = [];\r\n                return;\r\n            }\r\n\r\n            if (this.updateSelectedSources()) {\r\n                // only run if sources are different from last request to avoid unnecessary traffic\r\n                var self = this;\r\n                $.ajax({\r\n                    method: 'POST',\r\n                    url: url,\r\n                    data: { DatabaseId: database.value * 1, Tables: self.selectedSourceList }\r\n                }, function(columns) {\r\n                    self.columnList = columns && columns.length ? columns : [];\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Fetch a list of tables from the server. Autocompletes will update automatically.\r\n         */\r\n        loadSourceList: function() {\r\n            var url = this.content.getAttribute('data-table-url');\r\n            var database = $.get('.dataset-database', this.content);\r\n            var type = $.get('.dataset-type', this.content);\r\n            if (!(url && database && type)) {\r\n                return;\r\n            }\r\n            if (!$.hasPositiveValue(database.value) || !$.hasPositiveValue(type.value)) {\r\n                this.sourceList = [];\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: url,\r\n                data: { databaseId: database.value, typeId: type.value }\r\n            }, function(tables) {\r\n                self.sourceList = tables && tables.length ? tables : [];\r\n                self.loadColumnList();\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get the list of table for the autocomplete.\r\n         * @returns {string[]} Returns array of tables.\r\n         */\r\n        getSourceList: function() {\r\n            return this.sourceList;\r\n        },\r\n\r\n        /**\r\n         * Get the list of selected tables.\r\n         * @returns {string[]} Returns array of tables.\r\n         */\r\n        getSelectedSourceList: function() {\r\n            return this.selectedSourceList;\r\n        },\r\n\r\n        /**\r\n         * Get the list of columns for the autocomplete.\r\n         * @returns {string[]} Returns array of columns.\r\n         */\r\n        getColumnList: function() {\r\n            return this.columnList;\r\n        },\r\n\r\n        /**\r\n         * Refresh the column list.\r\n         */\r\n        updateColumnList: function() {\r\n            // need timeout delay so the field value is updated before we load the list\r\n            setTimeout(this.loadColumnList.bind(this), 10);\r\n        },\r\n\r\n        destroy: function() {\r\n            $.destroy(this.columnForm);\r\n            $.destroy(this.joinForm);\r\n\r\n            var primary = $.get('.dataset-primary-source', this.content);\r\n            if (primary) {\r\n                m.mount(primary, null);\r\n            }\r\n        }\r\n    };\r\n\r\n    return Dataset;\r\n});\r\n\r\n/*!\r\n * Dataset form functionality.\r\n */\r\n(function($, Dataset) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Store references to the dataset form mithril modules and value lists.\r\n     * @type {Object}\r\n     */\r\n    var _datasets = {};\r\n\r\n    /**\r\n     * Initialize the dataset form when the datasetFormLoad event fires.\r\n     */\r\n    $.on(document, 'datasetFormLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'dataset-form')) {\r\n            return;\r\n        }\r\n\r\n        var dataset = $.get('.dataset-id', form);\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-url'),\r\n            data: dataset ? { id: dataset.value } : null\r\n        }, function(data) {\r\n            var dlg = $.dialogs.getActiveDialog();\r\n            data.content = dlg.getContent();\r\n            _datasets[dlg.getId()] = new Dataset(data);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Destroy the form when the dialog closes.\r\n     */\r\n    $.on(document, 'datasetFormUnload', function() {\r\n        if (!_datasets) {\r\n            return;\r\n        }\r\n\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var dataset = _datasets[dlg.getId()];\r\n        if (dataset) {\r\n            dataset.destroy();\r\n        }\r\n        delete _datasets[dlg.getId()];\r\n    });\r\n})(this.$, this.Dataset);\r\n","/*!\r\n * Report filter form component.\r\n */\r\n(function(root, factory) {\r\n    root.FilterForm = factory(root.m, root.$, root.Form, root.Help, root.Alertify, root.DatePicker);\r\n})(this, function(m, $, Form, Help, Alertify, DatePicker) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the filter form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function FilterForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.filter-table-wrapper', opts.content),\r\n            columns: {\r\n                id: { type: 'int' },\r\n                columnId: { type: 'int' },\r\n                operatorId: { type: 'int' },\r\n                criteria: { type: 'str' },\r\n                criteria2: { type: 'str' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, columnId: 0, operatorId: 0, criteria: null, criteria2: null },\r\n            dateFormat: opts.dateFormat\r\n        }, opts.filters || []);\r\n\r\n        this.reportId = opts.reportId;\r\n        this.isProc = opts.isProc;\r\n        this.saveFiltersUrl = opts.saveFiltersUrl;\r\n        this.filterOperators = opts.filterOperators || [];\r\n        this.filterOperatorIds = opts.filterOperatorIds || {};\r\n        this.filterTypes = opts.filterTypes || {};\r\n        this.dateOperators = opts.dateOperators || [];\r\n        this.lookups = opts.lookups || [];\r\n        this.refreshFn = opts.refreshFn;\r\n        this.columnFn = opts.columnFn;\r\n    }\r\n\r\n    FilterForm.prototype = Object.create(Form.prototype);\r\n    FilterForm.prototype.constructor = FilterForm;\r\n\r\n    /**\r\n     * Build the options select list for the boolean filter.\r\n     */\r\n    FilterForm.prototype.boolOptions = [\r\n        m('option', { value: '' }, $.resx('select')),\r\n        m('option', { value: 1 }, $.resx('report.true')),\r\n        m('option', { value: 0 }, $.resx('report.false'))\r\n    ];\r\n\r\n    /**\r\n     * Set the columnId for a filter and unset the criteria.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered showing the picker.\r\n     */\r\n    FilterForm.prototype.setColumnId = function(index, e) {\r\n        var val = this.targetVal(e) * 1;\r\n        if (this.records[index].columnId !== val) {\r\n            this.records[index].columnId = val;\r\n            this.records[index].operatorId = 0;\r\n            this.records[index].criteria = null;\r\n            this.records[index].criteria2 = null;\r\n            this.run();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the operatorId for a filter and unset the criteria.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered showing the picker.\r\n     */\r\n    FilterForm.prototype.setOperator = function(index, e) {\r\n        this.set(index, 'operatorId', e);\r\n    };\r\n\r\n    /**\r\n     * Set the criteria for a filter.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered the update.\r\n     */\r\n    FilterForm.prototype.setCriteria = function(index, e) {\r\n        var node = e.target;\r\n        if (node && node.nodeName === 'SELECT' && node.hasAttribute('multiple') && node.options) {\r\n            this.records[index].criteriaJson = Array.apply(null, node.options).filter(function(x) { return x.selected; }).map(function(x) { return x.value || x.text; });\r\n        }\r\n        this.set(index, 'criteria', e);\r\n    };\r\n\r\n    /**\r\n     * Set the criteria for a date filter.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {string} field - Name of field to set.\r\n     * @param {Date} val - Date value to save.\r\n     */\r\n    FilterForm.prototype.setDate = function(index, field, val) {\r\n        this.set(index, field, $.fecha.format(val, 'YYYY-MM-DD HH:mm'));\r\n    };\r\n\r\n    /**\r\n     * Save filters to the server then reload the table data.\r\n     */\r\n    FilterForm.prototype.saveFilters = function() {\r\n        if ($.getAll('.mform-control-error', this.container).length > 0) {\r\n            Alertify.error($.resx('fixIt'));\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: 'PUT',\r\n            url: self.saveFiltersUrl,\r\n            data: {\r\n                Id: self.reportId,\r\n                Filters: $.toPascalKeys(self.records)\r\n            }\r\n        }, function(data) {\r\n            if (data) {\r\n                self.changed = false;\r\n                if ($.isArray(data.filters)) {\r\n                    data.filters.forEach(function(x, i) { self.records[i].id = x.id; });\r\n                }\r\n            }\r\n            if (self.refreshFn) {\r\n                self.refreshFn();\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Build the criteria input(s) for a filter.\r\n     * @param {number} index - Index of the filter to build.\r\n     * @returns {Object} Mithril node containing the criteria input(s).\r\n     */\r\n    FilterForm.prototype.criteriaView = function(index) {\r\n        var filter = this.records[index];\r\n        var column = $.hasPositiveValue(filter.columnId) ? $.findByKey(this.columnFn(), 'id', filter.columnId) : null;\r\n        if (column === null || !$.hasPositiveValue(filter.operatorId)) {\r\n            return m('input.form-input', { disabled: true, placeholder: $.resx('report.filterCriteria') });\r\n        }\r\n\r\n        var criteria = null;\r\n        var attrs = {\r\n            name: 'ReportFilter[' + index + '].Criteria',\r\n            id: 'ReportFilter_' + index + '_Criteria',\r\n            class: 'form-input required' + this.withError(filter.criteria),\r\n            placeholder: $.resx('report.filterCriteria'),\r\n            oninput: this.setCriteria.bind(this, index)\r\n        };\r\n        if (!this.opts.allowEdit) {\r\n            attrs.disabled = true;\r\n        }\r\n\r\n        if (column.filterTypeId !== this.filterTypes.select) {\r\n            attrs.value = filter.criteria;\r\n        }\r\n        var isRange = filter.operatorId === this.filterOperatorIds.range;\r\n\r\n        switch (column.filterTypeId) {\r\n            case this.filterTypes.boolean:\r\n                attrs.class = 'form-select required' + this.withError(filter.criteria);\r\n                criteria = m('select', attrs, this.boolOptions);\r\n                break;\r\n            case this.filterTypes.date:\r\n                if (filter.operatorId === this.filterOperatorIds.dateInterval) {\r\n                    attrs.class = 'form-select required' + this.withError(filter.criteria);\r\n                    criteria = m('select', attrs, this.withOptions(this.dateOperators, filter.criteria * 1, 'id', 'name'));\r\n                } else {\r\n                    criteria = m(DatePicker, {\r\n                        name: attrs.name, required: true, date: filter.criteria, disabled: !this.opts.allowEdit,\r\n                        onchange: this.setDate.bind(this, index, 'criteria'), format: this.dateFormat,\r\n                        class: isRange ? 'col' : null\r\n                    });\r\n                }\r\n                break;\r\n            case this.filterTypes.select:\r\n                if (filter.operatorId !== this.filterOperatorIds.equal) {\r\n                    attrs.multiple = true;\r\n                } else {\r\n                    attrs.class = 'form-select required' + this.withError(filter.criteria);\r\n                }\r\n\r\n                try {\r\n                    if (filter.criteria.substring(0, 1) === '[') {\r\n                        filter.criteriaJson = JSON.parse(filter.criteria);\r\n                    }\r\n                } catch (e) {\r\n                    // do nothing\r\n                }\r\n\r\n                if (!filter.criteriaJson) {\r\n                    attrs.value = filter.criteria;\r\n                }\r\n\r\n                var lookup = $.isArray(this.lookups[filter.columnId]) ? this.lookups[filter.columnId] : [];\r\n                criteria = m('select', attrs, this.withOptions(lookup, filter.criteriaJson, 'value', 'text'));\r\n                break;\r\n            default:\r\n                attrs.type = column.filterTypeId === this.filterTypes.numeric ? 'number' : 'text';\r\n                criteria = m('input', attrs);\r\n        }\r\n\r\n        if (!isRange) {\r\n            return criteria;\r\n        }\r\n\r\n        var isDatePicker = column.filterTypeId === this.filterTypes.date && filter.operatorId !== this.filterOperatorIds.dateInterval;\r\n        var attrs2 = {\r\n            name: 'ReportFilter[' + index + '].Criteria2',\r\n            id: 'ReportFilter_' + index + '_Criteria2',\r\n            class: 'form-input required' + this.withError(filter.criteria2, null, column.filterTypeId === this.filterTypes.date),\r\n            placeholder: $.resx('report.filterCriteria2'),\r\n            onchange: isDatePicker ? this.setDate.bind(this, index, 'criteria2') : this.set.bind(this, index, 'criteria2'),\r\n            value: filter.criteria2,\r\n            type: column.filterTypeId === this.filterTypes.numeric ? 'number' : 'text'\r\n        };\r\n        if (!this.opts.allowEdit) {\r\n            attrs2.disabled = true;\r\n        }\r\n        var criteriaArr = [criteria];\r\n        if (isDatePicker) {\r\n            criteriaArr.push(m(DatePicker, {\r\n                name: attrs2.name, required: true, date: filter.criteria2, disabled: !this.opts.allowEdit,\r\n                onchange: this.setDate.bind(this, index, 'criteria2'), format: this.dateFormat, class: 'col'\r\n            }));\r\n        } else {\r\n            criteriaArr.push(m('input', attrs2));\r\n        }\r\n        return criteriaArr;\r\n    };\r\n\r\n    /**\r\n     * Build the operator dropdown for a filter.\r\n     * @param {number} index - Index of the filter to build.\r\n     * @param {Object} column - Column that the filter is for.\r\n     * @returns {Object} Mithril node containing the operator select.\r\n     */\r\n    FilterForm.prototype.operatorView = function(index, column) {\r\n        return m('select.form-select.required', {\r\n            name: 'ReportFilter[' + index + '].OperatorId', id: 'ReportFilter_' + index + '_OperatorId',\r\n            disabled: !column || !this.opts.allowEdit,\r\n            class: column ? this.withError(this.records[index].operatorId, true) : null,\r\n            placeholder: $.resx('report.filterOperator'), onchange: this.setOperator.bind(this, index), value: this.records[index].operatorId\r\n        }, this.withOptions(column && $.hasPositiveValue(column.filterTypeId) ?\r\n            this.filterOperators[column.filterTypeId] : [{ id: 0, name: $.resx('report.filterOperator') }], this.records[index].operatorId, 'id', 'name')\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Build the filters.\r\n     * @returns {Object[]} Array of Mithril nodes containing the filters.\r\n     */\r\n    FilterForm.prototype.filterView = function() {\r\n        if (!this.columnFn()) {\r\n            return null;\r\n        }\r\n\r\n        var self = this;\r\n        return this.records.map(function(x, index) {\r\n            var column = $.hasPositiveValue(x.columnId) ? $.findByKey(self.columnFn(), 'id', x.columnId) : null;\r\n\r\n            // @todo this isn't setting the `placeholder` default value correctly anymore it seems\r\n            var attrs = {\r\n                name: 'ReportFilter[' + index + '].ColumnId', class: 'form-select required' + self.withError(x.columnId, true),\r\n                placeholder: $.resx('report.filterColumn'), onchange: self.setColumnId.bind(self, index), value: x.columnId\r\n            };\r\n            if (!self.opts.allowEdit) {\r\n                attrs.disabled = true;\r\n            }\r\n\r\n            var filterColumns = self.isProc ? self.columnFn().filter(function(x) { return x.isParam; }) : self.columnFn();\r\n\r\n            return m('.columns.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even' }, [\r\n                m('input', { type: 'hidden', name: 'ReportFilter[' + index + '].Id', value: x.id }),\r\n                m('input', { type: 'hidden', name: 'ReportFilter[' + index + '].DisplayOrder', value: index }),\r\n                m('.col-4',\r\n                    self.withHelp($.resx('report.filterColumnText'), m('select', attrs, self.withOptions(filterColumns, x.columnId, 'id', 'title')))\r\n                ),\r\n                m('.col-2',\r\n                    self.withHelp($.resx('report.filterOperatorText'), self.operatorView.call(self, index, column))\r\n                ),\r\n                m('.col-5',\r\n                    self.withHelp($.resx('report.filterCriteriaText'), self.criteriaView.call(self, index))\r\n                ),\r\n                m('.col-1', self.opts.allowEdit ? self.buttonView.call(self, index, false) : null)\r\n            ]);\r\n        });\r\n    };\r\n\r\n    /**\r\n    * Create the view for the share form.\r\n    * @returns {Object} Mithril node containing the share form.\r\n    */\r\n    FilterForm.prototype.view = function() {\r\n        return [\r\n            this.filterView(),\r\n            this.opts.allowEdit ? m('.columns.pt-1', [\r\n                m('.col-6', m('button.btn.btn-primary', {\r\n                    type: 'button', role: 'button', onclick: this.saveFilters.bind(this)\r\n                }, $.resx('save'))),\r\n                m('.col-6', [\r\n                    m('.text-right', [\r\n                        m('button.btn.btn-info.mr-2', {\r\n                            type: 'button', role: 'button', onclick: this.addRecord.bind(this),\r\n                        }, $.resx('add')),\r\n                        m('button.btn.btn-warning.mr-2', {\r\n                            type: 'button', role: 'button', disabled: !this.hasRecords(),\r\n                            onclick: this.hasRecords() ? this.deleteAllRecords.bind(this) : $.noop\r\n                        }, $.resx('deleteAll')),\r\n                        m(Help, { enabled: this.opts.wantsHelp, message: $.resx('report.filterText') })\r\n                    ])\r\n                ])\r\n            ]) : null\r\n        ];\r\n    };\r\n\r\n    return FilterForm;\r\n});\r\n\r\n/*!\r\n * Report group form component.\r\n */\r\n(function(root, factory) {\r\n    root.GroupForm = factory(root.m, root.$, root.Form, root.Help, root.Alertify);\r\n})(this, function(m, $, Form, Help, Alertify) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the group form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function GroupForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.group-table-wrapper', opts.content),\r\n            columns: {\r\n                id: { type: 'int' },\r\n                columnId: { type: 'int' },\r\n                operatorId: { type: 'int' },\r\n                criteria: { type: 'str' },\r\n                criteria2: { type: 'str' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, columnId: 0, displayOrder: 0 }\r\n        }, opts.groups || []);\r\n\r\n        this.reportId = opts.reportId;\r\n        this.isProc = opts.isProc;\r\n        this.saveGroupsUrl = opts.saveGroupsUrl;\r\n        this.aggregator = opts.aggregatorId === 0 ? '' : opts.aggregatorId;\r\n        this.aggregators = opts.aggregators || [];\r\n        this.refreshFn = opts.refreshFn;\r\n        this.columnFn = opts.columnFn;\r\n    }\r\n\r\n    GroupForm.prototype = Object.create(Form.prototype);\r\n    GroupForm.prototype.constructor = GroupForm;\r\n\r\n    /**\r\n     * Save groups to the server then reload the table data.\r\n     */\r\n    GroupForm.prototype.saveGroups = function() {\r\n        if ($.getAll('.mform-control-error', this.container).length > 0) {\r\n            Alertify.error($.resx('fixIt'));\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: 'PUT',\r\n            url: self.saveGroupsUrl,\r\n            data: {\r\n                Id: self.reportId,\r\n                GroupAggregator: self.aggregator === '' ? 0 : self.aggregator * 1,\r\n                Groups: $.toPascalKeys(self.records)\r\n            }\r\n        }, function(data) {\r\n            if (data) {\r\n                if ($.isArray(data.groups)) {\r\n                    data.groups.forEach(function(x, i) { self.records[i].id = x.id; });\r\n                }\r\n            }\r\n            if (self.refreshFn) {\r\n                self.refreshFn();\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Set the aggregator property.\r\n     * @param {Event} e - Event that triggered the function.\r\n     */\r\n    GroupForm.prototype.setAggregator = function(e) {\r\n        this.aggregator = this.targetVal(e);\r\n    };\r\n\r\n    /**\r\n     * Build the groups.\r\n     * @returns {Object[]} Array of Mithril nodes containing the groups.\r\n     */\r\n    GroupForm.prototype.groupView = function() {\r\n        if (!this.columnFn()) {\r\n            return null;\r\n        }\r\n\r\n        var self = this;\r\n        return this.records.map(function(x, index) {\r\n            x.displayOrder = index;\r\n            var attrs = {\r\n                name: 'ReportGroup[' + index + '].ColumnId', class: 'form-select required' + self.withError(x.columnId, true),\r\n                placeholder: $.resx('report.groupColumn'), onchange: self.set.bind(self, index, 'columnId'), value: x.columnId\r\n            };\r\n            if (!self.opts.allowEdit) {\r\n                attrs.disabled = true;\r\n            }\r\n            return m('.columns.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even' }, [\r\n                m('input', { type: 'hidden', name: 'ReportGroup[' + index + '].Id', value: x.id }),\r\n                m('input', { type: 'hidden', name: 'ReportGroup[' + index + '].DisplayOrder', value: index }),\r\n                m('.col-10', [\r\n                    m('select', attrs, self.withOptions(self.columnFn(), x.columnId, 'id', 'title'))\r\n                ]),\r\n                m('.col-2', self.opts.allowEdit ? self.buttonView.call(self, index, true) : null)\r\n            ]);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Build the group form.\r\n     * @returns {Object} Mithril node containing the form.\r\n     */\r\n    GroupForm.prototype.view = function() {\r\n        if (this.isProc) {\r\n            return m('.table-wrapper.p-t-1.col-12', m('.card.card-info', m('.card-body', $.resx('report.errorProcNoGroups'))));\r\n        }\r\n\r\n        var attrs = {\r\n            name: 'Report.Aggregator', class: 'form-select', placeholder: $.resx('report.aggregator'),\r\n            onchange: this.setAggregator.bind(this), value: this.aggregator\r\n        };\r\n        if (!this.opts.allowEdit) {\r\n            attrs.disabled = true;\r\n        }\r\n        return m('.col-12.table-wrapper', m('.columns', [\r\n            m('.col-2.mt-1', [\r\n                m('.form-group', [\r\n                    m('select', attrs, this.withOptions(this.aggregators, this.aggregator, 'id', 'name'))\r\n                ]),\r\n                this.opts.allowEdit ? m('.mt-1', m('button.btn.btn-primary', {\r\n                    type: 'button', role: 'button', onclick: this.saveGroups.bind(this)\r\n                }, $.resx('save'))) : null\r\n            ]),\r\n            m('.col-9.col-ml-auto.mt-1', [\r\n                this.groupView(),\r\n                this.opts.allowEdit ? m('.container.pt-1', m('.columns', [\r\n                    m('.col-12', [\r\n                        m('.btn-toolbar.text-right', [\r\n                            m('button.btn.btn-info.mr-1', {\r\n                                type: 'button', role: 'button', onclick: this.addRecord.bind(this)\r\n                            }, $.resx('add')),\r\n                            m('button.btn.btn-warning', {\r\n                                type: 'button', role: 'button', disabled: !this.hasRecords(),\r\n                                onclick: this.hasRecords() ? this.deleteAllRecords.bind(this) : $.noop\r\n                            }, $.resx('deleteAll')),\r\n                            m(Help, { enabled: this.opts.wantsHelp, message: $.resx('report.groupText') })\r\n                        ])\r\n                    ])\r\n                ])) : null\r\n            ])\r\n        ]));\r\n    };\r\n\r\n    return GroupForm;\r\n});\r\n\r\n/*!\r\n * Report form component.\r\n */\r\n(function(root, factory) {\r\n    root.ReportDetails = factory(root.m, root.$, root.Alertify, root.BaseDetails, root.FilterForm, root.GroupForm, root.Table);\r\n})(this, function(m, $, Alertify, BaseDetails, FilterForm, GroupForm, Table) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare ReportDetails class.\r\n     * @param {Object} opts - Report settings\r\n     */\r\n    function ReportDetails(opts) {\r\n        opts = opts || {};\r\n\r\n        BaseDetails.call(this, opts);\r\n\r\n        if (!(opts.reportColumns && opts.reportColumns.length)) {\r\n            return;\r\n        }\r\n\r\n        this.content = opts.content;\r\n        this.isProc = opts.loadAllData;\r\n\r\n        var self = this;\r\n        var saveUrl = opts.saveColumnsUrl;\r\n        var saveStorageFunc = $.debounce(!opts.allowEdit ? $.noop : function(settings) {\r\n            if ($.isNull(self.previousColumnWidths) || !$.equals(settings.columnWidths, self.previousColumnWidths)) {\r\n                $.ajax({\r\n                    method: 'PUT',\r\n                    url: saveUrl,\r\n                    data: {\r\n                        Id: opts.reportId,\r\n                        Columns: $.toPascalKeys(settings.columnWidths),\r\n                        ReportWidth: settings.width * 1\r\n                    },\r\n                    block: false\r\n                });\r\n                self.previousColumnWidths = settings.columnWidths;\r\n            }\r\n        }, 250);\r\n\r\n        var callback = this.processJson.bind(this);\r\n        m.mount($.get('.report-data-container', opts.content), {\r\n            view: function() {\r\n                return m(Table, {\r\n                    url: opts.dataUrl,\r\n                    requestMethod: 'POST',\r\n                    requestParams: { Id: opts.reportId, Save: true },\r\n                    searchable: false,\r\n                    loadAllData: opts.loadAllData,\r\n                    editable: opts.allowEdit,\r\n                    headerButtons: [{ type: 'a', attributes: { class: 'btn btn-primary mr-2', href: opts.exportUrl, target: '_blank' }, label: $.resx('export') }],\r\n                    itemsPerPage: opts.rowLimit,\r\n                    currentStartItem: 0,\r\n                    sorting: opts.sortColumns || [],\r\n                    storageFunction: saveStorageFunc,\r\n                    width: opts.width,\r\n                    columns: opts.reportColumns || [],\r\n                    displayDateFormat: opts.dateFormat,\r\n                    displayCurrencyFormat: opts.currencyFormat,\r\n                    dataCallback: callback,\r\n                    errorCallback: callback\r\n                });\r\n            }\r\n        });\r\n        this.previousColumnWidths = opts.reportColumns.map(function(x) { return { field: x.field, width: x.width * 1.0 }; });\r\n\r\n        this.filterForm = new FilterForm({\r\n            reportId: opts.reportId,\r\n            content: opts.content,\r\n            filters: opts.filters,\r\n            columns: {\r\n                id: { type: 'int' },\r\n                columnId: { type: 'int' },\r\n                operatorId: { type: 'int' },\r\n                criteria: { type: 'str' },\r\n                criteria2: { type: 'str' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: null, columnId: '', operatorId: '', criteria: null, criteria2: null },\r\n            dateFormat: opts.dateFormat,\r\n            saveFiltersUrl: opts.saveFiltersUrl,\r\n            filterOperators: opts.filterOperators,\r\n            filterOperatorIds: opts.filterOperatorIds,\r\n            filterTypes: opts.filterTypes,\r\n            dateOperators: opts.dateOperators,\r\n            lookups: opts.lookups,\r\n            isProc: opts.isProc,\r\n            refreshFn: this.refresh.bind(this),\r\n            columnFn: this.getColumnList.bind(this)\r\n        });\r\n        this.filterForm.run();\r\n\r\n        this.groupForm = new GroupForm({\r\n            reportId: opts.reportId,\r\n            content: opts.content,\r\n            groups: opts.groups,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            saveGroupsUrl: opts.saveGroupsUrl,\r\n            aggregatorId: opts.aggregatorId,\r\n            aggregator: opts.aggregator,\r\n            aggregators: opts.aggregators,\r\n            isProc: opts.isProc,\r\n            refreshFn: this.refresh.bind(this),\r\n            columnFn: this.getColumnList.bind(this)\r\n        });\r\n        this.groupForm.run();\r\n    }\r\n\r\n    ReportDetails.prototype = Object.create(BaseDetails.prototype);\r\n    ReportDetails.prototype.constructor = BaseDetails;\r\n\r\n    /**\r\n     * Handle the result of a query for report data.\r\n     * @param {Object} json - Query result.\r\n     * @returns {bool}  True if data is valid.\r\n     */\r\n    ReportDetails.prototype.processJson = function(json) {\r\n        if (json.updatedDate && this.initDate) {\r\n            var updateDate = new Date(json.updatedDate);\r\n            if (updateDate && updateDate > this.initDate) {\r\n                // report has been modified - warn the user of the refresh\r\n                Alertify.error($.resx('reportModified'));\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (json.dataSql) {\r\n            this.setSql($.get('.sql-data-content', this.content), json.dataSql, json.dataError);\r\n        }\r\n        if (json.countSql) {\r\n            this.setSql($.get('.sql-count-content', this.content), json.countSql, json.countError);\r\n        }\r\n\r\n        if ($.isNull(json.rows)) {\r\n            Alertify.error($.resx('errorConnectingToDataSource'));\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    ReportDetails.prototype.refresh = function() {\r\n        $.dispatch($.get('.dash-table', this.content), $.events.tableRefresh);\r\n    };\r\n\r\n    ReportDetails.prototype.destroy = function() {\r\n        $.dispatch($.get('.dash-table', this.content), $.events.tableDestroy);\r\n        $.destroy(this.filterForm);\r\n        $.destroy(this.groupForm);\r\n    };\r\n\r\n    return ReportDetails;\r\n});\r\n\r\n/*!\r\n * Functionality for displaying report forms.\r\n */\r\n(function($, Draggabilly, ShareForm, ReportDetails) {\r\n    'use strict';\r\n\r\n    var _reports = {};\r\n    var _shares = {};\r\n\r\n    /**\r\n     * Update zIndex of column being dragged so it is on top.\r\n     * @param {Event} event - Original mousedown or touchstart event\r\n     */\r\n    var startDrag = function(event) {\r\n        var target = $.hasClass(event.target, 'column-item') ? event.target : event.target.parentNode;\r\n        target.style['z-index'] = 9999;\r\n    };\r\n\r\n    /**\r\n     * Update column lists when the user stops dragging a column.\r\n     * @param {Event} event - Original mouseup or touchend event\r\n     * @param {MouseEvent|Touch} pointer - Event object that has .pageX and .pageY\r\n     */\r\n    var stopDrag = function(event, pointer) {\r\n        var target = $.hasClass(event.target, 'column-item') ? event.target : event.target.parentNode;\r\n        var isLeft = pointer.x + target.offsetWidth / 2 < document.documentElement.clientWidth / 2;\r\n        var newPos = Math.max(Math.round(target.offsetTop / target.offsetHeight), 0);\r\n\r\n        $.removeClass(target, 'column-item-right');\r\n        $.removeClass(target, 'column-item-left');\r\n        target.removeAttribute('style');\r\n\r\n        var leftItems = $.getAll('.column-item-left');\r\n        leftItems.sort(columnSort);\r\n        var rightItems = $.getAll('.column-item-right');\r\n        rightItems.sort(columnSort);\r\n        newPos = Math.min(newPos, isLeft ? leftItems.length : rightItems.length);\r\n\r\n        if (isLeft) {\r\n            $.addClass(target, 'column-item-left');\r\n            leftItems.splice(newPos, 0, target);\r\n        } else {\r\n            $.addClass(target, 'column-item-right');\r\n            rightItems.splice(newPos, 0, target);\r\n        }\r\n\r\n        updateList(leftItems, true);\r\n        updateList(rightItems, false);\r\n    };\r\n\r\n    /**\r\n     * Sort columns by their vertical position.\r\n     * @param {Object} a - Object for first column.\r\n     * @param {Object} b - Object for second column.\r\n     * @returns {bool} True if first column should be after second column, else false;\r\n     */\r\n    var columnSort = function(a, b) {\r\n        return a.offsetTop > b.offsetTop;\r\n    };\r\n\r\n    /**\r\n     * Update the position and displayOrder of columns in a list.\r\n     * @param {Node[]} items - Array of column nodes.\r\n     * @param {bool} isLeft - True if the left column list, else false.\r\n     */\r\n    var updateList = function(items, isLeft) {\r\n        items.forEach(function(x, i) {\r\n            updateColumn(x, i, isLeft);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Update the class list and displayOrder for a column item.\r\n     * @param {Node} element - DOM node for the column.\r\n     * @param {number} index - New index of the column in the list.\r\n     * @param {bool} isLeft - True if the column is in the left list, else false.\r\n     */\r\n    var updateColumn = function(element, index, isLeft) {\r\n        element.className = element.className.replace(/column-item-y-([0-9]*)/i, '').trim() + ' column-item-y-' + index;\r\n        var input = $.get('.column-grid-display-order', element);\r\n        if (input) {\r\n            if (isLeft) {\r\n                input.value = 0;\r\n            } else {\r\n                input.value = index + 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initialize the report column selector.\r\n     */\r\n    $.on(document, 'columnSelectorLoad', function() {\r\n        $.getAll('.column-item').forEach(function(x) {\r\n            new Draggabilly(x).on('dragStart', startDrag).on('dragEnd', stopDrag);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Request settings to display a report and call the method to initialize it.\r\n     */\r\n    $.on(document, 'reportLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'report-form')) {\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-url')\r\n        }, function(data) {\r\n            var dlg = $.dialogs.getActiveDialog();\r\n            data.content = dlg.getContent();\r\n            _reports[dlg.getId()] = new ReportDetails(data);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Clean up when closing the report dialog.\r\n     */\r\n    $.on(document, 'reportUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var report = _reports[dlg.getId()];\r\n        if (report) {\r\n            report.destroy();\r\n        }\r\n        delete _reports[dlg.getId()];\r\n        $.dispatch(document, $.events.dashboardReload);\r\n    });\r\n\r\n    /**\r\n     * Load the settings to display the report share form.\r\n     */\r\n    $.on(document, 'reportShareLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'report-share-form')) {\r\n            return;\r\n        }\r\n\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        _shares[dlg.getId()] = new ShareForm({ content: dlg.getContent(), formName: 'Shares' });\r\n        _shares[dlg.getId()].run();\r\n    });\r\n\r\n    /**\r\n     * Clean up when the report share dialog closes.\r\n     */\r\n    $.on(document, 'reportShareUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var share = _shares[dlg.getId()];\r\n        if (share) {\r\n            share.destroy();\r\n        }\r\n        delete _shares[dlg.getId()];\r\n    });\r\n})(this.$, this.Draggabilly, this.ShareForm, this.ReportDetails);\r\n","/*!\r\n * Chart range form component.\r\n */\r\n(function(root, factory) {\r\n    root.RangeForm = factory(root.m, root.$, root.Form, root.Help, root.Alertify, root.DashChart, root.ColorPicker);\r\n})(this, function(m, $, Form, Help, Alertify, DashChart, ColorPicker) {\r\n    'use strict';\r\n\r\n    function RangeForm(opts) {\r\n        var ranges = opts.ranges || [];\r\n        ranges = opts.ranges.map(function(x) { x.isExpanded = false; return x; });\r\n\r\n        Form.call(this, {\r\n            container: $.get('.range-table-wrapper', opts.content),\r\n            columns: {\r\n                id: { type: 'int' },\r\n                reportId: { type: 'int' },\r\n                xAxisColumnId: { type: 'int' },\r\n                yAxisColumnId: { type: 'int' },\r\n                aggregatorId: { type: 'int' },\r\n                dateIntervalId: { type: 'int' },\r\n                color: { type: 'string' },\r\n                displayOrder: { type: 'int' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, reportId: 0, xAxisColumnId: 0, yAxisColumnId: 0, aggregatorId: 0, dateIntervalId: 0, color: '', displayOrder: 0 }\r\n        }, ranges || []);\r\n\r\n        this.content = opts.content;\r\n        this.chartId = opts.chartId;\r\n        this.filterTypes = opts.filterTypes || {};\r\n        this.saveRangesUrl = opts.saveRangesUrl;\r\n        this.dateIntervals = opts.dateIntervals || [];\r\n        this.aggregators = opts.aggregators || [];\r\n        this.reports = opts.reports || [];\r\n        this.columns = opts.columns || [];\r\n        this.processJsonFn = opts.processJsonFn;\r\n        this.canExportFn = opts.canExportFn;\r\n        this.toggleExportFn = opts.toggleExportFn;\r\n    }\r\n\r\n    RangeForm.prototype = Object.create(Form.prototype);\r\n    RangeForm.prototype.constructor = RangeForm;\r\n\r\n    /**\r\n     * Save ranges to the server then rebuild the chart.\r\n     */\r\n    RangeForm.prototype.saveRanges = function() {\r\n        if ($.getAll('.mform-control-error', this.container).length > 0) {\r\n            Alertify.error($.resx('fixIt'));\r\n            return;\r\n        }\r\n\r\n        this.records.forEach(function(x, i) { x.displayOrder = i; });\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: self.saveRangesUrl,\r\n            data: {\r\n                Id: self.chartId,\r\n                Ranges: $.toPascalKeys(self.records)\r\n            }\r\n        }, function(data) {\r\n            if (data) {\r\n                self.changed = false;\r\n                if ($.isArray(data.ranges)) {\r\n                    data.ranges.forEach(function(x, i) { self.records[i].id = x.id; });\r\n                }\r\n                Alertify.success($.resx('chart.saveSuccessful'));\r\n                self.makeChart();\r\n            }\r\n        });\r\n    };\r\n\r\n    RangeForm.prototype.makeChart = function() {\r\n        var chartContent = $.get('.chart-container', this.content);\r\n        if (!(chartContent && chartContent.hasAttribute('data-url'))) {\r\n            return;\r\n        }\r\n        if (!(this.records && this.records.length > 0)) {\r\n            Alertify.error($.resx('chart.rangesRequired'));\r\n            return;\r\n        }\r\n\r\n        if (this.dashChart && this.dashChart.chart) {\r\n            this.dashChart.chart.destroy();\r\n        }\r\n\r\n        this.dashChart = new DashChart(chartContent, true, this.processJsonFn, null, this.toggleExportFn);\r\n    };\r\n\r\n    RangeForm.prototype.exportChart = function() {\r\n        if (!this.canExportFn()) {\r\n            return;\r\n        }\r\n        var chartContainer = $.get('.chart-container', this.content);\r\n        if (chartContainer) {\r\n            $.get('.export-width', this.content).value = chartContainer.offsetWidth;\r\n            $.get('.export-data', this.content).value = this.dashChart.chart.toBase64Image();\r\n            $.get('.export-form', this.content).submit();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the operatorId for a filter and unset the criteria.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered.\r\n     */\r\n    RangeForm.prototype.setReport = function(index, e) {\r\n        if (this.set(index, 'reportId', e)) {\r\n            this.records[index].xAxisColumnId = 0;\r\n            this.records[index].yAxisColumnId = 0;\r\n            this.records[index].aggregatorId = 0;\r\n            this.records[index].dateIntervalId = 0;\r\n            this.run();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Expand/collapse the inputs for a range.\r\n     * @param {Object} record - Range object.\r\n     */\r\n    RangeForm.prototype.toggleExpanded = function(record) {\r\n        record.isExpanded = !record.isExpanded;\r\n    };\r\n\r\n    /**\r\n     * Build the ranges.\r\n     * @returns {Object[]} Array of Mithril nodes containing the ranges.\r\n     */\r\n    RangeForm.prototype.rangeView = function() {\r\n        if (!this.reports) {\r\n            return null;\r\n        }\r\n\r\n        var self = this;\r\n        return this.records.map(function(record, index) {\r\n            var report = record.reportId ? $.findByKey(self.columns, 'reportId', record.reportId) : null;\r\n            if (report && !report.xColumns) {\r\n                report.xColumns = $.clone(report.columns);\r\n                report.xColumns.unshift({ columnId: 0, title: $.resx('chart.xAxisColumn') });\r\n                report.yColumns = $.clone(report.columns);\r\n                report.yColumns.unshift({ columnId: 0, title: $.resx('chart.yAxisColumn') });\r\n            }\r\n\r\n            var dateIntervalDisabled = true;\r\n            var inputsDisabled = !(self.opts.allowEdit && report);\r\n            if (!inputsDisabled && self.filterTypes) {\r\n                var col = $.findByKey(report.columns, 'columnId', record.xAxisColumnId * 1);\r\n                if (col && col.filterTypeId === self.filterTypes.date) {\r\n                    // show for date\r\n                    dateIntervalDisabled = false;\r\n                }\r\n            }\r\n\r\n            return m('.container.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: record._index }, [\r\n                m('.columns', [\r\n                    m('input', { type: 'hidden', name: 'ChartRange[' + index + '].Id', value: record.id }),\r\n                    m('.col-4',\r\n                        self.withHelp($.resx('chart.reportText'), [\r\n                            m('span.input-group-addon.input-group-custom', m('button.btn.btn-secondary', { onclick: self.toggleExpanded.bind(self, record) },\r\n                                m('i.dash.text-primary', { class: record.isExpanded ? 'dash-minus' : 'dash-plus' })\r\n                            )),\r\n                            m('select.form-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].ReportId', class: self.withError(record.reportId, true),\r\n                                placeholder: $.resx('chart.report'), onchange: self.setReport.bind(self, index), value: record.reportId\r\n                            }, !self.opts.allowEdit), self.withOptions(self.reports, record.reportId, 'id', 'name'))\r\n                        ])\r\n                    ),\r\n                    m('.col-3',\r\n                        self.withHelp($.resx('chart.xAxisColumnText'),\r\n                            m('select.form-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].XAxisColumnId', id: 'xAxisColumnId' + index, class: report ? self.withError(record.xAxisColumnId, true) : null,\r\n                                placeholder: $.resx('chart.xAxisColumn'), onchange: self.set.bind(self, index, 'xAxisColumnId'), value: record.xAxisColumnId\r\n                            }, inputsDisabled), self.withOptions(report ? report.xColumns : [{ columnId: 0, title: $.resx('chart.xAxisColumn') }], record.xAxisColumnId, 'columnId', 'title'))\r\n                        )\r\n                    ),\r\n                    m('.col-3',\r\n                        self.withHelp($.resx('chart.yAxisColumnText'),\r\n                            m('select.form-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].YAxisColumnId', id: 'yAxisColumnId' + index, class: report ? self.withError(record.yAxisColumnId, true) : null,\r\n                                placeholder: $.resx('chart.yAxisColumn'), onchange: self.set.bind(self, index, 'yAxisColumnId'), value: record.yAxisColumnId\r\n                            }, inputsDisabled), self.withOptions(report ? report.yColumns : [{ columnId: 0, title: $.resx('chart.yAxisColumn') }], record.yAxisColumnId, 'columnId', 'title'))\r\n                        )\r\n                    ),\r\n                    m('.col-2', self.opts.allowEdit ? self.buttonView.call(self, index, true) : null)\r\n                ]),\r\n                m('.columns', { class: record.isExpanded ? '' : ' d-none' }, [\r\n                    m('.col-4.col-ml-auto',\r\n                        self.withHelp($.resx('chart.aggregatorText'),\r\n                            m('select.form-select', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].AggregatorId', id: 'aggregatorId' + index,\r\n                                placeholder: $.resx('chart.aggregator'), onchange: self.set.bind(self, index, 'aggregatorId'), value: record.aggregatorId\r\n                            }, inputsDisabled), self.withOptions(self.aggregators, record.aggregatorId, 'id', 'name'))\r\n                        )\r\n                    ),\r\n                    m('.col-4',\r\n                        self.withHelp($.resx('chart.dateIntervalText'),\r\n                            m('select.form-select', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].DateIntervalId', id: 'dateIntervalId' + index,\r\n                                placeholder: $.resx('chart.dateInterval'), onchange: self.set.bind(self, index, 'dateIntervalId'), value: record.dateIntervalId\r\n                            }, dateIntervalDisabled), self.withOptions(self.dateIntervals, record.dateIntervalId, 'id', 'name'))\r\n                        )\r\n                    ),\r\n                    m('.col-2', [\r\n                        self.withHelp($.resx('chart.colorText'),\r\n                            m(ColorPicker, {\r\n                                name: 'ChartRange[' + index + '].Color', value: record.color, disabled: inputsDisabled,\r\n                                onSelect: self.set.bind(self, index, 'color')\r\n                            })\r\n                        ),\r\n                    ]),\r\n                    m('.col-1')\r\n                ])\r\n            ]);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Build the range form.\r\n     * @returns {Object} Mithril node containing the form.\r\n     */\r\n    RangeForm.prototype.view = function() {\r\n        return [\r\n            this.rangeView(),\r\n            m('.container.pt-1', m('.columns', [\r\n                m('.col-6', [\r\n                    m('.btn-toolbar', [\r\n                        this.opts.allowEdit ? m('button.btn.btn-primary.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.saveRanges.bind(this)\r\n                        }, $.resx('save')) : null,\r\n                        m('button.btn.btn-info', {\r\n                            type: 'button', role: 'button', onclick: this.exportChart.bind(this), disabled: !this.canExportFn()\r\n                        }, $.resx('export'))\r\n                    ])\r\n                ]),\r\n                this.opts.allowEdit ? m('.col-6.text-right', [\r\n                    m('.text-right', [\r\n                        m('button.btn.btn-info.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.addRecord.bind(this)\r\n                        }, $.resx('add')),\r\n                        m('button.btn.btn-warning.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.deleteAllRecords.bind(this), disabled: !this.hasRecords()\r\n                        }, $.resx('deleteAll')),\r\n                        m(Help, { enabled: this.opts.wantsHelp, message: $.resx('chart.rangeText') })\r\n                    ])\r\n                ]) : null\r\n            ]))\r\n        ];\r\n    };\r\n\r\n    return RangeForm;\r\n});\r\n\r\n/*!\r\n * Chart form component.\r\n */\r\n(function(root, factory) {\r\n    root.ChartDetails = factory(root.$, root.Alertify, root.BaseDetails, root.RangeForm);\r\n})(this, function($, Alertify, BaseDetails, RangeForm) {\r\n    'use strict';\r\n\r\n    function ChartDetails(opts) {\r\n        opts = opts || {};\r\n\r\n        BaseDetails.call(this, opts);\r\n\r\n        this.enableExport = false;\r\n\r\n        this.rangeForm = new RangeForm({\r\n            chartId: opts.chartId,\r\n            content: opts.content,\r\n            ranges: opts.ranges,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            filterTypes: opts.filterTypes || {},\r\n            saveRangesUrl: opts.saveRangesUrl,\r\n            dateIntervals: opts.dateIntervals,\r\n            aggregators: opts.aggregators,\r\n            reports: opts.reports,\r\n            columns: opts.columns,\r\n            processJsonFn: this.processJson.bind(this),\r\n            canExportFn: this.canExport.bind(this),\r\n            toggleExportFn: this.toggleExport.bind(this)\r\n        });\r\n        this.rangeForm.run();\r\n\r\n        if (this.rangeForm.records && this.rangeForm.records.length) {\r\n            this.rangeForm.makeChart();\r\n        }\r\n    }\r\n\r\n    ChartDetails.prototype = Object.create(BaseDetails.prototype);\r\n    ChartDetails.prototype.constructor = BaseDetails;\r\n\r\n    /**\r\n     * Handle the result of a query for report data.\r\n     * @param {Object} json - Query result.\r\n     * @returns {bool}  True if data is valid.\r\n     */\r\n    ChartDetails.prototype.processJson = function(json) {\r\n        if (json.updatedDate && this.initDate) {\r\n            var updateDate = new Date(json.updatedDate);\r\n            if (updateDate && updateDate > this.initDate) {\r\n                // chart has been modified - warn the user to refresh\r\n                $.dispatch(document, $.events.chartLoad);\r\n                Alertify.success($.resx('chartModified'));\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if ($.isNull(json.ranges) || json.ranges.length === 0) {\r\n            Alertify.error($.resx('errorConnectingToDataSource'));\r\n            this.enableExport = false;\r\n            $.show($.get('.chart-error', this));\r\n            return false;\r\n        }\r\n\r\n        this.enableExport = true;\r\n        $.get('.export-filename', this.content).value = json.title;\r\n\r\n        var elem = $.get('.sql-content', this.content);\r\n        var ranges = json.ranges.map(function(x) { return { title: x.title, sql: x.sql, error: x.error }; });\r\n        this.setSql(elem, ranges.filter(function(x) { return x.sql; }).map(function(x) { return '-- ' + x.title + '\\n' + x.sql + '\\n'; }).join('\\n'),\r\n            ranges.filter(function(x) { return x.error; }).map(function(x) { return x.title + ':<br>' + x.error + '<br>'; }).join('<br>'));\r\n\r\n        return true;\r\n    };\r\n\r\n    ChartDetails.prototype.canExport = function() {\r\n        return this.enableExport;\r\n    };\r\n\r\n    ChartDetails.prototype.toggleExport = function(val) {\r\n        this.enableExport = val;\r\n    };\r\n\r\n    ChartDetails.prototype.destroy = function() {\r\n        $.destroy(this.rangeForm);\r\n        $.destroy(this.chart);\r\n    };\r\n\r\n    return ChartDetails;\r\n});\r\n\r\n/*!\r\n * Functionality for displaying chart forms.\r\n */\r\n(function($, Alertify, Chart, ChartDetails, ShareForm) {\r\n    'use strict';\r\n\r\n    // Change chart settings.\r\n    Chart.defaults.global.responsive = true;\r\n    Chart.defaults.global.maintainAspectRatio = false;\r\n    Chart.defaults.global.title.display = false;\r\n    Chart.defaults.global.legend.position = 'bottom';\r\n    Chart.defaults.global.legend.labels.fontSize = 16;\r\n    Chart.defaults.global.legend.labels.fontFamily = 'Calibri';\r\n    Chart.defaults.global.layout = { padding: 10 };\r\n    Chart.defaults.scale.ticks.fontFamily = 'Calibri';\r\n    Chart.defaults.scale.ticks.fontSize = 12;\r\n\r\n    var _charts = {};\r\n    var _shares = {};\r\n\r\n    /**\r\n     * Request settings to display a chart and call the method to initialize it.\r\n     */\r\n    $.on(document, 'chartLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'chart-form')) {\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-url')\r\n        }, function(data) {\r\n            var dlg = $.dialogs.getActiveDialog();\r\n            data.content = dlg.getContent();\r\n            _charts[dlg.getId()] = new ChartDetails(data);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Clean up when closing the chart dialog.\r\n     */\r\n    $.on(document, 'chartUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var chart = _charts[dlg.getId()];\r\n        if (chart) {\r\n            chart.destroy();\r\n        }\r\n        delete _charts[dlg.getId()];\r\n        $.dispatch(document, $.events.dashboardReload);\r\n    });\r\n\r\n    /**\r\n     * Load the settings to display the chart share form.\r\n     */\r\n    $.on(document, 'chartShareLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'chart-share-form')) {\r\n            return;\r\n        }\r\n\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        _shares[dlg.getId()] = new ShareForm({ content: dlg.getContent(), formName: 'Shares' });\r\n        _shares[dlg.getId()].run();\r\n    });\r\n\r\n    /**\r\n     * Clean up when the chart share dialog closes.\r\n     */\r\n    $.on(document, 'chartShareUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var share = _shares[dlg.getId()];\r\n        if (share) {\r\n            share.destroy();\r\n        }\r\n        delete _shares[dlg.getId()];\r\n    });\r\n})(this.$, this.Alertify, this.Chart, this.ChartDetails, this.ShareForm);\r\n","/*!\r\n * Wraps functionality for displaying/moving/resizing widgets and their contents.\r\n */\r\n(function($, Widget) {\r\n    'use strict';\r\n\r\n    var _columns = 20;\r\n    var _rows = 20;\r\n    var _currentPositions = null;\r\n\r\n    /**\r\n     * Initialize the dashboard.\r\n     * @param {Object} widgets - Widgets options.\r\n     */\r\n    var create = function(widgets) {\r\n        var dashboard = $.get('#dashboard');\r\n        widgets = $.coalesce(widgets, []);\r\n\r\n        var opts = makeWidgetOpts(dashboard);\r\n        if (widgets.length) {\r\n            widgets.forEach(function(x) { new Widget($.extend(x, opts)); });\r\n            $.on(window, 'keydown', checkKeyPress);\r\n            $.on(window, 'resize', $.debounce(resizeLayout, 100));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Make the extra options needed to create a widget.\r\n     * @param {Node} dashboard - Dashboard node.\r\n     * @returns {Object} Object with grid and layoutCallback.\r\n     */\r\n    var makeWidgetOpts = function(dashboard) {\r\n        dashboard = $.coalesce(dashboard, $.get('#dashboard'));\r\n        return {\r\n            grid: { columns: _columns, rows: _rows, columnWidth: dashboard.parentNode.offsetWidth / _columns, rowHeight: dashboard.parentNode.offsetHeight / _rows },\r\n            layoutCallback: $.debounce(updatePosition, 100)\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Get the config for the dashboard from the server.\r\n     */\r\n    $.on(document, 'dashboardLoad', function() {\r\n        var dash = $.get('#dashboard');\r\n        if (!dash) {\r\n            return;\r\n        }\r\n        var json = dash.getAttribute('data-json');\r\n        if (json) {\r\n            dash.removeAttribute('data-json');\r\n            create(JSON.parse(json));\r\n        } else if (dash.hasAttribute('data-url')) {\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: dash.getAttribute('data-url')\r\n            }, function(data) {\r\n                create(data);\r\n            });\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Fetch widget settings from server and add/reload/delete widgets as needed.\r\n     */\r\n    $.on(document, 'dashboardReload', function() {\r\n        var dash = $.get('#dashboard');\r\n        if (!(dash && dash.hasAttribute('data-url'))) {\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: dash.getAttribute('data-url')\r\n        }, function(widgetOpts) {\r\n            if (widgetOpts) {\r\n                var widgets = getWidgets();\r\n\r\n                widgetOpts.forEach(function(x) {\r\n                    var widgetDate = new Date(x.widgetDateUpdated);\r\n                    var oldWidget = $.findByKey(widgets, 'id', x.id);\r\n                    if (!oldWidget) {\r\n                        // newly added widget\r\n                        new Widget($.extend(x, makeWidgetOpts()));\r\n                    } else {\r\n                        // existing widget - remove this widget from the list\r\n                        widgets.splice(oldWidget._i, 1);\r\n\r\n                        if (oldWidget.initDate < widgetDate) {\r\n                            // this widget needs to be reloaded\r\n                            oldWidget.reload(null, x);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                if (widgets.length) {\r\n                    // any widgets still left need to be deleted\r\n                    widgets.forEach(function(x) { x.destroy(true); });\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Get the widget objects for the dashboard.\r\n     * @returns {Widget[]} Array of widgets.\r\n     */\r\n    var getWidgets = function() {\r\n        return $.getAll('.grid-item').map(function(x) { return x.widget; });\r\n    };\r\n\r\n    /**\r\n     * Update widget tables on window resize.\r\n     */\r\n    var resizeLayout = function() {\r\n        var grid = makeWidgetOpts().grid;\r\n        getWidgets().forEach(function(x) {\r\n            x.updateLayout();\r\n            x.setupDraggie(null, grid);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Update widget position to avoid collisions after a resize or drag.\r\n     */\r\n    var updatePosition = function() {\r\n        var sorted = getWidgets();\r\n        sorted.sort(rectSort);\r\n\r\n        var l = sorted.length, aWidget, bWidget;\r\n        for (var i = 0; i < l; i++) {\r\n            aWidget = sorted[i];\r\n            aWidget.rect.updated = false;\r\n\r\n            for (var j = 0; j < l; j++) {\r\n                if (i === j) {\r\n                    continue;\r\n                }\r\n\r\n                bWidget = sorted[j];\r\n                if (bWidget.rect.overlaps(aWidget.rect)) {\r\n                    if (bWidget.rect.y > aWidget.rect.y) {\r\n                        // need to move down\r\n                        bWidget.setLocation(bWidget.rect.x, aWidget.rect.y + aWidget.rect.height);\r\n                    } else if (aWidget.rect.x + aWidget.rect.width + bWidget.rect.width > _columns) {\r\n                        // need to move down\r\n                        bWidget.setLocation(bWidget.rect.x, aWidget.rect.y + aWidget.rect.height);\r\n                    } else {\r\n                        // safe to move right\r\n                        bWidget.setLocation(aWidget.rect.x + aWidget.rect.width, bWidget.rect.y);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        saveDashboard();\r\n    };\r\n\r\n    /**\r\n     * Sort widgets from top left to bottom right.\r\n     * @param {Widget} a - First widget to compare.\r\n     * @param {Widget} b - Second widget to compare.\r\n     * @returns {number} Negative number if a comes first, positive number if b, zero if equal.\r\n     */\r\n    var rectSort = function(a, b) {\r\n        if (a.rect.y === b.rect.y && a.rect.x === b.rect.x) {\r\n            return a.rect.updated ? -1 : b.rect.updated ? 1 : 0;\r\n        }\r\n        if (a.rect.x === b.rect.x) {\r\n            return a.rect.y - b.rect.y;\r\n        }\r\n        return a.rect.x - b.rect.x;\r\n    };\r\n\r\n    /**\r\n     * Save dashboard settings back to server.\r\n     */\r\n    var saveDashboard = function() {\r\n        var positions = getWidgets().map(function(w) {\r\n            return {\r\n                Id: w.opts.id || 0,\r\n                Width: w.rect.width || 1,\r\n                Height: w.rect.height || 1,\r\n                X: w.rect.x || 0,\r\n                Y: w.rect.y || 0\r\n            };\r\n        });\r\n\r\n        if (_currentPositions && $.equals(_currentPositions, positions)) {\r\n            return;\r\n        }\r\n        _currentPositions = positions;\r\n\r\n        var dash = $.get('#dashboard');\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: dash.getAttribute('data-save-url'),\r\n            data: { Widgets: positions },\r\n            block: false\r\n        }, null);\r\n    };\r\n\r\n    /**\r\n     * Toggle full screen on escape key.\r\n     * @param {Event} evt - Key press event.\r\n     */\r\n    var checkKeyPress = function(evt) {\r\n        evt = evt || window.event;\r\n        if (evt.keyCode === 27) {\r\n            getWidgets().filter(function(x) { return x.isFullscreen; }).forEach(function(x) { x.toggleFullScreen(); });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set up content after page has loaded.\r\n     */\r\n    var pageLoaded = function() {\r\n        $.dialogs.processContent($.get('body'));\r\n\r\n        $.on('#toggleContextHelpBtn', 'click', function(e) {\r\n            e.preventDefault();\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: this.getAttribute('href')\r\n            }, function(data) {\r\n                $.toggleClass('#toggleContextHelpBtn', 'help-active', data.enabled);\r\n            });\r\n        });\r\n\r\n        $.on('#menuBtn', 'click', $.toggleClass.bind(null, 'body', 'toggled', null));\r\n\r\n        $.dispatch(document, $.events.dashboardLoad);\r\n    };\r\n\r\n    /**\r\n     * Run events needed for the inital page load.\r\n     */\r\n    if ($.resxLoaded) {\r\n        pageLoaded();\r\n    } else {\r\n        $.on(document, 'resxLoaded', pageLoaded);\r\n    }\r\n})(this.$, this.Widget);\r\n"]}