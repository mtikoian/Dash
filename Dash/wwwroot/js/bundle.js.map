{"version":3,"sources":["polyfills.js","core.js","Alertify.js","pjax.js","helpers.js","doT.js","flatpickr.js","Autocomplete.js","Chart.js","CollapsibleList.js","DashChart.js","Draggabilly.js","ColorPicker.js","Rect.js","doTable.js","Widget.js","content.js","dashboard.js"],"names":["CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","window","prototype","Event","global","factory","exports","module","define","amd","this","finallyConstructor","callback","constructor","then","value","resolve","reason","reject","noop","Promise","fn","TypeError","_state","_handled","_value","_deferreds","doResolve","handle","self","deferred","_immediateFn","cb","onFulfilled","onRejected","ret","e","promise","push","newValue","finale","thisArg","apply","arguments","bind","length","_unhandledRejectionFn","i","len","done","ex","setTimeoutFunc","setTimeout","prom","all","arr","res","val","call","args","remaining","Array","slice","race","values","setImmediate","err","console","warn","globalNS","Error","fetch","url","options","response","_keys","headers","header","request","getAllResponseHeaders","replace","m","key","toLowerCase","ok","status","statusText","responseURL","clone","text","responseText","json","JSON","parse","blob","Blob","keys","entries","get","n","has","XMLHttpRequest","open","method","setRequestHeader","withCredentials","credentials","onload","onerror","send","body","root","addClass","element","className","node","classList","add","src","isNull","cpy","isArray","map","x","isDate","Date","getTime","RegExp","source","ignoreCase","multiline","lastIndex","isNode","isObject","prop","hasOwnProperty","coalesce","defValue","equals","y","p","isUndefined","toString","extend","l","result","selector","container","querySelector","indexOf","sel","charAt","getElementById","substr","getElementsByClassName","getAll","includeContainer","list","querySelectorAll","matches","unshift","hasClass","contains","hasValue","getMonth","isNaN","isFunction","nodeType","nodeName","Element","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","s","on","useCapture","addEventListener","removeClass","remove","_toPascalKeys","obj","Object","newObj","toUpperCase","_toLowerKeys","_parseCss","cssText","match","regex","properties","exec","_toCSS","css","$","closest","firstChar","tSelector","lowerSelector","parentNode","id","hasAttribute","tagName","createNode","html","createElement","innerHTML","children","debounce","wait","timeout","context","timestamp","later","last","destroy","dispatch","dispatchEvent","findByKey","_i","forEach","subject","thisContext","iterator","hasPositiveValue","hide","maintainLayout","isEvent","isNumber","isString","isVisible","offsetParent","off","removeEventListener","onChange","changeFn","immediate","ready","readyState","setText","textContent","show","style","styles","overwrite","toggleClass","toggle","toPascalKeys","_hideElement","el","removeThis","removeChild","_alertify","parent","defaultOkLabel","okLabel","defaultCancelLabel","cancelLabel","maxLogItems","promptValue","promptPlaceholder","closeLogOnClick","delay","logContainerClass","dialogs","buttons","holder","cancel","input","message","log","build","item","btnTxt","type","close","elem","dialog","onOkay","onCancel","setup","click","existing","diff","notify","setupLogContainer","elLog","appendChild","btnOK","btnCancel","label","placeholder","ev","buttonClicked","inputValue","reset","which","select","focus","okBtn","cancelBtn","logTemplateMethod","Alertify","alert","confirm","prompt","success","error","str","defaultValue","dismissAll","updateResources","okay","pjax","firstRun","ignoreFileTypes","excludeClass","updateContent","newNode","title","getAttribute","onLoad","content","load","checkEvents","returnToTop","scrollTo","onUnload","unload","updateHistory","history","replaceState","location","href","pushState","loading","ajax","test","X-PJAX","submit","form","FormData","parseOptions","target","eventName","events","init","invoke","state","opt","srcElement","protocol","host","pathname","hash","split","pop","metaKey","ctrlKey","preventDefault","resx","encodeURIComponent","actionNode","action","dashboardLoad","dashboardUnload","resxLoaded","_ajax","onSuccess","onError","X-Requested-With","token","now","data","join","stringify","_checkStatus","_parse","reload","catch","_requestQueue","Request","abort","isInProcess","dequeue","execute","filter","contentType","logError","msg","lineNo","columnNo","stack","block","_resx","Content-Type","Accept","colors","hex2rgb","hex","r","parseInt","g","b","rgb2hex","color","rgb2hsl","rgb","h","max","Math","min","d","lib","settings","currency","symbol","format","decimal","thousand","precision","grouping","number","tokens","checkPrecision","round","abs","parseFormat","newFormat","unformat","unformatted","parseFloat","toFixed","power","pow","formatNumber","opts","usePrecision","base","mod","accounting","formatMoney","formats","pos","neg","zero","checkCurrencyFormat","shorten","sLen","newArr","monthUpdate","arrName","v","i18n","index","month","pad","String","fecha","twoDigits","word","literal","dayNames","monthNames","monthNamesShort","dayNamesShort","amPm","DoFn","D","formatFlags","dateObj","getDate","DD","Do","getDay","dd","ddd","dddd","M","MM","MMM","MMMM","YY","getFullYear","YYYY","getHours","hh","H","HH","getMinutes","mm","getSeconds","ss","S","getMilliseconds","SS","SSS","a","A","ZZ","o","getTimezoneOffset","floor","onejan","ceil","ll","q","parseFlags","day","cent","year","hour","minute","second","millisecond","isPm","minutes","parts","timezoneOffset","masks","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","mask","i18nSettings","literals","$0","$1","shift","dateStr","isValid","dateInfo","isUtc","info","search","today","date","UTC","resolveDefs","c","def","skip","code","assign","substring","defineParams","param","arg","Function","use","useParams","rw","__exp","unescape","doT","name","version","templateSettings","evaluate","interpolate","encode","conditional","iterate","varname","strip","append","selfcontained","doNotSkipEncoded","template","compile","encodeHTMLSource","encodeHTMLRules","&","<",">","\"","'","/","matchHTML","startend","start","end","startencode","tmpl","needhtmlencode","indv","cse","sid","elsecase","vname","iname","flatpickr","func","clearTimeout","compareDates","date1","date2","timeless","setHours","bool","tag","clearNode","firstChild","findParent","condition","createNumberInput","inputClassName","wrapper","numInput","arrowUp","arrowDown","pattern","setAttribute","FlatpickrInstance","instanceConfig","bindToInstance","setCalendarWidth","config","weekNumbers","showMonths","noCalendar","requestAnimationFrame","calendarContainer","visibility","display","daysContainer","daysWidth","days","offsetWidth","width","weekWrapper","removeProperty","updateTime","selectedDates","isKeyDown","amPM","l10n","int","step","curValue","delta","isHourElem","hourElement","isMinuteElem","minuteElement","incrementNumInput","timeWrapper","prevValue","_input","setHoursFromInputs","updateValue","_debouncedChange","hours","seconds","secondElement","ampm2military","limitMinHours","minTime","minDate","minDateHasTime","latestSelectedDateObj","maxTime","maxDate","maxDateHasTime","setHoursFromDate","setDefaultHours","defaultHour","defaultMinute","defaultSeconds","min_hr","min_minutes","max_hr","max_minutes","isMobile","time_24hr","onYearInput","changeYear","handler","_handlers","onClick","triggerChange","triggerEvent","jumpToDate","jumpDate","jumpTo","parseDate","currentYear","currentMonth","errorHandler","redraw","timeIncrement","inputElem","createDay","dayNumber","dateIsEnabled","isEnabled","dayElement","$i","formatDate","ariaDateFormat","todayDateElem","tabIndex","isDateSelected","selectedDateElem","mode","isDateInRange","insertAdjacentHTML","getWeek","focusOnDayElem","targetNode","onMouseOver","getFirstAvailableDay","startMonth","endMonth","startIndex","endIndex","focusOnDay","current","offset","dayFocused","isInView","activeElement","startElem","givenMonth","loopDelta","numMonthDays","changeMonth","getNextAvailableDay","buildMonthDays","firstOfMonth","firstDayOfWeek","prevMonthDays","utils","getDaysInMonth","daysInMonth","createDocumentFragment","isMultiMonth","prevMonthDayClass","nextMonthDayClass","dayIndex","dayNum","dayContainer","buildDays","frag","setMonth","buildMonth","monthNavFragment","monthElement","yearInput","tabindex","yearElement","childNodes","yearAriaLabel","disabled","buildMonths","monthNav","prevMonthNav","yearElements","monthElements","nextMonthNav","buildWeekdays","weekdayContainer","updateWeekdays","weekdays","shorthand","splice","concat","is_offset","_hidePrevMonthArrow","_hideNextMonthArrow","updateNavigationCurrentMonth","isCalendarElem","appendTo","documentClick","isOpen","inline","isCalendarElement","isInput","altInput","path","lostFocus","relatedTarget","isIgnored","ignoredFocusElements","some","clear","newYear","newYearNum","isNewYear","dateToCheck","enable","disable","array","parsed","from","to","onKeyDown","allowInput","allowKeydown","allowInlineKeydown","keyCode","setDate","altFormat","dateFormat","blur","isTimeObj","timeContainer","selectDate","focusAndClose","delta_1","enableTime","elems","shiftKey","hoverDate","firstElementChild","initialDate","rangeStartDate","rangeEndDate","lastDate","lastChild","containsDisabled","minRange","maxRange","t","duration","DAY","prevMonth","_loop_1","dayElem","outOfRange","isBetween","onResize","static","positionCalendar","minMaxDateSetter","inverseDateObj","currentYearElement","removeAttribute","setupLocale","locale","l10ns","__assign","tokenRegex","K","createDateFormatter","createDateParser","customPositionElement","positionElement","_positionElement","calendarHeight","reduce","acc","child","offsetHeight","calendarWidth","configPos","position","configPosVertical","configPosHorizontal","inputBounds","getBoundingClientRect","distanceFromBottom","innerHeight","bottom","showOnTop","top","pageYOffset","left","pageXOffset","right","rightMost","navigator","userAgent","msMaxTouchPoints","stopPropagation","selectedDate","shouldChangeMonth","selectedIndex","sort","showTimeInput","closeOnSelect","single","range","setSelectedDate","inputDate","dates","conjunction","rangeSeparator","parseDateRules","rule","hooks","initEvent","monthToStr","shorthandCurrentMonth","mobileInput","mobileFormatStr","joinChar","dObj","onMonthNavClick","isPrevMonth","isNextMonth","defaultConfig","english","_bind","_setHoursFromDate","_positionCalendar","triggerChangeEvent","_createElement","insertBefore","_type","k","_","wasOpen","set","option","CALLBACKS","boolOpts","userConfig","dataset","formats$$1","defineProperty","_enable","_disable","timeMode","enableSeconds","_minDate","_maxDate","minMaxTimeSetter","_minTime","_maxTime","arrayify","disableMobile","plugins","pluginConf","parseConfig","wrap","altInputClass","required","nextSibling","preloadedDate","defaultDate","_showTimeInput","setupDates","yr","fragment","prevArrow","nextArrow","__hidePrevMonthArrow","__hideNextMonthArrow","innerContainer","_a","weekAbbreviation","buildWeeks","rContainer","separator","hourInput","minuteInput","military2ampm","hourIncrement","minuteIncrement","secondInput","toggleTitle","buildTime","animate","customAppend","inputType","setupMobile","debouncedResize","DEBOUNCED_CHANGE_MS","ontouchstart","capture","clickOpens","bindEvents","isSafari","_flatpickr","nodeList","nodes","instances","do_nothing","monthNumber","months","revFormat","F","monthName","longhand","G","J","shortMonth","setSeconds","U","unixSeconds","W","weekNum","weekNumber","Y","setFullYear","Z","ISODate","setMinutes","j","w","toISOString","ordinal","nth","scrollTitle","_b","defaults","_c","frmt","overrideLocale","givenFormat","customLocale","parsedDate","date_orig","datestr","trim","matched","ops","matchIndex","regexStr","token_1","isBackSlash","escaped","ts","ts1","ts2","givenDate","week1","onClose","onDayCreate","onDestroy","onMonthChange","onOpen","onParseConfig","onReady","onValueUpdate","onYearChange","onPreCalendarPosition","args_1","HTMLElement","HTMLCollection","NodeList","en","localize","setDefaults","fp_incr","es","fp","Spanish","Autocomplete","addEvent","removeEvent","live","elClass","found","parentElement","minChars","offsetLeft","offsetTop","cache","sourceData","menuClass","renderItem","re","onSelect","term","that","sc","autocompleteAttr","last_val","updateSC","resize","next","rect","documentElement","scrollLeft","scrollTop","maxHeight","getComputedStyle","currentStyle","suggestionHeight","scrTop","selTop","blurHandler","over_sb","suggest","keydownHandler","previousSibling","keyupHandler","timer","part","focusHandler","f","Chart","u","require","1","getRgba","string","colorNames","scale","getHsla","alpha","getHwb","rgbaString","rgba","percentaString","hslaString","hsla","num","hexDouble","getRgb","getHsl","getAlpha","vals","hexString","rgbString","percentString","hslString","hwbString","hwb","keyword","reverseNames","5","2","convert","Color","valid","hsl","hsv","cmyk","setValues","red","lightness","whiteness","cyan","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","spaces","maxes","getValues","space","chans","capped","sname","svalues","4","3","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","hwb2rgb","wh","bl","cmyk2rgb","xyz2rgb","xyz2lab","lab2xyz","lab","y2","lab2lch","hr","atan2","PI","sqrt","lab2rgb","lch2lab","lch","cos","sin","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","conversions","Converter","pair","convs","routeSpace","fspace","6","helpers","elements","Interaction","layouts","platform","Ticks","register","initialize","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","31","36","39","40","44","45","46","7","8","9","Bar","Doughnut","Line","_set","hover","scales","xAxes","categoryPercentage","barPercentage","gridLines","offsetGridLines","yAxes","axis","rectangle","borderSkipped","tooltips","callbacks","yLabel","labels","datasets","datasetIndex","xLabel","controllers","bar","DatasetController","dataElementType","Rectangle","meta","getMeta","getDataset","update","ilen","rects","_ruler","getRuler","updateElement","chart","custom","rectangleOptions","_xScale","getScaleForId","xAxisID","_yScale","yAxisID","_datasetIndex","_index","_model","datasetLabel","backgroundColor","valueAtIndexOrDefault","borderColor","borderWidth","updateElementGeometry","pivot","model","vscale","getValueScale","getBasePixel","horizontal","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","height","size","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacked","stacks","getDatasetMeta","isDatasetVisible","getStackCount","getStackIndex","stackCount","pixels","getPixelForValue","isNullOrUndef","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","controller","percent","chunk","computeFlexCategoryTraits","thickness","count","computeFitCategoryTraits","stackIndex","valueOrDefault","maxBarThickness","Infinity","draw","canvas","clipArea","ctx","chartArea","unclipArea","setHoverStyle","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","rectangleElementOptions","horizontalBar","animation","animateRotate","animateScale","legendCallback","legend","generateLabels","ds","arc","arcOpts","fillStyle","strokeStyle","lineWidth","hidden","legendItem","cutoutPercentage","rotation","circumference","tooltipItem","dataLabel","doughnut","pie","Arc","linkScales","getRingIndex","ringIndex","me","availableWidth","availableHeight","minSize","startAngle","endAngle","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","each","animationOpts","centerX","centerY","calculateCircumference","arcs","hoverWidth","_chart","showLines","spanGaps","lineEnabled","showLine","line","datasetElementType","Point","points","lineElementOptions","tension","lineTension","_scale","_children","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","fill","steppedLine","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","point","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","yScale","xScale","pointOptions","radius","pointRadius","hitRadius","pointHitRadius","NaN","calculatePointY","pointStyle","dsMeta","sumPos","sumNeg","stackedRightValue","Number","rightValue","capControlPoint","pt","controlPoints","area","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","controlPointNextY","capBezierPoints","hoverRadius","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","easing","onProgress","onComplete","Animation","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","addAnimation","lazy","animating","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","framesToDrop","advance","endTime","positionIsHorizontal","types","construct","configMerge","initConfig","acquireContext","uid","aspectRatio","_bufferedRender","retinaScale","devicePixelRatio","responsive","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","maintainAspectRatio","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","responsiveAnimationDuration","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","items","updated","dtype","dposition","isDefault","scaleType","scaleClass","scaleService","getScaleConstructor","mergeTicksOptions","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","ControllerClass","resetElements","tooltip","newOptions","removeBox","_options","updateConfig","_invalidate","_data","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","effects","stepDecimal","easingValue","transition","boxes","box","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","modes","getElementsAtEvent","intersect","getElementsAtXAxis","getElementsAtEventForMode","getDatasetAtEvent","_meta","generateLegend","unbindEvents","releaseContext","toBase64Image","toDataURL","Tooltip","_chartInstance","listeners","_listeners","listener","eventHandler","updateHoverStyle","enabled","changed","handleEvent","_start","bufferedRequest","animationDuration","hoverOptions","active","onHover","native","arrayEquals","Controller","unlistenArrayEvents","stub","_chartjs","arrayEvents","addElements","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","configurable","enumerable","object","listenArrayEvents","resyncElements","elementOpts","numMeta","numData","insertElements","onDataPush","onDataPop","onDataShift","onDataSplice","onDataUnshift","inherits","scope","merge","configuration","_view","ease","view","actual","origin","c0","c1","isFinite","tooltipPosition","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","constrainedNode","constrainedContainer","hasCNode","hasCContainer","infinity","POSITIVE_INFINITY","merger","tval","sval","scaleMerge","getScaleDefaults","_merger","slen","where","collection","filterCallback","filtered","findNextWhere","arrayToSearch","currentItem","findPreviousWhere","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","log10","exponent","LOG10E","powerOf10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distance","distanceBetweenPoints","pt1","pt2","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","alphaK","betaK","tauK","squaredMagnitude","deltaX","loop","niceNum","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","getRelativePosition","mouseX","mouseY","originalEvent","currentTarget","boundingRect","touches","clientX","clientY","paddingLeft","getStyle","paddingTop","paddingRight","paddingBottom","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","clientWidth","cw","clientHeight","ch","property","getPropertyValue","forceRatio","pixelRatio","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","defaultColor","colorValue","CanvasPattern","parseVisibleItems","jlen","getIntersectItems","inRange","getNearestItems","distanceMetric","minDistance","nearestItems","getCenterPoint","getDistanceMetricForAxis","useX","useY","deltaY","indexMode","x-axis","nearest","getArea","intersectsItem","inXRange","inYRange","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","layout","padding","filterByPosition","sortByWeight","reverse","_tmpIndex_","v0","v1","addBox","fullWidth","layoutItem","configure","props","fitBox","minBoxSize","minBoxSizes","minBox","scaleMargin","totalLeftBoxesWidth","maxHorizontalLeftPadding","totalRightBoxesWidth","maxHorizontalRightPadding","chartWidth","maxChartAreaWidth","chartHeight","maxChartAreaHeight","placeBox","leftPadding","rightPadding","totalTopBoxesHeight","layoutOptions","toPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","totalBottomBoxesHeight","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","_plugins","_cacheId","plugin","unregister","idx","hook","descriptor","descriptors","$plugins","labelsFromTicks","getLineValue","lineValue","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","formatters","minor","major","computeTextSize","tick","parseFontOptions","globalDefaults","fontSize","family","parseLineHeight","toLineHeight","Scale","_ticks","beforeUpdate","maxWidth","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","rawValue","getLabelForIndex","getValueForPixel","pixel","finalVal","getPixelForDecimal","valueOffset","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","optionMajorTicks","isRotated","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","zeroLineIndex","tx1","ty1","tx2","ty2","x1","y1","x2","labelX","labelY","textAlign","textBaseline","labelYOffset","xLineValue","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","save","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","constructors","registerScaleType","scaleConstructor","scaleDefaults","updateScaleDefaults","additions","linear","tickValue","logDelta","tickString","numDecimal","logarithmic","remain","toExponential","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","createTooltipItem","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","dataPoints","vm","paddingAndSize","radiusAndPadding","getBackgroundPoint","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","quadraticCurveTo","closePath","hasTooltipContent","average","eventPosition","nearestElement","tp","27","inLabelRange","chartX","chartY","pointRelativePosition","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","28","currentVM","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","29","xRange","drawPoint","30","isVertical","getBarBounds","halfWidth","halfHeight","cornerAt","corners","startCorner","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corner","bounds","32","clearRect","roundedRect","rx","ry","edgeLength","xOffset","yOffset","SQRT2","leftX","topY","sideSize","drawImage","clip","flip","bezierCurveTo","drawRoundedRectangle","33","loopable","a0","a1","klen","_mergerIf","mergeIf","sources","setFn","extensions","ChartElement","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","34","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","35","inputs","37","getContext","38","readUsedSize","eventListenerOptions","nativeEvent","addResizeListener","expando","EXPANDO_KEY","resizer","cls","CSS_PREFIX","expand","shrink","_reset","onScroll","createResizer","ticking","throttled","proxy","renderProxy","animationName","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","reflow","CSS_RENDER_MONITOR","watchForRender","removeResizeListener","unwatchForRender","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","supports","passive","_enabled","renderHeight","renderWidth","initial","displayWidth","displayHeight","initCanvas","proxies","fromNativeEvent","basic","dom","implementation","filler","41","42","43","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","getBasePosition","resolveTarget","propagate","visited","visible","createMapper","mappers","isDrawable","drawArea","curve0","curve1","len0","len1","boundary","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","span","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","createNewLegendAndAttach","legendOpts","Legend","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","_element","beforeInit","afterEvent","createNewTitleBlockAndAttach","titleOpts","Title","titleBlock","textSize","titleX","titleY","titleFont","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","LinearScale","LinearScaleBase","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","tickFontSize","handleDirectionalChanges","innerDimension","ticksAsNumbers","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","stepSize","fixedStepSize","generationOptions","dataRange","spacing","niceRange","niceMin","niceMax","numSpaces","generateTicks","CollapsibleList","lis","createClickListener","checked","pi","checkedRelative","relatives","forceOpen","uls","li","DashChart","showLegend","dataFn","errorFn","toggleExportFn","run","randomWithin","random","randomColor","randomColors","cnt","parseColor","ranges","rows","yTitle","xType","currencyFormat","chartType","isRadial","yType","chartData","getSize","getStyleSize","isSetup","div","borderStyle","boxSizing","isBoxSizeOuter","innerWidth","outerWidth","outerHeight","measurementsLength","measurements","getZeroSize","isBorderBox","measurement","paddingWidth","paddingHeight","marginWidth","marginLeft","marginRight","marginHeight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderHeight","borderTopWidth","borderBottomWidth","isBorderBoxSizeOuter","styleWidth","styleHeight","EvEmitter","_events","emitEvent","Unipointer","proto","create","bindStartEvent","_bindStartEvent","unbindStartEvent","isBind","bindMethod","pointerEnabled","msPointerEnabled","getTouch","pointerIdentifier","onmousedown","button","_pointerDown","changedTouches","onMSPointerDown","onpointerdown","pointer","isPointerDown","pointerId","identifier","pointerDown","_bindPostStartEvents","postStartEvents","mousedown","MSPointerDown","_boundPointerEvents","_unbindPostStartEvents","onmousemove","_pointerMove","onMSPointerMove","onpointermove","ontouchmove","touch","pointerMove","onmouseup","_pointerUp","onMSPointerUp","onpointerup","ontouchend","_pointerDone","pointerUp","pointerDone","onMSPointerCancel","onpointercancel","_pointerCancel","ontouchcancel","pointerCancel","getPointerPoint","pageX","pageY","Unidragger","bindHandles","_bindHandles","unbindHandles","binderExtra","handles","_dragPointerDown","focused","pointerDownPoint","canPreventDefaultOnPointerDown","moveVector","_dragPointerMove","_dragMove","movePoint","isDragging","hasDragStarted","_dragStart","_dragPointerUp","_dragEnd","_staticClick","dragStartPoint","isPreventingClicks","dragStart","dragMove","dragEnd","onclick","isIgnoringMouseUp","staticClick","Draggabilly","_create","applyGrid","grid","applyMinZero","drag","lastTime","currTime","timeToCall","transformProperty","transform","positionValues","relative","absolute","fixed","_getPosition","startPoint","dragPoint","startPosition","setHandles","_getPositionCoord","_addTransformPosition","styleSide","measure","parentSize","matrixValues","xIndex","translateX","translateY","measureContainment","setLeftTop","containment","elemSize","containerSize","elemRect","containerRect","borderSizeX","borderSizeY","relativeStartPosition","containSize","dragX","dragY","gridX","gridY","containDrag","minZero","positionDrag","ColorPicker","attrs","createElementNS","svgNS","draggie","colorpickerHTMLSnippet","slideElement","pickerElement","slideIndicator","pickerIndicator","slideClone","slide","cloneNode","pickerClone","picker","hsvGradient","hsvRect","uniqID","blackAndWhiteGradients","whiteAndBlackRects","slideListener","slideHandler","pickerListener","pickerHandler","addEvents","SVGAngle","hasFeature","xmlns","stop-color","stop-opacity","namespaces","R","B","X","C","V","hex2hsv","background-color","positionIndicators","setColor","setHex","pickerHeight","Rect","overlaps","thisRight","thisBottom","rectRight","rectBottom","doTable","_templates","headerFn","footerFn","bodyFn","loadingFn","noDataFn","defaultCompare","getFieldValue","pixelToFloat","disableIf","editable","searchable","storeSettings","loadAll","requestMethod","storeUrl","storeRequestMethod","displayDateFormat","displayCurrencyFormat","requestParams","columns","requestUsePascalCase","columnMinWidth","itemsPerPage","searchQuery","currentStartItem","currentEndItem","sorting","dataDateFormat","layoutSet","loadingError","filteredTotal","results","pageTotal","totalDistance","lastSeenAt","columnRenderer","colGroups","intColumns","dateColumns","currencyColumns","storeFunction","rowTemplateFn","displayValueFn","dataType","store","sortColumns","tempNode","field","column","sortable","dir","sortDir","sortOrder","sortColumn","loadData","myKey","localStorage","ItemsPerPage","CurrentStartItem","SearchQuery","Width","Sorting","buildSortList","Columns","processData","filterResults","buildParams","refresh","StartItem","Items","Query","Sort","startItem","query","setCurrentStartItem","setItemsPerPage","setSearchQuery","requestTimer","moveToPage","changePage","page","resetSort","changeSort","fieldName","getSelection","removeAllRanges","aa","bb","setLayout","contentNode","getContainer","table","tableLayout","tableHeaderRow","tHead","hWidth","tWidth","cells","cWidth","colGroup","scroll","onHeaderMouseDown","inResizeArea","cellEl","stopImmediatePropagation","resizeContext","colIndex","cellIndex","initX","scrWidth","initTblWidth","initColWidth","layoutTimer","onMouseMove","newStyle","newColWidth","onMouseUp","newTblWidth","tblX","clientLeft","previousElementSibling","touchHandler","mouseEvent","simulatedEvent","initMouseEvent","screenX","screenY","thead","ths","mouseFunc","arrows","move","up","sortArrows","bodyHTML","makeRow","Widget","widget","isData","refreshSeconds","baseUrl","interval","isFullscreen","initDate","dragMargin","setupDraggie","processJson","setInterval","forceRefresh","toggleFullScreen","moveDraggie","columnWidth","rowHeight","stopDrag","resizeDraggie","initResize","stopResize","setLocation","layoutCallback","setSize","updatedDate","updateDate","showMsg","toLocaleTimeString","clearInterval","updateStyle","buildClassList","totalDestruction","fullScreenIcon","_autocompletes","_draggabillies","_charts","_colorpickers","conditionallyDisable","focusOnClose","startColumnDrag","stopColumnDrag","newPos","leftItems","columnSort","rightItems","updateColumnList","updateColumn","inputReplace","_toggles","nav-menu","dotable","context-help","collapsible-list","input-replace","autocomplete","column-selector","content-replace","existingNode","processToggles","replaceChild","datepicker","chart-export","chartContainer","colorpicker","isUnload","processContent","dlg","autofocus","pageLoaded","_loadingDiv","_currentPositions","_windowEvents","makeWidgetOpts","dashboard","updatePosition","dash","widgets","keydown","checkKeyPress","resizeLayout","getWidgets","sorted","rectSort","aWidget","bWidget","saveDashboard","positions","Id","Height","Widgets"],"mappings":"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","file":"bundle.js","sourcesContent":["/*!\r\n * CustomEvent polyfill\r\n * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\r\n */\r\n(function() {\r\n    if (typeof window.CustomEvent === 'function') return false;\r\n\r\n    function CustomEvent(event, params) {\r\n        params = params || { bubbles: false, cancelable: false, detail: undefined };\r\n        var evt = document.createEvent('CustomEvent');\r\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n        return evt;\r\n    }\r\n\r\n    CustomEvent.prototype = window.Event.prototype;\r\n    window.CustomEvent = CustomEvent;\r\n})();\r\n\r\n/*!\r\n * Promise polyfill\r\n * https://github.com/taylorhakes/promise-polyfill\r\n */\r\n/* global global, setImmediate */\r\n(function(global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory() :\r\n        typeof define === 'function' && define.amd ? define(factory) :\r\n            (factory());\r\n}(this, (function() {\r\n    'use strict';\r\n\r\n    /**\r\n     * @this {Promise}\r\n     */\r\n    function finallyConstructor(callback) {\r\n        var constructor = this.constructor;\r\n        return this.then(\r\n            function(value) {\r\n                return constructor.resolve(callback()).then(function() {\r\n                    return value;\r\n                });\r\n            },\r\n            function(reason) {\r\n                return constructor.resolve(callback()).then(function() {\r\n                    return constructor.reject(reason);\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    // Store setTimeout reference so promise-polyfill will be unaffected by\r\n    // other code modifying setTimeout (like sinon.useFakeTimers())\r\n    var setTimeoutFunc = setTimeout;\r\n\r\n    function noop() { }\r\n\r\n    // Polyfill for Function.prototype.bind\r\n    function bind(fn, thisArg) {\r\n        return function() {\r\n            fn.apply(thisArg, arguments);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Function} fn\r\n     */\r\n    function Promise(fn) {\r\n        if (!(this instanceof Promise))\r\n            throw new TypeError('Promises must be constructed via new');\r\n        if (typeof fn !== 'function') throw new TypeError('not a function');\r\n        /** @type {!number} */\r\n        this._state = 0;\r\n        /** @type {!boolean} */\r\n        this._handled = false;\r\n        /** @type {Promise|undefined} */\r\n        this._value = undefined;\r\n        /** @type {!Array<!Function>} */\r\n        this._deferreds = [];\r\n\r\n        doResolve(fn, this);\r\n    }\r\n\r\n    function handle(self, deferred) {\r\n        while (self._state === 3) {\r\n            self = self._value;\r\n        }\r\n        if (self._state === 0) {\r\n            self._deferreds.push(deferred);\r\n            return;\r\n        }\r\n        self._handled = true;\r\n        Promise._immediateFn(function() {\r\n            var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\r\n            if (cb === null) {\r\n                (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\r\n                return;\r\n            }\r\n            var ret;\r\n            try {\r\n                ret = cb(self._value);\r\n            } catch (e) {\r\n                reject(deferred.promise, e);\r\n                return;\r\n            }\r\n            resolve(deferred.promise, ret);\r\n        });\r\n    }\r\n\r\n    function resolve(self, newValue) {\r\n        try {\r\n            // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\r\n            if (newValue === self)\r\n                throw new TypeError('A promise cannot be resolved with itself.');\r\n            if (\r\n                newValue &&\r\n                (typeof newValue === 'object' || typeof newValue === 'function')\r\n            ) {\r\n                var then = newValue.then;\r\n                if (newValue instanceof Promise) {\r\n                    self._state = 3;\r\n                    self._value = newValue;\r\n                    finale(self);\r\n                    return;\r\n                } else if (typeof then === 'function') {\r\n                    doResolve(bind(then, newValue), self);\r\n                    return;\r\n                }\r\n            }\r\n            self._state = 1;\r\n            self._value = newValue;\r\n            finale(self);\r\n        } catch (e) {\r\n            reject(self, e);\r\n        }\r\n    }\r\n\r\n    function reject(self, newValue) {\r\n        self._state = 2;\r\n        self._value = newValue;\r\n        finale(self);\r\n    }\r\n\r\n    function finale(self) {\r\n        if (self._state === 2 && self._deferreds.length === 0) {\r\n            Promise._immediateFn(function() {\r\n                if (!self._handled) {\r\n                    Promise._unhandledRejectionFn(self._value);\r\n                }\r\n            });\r\n        }\r\n\r\n        for (var i = 0, len = self._deferreds.length; i < len; i++) {\r\n            handle(self, self._deferreds[i]);\r\n        }\r\n        self._deferreds = null;\r\n    }\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    function Handler(onFulfilled, onRejected, promise) {\r\n        this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\r\n        this.onRejected = typeof onRejected === 'function' ? onRejected : null;\r\n        this.promise = promise;\r\n    }\r\n\r\n    /**\r\n     * Take a potentially misbehaving resolver function and make sure\r\n     * onFulfilled and onRejected are only called once.\r\n     *\r\n     * Makes no guarantees about asynchrony.\r\n     */\r\n    function doResolve(fn, self) {\r\n        var done = false;\r\n        try {\r\n            fn(\r\n                function(value) {\r\n                    if (done) return;\r\n                    done = true;\r\n                    resolve(self, value);\r\n                },\r\n                function(reason) {\r\n                    if (done) return;\r\n                    done = true;\r\n                    reject(self, reason);\r\n                }\r\n            );\r\n        } catch (ex) {\r\n            if (done) return;\r\n            done = true;\r\n            reject(self, ex);\r\n        }\r\n    }\r\n\r\n    Promise.prototype['catch'] = function(onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n\r\n    Promise.prototype.then = function(onFulfilled, onRejected) {\r\n        // @ts-ignore\r\n        var prom = new this.constructor(noop);\r\n\r\n        handle(this, new Handler(onFulfilled, onRejected, prom));\r\n        return prom;\r\n    };\r\n\r\n    Promise.prototype['finally'] = finallyConstructor;\r\n\r\n    Promise.all = function(arr) {\r\n        return new Promise(function(resolve, reject) {\r\n            if (!arr || typeof arr.length === 'undefined')\r\n                throw new TypeError('Promise.all accepts an array');\r\n            var args = Array.prototype.slice.call(arr);\r\n            if (args.length === 0) return resolve([]);\r\n            var remaining = args.length;\r\n\r\n            function res(i, val) {\r\n                try {\r\n                    if (val && (typeof val === 'object' || typeof val === 'function')) {\r\n                        var then = val.then;\r\n                        if (typeof then === 'function') {\r\n                            then.call(\r\n                                val,\r\n                                function(val) {\r\n                                    res(i, val);\r\n                                },\r\n                                reject\r\n                            );\r\n                            return;\r\n                        }\r\n                    }\r\n                    args[i] = val;\r\n                    if (--remaining === 0) {\r\n                        resolve(args);\r\n                    }\r\n                } catch (ex) {\r\n                    reject(ex);\r\n                }\r\n            }\r\n\r\n            for (var i = 0; i < args.length; i++) {\r\n                res(i, args[i]);\r\n            }\r\n        });\r\n    };\r\n\r\n    Promise.resolve = function(value) {\r\n        if (value && typeof value === 'object' && value.constructor === Promise) {\r\n            return value;\r\n        }\r\n\r\n        return new Promise(function(resolve) {\r\n            resolve(value);\r\n        });\r\n    };\r\n\r\n    Promise.reject = function(value) {\r\n        return new Promise(function(resolve, reject) {\r\n            reject(value);\r\n        });\r\n    };\r\n\r\n    Promise.race = function(values) {\r\n        return new Promise(function(resolve, reject) {\r\n            for (var i = 0, len = values.length; i < len; i++) {\r\n                values[i].then(resolve, reject);\r\n            }\r\n        });\r\n    };\r\n\r\n    // Use polyfill for setImmediate for performance gains\r\n    Promise._immediateFn =\r\n        (typeof setImmediate === 'function' &&\r\n            function(fn) {\r\n                setImmediate(fn);\r\n            }) ||\r\n        function(fn) {\r\n            setTimeoutFunc(fn, 0);\r\n        };\r\n\r\n    Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\r\n        if (typeof console !== 'undefined' && console) {\r\n            console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\r\n        }\r\n    };\r\n\r\n    /** @suppress {undefinedVars} */\r\n    var globalNS = (function() {\r\n        // the only reliable means to get the global object is\r\n        // `Function('return this')()`\r\n        // However, this causes CSP violations in Chrome apps.\r\n        if (typeof self !== 'undefined') {\r\n            return self;\r\n        }\r\n        if (typeof window !== 'undefined') {\r\n            return window;\r\n        }\r\n        if (typeof global !== 'undefined') {\r\n            return global;\r\n        }\r\n        throw new Error('unable to locate global object');\r\n    })();\r\n\r\n    if (!('Promise' in globalNS)) {\r\n        globalNS['Promise'] = Promise;\r\n    } else if (!globalNS.Promise.prototype['finally']) {\r\n        globalNS.Promise.prototype['finally'] = finallyConstructor;\r\n    }\r\n})));\r\n\r\n/*!\r\n * Fetch polyfill\r\n * https://github.com/developit/unfetch\r\n */\r\n(function() {\r\n    if (typeof window.fetch === 'function') return false;\r\n\r\n    window.fetch = function(url, options) {\r\n        options = options || {};\r\n        return new Promise(function(resolve, reject) {\r\n            var request = new XMLHttpRequest();\r\n\r\n            request.open(options.method || 'get', url, true);\r\n\r\n            for (var i in options.headers) {\r\n                request.setRequestHeader(i, options.headers[i]);\r\n            }\r\n\r\n            request.withCredentials = options.credentials == 'include';\r\n\r\n            request.onload = function() {\r\n                resolve(response());\r\n            };\r\n\r\n            request.onerror = reject;\r\n\r\n            request.send(options.body);\r\n\r\n            function response() {\r\n                var _keys = [],\r\n                    all = [],\r\n                    headers = {},\r\n                    header = void 0;\r\n\r\n                request.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm, function(m, key, value) {\r\n                    _keys.push(key = key.toLowerCase());\r\n                    all.push([key, value]);\r\n                    header = headers[key];\r\n                    headers[key] = header ? header + ',' + value : value;\r\n                });\r\n\r\n                return {\r\n                    ok: (request.status / 100 | 0) == 2, // 200-299\r\n                    status: request.status,\r\n                    statusText: request.statusText,\r\n                    url: request.responseURL,\r\n                    clone: response,\r\n                    text: function text() {\r\n                        return Promise.resolve(request.responseText);\r\n                    },\r\n                    json: function json() {\r\n                        return Promise.resolve(request.responseText).then(JSON.parse);\r\n                    },\r\n                    blob: function blob() {\r\n                        return Promise.resolve(new Blob([request.response]));\r\n                    },\r\n                    headers: {\r\n                        keys: function keys() {\r\n                            return _keys;\r\n                        },\r\n                        entries: function entries() {\r\n                            return all;\r\n                        },\r\n                        get: function get(n) {\r\n                            return headers[n.toLowerCase()];\r\n                        },\r\n                        has: function has(n) {\r\n                            return n.toLowerCase() in headers;\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        });\r\n    };\r\n})();\r\n","/*!\r\n * Contains all the common JS functions Dash needs.\r\n */\r\n(function(root) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Add a class to an element.\r\n     * @param {Node} element - Element to add the class to.\r\n     * @param {string} className - Name of class to add.\r\n     */\r\n    var addClass = function(element, className) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.classList.add(className);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Deep copy of an object, by value not by ref.\r\n     * @param {Object} src - Object to copy\r\n     * @returns {Object} New copy of the object\r\n     */\r\n    var clone = function(src) {\r\n        if (isNull(src)) {\r\n            return src;\r\n        }\r\n\r\n        var cpy;\r\n        if (isArray(src)) {\r\n            return src.map(function(x) { return clone(x); });\r\n        }\r\n        if (isDate(src)) {\r\n            return new Date(src.getTime());\r\n        }\r\n        if (src instanceof RegExp) {\r\n            cpy = new RegExp(src.source);\r\n            cpy.global = src.global;\r\n            cpy.ignoreCase = src.ignoreCase;\r\n            cpy.multiline = src.multiline;\r\n            cpy.lastIndex = src.lastIndex;\r\n            return cpy;\r\n        }\r\n        if (isNode(src)) {\r\n            return src;\r\n        }\r\n        if (isObject(src)) {\r\n            cpy = {};\r\n            for (var prop in src) {\r\n                if (src.hasOwnProperty(prop)) {\r\n                    cpy[prop] = clone(src[prop]);\r\n                }\r\n            }\r\n            return cpy;\r\n        }\r\n        return src;\r\n    };\r\n\r\n    /**\r\n     * Get closest parent that matches the selector.\r\n     * @param {string} selector - ID, class name, tag name, or data attribute to find.\r\n     * @param {Node} node - Node to start search from.\r\n     * @returns {Node} Matched node or null.\r\n     */\r\n    var closest = function(selector, node) {\r\n        var firstChar = selector.charAt(0);\r\n        var tSelector = selector.substr(1);\r\n        var lowerSelector = selector.toLowerCase();\r\n\r\n        while (node !== document) {\r\n            node = node.parentNode;\r\n            if (!node) {\r\n                return null;\r\n            }\r\n\r\n            // If selector is a class\r\n            if (firstChar === '.' && node.classList && node.classList.contains(tSelector)) {\r\n                return node;\r\n            }\r\n            // If selector is an ID\r\n            if (firstChar === '#' && node.id === tSelector) {\r\n                return node;\r\n            }\r\n            // If selector is a data attribute\r\n            if (firstChar === '[' && node.hasAttribute(selector.substr(1, selector.length - 2))) {\r\n                return node;\r\n            }\r\n            // If selector is a tag\r\n            if (node.tagName && node.tagName.toLowerCase() === lowerSelector) {\r\n                return node;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Coalesce value and defValue.\r\n     * @param {*} value - First value to check.\r\n     * @param {*} defValue - Default value.\r\n     * @returns {*} Value if it is not null, else defValue.\r\n     */\r\n    var coalesce = function(value, defValue) {\r\n        return isNull(value) ? defValue : value;\r\n    };\r\n\r\n    /**\r\n     * Create a dom node from an html string. Expects a single root element.\r\n     * @param {string} html - HTML content for the node.\r\n     * @returns {Node} New DOM node.\r\n     */\r\n    var createNode = function(html) {\r\n        var node = document.createElement('div');\r\n        node.innerHTML = html;\r\n        return html && html.length ? node.children[0] : node;\r\n    };\r\n\r\n    /**\r\n     * Create a debounce handler to prevent a function from being called too frequently.\r\n     * @param {Function} fn - Function to debounce.\r\n     * @param {number} wait - Milliseconds to wait between running the function.\r\n     * @returns {Function} A closure wrapping the passed in function.\r\n     */\r\n    var debounce = function(fn, wait) {\r\n        var timeout, args, context, timestamp;\r\n\r\n        return function() {\r\n            context = this;\r\n            args = [].slice.call(arguments, 0);\r\n            timestamp = new Date();\r\n\r\n            var later = function() {\r\n                var last = new Date() - timestamp;\r\n                if (last < wait) {\r\n                    // if the latest call was less that the wait period ago then we reset the timeout to wait for the difference\r\n                    timeout = setTimeout(later, wait - last);\r\n                } else {\r\n                    // if not we can null out the timer and run the latest\r\n                    timeout = null;\r\n                    fn.apply(context, args);\r\n                }\r\n            };\r\n\r\n            // we only need to set the timer now if one isn't already running\r\n            if (!timeout) {\r\n                timeout = setTimeout(later, wait);\r\n            }\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Destroy an object.\r\n     * @param {Object} obj - Object to destroy.\r\n     */\r\n    var destroy = function(obj) {\r\n        if (isNull(obj)) {\r\n            return;\r\n        }\r\n        if (obj.destroy) {\r\n            obj.destroy();\r\n        }\r\n        obj = null;\r\n    };\r\n\r\n    /**\r\n     * Dispatch event to an element.\r\n     * @param {Node} element - Element to dispatch the event to.\r\n     * @param {string} event - Event name to dispatch.\r\n     */\r\n    var dispatch = function(element, event) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.dispatchEvent(event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Deep equality comparer for objects.\r\n     * @param {Object} x - First object to compare.\r\n     * @param {Object} y - Object to compare to x.\r\n     * @returns {bool} True if objects are equal.\r\n     */\r\n    var equals = function(x, y) {\r\n        var p;\r\n        for (p in y) {\r\n            if (isUndefined(x[p])) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        for (p in y) {\r\n            if (y[p]) {\r\n                switch (typeof y[p]) {\r\n                    case 'object':\r\n                        if (!equals(y[p], x[p])) {\r\n                            return false;\r\n                        } break;\r\n                    case 'function':\r\n                        if (isUndefined(x[p]) || (p !== 'equals' && y[p].toString() !== x[p].toString())) {\r\n                            return false;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        if (y[p] !== x[p]) {\r\n                            return false;\r\n                        }\r\n                }\r\n            } else if (x[p]) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        for (p in x) {\r\n            if (isUndefined(y[p])) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Recursively merge multiple objects, combining values of arguments into first argument. Rightmost values take precedence.\r\n     * @returns {*} Updated first argument.\r\n     */\r\n    var extend = function() {\r\n        var l = arguments.length, key, i;\r\n        var result = l > 0 ? arguments[0] : {};\r\n        if (isNull(result)) {\r\n            result = {};\r\n        }\r\n        for (i = 1; i < l; i++) {\r\n            for (key in arguments[i]) {\r\n                if (arguments[i].hasOwnProperty(key)) {\r\n                    result[key] = arguments[i][key];\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Get an object from an array where the obj[key]===value.\r\n     * @param {*[]} arr - Array to search in.\r\n     * @param {string} key - Property name to check.\r\n     * @param {*} value - Value to find.\r\n     * @returns {*} Array value that matches or null.\r\n     */\r\n    var findByKey = function(arr, key, value) {\r\n        if (!arr || isNull(key)) {\r\n            return;\r\n        }\r\n        var i = arr.length - 1;\r\n        while (i > -1) {\r\n            if (arr[i][key] === value) {\r\n                arr[i]._i = i;\r\n                return arr[i];\r\n            }\r\n            i--;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * A fast `.forEach()` implementation.\r\n     * See https://github.com/codemix/fast.js\r\n     * @param {Array} subject - The array (or array-like) to iterate over.\r\n     * @param {Function} fn - The visitor function.\r\n     * @param {Object} thisContext - The context for the visitor.\r\n     */\r\n    var forEach = function(subject, fn, thisContext) {\r\n        if (!(subject && subject.length)) {\r\n            return;\r\n        }\r\n        var length = subject.length,\r\n            iterator = thisContext !== undefined ? fn.bind(thisContext) : fn,\r\n            i;\r\n        for (i = 0; i < length; i++) {\r\n            iterator(subject[i], i, subject);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get an element matching selector.\r\n     * @param {string} selector - ID, class name, or any valid query selector.\r\n     * @param {Node} container - Only search within this node.\r\n     * @returns {Node} Matched node.\r\n     */\r\n    var get = function(selector, container) {\r\n        if (typeof selector !== 'string') {\r\n            return selector;\r\n        }\r\n        if (container) {\r\n            return container.querySelector(selector);\r\n        }\r\n        var simple = selector.indexOf(' ', 1) === -1 && selector.indexOf('.', 1) === -1;\r\n        if (!simple) {\r\n            return document.querySelector(selector);\r\n        }\r\n        var sel = selector.charAt(0);\r\n        if (sel === '#') {\r\n            return document.getElementById(selector.substr(1));\r\n        } else if (sel === '.') {\r\n            var res = document.getElementsByClassName(selector.substr(1));\r\n            return res.length ? res[0] : null;\r\n        } else {\r\n            return document.querySelector(selector);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get all elements matching selector.\r\n     * @param {string} selector - ID, class name, or any valid query selector.\r\n     * @param {Node} container - Only search within this node.\r\n     * @param {bool} includeContainer - If true check if container matches selector and add it to resultset.\r\n     * @returns {Node[]} Non-live array of matched nodes.\r\n     */\r\n    var getAll = function(selector, container, includeContainer) {\r\n        var list;\r\n        if (selector.charAt(0) === '.' && selector.indexOf(',') === -1 && selector.indexOf('>') === -1) {\r\n            list = (container || document).getElementsByClassName(selector.substr(1));\r\n        } else {\r\n            list = (container || document).querySelectorAll(selector);\r\n        }\r\n        var res = Array.prototype.slice.call(list);\r\n        if (includeContainer && container && matches(container, selector)) {\r\n            res.unshift(container);\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Check if an element has a class assigned to it.\r\n     * @param {Node} element - Element to check.\r\n     * @param {string} className - Name of class to look for.\r\n     * @returns {bool} True if the element has the class.\r\n     */\r\n    var hasClass = function(element, className) {\r\n        var node = get(element);\r\n        return node && node.classList && node.classList.contains(className);\r\n    };\r\n\r\n    /**\r\n     * Check if variable has a value.\r\n     * @param {*} val - Value to check.\r\n     * @returns {bool} True if the object has a value greater than zero.\r\n     */\r\n    var hasPositiveValue = function(val) {\r\n        return hasValue(val) && val > 0;\r\n    };\r\n\r\n    /**\r\n     * Check if variable has a value.\r\n     * @param {*} val - Value to check.\r\n     * @returns {bool} True if the object is not null, undefined, or zero length.\r\n     */\r\n    var hasValue = function(val) {\r\n        return !(isNull(val) || val.length === 0);\r\n    };\r\n\r\n    /**\r\n     * Hide an element.\r\n     * @param {Node} element - Element to hide.\r\n     * @param {bool} maintainLayout - Maintain the spacing of the element if true, default to false.\r\n     */\r\n    var hide = function(element, maintainLayout) {\r\n        var node = get(element);\r\n        if (node) {\r\n            if (coalesce(maintainLayout, false)) {\r\n                addClass(node, 'd-invisible');\r\n            } else {\r\n                addClass(node, 'd-none');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is an array.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is an array.\r\n     */\r\n    var isArray = function(x) {\r\n        return !isNull(x) && x.constructor === Array;\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is a date.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is a date.\r\n     */\r\n    var isDate = function(x) {\r\n        return !isNull(x) && x.getMonth && !isNaN(x.getTime());\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is an event.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is a event.\r\n     */\r\n    var isEvent = function(x) {\r\n        return x instanceof Event;\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is a function.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is a function.\r\n     */\r\n    var isFunction = function(x) {\r\n        return typeof x === 'function';\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is a DOM node.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is a node.\r\n     */\r\n    var isNode = function(x) {\r\n        return !isNull(x) && x.nodeType === 1 && x.nodeName;\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is undefined or null.\r\n     * @param {*} x - Variable to check the value of.\r\n     * @returns {bool} True if x is undefined or null.\r\n     */\r\n    var isNull = function(x) {\r\n        return isUndefined(x) || x === null;\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is a number.\r\n     * @param {*} x - Variable to check the value of.\r\n     * @returns {bool} True if x is a number.\r\n     */\r\n    var isNumber = function(x) {\r\n        return typeof x === 'number' && !isNaN(x);\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is an object.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is an object.\r\n     */\r\n    var isObject = function(x) {\r\n        return typeof x === 'object';\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is a string.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is a string.\r\n     */\r\n    var isString = function(x) {\r\n        return typeof x === 'string';\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is undefined.\r\n     * @param {*} x - Variable to check the value of.\r\n     * @returns {bool} True if x is undefined.\r\n     */\r\n    var isUndefined = function(x) {\r\n        return typeof x === 'undefined';\r\n    };\r\n\r\n    /**\r\n     * Check if a node should be visible.\r\n     * @param {Node} node - Node to check.\r\n     * @returns {Bool} True if visible else false.\r\n     */\r\n    var isVisible = function(node) {\r\n        return node.offsetParent !== null;\r\n    };\r\n\r\n    /**\r\n     * A fast `.map()` implementation.\r\n     * See https://github.com/codemix/fast.js\r\n     * @param {Array} subject - The array (or array-like) to map over.\r\n     * @param {Function} fn - The mapper function.\r\n     * @param {Object} thisContext - The context for the mapper.\r\n     * @return {Array} The array containing the results.\r\n     */\r\n    var map = function(subject, fn, thisContext) {\r\n        var length = subject.length,\r\n            result = new Array(length),\r\n            iterator = thisContext !== undefined ? fn.bind(thisContext) : fn,\r\n            i;\r\n        for (i = 0; i < length; i++) {\r\n            result[i] = iterator(subject[i], i, subject);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Verify if an element would be matched by a selector.\r\n     * @param {Node} element - Node to compare the selector to.\r\n     * @param {string} selector - Valid CSS selector.\r\n     * @returns {bool} True if the element matches the selector.\r\n     */\r\n    var matches = function(element, selector) {\r\n        var p = Element.prototype;\r\n        var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function(s) {\r\n            return [].indexOf.call(getAll(s), this) !== -1;\r\n        };\r\n        return f.call(element, selector);\r\n    };\r\n\r\n    /**\r\n     * Do nothing.\r\n     */\r\n    var noop = function() { };\r\n\r\n    /**\r\n     * Remove an event from an element.\r\n     * @param {Node} element - Element to remove the event from.\r\n     * @param {string} event - Event name to remove.\r\n     * @param {Function} fn - Function to remove.\r\n     * @param {bool} useCapture - Dispatch to this listener before any before it.\r\n     */\r\n    var off = function(element, event, fn, useCapture) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.removeEventListener(event, fn, useCapture);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Attach an event to an element.\r\n     * @param {Node} element - Element to attach the event to.\r\n     * @param {string} event - Event name to attach.\r\n     * @param {Function} fn - Function to run when the event fires.\r\n     * @param {bool} useCapture - Dispatch to this listener before any before it.\r\n     */\r\n    var on = function(element, event, fn, useCapture) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.addEventListener(event, fn, useCapture);\r\n        }\r\n    };\r\n\r\n    /**\r\n    * Set a function to run onChange, and run it immediately if needed.\r\n     * @param {Node} element - Element to attach the event to.\r\n    * @param {Function} changeFn - Function to run.\r\n    * @param {bool} immediate - Run function immediately.\r\n    */\r\n    var onChange = function(element, changeFn, immediate) {\r\n        var node = get(element);\r\n        if (node) {\r\n            on(node, 'change', changeFn);\r\n            if (coalesce(immediate, true)) {\r\n                changeFn.call(node);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Run a function when page is loaded\r\n     * @param {Function} fn - Function to run.\r\n     */\r\n    var ready = function(fn) {\r\n        // Sanity check\r\n        if (!isFunction(fn)) {\r\n            return;\r\n        }\r\n        // If document is already loaded, run method\r\n        if (document.readyState === 'complete') {\r\n            fn();\r\n        }\r\n        // Otherwise, wait until document is loaded\r\n        document.addEventListener('DOMContentLoaded', fn, false);\r\n    };\r\n\r\n    /**\r\n     * Remove a class from an element.\r\n     * @param {Node} element - Element to remove the class from.\r\n     * @param {string} className - Name of class to remove.\r\n     */\r\n    var removeClass = function(element, className) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.classList.remove(className);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the text content of a node.\r\n     * @param {Node} element - Element to update.\r\n     * @param {string} text - New text content.\r\n     */\r\n    var setText = function(element, text) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.textContent = text;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Show a hidden element.\r\n     * @param {Node} element - Element to show.\r\n     */\r\n    var show = function(element) {\r\n        var node = get(element);\r\n        if (node) {\r\n            removeClass(node, 'd-invisible');\r\n            removeClass(node, 'd-none');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get element style, or set multiple styles for an element at once.\r\n     * @param {Node} element - Element to get/set styles for.\r\n     * @param {Object|undefined} styles - Object with styleName:value, or undefined if getting.\r\n     * @param {bool} overwrite - Overwrite existing styles if true, else merge.\r\n     * @returns {string|undefined} Returns the element style if styles param is empty, else undefined.\r\n     */\r\n    var style = function(element, styles, overwrite) {\r\n        var node = get(element);\r\n        if (node) {\r\n            if (!isNull(styles)) {\r\n                node.style.cssText = _toCSS(coalesce(overwrite, false) ? extend(_parseCss(node.style.cssText), _toLowerKeys(styles)) : styles);\r\n            } else {\r\n                return node.style.cssText;\r\n            }\r\n        }\r\n        return;\r\n    };\r\n\r\n    /**\r\n     * Add/remove a class from an element based on the value of toggle.\r\n     * @param {Node|string} element - Element to modify, or selector to get element.\r\n     * @param {string} className - Name of class to add/remove.\r\n     * @param {bool|undefined} toggle - If true add class, if false remove class, if null toggle based on current status.\r\n     * @returns {undefined}\r\n     */\r\n    var toggleClass = function(element, className, toggle) {\r\n        var node = get(element);\r\n        if (isNull(toggle)) {\r\n            toggle = !hasClass(node, className);\r\n        }\r\n        toggle ? addClass(node, className) : removeClass(node, className);\r\n        return;\r\n    };\r\n\r\n    /**\r\n     * Change the property names of an object or array to pascal case.\r\n     * @param {Object|Obj[]} obj - Object to change properties of.\r\n     * @returns {Object} New object with all pascal case property names.\r\n     */\r\n    var toPascalKeys = function(obj) {\r\n        if (isNull(obj)) {\r\n            return null;\r\n        }\r\n        if (isArray(obj)) {\r\n            return obj.map(function(x) { return _toPascalKeys(x); });\r\n        }\r\n        return _toPascalKeys(obj);\r\n    };\r\n\r\n    /**\r\n     * Change the property names of an object to pascal case.\r\n     * @param {Object} obj - Object to change properties of.\r\n     * @returns {Object} New object with all pascal case property names.\r\n     */\r\n    var _toPascalKeys = function(obj) {\r\n        if (isNull(obj)) {\r\n            return null;\r\n        }\r\n        var key, keys = Object.keys(obj), i = keys.length, newObj = {};\r\n        while (i--) {\r\n            key = keys[i];\r\n            newObj[key.substr(0, 1).toUpperCase() + key.substr(1)] = obj[key];\r\n        }\r\n        return newObj;\r\n    };\r\n\r\n    /**\r\n     * Change the property names of an object to lowercase.\r\n     * @param {Object} obj - Object to change properties of.\r\n     * @returns {Object} New object with all lowercase property names.\r\n     */\r\n    var _toLowerKeys = function(obj) {\r\n        if (isNull(obj)) {\r\n            return {};\r\n        }\r\n        var key, keys = Object.keys(obj), i = keys.length, newObj = {};\r\n        while (i--) {\r\n            key = keys[i];\r\n            newObj[key.toLowerCase()] = obj[key];\r\n        }\r\n        return newObj;\r\n    };\r\n\r\n    /**\r\n     * Convert a string of CSS settings into an object.\r\n     * @param {string} cssText - CSS list.\r\n     * @returns {Object} Object with styleName:value.\r\n     */\r\n    var _parseCss = function(cssText) {\r\n        var regex = /([\\w-]*)\\s*:\\s*([^;]*)/g;\r\n        var match, properties = {};\r\n        while ((match = regex.exec(cssText))) {\r\n            properties[match[1].toLowerCase()] = match[2];\r\n        }\r\n        return properties;\r\n    };\r\n\r\n    /**\r\n     * Convert an object to a string of CSS settings.\r\n     * @param {Object} obj - Object with styleName:value.\r\n     * @returns {string} CSS list.\r\n     */\r\n    var _toCSS = function(obj) {\r\n        if (isNull(obj)) {\r\n            return '';\r\n        }\r\n        var key, keys = Object.keys(obj), i = keys.length, css = '';\r\n        while (i--) {\r\n            key = keys[i];\r\n            if (!isNull(obj[key])) {\r\n                css += key + ': ' + obj[key] + '; ';\r\n            }\r\n        }\r\n        return css;\r\n    };\r\n\r\n    root.$ = {\r\n        addClass: addClass,\r\n        clone: clone,\r\n        closest: closest,\r\n        coalesce: coalesce,\r\n        createNode: createNode,\r\n        debounce: debounce,\r\n        destroy: destroy,\r\n        dispatch: dispatch,\r\n        equals: equals,\r\n        extend: extend,\r\n        get: get,\r\n        getAll: getAll,\r\n        findByKey: findByKey,\r\n        forEach: forEach,\r\n        hasClass: hasClass,\r\n        hasPositiveValue: hasPositiveValue,\r\n        hasValue: hasValue,\r\n        hide: hide,\r\n        isArray: isArray,\r\n        isDate: isDate,\r\n        isEvent: isEvent,\r\n        isFunction: isFunction,\r\n        isNode: isNode,\r\n        isNull: isNull,\r\n        isNumber: isNumber,\r\n        isObject: isObject,\r\n        isString: isString,\r\n        isUndefined: isUndefined,\r\n        isVisible: isVisible,\r\n        map: map,\r\n        matches: matches,\r\n        noop: noop,\r\n        off: off,\r\n        on: on,\r\n        onChange: onChange,\r\n        ready: ready,\r\n        removeClass: removeClass,\r\n        setText: setText,\r\n        show: show,\r\n        style: style,\r\n        toggleClass: toggleClass,\r\n        toPascalKeys: toPascalKeys\r\n    };\r\n}(this));\r\n","/*!\r\n * Alertify library\r\n * https://github.com/alertifyjs/alertify.js\r\n */\r\n(function(root, $) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Hide an element using a transition if available.\r\n     * @param {Node} el - Element to hide.\r\n     */\r\n    var _hideElement = function(el) {\r\n        if (!el) {\r\n            return;\r\n        }\r\n\r\n        $.removeClass(el, 'show');\r\n        $.hide(el);\r\n\r\n        if (el.parentNode) {\r\n            var removeThis = function() {\r\n                el && el.parentNode && el.parentNode.removeChild(el);\r\n            };\r\n            $.on(el, 'transitionend', removeThis);\r\n            // Fallback for no transitions.\r\n            setTimeout(removeThis, 500);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Alertify private object.\r\n     * @type {Object}\r\n     */\r\n    var _alertify = {\r\n        parent: document.body,\r\n        defaultOkLabel: 'Okay',\r\n        okLabel: 'Okay',\r\n        defaultCancelLabel: 'Cancel',\r\n        cancelLabel: 'Cancel',\r\n        maxLogItems: 4,\r\n        promptValue: '',\r\n        promptPlaceholder: '',\r\n        closeLogOnClick: true,\r\n        delay: 5000,\r\n        logContainerClass: 'alertify-logs bottom left',\r\n        dialogs: {\r\n            buttons: {\r\n                holder: '<nav>{{buttons}}</nav>',\r\n                ok: '<button class=\"ok btn btn-primary\" tabindex=\"1\">{{ok}}</button>',\r\n                cancel: '<button class=\"cancel btn btn-warning\" tabindex=\"2\">{{cancel}}</button>'\r\n            },\r\n            input: '<div class=\"m-2\"><input type=\"text\" class=\"form-input\" required autofocus></div>',\r\n            message: '<p class=\"msg\">{{message}}</p>',\r\n            log: '<div class=\"{{class}}\">{{message}}</div>'\r\n        },\r\n\r\n        /**\r\n         * Build the proper message box.\r\n         * @param {Object} item - Current object in the queue.\r\n         * @return {string} An HTML string of the message box.\r\n         */\r\n        build: function(item) {\r\n            var btnTxt = this.dialogs.buttons.ok;\r\n            var html = '<div class=\"dialog\"><div class=\"dialog-content\">' +\r\n                this.dialogs.message.replace('{{message}}', item.message);\r\n\r\n            if (item.type === 'confirm' || item.type === 'prompt') {\r\n                btnTxt = this.dialogs.buttons.ok + this.dialogs.buttons.cancel;\r\n            }\r\n\r\n            if (item.type === 'prompt') {\r\n                html += this.dialogs.input;\r\n            }\r\n\r\n            html = (html + this.dialogs.buttons.holder + '</div></div>')\r\n                .replace('{{buttons}}', btnTxt)\r\n                .replace('{{ok}}', this.okLabel)\r\n                .replace('{{cancel}}', this.cancelLabel);\r\n\r\n            return html;\r\n        },\r\n\r\n        /**\r\n         * Close the log messages.\r\n         * @param {Object} elem - HTML Element of log message to close.\r\n         * @param {number} wait - [optional] Time (in ms) to wait before automatically hiding the message, if 0 never hide.\r\n         */\r\n        close: function(elem, wait) {\r\n            if (this.closeLogOnClick) {\r\n                $.on(elem, 'click', _hideElement.bind(null, elem));\r\n            }\r\n\r\n            wait = wait && !isNaN(+wait) ? +wait : this.delay;\r\n\r\n            if (wait < 0) {\r\n                _hideElement(elem);\r\n            } else if (wait > 0) {\r\n                setTimeout(_hideElement.bind(null, elem), wait);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Create a dialog box.\r\n         * @param {string}   message - The message passed from the callee.\r\n         * @param {string}   type - Type of dialog to create.\r\n         * @param {Function} onOkay - [Optional] Callback function when clicked okay.\r\n         * @param {Function} onCancel - [Optional] Callback function when cancelled.\r\n         * @return {Object} Promise for the dialog.\r\n         */\r\n        dialog: function(message, type, onOkay, onCancel) {\r\n            return this.setup({\r\n                type: type,\r\n                message: message,\r\n                onOkay: onOkay,\r\n                onCancel: onCancel\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Show a new log message box.\r\n         * @param {string} message - The message passed from the callee.\r\n         * @param {string} type - [Optional] Optional type of log message.\r\n         * @param {number} click - [Optional] Click event handler callback.\r\n         */\r\n        log: function(message, type, click) {\r\n            var existing = $.getAll('.alertify-logs > div');\r\n            if (existing) {\r\n                var diff = existing.length - this.maxLogItems;\r\n                if (diff >= 0) {\r\n                    for (var i = 0, _i = diff + 1; i < _i; i++) {\r\n                        this.close(existing[i], -1);\r\n                    }\r\n                }\r\n            }\r\n            this.notify(message, type, click);\r\n        },\r\n\r\n        /**\r\n         * Create the log container element.\r\n         * @return {Node} HTML node to contain the log.\r\n         */\r\n        setupLogContainer: function() {\r\n            var elLog = $.get('.alertify-logs');\r\n            var className = this.logContainerClass;\r\n            if (!elLog) {\r\n                elLog = document.createElement('div');\r\n                elLog.className = className;\r\n                this.parent.appendChild(elLog);\r\n            }\r\n\r\n            // Make sure it's positioned properly.\r\n            if (elLog.className !== className) {\r\n                elLog.className = className;\r\n            }\r\n\r\n            return elLog;\r\n        },\r\n\r\n        /**\r\n         * Add new log message.\r\n         * If a type is passed, a class name \"{type}\" will get added.\r\n         * This allows for custom look and feel for various types of notifications.\r\n         * @param {string} message - The message passed from the callee.\r\n         * @param {string} type - [Optional] Type of log message.\r\n         * @param {number} click - [Optional] Click event handler callback.\r\n         */\r\n        notify: function(message, type, click) {\r\n            var elLog = this.setupLogContainer();\r\n            var log = document.createElement('div');\r\n            log.className = (type || 'default');\r\n            log.innerHTML = message;\r\n\r\n            // Add the click handler, if specified.\r\n            if ($.isFunction(click)) {\r\n                log.addEventListener('click', click);\r\n            }\r\n\r\n            elLog.appendChild(log);\r\n            setTimeout(function() {\r\n                $.addClass(log, 'show');\r\n            }, 10);\r\n\r\n            this.close(log, this.delay);\r\n        },\r\n\r\n        /**\r\n         * Initiate all the required pieces for the dialog box.\r\n         * @param {Object} item - Options for creating the dialog.\r\n         * @returns {Promise} Promise to create the dialog.\r\n         */\r\n        setup: function(item) {\r\n            var el = document.createElement('div');\r\n            el.className = 'alertify d-none';\r\n            el.innerHTML = this.build(item);\r\n\r\n            var btnOK = $.get('.ok', el);\r\n            var btnCancel = $.get('.cancel', el);\r\n            var input = $.get('input', el);\r\n            var label = $.get('label', el);\r\n            var self = this;\r\n\r\n            // Set default value/placeholder of input\r\n            if (input) {\r\n                if ($.isString(this.promptPlaceholder)) {\r\n                    // Set the label, if available, for MDL, etc.\r\n                    if (label) {\r\n                        label.textContent = this.promptPlaceholder;\r\n                    } else {\r\n                        input.placeholder = this.promptPlaceholder;\r\n                    }\r\n                }\r\n                if ($.isString(this.promptValue)) {\r\n                    input.value = this.promptValue;\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Create event handlers for a dialog.\r\n             * @param {Object} resolve - Promise resolve function.\r\n             */\r\n            function setupHandlers(resolve) {\r\n                if (!$.isFunction(resolve)) {\r\n                    // promises are not available so resolve is a no-op\r\n                    resolve = function() { };\r\n                }\r\n\r\n                if (btnOK) {\r\n                    $.on(btnOK, 'click', function(ev) {\r\n                        if ($.isFunction(item.onOkay)) {\r\n                            if (input) {\r\n                                item.onOkay(input.value, ev);\r\n                            } else {\r\n                                item.onOkay(ev);\r\n                            }\r\n                        }\r\n                        if (input) {\r\n                            resolve({ buttonClicked: 'ok', inputValue: input.value, event: ev });\r\n                        } else {\r\n                            resolve({ buttonClicked: 'ok', event: ev });\r\n                        }\r\n                        _hideElement(el);\r\n                        self.reset();\r\n                    });\r\n                }\r\n\r\n                if (btnCancel) {\r\n                    $.on(btnCancel, 'click', function(ev) {\r\n                        if ($.isFunction(item.onCancel)) {\r\n                            item.onCancel(ev);\r\n                        }\r\n                        resolve({ buttonClicked: 'cancel', event: ev });\r\n                        _hideElement(el);\r\n                        self.reset();\r\n                    });\r\n                }\r\n\r\n                if (input) {\r\n                    $.on(input, 'keydown', function(ev) {\r\n                        if (btnOK && ev.which === 13) {\r\n                            btnOK.click();\r\n                        }\r\n                    });\r\n                }\r\n\r\n                $.on(el, 'keydown', function(ev) {\r\n                    if (ev.which === 27) {\r\n                        if (btnCancel) {\r\n                            btnCancel.click();\r\n                        } else if (btnOK) {\r\n                            btnOK.click();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            var promise = new Promise(setupHandlers);\r\n\r\n            this.parent.appendChild(el);\r\n            setTimeout(function() {\r\n                $.show(el);\r\n                if (input && item.type && item.type === 'prompt') {\r\n                    input.select();\r\n                    input.focus();\r\n                } else {\r\n                    if (btnOK) {\r\n                        btnOK.focus();\r\n                    }\r\n                }\r\n            }, 100);\r\n\r\n            return promise;\r\n        },\r\n\r\n        /**\r\n         * Set the label for the ok button.\r\n         * @param {string} label - Button text.\r\n         * @return {Object} Reference to self.\r\n         */\r\n        okBtn: function(label) {\r\n            this.okLabel = label;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Set the label for the cancel button.\r\n         * @param {string} label - Button text.\r\n         * @return {Object} Reference to self.\r\n         */\r\n        cancelBtn: function(label) {\r\n            this.cancelLabel = label;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Reset the dialog to default settings.\r\n         */\r\n        reset: function() {\r\n            this.parent = document.body;\r\n            this.okBtn(this.defaultOkLabel);\r\n            this.cancelBtn(this.defaultCancelLabel);\r\n            this.promptValue = '';\r\n            this.promptPlaceholder = '';\r\n            this.logTemplateMethod = null;\r\n        }\r\n    };\r\n\r\n    var Alertify = {\r\n        parent: function(elem) {\r\n            _alertify.parent = elem;\r\n        },\r\n        alert: function(message, onOkay, onCancel) {\r\n            return _alertify.dialog(message, 'alert', onOkay, onCancel) || this;\r\n        },\r\n        confirm: function(message, onOkay, onCancel) {\r\n            return _alertify.dialog(message, 'confirm', onOkay, onCancel) || this;\r\n        },\r\n        prompt: function(message, onOkay, onCancel) {\r\n            return _alertify.dialog(message, 'prompt', onOkay, onCancel) || this;\r\n        },\r\n        log: function(message, click) {\r\n            _alertify.log(message, 'default', click);\r\n            return this;\r\n        },\r\n        success: function(message, click) {\r\n            _alertify.log(message, 'success', click);\r\n            return this;\r\n        },\r\n        error: function(message, click) {\r\n            _alertify.log(message, 'error', click);\r\n            return this;\r\n        },\r\n        cancelBtn: function(label) {\r\n            _alertify.cancelBtn(label);\r\n            return this;\r\n        },\r\n        okBtn: function(label) {\r\n            _alertify.okBtn(label);\r\n            return this;\r\n        },\r\n        placeholder: function(str) {\r\n            _alertify.promptPlaceholder = str;\r\n            return this;\r\n        },\r\n        defaultValue: function(str) {\r\n            _alertify.promptValue = str;\r\n            return this;\r\n        },\r\n        dismissAll: function() {\r\n            _alertify.setupLogContainer().innerHTML = '';\r\n            return this;\r\n        },\r\n        updateResources: function(okay, cancel) {\r\n            _alertify.defaultOkLabel = okay;\r\n            _alertify.okLabel = okay;\r\n            _alertify.defaultCancelLabel = cancel;\r\n            _alertify.cancelLabel = cancel;\r\n        }\r\n    };\r\n\r\n    root.Alertify = Alertify;\r\n}(this, this.$));\r\n","/*!\r\n * PJAX library.\r\n */\r\n(function(root, $, Alertify) {\r\n    'use strict';\r\n\r\n    var pjax = {\r\n        firstRun: true,\r\n        ignoreFileTypes: ['pdf', 'doc', 'docx', 'zip', 'rar', '7z', 'gif', 'jpeg', 'jpg', 'png'],\r\n        excludeClass: 'pjax-no-follow',\r\n        container: '#contentWrapper'\r\n    };\r\n\r\n    /**\r\n     * Updates DOM with new content.\r\n     * @param {string} html - DOM fragment of loaded container.\r\n     * @param {Object} options - Configuration options.\r\n     * return {Object} Updated options.\r\n     */\r\n    pjax.updateContent = function(html, options) {\r\n        var newNode = $.createNode(html);\r\n        var title = $.getAll('[data-pjax-title]', newNode, true);\r\n        if (title.length) {\r\n            options.title = title[0].getAttribute('data-pjax-title');\r\n        }\r\n        var url = $.getAll('[data-pjax-url]', newNode, true);\r\n        if (url.length) {\r\n            options.url = url[0].getAttribute('data-pjax-url');\r\n        }\r\n        var container = $.getAll('[data-pjax-container]', newNode, true);\r\n        if (container.length) {\r\n            options.container = container[0].getAttribute('data-pjax-container');\r\n        }\r\n        var method = $.getAll('[data-pjax-method]', newNode, true);\r\n        if (method.length) {\r\n            options.method = method[0].getAttribute('data-pjax-method');\r\n        }\r\n\r\n        // Get container node\r\n        var node = $.get(options.container || pjax.container);\r\n        // Update the DOM with the new content\r\n        node.innerHTML = html;\r\n\r\n        return options;\r\n    };\r\n\r\n    /**\r\n     * Fire load events after loading content.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    pjax.onLoad = function(options) {\r\n        var node = $.get(options.container);\r\n        $.content.load(node);\r\n        pjax.checkEvents(node, 'data-load-event');\r\n\r\n        if (!$.isNull(options.title)) {\r\n            // Set page title\r\n            document.title = options.title;\r\n        }\r\n        if (options.returnToTop) {\r\n            // Scroll to top of page\r\n            window.scrollTo(0, 0);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Fire unload events before unloading content.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    pjax.onUnload = function(options) {\r\n        var node = $.get(options.container);\r\n        pjax.checkEvents(node, 'data-unload-event');\r\n        $.content.unload(node);\r\n    };\r\n\r\n    /**\r\n     * Update browser history.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    pjax.updateHistory = function(options) {\r\n        if (!options.history) {\r\n            return;\r\n        }\r\n        // If this is the first time pjax has run, create a state object for the current page.\r\n        if (pjax.firstRun) {\r\n            window.history.replaceState({ url: document.location.href, container: options.container, title: document.title, method: options.method }, document.title);\r\n            pjax.firstRun = false;\r\n        }\r\n        // Update browser history\r\n        window.history.pushState({ url: options.url, container: options.container, title: options.title, method: options.method }, options.title, options.url);\r\n    };\r\n\r\n    /**\r\n     * Handle requests to load content.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    pjax.handle = function(options) {\r\n        pjax.request(options, function(html) {\r\n            if (html === false) {\r\n                $.content.done();\r\n                return;\r\n            }\r\n\r\n            pjax.onUnload(options);\r\n            options = pjax.updateContent(html, options);\r\n            pjax.updateHistory(options);\r\n            pjax.onLoad(options);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Performs AJAX request to page and returns the result..\r\n     * @param {Object} options - Configuration options.\r\n     * @param {Function} callback - Method to call when a page is loaded.\r\n     */\r\n    pjax.request = function(options, callback) {\r\n        $.content.loading();\r\n\r\n        $.ajax({\r\n            method: options.method || 'GET',\r\n            url: options.url + ((!/[?&]/.test(options.url)) ? '?_pjax' : '&_pjax'),\r\n            headers: { 'X-PJAX': 'true' }\r\n        }, function(response) {\r\n            callback(response);\r\n            $.content.done();\r\n        }, function() {\r\n            callback(false);\r\n            $.content.done();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Performs AJAX form submission request to page and returns the result.\r\n     * @param form. Form to submit.\r\n     * @param callback. Method to call when a page is loaded.\r\n     */\r\n    pjax.submit = function(form, callback) {\r\n        $.content.loading();\r\n\r\n        $.ajax({\r\n            method: form.hasAttribute('data-method') ? form.getAttribute('data-method') : 'POST',\r\n            url: form.getAttribute('action'),\r\n            headers: { 'X-PJAX': 'true' },\r\n            body: new FormData(form)\r\n        }, function(response) {\r\n            callback(response);\r\n            $.content.done();\r\n        }, function() {\r\n            callback(false);\r\n            $.content.done();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Validate and correct options object.\r\n     * @param {Object} options - Configuration options.\r\n     * @return {Object|bool} Valid options object or false.\r\n     */\r\n    pjax.parseOptions = function(options, target) {\r\n        options = options || {};\r\n        if ($.isNull(options.url)) {\r\n            return false;\r\n        }\r\n\r\n        if (target) {\r\n            // If data-method is specified, use as request method\r\n            if (target.getAttribute('data-method')) {\r\n                options.method = target.getAttribute('data-method');\r\n            }\r\n\r\n            // If data-pjax is specified, use as container\r\n            if (target.getAttribute('data-pjax')) {\r\n                options.container = target.getAttribute('data-pjax');\r\n            }\r\n\r\n            // If data-pjax-title is specified, use as title\r\n            if (target.getAttribute('data-pjax-title')) {\r\n                options.title = target.getAttribute('data-pjax-title');\r\n            }\r\n        }\r\n\r\n        // Use default options if not defined\r\n        options = $.extend({\r\n            method: 'GET',\r\n            container: pjax.container,\r\n            history: true,\r\n            returnToTop: true\r\n        }, options);\r\n\r\n        // Ensure history is a boolean.\r\n        options.history = (options.history === false) ? false : true;\r\n\r\n        // Return valid options\r\n        return options;\r\n    };\r\n\r\n    /**\r\n     * Search node for event attributes and dispatch them.\r\n     * @param {Node} node - DOM node to search in.\r\n     * @param {string} eventName - Name of event attribute to search for.\r\n     */\r\n    pjax.checkEvents = function(node, eventName) {\r\n        $.getAll('[' + eventName + ']', node, node !== document).forEach(function(x) {\r\n            var ev = x.getAttribute(eventName);\r\n            if ($.events.hasOwnProperty(ev)) {\r\n                $.dispatch(x, $.events[ev]);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Configure pjax.\r\n     */\r\n    pjax.init = function() {\r\n        var body = $.get('body');\r\n        $.content.load(body);\r\n        pjax.checkEvents(body, 'data-load-event');\r\n    };\r\n\r\n    /**\r\n     * Directly invoke a pjax page load.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    pjax.invoke = function(options) {\r\n        // Process options\r\n        options = pjax.parseOptions(options);\r\n        // If everything went okay, activate pjax.\r\n        if (options !== false) {\r\n            pjax.handle(options);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * popstate listener\r\n     * Listens for back/forward button events and updates page accordingly.\r\n     */\r\n    $.on(window, 'popstate', function(e) {\r\n        if (e.state !== null) {\r\n            var opt = $.coalesce({\r\n                url: e.state.url,\r\n                container: e.state.container,\r\n                title: e.state.title,\r\n                method: e.state.method,\r\n                history: false\r\n            });\r\n\r\n            // Convert state data to PJAX options\r\n            var options = pjax.parseOptions(opt);\r\n            // If something went wrong, return.\r\n            if (options === false) return;\r\n            // If there is a state object, handle it as a page load.\r\n            pjax.handle(options);\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Link click listener.\r\n     */\r\n    $.on(document, 'click', function(event) {\r\n        var target = event.target || event.srcElement;\r\n        if (target.nodeName !== 'A') {\r\n            target = $.closest('a', target);\r\n        }\r\n        if (!(target && target.nodeName === 'A' && !(pjax.excludeClass && $.hasClass(target, pjax.excludeClass)))) {\r\n            // Ignore clicks unless its a link that doesn't have the exclude class\r\n            return;\r\n        }\r\n        if (target.protocol !== document.location.protocol || target.host !== document.location.host) {\r\n            // Ignore external links\r\n            return;\r\n        }\r\n        if (target.pathname === location.pathname && target.hash.length > 0) {\r\n            // Ignore anchors on the same page\r\n            return;\r\n        }\r\n        if (pjax.ignoreFileTypes.indexOf(target.pathname.split('.').pop().toLowerCase()) !== -1) {\r\n            // Skip link if file type is within ignored types array\r\n            return;\r\n        }\r\n        if (event.which > 1 || event.metaKey || event.ctrlKey) {\r\n            // Allow middle click (pages in new windows)\r\n            return;\r\n        }\r\n\r\n        // Don't fire normal event\r\n        event.preventDefault();\r\n\r\n        var options = { url: target.href };\r\n        if (document.location.href === options.url && !target.hasAttribute('data-reload')) {\r\n            // Take no action if we are already on said page and reload isn't allowed\r\n            return;\r\n        }\r\n\r\n        // Check options are valid.\r\n        options = pjax.parseOptions(options, target);\r\n        if (options === false) {\r\n            return;\r\n        }\r\n\r\n        // Check for confirmation or form changes before loading content.\r\n        if (target.getAttribute('data-confirm')) {\r\n            Alertify.dismissAll();\r\n            Alertify.confirm(target.getAttribute('data-confirm'), pjax.handle.bind(null, options), function(e) { e.target.focus(); });\r\n        } else if (target.getAttribute('data-prompt')) {\r\n            // @TODO haven't tested this yet\r\n            options.history = false;\r\n            Alertify.dismissAll();\r\n            Alertify.prompt(target.getAttribute('data-prompt'), function(promptValue) {\r\n                if (!$.hasValue(promptValue)) {\r\n                    Alertify.error($.resx('errorNameRequired'));\r\n                    return false;\r\n                }\r\n                options.url += ((!/[?&]/.test(options.url)) ? '?prompt' : '&prompt') + '=' + encodeURIComponent(promptValue);\r\n                pjax.invoke(options);\r\n            });\r\n        } else {\r\n            var form = $.get('form.has-changes');\r\n            if (form) {\r\n                Alertify.confirm(form.getAttribute('data-confirm'), pjax.handle.bind(null, options), function(e) { e.target.focus(); });\r\n            } else {\r\n                pjax.handle(options);\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Form change listener.\r\n     */\r\n    $.on(document, 'change', function(event) {\r\n        var target = event.target || event.srcElement;\r\n        if (['INPUT', 'SELECT', 'TEXTAREA'].indexOf(target.nodeName) === -1) {\r\n            // Ignore change unless its form input\r\n            return;\r\n        }\r\n\r\n        var form = $.closest('FORM', target);\r\n        if (form) {\r\n            $.addClass(form, 'has-changes');\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Form submit listener.\r\n     */\r\n    $.on(document, 'submit', function(event) {\r\n        var target = event.target || event.srcElement;\r\n        if (target.nodeName !== 'FORM') {\r\n            target = $.closest('FORM', target);\r\n        }\r\n        if (!(target && target.nodeName === 'FORM' && !(pjax.excludeClass && $.hasClass(target, pjax.excludeClass)))) {\r\n            // Ignore submit unless its a form that doesn't have the exclude class\r\n            return;\r\n        }\r\n\r\n        var actionNode = document.createElement('a');\r\n        actionNode.href = target.action;\r\n        if (actionNode.protocol !== document.location.protocol || actionNode.host !== document.location.host) {\r\n            return;\r\n        }\r\n\r\n        var options = { url: target.action };\r\n        // Check options are valid.\r\n        options = pjax.parseOptions(options, target);\r\n        if (options === false) return;\r\n\r\n        // Don't fire normal event\r\n        event.preventDefault();\r\n\r\n        // handle the submission\r\n        pjax.submit(target, function(html) {\r\n            if (html === false) {\r\n                return;\r\n            }\r\n\r\n            pjax.onUnload(options);\r\n            options = pjax.updateContent(html, options);\r\n            pjax.updateHistory(options);\r\n            pjax.onLoad(options);\r\n        });\r\n    });\r\n\r\n    root.pjax = pjax;\r\n})(this, this.$, this.Alertify);\r\n","/*!\r\n * Custom events.\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    var events = {\r\n        dashboardLoad: new CustomEvent('dashboardLoad'),\r\n        dashboardUnload: new CustomEvent('dashboardUnload'),\r\n        resxLoaded: new CustomEvent('resxLoaded'),\r\n    };\r\n\r\n    $.events = events;\r\n}(this.$));\r\n\r\n/*!\r\n * Fetch wrapper and error logging.\r\n */\r\n(function($, Alertify) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Wrap fetch with success/error handling.\r\n     * @param {Object} options - Options to use for the request.\r\n     * @param {Function} onSuccess - Function to handle success result.\r\n     * @param {Function} onError - Function to handle error result.\r\n     */\r\n    var _ajax = function(options, onSuccess, onError) {\r\n        options = options || {};\r\n        options.headers = $.extend({\r\n            'X-Requested-With': 'XMLHttpRequest'\r\n        }, options.headers);\r\n        if (options.token) {\r\n            options.headers['X-XSRF-TOKEN'] = options.token;\r\n            delete options.token;\r\n        }\r\n\r\n        // keep browser from caching requests by tacking milliseconds to end of url\r\n        var url = options.url + (options.url.indexOf('?') > -1 ? '&' : '?') + '_t=' + Date.now();\r\n        delete options.url;\r\n\r\n        if (options.data) {\r\n            options.headers['Content-Type'] = 'application/json';\r\n            if (options.method === 'GET') {\r\n                url += '&' + Object.keys(options.data).map(function(x) {\r\n                    return encodeURIComponent(x) + '=' + encodeURIComponent(options.data[x]);\r\n                }).join('&');\r\n            } else {\r\n                options.body = JSON.stringify(options.data);\r\n            }\r\n            delete options.data;\r\n        }\r\n        options.credentials = 'same-origin';\r\n\r\n        fetch(url, options)\r\n            .then(_checkStatus)\r\n            .then(_parse)\r\n            .then(function(data) {\r\n                if (data.reload) {\r\n                    location.reload(true);\r\n                    return;\r\n                }\r\n                if (data.error) {\r\n                    if ($.isFunction(onError)) {\r\n                        onError(data);\r\n                    }\r\n                    Alertify.error(data.error);\r\n                } else {\r\n                    if ($.isFunction(onSuccess)) {\r\n                        onSuccess(data);\r\n                    }\r\n                    if (data.message) {\r\n                        Alertify.success(data.message);\r\n                    }\r\n                }\r\n            }).catch(function(data) {\r\n                if (url.indexOf('LogJavascriptError') > -1) {\r\n                    return;\r\n                }\r\n\r\n                if (data.response && data.response.status && [400, 401, 402, 403].indexOf(data.response.status) > -1) {\r\n                    location.reload(true);\r\n                } else {\r\n                    Alertify.error(($.resx && $.resx('errorGeneric')) || 'An unhandled error occurred.');\r\n                }\r\n                if ($.isFunction(onError)) {\r\n                    onError(data.response);\r\n                }\r\n            });\r\n    };\r\n\r\n    var _requestQueue = [];\r\n\r\n    var Request = function(options, onSuccess, onError) {\r\n        this.options = options;\r\n        this.onSuccess = onSuccess;\r\n        this.onError = onError;\r\n        this.status = 0;\r\n    };\r\n\r\n    Request.prototype = {\r\n        constructor: Request,\r\n        key: function() {\r\n            return this.options.key;\r\n        },\r\n        abort: function() {\r\n            if (this.isInProcess()) {\r\n                this.promise.reject();\r\n            }\r\n            this.dequeue();\r\n        },\r\n        execute: function() {\r\n            _ajax(this.options, this.success.bind(this), this.error.bind(this));\r\n            this.status = 1;\r\n        },\r\n        success: function(data) {\r\n            this.dequeue();\r\n            if (this.onSuccess) {\r\n                this.onSuccess(data);\r\n            }\r\n        },\r\n        error: function(data) {\r\n            this.dequeue();\r\n            if (this.onError) {\r\n                this.onError(data);\r\n            }\r\n        },\r\n        isInProcess: function() {\r\n            return this.status === 1;\r\n        },\r\n        dequeue: function() {\r\n            // remove this from the queue and start the next request\r\n            var self = this;\r\n            _requestQueue = _requestQueue.filter(function(x) { return x !== self; });\r\n            if (_requestQueue.length) {\r\n                _requestQueue[0].execute();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Queue up an ajax request. Queue prevents one user from hammering the server.\r\n     * @param {Object} options - Options to use for the ajax request.\r\n     * @param {Function} onSuccess - Function to handle success result.\r\n     * @param {Function} onError - Function to handle error result.\r\n     */\r\n    var ajax = function(options, onSuccess, onError) {\r\n        options.key = options.key || options.url;\r\n        var request = new Request(options, onSuccess, onError);\r\n\r\n        // remove requests from queue that are for this key and aren't already in process\r\n        _requestQueue = _requestQueue.filter(function(x) {\r\n            return x.key() !== options.key || x.isInProcess();\r\n        });\r\n        _requestQueue.push(request);\r\n\r\n        if (_requestQueue.length === 1) {\r\n            // nothing else in the queue, so execute now\r\n            request.execute();\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * Log JS errors to elmah.\r\n     * @param {string} msg - Error message.\r\n     * @param {string} url - Error source URL.\r\n     * @param {number} line - Line # error occurred on\r\n     * @param {number} columnNo - Column # error occurred on\r\n     * @param {string|string[]|null} stack - Stack trace.\r\n     */\r\n    var logError = function(msg, url, lineNo, columnNo, stack) {\r\n        if ($.isNull(msg)) {\r\n            return;\r\n        }\r\n\r\n        var detail = msg + ': at path \\'' + (url || document.location) + '\\'';\r\n        if (!$.isNull(lineNo)) {\r\n            detail += ' at ' + lineNo + ':' + columnNo;\r\n        }\r\n        if (!$.isNull(stack)) {\r\n            detail += '\\n    at ' + ($.isString(stack) ? stack : stack.join('\\n    at '));\r\n        }\r\n\r\n        // save error message to server\r\n        _ajax({ method: 'POST', url: '/Error/LogJavascriptError', data: { message: detail }, block: false }, null, null);\r\n    };\r\n\r\n    var _checkStatus = function(response) {\r\n        if (response.status >= 200 && response.status < 300) {\r\n            return response;\r\n        } else {\r\n            var error = new Error(response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Deserialize response from fetch.\r\n     * @param {Object} response - Response object\r\n     * @returns {Object} Result object from JSON, or object with a single 'content' property if that fails.\r\n     */\r\n    var _parse = function(response) {\r\n        try {\r\n            var contentType = response && response.headers.has('content-type') ? response.headers.get('content-type') : '';\r\n            return contentType && (contentType.indexOf('application/json') > -1 || contentType.indexOf('application/jil') > -1) ? response.json() : response.text();\r\n        } catch (ex) {\r\n            return response;\r\n        }\r\n    };\r\n\r\n    $.ajax = ajax;\r\n    $.logError = logError;\r\n}(this.$, this.Alertify));\r\n\r\n/**\r\n * Add a application wide error handler to log errors.\r\n * Outside of strict mode to prevent errors.\r\n * @param {string} msg - Error message.\r\n * @param {string} url - Error source URL.\r\n * @param {number} line - Line # error occurred on\r\n * @param {number} columnNo - Column # error occurred on\r\n * @param {Error|null} error - Error object if browser supports it\r\n */\r\nwindow.onerror = function(msg, url, lineNo, columnNo, error) {\r\n    this.$.logError(msg, url, lineNo, columnNo, error && error.stack ? error.stack : null);\r\n};\r\n\r\n/*!\r\n * Resource handling.\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    var _resx = {};\r\n\r\n    /**\r\n     * Get/set i18n resource strings.\r\n     * @param {string|Object} key - Key of the resource to get/set, or an object of resource strings.\r\n     * @param {string} value - Set key to this value if provided\r\n     * @returns {string} Returns the value of key, or null if key is not defined.\r\n     */\r\n    var resx = function(key, value) {\r\n        if (!$.isString(key)) {\r\n            $.extend(_resx, key);\r\n        } else if ($.isNull(value)) {\r\n            if (_resx.hasOwnProperty(key)) {\r\n                return _resx[key];\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            _resx[key] = value;\r\n        }\r\n    };\r\n\r\n    var body = $.get('body');\r\n    if (body && body.hasAttribute('data-resx')) {\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: body.getAttribute('data-resx'),\r\n            headers: {\r\n                'Content-Type': 'application/jil; charset=utf-8',\r\n                'Accept': 'application/jil'\r\n            }\r\n        }, function(data) {\r\n            if (data) {\r\n                _resx = data;\r\n            }\r\n            $.dispatch(document, $.events.resxLoaded);\r\n            $.resxLoaded = true;\r\n        }, function() {\r\n            $.dispatch(document, $.events.resxLoaded);\r\n            $.resxLoaded = true;\r\n        });\r\n    }\r\n\r\n    $.resx = resx;\r\n})(this.$);\r\n\r\n/*!\r\n * Color functions.\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Convert hex string to RGB.\r\n     * @param {string} hex - Hex string.\r\n     * @returns {Object} Object with RGB properties.\r\n     */\r\n    var hex2rgb = function(hex) {\r\n        return { r: parseInt(hex.substr(1, 2), 16), g: parseInt(hex.substr(3, 2), 16), b: parseInt(hex.substr(5, 2), 16) };\r\n    };\r\n\r\n    /**\r\n     * Convert RGB to hex string.\r\n     * @param {Object} color Object with r/g/b properties.\r\n     * @returns {string} hex - Hex string.\r\n     */\r\n    var rgb2hex = function(color) {\r\n        var hex = [\r\n            (color.r * 1).toString(16),\r\n            (color.g * 1).toString(16),\r\n            (color.b * 1).toString(16)\r\n        ];\r\n        return '#' + hex.map(function(x) {\r\n            return ('00' + x.toString()).slice(-2);\r\n        }).join('').toUpperCase();\r\n    };\r\n\r\n    /**\r\n     * Converts an RGB color value to HSL. Conversion formula\r\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n     * Assumes r, g, and b are contained in the set [0, 255] and\r\n     * returns h, s, and l in the set [0, 1].\r\n     * @param {Object} rgb - Object with r, g, and b properties.\r\n     * @return {Number[]} The HSL representation.\r\n     */\r\n    var rgb2hsl = function(rgb) {\r\n        var r = rgb.r, g = rgb.g, b = rgb.b;\r\n        r /= 255, g /= 255, b /= 255;\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if (max === min) {\r\n            h = s = 0; // achromatic\r\n        } else {\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch (max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        return [h, s, l];\r\n    };\r\n\r\n    $.colors = {\r\n        hex2rgb: hex2rgb,\r\n        rgb2hex: rgb2hex,\r\n        rgb2hsl: rgb2hsl,\r\n    };\r\n})(this.$);\r\n\r\n/*!\r\n * accounting.js v0.4.2\r\n * Copyright 2014 Open Exchange Rates\r\n *\r\n * Freely distributable under the MIT license.\r\n * Portions of accounting.js are inspired or borrowed from underscore.js\r\n *\r\n * Full details and documentation:\r\n * http://openexchangerates.github.io/accounting.js/\r\n */\r\n(function($) {\r\n    var lib = {\r\n        settings: {\r\n            currency: {\r\n                symbol: '$',\t\t// default currency symbol is '$'\r\n                format: '%s%v',\t    // controls output: %s = symbol, %v = value (can be object, see docs)\r\n                decimal: '.',\t\t// decimal point separator\r\n                thousand: ',',\t\t// thousands separator\r\n                precision: 2,\t\t// decimal places\r\n                grouping: 3\t\t    // digit grouping (not implemented yet)\r\n            },\r\n            number: {\r\n                precision: 0,\t\t// default precision on numbers is 0\r\n                grouping: 3,\t\t// digit grouping (not implemented yet)\r\n                thousand: ',',\r\n                decimal: '.'\r\n            }\r\n        }\r\n    };\r\n\r\n    var tokens = {\r\n        symbol: /\\{s:(.?)\\}/i,\r\n        decimal: /\\[d:(.?)\\]/i,\r\n        thousand: /\\[t:(.?)\\]/i,\r\n        precision: /\\[p:(.?)\\]/i,\r\n        value: /\\{#+\\}/i\r\n    };\r\n\r\n    /**\r\n     * Check and normalise the value of precision (must be positive integer).\r\n     * @param {number} val - Value of precision to validate\r\n     * @returns {number} Positive integer value.\r\n     */\r\n    var checkPrecision = function(val) {\r\n        val = Math.round(Math.abs(val));\r\n        return isNaN(val) ? lib.settings.number.precision : val;\r\n    };\r\n\r\n    /**\r\n     * Parses a format string or object and returns format obj for use in rendering.\r\n     * @param {string|Object} format - Default (positive) format, or object containing `pos` (required), `neg` and `zero` values (or a function returning either a string or object)\r\n     * @returns {Object} Format object with pos, neg, and zero properties.\r\n     */\r\n    var checkCurrencyFormat = function(format) {\r\n        // Format can be a string, in which case `value` (\"%v\") must be present:\r\n        if ($.isString(format) && format.match('%v')) {\r\n            // Create and return positive, negative and zero formats:\r\n            return {\r\n                pos: format,\r\n                neg: format.replace('-', '').replace('%v', '-%v'),\r\n                zero: format\r\n            };\r\n        }\r\n        if (!format || !format.pos || !format.pos.match('%v')) {\r\n            // If no format, or object is missing valid positive value, use default.\r\n            // If default is a string, casts it to an object for faster checking next time.\r\n            var x = lib.settings.currency.format;\r\n            if ($.isString(x)) {\r\n                lib.settings.currency.format = x = { pos: x, neg: x.replace('%v', '-%v'), zero: x };\r\n            }\r\n            return x;\r\n        }\r\n        return format;\r\n    };\r\n\r\n    /**\r\n     * Takes a format string and parses it into an object.\r\n     * @param {string} format - Format string`\r\n     * @returns {Object} Object with format settings.\r\n     */\r\n    var parseFormat = function(format) {\r\n        if (!$.isString(format)) {\r\n            return format || {};\r\n        }\r\n\r\n        var res = {}, x;\r\n        var newFormat = format;\r\n        if ((x = tokens.symbol.exec(newFormat)) !== null && x.length > 1) {\r\n            res.symbol = x[1];\r\n            newFormat = newFormat.replace(x[0], '%s');\r\n        }\r\n        if ((x = tokens.decimal.exec(newFormat)) !== null && x.length > 1) {\r\n            res.decimal = x[1];\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.thousand.exec(newFormat)) !== null && x.length > 1) {\r\n            res.thousand = x[1];\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.precision.exec(newFormat)) !== null && x.length > 1) {\r\n            res.precision = x[1] * 1;\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.value.exec(newFormat)) !== null) {\r\n            res.format = newFormat.replace(x[0], '%v');\r\n        } else {\r\n            res.format = newFormat + ' %v';\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Takes a string/array of strings, removes all formatting/cruft and returns the raw float value.\r\n     * @param {string|number} value - Value to remove formatting from.\r\n     * @returns {number} Number with no formatting.\r\n     */\r\n    var unformat = function(value) {\r\n        value = value || 0;\r\n        if ($.isNumber(value)) {\r\n            return value;\r\n        }\r\n\r\n        // Build regex to strip out everything except digits, decimal point and minus sign:\r\n        var regex = new RegExp('[^0-9-' + lib.settings.number.decimal + ']', ['g']);\r\n        var unformatted = parseFloat(('' + value)\r\n            .replace(/\\((.*)\\)/, '-$1') // replace bracketed values with negatives\r\n            .replace(regex, '')         // strip out any cruft\r\n            .replace(lib.settings.number.decimal, '.')      // make sure decimal point is standard\r\n        );\r\n\r\n        // This will fail silently which may cause trouble, let's wait and see:\r\n        return !isNaN(unformatted) ? unformatted : 0;\r\n    };\r\n\r\n    /**\r\n     * Implementation of toFixed() that treats floats more like decimals.\r\n     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === \"0.61\") that present problems for accounting- and finance-related software.\r\n     * @param {number|string} value - Number to convert\r\n     * @param {number} precision - Number of digits after the decimal.\r\n     * @returns {number} Formatted value.\r\n     */\r\n    var toFixed = function(value, precision) {\r\n        precision = checkPrecision(precision);\r\n        var power = Math.pow(10, precision);\r\n        // Multiply up by precision, round accurately, then divide and use native toFixed():\r\n        return (Math.round(unformat(value) * power) / power).toFixed(precision);\r\n    };\r\n\r\n    /**\r\n     * Format a number, with comma-separated thousands and custom precision/decimal places.\r\n     * @param {number} number - Number to format.\r\n     * @param {string} format - Tokenized string format.\r\n     * @returns {string} Formatted number.\r\n     */\r\n    var formatNumber = function(number, format) {\r\n        number = unformat(number);\r\n        var opts = $.extend({}, lib.settings.number, parseFormat(format));\r\n        var usePrecision = checkPrecision(opts.precision);\r\n        var base = parseInt(toFixed(Math.abs(number || 0), usePrecision), 10) + '';\r\n        var mod = base.length > 3 ? base.length % 3 : 0;\r\n        return (number < 0 ? '-' : '') + (mod ? base.substr(0, mod) + opts.thousand : '') + base.substr(mod).replace(/(\\d{3})(?=\\d)/g, '$1' + opts.thousand) +\r\n            (usePrecision ? opts.decimal + toFixed(Math.abs(number), usePrecision).split('.')[1] : '');\r\n    };\r\n\r\n    /**\r\n     * Format a number as currency, with comma-separated thousands and custom precision/decimal places.\r\n     * @param {number} number - Number to format.\r\n     * @param {string} format - Tokenized string format.\r\n     * @returns {string} Formatted currency.\r\n     */\r\n    var formatMoney = function(number, format) {\r\n        number = unformat(number);\r\n        var opts = $.extend({}, lib.settings.currency, parseFormat(format));\r\n        var formats = checkCurrencyFormat(opts.format);\r\n        return (number > 0 ? formats.pos : number < 0 ? formats.neg : formats.zero)\r\n            .replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(number), format));\r\n    };\r\n\r\n    $.accounting = {\r\n        formatMoney: formatMoney,\r\n        formatNumber: formatNumber,\r\n        parseFormat: parseFormat,\r\n        unformat: unformat\r\n    };\r\n}(this.$));\r\n\r\n/*!\r\n * Lightweight date library\r\n * https://github.com/taylorhakes/fecha\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    var fecha = {};\r\n    var token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\r\n    var twoDigits = /\\d\\d?/;\r\n    var threeDigits = /\\d{3}/;\r\n    var fourDigits = /\\d{4}/;\r\n    var word = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\r\n    var literal = /\\[([^]*?)\\]/gm;\r\n    var noop = function() { };\r\n\r\n    /**\r\n     * Abbreviate a string.\r\n     * @param {string[]} arr - Array of strings to shorten.\r\n     * @param {number} sLen - Max length of new strings.\r\n     * @returns {string[]} New array of strings.\r\n     */\r\n    function shorten(arr, sLen) {\r\n        var newArr = [];\r\n        for (var i = 0, len = arr.length; i < len; i++) {\r\n            newArr.push(arr[i].substr(0, sLen));\r\n        }\r\n        return newArr;\r\n    }\r\n\r\n    /**\r\n     * Update months names based on i18n resource.\r\n     * @param {string[]} arrName - Array of month names.\r\n     * @returns {string[]} Updated array of month names.\r\n     */\r\n    function monthUpdate(arrName) {\r\n        return function(d, v, i18n) {\r\n            var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());\r\n            if (~index) {\r\n                d.month = index;\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Left pad a number to length len using zeros.\r\n     * @param {number|string} val - Value to pad.\r\n     * @param {number} len - Length to pad number to.\r\n     * @returns {string} Zero padded string.\r\n     */\r\n    function pad(val, len) {\r\n        val = String(val);\r\n        len = len || 2;\r\n        while (val.length < len) {\r\n            val = '0' + val;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    var monthNamesShort = shorten(monthNames, 3);\r\n    var dayNamesShort = shorten(dayNames, 3);\r\n    fecha.i18n = {\r\n        dayNamesShort: dayNamesShort,\r\n        dayNames: dayNames,\r\n        monthNamesShort: monthNamesShort,\r\n        monthNames: monthNames,\r\n        amPm: ['am', 'pm'],\r\n        DoFn: function DoFn(D) {\r\n            return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];\r\n        }\r\n    };\r\n\r\n    var formatFlags = {\r\n        D: function(dateObj) {\r\n            return dateObj.getDate();\r\n        },\r\n        DD: function(dateObj) {\r\n            return pad(dateObj.getDate());\r\n        },\r\n        Do: function(dateObj, i18n) {\r\n            return i18n.DoFn(dateObj.getDate());\r\n        },\r\n        d: function(dateObj) {\r\n            return dateObj.getDay();\r\n        },\r\n        dd: function(dateObj) {\r\n            return pad(dateObj.getDay());\r\n        },\r\n        ddd: function(dateObj, i18n) {\r\n            return i18n.dayNamesShort[dateObj.getDay()];\r\n        },\r\n        dddd: function(dateObj, i18n) {\r\n            return i18n.dayNames[dateObj.getDay()];\r\n        },\r\n        M: function(dateObj) {\r\n            return dateObj.getMonth() + 1;\r\n        },\r\n        MM: function(dateObj) {\r\n            return pad(dateObj.getMonth() + 1);\r\n        },\r\n        MMM: function(dateObj, i18n) {\r\n            return i18n.monthNamesShort[dateObj.getMonth()];\r\n        },\r\n        MMMM: function(dateObj, i18n) {\r\n            return i18n.monthNames[dateObj.getMonth()];\r\n        },\r\n        YY: function(dateObj) {\r\n            return String(dateObj.getFullYear()).substr(2);\r\n        },\r\n        YYYY: function(dateObj) {\r\n            return dateObj.getFullYear();\r\n        },\r\n        h: function(dateObj) {\r\n            return dateObj.getHours() % 12 || 12;\r\n        },\r\n        hh: function(dateObj) {\r\n            return pad(dateObj.getHours() % 12 || 12);\r\n        },\r\n        H: function(dateObj) {\r\n            return dateObj.getHours();\r\n        },\r\n        HH: function(dateObj) {\r\n            return pad(dateObj.getHours());\r\n        },\r\n        m: function(dateObj) {\r\n            return dateObj.getMinutes();\r\n        },\r\n        mm: function(dateObj) {\r\n            return pad(dateObj.getMinutes());\r\n        },\r\n        s: function(dateObj) {\r\n            return dateObj.getSeconds();\r\n        },\r\n        ss: function(dateObj) {\r\n            return pad(dateObj.getSeconds());\r\n        },\r\n        S: function(dateObj) {\r\n            return Math.round(dateObj.getMilliseconds() / 100);\r\n        },\r\n        SS: function(dateObj) {\r\n            return pad(Math.round(dateObj.getMilliseconds() / 10), 2);\r\n        },\r\n        SSS: function(dateObj) {\r\n            return pad(dateObj.getMilliseconds(), 3);\r\n        },\r\n        a: function(dateObj, i18n) {\r\n            return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];\r\n        },\r\n        A: function(dateObj, i18n) {\r\n            return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();\r\n        },\r\n        ZZ: function(dateObj) {\r\n            var o = dateObj.getTimezoneOffset();\r\n            return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);\r\n        },\r\n        l: function(dateObj) {\r\n            var onejan = new Date(dateObj.getFullYear(), 0, 1);\r\n            return Math.ceil((((dateObj - onejan) / 86400000) + onejan.getDay() + 1) / 7);\r\n        },\r\n        ll: function(dateObj) {\r\n            var onejan = new Date(dateObj.getFullYear(), 0, 1);\r\n            return pad(Math.ceil((((dateObj - onejan) / 86400000) + onejan.getDay() + 1) / 7), 2);\r\n        },\r\n        q: function(dateObj) {\r\n            return (Math.ceil(dateObj.getMonth() + 1 / 3));\r\n        }\r\n    };\r\n\r\n    var parseFlags = {\r\n        D: [twoDigits, function(d, v) {\r\n            d.day = v;\r\n        }],\r\n        Do: [new RegExp(twoDigits.source + word.source), function(d, v) {\r\n            d.day = parseInt(v, 10);\r\n        }],\r\n        M: [twoDigits, function(d, v) {\r\n            d.month = v - 1;\r\n        }],\r\n        YY: [twoDigits, function(d, v) {\r\n            var da = new Date(), cent = +('' + da.getFullYear()).substr(0, 2);\r\n            d.year = '' + (v > 68 ? cent - 1 : cent) + v;\r\n        }],\r\n        h: [twoDigits, function(d, v) {\r\n            d.hour = v;\r\n        }],\r\n        m: [twoDigits, function(d, v) {\r\n            d.minute = v;\r\n        }],\r\n        s: [twoDigits, function(d, v) {\r\n            d.second = v;\r\n        }],\r\n        YYYY: [fourDigits, function(d, v) {\r\n            d.year = v;\r\n        }],\r\n        S: [/\\d/, function(d, v) {\r\n            d.millisecond = v * 100;\r\n        }],\r\n        SS: [/\\d{2}/, function(d, v) {\r\n            d.millisecond = v * 10;\r\n        }],\r\n        SSS: [threeDigits, function(d, v) {\r\n            d.millisecond = v;\r\n        }],\r\n        d: [twoDigits, noop],\r\n        ddd: [word, noop],\r\n        MMM: [word, monthUpdate('monthNamesShort')],\r\n        MMMM: [word, monthUpdate('monthNames')],\r\n        a: [word, function(d, v, i18n) {\r\n            var val = v.toLowerCase();\r\n            if (val === i18n.amPm[0]) {\r\n                d.isPm = false;\r\n            } else if (val === i18n.amPm[1]) {\r\n                d.isPm = true;\r\n            }\r\n        }],\r\n        ZZ: [/[+-]\\d\\d:?\\d\\d/, function(d, v) {\r\n            var parts = (v + '').match(/([+-]|\\d\\d)/gi), minutes;\r\n\r\n            if (parts) {\r\n                minutes = +(parts[1] * 60) + parseInt(parts[2], 10);\r\n                d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;\r\n            }\r\n        }]\r\n    };\r\n    parseFlags.dd = parseFlags.d;\r\n    parseFlags.dddd = parseFlags.ddd;\r\n    parseFlags.DD = parseFlags.D;\r\n    parseFlags.mm = parseFlags.m;\r\n    parseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;\r\n    parseFlags.MM = parseFlags.M;\r\n    parseFlags.ss = parseFlags.s;\r\n    parseFlags.A = parseFlags.a;\r\n\r\n    // Some common format strings\r\n    fecha.masks = {\r\n        'default': 'ddd MMM DD YYYY HH:mm:ss',\r\n        shortDate: 'M/D/YY',\r\n        mediumDate: 'MMM D, YYYY',\r\n        longDate: 'MMMM D, YYYY',\r\n        fullDate: 'dddd, MMMM D, YYYY',\r\n        shortTime: 'HH:mm',\r\n        mediumTime: 'HH:mm:ss',\r\n        longTime: 'HH:mm:ss.SSS'\r\n    };\r\n\r\n    /***\r\n     * Format a date.\r\n     * @method format\r\n     * @param {Date|number} dateObj - JS date to format.\r\n     * @param {string} mask - New format for the date, i.e. 'mm-dd-yy' or 'shortDate'.\r\n     * @param {Object} i18nSettings - i18n resources.\r\n     * @return {string} Formatted date string.\r\n     */\r\n    fecha.format = function(dateObj, mask, i18nSettings) {\r\n        var i18n = i18nSettings || fecha.i18n;\r\n\r\n        if (typeof dateObj === 'number') {\r\n            dateObj = new Date(dateObj);\r\n        }\r\n\r\n        if (!dateObj.getMonth || isNaN(dateObj.getTime())) {\r\n            return '';\r\n            // throw new Error('Invalid Date in fecha.format');\r\n        }\r\n\r\n        mask = fecha.masks[mask] || mask || fecha.masks['default'];\r\n\r\n        var literals = [];\r\n\r\n        // Make literals inactive by replacing them with ??\r\n        mask = mask.replace(literal, function($0, $1) {\r\n            literals.push($1);\r\n            return '??';\r\n        });\r\n        // Apply formatting rules\r\n        mask = mask.replace(token, function($0) {\r\n            return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);\r\n        });\r\n        // Inline literal values back into the formatted value\r\n        return mask.replace(/\\?\\?/g, function() {\r\n            return literals.shift();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Parse a date string into an object.\r\n     * @method parse\r\n     * @param {string} dateStr - Date string\r\n     * @param {string} format - Date parse format\r\n     * @param {Object} i18nSettings - i18n resources.\r\n     * @returns {Date|boolean} JS date object or false.\r\n     */\r\n    fecha.parse = function(dateStr, format, i18nSettings) {\r\n        var i18n = i18nSettings || fecha.i18n;\r\n\r\n        if (typeof format !== 'string') {\r\n            throw new Error('Invalid format in fecha.parse');\r\n        }\r\n\r\n        format = fecha.masks[format] || format;\r\n\r\n        // Avoid regular expression denial of service, fail early for really long strings\r\n        // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\r\n        if (!dateStr || dateStr.length > 1000) {\r\n            return false;\r\n        }\r\n\r\n        var isValid = true;\r\n        var dateInfo = {};\r\n        var isUtc = false;\r\n\r\n        // Special handler for UTC. String will end in a Z but with no offset specified (ie '-0400')\r\n        if (dateStr.indexOf('Z') === dateStr.length - 1 && dateStr.indexOf('ZZ') === -1) {\r\n            dateStr = dateStr.substr(0, dateStr.length - 2);\r\n            dateInfo.timezoneOffset = new Date().getTimezoneOffset();\r\n            isUtc = true;\r\n        }\r\n\r\n        format.replace(token, function($0) {\r\n            if (parseFlags[$0]) {\r\n                var info = parseFlags[$0];\r\n                var index = dateStr.search(info[0]);\r\n                if (!~index) {\r\n                    isValid = false;\r\n                } else {\r\n                    dateStr.replace(info[0], function(result) {\r\n                        info[1](dateInfo, result, i18n);\r\n                        dateStr = dateStr.substr(index + result.length);\r\n                        return result;\r\n                    });\r\n                }\r\n            }\r\n\r\n            return parseFlags[$0] ? '' : $0.slice(1, $0.length - 1);\r\n        });\r\n\r\n        if (!isValid) {\r\n            return false;\r\n        }\r\n\r\n        var today = new Date();\r\n        if (dateInfo.isPm === true && typeof dateInfo.hour !== 'undefined' && +dateInfo.hour !== 12) {\r\n            dateInfo.hour = +dateInfo.hour + 12;\r\n        } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {\r\n            dateInfo.hour = 0;\r\n        }\r\n\r\n        var date;\r\n        if (typeof dateInfo.timezoneOffset !== 'undefined') {\r\n            if (!isUtc) {\r\n                dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;\r\n            }\r\n            date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\r\n                dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));\r\n        } else {\r\n            date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\r\n                dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);\r\n        }\r\n        return date;\r\n    };\r\n\r\n    $.fecha = fecha;\r\n})(this.$);\r\n","// doT.js\r\n// 2011-2014, Laura Doktorova, https://github.com/olado/doT\r\n// Licensed under the MIT license.\r\n/* eslint-disable */\r\n(function(root) {\r\n    \"use strict\";\r\n\r\n    var doT = {\r\n        name: \"doT\",\r\n        version: \"1.1.1\",\r\n        templateSettings: {\r\n            evaluate: /\\{\\{([\\s\\S]+?(\\}?)+)\\}\\}/g,\r\n            interpolate: /\\{\\{=([\\s\\S]+?)\\}\\}/g,\r\n            encode: /\\{\\{!([\\s\\S]+?)\\}\\}/g,\r\n            use: /\\{\\{#([\\s\\S]+?)\\}\\}/g,\r\n            useParams: /(^|[^\\w$])def(?:\\.|\\[[\\'\\\"])([\\w$\\.]+)(?:[\\'\\\"]\\])?\\s*\\:\\s*([\\w$\\.]+|\\\"[^\\\"]+\\\"|\\'[^\\']+\\'|\\{[^\\}]+\\})/g,\r\n            define: /\\{\\{##\\s*([\\w\\.$]+)\\s*(\\:|=)([\\s\\S]+?)#\\}\\}/g,\r\n            defineParams: /^\\s*([\\w$]+):([\\s\\S]+)/,\r\n            conditional: /\\{\\{\\?(\\?)?\\s*([\\s\\S]*?)\\s*\\}\\}/g,\r\n            iterate: /\\{\\{~\\s*(?:\\}\\}|([\\s\\S]+?)\\s*\\:\\s*([\\w$]+)\\s*(?:\\:\\s*([\\w$]+))?\\s*\\}\\})/g,\r\n            varname: \"x\",\r\n            strip: true,\r\n            append: true,\r\n            selfcontained: false,\r\n            doNotSkipEncoded: false\r\n        },\r\n        template: undefined, //fn, compile template\r\n        compile: undefined, //fn, for express\r\n        log: true\r\n    }, _globals;\r\n\r\n    doT.encodeHTMLSource = function(doNotSkipEncoded) {\r\n        var encodeHTMLRules = { \"&\": \"&#38;\", \"<\": \"&#60;\", \">\": \"&#62;\", '\"': \"&#34;\", \"'\": \"&#39;\", \"/\": \"&#47;\" },\r\n            matchHTML = doNotSkipEncoded ? /[&<>\"'\\/]/g : /&(?!#?\\w+;)|<|>|\"|'|\\//g;\r\n        return function(code) {\r\n            return code ? code.toString().replace(matchHTML, function(m) { return encodeHTMLRules[m] || m; }) : \"\";\r\n        };\r\n    };\r\n\r\n    root.doT = doT;\r\n\r\n    var startend = {\r\n        append: { start: \"'+(\", end: \")+'\", startencode: \"'+encodeHTML(\" },\r\n        split: { start: \"';out+=(\", end: \");out+='\", startencode: \"';out+=encodeHTML(\" }\r\n    }, skip = /$^/;\r\n\r\n    function resolveDefs(c, block, def) {\r\n        return ((typeof block === \"string\") ? block : block.toString())\r\n            .replace(c.define || skip, function(m, code, assign, value) {\r\n                if (code.indexOf(\"def.\") === 0) {\r\n                    code = code.substring(4);\r\n                }\r\n                if (!(code in def)) {\r\n                    if (assign === \":\") {\r\n                        if (c.defineParams) value.replace(c.defineParams, function(m, param, v) {\r\n                            def[code] = { arg: param, text: v };\r\n                        });\r\n                        if (!(code in def)) def[code] = value;\r\n                    } else {\r\n                        new Function(\"def\", \"def['\" + code + \"']=\" + value)(def);\r\n                    }\r\n                }\r\n                return \"\";\r\n            })\r\n            .replace(c.use || skip, function(m, code) {\r\n                if (c.useParams) code = code.replace(c.useParams, function(m, s, d, param) {\r\n                    if (def[d] && def[d].arg && param) {\r\n                        var rw = (d + \":\" + param).replace(/'|\\\\/g, \"_\");\r\n                        def.__exp = def.__exp || {};\r\n                        def.__exp[rw] = def[d].text.replace(new RegExp(\"(^|[^\\\\w$])\" + def[d].arg + \"([^\\\\w$])\", \"g\"), \"$1\" + param + \"$2\");\r\n                        return s + \"def.__exp['\" + rw + \"']\";\r\n                    }\r\n                });\r\n                var v = new Function(\"def\", \"return \" + code)(def);\r\n                return v ? resolveDefs(c, v, def) : v;\r\n            });\r\n    }\r\n\r\n    function unescape(code) {\r\n        return code.replace(/\\\\('|\\\\)/g, \"$1\").replace(/[\\r\\t\\n]/g, \" \");\r\n    }\r\n\r\n    doT.template = function(tmpl, c, def) {\r\n        c = c || doT.templateSettings;\r\n        var cse = c.append ? startend.append : startend.split, needhtmlencode, sid = 0, indv,\r\n            str = (c.use || c.define) ? resolveDefs(c, tmpl, def || {}) : tmpl;\r\n\r\n        str = (\"var out='\" + (c.strip ? str.replace(/(^|\\r|\\n)\\t* +| +\\t*(\\r|\\n|$)/g, \" \")\r\n            .replace(/\\r|\\n|\\t|\\/\\*[\\s\\S]*?\\*\\//g, \"\") : str)\r\n            .replace(/'|\\\\/g, \"\\\\$&\")\r\n            .replace(c.interpolate || skip, function(m, code) {\r\n                return cse.start + unescape(code) + cse.end;\r\n            })\r\n            .replace(c.encode || skip, function(m, code) {\r\n                needhtmlencode = true;\r\n                return cse.startencode + unescape(code) + cse.end;\r\n            })\r\n            .replace(c.conditional || skip, function(m, elsecase, code) {\r\n                return elsecase ?\r\n                    (code ? \"';}else if(\" + unescape(code) + \"){out+='\" : \"';}else{out+='\") :\r\n                    (code ? \"';if(\" + unescape(code) + \"){out+='\" : \"';}out+='\");\r\n            })\r\n            .replace(c.iterate || skip, function(m, iterate, vname, iname) {\r\n                if (!iterate) return \"';} } out+='\";\r\n                sid += 1; indv = iname || \"i\" + sid; iterate = unescape(iterate);\r\n                return \"';var arr\" + sid + \"=\" + iterate + \";if(arr\" + sid + \"){var \" + vname + \",\" + indv + \"=-1,l\" + sid + \"=arr\" + sid + \".length-1;while(\" + indv + \"<l\" + sid + \"){\"\r\n                    + vname + \"=arr\" + sid + \"[\" + indv + \"+=1];out+='\";\r\n            })\r\n            .replace(c.evaluate || skip, function(m, code) {\r\n                return \"';\" + unescape(code) + \"out+='\";\r\n            })\r\n            + \"';return out;\")\r\n            .replace(/\\n/g, \"\\\\n\").replace(/\\t/g, '\\\\t').replace(/\\r/g, \"\\\\r\")\r\n            .replace(/(\\s|;|\\}|^|\\{)out\\+='';/g, '$1').replace(/\\+''/g, \"\");\r\n        //.replace(/(\\s|;|\\}|^|\\{)out\\+=''\\+/g,'$1out+=');\r\n\r\n        if (needhtmlencode) {\r\n            if (!c.selfcontained && _globals && !_globals._encodeHTML) _globals._encodeHTML = doT.encodeHTMLSource(c.doNotSkipEncoded);\r\n            str = \"var encodeHTML = typeof _encodeHTML !== 'undefined' ? _encodeHTML : (\"\r\n                + doT.encodeHTMLSource.toString() + \"(\" + (c.doNotSkipEncoded || '') + \"));\"\r\n                + str;\r\n        }\r\n        try {\r\n            return new Function(c.varname, str);\r\n        } catch (e) {\r\n            /* istanbul ignore else */\r\n            if (typeof console !== \"undefined\") console.log(\"Could not create a template function: \" + str);\r\n            throw e;\r\n        }\r\n    };\r\n\r\n    doT.compile = function(tmpl, def) {\r\n        return doT.template(tmpl, null, def);\r\n    };\r\n}(this));\r\n","/*!\r\n * flatpickr v4.5.1, @license MIT\r\n * https://github.com/flatpickr/flatpickr\r\n */\r\nvar flatpickr = (function() {\r\n    'use strict';\r\n\r\n    var __assign = Object.assign || function(target) {\r\n        for (var source, i = 1; i < arguments.length; i++) {\r\n            source = arguments[i];\r\n            for (var prop in source) {\r\n                if (Object.prototype.hasOwnProperty.call(source, prop)) {\r\n                    target[prop] = source[prop];\r\n                }\r\n            }\r\n        }\r\n        return target;\r\n    };\r\n\r\n    var pad = function(number) { return ('0' + number).slice(-2); };\r\n    var int = function(bool) { return (bool === true ? 1 : 0); };\r\n    function debounce(func, wait, immediate) {\r\n        if (immediate === void 0) { immediate = false; }\r\n        var timeout;\r\n        return function() {\r\n            var context = this, args = arguments;\r\n            timeout !== null && clearTimeout(timeout);\r\n            timeout = window.setTimeout(function() {\r\n                timeout = null;\r\n                if (!immediate)\r\n                    func.apply(context, args);\r\n            }, wait);\r\n            if (immediate && !timeout)\r\n                func.apply(context, args);\r\n        };\r\n    }\r\n    var arrayify = function(obj) {\r\n        return obj instanceof Array ? obj : [obj];\r\n    };\r\n\r\n    var do_nothing = function() { return undefined; };\r\n    var monthToStr = function(monthNumber, shorthand, locale) { return locale.months[shorthand ? 'shorthand' : 'longhand'][monthNumber]; };\r\n    var revFormat = {\r\n        D: do_nothing,\r\n        F: function(dateObj, monthName, locale) {\r\n            dateObj.setMonth(locale.months.longhand.indexOf(monthName));\r\n        },\r\n        G: function(dateObj, hour) {\r\n            dateObj.setHours(parseFloat(hour));\r\n        },\r\n        H: function(dateObj, hour) {\r\n            dateObj.setHours(parseFloat(hour));\r\n        },\r\n        J: function(dateObj, day) {\r\n            dateObj.setDate(parseFloat(day));\r\n        },\r\n        K: function(dateObj, amPM, locale) {\r\n            dateObj.setHours((dateObj.getHours() % 12) +\r\n                12 * int(new RegExp(locale.amPM[1], 'i').test(amPM)));\r\n        },\r\n        M: function(dateObj, shortMonth, locale) {\r\n            dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\r\n        },\r\n        S: function(dateObj, seconds) {\r\n            dateObj.setSeconds(parseFloat(seconds));\r\n        },\r\n        U: function(_, unixSeconds) { return new Date(parseFloat(unixSeconds) * 1000); },\r\n        W: function(dateObj, weekNum) {\r\n            var weekNumber = parseInt(weekNum);\r\n            return new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);\r\n        },\r\n        Y: function(dateObj, year) {\r\n            dateObj.setFullYear(parseFloat(year));\r\n        },\r\n        Z: function(_, ISODate) { return new Date(ISODate); },\r\n        d: function(dateObj, day) {\r\n            dateObj.setDate(parseFloat(day));\r\n        },\r\n        h: function(dateObj, hour) {\r\n            dateObj.setHours(parseFloat(hour));\r\n        },\r\n        i: function(dateObj, minutes) {\r\n            dateObj.setMinutes(parseFloat(minutes));\r\n        },\r\n        j: function(dateObj, day) {\r\n            dateObj.setDate(parseFloat(day));\r\n        },\r\n        l: do_nothing,\r\n        m: function(dateObj, month) {\r\n            dateObj.setMonth(parseFloat(month) - 1);\r\n        },\r\n        n: function(dateObj, month) {\r\n            dateObj.setMonth(parseFloat(month) - 1);\r\n        },\r\n        s: function(dateObj, seconds) {\r\n            dateObj.setSeconds(parseFloat(seconds));\r\n        },\r\n        w: do_nothing,\r\n        y: function(dateObj, year) {\r\n            dateObj.setFullYear(2000 + parseFloat(year));\r\n        },\r\n    };\r\n    var tokenRegex = {\r\n        D: '(\\\\w+)',\r\n        F: '(\\\\w+)',\r\n        G: '(\\\\d\\\\d|\\\\d)',\r\n        H: '(\\\\d\\\\d|\\\\d)',\r\n        J: '(\\\\d\\\\d|\\\\d)\\\\w+',\r\n        K: '',\r\n        M: '(\\\\w+)',\r\n        S: '(\\\\d\\\\d|\\\\d)',\r\n        U: '(.+)',\r\n        W: '(\\\\d\\\\d|\\\\d)',\r\n        Y: '(\\\\d{4})',\r\n        Z: '(.+)',\r\n        d: '(\\\\d\\\\d|\\\\d)',\r\n        h: '(\\\\d\\\\d|\\\\d)',\r\n        i: '(\\\\d\\\\d|\\\\d)',\r\n        j: '(\\\\d\\\\d|\\\\d)',\r\n        l: '(\\\\w+)',\r\n        m: '(\\\\d\\\\d|\\\\d)',\r\n        n: '(\\\\d\\\\d|\\\\d)',\r\n        s: '(\\\\d\\\\d|\\\\d)',\r\n        w: '(\\\\d\\\\d|\\\\d)',\r\n        y: '(\\\\d{2})',\r\n    };\r\n    var formats = {\r\n        Z: function(date) { return date.toISOString(); },\r\n        D: function(date, locale, options) {\r\n            return locale.weekdays.shorthand[formats.w(date, locale, options)];\r\n        },\r\n        F: function(date, locale, options) {\r\n            return monthToStr(formats.n(date, locale, options) - 1, false, locale);\r\n        },\r\n        G: function(date, locale, options) {\r\n            return pad(formats.h(date, locale, options));\r\n        },\r\n        H: function(date) { return pad(date.getHours()); },\r\n        J: function(date, locale) {\r\n            return locale.ordinal !== undefined\r\n                ? date.getDate() + locale.ordinal(date.getDate())\r\n                : date.getDate();\r\n        },\r\n        K: function(date, locale) { return locale.amPM[int(date.getHours() > 11)]; },\r\n        M: function(date, locale) {\r\n            return monthToStr(date.getMonth(), true, locale);\r\n        },\r\n        S: function(date) { return pad(date.getSeconds()); },\r\n        U: function(date) { return date.getTime() / 1000; },\r\n        W: function(date, _, options) {\r\n            return options.getWeek(date);\r\n        },\r\n        Y: function(date) { return date.getFullYear(); },\r\n        d: function(date) { return pad(date.getDate()); },\r\n        h: function(date) { return (date.getHours() % 12 ? date.getHours() % 12 : 12); },\r\n        i: function(date) { return pad(date.getMinutes()); },\r\n        j: function(date) { return date.getDate(); },\r\n        l: function(date, locale) {\r\n            return locale.weekdays.longhand[date.getDay()];\r\n        },\r\n        m: function(date) { return pad(date.getMonth() + 1); },\r\n        n: function(date) { return date.getMonth() + 1; },\r\n        s: function(date) { return date.getSeconds(); },\r\n        w: function(date) { return date.getDay(); },\r\n        y: function(date) { return String(date.getFullYear()).substring(2); },\r\n    };\r\n\r\n    var english = {\r\n        weekdays: {\r\n            shorthand: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n            longhand: [\r\n                'Sunday',\r\n                'Monday',\r\n                'Tuesday',\r\n                'Wednesday',\r\n                'Thursday',\r\n                'Friday',\r\n                'Saturday',\r\n            ],\r\n        },\r\n        months: {\r\n            shorthand: [\r\n                'Jan',\r\n                'Feb',\r\n                'Mar',\r\n                'Apr',\r\n                'May',\r\n                'Jun',\r\n                'Jul',\r\n                'Aug',\r\n                'Sep',\r\n                'Oct',\r\n                'Nov',\r\n                'Dec',\r\n            ],\r\n            longhand: [\r\n                'January',\r\n                'February',\r\n                'March',\r\n                'April',\r\n                'May',\r\n                'June',\r\n                'July',\r\n                'August',\r\n                'September',\r\n                'October',\r\n                'November',\r\n                'December',\r\n            ],\r\n        },\r\n        daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\r\n        firstDayOfWeek: 0,\r\n        ordinal: function(nth) {\r\n            var s = nth % 100;\r\n            if (s > 3 && s < 21)\r\n                return 'th';\r\n            switch (s % 10) {\r\n                case 1:\r\n                    return 'st';\r\n                case 2:\r\n                    return 'nd';\r\n                case 3:\r\n                    return 'rd';\r\n                default:\r\n                    return 'th';\r\n            }\r\n        },\r\n        rangeSeparator: ' to ',\r\n        weekAbbreviation: 'Wk',\r\n        scrollTitle: 'Scroll to increment',\r\n        toggleTitle: 'Click to toggle',\r\n        amPM: ['AM', 'PM'],\r\n        yearAriaLabel: 'Year',\r\n    };\r\n\r\n    var createDateFormatter = function(_a) {\r\n        var _b = _a.config, config = _b === void 0 ? defaults : _b, _c = _a.l10n, l10n = _c === void 0 ? english : _c;\r\n        return function(dateObj, frmt, overrideLocale) {\r\n            if (config.formatDate !== undefined)\r\n                return config.formatDate(dateObj, frmt);\r\n            var locale = overrideLocale || l10n;\r\n            return frmt\r\n                .split('')\r\n                .map(function(c, i, arr) {\r\n                    return formats[c] && arr[i - 1] !== '\\\\'\r\n                        ? formats[c](dateObj, locale, config)\r\n                        : c !== '\\\\'\r\n                            ? c\r\n                            : '';\r\n                })\r\n                .join('');\r\n        };\r\n    };\r\n    var createDateParser = function(_a) {\r\n        var _b = _a.config, config = _b === void 0 ? defaults : _b, _c = _a.l10n, l10n = _c === void 0 ? english : _c;\r\n        return function(date, givenFormat, timeless, customLocale) {\r\n            if (date !== 0 && !date)\r\n                return undefined;\r\n            var locale = customLocale || l10n;\r\n            var parsedDate;\r\n            var date_orig = date;\r\n            if (date instanceof Date)\r\n                parsedDate = new Date(date.getTime());\r\n            else if (typeof date !== 'string' &&\r\n                date.toFixed !== undefined)\r\n                parsedDate = new Date(date);\r\n            else if (typeof date === 'string') {\r\n                var format = givenFormat || (config || defaults).dateFormat;\r\n                var datestr = String(date).trim();\r\n                if (datestr === 'today') {\r\n                    parsedDate = new Date();\r\n                    timeless = true;\r\n                }\r\n                else if (/Z$/.test(datestr) ||\r\n                    /GMT$/.test(datestr))\r\n                    parsedDate = new Date(date);\r\n                else if (config && config.parseDate)\r\n                    parsedDate = config.parseDate(date, format);\r\n                else {\r\n                    parsedDate =\r\n                        !config || !config.noCalendar\r\n                            ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0)\r\n                            : new Date(new Date().setHours(0, 0, 0, 0));\r\n                    var matched = void 0, ops = [];\r\n                    for (var i = 0, matchIndex = 0, regexStr = ''; i < format.length; i++) {\r\n                        var token_1 = format[i];\r\n                        var isBackSlash = token_1 === '\\\\';\r\n                        var escaped = format[i - 1] === '\\\\' || isBackSlash;\r\n                        if (tokenRegex[token_1] && !escaped) {\r\n                            regexStr += tokenRegex[token_1];\r\n                            var match = new RegExp(regexStr).exec(date);\r\n                            if (match && (matched = true)) {\r\n                                ops[token_1 !== 'Y' ? 'push' : 'unshift']({\r\n                                    fn: revFormat[token_1],\r\n                                    val: match[++matchIndex],\r\n                                });\r\n                            }\r\n                        }\r\n                        else if (!isBackSlash)\r\n                            regexStr += '.';\r\n                        ops.forEach(function(_a) {\r\n                            var fn = _a.fn, val = _a.val;\r\n                            return (parsedDate = fn(parsedDate, val, locale) || parsedDate);\r\n                        });\r\n                    }\r\n                    parsedDate = matched ? parsedDate : undefined;\r\n                }\r\n            }\r\n            if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {\r\n                config.errorHandler(new Error('Invalid date provided: ' + date_orig));\r\n                return undefined;\r\n            }\r\n            if (timeless === true)\r\n                parsedDate.setHours(0, 0, 0, 0);\r\n            return parsedDate;\r\n        };\r\n    };\r\n    function compareDates(date1, date2, timeless) {\r\n        if (timeless === void 0) { timeless = true; }\r\n        if (timeless !== false) {\r\n            return (new Date(date1.getTime()).setHours(0, 0, 0, 0) -\r\n                new Date(date2.getTime()).setHours(0, 0, 0, 0));\r\n        }\r\n        return date1.getTime() - date2.getTime();\r\n    }\r\n    var getWeek = function(givenDate) {\r\n        var date = new Date(givenDate.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - ((date.getDay() + 6) % 7));\r\n        var week1 = new Date(date.getFullYear(), 0, 4);\r\n        return (1 +\r\n            Math.round(((date.getTime() - week1.getTime()) / 86400000 -\r\n                3 +\r\n                ((week1.getDay() + 6) % 7)) /\r\n                7));\r\n    };\r\n    var isBetween = function(ts, ts1, ts2) {\r\n        return ts > Math.min(ts1, ts2) && ts < Math.max(ts1, ts2);\r\n    };\r\n    var duration = {\r\n        DAY: 86400000,\r\n    };\r\n\r\n    var defaults = {\r\n        _disable: [],\r\n        _enable: [],\r\n        allowInput: false,\r\n        altFormat: 'F j, Y',\r\n        altInput: false,\r\n        altInputClass: 'form-control input',\r\n        animate: typeof window === 'object' && window.navigator.userAgent.indexOf('MSIE') === -1,\r\n        ariaDateFormat: 'F j, Y',\r\n        clickOpens: true,\r\n        closeOnSelect: true,\r\n        conjunction: ', ',\r\n        dateFormat: 'Y-m-d',\r\n        defaultHour: 12,\r\n        defaultMinute: 0,\r\n        defaultSeconds: 0,\r\n        disable: [],\r\n        disableMobile: false,\r\n        enable: [],\r\n        enableSeconds: false,\r\n        enableTime: false,\r\n        errorHandler: function(err) {\r\n            return typeof console !== 'undefined' && console.warn(err);\r\n        },\r\n        getWeek: getWeek,\r\n        hourIncrement: 1,\r\n        ignoredFocusElements: [],\r\n        inline: false,\r\n        locale: 'default',\r\n        minuteIncrement: 5,\r\n        mode: 'single',\r\n        nextArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>\",\r\n        noCalendar: false,\r\n        now: new Date(),\r\n        onChange: [],\r\n        onClose: [],\r\n        onDayCreate: [],\r\n        onDestroy: [],\r\n        onKeyDown: [],\r\n        onMonthChange: [],\r\n        onOpen: [],\r\n        onParseConfig: [],\r\n        onReady: [],\r\n        onValueUpdate: [],\r\n        onYearChange: [],\r\n        onPreCalendarPosition: [],\r\n        plugins: [],\r\n        position: 'auto',\r\n        positionElement: undefined,\r\n        prevArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>\",\r\n        shorthandCurrentMonth: false,\r\n        showMonths: 1,\r\n        static: false,\r\n        time_24hr: false,\r\n        weekNumbers: false,\r\n        wrap: false,\r\n    };\r\n\r\n    function toggleClass(elem, className, bool) {\r\n        if (bool === true)\r\n            return elem.classList.add(className);\r\n        elem.classList.remove(className);\r\n    }\r\n    function createElement(tag, className, content) {\r\n        var e = window.document.createElement(tag);\r\n        className = className || '';\r\n        content = content || '';\r\n        e.className = className;\r\n        if (content !== undefined)\r\n            e.textContent = content;\r\n        return e;\r\n    }\r\n    function clearNode(node) {\r\n        while (node.firstChild)\r\n            node.removeChild(node.firstChild);\r\n    }\r\n    function findParent(node, condition) {\r\n        if (condition(node))\r\n            return node;\r\n        else if (node.parentNode)\r\n            return findParent(node.parentNode, condition);\r\n        return undefined;\r\n    }\r\n    function createNumberInput(inputClassName, opts) {\r\n        var wrapper = createElement('div', 'numInputWrapper'), numInput = createElement('input', 'numInput ' + inputClassName), arrowUp = createElement('span', 'arrowUp'), arrowDown = createElement('span', 'arrowDown');\r\n        numInput.type = 'text';\r\n        numInput.pattern = '\\\\d*';\r\n        if (opts !== undefined)\r\n            for (var key in opts)\r\n                numInput.setAttribute(key, opts[key]);\r\n        wrapper.appendChild(numInput);\r\n        wrapper.appendChild(arrowUp);\r\n        wrapper.appendChild(arrowDown);\r\n        return wrapper;\r\n    }\r\n\r\n    if (typeof Object.assign !== 'function') {\r\n        Object.assign = function(target) {\r\n            var args = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                args[_i - 1] = arguments[_i];\r\n            }\r\n            if (!target) {\r\n                throw TypeError('Cannot convert undefined or null to object');\r\n            }\r\n            var _loop_1 = function(source) {\r\n                if (source) {\r\n                    Object.keys(source).forEach(function(key) { return (target[key] = source[key]); });\r\n                }\r\n            };\r\n            for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {\r\n                var source = args_1[_a];\r\n                _loop_1(source);\r\n            }\r\n            return target;\r\n        };\r\n    }\r\n\r\n    var DEBOUNCED_CHANGE_MS = 300;\r\n    function FlatpickrInstance(element, instanceConfig) {\r\n        var self = {\r\n            config: __assign({}, flatpickr.defaultConfig),\r\n            l10n: english,\r\n        };\r\n        self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\r\n        self._handlers = [];\r\n        self._bind = bind;\r\n        self._setHoursFromDate = setHoursFromDate;\r\n        self._positionCalendar = positionCalendar;\r\n        self.changeMonth = changeMonth;\r\n        self.changeYear = changeYear;\r\n        self.clear = clear;\r\n        self.close = close;\r\n        self._createElement = createElement;\r\n        self.destroy = destroy;\r\n        self.isEnabled = isEnabled;\r\n        self.jumpToDate = jumpToDate;\r\n        self.open = open;\r\n        self.redraw = redraw;\r\n        self.set = set;\r\n        self.setDate = setDate;\r\n        self.toggle = toggle;\r\n        function setupHelperFunctions() {\r\n            self.utils = {\r\n                getDaysInMonth: function(month, yr) {\r\n                    if (month === void 0) { month = self.currentMonth; }\r\n                    if (yr === void 0) { yr = self.currentYear; }\r\n                    if (month === 1 && ((yr % 4 === 0 && yr % 100 !== 0) || yr % 400 === 0))\r\n                        return 29;\r\n                    return self.l10n.daysInMonth[month];\r\n                },\r\n            };\r\n        }\r\n        function init() {\r\n            self.element = self.input = element;\r\n            self.isOpen = false;\r\n            parseConfig();\r\n            setupLocale();\r\n            setupInputs();\r\n            setupDates();\r\n            setupHelperFunctions();\r\n            if (!self.isMobile)\r\n                build();\r\n            bindEvents();\r\n            if (self.selectedDates.length || self.config.noCalendar) {\r\n                if (self.config.enableTime) {\r\n                    setHoursFromDate(self.config.noCalendar\r\n                        ? self.latestSelectedDateObj || self.config.minDate\r\n                        : undefined);\r\n                }\r\n                updateValue(false);\r\n            }\r\n            setCalendarWidth();\r\n            self.showTimeInput =\r\n                self.selectedDates.length > 0 || self.config.noCalendar;\r\n            var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n            if (!self.isMobile && isSafari) {\r\n                positionCalendar();\r\n            }\r\n            triggerEvent('onReady');\r\n        }\r\n        function bindToInstance(fn) {\r\n            return fn.bind(self);\r\n        }\r\n        function setCalendarWidth() {\r\n            var config = self.config;\r\n            if (config.weekNumbers === false && config.showMonths === 1)\r\n                return;\r\n            else if (config.noCalendar !== true) {\r\n                window.requestAnimationFrame(function() {\r\n                    self.calendarContainer.style.visibility = 'hidden';\r\n                    self.calendarContainer.style.display = 'block';\r\n                    if (self.daysContainer !== undefined) {\r\n                        var daysWidth = (self.days.offsetWidth + 1) * config.showMonths;\r\n                        self.daysContainer.style.width = daysWidth + 'px';\r\n                        self.calendarContainer.style.width =\r\n                            daysWidth +\r\n                            (self.weekWrapper !== undefined\r\n                                ? self.weekWrapper.offsetWidth\r\n                                : 0) +\r\n                            'px';\r\n                        self.calendarContainer.style.removeProperty('visibility');\r\n                        self.calendarContainer.style.removeProperty('display');\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        function updateTime(e) {\r\n            if (self.selectedDates.length === 0)\r\n                return;\r\n            if (e !== undefined && e.type !== 'blur') {\r\n                timeWrapper(e);\r\n            }\r\n            var prevValue = self._input.value;\r\n            setHoursFromInputs();\r\n            updateValue();\r\n            if (self._input.value !== prevValue) {\r\n                self._debouncedChange();\r\n            }\r\n        }\r\n        function ampm2military(hour, amPM) {\r\n            return (hour % 12) + 12 * int(amPM === self.l10n.amPM[1]);\r\n        }\r\n        function military2ampm(hour) {\r\n            switch (hour % 24) {\r\n                case 0:\r\n                case 12:\r\n                    return 12;\r\n                default:\r\n                    return hour % 12;\r\n            }\r\n        }\r\n        function setHoursFromInputs() {\r\n            if (self.hourElement === undefined || self.minuteElement === undefined)\r\n                return;\r\n            var hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24, minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60, seconds = self.secondElement !== undefined\r\n                ? (parseInt(self.secondElement.value, 10) || 0) % 60\r\n                : 0;\r\n            if (self.amPM !== undefined) {\r\n                hours = ampm2military(hours, self.amPM.textContent);\r\n            }\r\n            var limitMinHours = self.config.minTime !== undefined ||\r\n                (self.config.minDate &&\r\n                    self.minDateHasTime &&\r\n                    self.latestSelectedDateObj &&\r\n                    compareDates(self.latestSelectedDateObj, self.config.minDate, true) ===\r\n                    0);\r\n            var limitMaxHours = self.config.maxTime !== undefined ||\r\n                (self.config.maxDate &&\r\n                    self.maxDateHasTime &&\r\n                    self.latestSelectedDateObj &&\r\n                    compareDates(self.latestSelectedDateObj, self.config.maxDate, true) ===\r\n                    0);\r\n            if (limitMaxHours) {\r\n                var maxTime = self.config.maxTime !== undefined\r\n                    ? self.config.maxTime\r\n                    : self.config.maxDate;\r\n                hours = Math.min(hours, maxTime.getHours());\r\n                if (hours === maxTime.getHours())\r\n                    minutes = Math.min(minutes, maxTime.getMinutes());\r\n                if (minutes === maxTime.getMinutes())\r\n                    seconds = Math.min(seconds, maxTime.getSeconds());\r\n            }\r\n            if (limitMinHours) {\r\n                var minTime = self.config.minTime !== undefined\r\n                    ? self.config.minTime\r\n                    : self.config.minDate;\r\n                hours = Math.max(hours, minTime.getHours());\r\n                if (hours === minTime.getHours())\r\n                    minutes = Math.max(minutes, minTime.getMinutes());\r\n                if (minutes === minTime.getMinutes())\r\n                    seconds = Math.max(seconds, minTime.getSeconds());\r\n            }\r\n            setHours(hours, minutes, seconds);\r\n        }\r\n        function setHoursFromDate(dateObj) {\r\n            var date = dateObj || self.latestSelectedDateObj;\r\n            if (date)\r\n                setHours(date.getHours(), date.getMinutes(), date.getSeconds());\r\n        }\r\n        function setDefaultHours() {\r\n            var hours = self.config.defaultHour;\r\n            var minutes = self.config.defaultMinute;\r\n            var seconds = self.config.defaultSeconds;\r\n            if (self.config.minDate !== undefined) {\r\n                var min_hr = self.config.minDate.getHours();\r\n                var min_minutes = self.config.minDate.getMinutes();\r\n                hours = Math.max(hours, min_hr);\r\n                if (hours === min_hr)\r\n                    minutes = Math.max(min_minutes, minutes);\r\n                if (hours === min_hr && minutes === min_minutes)\r\n                    seconds = self.config.minDate.getSeconds();\r\n            }\r\n            if (self.config.maxDate !== undefined) {\r\n                var max_hr = self.config.maxDate.getHours();\r\n                var max_minutes = self.config.maxDate.getMinutes();\r\n                hours = Math.min(hours, max_hr);\r\n                if (hours === max_hr)\r\n                    minutes = Math.min(max_minutes, minutes);\r\n                if (hours === max_hr && minutes === max_minutes)\r\n                    seconds = self.config.maxDate.getSeconds();\r\n            }\r\n            setHours(hours, minutes, seconds);\r\n        }\r\n        function setHours(hours, minutes, seconds) {\r\n            if (self.latestSelectedDateObj !== undefined) {\r\n                self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);\r\n            }\r\n            if (!self.hourElement || !self.minuteElement || self.isMobile)\r\n                return;\r\n            self.hourElement.value = pad(!self.config.time_24hr\r\n                ? ((12 + hours) % 12) + 12 * int(hours % 12 === 0)\r\n                : hours);\r\n            self.minuteElement.value = pad(minutes);\r\n            if (self.amPM !== undefined)\r\n                self.amPM.textContent = self.l10n.amPM[int(hours >= 12)];\r\n            if (self.secondElement !== undefined)\r\n                self.secondElement.value = pad(seconds);\r\n        }\r\n        function onYearInput(event) {\r\n            var year = parseInt(event.target.value) + (event.delta || 0);\r\n            if (year / 1000 > 1 ||\r\n                (event.key === 'Enter' && !/[^\\d]/.test(year.toString()))) {\r\n                changeYear(year);\r\n            }\r\n        }\r\n        function bind(element, event, handler, options) {\r\n            if (event instanceof Array)\r\n                return event.forEach(function(ev) { return bind(element, ev, handler, options); });\r\n            if (element instanceof Array)\r\n                return element.forEach(function(el) { return bind(el, event, handler, options); });\r\n            element.addEventListener(event, handler, options);\r\n            self._handlers.push({\r\n                element: element,\r\n                event: event,\r\n                handler: handler,\r\n                options: options,\r\n            });\r\n        }\r\n        function onClick(handler) {\r\n            return function(evt) {\r\n                evt.which === 1 && handler(evt);\r\n            };\r\n        }\r\n        function triggerChange() {\r\n            triggerEvent('onChange');\r\n        }\r\n        function bindEvents() {\r\n            if (self.config.wrap) {\r\n                ['open', 'close', 'toggle', 'clear'].forEach(function(evt) {\r\n                    Array.prototype.forEach.call(self.element.querySelectorAll('[data-' + evt + ']'), function(el) {\r\n                        return bind(el, 'click', self[evt]);\r\n                    });\r\n                });\r\n            }\r\n            if (self.isMobile) {\r\n                setupMobile();\r\n                return;\r\n            }\r\n            var debouncedResize = debounce(onResize, 50);\r\n            self._debouncedChange = debounce(triggerChange, DEBOUNCED_CHANGE_MS);\r\n            if (self.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent))\r\n                bind(self.daysContainer, 'mouseover', function(e) {\r\n                    if (self.config.mode === 'range')\r\n                        onMouseOver(e.target);\r\n                });\r\n            bind(window.document.body, 'keydown', onKeyDown);\r\n            if (!self.config.static)\r\n                bind(self._input, 'keydown', onKeyDown);\r\n            if (!self.config.inline && !self.config.static)\r\n                bind(window, 'resize', debouncedResize);\r\n            if (window.ontouchstart !== undefined)\r\n                bind(window.document, 'click', documentClick);\r\n            else\r\n                bind(window.document, 'mousedown', onClick(documentClick));\r\n            bind(window.document, 'focus', documentClick, { capture: true });\r\n            if (self.config.clickOpens === true) {\r\n                bind(self._input, 'focus', self.open);\r\n                bind(self._input, 'mousedown', onClick(self.open));\r\n            }\r\n            if (self.daysContainer !== undefined) {\r\n                bind(self.monthNav, 'mousedown', onClick(onMonthNavClick));\r\n                bind(self.monthNav, ['keyup', 'increment'], onYearInput);\r\n                bind(self.daysContainer, 'mousedown', onClick(selectDate));\r\n            }\r\n            if (self.timeContainer !== undefined &&\r\n                self.minuteElement !== undefined &&\r\n                self.hourElement !== undefined) {\r\n                var selText = function(e) {\r\n                    return e.target.select();\r\n                };\r\n                bind(self.timeContainer, ['increment'], updateTime);\r\n                bind(self.timeContainer, 'blur', updateTime, { capture: true });\r\n                bind(self.timeContainer, 'mousedown', onClick(timeIncrement));\r\n                bind([self.hourElement, self.minuteElement], ['focus', 'click'], selText);\r\n                if (self.secondElement !== undefined)\r\n                    bind(self.secondElement, 'focus', function() { return self.secondElement && self.secondElement.select(); });\r\n                if (self.amPM !== undefined) {\r\n                    bind(self.amPM, 'mousedown', onClick(function(e) {\r\n                        updateTime(e);\r\n                        triggerChange();\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        function jumpToDate(jumpDate) {\r\n            var jumpTo = jumpDate !== undefined\r\n                ? self.parseDate(jumpDate)\r\n                : self.latestSelectedDateObj ||\r\n                (self.config.minDate && self.config.minDate > self.now\r\n                    ? self.config.minDate\r\n                    : self.config.maxDate && self.config.maxDate < self.now\r\n                        ? self.config.maxDate\r\n                        : self.now);\r\n            try {\r\n                if (jumpTo !== undefined) {\r\n                    self.currentYear = jumpTo.getFullYear();\r\n                    self.currentMonth = jumpTo.getMonth();\r\n                }\r\n            }\r\n            catch (e) {\r\n                e.message = 'Invalid date supplied: ' + jumpTo;\r\n                self.config.errorHandler(e);\r\n            }\r\n            self.redraw();\r\n        }\r\n        function timeIncrement(e) {\r\n            if (~e.target.className.indexOf('arrow'))\r\n                incrementNumInput(e, e.target.classList.contains('arrowUp') ? 1 : -1);\r\n        }\r\n        function incrementNumInput(e, delta, inputElem) {\r\n            var target = e && e.target;\r\n            var input = inputElem ||\r\n                (target && target.parentNode && target.parentNode.firstChild);\r\n            var event = createEvent('increment');\r\n            event.delta = delta;\r\n            input && input.dispatchEvent(event);\r\n        }\r\n        function build() {\r\n            var fragment = window.document.createDocumentFragment();\r\n            self.calendarContainer = createElement('div', 'flatpickr-calendar');\r\n            self.calendarContainer.tabIndex = -1;\r\n            if (!self.config.noCalendar) {\r\n                fragment.appendChild(buildMonthNav());\r\n                self.innerContainer = createElement('div', 'flatpickr-innerContainer');\r\n                if (self.config.weekNumbers) {\r\n                    var _a = buildWeeks(), weekWrapper = _a.weekWrapper, weekNumbers = _a.weekNumbers;\r\n                    self.innerContainer.appendChild(weekWrapper);\r\n                    self.weekNumbers = weekNumbers;\r\n                    self.weekWrapper = weekWrapper;\r\n                }\r\n                self.rContainer = createElement('div', 'flatpickr-rContainer');\r\n                self.rContainer.appendChild(buildWeekdays());\r\n                if (!self.daysContainer) {\r\n                    self.daysContainer = createElement('div', 'flatpickr-days');\r\n                    self.daysContainer.tabIndex = -1;\r\n                }\r\n                buildDays();\r\n                self.rContainer.appendChild(self.daysContainer);\r\n                self.innerContainer.appendChild(self.rContainer);\r\n                fragment.appendChild(self.innerContainer);\r\n            }\r\n            if (self.config.enableTime) {\r\n                fragment.appendChild(buildTime());\r\n            }\r\n            toggleClass(self.calendarContainer, 'rangeMode', self.config.mode === 'range');\r\n            toggleClass(self.calendarContainer, 'animate', self.config.animate === true);\r\n            toggleClass(self.calendarContainer, 'multiMonth', self.config.showMonths > 1);\r\n            self.calendarContainer.appendChild(fragment);\r\n            var customAppend = self.config.appendTo !== undefined &&\r\n                self.config.appendTo.nodeType !== undefined;\r\n            if (self.config.inline || self.config.static) {\r\n                self.calendarContainer.classList.add(self.config.inline ? 'inline' : 'static');\r\n                if (self.config.inline) {\r\n                    if (!customAppend && self.element.parentNode)\r\n                        self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);\r\n                    else if (self.config.appendTo !== undefined)\r\n                        self.config.appendTo.appendChild(self.calendarContainer);\r\n                }\r\n                if (self.config.static) {\r\n                    var wrapper = createElement('div', 'flatpickr-wrapper');\r\n                    if (self.element.parentNode)\r\n                        self.element.parentNode.insertBefore(wrapper, self.element);\r\n                    wrapper.appendChild(self.element);\r\n                    if (self.altInput)\r\n                        wrapper.appendChild(self.altInput);\r\n                    wrapper.appendChild(self.calendarContainer);\r\n                }\r\n            }\r\n            if (!self.config.static && !self.config.inline)\r\n                (self.config.appendTo !== undefined\r\n                    ? self.config.appendTo\r\n                    : window.document.body).appendChild(self.calendarContainer);\r\n        }\r\n        function createDay(className, date, dayNumber, i) {\r\n            var dateIsEnabled = isEnabled(date, true), dayElement = createElement('span', 'flatpickr-day ' + className, date.getDate().toString());\r\n            dayElement.dateObj = date;\r\n            dayElement.$i = i;\r\n            dayElement.setAttribute('aria-label', self.formatDate(date, self.config.ariaDateFormat));\r\n            if (className.indexOf('hidden') === -1 &&\r\n                compareDates(date, self.now) === 0) {\r\n                self.todayDateElem = dayElement;\r\n                dayElement.classList.add('today');\r\n                dayElement.setAttribute('aria-current', 'date');\r\n            }\r\n            if (dateIsEnabled) {\r\n                dayElement.tabIndex = -1;\r\n                if (isDateSelected(date)) {\r\n                    dayElement.classList.add('selected');\r\n                    self.selectedDateElem = dayElement;\r\n                    if (self.config.mode === 'range') {\r\n                        toggleClass(dayElement, 'startRange', self.selectedDates[0] &&\r\n                            compareDates(date, self.selectedDates[0], true) === 0);\r\n                        toggleClass(dayElement, 'endRange', self.selectedDates[1] &&\r\n                            compareDates(date, self.selectedDates[1], true) === 0);\r\n                        if (className === 'nextMonthDay')\r\n                            dayElement.classList.add('inRange');\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                dayElement.classList.add('disabled');\r\n            }\r\n            if (self.config.mode === 'range') {\r\n                if (isDateInRange(date) && !isDateSelected(date))\r\n                    dayElement.classList.add('inRange');\r\n            }\r\n            if (self.weekNumbers &&\r\n                self.config.showMonths === 1 &&\r\n                className !== 'prevMonthDay' &&\r\n                dayNumber % 7 === 1) {\r\n                self.weekNumbers.insertAdjacentHTML('beforeend', '<span class=\"flatpickr-day\">' + self.config.getWeek(date) + '</span>');\r\n            }\r\n            triggerEvent('onDayCreate', dayElement);\r\n            return dayElement;\r\n        }\r\n        function focusOnDayElem(targetNode) {\r\n            targetNode.focus();\r\n            if (self.config.mode === 'range')\r\n                onMouseOver(targetNode);\r\n        }\r\n        function getFirstAvailableDay(delta) {\r\n            var startMonth = delta > 0 ? 0 : self.config.showMonths - 1;\r\n            var endMonth = delta > 0 ? self.config.showMonths : -1;\r\n            for (var m = startMonth; m != endMonth; m += delta) {\r\n                var month = self.daysContainer.children[m];\r\n                var startIndex = delta > 0 ? 0 : month.children.length - 1;\r\n                var endIndex = delta > 0 ? month.children.length : -1;\r\n                for (var i = startIndex; i != endIndex; i += delta) {\r\n                    var c = month.children[i];\r\n                    if (c.className.indexOf('hidden') === -1 && isEnabled(c.dateObj))\r\n                        return c;\r\n                }\r\n            }\r\n            return undefined;\r\n        }\r\n        function getNextAvailableDay(current, delta) {\r\n            var givenMonth = current.className.indexOf('Month') === -1\r\n                ? current.dateObj.getMonth()\r\n                : self.currentMonth;\r\n            var endMonth = delta > 0 ? self.config.showMonths : -1;\r\n            var loopDelta = delta > 0 ? 1 : -1;\r\n            for (var m = givenMonth - self.currentMonth; m != endMonth; m += loopDelta) {\r\n                var month = self.daysContainer.children[m];\r\n                var startIndex = givenMonth - self.currentMonth === m\r\n                    ? current.$i + delta\r\n                    : delta < 0\r\n                        ? month.children.length - 1\r\n                        : 0;\r\n                var numMonthDays = month.children.length;\r\n                for (var i = startIndex; i >= 0 && i < numMonthDays && i != (delta > 0 ? numMonthDays : -1); i += loopDelta) {\r\n                    var c = month.children[i];\r\n                    if (c.className.indexOf('hidden') === -1 &&\r\n                        isEnabled(c.dateObj) &&\r\n                        Math.abs(current.$i - i) >= Math.abs(delta))\r\n                        return focusOnDayElem(c);\r\n                }\r\n            }\r\n            self.changeMonth(loopDelta);\r\n            focusOnDay(getFirstAvailableDay(loopDelta), 0);\r\n            return undefined;\r\n        }\r\n        function focusOnDay(current, offset) {\r\n            var dayFocused = isInView(document.activeElement || document.body);\r\n            var startElem = current !== undefined\r\n                ? current\r\n                : dayFocused\r\n                    ? document.activeElement\r\n                    : self.selectedDateElem !== undefined &&\r\n                        isInView(self.selectedDateElem)\r\n                        ? self.selectedDateElem\r\n                        : self.todayDateElem !== undefined && isInView(self.todayDateElem)\r\n                            ? self.todayDateElem\r\n                            : getFirstAvailableDay(offset > 0 ? 1 : -1);\r\n            if (startElem === undefined)\r\n                return self._input.focus();\r\n            if (!dayFocused)\r\n                return focusOnDayElem(startElem);\r\n            getNextAvailableDay(startElem, offset);\r\n        }\r\n        function buildMonthDays(year, month) {\r\n            var firstOfMonth = (new Date(year, month, 1).getDay() - self.l10n.firstDayOfWeek + 7) % 7;\r\n            var prevMonthDays = self.utils.getDaysInMonth((month - 1 + 12) % 12);\r\n            var daysInMonth = self.utils.getDaysInMonth(month), days = window.document.createDocumentFragment(), isMultiMonth = self.config.showMonths > 1, prevMonthDayClass = isMultiMonth ? 'prevMonthDay hidden' : 'prevMonthDay', nextMonthDayClass = isMultiMonth ? 'nextMonthDay hidden' : 'nextMonthDay';\r\n            var dayNumber = prevMonthDays + 1 - firstOfMonth, dayIndex = 0;\r\n            for (; dayNumber <= prevMonthDays; dayNumber++ , dayIndex++) {\r\n                days.appendChild(createDay(prevMonthDayClass, new Date(year, month - 1, dayNumber), dayNumber, dayIndex));\r\n            }\r\n            for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++ , dayIndex++) {\r\n                days.appendChild(createDay('', new Date(year, month, dayNumber), dayNumber, dayIndex));\r\n            }\r\n            for (var dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth &&\r\n                (self.config.showMonths === 1 || dayIndex % 7 !== 0); dayNum++ , dayIndex++) {\r\n                days.appendChild(createDay(nextMonthDayClass, new Date(year, month + 1, dayNum % daysInMonth), dayNum, dayIndex));\r\n            }\r\n            var dayContainer = createElement('div', 'dayContainer');\r\n            dayContainer.appendChild(days);\r\n            return dayContainer;\r\n        }\r\n        function buildDays() {\r\n            if (self.daysContainer === undefined) {\r\n                return;\r\n            }\r\n            clearNode(self.daysContainer);\r\n            if (self.weekNumbers)\r\n                clearNode(self.weekNumbers);\r\n            var frag = document.createDocumentFragment();\r\n            for (var i = 0; i < self.config.showMonths; i++) {\r\n                var d = new Date(self.currentYear, self.currentMonth, 1);\r\n                d.setMonth(self.currentMonth + i);\r\n                frag.appendChild(buildMonthDays(d.getFullYear(), d.getMonth()));\r\n            }\r\n            self.daysContainer.appendChild(frag);\r\n            self.days = self.daysContainer.firstChild;\r\n            if (self.config.mode === 'range' && self.selectedDates.length === 1) {\r\n                onMouseOver();\r\n            }\r\n        }\r\n        function buildMonth() {\r\n            var container = createElement('div', 'flatpickr-month');\r\n            var monthNavFragment = window.document.createDocumentFragment();\r\n            var monthElement = createElement('span', 'cur-month');\r\n            var yearInput = createNumberInput('cur-year', { tabindex: '-1' });\r\n            var yearElement = yearInput.childNodes[0];\r\n            yearElement.setAttribute('aria-label', self.l10n.yearAriaLabel);\r\n            if (self.config.minDate)\r\n                yearElement.setAttribute('data-min', self.config.minDate.getFullYear().toString());\r\n            if (self.config.maxDate) {\r\n                yearElement.setAttribute('data-max', self.config.maxDate.getFullYear().toString());\r\n                yearElement.disabled =\r\n                    !!self.config.minDate &&\r\n                    self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();\r\n            }\r\n            var currentMonth = createElement('div', 'flatpickr-current-month');\r\n            currentMonth.appendChild(monthElement);\r\n            currentMonth.appendChild(yearInput);\r\n            monthNavFragment.appendChild(currentMonth);\r\n            container.appendChild(monthNavFragment);\r\n            return {\r\n                container: container,\r\n                yearElement: yearElement,\r\n                monthElement: monthElement,\r\n            };\r\n        }\r\n        function buildMonths() {\r\n            clearNode(self.monthNav);\r\n            self.monthNav.appendChild(self.prevMonthNav);\r\n            for (var m = self.config.showMonths; m--;) {\r\n                var month = buildMonth();\r\n                self.yearElements.push(month.yearElement);\r\n                self.monthElements.push(month.monthElement);\r\n                self.monthNav.appendChild(month.container);\r\n            }\r\n            self.monthNav.appendChild(self.nextMonthNav);\r\n        }\r\n        function buildMonthNav() {\r\n            self.monthNav = createElement('div', 'flatpickr-months');\r\n            self.yearElements = [];\r\n            self.monthElements = [];\r\n            self.prevMonthNav = createElement('span', 'flatpickr-prev-month');\r\n            self.prevMonthNav.innerHTML = self.config.prevArrow;\r\n            self.nextMonthNav = createElement('span', 'flatpickr-next-month');\r\n            self.nextMonthNav.innerHTML = self.config.nextArrow;\r\n            buildMonths();\r\n            Object.defineProperty(self, '_hidePrevMonthArrow', {\r\n                get: function() { return self.__hidePrevMonthArrow; },\r\n                set: function(bool) {\r\n                    if (self.__hidePrevMonthArrow !== bool) {\r\n                        toggleClass(self.prevMonthNav, 'disabled', bool);\r\n                        self.__hidePrevMonthArrow = bool;\r\n                    }\r\n                },\r\n            });\r\n            Object.defineProperty(self, '_hideNextMonthArrow', {\r\n                get: function() { return self.__hideNextMonthArrow; },\r\n                set: function(bool) {\r\n                    if (self.__hideNextMonthArrow !== bool) {\r\n                        toggleClass(self.nextMonthNav, 'disabled', bool);\r\n                        self.__hideNextMonthArrow = bool;\r\n                    }\r\n                },\r\n            });\r\n            self.currentYearElement = self.yearElements[0];\r\n            updateNavigationCurrentMonth();\r\n            return self.monthNav;\r\n        }\r\n        function buildTime() {\r\n            self.calendarContainer.classList.add('hasTime');\r\n            if (self.config.noCalendar)\r\n                self.calendarContainer.classList.add('noCalendar');\r\n            self.timeContainer = createElement('div', 'flatpickr-time');\r\n            self.timeContainer.tabIndex = -1;\r\n            var separator = createElement('span', 'flatpickr-time-separator', ':');\r\n            var hourInput = createNumberInput('flatpickr-hour');\r\n            self.hourElement = hourInput.childNodes[0];\r\n            var minuteInput = createNumberInput('flatpickr-minute');\r\n            self.minuteElement = minuteInput.childNodes[0];\r\n            self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;\r\n            self.hourElement.value = pad(self.latestSelectedDateObj\r\n                ? self.latestSelectedDateObj.getHours()\r\n                : self.config.time_24hr\r\n                    ? self.config.defaultHour\r\n                    : military2ampm(self.config.defaultHour));\r\n            self.minuteElement.value = pad(self.latestSelectedDateObj\r\n                ? self.latestSelectedDateObj.getMinutes()\r\n                : self.config.defaultMinute);\r\n            self.hourElement.setAttribute('data-step', self.config.hourIncrement.toString());\r\n            self.minuteElement.setAttribute('data-step', self.config.minuteIncrement.toString());\r\n            self.hourElement.setAttribute('data-min', self.config.time_24hr ? '0' : '1');\r\n            self.hourElement.setAttribute('data-max', self.config.time_24hr ? '23' : '12');\r\n            self.minuteElement.setAttribute('data-min', '0');\r\n            self.minuteElement.setAttribute('data-max', '59');\r\n            self.timeContainer.appendChild(hourInput);\r\n            self.timeContainer.appendChild(separator);\r\n            self.timeContainer.appendChild(minuteInput);\r\n            if (self.config.time_24hr)\r\n                self.timeContainer.classList.add('time24hr');\r\n            if (self.config.enableSeconds) {\r\n                self.timeContainer.classList.add('hasSeconds');\r\n                var secondInput = createNumberInput('flatpickr-second');\r\n                self.secondElement = secondInput.childNodes[0];\r\n                self.secondElement.value = pad(self.latestSelectedDateObj\r\n                    ? self.latestSelectedDateObj.getSeconds()\r\n                    : self.config.defaultSeconds);\r\n                self.secondElement.setAttribute('data-step', self.minuteElement.getAttribute('data-step'));\r\n                self.secondElement.setAttribute('data-min', self.minuteElement.getAttribute('data-min'));\r\n                self.secondElement.setAttribute('data-max', self.minuteElement.getAttribute('data-max'));\r\n                self.timeContainer.appendChild(createElement('span', 'flatpickr-time-separator', ':'));\r\n                self.timeContainer.appendChild(secondInput);\r\n            }\r\n            if (!self.config.time_24hr) {\r\n                self.amPM = createElement('span', 'flatpickr-am-pm', self.l10n.amPM[int((self.latestSelectedDateObj\r\n                    ? self.hourElement.value\r\n                    : self.config.defaultHour) > 11)]);\r\n                self.amPM.title = self.l10n.toggleTitle;\r\n                self.amPM.tabIndex = -1;\r\n                self.timeContainer.appendChild(self.amPM);\r\n            }\r\n            return self.timeContainer;\r\n        }\r\n        function buildWeekdays() {\r\n            if (!self.weekdayContainer)\r\n                self.weekdayContainer = createElement('div', 'flatpickr-weekdays');\r\n            else\r\n                clearNode(self.weekdayContainer);\r\n            for (var i = self.config.showMonths; i--;) {\r\n                var container = createElement('div', 'flatpickr-weekdaycontainer');\r\n                self.weekdayContainer.appendChild(container);\r\n            }\r\n            updateWeekdays();\r\n            return self.weekdayContainer;\r\n        }\r\n        function updateWeekdays() {\r\n            var firstDayOfWeek = self.l10n.firstDayOfWeek;\r\n            var weekdays = self.l10n.weekdays.shorthand.slice();\r\n            if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {\r\n                weekdays = weekdays.splice(firstDayOfWeek, weekdays.length).concat(weekdays.splice(0, firstDayOfWeek));\r\n            }\r\n            for (var i = self.config.showMonths; i--;) {\r\n                self.weekdayContainer.children[i].innerHTML = '\\n      <span class=flatpickr-weekday>\\n        ' + weekdays.join('</span><span class=flatpickr-weekday>') + '\\n      </span>\\n      ';\r\n            }\r\n        }\r\n        function buildWeeks() {\r\n            self.calendarContainer.classList.add('hasWeeks');\r\n            var weekWrapper = createElement('div', 'flatpickr-weekwrapper');\r\n            weekWrapper.appendChild(createElement('span', 'flatpickr-weekday', self.l10n.weekAbbreviation));\r\n            var weekNumbers = createElement('div', 'flatpickr-weeks');\r\n            weekWrapper.appendChild(weekNumbers);\r\n            return {\r\n                weekWrapper: weekWrapper,\r\n                weekNumbers: weekNumbers,\r\n            };\r\n        }\r\n        function changeMonth(value, is_offset) {\r\n            if (is_offset === void 0) { is_offset = true; }\r\n            var delta = is_offset ? value : value - self.currentMonth;\r\n            if ((delta < 0 && self._hidePrevMonthArrow === true) ||\r\n                (delta > 0 && self._hideNextMonthArrow === true))\r\n                return;\r\n            self.currentMonth += delta;\r\n            if (self.currentMonth < 0 || self.currentMonth > 11) {\r\n                self.currentYear += self.currentMonth > 11 ? 1 : -1;\r\n                self.currentMonth = (self.currentMonth + 12) % 12;\r\n                triggerEvent('onYearChange');\r\n            }\r\n            buildDays();\r\n            triggerEvent('onMonthChange');\r\n            updateNavigationCurrentMonth();\r\n        }\r\n        function clear(triggerChangeEvent) {\r\n            if (triggerChangeEvent === void 0) { triggerChangeEvent = true; }\r\n            self.input.value = '';\r\n            if (self.altInput !== undefined)\r\n                self.altInput.value = '';\r\n            if (self.mobileInput !== undefined)\r\n                self.mobileInput.value = '';\r\n            self.selectedDates = [];\r\n            self.latestSelectedDateObj = undefined;\r\n            self.showTimeInput = false;\r\n            if (self.config.enableTime === true) {\r\n                setDefaultHours();\r\n            }\r\n            self.redraw();\r\n            if (triggerChangeEvent)\r\n                triggerEvent('onChange');\r\n        }\r\n        function close() {\r\n            self.isOpen = false;\r\n            if (!self.isMobile) {\r\n                self.calendarContainer.classList.remove('open');\r\n                self._input.classList.remove('active');\r\n            }\r\n            triggerEvent('onClose');\r\n        }\r\n        function destroy() {\r\n            if (self.config !== undefined)\r\n                triggerEvent('onDestroy');\r\n            for (var i = self._handlers.length; i--;) {\r\n                var h = self._handlers[i];\r\n                h.element.removeEventListener(h.event, h.handler, h.options);\r\n            }\r\n            self._handlers = [];\r\n            if (self.mobileInput) {\r\n                if (self.mobileInput.parentNode)\r\n                    self.mobileInput.parentNode.removeChild(self.mobileInput);\r\n                self.mobileInput = undefined;\r\n            }\r\n            else if (self.calendarContainer && self.calendarContainer.parentNode) {\r\n                if (self.config.static && self.calendarContainer.parentNode) {\r\n                    var wrapper = self.calendarContainer.parentNode;\r\n                    wrapper.lastChild && wrapper.removeChild(wrapper.lastChild);\r\n                    while (wrapper.firstChild)\r\n                        wrapper.parentNode.insertBefore(wrapper.firstChild, wrapper);\r\n                    wrapper.parentNode.removeChild(wrapper);\r\n                }\r\n                else\r\n                    self.calendarContainer.parentNode.removeChild(self.calendarContainer);\r\n            }\r\n            if (self.altInput) {\r\n                self.input.type = 'text';\r\n                if (self.altInput.parentNode)\r\n                    self.altInput.parentNode.removeChild(self.altInput);\r\n                delete self.altInput;\r\n            }\r\n            if (self.input) {\r\n                self.input.type = self.input._type;\r\n                self.input.classList.remove('flatpickr-input');\r\n                self.input.removeAttribute('readonly');\r\n                self.input.value = '';\r\n            }\r\n            [\r\n                '_showTimeInput',\r\n                'latestSelectedDateObj',\r\n                '_hideNextMonthArrow',\r\n                '_hidePrevMonthArrow',\r\n                '__hideNextMonthArrow',\r\n                '__hidePrevMonthArrow',\r\n                'isMobile',\r\n                'isOpen',\r\n                'selectedDateElem',\r\n                'minDateHasTime',\r\n                'maxDateHasTime',\r\n                'days',\r\n                'daysContainer',\r\n                '_input',\r\n                '_positionElement',\r\n                'innerContainer',\r\n                'rContainer',\r\n                'monthNav',\r\n                'todayDateElem',\r\n                'calendarContainer',\r\n                'weekdayContainer',\r\n                'prevMonthNav',\r\n                'nextMonthNav',\r\n                'currentMonthElement',\r\n                'currentYearElement',\r\n                'navigationCurrentMonth',\r\n                'selectedDateElem',\r\n                'config',\r\n            ].forEach(function(k) {\r\n                try {\r\n                    delete self[k];\r\n                }\r\n                catch (_) {\r\n                    // do nothing\r\n                }\r\n            });\r\n        }\r\n        function isCalendarElem(elem) {\r\n            if (self.config.appendTo && self.config.appendTo.contains(elem))\r\n                return true;\r\n            return self.calendarContainer.contains(elem);\r\n        }\r\n        function documentClick(e) {\r\n            if (self.isOpen && !self.config.inline) {\r\n                var isCalendarElement = isCalendarElem(e.target);\r\n                var isInput = e.target === self.input ||\r\n                    e.target === self.altInput ||\r\n                    self.element.contains(e.target) ||\r\n                    (e.path &&\r\n                        e.path.indexOf &&\r\n                        (~e.path.indexOf(self.input) ||\r\n                            ~e.path.indexOf(self.altInput)));\r\n                var lostFocus = e.type === 'blur'\r\n                    ? isInput &&\r\n                    e.relatedTarget &&\r\n                    !isCalendarElem(e.relatedTarget)\r\n                    : !isInput && !isCalendarElement;\r\n                var isIgnored = !self.config.ignoredFocusElements.some(function(elem) {\r\n                    return elem.contains(e.target);\r\n                });\r\n                if (lostFocus && isIgnored) {\r\n                    self.close();\r\n                    if (self.config.mode === 'range' && self.selectedDates.length === 1) {\r\n                        self.clear(false);\r\n                        self.redraw();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        function changeYear(newYear) {\r\n            if (!newYear ||\r\n                (self.config.minDate && newYear < self.config.minDate.getFullYear()) ||\r\n                (self.config.maxDate && newYear > self.config.maxDate.getFullYear()))\r\n                return;\r\n            var newYearNum = newYear, isNewYear = self.currentYear !== newYearNum;\r\n            self.currentYear = newYearNum || self.currentYear;\r\n            if (self.config.maxDate &&\r\n                self.currentYear === self.config.maxDate.getFullYear()) {\r\n                self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);\r\n            }\r\n            else if (self.config.minDate &&\r\n                self.currentYear === self.config.minDate.getFullYear()) {\r\n                self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);\r\n            }\r\n            if (isNewYear) {\r\n                self.redraw();\r\n                triggerEvent('onYearChange');\r\n            }\r\n        }\r\n        function isEnabled(date, timeless) {\r\n            if (timeless === void 0) { timeless = true; }\r\n            var dateToCheck = self.parseDate(date, undefined, timeless);\r\n            if ((self.config.minDate &&\r\n                dateToCheck &&\r\n                compareDates(dateToCheck, self.config.minDate, timeless !== undefined ? timeless : !self.minDateHasTime) < 0) ||\r\n                (self.config.maxDate &&\r\n                    dateToCheck &&\r\n                    compareDates(dateToCheck, self.config.maxDate, timeless !== undefined ? timeless : !self.maxDateHasTime) > 0))\r\n                return false;\r\n            if (self.config.enable.length === 0 && self.config.disable.length === 0)\r\n                return true;\r\n            if (dateToCheck === undefined)\r\n                return false;\r\n            var bool = self.config.enable.length > 0, array = bool ? self.config.enable : self.config.disable;\r\n            for (var i = 0, d = void 0; i < array.length; i++) {\r\n                d = array[i];\r\n                if (typeof d === 'function' &&\r\n                    d(dateToCheck))\r\n                    return bool;\r\n                else if (d instanceof Date &&\r\n                    dateToCheck !== undefined &&\r\n                    d.getTime() === dateToCheck.getTime())\r\n                    return bool;\r\n                else if (typeof d === 'string' && dateToCheck !== undefined) {\r\n                    var parsed = self.parseDate(d, undefined, true);\r\n                    return parsed && parsed.getTime() === dateToCheck.getTime()\r\n                        ? bool\r\n                        : !bool;\r\n                }\r\n                else if (typeof d === 'object' &&\r\n                    dateToCheck !== undefined &&\r\n                    d.from &&\r\n                    d.to &&\r\n                    dateToCheck.getTime() >= d.from.getTime() &&\r\n                    dateToCheck.getTime() <= d.to.getTime())\r\n                    return bool;\r\n            }\r\n            return !bool;\r\n        }\r\n        function isInView(elem) {\r\n            if (self.daysContainer !== undefined)\r\n                return (elem.className.indexOf('hidden') === -1 &&\r\n                    self.daysContainer.contains(elem));\r\n            return false;\r\n        }\r\n        function onKeyDown(e) {\r\n            var isInput = e.target === self._input;\r\n            var allowInput = self.config.allowInput;\r\n            var allowKeydown = self.isOpen && (!allowInput || !isInput);\r\n            var allowInlineKeydown = self.config.inline && isInput && !allowInput;\r\n            if (e.keyCode === 13 && isInput) {\r\n                if (allowInput) {\r\n                    self.setDate(self._input.value, true, e.target === self.altInput\r\n                        ? self.config.altFormat\r\n                        : self.config.dateFormat);\r\n                    return e.target.blur();\r\n                }\r\n                else\r\n                    self.open();\r\n            }\r\n            else if (isCalendarElem(e.target) ||\r\n                allowKeydown ||\r\n                allowInlineKeydown) {\r\n                var isTimeObj = !!self.timeContainer &&\r\n                    self.timeContainer.contains(e.target);\r\n                switch (e.keyCode) {\r\n                    case 13:\r\n                        if (isTimeObj)\r\n                            updateTime();\r\n                        else\r\n                            selectDate(e);\r\n                        break;\r\n                    case 27:\r\n                        e.preventDefault();\r\n                        focusAndClose();\r\n                        break;\r\n                    case 8:\r\n                    case 46:\r\n                        if (isInput && !self.config.allowInput) {\r\n                            e.preventDefault();\r\n                            self.clear();\r\n                        }\r\n                        break;\r\n                    case 37:\r\n                    case 39:\r\n                        if (!isTimeObj) {\r\n                            e.preventDefault();\r\n                            if (self.daysContainer !== undefined &&\r\n                                (allowInput === false || isInView(document.activeElement))) {\r\n                                var delta_1 = e.keyCode === 39 ? 1 : -1;\r\n                                if (!e.ctrlKey)\r\n                                    focusOnDay(undefined, delta_1);\r\n                                else {\r\n                                    changeMonth(delta_1);\r\n                                    focusOnDay(getFirstAvailableDay(1), 0);\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (self.hourElement)\r\n                            self.hourElement.focus();\r\n                        break;\r\n                    case 38:\r\n                    case 40:\r\n                        e.preventDefault();\r\n                        var delta = e.keyCode === 40 ? 1 : -1;\r\n                        if (self.daysContainer) {\r\n                            if (e.ctrlKey) {\r\n                                changeYear(self.currentYear - delta);\r\n                                focusOnDay(getFirstAvailableDay(1), 0);\r\n                            }\r\n                            else if (!isTimeObj)\r\n                                focusOnDay(undefined, delta * 7);\r\n                        }\r\n                        else if (self.config.enableTime) {\r\n                            if (!isTimeObj && self.hourElement)\r\n                                self.hourElement.focus();\r\n                            updateTime(e);\r\n                            self._debouncedChange();\r\n                        }\r\n                        break;\r\n                    case 9:\r\n                        if (!isTimeObj) {\r\n                            self.element.focus();\r\n                            break;\r\n                        }\r\n                        var elems = [\r\n                            self.hourElement,\r\n                            self.minuteElement,\r\n                            self.secondElement,\r\n                            self.amPM,\r\n                        ].filter(function(x) { return x; });\r\n                        var i = elems.indexOf(e.target);\r\n                        if (i !== -1) {\r\n                            var target = elems[i + (e.shiftKey ? -1 : 1)];\r\n                            if (target !== undefined) {\r\n                                e.preventDefault();\r\n                                target.focus();\r\n                            }\r\n                            else {\r\n                                self.element.focus();\r\n                            }\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            if (self.amPM !== undefined && e.target === self.amPM) {\r\n                switch (e.key) {\r\n                    case self.l10n.amPM[0].charAt(0):\r\n                    case self.l10n.amPM[0].charAt(0).toLowerCase():\r\n                        self.amPM.textContent = self.l10n.amPM[0];\r\n                        setHoursFromInputs();\r\n                        updateValue();\r\n                        break;\r\n                    case self.l10n.amPM[1].charAt(0):\r\n                    case self.l10n.amPM[1].charAt(0).toLowerCase():\r\n                        self.amPM.textContent = self.l10n.amPM[1];\r\n                        setHoursFromInputs();\r\n                        updateValue();\r\n                        break;\r\n                }\r\n            }\r\n            triggerEvent('onKeyDown', e);\r\n        }\r\n        function onMouseOver(elem) {\r\n            if (self.selectedDates.length !== 1 ||\r\n                (elem &&\r\n                    (!elem.classList.contains('flatpickr-day') ||\r\n                        elem.classList.contains('disabled'))))\r\n                return;\r\n            var hoverDate = elem ? elem.dateObj.getTime() : self.days.firstElementChild.dateObj.getTime(), initialDate = self.parseDate(self.selectedDates[0], undefined, true).getTime(), rangeStartDate = Math.min(hoverDate, self.selectedDates[0].getTime()), rangeEndDate = Math.max(hoverDate, self.selectedDates[0].getTime()), lastDate = self.daysContainer.lastChild\r\n                .lastChild.dateObj.getTime();\r\n            var containsDisabled = false;\r\n            var minRange = 0, maxRange = 0;\r\n            for (var t = rangeStartDate; t < lastDate; t += duration.DAY) {\r\n                if (!isEnabled(new Date(t), true)) {\r\n                    containsDisabled =\r\n                        containsDisabled || (t > rangeStartDate && t < rangeEndDate);\r\n                    if (t < initialDate && (!minRange || t > minRange))\r\n                        minRange = t;\r\n                    else if (t > initialDate && (!maxRange || t < maxRange))\r\n                        maxRange = t;\r\n                }\r\n            }\r\n            for (var m = 0; m < self.config.showMonths; m++) {\r\n                var month = self.daysContainer.children[m];\r\n                var prevMonth = self.daysContainer.children[m - 1];\r\n                var _loop_1 = function(i, l) {\r\n                    var dayElem = month.children[i], date = dayElem.dateObj;\r\n                    var timestamp = date.getTime();\r\n                    var outOfRange = (minRange > 0 && timestamp < minRange) ||\r\n                        (maxRange > 0 && timestamp > maxRange);\r\n                    if (outOfRange) {\r\n                        dayElem.classList.add('notAllowed');\r\n                        ['inRange', 'startRange', 'endRange'].forEach(function(c) {\r\n                            dayElem.classList.remove(c);\r\n                        });\r\n                        return 'continue';\r\n                    }\r\n                    else if (containsDisabled && !outOfRange)\r\n                        return 'continue';\r\n                    ['startRange', 'inRange', 'endRange', 'notAllowed'].forEach(function(c) {\r\n                        dayElem.classList.remove(c);\r\n                    });\r\n                    if (elem !== undefined) {\r\n                        elem.classList.add(hoverDate < self.selectedDates[0].getTime()\r\n                            ? 'startRange'\r\n                            : 'endRange');\r\n                        if (month.contains(elem) ||\r\n                            !(m > 0 &&\r\n                                prevMonth &&\r\n                                prevMonth.lastChild.dateObj.getTime() >= timestamp)) {\r\n                            if (initialDate < hoverDate && timestamp === initialDate)\r\n                                dayElem.classList.add('startRange');\r\n                            else if (initialDate > hoverDate && timestamp === initialDate)\r\n                                dayElem.classList.add('endRange');\r\n                            if (timestamp >= minRange &&\r\n                                (maxRange === 0 || timestamp <= maxRange) &&\r\n                                isBetween(timestamp, initialDate, hoverDate))\r\n                                dayElem.classList.add('inRange');\r\n                        }\r\n                    }\r\n                };\r\n                for (var i = 0, l = month.children.length; i < l; i++) {\r\n                    _loop_1(i, l);\r\n                }\r\n            }\r\n        }\r\n        function onResize() {\r\n            if (self.isOpen && !self.config.static && !self.config.inline)\r\n                positionCalendar();\r\n        }\r\n        function open(e, positionElement) {\r\n            if (positionElement === void 0) { positionElement = self._positionElement; }\r\n            if (self.isMobile === true) {\r\n                if (e) {\r\n                    e.preventDefault();\r\n                    e.target && e.target.blur();\r\n                }\r\n                if (self.mobileInput !== undefined) {\r\n                    self.mobileInput.focus();\r\n                    self.mobileInput.click();\r\n                }\r\n                triggerEvent('onOpen');\r\n                return;\r\n            }\r\n            if (self._input.disabled || self.config.inline)\r\n                return;\r\n            var wasOpen = self.isOpen;\r\n            self.isOpen = true;\r\n            if (!wasOpen) {\r\n                self.calendarContainer.classList.add('open');\r\n                self._input.classList.add('active');\r\n                triggerEvent('onOpen');\r\n                positionCalendar(positionElement);\r\n            }\r\n            if (self.config.enableTime === true && self.config.noCalendar === true) {\r\n                if (self.selectedDates.length === 0) {\r\n                    self.setDate(self.config.minDate !== undefined\r\n                        ? new Date(self.config.minDate.getTime())\r\n                        : new Date(), false);\r\n                    setDefaultHours();\r\n                    updateValue();\r\n                }\r\n                if (self.config.allowInput === false &&\r\n                    (e === undefined ||\r\n                        !self.timeContainer.contains(e.relatedTarget))) {\r\n                    setTimeout(function() { return self.hourElement.select(); }, 50);\r\n                }\r\n            }\r\n        }\r\n        function minMaxDateSetter(type) {\r\n            return function(date) {\r\n                var dateObj = (self.config['_' + type + 'Date'] = self.parseDate(date, self.config.dateFormat));\r\n                var inverseDateObj = self.config['_' + (type === 'min' ? 'max' : 'min') + 'Date'];\r\n                if (dateObj !== undefined) {\r\n                    self[type === 'min' ? 'minDateHasTime' : 'maxDateHasTime'] =\r\n                        dateObj.getHours() > 0 ||\r\n                        dateObj.getMinutes() > 0 ||\r\n                        dateObj.getSeconds() > 0;\r\n                }\r\n                if (self.selectedDates) {\r\n                    self.selectedDates = self.selectedDates.filter(function(d) { return isEnabled(d); });\r\n                    if (!self.selectedDates.length && type === 'min')\r\n                        setHoursFromDate(dateObj);\r\n                    updateValue();\r\n                }\r\n                if (self.daysContainer) {\r\n                    redraw();\r\n                    if (dateObj !== undefined)\r\n                        self.currentYearElement[type] = dateObj.getFullYear().toString();\r\n                    else\r\n                        self.currentYearElement.removeAttribute(type);\r\n                    self.currentYearElement.disabled =\r\n                        !!inverseDateObj &&\r\n                        dateObj !== undefined &&\r\n                        inverseDateObj.getFullYear() === dateObj.getFullYear();\r\n                }\r\n            };\r\n        }\r\n        function parseConfig() {\r\n            var boolOpts = [\r\n                'wrap',\r\n                'weekNumbers',\r\n                'allowInput',\r\n                'clickOpens',\r\n                'time_24hr',\r\n                'enableTime',\r\n                'noCalendar',\r\n                'altInput',\r\n                'shorthandCurrentMonth',\r\n                'inline',\r\n                'static',\r\n                'enableSeconds',\r\n                'disableMobile',\r\n            ];\r\n            var hooks = [\r\n                'onChange',\r\n                'onClose',\r\n                'onDayCreate',\r\n                'onDestroy',\r\n                'onKeyDown',\r\n                'onMonthChange',\r\n                'onOpen',\r\n                'onParseConfig',\r\n                'onReady',\r\n                'onValueUpdate',\r\n                'onYearChange',\r\n                'onPreCalendarPosition',\r\n            ];\r\n            var userConfig = __assign({}, instanceConfig, JSON.parse(JSON.stringify(element.dataset || {})));\r\n            var formats$$1 = {};\r\n            self.config.parseDate = userConfig.parseDate;\r\n            self.config.formatDate = userConfig.formatDate;\r\n            Object.defineProperty(self.config, 'enable', {\r\n                get: function() { return self.config._enable; },\r\n                set: function(dates) {\r\n                    self.config._enable = parseDateRules(dates);\r\n                },\r\n            });\r\n            Object.defineProperty(self.config, 'disable', {\r\n                get: function() { return self.config._disable; },\r\n                set: function(dates) {\r\n                    self.config._disable = parseDateRules(dates);\r\n                },\r\n            });\r\n            var timeMode = userConfig.mode === 'time';\r\n            if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {\r\n                formats$$1.dateFormat =\r\n                    userConfig.noCalendar || timeMode\r\n                        ? 'H:i' + (userConfig.enableSeconds ? ':S' : '')\r\n                        : flatpickr.defaultConfig.dateFormat +\r\n                        ' H:i' +\r\n                        (userConfig.enableSeconds ? ':S' : '');\r\n            }\r\n            if (userConfig.altInput &&\r\n                (userConfig.enableTime || timeMode) &&\r\n                !userConfig.altFormat) {\r\n                formats$$1.altFormat =\r\n                    userConfig.noCalendar || timeMode\r\n                        ? 'h:i' + (userConfig.enableSeconds ? ':S K' : ' K')\r\n                        : flatpickr.defaultConfig.altFormat +\r\n                        (' h:i' + (userConfig.enableSeconds ? ':S' : '') + ' K');\r\n            }\r\n            Object.defineProperty(self.config, 'minDate', {\r\n                get: function() { return self.config._minDate; },\r\n                set: minMaxDateSetter('min'),\r\n            });\r\n            Object.defineProperty(self.config, 'maxDate', {\r\n                get: function() { return self.config._maxDate; },\r\n                set: minMaxDateSetter('max'),\r\n            });\r\n            var minMaxTimeSetter = function(type) {\r\n                return function(val) {\r\n                    self.config[type === 'min' ? '_minTime' : '_maxTime'] = self.parseDate(val, 'H:i');\r\n                };\r\n            };\r\n            Object.defineProperty(self.config, 'minTime', {\r\n                get: function() { return self.config._minTime; },\r\n                set: minMaxTimeSetter('min'),\r\n            });\r\n            Object.defineProperty(self.config, 'maxTime', {\r\n                get: function() { return self.config._maxTime; },\r\n                set: minMaxTimeSetter('max'),\r\n            });\r\n            if (userConfig.mode === 'time') {\r\n                self.config.noCalendar = true;\r\n                self.config.enableTime = true;\r\n            }\r\n            Object.assign(self.config, formats$$1, userConfig);\r\n            var i;\r\n            for (i = 0; i < boolOpts.length; i++)\r\n                self.config[boolOpts[i]] =\r\n                    self.config[boolOpts[i]] === true ||\r\n                    self.config[boolOpts[i]] === 'true';\r\n            for (i = hooks.length; i--;) {\r\n                if (self.config[hooks[i]] !== undefined) {\r\n                    self.config[hooks[i]] = arrayify(self.config[hooks[i]] || []).map(bindToInstance);\r\n                }\r\n            }\r\n            self.isMobile =\r\n                !self.config.disableMobile &&\r\n                !self.config.inline &&\r\n                self.config.mode === 'single' &&\r\n                !self.config.disable.length &&\r\n                !self.config.enable.length &&\r\n                !self.config.weekNumbers &&\r\n                /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n            for (i = 0; i < self.config.plugins.length; i++) {\r\n                var pluginConf = self.config.plugins[i](self) || {};\r\n                for (var key in pluginConf) {\r\n                    if (~hooks.indexOf(key)) {\r\n                        self.config[key] = arrayify(pluginConf[key])\r\n                            .map(bindToInstance)\r\n                            .concat(self.config[key]);\r\n                    }\r\n                    else if (typeof userConfig[key] === 'undefined')\r\n                        self.config[key] = pluginConf[key];\r\n                }\r\n            }\r\n            triggerEvent('onParseConfig');\r\n        }\r\n        function setupLocale() {\r\n            if (typeof self.config.locale !== 'object' &&\r\n                typeof flatpickr.l10ns[self.config.locale] === 'undefined')\r\n                self.config.errorHandler(new Error('flatpickr: invalid locale ' + self.config.locale));\r\n            self.l10n = __assign({}, flatpickr.l10ns.default, (typeof self.config.locale === 'object'\r\n                ? self.config.locale\r\n                : self.config.locale !== 'default'\r\n                    ? flatpickr.l10ns[self.config.locale]\r\n                    : undefined));\r\n            tokenRegex.K = '(' + self.l10n.amPM[0] + '|' + self.l10n.amPM[1] + '|' + self.l10n.amPM[0].toLowerCase() + '|' + self.l10n.amPM[1].toLowerCase() + ')';\r\n            self.formatDate = createDateFormatter(self);\r\n            self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\r\n        }\r\n        function positionCalendar(customPositionElement) {\r\n            if (self.calendarContainer === undefined)\r\n                return;\r\n            triggerEvent('onPreCalendarPosition');\r\n            var positionElement = customPositionElement || self._positionElement;\r\n            var calendarHeight = Array.prototype.reduce.call(self.calendarContainer.children, function(acc, child) { return acc + child.offsetHeight; }, 0), calendarWidth = self.calendarContainer.offsetWidth, configPos = self.config.position.split(' '), configPosVertical = configPos[0], configPosHorizontal = configPos.length > 1 ? configPos[1] : null, inputBounds = positionElement.getBoundingClientRect(), distanceFromBottom = window.innerHeight - inputBounds.bottom, showOnTop = configPosVertical === 'above' ||\r\n                (configPosVertical !== 'below' &&\r\n                    distanceFromBottom < calendarHeight &&\r\n                    inputBounds.top > calendarHeight);\r\n            var top = window.pageYOffset +\r\n                inputBounds.top +\r\n                (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);\r\n            toggleClass(self.calendarContainer, 'arrowTop', !showOnTop);\r\n            toggleClass(self.calendarContainer, 'arrowBottom', showOnTop);\r\n            if (self.config.inline)\r\n                return;\r\n            var left = window.pageXOffset +\r\n                inputBounds.left -\r\n                (configPosHorizontal != null && configPosHorizontal === 'center'\r\n                    ? (calendarWidth - inputBounds.width) / 2\r\n                    : 0);\r\n            var right = window.document.body.offsetWidth - inputBounds.right;\r\n            var rightMost = left + calendarWidth > window.document.body.offsetWidth;\r\n            toggleClass(self.calendarContainer, 'rightMost', rightMost);\r\n            if (self.config.static)\r\n                return;\r\n            self.calendarContainer.style.top = top + 'px';\r\n            if (!rightMost) {\r\n                self.calendarContainer.style.left = left + 'px';\r\n                self.calendarContainer.style.right = 'auto';\r\n            }\r\n            else {\r\n                self.calendarContainer.style.left = 'auto';\r\n                self.calendarContainer.style.right = right + 'px';\r\n            }\r\n        }\r\n        function redraw() {\r\n            if (self.config.noCalendar || self.isMobile)\r\n                return;\r\n            updateNavigationCurrentMonth();\r\n            buildDays();\r\n        }\r\n        function focusAndClose() {\r\n            self._input.focus();\r\n            if (window.navigator.userAgent.indexOf('MSIE') !== -1 ||\r\n                navigator.msMaxTouchPoints !== undefined) {\r\n                setTimeout(self.close, 0);\r\n            }\r\n            else {\r\n                self.close();\r\n            }\r\n        }\r\n        function selectDate(e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            var isSelectable = function(day) {\r\n                return day.classList &&\r\n                    day.classList.contains('flatpickr-day') &&\r\n                    !day.classList.contains('disabled') &&\r\n                    !day.classList.contains('notAllowed');\r\n            };\r\n            var t = findParent(e.target, isSelectable);\r\n            if (t === undefined)\r\n                return;\r\n            var target = t;\r\n            var selectedDate = (self.latestSelectedDateObj = new Date(target.dateObj.getTime()));\r\n            var shouldChangeMonth = (selectedDate.getMonth() < self.currentMonth ||\r\n                selectedDate.getMonth() >\r\n                self.currentMonth + self.config.showMonths - 1) &&\r\n                self.config.mode !== 'range';\r\n            self.selectedDateElem = target;\r\n            if (self.config.mode === 'single')\r\n                self.selectedDates = [selectedDate];\r\n            else if (self.config.mode === 'multiple') {\r\n                var selectedIndex = isDateSelected(selectedDate);\r\n                if (selectedIndex)\r\n                    self.selectedDates.splice(parseInt(selectedIndex), 1);\r\n                else\r\n                    self.selectedDates.push(selectedDate);\r\n            }\r\n            else if (self.config.mode === 'range') {\r\n                if (self.selectedDates.length === 2)\r\n                    self.clear(false);\r\n                self.selectedDates.push(selectedDate);\r\n                if (compareDates(selectedDate, self.selectedDates[0], true) !== 0)\r\n                    self.selectedDates.sort(function(a, b) { return a.getTime() - b.getTime(); });\r\n            }\r\n            setHoursFromInputs();\r\n            if (shouldChangeMonth) {\r\n                var isNewYear = self.currentYear !== selectedDate.getFullYear();\r\n                self.currentYear = selectedDate.getFullYear();\r\n                self.currentMonth = selectedDate.getMonth();\r\n                if (isNewYear)\r\n                    triggerEvent('onYearChange');\r\n                triggerEvent('onMonthChange');\r\n            }\r\n            updateNavigationCurrentMonth();\r\n            buildDays();\r\n            updateValue();\r\n            if (self.config.enableTime)\r\n                setTimeout(function() { return (self.showTimeInput = true); }, 50);\r\n            if (!shouldChangeMonth &&\r\n                self.config.mode !== 'range' &&\r\n                self.config.showMonths === 1)\r\n                focusOnDayElem(target);\r\n            else\r\n                self.selectedDateElem && self.selectedDateElem.focus();\r\n            if (self.hourElement !== undefined)\r\n                setTimeout(function() { return self.hourElement !== undefined && self.hourElement.select(); }, 451);\r\n            if (self.config.closeOnSelect) {\r\n                var single = self.config.mode === 'single' && !self.config.enableTime;\r\n                var range = self.config.mode === 'range' &&\r\n                    self.selectedDates.length === 2 &&\r\n                    !self.config.enableTime;\r\n                if (single || range) {\r\n                    focusAndClose();\r\n                }\r\n            }\r\n            triggerChange();\r\n        }\r\n        var CALLBACKS = {\r\n            locale: [setupLocale, updateWeekdays],\r\n            showMonths: [buildMonths, setCalendarWidth, buildWeekdays],\r\n        };\r\n        function set(option, value) {\r\n            if (option !== null && typeof option === 'object')\r\n                Object.assign(self.config, option);\r\n            else {\r\n                self.config[option] = value;\r\n                if (CALLBACKS[option] !== undefined)\r\n                    CALLBACKS[option].forEach(function(x) { return x(); });\r\n            }\r\n            self.redraw();\r\n            jumpToDate();\r\n        }\r\n        function setSelectedDate(inputDate, format) {\r\n            var dates = [];\r\n            if (inputDate instanceof Array)\r\n                dates = inputDate.map(function(d) { return self.parseDate(d, format); });\r\n            else if (inputDate instanceof Date || typeof inputDate === 'number')\r\n                dates = [self.parseDate(inputDate, format)];\r\n            else if (typeof inputDate === 'string') {\r\n                switch (self.config.mode) {\r\n                    case 'single':\r\n                    case 'time':\r\n                        dates = [self.parseDate(inputDate, format)];\r\n                        break;\r\n                    case 'multiple':\r\n                        dates = inputDate\r\n                            .split(self.config.conjunction)\r\n                            .map(function(date) { return self.parseDate(date, format); });\r\n                        break;\r\n                    case 'range':\r\n                        dates = inputDate\r\n                            .split(self.l10n.rangeSeparator)\r\n                            .map(function(date) { return self.parseDate(date, format); });\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            else\r\n                self.config.errorHandler(new Error('Invalid date supplied: ' + JSON.stringify(inputDate)));\r\n            self.selectedDates = dates.filter(function(d) { return d instanceof Date && isEnabled(d, false); });\r\n            if (self.config.mode === 'range')\r\n                self.selectedDates.sort(function(a, b) { return a.getTime() - b.getTime(); });\r\n        }\r\n        function setDate(date, triggerChange, format) {\r\n            if (triggerChange === void 0) { triggerChange = false; }\r\n            if (format === void 0) { format = self.config.dateFormat; }\r\n            if ((date !== 0 && !date) || (date instanceof Array && date.length === 0))\r\n                return self.clear(triggerChange);\r\n            setSelectedDate(date, format);\r\n            self.showTimeInput = self.selectedDates.length > 0;\r\n            self.latestSelectedDateObj = self.selectedDates[0];\r\n            self.redraw();\r\n            jumpToDate();\r\n            setHoursFromDate();\r\n            updateValue(triggerChange);\r\n            if (triggerChange)\r\n                triggerEvent('onChange');\r\n        }\r\n        function parseDateRules(arr) {\r\n            return arr\r\n                .slice()\r\n                .map(function(rule) {\r\n                    if (typeof rule === 'string' ||\r\n                        typeof rule === 'number' ||\r\n                        rule instanceof Date) {\r\n                        return self.parseDate(rule, undefined, true);\r\n                    }\r\n                    else if (rule &&\r\n                        typeof rule === 'object' &&\r\n                        rule.from &&\r\n                        rule.to)\r\n                        return {\r\n                            from: self.parseDate(rule.from, undefined),\r\n                            to: self.parseDate(rule.to, undefined),\r\n                        };\r\n                    return rule;\r\n                })\r\n                .filter(function(x) { return x; });\r\n        }\r\n        function setupDates() {\r\n            self.selectedDates = [];\r\n            self.now = self.parseDate(self.config.now) || new Date();\r\n            var preloadedDate = self.config.defaultDate ||\r\n                ((self.input.nodeName === 'INPUT' ||\r\n                    self.input.nodeName === 'TEXTAREA') &&\r\n                    self.input.placeholder &&\r\n                    self.input.value === self.input.placeholder\r\n                    ? null\r\n                    : self.input.value);\r\n            if (preloadedDate)\r\n                setSelectedDate(preloadedDate, self.config.dateFormat);\r\n            var initialDate = self.selectedDates.length > 0\r\n                ? self.selectedDates[0]\r\n                : self.config.minDate &&\r\n                    self.config.minDate.getTime() > self.now.getTime()\r\n                    ? self.config.minDate\r\n                    : self.config.maxDate &&\r\n                        self.config.maxDate.getTime() < self.now.getTime()\r\n                        ? self.config.maxDate\r\n                        : self.now;\r\n            self.currentYear = initialDate.getFullYear();\r\n            self.currentMonth = initialDate.getMonth();\r\n            if (self.selectedDates.length > 0)\r\n                self.latestSelectedDateObj = self.selectedDates[0];\r\n            if (self.config.minTime !== undefined)\r\n                self.config.minTime = self.parseDate(self.config.minTime, 'H:i');\r\n            if (self.config.maxTime !== undefined)\r\n                self.config.maxTime = self.parseDate(self.config.maxTime, 'H:i');\r\n            self.minDateHasTime =\r\n                !!self.config.minDate &&\r\n                (self.config.minDate.getHours() > 0 ||\r\n                    self.config.minDate.getMinutes() > 0 ||\r\n                    self.config.minDate.getSeconds() > 0);\r\n            self.maxDateHasTime =\r\n                !!self.config.maxDate &&\r\n                (self.config.maxDate.getHours() > 0 ||\r\n                    self.config.maxDate.getMinutes() > 0 ||\r\n                    self.config.maxDate.getSeconds() > 0);\r\n            Object.defineProperty(self, 'showTimeInput', {\r\n                get: function() { return self._showTimeInput; },\r\n                set: function(bool) {\r\n                    self._showTimeInput = bool;\r\n                    if (self.calendarContainer)\r\n                        toggleClass(self.calendarContainer, 'showTimeInput', bool);\r\n                    self.isOpen && positionCalendar();\r\n                },\r\n            });\r\n        }\r\n        function setupInputs() {\r\n            self.input = self.config.wrap\r\n                ? element.querySelector('[data-input]')\r\n                : element;\r\n            if (!self.input) {\r\n                self.config.errorHandler(new Error('Invalid input element specified'));\r\n                return;\r\n            }\r\n            self.input._type = self.input.type;\r\n            self.input.type = 'text';\r\n            self.input.classList.add('flatpickr-input');\r\n            self._input = self.input;\r\n            if (self.config.altInput) {\r\n                self.altInput = createElement(self.input.nodeName, self.input.className + ' ' + self.config.altInputClass);\r\n                self._input = self.altInput;\r\n                self.altInput.placeholder = self.input.placeholder;\r\n                self.altInput.disabled = self.input.disabled;\r\n                self.altInput.required = self.input.required;\r\n                self.altInput.tabIndex = self.input.tabIndex;\r\n                self.altInput.type = 'text';\r\n                self.input.setAttribute('type', 'hidden');\r\n                if (!self.config.static && self.input.parentNode)\r\n                    self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);\r\n            }\r\n            if (!self.config.allowInput)\r\n                self._input.setAttribute('readonly', 'readonly');\r\n            self._positionElement = self.config.positionElement || self._input;\r\n        }\r\n        function setupMobile() {\r\n            var inputType = self.config.enableTime\r\n                ? self.config.noCalendar\r\n                    ? 'time'\r\n                    : 'datetime-local'\r\n                : 'date';\r\n            self.mobileInput = createElement('input', self.input.className + ' flatpickr-mobile');\r\n            self.mobileInput.step = self.input.getAttribute('step') || 'any';\r\n            self.mobileInput.tabIndex = 1;\r\n            self.mobileInput.type = inputType;\r\n            self.mobileInput.disabled = self.input.disabled;\r\n            self.mobileInput.required = self.input.required;\r\n            self.mobileInput.placeholder = self.input.placeholder;\r\n            self.mobileFormatStr =\r\n                inputType === 'datetime-local'\r\n                    ? 'Y-m-d\\\\TH:i:S'\r\n                    : inputType === 'date'\r\n                        ? 'Y-m-d'\r\n                        : 'H:i:S';\r\n            if (self.selectedDates.length > 0) {\r\n                self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);\r\n            }\r\n            if (self.config.minDate)\r\n                self.mobileInput.min = self.formatDate(self.config.minDate, 'Y-m-d');\r\n            if (self.config.maxDate)\r\n                self.mobileInput.max = self.formatDate(self.config.maxDate, 'Y-m-d');\r\n            self.input.type = 'hidden';\r\n            if (self.altInput !== undefined)\r\n                self.altInput.type = 'hidden';\r\n            try {\r\n                if (self.input.parentNode)\r\n                    self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);\r\n            }\r\n            catch (_a) {\r\n                // do nothing\r\n            }\r\n            bind(self.mobileInput, 'change', function(e) {\r\n                self.setDate(e.target.value, false, self.mobileFormatStr);\r\n                triggerEvent('onChange');\r\n                triggerEvent('onClose');\r\n            });\r\n        }\r\n        function toggle(e) {\r\n            if (self.isOpen === true)\r\n                return self.close();\r\n            self.open(e);\r\n        }\r\n        function triggerEvent(event, data) {\r\n            if (self.config === undefined)\r\n                return;\r\n            var hooks = self.config[event];\r\n            if (hooks !== undefined && hooks.length > 0) {\r\n                for (var i = 0; hooks[i] && i < hooks.length; i++)\r\n                    hooks[i](self.selectedDates, self.input.value, self, data);\r\n            }\r\n            if (event === 'onChange') {\r\n                self.input.dispatchEvent(createEvent('change'));\r\n                self.input.dispatchEvent(createEvent('input'));\r\n            }\r\n        }\r\n        function createEvent(name) {\r\n            var e = document.createEvent('Event');\r\n            e.initEvent(name, true, true);\r\n            return e;\r\n        }\r\n        function isDateSelected(date) {\r\n            for (var i = 0; i < self.selectedDates.length; i++) {\r\n                if (compareDates(self.selectedDates[i], date) === 0)\r\n                    return '' + i;\r\n            }\r\n            return false;\r\n        }\r\n        function isDateInRange(date) {\r\n            if (self.config.mode !== 'range' || self.selectedDates.length < 2)\r\n                return false;\r\n            return (compareDates(date, self.selectedDates[0]) >= 0 &&\r\n                compareDates(date, self.selectedDates[1]) <= 0);\r\n        }\r\n        function updateNavigationCurrentMonth() {\r\n            if (self.config.noCalendar || self.isMobile || !self.monthNav)\r\n                return;\r\n            self.yearElements.forEach(function(yearElement, i) {\r\n                var d = new Date(self.currentYear, self.currentMonth, 1);\r\n                d.setMonth(self.currentMonth + i);\r\n                self.monthElements[i].textContent =\r\n                    monthToStr(d.getMonth(), self.config.shorthandCurrentMonth, self.l10n) +\r\n                    ' ';\r\n                yearElement.value = d.getFullYear().toString();\r\n            });\r\n            self._hidePrevMonthArrow =\r\n                self.config.minDate !== undefined &&\r\n                (self.currentYear === self.config.minDate.getFullYear()\r\n                    ? self.currentMonth <= self.config.minDate.getMonth()\r\n                    : self.currentYear < self.config.minDate.getFullYear());\r\n            self._hideNextMonthArrow =\r\n                self.config.maxDate !== undefined &&\r\n                (self.currentYear === self.config.maxDate.getFullYear()\r\n                    ? self.currentMonth + 1 > self.config.maxDate.getMonth()\r\n                    : self.currentYear > self.config.maxDate.getFullYear());\r\n        }\r\n        function updateValue(triggerChange) {\r\n            if (triggerChange === void 0) { triggerChange = true; }\r\n            if (self.selectedDates.length === 0)\r\n                return self.clear(triggerChange);\r\n            if (self.mobileInput !== undefined && self.mobileFormatStr) {\r\n                self.mobileInput.value =\r\n                    self.latestSelectedDateObj !== undefined\r\n                        ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr)\r\n                        : '';\r\n            }\r\n            var joinChar = self.config.mode !== 'range'\r\n                ? self.config.conjunction\r\n                : self.l10n.rangeSeparator;\r\n            self.input.value = self.selectedDates\r\n                .map(function(dObj) { return self.formatDate(dObj, self.config.dateFormat); })\r\n                .join(joinChar);\r\n            if (self.altInput !== undefined) {\r\n                self.altInput.value = self.selectedDates\r\n                    .map(function(dObj) { return self.formatDate(dObj, self.config.altFormat); })\r\n                    .join(joinChar);\r\n            }\r\n            if (triggerChange !== false)\r\n                triggerEvent('onValueUpdate');\r\n        }\r\n        function onMonthNavClick(e) {\r\n            e.preventDefault();\r\n            var isPrevMonth = self.prevMonthNav.contains(e.target);\r\n            var isNextMonth = self.nextMonthNav.contains(e.target);\r\n            if (isPrevMonth || isNextMonth) {\r\n                changeMonth(isPrevMonth ? -1 : 1);\r\n            }\r\n            else if (self.yearElements.indexOf(e.target) >= 0) {\r\n                e.target.select();\r\n            }\r\n            else if (e.target.classList.contains('arrowUp')) {\r\n                self.changeYear(self.currentYear + 1);\r\n            }\r\n            else if (e.target.classList.contains('arrowDown')) {\r\n                self.changeYear(self.currentYear - 1);\r\n            }\r\n        }\r\n        function timeWrapper(e) {\r\n            e.preventDefault();\r\n            var isKeyDown = e.type === 'keydown', input = e.target;\r\n            if (self.amPM !== undefined && e.target === self.amPM) {\r\n                self.amPM.textContent =\r\n                    self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\r\n            }\r\n            var min = parseFloat(input.getAttribute('data-min')), max = parseFloat(input.getAttribute('data-max')), step = parseFloat(input.getAttribute('data-step')), curValue = parseInt(input.value, 10), delta = e.delta ||\r\n                (isKeyDown ? (e.which === 38 ? 1 : -1) : 0);\r\n            var newValue = curValue + step * delta;\r\n            if (typeof input.value !== 'undefined' && input.value.length === 2) {\r\n                var isHourElem = input === self.hourElement, isMinuteElem = input === self.minuteElement;\r\n                if (newValue < min) {\r\n                    newValue =\r\n                        max +\r\n                        newValue +\r\n                        int(!isHourElem) +\r\n                        (int(isHourElem) && int(!self.amPM));\r\n                    if (isMinuteElem)\r\n                        incrementNumInput(undefined, -1, self.hourElement);\r\n                }\r\n                else if (newValue > max) {\r\n                    newValue =\r\n                        input === self.hourElement ? newValue - max - int(!self.amPM) : min;\r\n                    if (isMinuteElem)\r\n                        incrementNumInput(undefined, 1, self.hourElement);\r\n                }\r\n                if (self.amPM &&\r\n                    isHourElem &&\r\n                    (step === 1\r\n                        ? newValue + curValue === 23\r\n                        : Math.abs(newValue - curValue) > step)) {\r\n                    self.amPM.textContent =\r\n                        self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\r\n                }\r\n                input.value = pad(newValue);\r\n            }\r\n        }\r\n        init();\r\n        return self;\r\n    }\r\n    function _flatpickr(nodeList, config) {\r\n        var nodes = Array.prototype.slice.call(nodeList);\r\n        var instances = [];\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            var node = nodes[i];\r\n            try {\r\n                if (node.getAttribute('data-fp-omit') !== null)\r\n                    continue;\r\n                if (node._flatpickr !== undefined) {\r\n                    node._flatpickr.destroy();\r\n                    node._flatpickr = undefined;\r\n                }\r\n                node._flatpickr = FlatpickrInstance(node, config || {});\r\n                instances.push(node._flatpickr);\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n        return instances.length === 1 ? instances[0] : instances;\r\n    }\r\n    if (typeof HTMLElement !== 'undefined') {\r\n        HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function(config) {\r\n            return _flatpickr(this, config);\r\n        };\r\n        HTMLElement.prototype.flatpickr = function(config) {\r\n            return _flatpickr([this], config);\r\n        };\r\n    }\r\n    var flatpickr = function(selector, config) {\r\n        if (selector instanceof NodeList)\r\n            return _flatpickr(selector, config);\r\n        else if (typeof selector === 'string')\r\n            return _flatpickr(window.document.querySelectorAll(selector), config);\r\n        return _flatpickr([selector], config);\r\n    };\r\n    flatpickr.defaultConfig = defaults;\r\n    flatpickr.l10ns = {\r\n        en: __assign({}, english),\r\n        default: __assign({}, english),\r\n    };\r\n    flatpickr.localize = function(l10n) {\r\n        flatpickr.l10ns.default = __assign({}, flatpickr.l10ns.default, l10n);\r\n    };\r\n    flatpickr.setDefaults = function(config) {\r\n        flatpickr.defaultConfig = __assign({}, flatpickr.defaultConfig, config);\r\n    };\r\n    flatpickr.parseDate = createDateParser({});\r\n    flatpickr.formatDate = createDateFormatter({});\r\n    flatpickr.compareDates = compareDates;\r\n    Date.prototype.fp_incr = function(days) {\r\n        return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === 'string' ? parseInt(days, 10) : days));\r\n    };\r\n    if (typeof window !== 'undefined') {\r\n        window.flatpickr = flatpickr;\r\n    }\r\n\r\n    return flatpickr;\r\n}());\r\n\r\n(function(global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\r\n        typeof define === 'function' && define.amd ? define(['exports'], factory) :\r\n            (factory((global.es = {})));\r\n}(this, (function(exports) {\r\n    'use strict';\r\n\r\n    var fp = typeof window !== 'undefined' && window.flatpickr !== undefined\r\n        ? window.flatpickr\r\n        : {\r\n            l10ns: {},\r\n        };\r\n    var Spanish = {\r\n        weekdays: {\r\n            shorthand: ['Dom', 'Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb'],\r\n            longhand: [\r\n                'Domingo',\r\n                'Lunes',\r\n                'Martes',\r\n                'Miércoles',\r\n                'Jueves',\r\n                'Viernes',\r\n                'Sábado',\r\n            ],\r\n        },\r\n        months: {\r\n            shorthand: [\r\n                'Ene',\r\n                'Feb',\r\n                'Mar',\r\n                'Abr',\r\n                'May',\r\n                'Jun',\r\n                'Jul',\r\n                'Ago',\r\n                'Sep',\r\n                'Oct',\r\n                'Nov',\r\n                'Dic',\r\n            ],\r\n            longhand: [\r\n                'Enero',\r\n                'Febrero',\r\n                'Marzo',\r\n                'Abril',\r\n                'Mayo',\r\n                'Junio',\r\n                'Julio',\r\n                'Agosto',\r\n                'Septiembre',\r\n                'Octubre',\r\n                'Noviembre',\r\n                'Diciembre',\r\n            ],\r\n        },\r\n        ordinal: function() {\r\n            return 'º';\r\n        },\r\n        firstDayOfWeek: 1,\r\n        rangeSeparator: ' a ',\r\n    };\r\n    fp.l10ns.es = Spanish;\r\n    var es = fp.l10ns;\r\n\r\n    exports.Spanish = Spanish;\r\n    exports.default = es;\r\n\r\n    Object.defineProperty(exports, '__esModule', { value: true });\r\n})));\r\n","/*\r\n    JavaScript autoComplete v1.0.4\r\n    Copyright (c) 2014 Simon Steinberger / Pixabay\r\n    GitHub: https://github.com/Pixabay/JavaScript-autoComplete\r\n    License: http://www.opensource.org/licenses/mit-license.php\r\n*/\r\n\r\n(function(root, factory) {\r\n    root.Autocomplete = factory();\r\n})(this, function() {\r\n    'use strict';\r\n\r\n    function Autocomplete(options) {\r\n        if (!document.querySelector) return;\r\n\r\n        // helpers\r\n        function hasClass(el, className) {\r\n            return el.classList.contains(className);\r\n        }\r\n\r\n        function addEvent(el, type, handler) {\r\n            el.addEventListener(type, handler);\r\n        }\r\n\r\n        function removeEvent(el, type, handler) {\r\n            el.removeEventListener(type, handler);\r\n        }\r\n\r\n        function live(elClass, event, cb, context) {\r\n            addEvent(context || document, event, function(e) {\r\n                var found, el = e.target || e.srcElement;\r\n                while (el && !(found = hasClass(el, elClass))) {\r\n                    el = el.parentElement;\r\n                }\r\n                if (found) {\r\n                    cb.call(el, e);\r\n                }\r\n            });\r\n        }\r\n\r\n        var o = {\r\n            selector: 0,\r\n            source: 0,\r\n            minChars: 2,\r\n            delay: 250,\r\n            offsetLeft: 0,\r\n            offsetTop: 1,\r\n            cache: 1,\r\n            sourceData: null,\r\n            menuClass: '',\r\n            renderItem: function(item, search) {\r\n                // escape special characters\r\n                search = search.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n                var re = new RegExp('(' + search.split(' ').join('|') + ')', 'gi');\r\n                return '<div class=\"autocomplete-suggestion\" data-val=\"' + item + '\">' + item.replace(re, '<b>$1</b>') + '</div>';\r\n            },\r\n            onSelect: function(e, term, item) { }\r\n        };\r\n        for (var k in options) { if (options.hasOwnProperty(k)) o[k] = options[k]; }\r\n\r\n        // init\r\n        var elems = typeof o.selector == 'object' ? [o.selector] : document.querySelectorAll(o.selector);\r\n        for (var i = 0; i < elems.length; i++) {\r\n            var that = elems[i];\r\n\r\n            // create suggestions container \"sc\"\r\n            that.sc = document.createElement('div');\r\n            that.sc.className = 'autocomplete-suggestions ' + o.menuClass;\r\n\r\n            that.autocompleteAttr = that.getAttribute('autocomplete');\r\n            that.setAttribute('autocomplete', 'off');\r\n            that.cache = {};\r\n            that.last_val = '';\r\n\r\n            that.updateSC = function(resize, next) {\r\n                var rect = that.getBoundingClientRect();\r\n                that.sc.style.left = Math.round(rect.left + (window.pageXOffset || document.documentElement.scrollLeft) + o.offsetLeft) + 'px';\r\n                that.sc.style.top = Math.round(rect.bottom + (window.pageYOffset || document.documentElement.scrollTop) + o.offsetTop) + 'px';\r\n                that.sc.style.width = Math.round(rect.right - rect.left) + 'px'; // outerWidth\r\n                if (!resize) {\r\n                    that.sc.style.display = 'block';\r\n                    if (!that.sc.maxHeight) { that.sc.maxHeight = parseInt((window.getComputedStyle ? getComputedStyle(that.sc, null) : that.sc.currentStyle).maxHeight); }\r\n                    if (!that.sc.suggestionHeight) that.sc.suggestionHeight = that.sc.querySelector('.autocomplete-suggestion').offsetHeight;\r\n                    if (that.sc.suggestionHeight)\r\n                        if (!next) that.sc.scrollTop = 0;\r\n                        else {\r\n                            var scrTop = that.sc.scrollTop, selTop = next.getBoundingClientRect().top - that.sc.getBoundingClientRect().top;\r\n                            if (selTop + that.sc.suggestionHeight - that.sc.maxHeight > 0)\r\n                                that.sc.scrollTop = selTop + that.sc.suggestionHeight + scrTop - that.sc.maxHeight;\r\n                            else if (selTop < 0)\r\n                                that.sc.scrollTop = selTop + scrTop;\r\n                        }\r\n                }\r\n            };\r\n            addEvent(window, 'resize', that.updateSC);\r\n            document.body.appendChild(that.sc);\r\n\r\n            live('autocomplete-suggestion', 'mouseleave', function() {\r\n                var sel = that.sc.querySelector('.autocomplete-suggestion.selected');\r\n                if (sel) setTimeout(function() { sel.className = sel.className.replace('selected', ''); }, 20);\r\n            }, that.sc);\r\n\r\n            live('autocomplete-suggestion', 'mouseover', function() {\r\n                var sel = that.sc.querySelector('.autocomplete-suggestion.selected');\r\n                if (sel) sel.className = sel.className.replace('selected', '');\r\n                this.className += ' selected';\r\n            }, that.sc);\r\n\r\n            live('autocomplete-suggestion', 'mousedown', function(e) {\r\n                if (hasClass(this, 'autocomplete-suggestion')) { // else outside click\r\n                    var v = this.getAttribute('data-val');\r\n                    that.value = v;\r\n                    o.onSelect(e, v, this);\r\n                    that.sc.style.display = 'none';\r\n                }\r\n            }, that.sc);\r\n\r\n            that.blurHandler = function() {\r\n                var over_sb;\r\n                try {\r\n                    over_sb = document.querySelector('.autocomplete-suggestions:hover');\r\n                } catch (e) {\r\n                    over_sb = 0;\r\n                }\r\n                if (!over_sb) {\r\n                    if (o.sourceData && o.sourceData.indexOf(that.value) === -1) {\r\n                        that.value = '';\r\n                    }\r\n                    that.last_val = that.value;\r\n                    that.sc.style.display = 'none';\r\n                    setTimeout(function() { that.sc.style.display = 'none'; }, 350); // hide suggestions on fast input\r\n                } else if (that !== document.activeElement) {\r\n                    setTimeout(function() { that.focus(); }, 20);\r\n                }\r\n            };\r\n            addEvent(that, 'blur', that.blurHandler);\r\n\r\n            var suggest = function(data) {\r\n                var val = that.value;\r\n                that.cache[val] = data;\r\n                if (data.length && val.length >= o.minChars) {\r\n                    var s = '';\r\n                    for (var i = 0; i < data.length; i++) s += o.renderItem(data[i], val);\r\n                    that.sc.innerHTML = s;\r\n                    that.updateSC(0);\r\n                } else {\r\n                    that.sc.style.display = 'none';\r\n                }\r\n            };\r\n\r\n            var internalSource = function(sourceData, term, suggest) {\r\n                term = term.toLowerCase();\r\n                var matches = [];\r\n                for (i = 0; i < sourceData.length; i++) {\r\n                    if (~sourceData[i].toLowerCase().indexOf(term)) matches.push(sourceData[i]);\r\n                }\r\n                suggest(matches);\r\n            };\r\n\r\n            that.keydownHandler = function(e) {\r\n                var sel = that.sc.querySelector('.autocomplete-suggestion.selected');\r\n                var key = window.event ? e.keyCode : e.which;\r\n                // down (40), up (38)\r\n                if ((key === 40 || key === 38) && that.sc.innerHTML) {\r\n                    var next;\r\n                    if (!sel) {\r\n                        next = key === 40 ? that.sc.querySelector('.autocomplete-suggestion') : that.sc.childNodes[that.sc.childNodes.length - 1]; // first : last\r\n                        next.className += ' selected';\r\n                        that.value = next.getAttribute('data-val');\r\n                    } else {\r\n                        next = key === 40 ? sel.nextSibling : sel.previousSibling;\r\n                        if (next) {\r\n                            sel.className = sel.className.replace('selected', '');\r\n                            next.className += ' selected';\r\n                            that.value = next.getAttribute('data-val');\r\n                        } else {\r\n                            sel.className = sel.className.replace('selected', '');\r\n                            that.value = that.last_val;\r\n                            next = 0;\r\n                        }\r\n                    }\r\n                    that.updateSC(0, next);\r\n                    return false;\r\n                } else if (key === 27) {\r\n                    // esc\r\n                    that.value = '';\r\n                    that.sc.style.display = 'none';\r\n                } else if (key === 13 || key === 9) {\r\n                    // enter or tab\r\n                    if (sel && that.sc.style.display != 'none') {\r\n                        if (key === 13) {\r\n                            e.preventDefault();\r\n                        }\r\n                        that.value = sel.getAttribute('data-val');\r\n                        o.onSelect(e, sel.getAttribute('data-val'), sel);\r\n                        setTimeout(function() {\r\n                            that.sc.style.display = 'none';\r\n                        }, 20);\r\n                    } else {\r\n                        if (o.sourceData && o.sourceData.indexOf(that.value) === -1) {\r\n                            that.value = '';\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            addEvent(that, 'keydown', that.keydownHandler);\r\n\r\n            that.keyupHandler = function(e) {\r\n                var key = window.event ? e.keyCode : e.which;\r\n                if (!key || (key < 35 || key > 40) && key != 13 && key != 27) {\r\n                    var val = that.value;\r\n                    if (val.length >= o.minChars) {\r\n                        if (val != that.last_val) {\r\n                            that.last_val = val;\r\n                            clearTimeout(that.timer);\r\n                            if (o.cache) {\r\n                                if (val in that.cache) { suggest(that.cache[val]); return; }\r\n                                // no requests if previous suggestions were empty\r\n                                for (var i = 1; i < val.length - o.minChars; i++) {\r\n                                    var part = val.slice(0, val.length - i);\r\n                                    if (part in that.cache && !that.cache[part].length) { suggest([]); return; }\r\n                                }\r\n                            }\r\n                            that.timer = setTimeout(o.sourceData ? internalSource.bind(null, o.sourceData, val, suggest) : o.source.bind(this, val, suggest), o.delay);\r\n                        }\r\n                    } else {\r\n                        that.last_val = val;\r\n                        that.sc.style.display = 'none';\r\n                    }\r\n                }\r\n            };\r\n            addEvent(that, 'keyup', that.keyupHandler);\r\n\r\n            that.focusHandler = function(e) {\r\n                that.last_val = '\\n';\r\n                that.keyupHandler(e);\r\n            };\r\n            if (!o.minChars) {\r\n                addEvent(that, 'focus', that.focusHandler);\r\n            }\r\n        }\r\n\r\n        // public destroy method\r\n        this.destroy = function() {\r\n            for (var i = 0; i < elems.length; i++) {\r\n                var that = elems[i];\r\n                removeEvent(window, 'resize', that.updateSC);\r\n                removeEvent(that, 'blur', that.blurHandler);\r\n                removeEvent(that, 'focus', that.focusHandler);\r\n                removeEvent(that, 'keydown', that.keydownHandler);\r\n                removeEvent(that, 'keyup', that.keyupHandler);\r\n                if (that.autocompleteAttr) {\r\n                    that.setAttribute('autocomplete', that.autocompleteAttr);\r\n                } else {\r\n                    that.removeAttribute('autocomplete');\r\n                }\r\n                document.body.removeChild(that.sc);\r\n                that = null;\r\n            }\r\n        };\r\n    }\r\n    return Autocomplete;\r\n});\r\n","/*!\r\n * Chart.js\r\n * http://chartjs.org/\r\n * Version: 2.7.1\r\n *\r\n * Copyright 2018 Chart.js Contributors\r\n * Released under the MIT license\r\n * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md\r\n */\r\n/* eslint-disable */\r\n(function(f) { if (typeof exports === \"object\" && typeof module !== \"undefined\") { module.exports = f() } else if (typeof define === \"function\" && define.amd) { define([], f) } else { var g; if (typeof window !== \"undefined\") { g = window } else if (typeof global !== \"undefined\") { g = global } else if (typeof self !== \"undefined\") { g = self } else { g = this } g.Chart = f() } })(function() {\r\n    var define, module, exports; return (function e(t, n, r) { function s(o, u) { if (!n[o]) { if (!t[o]) { var a = typeof require == \"function\" && require; if (!u && a) return a(o, !0); if (i) return i(o, !0); var f = new Error(\"Cannot find module '\" + o + \"'\"); throw f.code = \"MODULE_NOT_FOUND\", f } var l = n[o] = { exports: {} }; t[o][0].call(l.exports, function(e) { var n = t[o][1][e]; return s(n ? n : e) }, l, l.exports, e, t, n, r) } return n[o].exports } var i = typeof require == \"function\" && require; for (var o = 0; o < r.length; o++)s(r[o]); return s })({\r\n        1: [function(require, module, exports) {\r\n            /* MIT license */\r\n            var colorNames = require(5);\r\n\r\n            module.exports = {\r\n                getRgba: getRgba,\r\n                getHsla: getHsla,\r\n                getRgb: getRgb,\r\n                getHsl: getHsl,\r\n                getHwb: getHwb,\r\n                getAlpha: getAlpha,\r\n\r\n                hexString: hexString,\r\n                rgbString: rgbString,\r\n                rgbaString: rgbaString,\r\n                percentString: percentString,\r\n                percentaString: percentaString,\r\n                hslString: hslString,\r\n                hslaString: hslaString,\r\n                hwbString: hwbString,\r\n                keyword: keyword\r\n            }\r\n\r\n            function getRgba(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var abbr = /^#([a-fA-F0-9]{3})$/i,\r\n                    hex = /^#([a-fA-F0-9]{6})$/i,\r\n                    rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n                    per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n                    keyword = /(\\w+)/;\r\n\r\n                var rgb = [0, 0, 0],\r\n                    a = 1,\r\n                    match = string.match(abbr);\r\n                if (match) {\r\n                    match = match[1];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match[i] + match[i], 16);\r\n                    }\r\n                }\r\n                else if (match = string.match(hex)) {\r\n                    match = match[1];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n                    }\r\n                }\r\n                else if (match = string.match(rgba)) {\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match[i + 1]);\r\n                    }\r\n                    a = parseFloat(match[4]);\r\n                }\r\n                else if (match = string.match(per)) {\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n                    }\r\n                    a = parseFloat(match[4]);\r\n                }\r\n                else if (match = string.match(keyword)) {\r\n                    if (match[1] == \"transparent\") {\r\n                        return [0, 0, 0, 0];\r\n                    }\r\n                    rgb = colorNames[match[1]];\r\n                    if (!rgb) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                for (var i = 0; i < rgb.length; i++) {\r\n                    rgb[i] = scale(rgb[i], 0, 255);\r\n                }\r\n                if (!a && a != 0) {\r\n                    a = 1;\r\n                }\r\n                else {\r\n                    a = scale(a, 0, 1);\r\n                }\r\n                rgb[3] = a;\r\n                return rgb;\r\n            }\r\n\r\n            function getHsla(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n                var match = string.match(hsl);\r\n                if (match) {\r\n                    var alpha = parseFloat(match[4]);\r\n                    var h = scale(parseInt(match[1]), 0, 360),\r\n                        s = scale(parseFloat(match[2]), 0, 100),\r\n                        l = scale(parseFloat(match[3]), 0, 100),\r\n                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n                    return [h, s, l, a];\r\n                }\r\n            }\r\n\r\n            function getHwb(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n                var match = string.match(hwb);\r\n                if (match) {\r\n                    var alpha = parseFloat(match[4]);\r\n                    var h = scale(parseInt(match[1]), 0, 360),\r\n                        w = scale(parseFloat(match[2]), 0, 100),\r\n                        b = scale(parseFloat(match[3]), 0, 100),\r\n                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n                    return [h, w, b, a];\r\n                }\r\n            }\r\n\r\n            function getRgb(string) {\r\n                var rgba = getRgba(string);\r\n                return rgba && rgba.slice(0, 3);\r\n            }\r\n\r\n            function getHsl(string) {\r\n                var hsla = getHsla(string);\r\n                return hsla && hsla.slice(0, 3);\r\n            }\r\n\r\n            function getAlpha(string) {\r\n                var vals = getRgba(string);\r\n                if (vals) {\r\n                    return vals[3];\r\n                }\r\n                else if (vals = getHsla(string)) {\r\n                    return vals[3];\r\n                }\r\n                else if (vals = getHwb(string)) {\r\n                    return vals[3];\r\n                }\r\n            }\r\n\r\n            // generators\r\n            function hexString(rgb) {\r\n                return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n                    + hexDouble(rgb[2]);\r\n            }\r\n\r\n            function rgbString(rgba, alpha) {\r\n                if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n                    return rgbaString(rgba, alpha);\r\n                }\r\n                return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n            }\r\n\r\n            function rgbaString(rgba, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n                }\r\n                return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n                    + \", \" + alpha + \")\";\r\n            }\r\n\r\n            function percentString(rgba, alpha) {\r\n                if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n                    return percentaString(rgba, alpha);\r\n                }\r\n                var r = Math.round(rgba[0] / 255 * 100),\r\n                    g = Math.round(rgba[1] / 255 * 100),\r\n                    b = Math.round(rgba[2] / 255 * 100);\r\n\r\n                return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n            }\r\n\r\n            function percentaString(rgba, alpha) {\r\n                var r = Math.round(rgba[0] / 255 * 100),\r\n                    g = Math.round(rgba[1] / 255 * 100),\r\n                    b = Math.round(rgba[2] / 255 * 100);\r\n                return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n            }\r\n\r\n            function hslString(hsla, alpha) {\r\n                if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n                    return hslaString(hsla, alpha);\r\n                }\r\n                return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n            }\r\n\r\n            function hslaString(hsla, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n                }\r\n                return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n                    + alpha + \")\";\r\n            }\r\n\r\n            // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n            // (hwb have alpha optional & 1 is default value)\r\n            function hwbString(hwb, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n                }\r\n                return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n                    + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n            }\r\n\r\n            function keyword(rgb) {\r\n                return reverseNames[rgb.slice(0, 3)];\r\n            }\r\n\r\n            // helpers\r\n            function scale(num, min, max) {\r\n                return Math.min(Math.max(min, num), max);\r\n            }\r\n\r\n            function hexDouble(num) {\r\n                var str = num.toString(16).toUpperCase();\r\n                return (str.length < 2) ? \"0\" + str : str;\r\n            }\r\n\r\n            //create a list of reverse color names\r\n            var reverseNames = {};\r\n            for (var name in colorNames) {\r\n                reverseNames[colorNames[name]] = name;\r\n            }\r\n        }, { \"5\": 5 }], 2: [function(require, module, exports) {\r\n            /* MIT license */\r\n            var convert = require(4);\r\n            var string = require(1);\r\n\r\n            var Color = function(obj) {\r\n                if (obj instanceof Color) {\r\n                    return obj;\r\n                }\r\n                if (!(this instanceof Color)) {\r\n                    return new Color(obj);\r\n                }\r\n\r\n                this.valid = false;\r\n                this.values = {\r\n                    rgb: [0, 0, 0],\r\n                    hsl: [0, 0, 0],\r\n                    hsv: [0, 0, 0],\r\n                    hwb: [0, 0, 0],\r\n                    cmyk: [0, 0, 0, 0],\r\n                    alpha: 1\r\n                };\r\n\r\n                // parse Color() argument\r\n                var vals;\r\n                if (typeof obj === 'string') {\r\n                    vals = string.getRgba(obj);\r\n                    if (vals) {\r\n                        this.setValues('rgb', vals);\r\n                    } else if (vals = string.getHsla(obj)) {\r\n                        this.setValues('hsl', vals);\r\n                    } else if (vals = string.getHwb(obj)) {\r\n                        this.setValues('hwb', vals);\r\n                    }\r\n                } else if (typeof obj === 'object') {\r\n                    vals = obj;\r\n                    if (vals.r !== undefined || vals.red !== undefined) {\r\n                        this.setValues('rgb', vals);\r\n                    } else if (vals.l !== undefined || vals.lightness !== undefined) {\r\n                        this.setValues('hsl', vals);\r\n                    } else if (vals.v !== undefined || vals.value !== undefined) {\r\n                        this.setValues('hsv', vals);\r\n                    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\r\n                        this.setValues('hwb', vals);\r\n                    } else if (vals.c !== undefined || vals.cyan !== undefined) {\r\n                        this.setValues('cmyk', vals);\r\n                    }\r\n                }\r\n            };\r\n\r\n            Color.prototype = {\r\n                isValid: function() {\r\n                    return this.valid;\r\n                },\r\n                rgb: function() {\r\n                    return this.setSpace('rgb', arguments);\r\n                },\r\n                hsl: function() {\r\n                    return this.setSpace('hsl', arguments);\r\n                },\r\n                hsv: function() {\r\n                    return this.setSpace('hsv', arguments);\r\n                },\r\n                hwb: function() {\r\n                    return this.setSpace('hwb', arguments);\r\n                },\r\n                cmyk: function() {\r\n                    return this.setSpace('cmyk', arguments);\r\n                },\r\n\r\n                rgbArray: function() {\r\n                    return this.values.rgb;\r\n                },\r\n                hslArray: function() {\r\n                    return this.values.hsl;\r\n                },\r\n                hsvArray: function() {\r\n                    return this.values.hsv;\r\n                },\r\n                hwbArray: function() {\r\n                    var values = this.values;\r\n                    if (values.alpha !== 1) {\r\n                        return values.hwb.concat([values.alpha]);\r\n                    }\r\n                    return values.hwb;\r\n                },\r\n                cmykArray: function() {\r\n                    return this.values.cmyk;\r\n                },\r\n                rgbaArray: function() {\r\n                    var values = this.values;\r\n                    return values.rgb.concat([values.alpha]);\r\n                },\r\n                hslaArray: function() {\r\n                    var values = this.values;\r\n                    return values.hsl.concat([values.alpha]);\r\n                },\r\n                alpha: function(val) {\r\n                    if (val === undefined) {\r\n                        return this.values.alpha;\r\n                    }\r\n                    this.setValues('alpha', val);\r\n                    return this;\r\n                },\r\n\r\n                red: function(val) {\r\n                    return this.setChannel('rgb', 0, val);\r\n                },\r\n                green: function(val) {\r\n                    return this.setChannel('rgb', 1, val);\r\n                },\r\n                blue: function(val) {\r\n                    return this.setChannel('rgb', 2, val);\r\n                },\r\n                hue: function(val) {\r\n                    if (val) {\r\n                        val %= 360;\r\n                        val = val < 0 ? 360 + val : val;\r\n                    }\r\n                    return this.setChannel('hsl', 0, val);\r\n                },\r\n                saturation: function(val) {\r\n                    return this.setChannel('hsl', 1, val);\r\n                },\r\n                lightness: function(val) {\r\n                    return this.setChannel('hsl', 2, val);\r\n                },\r\n                saturationv: function(val) {\r\n                    return this.setChannel('hsv', 1, val);\r\n                },\r\n                whiteness: function(val) {\r\n                    return this.setChannel('hwb', 1, val);\r\n                },\r\n                blackness: function(val) {\r\n                    return this.setChannel('hwb', 2, val);\r\n                },\r\n                value: function(val) {\r\n                    return this.setChannel('hsv', 2, val);\r\n                },\r\n                cyan: function(val) {\r\n                    return this.setChannel('cmyk', 0, val);\r\n                },\r\n                magenta: function(val) {\r\n                    return this.setChannel('cmyk', 1, val);\r\n                },\r\n                yellow: function(val) {\r\n                    return this.setChannel('cmyk', 2, val);\r\n                },\r\n                black: function(val) {\r\n                    return this.setChannel('cmyk', 3, val);\r\n                },\r\n\r\n                hexString: function() {\r\n                    return string.hexString(this.values.rgb);\r\n                },\r\n                rgbString: function() {\r\n                    return string.rgbString(this.values.rgb, this.values.alpha);\r\n                },\r\n                rgbaString: function() {\r\n                    return string.rgbaString(this.values.rgb, this.values.alpha);\r\n                },\r\n                percentString: function() {\r\n                    return string.percentString(this.values.rgb, this.values.alpha);\r\n                },\r\n                hslString: function() {\r\n                    return string.hslString(this.values.hsl, this.values.alpha);\r\n                },\r\n                hslaString: function() {\r\n                    return string.hslaString(this.values.hsl, this.values.alpha);\r\n                },\r\n                hwbString: function() {\r\n                    return string.hwbString(this.values.hwb, this.values.alpha);\r\n                },\r\n                keyword: function() {\r\n                    return string.keyword(this.values.rgb, this.values.alpha);\r\n                },\r\n\r\n                rgbNumber: function() {\r\n                    var rgb = this.values.rgb;\r\n                    return (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\r\n                },\r\n\r\n                luminosity: function() {\r\n                    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n                    var rgb = this.values.rgb;\r\n                    var lum = [];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        var chan = rgb[i] / 255;\r\n                        lum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\r\n                    }\r\n                    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n                },\r\n\r\n                contrast: function(color2) {\r\n                    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n                    var lum1 = this.luminosity();\r\n                    var lum2 = color2.luminosity();\r\n                    if (lum1 > lum2) {\r\n                        return (lum1 + 0.05) / (lum2 + 0.05);\r\n                    }\r\n                    return (lum2 + 0.05) / (lum1 + 0.05);\r\n                },\r\n\r\n                level: function(color2) {\r\n                    var contrastRatio = this.contrast(color2);\r\n                    if (contrastRatio >= 7.1) {\r\n                        return 'AAA';\r\n                    }\r\n\r\n                    return (contrastRatio >= 4.5) ? 'AA' : '';\r\n                },\r\n\r\n                dark: function() {\r\n                    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\r\n                    var rgb = this.values.rgb;\r\n                    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\r\n                    return yiq < 128;\r\n                },\r\n\r\n                light: function() {\r\n                    return !this.dark();\r\n                },\r\n\r\n                negate: function() {\r\n                    var rgb = [];\r\n                    for (var i = 0; i < 3; i++) {\r\n                        rgb[i] = 255 - this.values.rgb[i];\r\n                    }\r\n                    this.setValues('rgb', rgb);\r\n                    return this;\r\n                },\r\n\r\n                lighten: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[2] += hsl[2] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                darken: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[2] -= hsl[2] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                saturate: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[1] += hsl[1] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                desaturate: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[1] -= hsl[1] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                whiten: function(ratio) {\r\n                    var hwb = this.values.hwb;\r\n                    hwb[1] += hwb[1] * ratio;\r\n                    this.setValues('hwb', hwb);\r\n                    return this;\r\n                },\r\n\r\n                blacken: function(ratio) {\r\n                    var hwb = this.values.hwb;\r\n                    hwb[2] += hwb[2] * ratio;\r\n                    this.setValues('hwb', hwb);\r\n                    return this;\r\n                },\r\n\r\n                greyscale: function() {\r\n                    var rgb = this.values.rgb;\r\n                    // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\r\n                    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\r\n                    this.setValues('rgb', [val, val, val]);\r\n                    return this;\r\n                },\r\n\r\n                clearer: function(ratio) {\r\n                    var alpha = this.values.alpha;\r\n                    this.setValues('alpha', alpha - (alpha * ratio));\r\n                    return this;\r\n                },\r\n\r\n                opaquer: function(ratio) {\r\n                    var alpha = this.values.alpha;\r\n                    this.setValues('alpha', alpha + (alpha * ratio));\r\n                    return this;\r\n                },\r\n\r\n                rotate: function(degrees) {\r\n                    var hsl = this.values.hsl;\r\n                    var hue = (hsl[0] + degrees) % 360;\r\n                    hsl[0] = hue < 0 ? 360 + hue : hue;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                /**\r\n                 * Ported from sass implementation in C\r\n                 * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\r\n                 */\r\n                mix: function(mixinColor, weight) {\r\n                    var color1 = this;\r\n                    var color2 = mixinColor;\r\n                    var p = weight === undefined ? 0.5 : weight;\r\n\r\n                    var w = 2 * p - 1;\r\n                    var a = color1.alpha() - color2.alpha();\r\n\r\n                    var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n                    var w2 = 1 - w1;\r\n\r\n                    return this\r\n                        .rgb(\r\n                        w1 * color1.red() + w2 * color2.red(),\r\n                        w1 * color1.green() + w2 * color2.green(),\r\n                        w1 * color1.blue() + w2 * color2.blue()\r\n                        )\r\n                        .alpha(color1.alpha() * p + color2.alpha() * (1 - p));\r\n                },\r\n\r\n                toJSON: function() {\r\n                    return this.rgb();\r\n                },\r\n\r\n                clone: function() {\r\n                    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\r\n                    // making the final build way to big to embed in Chart.js. So let's do it manually,\r\n                    // assuming that values to clone are 1 dimension arrays containing only numbers,\r\n                    // except 'alpha' which is a number.\r\n                    var result = new Color();\r\n                    var source = this.values;\r\n                    var target = result.values;\r\n                    var value, type;\r\n\r\n                    for (var prop in source) {\r\n                        if (source.hasOwnProperty(prop)) {\r\n                            value = source[prop];\r\n                            type = ({}).toString.call(value);\r\n                            if (type === '[object Array]') {\r\n                                target[prop] = value.slice(0);\r\n                            } else if (type === '[object Number]') {\r\n                                target[prop] = value;\r\n                            } else {\r\n                                console.error('unexpected color value:', value);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return result;\r\n                }\r\n            };\r\n\r\n            Color.prototype.spaces = {\r\n                rgb: ['red', 'green', 'blue'],\r\n                hsl: ['hue', 'saturation', 'lightness'],\r\n                hsv: ['hue', 'saturation', 'value'],\r\n                hwb: ['hue', 'whiteness', 'blackness'],\r\n                cmyk: ['cyan', 'magenta', 'yellow', 'black']\r\n            };\r\n\r\n            Color.prototype.maxes = {\r\n                rgb: [255, 255, 255],\r\n                hsl: [360, 100, 100],\r\n                hsv: [360, 100, 100],\r\n                hwb: [360, 100, 100],\r\n                cmyk: [100, 100, 100, 100]\r\n            };\r\n\r\n            Color.prototype.getValues = function(space) {\r\n                var values = this.values;\r\n                var vals = {};\r\n\r\n                for (var i = 0; i < space.length; i++) {\r\n                    vals[space.charAt(i)] = values[space][i];\r\n                }\r\n\r\n                if (values.alpha !== 1) {\r\n                    vals.a = values.alpha;\r\n                }\r\n\r\n                // {r: 255, g: 255, b: 255, a: 0.4}\r\n                return vals;\r\n            };\r\n\r\n            Color.prototype.setValues = function(space, vals) {\r\n                var values = this.values;\r\n                var spaces = this.spaces;\r\n                var maxes = this.maxes;\r\n                var alpha = 1;\r\n                var i;\r\n\r\n                this.valid = true;\r\n\r\n                if (space === 'alpha') {\r\n                    alpha = vals;\r\n                } else if (vals.length) {\r\n                    // [10, 10, 10]\r\n                    values[space] = vals.slice(0, space.length);\r\n                    alpha = vals[space.length];\r\n                } else if (vals[space.charAt(0)] !== undefined) {\r\n                    // {r: 10, g: 10, b: 10}\r\n                    for (i = 0; i < space.length; i++) {\r\n                        values[space][i] = vals[space.charAt(i)];\r\n                    }\r\n\r\n                    alpha = vals.a;\r\n                } else if (vals[spaces[space][0]] !== undefined) {\r\n                    // {red: 10, green: 10, blue: 10}\r\n                    var chans = spaces[space];\r\n\r\n                    for (i = 0; i < space.length; i++) {\r\n                        values[space][i] = vals[chans[i]];\r\n                    }\r\n\r\n                    alpha = vals.alpha;\r\n                }\r\n\r\n                values.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\r\n\r\n                if (space === 'alpha') {\r\n                    return false;\r\n                }\r\n\r\n                var capped;\r\n\r\n                // cap values of the space prior converting all values\r\n                for (i = 0; i < space.length; i++) {\r\n                    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\r\n                    values[space][i] = Math.round(capped);\r\n                }\r\n\r\n                // convert to all the other color spaces\r\n                for (var sname in spaces) {\r\n                    if (sname !== space) {\r\n                        values[sname] = convert[space][sname](values[space]);\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            };\r\n\r\n            Color.prototype.setSpace = function(space, args) {\r\n                var vals = args[0];\r\n\r\n                if (vals === undefined) {\r\n                    // color.rgb()\r\n                    return this.getValues(space);\r\n                }\r\n\r\n                // color.rgb(10, 10, 10)\r\n                if (typeof vals === 'number') {\r\n                    vals = Array.prototype.slice.call(args);\r\n                }\r\n\r\n                this.setValues(space, vals);\r\n                return this;\r\n            };\r\n\r\n            Color.prototype.setChannel = function(space, index, val) {\r\n                var svalues = this.values[space];\r\n                if (val === undefined) {\r\n                    // color.red()\r\n                    return svalues[index];\r\n                } else if (val === svalues[index]) {\r\n                    // color.red(color.red())\r\n                    return this;\r\n                }\r\n\r\n                // color.red(100)\r\n                svalues[index] = val;\r\n                this.setValues(space, svalues);\r\n\r\n                return this;\r\n            };\r\n\r\n            if (typeof window !== 'undefined') {\r\n                window.Color = Color;\r\n            }\r\n\r\n            module.exports = Color;\r\n        }, { \"1\": 1, \"4\": 4 }], 3: [function(require, module, exports) {\r\n            /* MIT license */\r\n\r\n            module.exports = {\r\n                rgb2hsl: rgb2hsl,\r\n                rgb2hsv: rgb2hsv,\r\n                rgb2hwb: rgb2hwb,\r\n                rgb2cmyk: rgb2cmyk,\r\n                rgb2keyword: rgb2keyword,\r\n                rgb2xyz: rgb2xyz,\r\n                rgb2lab: rgb2lab,\r\n                rgb2lch: rgb2lch,\r\n\r\n                hsl2rgb: hsl2rgb,\r\n                hsl2hsv: hsl2hsv,\r\n                hsl2hwb: hsl2hwb,\r\n                hsl2cmyk: hsl2cmyk,\r\n                hsl2keyword: hsl2keyword,\r\n\r\n                hsv2rgb: hsv2rgb,\r\n                hsv2hsl: hsv2hsl,\r\n                hsv2hwb: hsv2hwb,\r\n                hsv2cmyk: hsv2cmyk,\r\n                hsv2keyword: hsv2keyword,\r\n\r\n                hwb2rgb: hwb2rgb,\r\n                hwb2hsl: hwb2hsl,\r\n                hwb2hsv: hwb2hsv,\r\n                hwb2cmyk: hwb2cmyk,\r\n                hwb2keyword: hwb2keyword,\r\n\r\n                cmyk2rgb: cmyk2rgb,\r\n                cmyk2hsl: cmyk2hsl,\r\n                cmyk2hsv: cmyk2hsv,\r\n                cmyk2hwb: cmyk2hwb,\r\n                cmyk2keyword: cmyk2keyword,\r\n\r\n                keyword2rgb: keyword2rgb,\r\n                keyword2hsl: keyword2hsl,\r\n                keyword2hsv: keyword2hsv,\r\n                keyword2hwb: keyword2hwb,\r\n                keyword2cmyk: keyword2cmyk,\r\n                keyword2lab: keyword2lab,\r\n                keyword2xyz: keyword2xyz,\r\n\r\n                xyz2rgb: xyz2rgb,\r\n                xyz2lab: xyz2lab,\r\n                xyz2lch: xyz2lch,\r\n\r\n                lab2xyz: lab2xyz,\r\n                lab2rgb: lab2rgb,\r\n                lab2lch: lab2lch,\r\n\r\n                lch2lab: lch2lab,\r\n                lch2xyz: lch2xyz,\r\n                lch2rgb: lch2rgb\r\n            }\r\n\r\n            function rgb2hsl(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255,\r\n                    min = Math.min(r, g, b),\r\n                    max = Math.max(r, g, b),\r\n                    delta = max - min,\r\n                    h, s, l;\r\n\r\n                if (max == min)\r\n                    h = 0;\r\n                else if (r == max)\r\n                    h = (g - b) / delta;\r\n                else if (g == max)\r\n                    h = 2 + (b - r) / delta;\r\n                else if (b == max)\r\n                    h = 4 + (r - g) / delta;\r\n\r\n                h = Math.min(h * 60, 360);\r\n\r\n                if (h < 0)\r\n                    h += 360;\r\n\r\n                l = (min + max) / 2;\r\n\r\n                if (max == min)\r\n                    s = 0;\r\n                else if (l <= 0.5)\r\n                    s = delta / (max + min);\r\n                else\r\n                    s = delta / (2 - max - min);\r\n\r\n                return [h, s * 100, l * 100];\r\n            }\r\n\r\n            function rgb2hsv(rgb) {\r\n                var r = rgb[0],\r\n                    g = rgb[1],\r\n                    b = rgb[2],\r\n                    min = Math.min(r, g, b),\r\n                    max = Math.max(r, g, b),\r\n                    delta = max - min,\r\n                    h, s, v;\r\n\r\n                if (max == 0)\r\n                    s = 0;\r\n                else\r\n                    s = (delta / max * 1000) / 10;\r\n\r\n                if (max == min)\r\n                    h = 0;\r\n                else if (r == max)\r\n                    h = (g - b) / delta;\r\n                else if (g == max)\r\n                    h = 2 + (b - r) / delta;\r\n                else if (b == max)\r\n                    h = 4 + (r - g) / delta;\r\n\r\n                h = Math.min(h * 60, 360);\r\n\r\n                if (h < 0)\r\n                    h += 360;\r\n\r\n                v = ((max / 255) * 1000) / 10;\r\n\r\n                return [h, s, v];\r\n            }\r\n\r\n            function rgb2hwb(rgb) {\r\n                var r = rgb[0],\r\n                    g = rgb[1],\r\n                    b = rgb[2],\r\n                    h = rgb2hsl(rgb)[0],\r\n                    w = 1 / 255 * Math.min(r, Math.min(g, b)),\r\n                    b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\r\n\r\n                return [h, w * 100, b * 100];\r\n            }\r\n\r\n            function rgb2cmyk(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255,\r\n                    c, m, y, k;\r\n\r\n                k = Math.min(1 - r, 1 - g, 1 - b);\r\n                c = (1 - r - k) / (1 - k) || 0;\r\n                m = (1 - g - k) / (1 - k) || 0;\r\n                y = (1 - b - k) / (1 - k) || 0;\r\n                return [c * 100, m * 100, y * 100, k * 100];\r\n            }\r\n\r\n            function rgb2keyword(rgb) {\r\n                return reverseKeywords[JSON.stringify(rgb)];\r\n            }\r\n\r\n            function rgb2xyz(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255;\r\n\r\n                // assume sRGB\r\n                r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\r\n                g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\r\n                b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\r\n\r\n                var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\r\n                var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\r\n                var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\r\n\r\n                return [x * 100, y * 100, z * 100];\r\n            }\r\n\r\n            function rgb2lab(rgb) {\r\n                var xyz = rgb2xyz(rgb),\r\n                    x = xyz[0],\r\n                    y = xyz[1],\r\n                    z = xyz[2],\r\n                    l, a, b;\r\n\r\n                x /= 95.047;\r\n                y /= 100;\r\n                z /= 108.883;\r\n\r\n                x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\r\n                y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\r\n                z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\r\n\r\n                l = (116 * y) - 16;\r\n                a = 500 * (x - y);\r\n                b = 200 * (y - z);\r\n\r\n                return [l, a, b];\r\n            }\r\n\r\n            function rgb2lch(args) {\r\n                return lab2lch(rgb2lab(args));\r\n            }\r\n\r\n            function hsl2rgb(hsl) {\r\n                var h = hsl[0] / 360,\r\n                    s = hsl[1] / 100,\r\n                    l = hsl[2] / 100,\r\n                    t1, t2, t3, rgb, val;\r\n\r\n                if (s == 0) {\r\n                    val = l * 255;\r\n                    return [val, val, val];\r\n                }\r\n\r\n                if (l < 0.5)\r\n                    t2 = l * (1 + s);\r\n                else\r\n                    t2 = l + s - l * s;\r\n                t1 = 2 * l - t2;\r\n\r\n                rgb = [0, 0, 0];\r\n                for (var i = 0; i < 3; i++) {\r\n                    t3 = h + 1 / 3 * - (i - 1);\r\n                    t3 < 0 && t3++;\r\n                    t3 > 1 && t3--;\r\n\r\n                    if (6 * t3 < 1)\r\n                        val = t1 + (t2 - t1) * 6 * t3;\r\n                    else if (2 * t3 < 1)\r\n                        val = t2;\r\n                    else if (3 * t3 < 2)\r\n                        val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\r\n                    else\r\n                        val = t1;\r\n\r\n                    rgb[i] = val * 255;\r\n                }\r\n\r\n                return rgb;\r\n            }\r\n\r\n            function hsl2hsv(hsl) {\r\n                var h = hsl[0],\r\n                    s = hsl[1] / 100,\r\n                    l = hsl[2] / 100,\r\n                    sv, v;\r\n\r\n                if (l === 0) {\r\n                    // no need to do calc on black\r\n                    // also avoids divide by 0 error\r\n                    return [0, 0, 0];\r\n                }\r\n\r\n                l *= 2;\r\n                s *= (l <= 1) ? l : 2 - l;\r\n                v = (l + s) / 2;\r\n                sv = (2 * s) / (l + s);\r\n                return [h, sv * 100, v * 100];\r\n            }\r\n\r\n            function hsl2hwb(args) {\r\n                return rgb2hwb(hsl2rgb(args));\r\n            }\r\n\r\n            function hsl2cmyk(args) {\r\n                return rgb2cmyk(hsl2rgb(args));\r\n            }\r\n\r\n            function hsl2keyword(args) {\r\n                return rgb2keyword(hsl2rgb(args));\r\n            }\r\n\r\n            function hsv2rgb(hsv) {\r\n                var h = hsv[0] / 60,\r\n                    s = hsv[1] / 100,\r\n                    v = hsv[2] / 100,\r\n                    hi = Math.floor(h) % 6;\r\n\r\n                var f = h - Math.floor(h),\r\n                    p = 255 * v * (1 - s),\r\n                    q = 255 * v * (1 - (s * f)),\r\n                    t = 255 * v * (1 - (s * (1 - f))),\r\n                    v = 255 * v;\r\n\r\n                switch (hi) {\r\n                    case 0:\r\n                        return [v, t, p];\r\n                    case 1:\r\n                        return [q, v, p];\r\n                    case 2:\r\n                        return [p, v, t];\r\n                    case 3:\r\n                        return [p, q, v];\r\n                    case 4:\r\n                        return [t, p, v];\r\n                    case 5:\r\n                        return [v, p, q];\r\n                }\r\n            }\r\n\r\n            function hsv2hsl(hsv) {\r\n                var h = hsv[0],\r\n                    s = hsv[1] / 100,\r\n                    v = hsv[2] / 100,\r\n                    sl, l;\r\n\r\n                l = (2 - s) * v;\r\n                sl = s * v;\r\n                sl /= (l <= 1) ? l : 2 - l;\r\n                sl = sl || 0;\r\n                l /= 2;\r\n                return [h, sl * 100, l * 100];\r\n            }\r\n\r\n            function hsv2hwb(args) {\r\n                return rgb2hwb(hsv2rgb(args))\r\n            }\r\n\r\n            function hsv2cmyk(args) {\r\n                return rgb2cmyk(hsv2rgb(args));\r\n            }\r\n\r\n            function hsv2keyword(args) {\r\n                return rgb2keyword(hsv2rgb(args));\r\n            }\r\n\r\n            // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\r\n            function hwb2rgb(hwb) {\r\n                var h = hwb[0] / 360,\r\n                    wh = hwb[1] / 100,\r\n                    bl = hwb[2] / 100,\r\n                    ratio = wh + bl,\r\n                    i, v, f, n;\r\n\r\n                // wh + bl cant be > 1\r\n                if (ratio > 1) {\r\n                    wh /= ratio;\r\n                    bl /= ratio;\r\n                }\r\n\r\n                i = Math.floor(6 * h);\r\n                v = 1 - bl;\r\n                f = 6 * h - i;\r\n                if ((i & 0x01) != 0) {\r\n                    f = 1 - f;\r\n                }\r\n                n = wh + f * (v - wh);  // linear interpolation\r\n\r\n                switch (i) {\r\n                    default:\r\n                    case 6:\r\n                    case 0: r = v; g = n; b = wh; break;\r\n                    case 1: r = n; g = v; b = wh; break;\r\n                    case 2: r = wh; g = v; b = n; break;\r\n                    case 3: r = wh; g = n; b = v; break;\r\n                    case 4: r = n; g = wh; b = v; break;\r\n                    case 5: r = v; g = wh; b = n; break;\r\n                }\r\n\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function hwb2hsl(args) {\r\n                return rgb2hsl(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2hsv(args) {\r\n                return rgb2hsv(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2cmyk(args) {\r\n                return rgb2cmyk(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2keyword(args) {\r\n                return rgb2keyword(hwb2rgb(args));\r\n            }\r\n\r\n            function cmyk2rgb(cmyk) {\r\n                var c = cmyk[0] / 100,\r\n                    m = cmyk[1] / 100,\r\n                    y = cmyk[2] / 100,\r\n                    k = cmyk[3] / 100,\r\n                    r, g, b;\r\n\r\n                r = 1 - Math.min(1, c * (1 - k) + k);\r\n                g = 1 - Math.min(1, m * (1 - k) + k);\r\n                b = 1 - Math.min(1, y * (1 - k) + k);\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function cmyk2hsl(args) {\r\n                return rgb2hsl(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2hsv(args) {\r\n                return rgb2hsv(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2hwb(args) {\r\n                return rgb2hwb(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2keyword(args) {\r\n                return rgb2keyword(cmyk2rgb(args));\r\n            }\r\n\r\n            function xyz2rgb(xyz) {\r\n                var x = xyz[0] / 100,\r\n                    y = xyz[1] / 100,\r\n                    z = xyz[2] / 100,\r\n                    r, g, b;\r\n\r\n                r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\r\n                g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\r\n                b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\r\n\r\n                // assume sRGB\r\n                r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\r\n                    : r = (r * 12.92);\r\n\r\n                g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\r\n                    : g = (g * 12.92);\r\n\r\n                b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\r\n                    : b = (b * 12.92);\r\n\r\n                r = Math.min(Math.max(0, r), 1);\r\n                g = Math.min(Math.max(0, g), 1);\r\n                b = Math.min(Math.max(0, b), 1);\r\n\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function xyz2lab(xyz) {\r\n                var x = xyz[0],\r\n                    y = xyz[1],\r\n                    z = xyz[2],\r\n                    l, a, b;\r\n\r\n                x /= 95.047;\r\n                y /= 100;\r\n                z /= 108.883;\r\n\r\n                x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\r\n                y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\r\n                z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\r\n\r\n                l = (116 * y) - 16;\r\n                a = 500 * (x - y);\r\n                b = 200 * (y - z);\r\n\r\n                return [l, a, b];\r\n            }\r\n\r\n            function xyz2lch(args) {\r\n                return lab2lch(xyz2lab(args));\r\n            }\r\n\r\n            function lab2xyz(lab) {\r\n                var l = lab[0],\r\n                    a = lab[1],\r\n                    b = lab[2],\r\n                    x, y, z, y2;\r\n\r\n                if (l <= 8) {\r\n                    y = (l * 100) / 903.3;\r\n                    y2 = (7.787 * (y / 100)) + (16 / 116);\r\n                } else {\r\n                    y = 100 * Math.pow((l + 16) / 116, 3);\r\n                    y2 = Math.pow(y / 100, 1 / 3);\r\n                }\r\n\r\n                x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\r\n\r\n                z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\r\n\r\n                return [x, y, z];\r\n            }\r\n\r\n            function lab2lch(lab) {\r\n                var l = lab[0],\r\n                    a = lab[1],\r\n                    b = lab[2],\r\n                    hr, h, c;\r\n\r\n                hr = Math.atan2(b, a);\r\n                h = hr * 360 / 2 / Math.PI;\r\n                if (h < 0) {\r\n                    h += 360;\r\n                }\r\n                c = Math.sqrt(a * a + b * b);\r\n                return [l, c, h];\r\n            }\r\n\r\n            function lab2rgb(args) {\r\n                return xyz2rgb(lab2xyz(args));\r\n            }\r\n\r\n            function lch2lab(lch) {\r\n                var l = lch[0],\r\n                    c = lch[1],\r\n                    h = lch[2],\r\n                    a, b, hr;\r\n\r\n                hr = h / 360 * 2 * Math.PI;\r\n                a = c * Math.cos(hr);\r\n                b = c * Math.sin(hr);\r\n                return [l, a, b];\r\n            }\r\n\r\n            function lch2xyz(args) {\r\n                return lab2xyz(lch2lab(args));\r\n            }\r\n\r\n            function lch2rgb(args) {\r\n                return lab2rgb(lch2lab(args));\r\n            }\r\n\r\n            function keyword2rgb(keyword) {\r\n                return cssKeywords[keyword];\r\n            }\r\n\r\n            function keyword2hsl(args) {\r\n                return rgb2hsl(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2hsv(args) {\r\n                return rgb2hsv(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2hwb(args) {\r\n                return rgb2hwb(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2cmyk(args) {\r\n                return rgb2cmyk(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2lab(args) {\r\n                return rgb2lab(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2xyz(args) {\r\n                return rgb2xyz(keyword2rgb(args));\r\n            }\r\n\r\n            var cssKeywords = {\r\n                aliceblue: [240, 248, 255],\r\n                antiquewhite: [250, 235, 215],\r\n                aqua: [0, 255, 255],\r\n                aquamarine: [127, 255, 212],\r\n                azure: [240, 255, 255],\r\n                beige: [245, 245, 220],\r\n                bisque: [255, 228, 196],\r\n                black: [0, 0, 0],\r\n                blanchedalmond: [255, 235, 205],\r\n                blue: [0, 0, 255],\r\n                blueviolet: [138, 43, 226],\r\n                brown: [165, 42, 42],\r\n                burlywood: [222, 184, 135],\r\n                cadetblue: [95, 158, 160],\r\n                chartreuse: [127, 255, 0],\r\n                chocolate: [210, 105, 30],\r\n                coral: [255, 127, 80],\r\n                cornflowerblue: [100, 149, 237],\r\n                cornsilk: [255, 248, 220],\r\n                crimson: [220, 20, 60],\r\n                cyan: [0, 255, 255],\r\n                darkblue: [0, 0, 139],\r\n                darkcyan: [0, 139, 139],\r\n                darkgoldenrod: [184, 134, 11],\r\n                darkgray: [169, 169, 169],\r\n                darkgreen: [0, 100, 0],\r\n                darkgrey: [169, 169, 169],\r\n                darkkhaki: [189, 183, 107],\r\n                darkmagenta: [139, 0, 139],\r\n                darkolivegreen: [85, 107, 47],\r\n                darkorange: [255, 140, 0],\r\n                darkorchid: [153, 50, 204],\r\n                darkred: [139, 0, 0],\r\n                darksalmon: [233, 150, 122],\r\n                darkseagreen: [143, 188, 143],\r\n                darkslateblue: [72, 61, 139],\r\n                darkslategray: [47, 79, 79],\r\n                darkslategrey: [47, 79, 79],\r\n                darkturquoise: [0, 206, 209],\r\n                darkviolet: [148, 0, 211],\r\n                deeppink: [255, 20, 147],\r\n                deepskyblue: [0, 191, 255],\r\n                dimgray: [105, 105, 105],\r\n                dimgrey: [105, 105, 105],\r\n                dodgerblue: [30, 144, 255],\r\n                firebrick: [178, 34, 34],\r\n                floralwhite: [255, 250, 240],\r\n                forestgreen: [34, 139, 34],\r\n                fuchsia: [255, 0, 255],\r\n                gainsboro: [220, 220, 220],\r\n                ghostwhite: [248, 248, 255],\r\n                gold: [255, 215, 0],\r\n                goldenrod: [218, 165, 32],\r\n                gray: [128, 128, 128],\r\n                green: [0, 128, 0],\r\n                greenyellow: [173, 255, 47],\r\n                grey: [128, 128, 128],\r\n                honeydew: [240, 255, 240],\r\n                hotpink: [255, 105, 180],\r\n                indianred: [205, 92, 92],\r\n                indigo: [75, 0, 130],\r\n                ivory: [255, 255, 240],\r\n                khaki: [240, 230, 140],\r\n                lavender: [230, 230, 250],\r\n                lavenderblush: [255, 240, 245],\r\n                lawngreen: [124, 252, 0],\r\n                lemonchiffon: [255, 250, 205],\r\n                lightblue: [173, 216, 230],\r\n                lightcoral: [240, 128, 128],\r\n                lightcyan: [224, 255, 255],\r\n                lightgoldenrodyellow: [250, 250, 210],\r\n                lightgray: [211, 211, 211],\r\n                lightgreen: [144, 238, 144],\r\n                lightgrey: [211, 211, 211],\r\n                lightpink: [255, 182, 193],\r\n                lightsalmon: [255, 160, 122],\r\n                lightseagreen: [32, 178, 170],\r\n                lightskyblue: [135, 206, 250],\r\n                lightslategray: [119, 136, 153],\r\n                lightslategrey: [119, 136, 153],\r\n                lightsteelblue: [176, 196, 222],\r\n                lightyellow: [255, 255, 224],\r\n                lime: [0, 255, 0],\r\n                limegreen: [50, 205, 50],\r\n                linen: [250, 240, 230],\r\n                magenta: [255, 0, 255],\r\n                maroon: [128, 0, 0],\r\n                mediumaquamarine: [102, 205, 170],\r\n                mediumblue: [0, 0, 205],\r\n                mediumorchid: [186, 85, 211],\r\n                mediumpurple: [147, 112, 219],\r\n                mediumseagreen: [60, 179, 113],\r\n                mediumslateblue: [123, 104, 238],\r\n                mediumspringgreen: [0, 250, 154],\r\n                mediumturquoise: [72, 209, 204],\r\n                mediumvioletred: [199, 21, 133],\r\n                midnightblue: [25, 25, 112],\r\n                mintcream: [245, 255, 250],\r\n                mistyrose: [255, 228, 225],\r\n                moccasin: [255, 228, 181],\r\n                navajowhite: [255, 222, 173],\r\n                navy: [0, 0, 128],\r\n                oldlace: [253, 245, 230],\r\n                olive: [128, 128, 0],\r\n                olivedrab: [107, 142, 35],\r\n                orange: [255, 165, 0],\r\n                orangered: [255, 69, 0],\r\n                orchid: [218, 112, 214],\r\n                palegoldenrod: [238, 232, 170],\r\n                palegreen: [152, 251, 152],\r\n                paleturquoise: [175, 238, 238],\r\n                palevioletred: [219, 112, 147],\r\n                papayawhip: [255, 239, 213],\r\n                peachpuff: [255, 218, 185],\r\n                peru: [205, 133, 63],\r\n                pink: [255, 192, 203],\r\n                plum: [221, 160, 221],\r\n                powderblue: [176, 224, 230],\r\n                purple: [128, 0, 128],\r\n                rebeccapurple: [102, 51, 153],\r\n                red: [255, 0, 0],\r\n                rosybrown: [188, 143, 143],\r\n                royalblue: [65, 105, 225],\r\n                saddlebrown: [139, 69, 19],\r\n                salmon: [250, 128, 114],\r\n                sandybrown: [244, 164, 96],\r\n                seagreen: [46, 139, 87],\r\n                seashell: [255, 245, 238],\r\n                sienna: [160, 82, 45],\r\n                silver: [192, 192, 192],\r\n                skyblue: [135, 206, 235],\r\n                slateblue: [106, 90, 205],\r\n                slategray: [112, 128, 144],\r\n                slategrey: [112, 128, 144],\r\n                snow: [255, 250, 250],\r\n                springgreen: [0, 255, 127],\r\n                steelblue: [70, 130, 180],\r\n                tan: [210, 180, 140],\r\n                teal: [0, 128, 128],\r\n                thistle: [216, 191, 216],\r\n                tomato: [255, 99, 71],\r\n                turquoise: [64, 224, 208],\r\n                violet: [238, 130, 238],\r\n                wheat: [245, 222, 179],\r\n                white: [255, 255, 255],\r\n                whitesmoke: [245, 245, 245],\r\n                yellow: [255, 255, 0],\r\n                yellowgreen: [154, 205, 50]\r\n            };\r\n\r\n            var reverseKeywords = {};\r\n            for (var key in cssKeywords) {\r\n                reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\r\n            }\r\n        }, {}], 4: [function(require, module, exports) {\r\n            var conversions = require(3);\r\n\r\n            var convert = function() {\r\n                return new Converter();\r\n            }\r\n\r\n            for (var func in conversions) {\r\n                // export Raw versions\r\n                convert[func + \"Raw\"] = (function(func) {\r\n                    // accept array or plain args\r\n                    return function(arg) {\r\n                        if (typeof arg == \"number\")\r\n                            arg = Array.prototype.slice.call(arguments);\r\n                        return conversions[func](arg);\r\n                    }\r\n                })(func);\r\n\r\n                var pair = /(\\w+)2(\\w+)/.exec(func),\r\n                    from = pair[1],\r\n                    to = pair[2];\r\n\r\n                // export rgb2hsl and [\"rgb\"][\"hsl\"]\r\n                convert[from] = convert[from] || {};\r\n\r\n                convert[from][to] = convert[func] = (function(func) {\r\n                    return function(arg) {\r\n                        if (typeof arg == \"number\")\r\n                            arg = Array.prototype.slice.call(arguments);\r\n\r\n                        var val = conversions[func](arg);\r\n                        if (typeof val == \"string\" || val === undefined)\r\n                            return val; // keyword\r\n\r\n                        for (var i = 0; i < val.length; i++)\r\n                            val[i] = Math.round(val[i]);\r\n                        return val;\r\n                    }\r\n                })(func);\r\n            }\r\n\r\n            /* Converter does lazy conversion and caching */\r\n            var Converter = function() {\r\n                this.convs = {};\r\n            };\r\n\r\n            /* Either get the values for a space or\r\n              set the values for a space, depending on args */\r\n            Converter.prototype.routeSpace = function(space, args) {\r\n                var values = args[0];\r\n                if (values === undefined) {\r\n                    // color.rgb()\r\n                    return this.getValues(space);\r\n                }\r\n                // color.rgb(10, 10, 10)\r\n                if (typeof values == \"number\") {\r\n                    values = Array.prototype.slice.call(args);\r\n                }\r\n\r\n                return this.setValues(space, values);\r\n            };\r\n\r\n            /* Set the values for a space, invalidating cache */\r\n            Converter.prototype.setValues = function(space, values) {\r\n                this.space = space;\r\n                this.convs = {};\r\n                this.convs[space] = values;\r\n                return this;\r\n            };\r\n\r\n            /* Get the values for a space. If there's already\r\n              a conversion for the space, fetch it, otherwise\r\n              compute it */\r\n            Converter.prototype.getValues = function(space) {\r\n                var vals = this.convs[space];\r\n                if (!vals) {\r\n                    var fspace = this.space,\r\n                        from = this.convs[fspace];\r\n                    vals = convert[fspace][space](from);\r\n\r\n                    this.convs[space] = vals;\r\n                }\r\n                return vals;\r\n            };\r\n\r\n            [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\r\n                Converter.prototype[space] = function(vals) {\r\n                    return this.routeSpace(space, arguments);\r\n                }\r\n            });\r\n\r\n            module.exports = convert;\r\n        }, { \"3\": 3 }], 5: [function(require, module, exports) {\r\n            'use strict'\r\n\r\n            module.exports = {\r\n                \"aliceblue\": [240, 248, 255],\r\n                \"antiquewhite\": [250, 235, 215],\r\n                \"aqua\": [0, 255, 255],\r\n                \"aquamarine\": [127, 255, 212],\r\n                \"azure\": [240, 255, 255],\r\n                \"beige\": [245, 245, 220],\r\n                \"bisque\": [255, 228, 196],\r\n                \"black\": [0, 0, 0],\r\n                \"blanchedalmond\": [255, 235, 205],\r\n                \"blue\": [0, 0, 255],\r\n                \"blueviolet\": [138, 43, 226],\r\n                \"brown\": [165, 42, 42],\r\n                \"burlywood\": [222, 184, 135],\r\n                \"cadetblue\": [95, 158, 160],\r\n                \"chartreuse\": [127, 255, 0],\r\n                \"chocolate\": [210, 105, 30],\r\n                \"coral\": [255, 127, 80],\r\n                \"cornflowerblue\": [100, 149, 237],\r\n                \"cornsilk\": [255, 248, 220],\r\n                \"crimson\": [220, 20, 60],\r\n                \"cyan\": [0, 255, 255],\r\n                \"darkblue\": [0, 0, 139],\r\n                \"darkcyan\": [0, 139, 139],\r\n                \"darkgoldenrod\": [184, 134, 11],\r\n                \"darkgray\": [169, 169, 169],\r\n                \"darkgreen\": [0, 100, 0],\r\n                \"darkgrey\": [169, 169, 169],\r\n                \"darkkhaki\": [189, 183, 107],\r\n                \"darkmagenta\": [139, 0, 139],\r\n                \"darkolivegreen\": [85, 107, 47],\r\n                \"darkorange\": [255, 140, 0],\r\n                \"darkorchid\": [153, 50, 204],\r\n                \"darkred\": [139, 0, 0],\r\n                \"darksalmon\": [233, 150, 122],\r\n                \"darkseagreen\": [143, 188, 143],\r\n                \"darkslateblue\": [72, 61, 139],\r\n                \"darkslategray\": [47, 79, 79],\r\n                \"darkslategrey\": [47, 79, 79],\r\n                \"darkturquoise\": [0, 206, 209],\r\n                \"darkviolet\": [148, 0, 211],\r\n                \"deeppink\": [255, 20, 147],\r\n                \"deepskyblue\": [0, 191, 255],\r\n                \"dimgray\": [105, 105, 105],\r\n                \"dimgrey\": [105, 105, 105],\r\n                \"dodgerblue\": [30, 144, 255],\r\n                \"firebrick\": [178, 34, 34],\r\n                \"floralwhite\": [255, 250, 240],\r\n                \"forestgreen\": [34, 139, 34],\r\n                \"fuchsia\": [255, 0, 255],\r\n                \"gainsboro\": [220, 220, 220],\r\n                \"ghostwhite\": [248, 248, 255],\r\n                \"gold\": [255, 215, 0],\r\n                \"goldenrod\": [218, 165, 32],\r\n                \"gray\": [128, 128, 128],\r\n                \"green\": [0, 128, 0],\r\n                \"greenyellow\": [173, 255, 47],\r\n                \"grey\": [128, 128, 128],\r\n                \"honeydew\": [240, 255, 240],\r\n                \"hotpink\": [255, 105, 180],\r\n                \"indianred\": [205, 92, 92],\r\n                \"indigo\": [75, 0, 130],\r\n                \"ivory\": [255, 255, 240],\r\n                \"khaki\": [240, 230, 140],\r\n                \"lavender\": [230, 230, 250],\r\n                \"lavenderblush\": [255, 240, 245],\r\n                \"lawngreen\": [124, 252, 0],\r\n                \"lemonchiffon\": [255, 250, 205],\r\n                \"lightblue\": [173, 216, 230],\r\n                \"lightcoral\": [240, 128, 128],\r\n                \"lightcyan\": [224, 255, 255],\r\n                \"lightgoldenrodyellow\": [250, 250, 210],\r\n                \"lightgray\": [211, 211, 211],\r\n                \"lightgreen\": [144, 238, 144],\r\n                \"lightgrey\": [211, 211, 211],\r\n                \"lightpink\": [255, 182, 193],\r\n                \"lightsalmon\": [255, 160, 122],\r\n                \"lightseagreen\": [32, 178, 170],\r\n                \"lightskyblue\": [135, 206, 250],\r\n                \"lightslategray\": [119, 136, 153],\r\n                \"lightslategrey\": [119, 136, 153],\r\n                \"lightsteelblue\": [176, 196, 222],\r\n                \"lightyellow\": [255, 255, 224],\r\n                \"lime\": [0, 255, 0],\r\n                \"limegreen\": [50, 205, 50],\r\n                \"linen\": [250, 240, 230],\r\n                \"magenta\": [255, 0, 255],\r\n                \"maroon\": [128, 0, 0],\r\n                \"mediumaquamarine\": [102, 205, 170],\r\n                \"mediumblue\": [0, 0, 205],\r\n                \"mediumorchid\": [186, 85, 211],\r\n                \"mediumpurple\": [147, 112, 219],\r\n                \"mediumseagreen\": [60, 179, 113],\r\n                \"mediumslateblue\": [123, 104, 238],\r\n                \"mediumspringgreen\": [0, 250, 154],\r\n                \"mediumturquoise\": [72, 209, 204],\r\n                \"mediumvioletred\": [199, 21, 133],\r\n                \"midnightblue\": [25, 25, 112],\r\n                \"mintcream\": [245, 255, 250],\r\n                \"mistyrose\": [255, 228, 225],\r\n                \"moccasin\": [255, 228, 181],\r\n                \"navajowhite\": [255, 222, 173],\r\n                \"navy\": [0, 0, 128],\r\n                \"oldlace\": [253, 245, 230],\r\n                \"olive\": [128, 128, 0],\r\n                \"olivedrab\": [107, 142, 35],\r\n                \"orange\": [255, 165, 0],\r\n                \"orangered\": [255, 69, 0],\r\n                \"orchid\": [218, 112, 214],\r\n                \"palegoldenrod\": [238, 232, 170],\r\n                \"palegreen\": [152, 251, 152],\r\n                \"paleturquoise\": [175, 238, 238],\r\n                \"palevioletred\": [219, 112, 147],\r\n                \"papayawhip\": [255, 239, 213],\r\n                \"peachpuff\": [255, 218, 185],\r\n                \"peru\": [205, 133, 63],\r\n                \"pink\": [255, 192, 203],\r\n                \"plum\": [221, 160, 221],\r\n                \"powderblue\": [176, 224, 230],\r\n                \"purple\": [128, 0, 128],\r\n                \"rebeccapurple\": [102, 51, 153],\r\n                \"red\": [255, 0, 0],\r\n                \"rosybrown\": [188, 143, 143],\r\n                \"royalblue\": [65, 105, 225],\r\n                \"saddlebrown\": [139, 69, 19],\r\n                \"salmon\": [250, 128, 114],\r\n                \"sandybrown\": [244, 164, 96],\r\n                \"seagreen\": [46, 139, 87],\r\n                \"seashell\": [255, 245, 238],\r\n                \"sienna\": [160, 82, 45],\r\n                \"silver\": [192, 192, 192],\r\n                \"skyblue\": [135, 206, 235],\r\n                \"slateblue\": [106, 90, 205],\r\n                \"slategray\": [112, 128, 144],\r\n                \"slategrey\": [112, 128, 144],\r\n                \"snow\": [255, 250, 250],\r\n                \"springgreen\": [0, 255, 127],\r\n                \"steelblue\": [70, 130, 180],\r\n                \"tan\": [210, 180, 140],\r\n                \"teal\": [0, 128, 128],\r\n                \"thistle\": [216, 191, 216],\r\n                \"tomato\": [255, 99, 71],\r\n                \"turquoise\": [64, 224, 208],\r\n                \"violet\": [238, 130, 238],\r\n                \"wheat\": [245, 222, 179],\r\n                \"white\": [255, 255, 255],\r\n                \"whitesmoke\": [245, 245, 245],\r\n                \"yellow\": [255, 255, 0],\r\n                \"yellowgreen\": [154, 205, 50]\r\n            };\r\n        }, {}], 6: [function(require, module, exports) {\r\n            /**\r\n             * @namespace Chart\r\n             */\r\n            var Chart = require(20)();\r\n\r\n            Chart.helpers = require(36);\r\n\r\n            // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\r\n            require(18)(Chart);\r\n\r\n            Chart.defaults = require(16);\r\n            Chart.Element = require(17);\r\n            Chart.elements = require(31);\r\n            Chart.Interaction = require(19);\r\n            Chart.layouts = require(21);\r\n            Chart.platform = require(39);\r\n            Chart.plugins = require(22);\r\n            Chart.Ticks = require(25);\r\n\r\n            require(13)(Chart);\r\n            require(14)(Chart);\r\n            require(15)(Chart);\r\n            require(24)(Chart);\r\n            require(23)(Chart);\r\n            require(26)(Chart);\r\n\r\n            require(46)(Chart);\r\n            require(44)(Chart);\r\n            require(45)(Chart);\r\n            // require('./scales/scale.logarithmic')(Chart);\r\n            // require('./scales/scale.radialLinear')(Chart);\r\n            // require('./scales/scale.time')(Chart);\r\n\r\n            // Controllers must be loaded after elements\r\n            // See Chart.core.datasetController.dataElementType\r\n            require(10)(Chart);\r\n            // require('./controllers/controller.bubble')(Chart);\r\n            require(11)(Chart);\r\n            require(12)(Chart);\r\n            // require('./controllers/controller.polarArea')(Chart);\r\n            // require('./controllers/controller.radar')(Chart);\r\n            // require('./controllers/controller.scatter')(Chart);\r\n\r\n            require(7)(Chart);\r\n            // require('./charts/Chart.Bubble')(Chart);\r\n            require(8)(Chart);\r\n            require(9)(Chart);\r\n            // require('./charts/Chart.PolarArea')(Chart);\r\n            // require('./charts/Chart.Radar')(Chart);\r\n            // require('./charts/Chart.Scatter')(Chart);\r\n\r\n            // Loading built-it plugins\r\n            var plugins = require(40);\r\n            for (var k in plugins) {\r\n                if (plugins.hasOwnProperty(k)) {\r\n                    Chart.plugins.register(plugins[k]);\r\n                }\r\n            }\r\n\r\n            Chart.platform.initialize();\r\n\r\n            module.exports = Chart;\r\n            if (typeof window !== 'undefined') {\r\n                window.Chart = Chart;\r\n            }\r\n        }, { \"10\": 10, \"11\": 11, \"12\": 12, \"13\": 13, \"14\": 14, \"15\": 15, \"16\": 16, \"17\": 17, \"18\": 18, \"19\": 19, \"20\": 20, \"21\": 21, \"22\": 22, \"23\": 23, \"24\": 24, \"25\": 25, \"26\": 26, \"31\": 31, \"36\": 36, \"39\": 39, \"40\": 40, \"44\": 44, \"45\": 45, \"46\": 46, \"7\": 7, \"8\": 8, \"9\": 9 }], 7: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Bar = function(context, config) {\r\n                    config.type = 'bar';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 8: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Doughnut = function(context, config) {\r\n                    config.type = 'doughnut';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 9: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Line = function(context, config) {\r\n                    config.type = 'line';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 10: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('bar', {\r\n                hover: {\r\n                    mode: 'label'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'category',\r\n\r\n                        // Specific to Bar Controller\r\n                        categoryPercentage: 0.8,\r\n                        barPercentage: 0.9,\r\n\r\n                        // offset settings\r\n                        offset: true,\r\n\r\n                        // grid line settings\r\n                        gridLines: {\r\n                            offsetGridLines: true\r\n                        }\r\n                    }],\r\n\r\n                    yAxes: [{\r\n                        type: 'linear'\r\n                    }]\r\n                }\r\n            });\r\n\r\n            defaults._set('horizontalBar', {\r\n                hover: {\r\n                    mode: 'index',\r\n                    axis: 'y'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'linear',\r\n                        position: 'bottom'\r\n                    }],\r\n\r\n                    yAxes: [{\r\n                        position: 'left',\r\n                        type: 'category',\r\n\r\n                        // Specific to Horizontal Bar Controller\r\n                        categoryPercentage: 0.8,\r\n                        barPercentage: 0.9,\r\n\r\n                        // offset settings\r\n                        offset: true,\r\n\r\n                        // grid line settings\r\n                        gridLines: {\r\n                            offsetGridLines: true\r\n                        }\r\n                    }]\r\n                },\r\n\r\n                elements: {\r\n                    rectangle: {\r\n                        borderSkipped: 'left'\r\n                    }\r\n                },\r\n\r\n                tooltips: {\r\n                    callbacks: {\r\n                        title: function(item, data) {\r\n                            // Pick first xLabel for now\r\n                            var title = '';\r\n\r\n                            if (item.length > 0) {\r\n                                if (item[0].yLabel) {\r\n                                    title = item[0].yLabel;\r\n                                } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\r\n                                    title = data.labels[item[0].index];\r\n                                }\r\n                            }\r\n\r\n                            return title;\r\n                        },\r\n\r\n                        label: function(item, data) {\r\n                            var datasetLabel = data.datasets[item.datasetIndex].label || '';\r\n                            return datasetLabel + ': ' + item.xLabel;\r\n                        }\r\n                    },\r\n                    mode: 'index',\r\n                    axis: 'y'\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\r\n             * @private\r\n             */\r\n            function computeMinSampleSize(scale, pixels) {\r\n                var min = scale.isHorizontal() ? scale.width : scale.height;\r\n                var ticks = scale.getTicks();\r\n                var prev, curr, i, ilen;\r\n\r\n                for (i = 1, ilen = pixels.length; i < ilen; ++i) {\r\n                    min = Math.min(min, pixels[i] - pixels[i - 1]);\r\n                }\r\n\r\n                for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n                    curr = scale.getPixelForTick(i);\r\n                    min = i > 0 ? Math.min(min, curr - prev) : min;\r\n                    prev = curr;\r\n                }\r\n\r\n                return min;\r\n            }\r\n\r\n            /**\r\n             * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\r\n             * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\r\n             * mode currently always generates bars equally sized (until we introduce scriptable options?).\r\n             * @private\r\n             */\r\n            function computeFitCategoryTraits(index, ruler, options) {\r\n                var thickness = options.barThickness;\r\n                var count = ruler.stackCount;\r\n                var curr = ruler.pixels[index];\r\n                var size, ratio;\r\n\r\n                if (helpers.isNullOrUndef(thickness)) {\r\n                    size = ruler.min * options.categoryPercentage;\r\n                    ratio = options.barPercentage;\r\n                } else {\r\n                    // When bar thickness is enforced, category and bar percentages are ignored.\r\n                    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\r\n                    // and deprecate barPercentage since this value is ignored when thickness is absolute.\r\n                    size = thickness * count;\r\n                    ratio = 1;\r\n                }\r\n\r\n                return {\r\n                    chunk: size / count,\r\n                    ratio: ratio,\r\n                    start: curr - (size / 2)\r\n                };\r\n            }\r\n\r\n            /**\r\n             * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\r\n             * percentage options are 1), based on the previous and following categories. This mode\r\n             * generates bars with different widths when data are not evenly spaced.\r\n             * @private\r\n             */\r\n            function computeFlexCategoryTraits(index, ruler, options) {\r\n                var pixels = ruler.pixels;\r\n                var curr = pixels[index];\r\n                var prev = index > 0 ? pixels[index - 1] : null;\r\n                var next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n                var percent = options.categoryPercentage;\r\n                var start, size;\r\n\r\n                if (prev === null) {\r\n                    // first data: its size is double based on the next point or,\r\n                    // if it's also the last data, we use the scale end extremity.\r\n                    prev = curr - (next === null ? ruler.end - curr : next - curr);\r\n                }\r\n\r\n                if (next === null) {\r\n                    // last data: its size is also double based on the previous point.\r\n                    next = curr + curr - prev;\r\n                }\r\n\r\n                start = curr - ((curr - prev) / 2) * percent;\r\n                size = ((next - prev) / 2) * percent;\r\n\r\n                return {\r\n                    chunk: size / ruler.stackCount,\r\n                    ratio: options.barPercentage,\r\n                    start: start\r\n                };\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.controllers.bar = Chart.DatasetController.extend({\r\n                    dataElementType: elements.Rectangle,\r\n\r\n                    initialize: function() {\r\n                        var me = this;\r\n                        var meta;\r\n\r\n                        Chart.DatasetController.prototype.initialize.apply(me, arguments);\r\n\r\n                        meta = me.getMeta();\r\n                        meta.stack = me.getDataset().stack;\r\n                        meta.bar = true;\r\n                    },\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var rects = me.getMeta().data;\r\n                        var i, ilen;\r\n\r\n                        me._ruler = me.getRuler();\r\n\r\n                        for (i = 0, ilen = rects.length; i < ilen; ++i) {\r\n                            me.updateElement(rects[i], i, reset);\r\n                        }\r\n                    },\r\n\r\n                    updateElement: function(rectangle, index, reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var dataset = me.getDataset();\r\n                        var custom = rectangle.custom || {};\r\n                        var rectangleOptions = chart.options.elements.rectangle;\r\n\r\n                        rectangle._xScale = me.getScaleForId(meta.xAxisID);\r\n                        rectangle._yScale = me.getScaleForId(meta.yAxisID);\r\n                        rectangle._datasetIndex = me.index;\r\n                        rectangle._index = index;\r\n\r\n                        rectangle._model = {\r\n                            datasetLabel: dataset.label,\r\n                            label: chart.data.labels[index],\r\n                            borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\r\n                            backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\r\n                            borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\r\n                            borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\r\n                        };\r\n\r\n                        me.updateElementGeometry(rectangle, index, reset);\r\n\r\n                        rectangle.pivot();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    updateElementGeometry: function(rectangle, index, reset) {\r\n                        var me = this;\r\n                        var model = rectangle._model;\r\n                        var vscale = me.getValueScale();\r\n                        var base = vscale.getBasePixel();\r\n                        var horizontal = vscale.isHorizontal();\r\n                        var ruler = me._ruler || me.getRuler();\r\n                        var vpixels = me.calculateBarValuePixels(me.index, index);\r\n                        var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\r\n\r\n                        model.horizontal = horizontal;\r\n                        model.base = reset ? base : vpixels.base;\r\n                        model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\r\n                        model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\r\n                        model.height = horizontal ? ipixels.size : undefined;\r\n                        model.width = horizontal ? undefined : ipixels.size;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScaleId: function() {\r\n                        return this.getMeta().yAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScaleId: function() {\r\n                        return this.getMeta().xAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScale: function() {\r\n                        return this.getScaleForId(this.getValueScaleId());\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScale: function() {\r\n                        return this.getScaleForId(this.getIndexScaleId());\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the stacks based on groups and bar visibility.\r\n                     * @param {Number} [last] - The dataset index\r\n                     * @returns {Array} The stack list\r\n                     * @private\r\n                     */\r\n                    _getStacks: function(last) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var scale = me.getIndexScale();\r\n                        var stacked = scale.options.stacked;\r\n                        var ilen = last === undefined ? chart.data.datasets.length : last + 1;\r\n                        var stacks = [];\r\n                        var i, meta;\r\n\r\n                        for (i = 0; i < ilen; ++i) {\r\n                            meta = chart.getDatasetMeta(i);\r\n                            if (meta.bar && chart.isDatasetVisible(i) &&\r\n                                (stacked === false ||\r\n                                    (stacked === true && stacks.indexOf(meta.stack) === -1) ||\r\n                                    (stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\r\n                                stacks.push(meta.stack);\r\n                            }\r\n                        }\r\n\r\n                        return stacks;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the effective number of stacks based on groups and bar visibility.\r\n                     * @private\r\n                     */\r\n                    getStackCount: function() {\r\n                        return this._getStacks().length;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the stack index for the given dataset based on groups and bar visibility.\r\n                     * @param {Number} [datasetIndex] - The dataset index\r\n                     * @param {String} [name] - The stack name to find\r\n                     * @returns {Number} The stack index\r\n                     * @private\r\n                     */\r\n                    getStackIndex: function(datasetIndex, name) {\r\n                        var stacks = this._getStacks(datasetIndex);\r\n                        var index = (name !== undefined)\r\n                            ? stacks.indexOf(name)\r\n                            : -1; // indexOf returns -1 if element is not present\r\n\r\n                        return (index === -1)\r\n                            ? stacks.length - 1\r\n                            : index;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getRuler: function() {\r\n                        var me = this;\r\n                        var scale = me.getIndexScale();\r\n                        var stackCount = me.getStackCount();\r\n                        var datasetIndex = me.index;\r\n                        var isHorizontal = scale.isHorizontal();\r\n                        var start = isHorizontal ? scale.left : scale.top;\r\n                        var end = start + (isHorizontal ? scale.width : scale.height);\r\n                        var pixels = [];\r\n                        var i, ilen, min;\r\n\r\n                        for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\r\n                            pixels.push(scale.getPixelForValue(null, i, datasetIndex));\r\n                        }\r\n\r\n                        min = helpers.isNullOrUndef(scale.options.barThickness)\r\n                            ? computeMinSampleSize(scale, pixels)\r\n                            : -1;\r\n\r\n                        return {\r\n                            min: min,\r\n                            pixels: pixels,\r\n                            start: start,\r\n                            end: end,\r\n                            stackCount: stackCount,\r\n                            scale: scale\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Note: pixel values are not clamped to the scale area.\r\n                     * @private\r\n                     */\r\n                    calculateBarValuePixels: function(datasetIndex, index) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var scale = me.getValueScale();\r\n                        var datasets = chart.data.datasets;\r\n                        var value = scale.getRightValue(datasets[datasetIndex].data[index]);\r\n                        var stacked = scale.options.stacked;\r\n                        var stack = meta.stack;\r\n                        var start = 0;\r\n                        var i, imeta, ivalue, base, head, size;\r\n\r\n                        if (stacked || (stacked === undefined && stack !== undefined)) {\r\n                            for (i = 0; i < datasetIndex; ++i) {\r\n                                imeta = chart.getDatasetMeta(i);\r\n\r\n                                if (imeta.bar &&\r\n                                    imeta.stack === stack &&\r\n                                    imeta.controller.getValueScaleId() === scale.id &&\r\n                                    chart.isDatasetVisible(i)) {\r\n                                    ivalue = scale.getRightValue(datasets[i].data[index]);\r\n                                    if ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\r\n                                        start += ivalue;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        base = scale.getPixelForValue(start);\r\n                        head = scale.getPixelForValue(start + value);\r\n                        size = (head - base) / 2;\r\n\r\n                        return {\r\n                            size: size,\r\n                            base: base,\r\n                            head: head,\r\n                            center: head + size / 2\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    calculateBarIndexPixels: function(datasetIndex, index, ruler) {\r\n                        var me = this;\r\n                        var options = ruler.scale.options;\r\n                        var range = options.barThickness === 'flex'\r\n                            ? computeFlexCategoryTraits(index, ruler, options)\r\n                            : computeFitCategoryTraits(index, ruler, options);\r\n\r\n                        var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\r\n                        var center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\r\n                        var size = Math.min(\r\n                            helpers.valueOrDefault(options.maxBarThickness, Infinity),\r\n                            range.chunk * range.ratio);\r\n\r\n                        return {\r\n                            base: center - size / 2,\r\n                            head: center + size / 2,\r\n                            center: center,\r\n                            size: size\r\n                        };\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var scale = me.getValueScale();\r\n                        var rects = me.getMeta().data;\r\n                        var dataset = me.getDataset();\r\n                        var ilen = rects.length;\r\n                        var i = 0;\r\n\r\n                        helpers.canvas.clipArea(chart.ctx, chart.chartArea);\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            if (!isNaN(scale.getRightValue(dataset.data[i]))) {\r\n                                rects[i].draw();\r\n                            }\r\n                        }\r\n\r\n                        helpers.canvas.unclipArea(chart.ctx);\r\n                    },\r\n\r\n                    setHoverStyle: function(rectangle) {\r\n                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n                        var index = rectangle._index;\r\n                        var custom = rectangle.custom || {};\r\n                        var model = rectangle._model;\r\n\r\n                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    removeHoverStyle: function(rectangle) {\r\n                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n                        var index = rectangle._index;\r\n                        var custom = rectangle.custom || {};\r\n                        var model = rectangle._model;\r\n                        var rectangleElementOptions = this.chart.options.elements.rectangle;\r\n\r\n                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\r\n                        model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\r\n                        model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\r\n                    }\r\n                });\r\n\r\n                Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScaleId: function() {\r\n                        return this.getMeta().xAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScaleId: function() {\r\n                        return this.getMeta().yAxisID;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 11: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('doughnut', {\r\n                animation: {\r\n                    // Boolean - Whether we animate the rotation of the Doughnut\r\n                    animateRotate: true,\r\n                    // Boolean - Whether we animate scaling the Doughnut from the centre\r\n                    animateScale: false\r\n                },\r\n                hover: {\r\n                    mode: 'single'\r\n                },\r\n                legendCallback: function(chart) {\r\n                    var text = [];\r\n                    text.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n                    var data = chart.data;\r\n                    var datasets = data.datasets;\r\n                    var labels = data.labels;\r\n\r\n                    if (datasets.length) {\r\n                        for (var i = 0; i < datasets[0].data.length; ++i) {\r\n                            text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\r\n                            if (labels[i]) {\r\n                                text.push(labels[i]);\r\n                            }\r\n                            text.push('</li>');\r\n                        }\r\n                    }\r\n\r\n                    text.push('</ul>');\r\n                    return text.join('');\r\n                },\r\n                legend: {\r\n                    labels: {\r\n                        generateLabels: function(chart) {\r\n                            var data = chart.data;\r\n                            if (data.labels.length && data.datasets.length) {\r\n                                return data.labels.map(function(label, i) {\r\n                                    var meta = chart.getDatasetMeta(0);\r\n                                    var ds = data.datasets[0];\r\n                                    var arc = meta.data[i];\r\n                                    var custom = arc && arc.custom || {};\r\n                                    var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n                                    var arcOpts = chart.options.elements.arc;\r\n                                    var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n                                    var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n                                    var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\r\n                                    return {\r\n                                        text: label,\r\n                                        fillStyle: fill,\r\n                                        strokeStyle: stroke,\r\n                                        lineWidth: bw,\r\n                                        hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n                                        // Extra data used for toggling the correct item\r\n                                        index: i\r\n                                    };\r\n                                });\r\n                            }\r\n                            return [];\r\n                        }\r\n                    },\r\n\r\n                    onClick: function(e, legendItem) {\r\n                        var index = legendItem.index;\r\n                        var chart = this.chart;\r\n                        var i, ilen, meta;\r\n\r\n                        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n                            meta = chart.getDatasetMeta(i);\r\n                            // toggle visibility of index if exists\r\n                            if (meta.data[index]) {\r\n                                meta.data[index].hidden = !meta.data[index].hidden;\r\n                            }\r\n                        }\r\n\r\n                        chart.update();\r\n                    }\r\n                },\r\n\r\n                // The percentage of the chart that we cut out of the middle.\r\n                cutoutPercentage: 50,\r\n\r\n                // The rotation of the chart, where the first data arc begins.\r\n                rotation: Math.PI * -0.5,\r\n\r\n                // The total circumference of the chart.\r\n                circumference: Math.PI * 2.0,\r\n\r\n                // Need to override these to give a nice default\r\n                tooltips: {\r\n                    callbacks: {\r\n                        title: function() {\r\n                            return '';\r\n                        },\r\n                        label: function(tooltipItem, data) {\r\n                            var dataLabel = data.labels[tooltipItem.index];\r\n                            var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\r\n                            if (helpers.isArray(dataLabel)) {\r\n                                // show value on first line of multiline label\r\n                                // need to clone because we are changing the value\r\n                                dataLabel = dataLabel.slice();\r\n                                dataLabel[0] += value;\r\n                            } else {\r\n                                dataLabel += value;\r\n                            }\r\n\r\n                            return dataLabel;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            defaults._set('pie', helpers.clone(defaults.doughnut));\r\n            defaults._set('pie', {\r\n                cutoutPercentage: 0\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\r\n                    dataElementType: elements.Arc,\r\n\r\n                    linkScales: helpers.noop,\r\n\r\n                    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\r\n                    getRingIndex: function(datasetIndex) {\r\n                        var ringIndex = 0;\r\n\r\n                        for (var j = 0; j < datasetIndex; ++j) {\r\n                            if (this.chart.isDatasetVisible(j)) {\r\n                                ++ringIndex;\r\n                            }\r\n                        }\r\n\r\n                        return ringIndex;\r\n                    },\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var chartArea = chart.chartArea;\r\n                        var opts = chart.options;\r\n                        var arcOpts = opts.elements.arc;\r\n                        var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\r\n                        var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\r\n                        var minSize = Math.min(availableWidth, availableHeight);\r\n                        var offset = { x: 0, y: 0 };\r\n                        var meta = me.getMeta();\r\n                        var cutoutPercentage = opts.cutoutPercentage;\r\n                        var circumference = opts.circumference;\r\n\r\n                        // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\r\n                        if (circumference < Math.PI * 2.0) {\r\n                            var startAngle = opts.rotation % (Math.PI * 2.0);\r\n                            startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\r\n                            var endAngle = startAngle + circumference;\r\n                            var start = { x: Math.cos(startAngle), y: Math.sin(startAngle) };\r\n                            var end = { x: Math.cos(endAngle), y: Math.sin(endAngle) };\r\n                            var contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\r\n                            var contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\r\n                            var contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\r\n                            var contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\r\n                            var cutout = cutoutPercentage / 100.0;\r\n                            var min = { x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout)) };\r\n                            var max = { x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout)) };\r\n                            var size = { width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5 };\r\n                            minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\r\n                            offset = { x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5 };\r\n                        }\r\n\r\n                        chart.borderWidth = me.getMaxBorderWidth(meta.data);\r\n                        chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\r\n                        chart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\r\n                        chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n                        chart.offsetX = offset.x * chart.outerRadius;\r\n                        chart.offsetY = offset.y * chart.outerRadius;\r\n\r\n                        meta.total = me.calculateTotal();\r\n\r\n                        me.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\r\n                        me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\r\n\r\n                        helpers.each(meta.data, function(arc, index) {\r\n                            me.updateElement(arc, index, reset);\r\n                        });\r\n                    },\r\n\r\n                    updateElement: function(arc, index, reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var chartArea = chart.chartArea;\r\n                        var opts = chart.options;\r\n                        var animationOpts = opts.animation;\r\n                        var centerX = (chartArea.left + chartArea.right) / 2;\r\n                        var centerY = (chartArea.top + chartArea.bottom) / 2;\r\n                        var startAngle = opts.rotation; // non reset case handled later\r\n                        var endAngle = opts.rotation; // non reset case handled later\r\n                        var dataset = me.getDataset();\r\n                        var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\r\n                        var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\r\n                        var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\r\n                        var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n\r\n                        helpers.extend(arc, {\r\n                            // Utility\r\n                            _datasetIndex: me.index,\r\n                            _index: index,\r\n\r\n                            // Desired view properties\r\n                            _model: {\r\n                                x: centerX + chart.offsetX,\r\n                                y: centerY + chart.offsetY,\r\n                                startAngle: startAngle,\r\n                                endAngle: endAngle,\r\n                                circumference: circumference,\r\n                                outerRadius: outerRadius,\r\n                                innerRadius: innerRadius,\r\n                                label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\r\n                            }\r\n                        });\r\n\r\n                        var model = arc._model;\r\n                        // Resets the visual styles\r\n                        this.removeHoverStyle(arc);\r\n\r\n                        // Set correct angles if not resetting\r\n                        if (!reset || !animationOpts.animateRotate) {\r\n                            if (index === 0) {\r\n                                model.startAngle = opts.rotation;\r\n                            } else {\r\n                                model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\r\n                            }\r\n\r\n                            model.endAngle = model.startAngle + model.circumference;\r\n                        }\r\n\r\n                        arc.pivot();\r\n                    },\r\n\r\n                    removeHoverStyle: function(arc) {\r\n                        Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n                    },\r\n\r\n                    calculateTotal: function() {\r\n                        var dataset = this.getDataset();\r\n                        var meta = this.getMeta();\r\n                        var total = 0;\r\n                        var value;\r\n\r\n                        helpers.each(meta.data, function(element, index) {\r\n                            value = dataset.data[index];\r\n                            if (!isNaN(value) && !element.hidden) {\r\n                                total += Math.abs(value);\r\n                            }\r\n                        });\r\n\r\n                        /* if (total === 0) {\r\n                            total = NaN;\r\n                        }*/\r\n\r\n                        return total;\r\n                    },\r\n\r\n                    calculateCircumference: function(value) {\r\n                        var total = this.getMeta().total;\r\n                        if (total > 0 && !isNaN(value)) {\r\n                            return (Math.PI * 2.0) * (Math.abs(value) / total);\r\n                        }\r\n                        return 0;\r\n                    },\r\n\r\n                    // gets the max border or hover width to properly scale pie charts\r\n                    getMaxBorderWidth: function(arcs) {\r\n                        var max = 0;\r\n                        var index = this.index;\r\n                        var length = arcs.length;\r\n                        var borderWidth;\r\n                        var hoverWidth;\r\n\r\n                        for (var i = 0; i < length; i++) {\r\n                            borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\r\n                            hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\r\n\r\n                            max = borderWidth > max ? borderWidth : max;\r\n                            max = hoverWidth > max ? hoverWidth : max;\r\n                        }\r\n                        return max;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 12: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('line', {\r\n                showLines: true,\r\n                spanGaps: false,\r\n\r\n                hover: {\r\n                    mode: 'label'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'category',\r\n                        id: 'x-axis-0'\r\n                    }],\r\n                    yAxes: [{\r\n                        type: 'linear',\r\n                        id: 'y-axis-0'\r\n                    }]\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                function lineEnabled(dataset, options) {\r\n                    return helpers.valueOrDefault(dataset.showLine, options.showLines);\r\n                }\r\n\r\n                Chart.controllers.line = Chart.DatasetController.extend({\r\n                    datasetElementType: elements.Line,\r\n\r\n                    dataElementType: elements.Point,\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var line = meta.dataset;\r\n                        var points = meta.data || [];\r\n                        var options = me.chart.options;\r\n                        var lineElementOptions = options.elements.line;\r\n                        var scale = me.getScaleForId(meta.yAxisID);\r\n                        var i, ilen, custom;\r\n                        var dataset = me.getDataset();\r\n                        var showLine = lineEnabled(dataset, options);\r\n\r\n                        // Update Line\r\n                        if (showLine) {\r\n                            custom = line.custom || {};\r\n\r\n                            // Compatibility: If the properties are defined with only the old name, use those values\r\n                            if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n                                dataset.lineTension = dataset.tension;\r\n                            }\r\n\r\n                            // Utility\r\n                            line._scale = scale;\r\n                            line._datasetIndex = me.index;\r\n                            // Data\r\n                            line._children = points;\r\n                            // Model\r\n                            line._model = {\r\n                                // Appearance\r\n                                // The default behavior of lines is to break at null values, according\r\n                                // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\r\n                                // This option gives lines the ability to span gaps\r\n                                spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\r\n                                tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n                                backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n                                borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n                                borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n                                borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n                                borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n                                borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n                                borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n                                fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n                                steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\r\n                                cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\r\n                            };\r\n\r\n                            line.pivot();\r\n                        }\r\n\r\n                        // Update Points\r\n                        for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                            me.updateElement(points[i], i, reset);\r\n                        }\r\n\r\n                        if (showLine && line._model.tension !== 0) {\r\n                            me.updateBezierControlPoints();\r\n                        }\r\n\r\n                        // Now pivot the point for animation\r\n                        for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                            points[i].pivot();\r\n                        }\r\n                    },\r\n\r\n                    getPointBackgroundColor: function(point, index) {\r\n                        var backgroundColor = this.chart.options.elements.point.backgroundColor;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (custom.backgroundColor) {\r\n                            backgroundColor = custom.backgroundColor;\r\n                        } else if (dataset.pointBackgroundColor) {\r\n                            backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\r\n                        } else if (dataset.backgroundColor) {\r\n                            backgroundColor = dataset.backgroundColor;\r\n                        }\r\n\r\n                        return backgroundColor;\r\n                    },\r\n\r\n                    getPointBorderColor: function(point, index) {\r\n                        var borderColor = this.chart.options.elements.point.borderColor;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (custom.borderColor) {\r\n                            borderColor = custom.borderColor;\r\n                        } else if (dataset.pointBorderColor) {\r\n                            borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\r\n                        } else if (dataset.borderColor) {\r\n                            borderColor = dataset.borderColor;\r\n                        }\r\n\r\n                        return borderColor;\r\n                    },\r\n\r\n                    getPointBorderWidth: function(point, index) {\r\n                        var borderWidth = this.chart.options.elements.point.borderWidth;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (!isNaN(custom.borderWidth)) {\r\n                            borderWidth = custom.borderWidth;\r\n                        } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\r\n                            borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\r\n                        } else if (!isNaN(dataset.borderWidth)) {\r\n                            borderWidth = dataset.borderWidth;\r\n                        }\r\n\r\n                        return borderWidth;\r\n                    },\r\n\r\n                    updateElement: function(point, index, reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var custom = point.custom || {};\r\n                        var dataset = me.getDataset();\r\n                        var datasetIndex = me.index;\r\n                        var value = dataset.data[index];\r\n                        var yScale = me.getScaleForId(meta.yAxisID);\r\n                        var xScale = me.getScaleForId(meta.xAxisID);\r\n                        var pointOptions = me.chart.options.elements.point;\r\n                        var x, y;\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n                            dataset.pointRadius = dataset.radius;\r\n                        }\r\n                        if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\r\n                            dataset.pointHitRadius = dataset.hitRadius;\r\n                        }\r\n\r\n                        x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\r\n                        y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\r\n\r\n                        // Utility\r\n                        point._xScale = xScale;\r\n                        point._yScale = yScale;\r\n                        point._datasetIndex = datasetIndex;\r\n                        point._index = index;\r\n\r\n                        // Desired view properties\r\n                        point._model = {\r\n                            x: x,\r\n                            y: y,\r\n                            skip: custom.skip || isNaN(x) || isNaN(y),\r\n                            // Appearance\r\n                            radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\r\n                            pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\r\n                            backgroundColor: me.getPointBackgroundColor(point, index),\r\n                            borderColor: me.getPointBorderColor(point, index),\r\n                            borderWidth: me.getPointBorderWidth(point, index),\r\n                            tension: meta.dataset._model ? meta.dataset._model.tension : 0,\r\n                            steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\r\n                            // Tooltip\r\n                            hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\r\n                        };\r\n                    },\r\n\r\n                    calculatePointY: function(value, index, datasetIndex) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var yScale = me.getScaleForId(meta.yAxisID);\r\n                        var sumPos = 0;\r\n                        var sumNeg = 0;\r\n                        var i, ds, dsMeta;\r\n\r\n                        if (yScale.options.stacked) {\r\n                            for (i = 0; i < datasetIndex; i++) {\r\n                                ds = chart.data.datasets[i];\r\n                                dsMeta = chart.getDatasetMeta(i);\r\n                                if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\r\n                                    var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\r\n                                    if (stackedRightValue < 0) {\r\n                                        sumNeg += stackedRightValue || 0;\r\n                                    } else {\r\n                                        sumPos += stackedRightValue || 0;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            var rightValue = Number(yScale.getRightValue(value));\r\n                            if (rightValue < 0) {\r\n                                return yScale.getPixelForValue(sumNeg + rightValue);\r\n                            }\r\n                            return yScale.getPixelForValue(sumPos + rightValue);\r\n                        }\r\n\r\n                        return yScale.getPixelForValue(value);\r\n                    },\r\n\r\n                    updateBezierControlPoints: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var area = me.chart.chartArea;\r\n                        var points = (meta.data || []);\r\n                        var i, ilen, point, model, controlPoints;\r\n\r\n                        // Only consider points that are drawn in case the spanGaps option is used\r\n                        if (meta.dataset._model.spanGaps) {\r\n                            points = points.filter(function(pt) {\r\n                                return !pt._model.skip;\r\n                            });\r\n                        }\r\n\r\n                        function capControlPoint(pt, min, max) {\r\n                            return Math.max(Math.min(pt, max), min);\r\n                        }\r\n\r\n                        if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\r\n                            helpers.splineCurveMonotone(points);\r\n                        } else {\r\n                            for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                                point = points[i];\r\n                                model = point._model;\r\n                                controlPoints = helpers.splineCurve(\r\n                                    helpers.previousItem(points, i)._model,\r\n                                    model,\r\n                                    helpers.nextItem(points, i)._model,\r\n                                    meta.dataset._model.tension\r\n                                );\r\n                                model.controlPointPreviousX = controlPoints.previous.x;\r\n                                model.controlPointPreviousY = controlPoints.previous.y;\r\n                                model.controlPointNextX = controlPoints.next.x;\r\n                                model.controlPointNextY = controlPoints.next.y;\r\n                            }\r\n                        }\r\n\r\n                        if (me.chart.options.elements.line.capBezierPoints) {\r\n                            for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                                model = points[i]._model;\r\n                                model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\r\n                                model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\r\n                                model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\r\n                                model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var points = meta.data || [];\r\n                        var area = chart.chartArea;\r\n                        var ilen = points.length;\r\n                        var i = 0;\r\n\r\n                        helpers.canvas.clipArea(chart.ctx, area);\r\n\r\n                        if (lineEnabled(me.getDataset(), chart.options)) {\r\n                            meta.dataset.draw();\r\n                        }\r\n\r\n                        helpers.canvas.unclipArea(chart.ctx);\r\n\r\n                        // Draw the points\r\n                        for (; i < ilen; ++i) {\r\n                            points[i].draw(area);\r\n                        }\r\n                    },\r\n\r\n                    setHoverStyle: function(point) {\r\n                        // Point\r\n                        var dataset = this.chart.data.datasets[point._datasetIndex];\r\n                        var index = point._index;\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n\r\n                        model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n                        model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    removeHoverStyle: function(point) {\r\n                        var me = this;\r\n                        var dataset = me.chart.data.datasets[point._datasetIndex];\r\n                        var index = point._index;\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n                            dataset.pointRadius = dataset.radius;\r\n                        }\r\n\r\n                        model.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\r\n                        model.backgroundColor = me.getPointBackgroundColor(point, index);\r\n                        model.borderColor = me.getPointBorderColor(point, index);\r\n                        model.borderWidth = me.getPointBorderWidth(point, index);\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 13: [function(require, module, exports) {\r\n            /* global window: false */\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                animation: {\r\n                    duration: 1000,\r\n                    easing: 'easeOutQuart',\r\n                    onProgress: helpers.noop,\r\n                    onComplete: helpers.noop\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Animation = Element.extend({\r\n                    chart: null, // the animation associated chart instance\r\n                    currentStep: 0, // the current animation step\r\n                    numSteps: 60, // default number of steps\r\n                    easing: '', // the easing to use for this animation\r\n                    render: null, // render function used by the animation service\r\n\r\n                    onAnimationProgress: null, // user specified callback to fire on each step of the animation\r\n                    onAnimationComplete: null, // user specified callback to fire when the animation finishes\r\n                });\r\n\r\n                Chart.animationService = {\r\n                    frameDuration: 17,\r\n                    animations: [],\r\n                    dropFrames: 0,\r\n                    request: null,\r\n\r\n                    /**\r\n                     * @param {Chart} chart - The chart to animate.\r\n                     * @param {Chart.Animation} animation - The animation that we will animate.\r\n                     * @param {Number} duration - The animation duration in ms.\r\n                     * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\r\n                     */\r\n                    addAnimation: function(chart, animation, duration, lazy) {\r\n                        var animations = this.animations;\r\n                        var i, ilen;\r\n\r\n                        animation.chart = chart;\r\n\r\n                        if (!lazy) {\r\n                            chart.animating = true;\r\n                        }\r\n\r\n                        for (i = 0, ilen = animations.length; i < ilen; ++i) {\r\n                            if (animations[i].chart === chart) {\r\n                                animations[i] = animation;\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        animations.push(animation);\r\n\r\n                        // If there are no animations queued, manually kickstart a digest, for lack of a better word\r\n                        if (animations.length === 1) {\r\n                            this.requestAnimationFrame();\r\n                        }\r\n                    },\r\n\r\n                    cancelAnimation: function(chart) {\r\n                        var index = helpers.findIndex(this.animations, function(animation) {\r\n                            return animation.chart === chart;\r\n                        });\r\n\r\n                        if (index !== -1) {\r\n                            this.animations.splice(index, 1);\r\n                            chart.animating = false;\r\n                        }\r\n                    },\r\n\r\n                    requestAnimationFrame: function() {\r\n                        var me = this;\r\n                        if (me.request === null) {\r\n                            // Skip animation frame requests until the active one is executed.\r\n                            // This can happen when processing mouse events, e.g. 'mousemove'\r\n                            // and 'mouseout' events will trigger multiple renders.\r\n                            me.request = helpers.requestAnimFrame.call(window, function() {\r\n                                me.request = null;\r\n                                me.startDigest();\r\n                            });\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    startDigest: function() {\r\n                        var me = this;\r\n                        var startTime = Date.now();\r\n                        var framesToDrop = 0;\r\n\r\n                        if (me.dropFrames > 1) {\r\n                            framesToDrop = Math.floor(me.dropFrames);\r\n                            me.dropFrames = me.dropFrames % 1;\r\n                        }\r\n\r\n                        me.advance(1 + framesToDrop);\r\n\r\n                        var endTime = Date.now();\r\n\r\n                        me.dropFrames += (endTime - startTime) / me.frameDuration;\r\n\r\n                        // Do we have more stuff to animate?\r\n                        if (me.animations.length > 0) {\r\n                            me.requestAnimationFrame();\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    advance: function(count) {\r\n                        var animations = this.animations;\r\n                        var animation, chart;\r\n                        var i = 0;\r\n\r\n                        while (i < animations.length) {\r\n                            animation = animations[i];\r\n                            chart = animation.chart;\r\n\r\n                            animation.currentStep = (animation.currentStep || 0) + count;\r\n                            animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\r\n\r\n                            helpers.callback(animation.render, [chart, animation], chart);\r\n                            helpers.callback(animation.onAnimationProgress, [animation], chart);\r\n\r\n                            if (animation.currentStep >= animation.numSteps) {\r\n                                helpers.callback(animation.onAnimationComplete, [animation], chart);\r\n                                chart.animating = false;\r\n                                animations.splice(i, 1);\r\n                            } else {\r\n                                ++i;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.Animation instead\r\n                 * @prop Chart.Animation#animationObject\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 */\r\n                Object.defineProperty(Chart.Animation.prototype, 'animationObject', {\r\n                    get: function() {\r\n                        return this;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.Animation#chart instead\r\n                 * @prop Chart.Animation#chartInstance\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 */\r\n                Object.defineProperty(Chart.Animation.prototype, 'chartInstance', {\r\n                    get: function() {\r\n                        return this.chart;\r\n                    },\r\n                    set: function(value) {\r\n                        this.chart = value;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 14: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var Interaction = require(19);\r\n            var layouts = require(21);\r\n            var platform = require(39);\r\n            var plugins = require(22);\r\n\r\n            module.exports = function(Chart) {\r\n                // Create a dictionary of chart types, to allow for extension of existing types\r\n                Chart.types = {};\r\n\r\n                // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\r\n                // Destroy method on the chart will remove the instance of the chart from this reference.\r\n                Chart.instances = {};\r\n\r\n                // Controllers available for dataset visualization eg. bar, line, slice, etc.\r\n                Chart.controllers = {};\r\n\r\n                /**\r\n                 * Initializes the given config with global and chart default values.\r\n                 */\r\n                function initConfig(config) {\r\n                    config = config || {};\r\n\r\n                    // Do NOT use configMerge() for the data object because this method merges arrays\r\n                    // and so would change references to labels and datasets, preventing data updates.\r\n                    var data = config.data = config.data || {};\r\n                    data.datasets = data.datasets || [];\r\n                    data.labels = data.labels || [];\r\n\r\n                    config.options = helpers.configMerge(\r\n                        defaults.global,\r\n                        defaults[config.type],\r\n                        config.options || {});\r\n\r\n                    return config;\r\n                }\r\n\r\n                /**\r\n                 * Updates the config of the chart\r\n                 * @param chart {Chart} chart to update the options for\r\n                 */\r\n                function updateConfig(chart) {\r\n                    var newOptions = chart.options;\r\n\r\n                    helpers.each(chart.scales, function(scale) {\r\n                        layouts.removeBox(chart, scale);\r\n                    });\r\n\r\n                    newOptions = helpers.configMerge(\r\n                        Chart.defaults.global,\r\n                        Chart.defaults[chart.config.type],\r\n                        newOptions);\r\n\r\n                    chart.options = chart.config.options = newOptions;\r\n                    chart.ensureScalesHaveIDs();\r\n                    chart.buildOrUpdateScales();\r\n                    // Tooltip\r\n                    chart.tooltip._options = newOptions.tooltips;\r\n                    chart.tooltip.initialize();\r\n                }\r\n\r\n                function positionIsHorizontal(position) {\r\n                    return position === 'top' || position === 'bottom';\r\n                }\r\n\r\n                helpers.extend(Chart.prototype, /** @lends Chart */ {\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    construct: function(item, config) {\r\n                        var me = this;\r\n\r\n                        config = initConfig(config);\r\n\r\n                        var context = platform.acquireContext(item, config);\r\n                        var canvas = context && context.canvas;\r\n                        var height = canvas && canvas.height;\r\n                        var width = canvas && canvas.width;\r\n\r\n                        me.id = helpers.uid();\r\n                        me.ctx = context;\r\n                        me.canvas = canvas;\r\n                        me.config = config;\r\n                        me.width = width;\r\n                        me.height = height;\r\n                        me.aspectRatio = height ? width / height : null;\r\n                        me.options = config.options;\r\n                        me._bufferedRender = false;\r\n\r\n                        /**\r\n                         * Provided for backward compatibility, Chart and Chart.Controller have been merged,\r\n                         * the \"instance\" still need to be defined since it might be called from plugins.\r\n                         * @prop Chart#chart\r\n                         * @deprecated since version 2.6.0\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        me.chart = me;\r\n                        me.controller = me; // chart.chart.controller #inception\r\n\r\n                        // Add the chart instance to the global namespace\r\n                        Chart.instances[me.id] = me;\r\n\r\n                        // Define alias to the config data: `chart.data === chart.config.data`\r\n                        Object.defineProperty(me, 'data', {\r\n                            get: function() {\r\n                                return me.config.data;\r\n                            },\r\n                            set: function(value) {\r\n                                me.config.data = value;\r\n                            }\r\n                        });\r\n\r\n                        if (!context || !canvas) {\r\n                            // The given item is not a compatible context2d element, let's return before finalizing\r\n                            // the chart initialization but after setting basic chart / controller properties that\r\n                            // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\r\n                            // https://github.com/chartjs/Chart.js/issues/2807\r\n                            console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n                            return;\r\n                        }\r\n\r\n                        me.initialize();\r\n                        me.update();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    initialize: function() {\r\n                        var me = this;\r\n\r\n                        // Before init plugin notification\r\n                        plugins.notify(me, 'beforeInit');\r\n\r\n                        helpers.retinaScale(me, me.options.devicePixelRatio);\r\n\r\n                        me.bindEvents();\r\n\r\n                        if (me.options.responsive) {\r\n                            // Initial resize before chart draws (must be silent to preserve initial animations).\r\n                            me.resize(true);\r\n                        }\r\n\r\n                        // Make sure scales have IDs and are built before we build any controllers.\r\n                        me.ensureScalesHaveIDs();\r\n                        me.buildOrUpdateScales();\r\n                        me.initToolTip();\r\n\r\n                        // After init plugin notification\r\n                        plugins.notify(me, 'afterInit');\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    clear: function() {\r\n                        helpers.canvas.clear(this);\r\n                        return this;\r\n                    },\r\n\r\n                    stop: function() {\r\n                        // Stops any current animation loop occurring\r\n                        Chart.animationService.cancelAnimation(this);\r\n                        return this;\r\n                    },\r\n\r\n                    resize: function(silent) {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        var canvas = me.canvas;\r\n                        var aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\r\n\r\n                        // the canvas render width and height will be casted to integers so make sure that\r\n                        // the canvas display style uses the same integer values to avoid blurring effect.\r\n\r\n                        // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\r\n                        var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\r\n                        var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\r\n\r\n                        if (me.width === newWidth && me.height === newHeight) {\r\n                            return;\r\n                        }\r\n\r\n                        canvas.width = me.width = newWidth;\r\n                        canvas.height = me.height = newHeight;\r\n                        canvas.style.width = newWidth + 'px';\r\n                        canvas.style.height = newHeight + 'px';\r\n\r\n                        helpers.retinaScale(me, options.devicePixelRatio);\r\n\r\n                        if (!silent) {\r\n                            // Notify any plugins about the resize\r\n                            var newSize = { width: newWidth, height: newHeight };\r\n                            plugins.notify(me, 'resize', [newSize]);\r\n\r\n                            // Notify of resize\r\n                            if (me.options.onResize) {\r\n                                me.options.onResize(me, newSize);\r\n                            }\r\n\r\n                            me.stop();\r\n                            me.update(me.options.responsiveAnimationDuration);\r\n                        }\r\n                    },\r\n\r\n                    ensureScalesHaveIDs: function() {\r\n                        var options = this.options;\r\n                        var scalesOptions = options.scales || {};\r\n                        var scaleOptions = options.scale;\r\n\r\n                        helpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\r\n                            xAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\r\n                        });\r\n\r\n                        helpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\r\n                            yAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\r\n                        });\r\n\r\n                        if (scaleOptions) {\r\n                            scaleOptions.id = scaleOptions.id || 'scale';\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Builds a map of scale ID to scale object for future lookup.\r\n                     */\r\n                    buildOrUpdateScales: function() {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        var scales = me.scales || {};\r\n                        var items = [];\r\n                        var updated = Object.keys(scales).reduce(function(obj, id) {\r\n                            obj[id] = false;\r\n                            return obj;\r\n                        }, {});\r\n\r\n                        if (options.scales) {\r\n                            items = items.concat(\r\n                                (options.scales.xAxes || []).map(function(xAxisOptions) {\r\n                                    return { options: xAxisOptions, dtype: 'category', dposition: 'bottom' };\r\n                                }),\r\n                                (options.scales.yAxes || []).map(function(yAxisOptions) {\r\n                                    return { options: yAxisOptions, dtype: 'linear', dposition: 'left' };\r\n                                })\r\n                            );\r\n                        }\r\n\r\n                        if (options.scale) {\r\n                            items.push({\r\n                                options: options.scale,\r\n                                dtype: 'radialLinear',\r\n                                isDefault: true,\r\n                                dposition: 'chartArea'\r\n                            });\r\n                        }\r\n\r\n                        helpers.each(items, function(item) {\r\n                            var scaleOptions = item.options;\r\n                            var id = scaleOptions.id;\r\n                            var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\r\n\r\n                            if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\r\n                                scaleOptions.position = item.dposition;\r\n                            }\r\n\r\n                            updated[id] = true;\r\n                            var scale = null;\r\n                            if (id in scales && scales[id].type === scaleType) {\r\n                                scale = scales[id];\r\n                                scale.options = scaleOptions;\r\n                                scale.ctx = me.ctx;\r\n                                scale.chart = me;\r\n                            } else {\r\n                                var scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\r\n                                if (!scaleClass) {\r\n                                    return;\r\n                                }\r\n                                scale = new scaleClass({\r\n                                    id: id,\r\n                                    type: scaleType,\r\n                                    options: scaleOptions,\r\n                                    ctx: me.ctx,\r\n                                    chart: me\r\n                                });\r\n                                scales[scale.id] = scale;\r\n                            }\r\n\r\n                            scale.mergeTicksOptions();\r\n\r\n                            // TODO(SB): I think we should be able to remove this custom case (options.scale)\r\n                            // and consider it as a regular scale part of the \"scales\"\" map only! This would\r\n                            // make the logic easier and remove some useless? custom code.\r\n                            if (item.isDefault) {\r\n                                me.scale = scale;\r\n                            }\r\n                        });\r\n                        // clear up discarded scales\r\n                        helpers.each(updated, function(hasUpdated, id) {\r\n                            if (!hasUpdated) {\r\n                                delete scales[id];\r\n                            }\r\n                        });\r\n\r\n                        me.scales = scales;\r\n\r\n                        Chart.scaleService.addScalesToLayout(this);\r\n                    },\r\n\r\n                    buildOrUpdateControllers: function() {\r\n                        var me = this;\r\n                        var types = [];\r\n                        var newControllers = [];\r\n\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            var meta = me.getDatasetMeta(datasetIndex);\r\n                            var type = dataset.type || me.config.type;\r\n\r\n                            if (meta.type && meta.type !== type) {\r\n                                me.destroyDatasetMeta(datasetIndex);\r\n                                meta = me.getDatasetMeta(datasetIndex);\r\n                            }\r\n                            meta.type = type;\r\n\r\n                            types.push(meta.type);\r\n\r\n                            if (meta.controller) {\r\n                                meta.controller.updateIndex(datasetIndex);\r\n                                meta.controller.linkScales();\r\n                            } else {\r\n                                var ControllerClass = Chart.controllers[meta.type];\r\n                                if (ControllerClass === undefined) {\r\n                                    throw new Error('\"' + meta.type + '\" is not a chart type.');\r\n                                }\r\n\r\n                                meta.controller = new ControllerClass(me, datasetIndex);\r\n                                newControllers.push(meta.controller);\r\n                            }\r\n                        }, me);\r\n\r\n                        return newControllers;\r\n                    },\r\n\r\n                    /**\r\n                     * Reset the elements of all datasets\r\n                     * @private\r\n                     */\r\n                    resetElements: function() {\r\n                        var me = this;\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            me.getDatasetMeta(datasetIndex).controller.reset();\r\n                        }, me);\r\n                    },\r\n\r\n                    /**\r\n                    * Resets the chart back to it's state before the initial animation\r\n                    */\r\n                    reset: function() {\r\n                        this.resetElements();\r\n                        this.tooltip.initialize();\r\n                    },\r\n\r\n                    update: function(config) {\r\n                        var me = this;\r\n\r\n                        if (!config || typeof config !== 'object') {\r\n                            // backwards compatibility\r\n                            config = {\r\n                                duration: config,\r\n                                lazy: arguments[1]\r\n                            };\r\n                        }\r\n\r\n                        updateConfig(me);\r\n\r\n                        // plugins options references might have change, let's invalidate the cache\r\n                        // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\r\n                        plugins._invalidate(me);\r\n\r\n                        if (plugins.notify(me, 'beforeUpdate') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // In case the entire data object changed\r\n                        me.tooltip._data = me.data;\r\n\r\n                        // Make sure dataset controllers are updated and new controllers are reset\r\n                        var newControllers = me.buildOrUpdateControllers();\r\n\r\n                        // Make sure all dataset controllers have correct meta data counts\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\r\n                        }, me);\r\n\r\n                        me.updateLayout();\r\n\r\n                        // Can only reset the new controllers after the scales have been updated\r\n                        if (me.options.animation && me.options.animation.duration) {\r\n                            helpers.each(newControllers, function(controller) {\r\n                                controller.reset();\r\n                            });\r\n                        }\r\n\r\n                        me.updateDatasets();\r\n\r\n                        // Need to reset tooltip in case it is displayed with elements that are removed\r\n                        // after update.\r\n                        me.tooltip.initialize();\r\n\r\n                        // Last active contains items that were previously in the tooltip.\r\n                        // When we reset the tooltip, we need to clear it\r\n                        me.lastActive = [];\r\n\r\n                        // Do this before render so that any plugins that need final scale updates can use it\r\n                        plugins.notify(me, 'afterUpdate');\r\n\r\n                        if (me._bufferedRender) {\r\n                            me._bufferedRequest = {\r\n                                duration: config.duration,\r\n                                easing: config.easing,\r\n                                lazy: config.lazy\r\n                            };\r\n                        } else {\r\n                            me.render(config);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\r\n                     * hook, in which case, plugins will not be called on `afterLayout`.\r\n                     * @private\r\n                     */\r\n                    updateLayout: function() {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeLayout') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        layouts.update(this, this.width, this.height);\r\n\r\n                        /**\r\n                         * Provided for backward compatibility, use `afterLayout` instead.\r\n                         * @method IPlugin#afterScaleUpdate\r\n                         * @deprecated since version 2.5.0\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        plugins.notify(me, 'afterScaleUpdate');\r\n                        plugins.notify(me, 'afterLayout');\r\n                    },\r\n\r\n                    /**\r\n                     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\r\n                     * @private\r\n                     */\r\n                    updateDatasets: function() {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                            me.updateDataset(i);\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterDatasetsUpdate');\r\n                    },\r\n\r\n                    /**\r\n                     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\r\n                     * @private\r\n                     */\r\n                    updateDataset: function(index) {\r\n                        var me = this;\r\n                        var meta = me.getDatasetMeta(index);\r\n                        var args = {\r\n                            meta: meta,\r\n                            index: index\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        meta.controller.update();\r\n\r\n                        plugins.notify(me, 'afterDatasetUpdate', [args]);\r\n                    },\r\n\r\n                    render: function(config) {\r\n                        var me = this;\r\n\r\n                        if (!config || typeof config !== 'object') {\r\n                            // backwards compatibility\r\n                            config = {\r\n                                duration: config,\r\n                                lazy: arguments[1]\r\n                            };\r\n                        }\r\n\r\n                        var duration = config.duration;\r\n                        var lazy = config.lazy;\r\n\r\n                        if (plugins.notify(me, 'beforeRender') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        var animationOptions = me.options.animation;\r\n                        var onComplete = function(animation) {\r\n                            plugins.notify(me, 'afterRender');\r\n                            helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\r\n                        };\r\n\r\n                        if (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\r\n                            var animation = new Chart.Animation({\r\n                                numSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\r\n                                easing: config.easing || animationOptions.easing,\r\n\r\n                                render: function(chart, animationObject) {\r\n                                    var easingFunction = helpers.easing.effects[animationObject.easing];\r\n                                    var currentStep = animationObject.currentStep;\r\n                                    var stepDecimal = currentStep / animationObject.numSteps;\r\n\r\n                                    chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\r\n                                },\r\n\r\n                                onAnimationProgress: animationOptions.onProgress,\r\n                                onAnimationComplete: onComplete\r\n                            });\r\n\r\n                            Chart.animationService.addAnimation(me, animation, duration, lazy);\r\n                        } else {\r\n                            me.draw();\r\n\r\n                            // See https://github.com/chartjs/Chart.js/issues/3781\r\n                            onComplete(new Chart.Animation({ numSteps: 0, chart: me }));\r\n                        }\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    draw: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        me.clear();\r\n\r\n                        if (helpers.isNullOrUndef(easingValue)) {\r\n                            easingValue = 1;\r\n                        }\r\n\r\n                        me.transition(easingValue);\r\n\r\n                        if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Draw all the scales\r\n                        helpers.each(me.boxes, function(box) {\r\n                            box.draw(me.chartArea);\r\n                        }, me);\r\n\r\n                        if (me.scale) {\r\n                            me.scale.draw();\r\n                        }\r\n\r\n                        me.drawDatasets(easingValue);\r\n                        me._drawTooltip(easingValue);\r\n\r\n                        plugins.notify(me, 'afterDraw', [easingValue]);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    transition: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\r\n                            if (me.isDatasetVisible(i)) {\r\n                                me.getDatasetMeta(i).controller.transition(easingValue);\r\n                            }\r\n                        }\r\n\r\n                        me.tooltip.transition(easingValue);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\r\n                     * @private\r\n                     */\r\n                    drawDatasets: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Draw datasets reversed to support proper line stacking\r\n                        for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\r\n                            if (me.isDatasetVisible(i)) {\r\n                                me.drawDataset(i, easingValue);\r\n                            }\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\r\n                     * @private\r\n                     */\r\n                    drawDataset: function(index, easingValue) {\r\n                        var me = this;\r\n                        var meta = me.getDatasetMeta(index);\r\n                        var args = {\r\n                            meta: meta,\r\n                            index: index,\r\n                            easingValue: easingValue\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        meta.controller.draw(easingValue);\r\n\r\n                        plugins.notify(me, 'afterDatasetDraw', [args]);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\r\n                     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\r\n                     * @private\r\n                     */\r\n                    _drawTooltip: function(easingValue) {\r\n                        var me = this;\r\n                        var tooltip = me.tooltip;\r\n                        var args = {\r\n                            tooltip: tooltip,\r\n                            easingValue: easingValue\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        tooltip.draw();\r\n\r\n                        plugins.notify(me, 'afterTooltipDraw', [args]);\r\n                    },\r\n\r\n                    // Get the single element that was clicked on\r\n                    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\r\n                    getElementAtEvent: function(e) {\r\n                        return Interaction.modes.single(this, e);\r\n                    },\r\n\r\n                    getElementsAtEvent: function(e) {\r\n                        return Interaction.modes.label(this, e, { intersect: true });\r\n                    },\r\n\r\n                    getElementsAtXAxis: function(e) {\r\n                        return Interaction.modes['x-axis'](this, e, { intersect: true });\r\n                    },\r\n\r\n                    getElementsAtEventForMode: function(e, mode, options) {\r\n                        var method = Interaction.modes[mode];\r\n                        if (typeof method === 'function') {\r\n                            return method(this, e, options);\r\n                        }\r\n\r\n                        return [];\r\n                    },\r\n\r\n                    getDatasetAtEvent: function(e) {\r\n                        return Interaction.modes.dataset(this, e, { intersect: true });\r\n                    },\r\n\r\n                    getDatasetMeta: function(datasetIndex) {\r\n                        var me = this;\r\n                        var dataset = me.data.datasets[datasetIndex];\r\n                        if (!dataset._meta) {\r\n                            dataset._meta = {};\r\n                        }\r\n\r\n                        var meta = dataset._meta[me.id];\r\n                        if (!meta) {\r\n                            meta = dataset._meta[me.id] = {\r\n                                type: null,\r\n                                data: [],\r\n                                dataset: null,\r\n                                controller: null,\r\n                                hidden: null,\t\t\t// See isDatasetVisible() comment\r\n                                xAxisID: null,\r\n                                yAxisID: null\r\n                            };\r\n                        }\r\n\r\n                        return meta;\r\n                    },\r\n\r\n                    getVisibleDatasetCount: function() {\r\n                        var count = 0;\r\n                        for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n                            if (this.isDatasetVisible(i)) {\r\n                                count++;\r\n                            }\r\n                        }\r\n                        return count;\r\n                    },\r\n\r\n                    isDatasetVisible: function(datasetIndex) {\r\n                        var meta = this.getDatasetMeta(datasetIndex);\r\n\r\n                        // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\r\n                        // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\r\n                        return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\r\n                    },\r\n\r\n                    generateLegend: function() {\r\n                        return this.options.legendCallback(this);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    destroyDatasetMeta: function(datasetIndex) {\r\n                        var id = this.id;\r\n                        var dataset = this.data.datasets[datasetIndex];\r\n                        var meta = dataset._meta && dataset._meta[id];\r\n\r\n                        if (meta) {\r\n                            meta.controller.destroy();\r\n                            delete dataset._meta[id];\r\n                        }\r\n                    },\r\n\r\n                    destroy: function() {\r\n                        var me = this;\r\n                        var canvas = me.canvas;\r\n                        var i, ilen;\r\n\r\n                        me.stop();\r\n\r\n                        // dataset controllers need to cleanup associated data\r\n                        for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                            me.destroyDatasetMeta(i);\r\n                        }\r\n\r\n                        if (canvas) {\r\n                            me.unbindEvents();\r\n                            helpers.canvas.clear(me);\r\n                            platform.releaseContext(me.ctx);\r\n                            me.canvas = null;\r\n                            me.ctx = null;\r\n                        }\r\n\r\n                        plugins.notify(me, 'destroy');\r\n\r\n                        delete Chart.instances[me.id];\r\n                    },\r\n\r\n                    toBase64Image: function() {\r\n                        return this.canvas.toDataURL.apply(this.canvas, arguments);\r\n                    },\r\n\r\n                    initToolTip: function() {\r\n                        var me = this;\r\n                        me.tooltip = new Chart.Tooltip({\r\n                            _chart: me,\r\n                            _chartInstance: me, // deprecated, backward compatibility\r\n                            _data: me.data,\r\n                            _options: me.options.tooltips\r\n                        }, me);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    bindEvents: function() {\r\n                        var me = this;\r\n                        var listeners = me._listeners = {};\r\n                        var listener = function() {\r\n                            me.eventHandler.apply(me, arguments);\r\n                        };\r\n\r\n                        helpers.each(me.options.events, function(type) {\r\n                            platform.addEventListener(me, type, listener);\r\n                            listeners[type] = listener;\r\n                        });\r\n\r\n                        // Elements used to detect size change should not be injected for non responsive charts.\r\n                        // See https://github.com/chartjs/Chart.js/issues/2210\r\n                        if (me.options.responsive) {\r\n                            listener = function() {\r\n                                me.resize();\r\n                            };\r\n\r\n                            platform.addEventListener(me, 'resize', listener);\r\n                            listeners.resize = listener;\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    unbindEvents: function() {\r\n                        var me = this;\r\n                        var listeners = me._listeners;\r\n                        if (!listeners) {\r\n                            return;\r\n                        }\r\n\r\n                        delete me._listeners;\r\n                        helpers.each(listeners, function(listener, type) {\r\n                            platform.removeEventListener(me, type, listener);\r\n                        });\r\n                    },\r\n\r\n                    updateHoverStyle: function(elements, mode, enabled) {\r\n                        var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\r\n                        var element, i, ilen;\r\n\r\n                        for (i = 0, ilen = elements.length; i < ilen; ++i) {\r\n                            element = elements[i];\r\n                            if (element) {\r\n                                this.getDatasetMeta(element._datasetIndex).controller[method](element);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    eventHandler: function(e) {\r\n                        var me = this;\r\n                        var tooltip = me.tooltip;\r\n\r\n                        if (plugins.notify(me, 'beforeEvent', [e]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Buffer any update calls so that renders do not occur\r\n                        me._bufferedRender = true;\r\n                        me._bufferedRequest = null;\r\n\r\n                        var changed = me.handleEvent(e);\r\n                        // for smooth tooltip animations issue #4989\r\n                        // the tooltip should be the source of change\r\n                        // Animation check workaround:\r\n                        // tooltip._start will be null when tooltip isn't animating\r\n                        if (tooltip) {\r\n                            changed = tooltip._start\r\n                                ? tooltip.handleEvent(e)\r\n                                : changed | tooltip.handleEvent(e);\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterEvent', [e]);\r\n\r\n                        var bufferedRequest = me._bufferedRequest;\r\n                        if (bufferedRequest) {\r\n                            // If we have an update that was triggered, we need to do a normal render\r\n                            me.render(bufferedRequest);\r\n                        } else if (changed && !me.animating) {\r\n                            // If entering, leaving, or changing elements, animate the change via pivot\r\n                            me.stop();\r\n\r\n                            // We only need to render at this point. Updating will cause scales to be\r\n                            // recomputed generating flicker & using more memory than necessary.\r\n                            me.render(me.options.hover.animationDuration, true);\r\n                        }\r\n\r\n                        me._bufferedRender = false;\r\n                        me._bufferedRequest = null;\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    /**\r\n                     * Handle an event\r\n                     * @private\r\n                     * @param {IEvent} event the event to handle\r\n                     * @return {Boolean} true if the chart needs to re-render\r\n                     */\r\n                    handleEvent: function(e) {\r\n                        var me = this;\r\n                        var options = me.options || {};\r\n                        var hoverOptions = options.hover;\r\n                        var changed = false;\r\n\r\n                        me.lastActive = me.lastActive || [];\r\n\r\n                        // Find Active Elements for hover and tooltips\r\n                        if (e.type === 'mouseout') {\r\n                            me.active = [];\r\n                        } else {\r\n                            me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\r\n                        }\r\n\r\n                        // Invoke onHover hook\r\n                        // Need to call with native event here to not break backwards compatibility\r\n                        helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\r\n\r\n                        if (e.type === 'mouseup' || e.type === 'click') {\r\n                            if (options.onClick) {\r\n                                // Use e.native here for backwards compatibility\r\n                                options.onClick.call(me, e.native, me.active);\r\n                            }\r\n                        }\r\n\r\n                        // Remove styling for last active (even if it may still be active)\r\n                        if (me.lastActive.length) {\r\n                            me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\r\n                        }\r\n\r\n                        // Built in hover styling\r\n                        if (me.active.length && hoverOptions.mode) {\r\n                            me.updateHoverStyle(me.active, hoverOptions.mode, true);\r\n                        }\r\n\r\n                        changed = !helpers.arrayEquals(me.active, me.lastActive);\r\n\r\n                        // Remember Last Actives\r\n                        me.lastActive = me.active;\r\n\r\n                        return changed;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart instead.\r\n                 * @class Chart.Controller\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 * @private\r\n                 */\r\n                Chart.Controller = Chart;\r\n            };\r\n        }, { \"16\": 16, \"19\": 19, \"21\": 21, \"22\": 22, \"36\": 36, \"39\": 39 }], 15: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            module.exports = function(Chart) {\r\n                var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\r\n\r\n                /**\r\n                 * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\r\n                 * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\r\n                 * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\r\n                 */\r\n                function listenArrayEvents(array, listener) {\r\n                    if (array._chartjs) {\r\n                        array._chartjs.listeners.push(listener);\r\n                        return;\r\n                    }\r\n\r\n                    Object.defineProperty(array, '_chartjs', {\r\n                        configurable: true,\r\n                        enumerable: false,\r\n                        value: {\r\n                            listeners: [listener]\r\n                        }\r\n                    });\r\n\r\n                    arrayEvents.forEach(function(key) {\r\n                        var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\r\n                        var base = array[key];\r\n\r\n                        Object.defineProperty(array, key, {\r\n                            configurable: true,\r\n                            enumerable: false,\r\n                            value: function() {\r\n                                var args = Array.prototype.slice.call(arguments);\r\n                                var res = base.apply(this, args);\r\n\r\n                                helpers.each(array._chartjs.listeners, function(object) {\r\n                                    if (typeof object[method] === 'function') {\r\n                                        object[method].apply(object, args);\r\n                                    }\r\n                                });\r\n\r\n                                return res;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Removes the given array event listener and cleanup extra attached properties (such as\r\n                 * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\r\n                 */\r\n                function unlistenArrayEvents(array, listener) {\r\n                    var stub = array._chartjs;\r\n                    if (!stub) {\r\n                        return;\r\n                    }\r\n\r\n                    var listeners = stub.listeners;\r\n                    var index = listeners.indexOf(listener);\r\n                    if (index !== -1) {\r\n                        listeners.splice(index, 1);\r\n                    }\r\n\r\n                    if (listeners.length > 0) {\r\n                        return;\r\n                    }\r\n\r\n                    arrayEvents.forEach(function(key) {\r\n                        delete array[key];\r\n                    });\r\n\r\n                    delete array._chartjs;\r\n                }\r\n\r\n                // Base class for all dataset controllers (line, bar, etc)\r\n                Chart.DatasetController = function(chart, datasetIndex) {\r\n                    this.initialize(chart, datasetIndex);\r\n                };\r\n\r\n                helpers.extend(Chart.DatasetController.prototype, {\r\n                    /**\r\n                     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\r\n                     * @type {Chart.core.element}\r\n                     */\r\n                    datasetElementType: null,\r\n\r\n                    /**\r\n                     * Element type used to generate a meta data (e.g. Chart.element.Point).\r\n                     * @type {Chart.core.element}\r\n                     */\r\n                    dataElementType: null,\r\n\r\n                    initialize: function(chart, datasetIndex) {\r\n                        var me = this;\r\n                        me.chart = chart;\r\n                        me.index = datasetIndex;\r\n                        me.linkScales();\r\n                        me.addElements();\r\n                    },\r\n\r\n                    updateIndex: function(datasetIndex) {\r\n                        this.index = datasetIndex;\r\n                    },\r\n\r\n                    linkScales: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var dataset = me.getDataset();\r\n\r\n                        if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\r\n                            meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\r\n                        }\r\n                        if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\r\n                            meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\r\n                        }\r\n                    },\r\n\r\n                    getDataset: function() {\r\n                        return this.chart.data.datasets[this.index];\r\n                    },\r\n\r\n                    getMeta: function() {\r\n                        return this.chart.getDatasetMeta(this.index);\r\n                    },\r\n\r\n                    getScaleForId: function(scaleID) {\r\n                        return this.chart.scales[scaleID];\r\n                    },\r\n\r\n                    reset: function() {\r\n                        this.update(true);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    destroy: function() {\r\n                        if (this._data) {\r\n                            unlistenArrayEvents(this._data, this);\r\n                        }\r\n                    },\r\n\r\n                    createMetaDataset: function() {\r\n                        var me = this;\r\n                        var type = me.datasetElementType;\r\n                        return type && new type({\r\n                            _chart: me.chart,\r\n                            _datasetIndex: me.index\r\n                        });\r\n                    },\r\n\r\n                    createMetaData: function(index) {\r\n                        var me = this;\r\n                        var type = me.dataElementType;\r\n                        return type && new type({\r\n                            _chart: me.chart,\r\n                            _datasetIndex: me.index,\r\n                            _index: index\r\n                        });\r\n                    },\r\n\r\n                    addElements: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var data = me.getDataset().data || [];\r\n                        var metaData = meta.data;\r\n                        var i, ilen;\r\n\r\n                        for (i = 0, ilen = data.length; i < ilen; ++i) {\r\n                            metaData[i] = metaData[i] || me.createMetaData(i);\r\n                        }\r\n\r\n                        meta.dataset = meta.dataset || me.createMetaDataset();\r\n                    },\r\n\r\n                    addElementAndReset: function(index) {\r\n                        var element = this.createMetaData(index);\r\n                        this.getMeta().data.splice(index, 0, element);\r\n                        this.updateElement(element, index, true);\r\n                    },\r\n\r\n                    buildOrUpdateElements: function() {\r\n                        var me = this;\r\n                        var dataset = me.getDataset();\r\n                        var data = dataset.data || (dataset.data = []);\r\n\r\n                        // In order to correctly handle data addition/deletion animation (an thus simulate\r\n                        // real-time charts), we need to monitor these data modifications and synchronize\r\n                        // the internal meta data accordingly.\r\n                        if (me._data !== data) {\r\n                            if (me._data) {\r\n                                // This case happens when the user replaced the data array instance.\r\n                                unlistenArrayEvents(me._data, me);\r\n                            }\r\n\r\n                            listenArrayEvents(data, me);\r\n                            me._data = data;\r\n                        }\r\n\r\n                        // Re-sync meta data in case the user replaced the data array or if we missed\r\n                        // any updates and so make sure that we handle number of datapoints changing.\r\n                        me.resyncElements();\r\n                    },\r\n\r\n                    update: helpers.noop,\r\n\r\n                    transition: function(easingValue) {\r\n                        var meta = this.getMeta();\r\n                        var elements = meta.data || [];\r\n                        var ilen = elements.length;\r\n                        var i = 0;\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            elements[i].transition(easingValue);\r\n                        }\r\n\r\n                        if (meta.dataset) {\r\n                            meta.dataset.transition(easingValue);\r\n                        }\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var meta = this.getMeta();\r\n                        var elements = meta.data || [];\r\n                        var ilen = elements.length;\r\n                        var i = 0;\r\n\r\n                        if (meta.dataset) {\r\n                            meta.dataset.draw();\r\n                        }\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            elements[i].draw();\r\n                        }\r\n                    },\r\n\r\n                    removeHoverStyle: function(element, elementOpts) {\r\n                        var dataset = this.chart.data.datasets[element._datasetIndex];\r\n                        var index = element._index;\r\n                        var custom = element.custom || {};\r\n                        var valueOrDefault = helpers.valueAtIndexOrDefault;\r\n                        var model = element._model;\r\n\r\n                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\r\n                        model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\r\n                        model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\r\n                    },\r\n\r\n                    setHoverStyle: function(element) {\r\n                        var dataset = this.chart.data.datasets[element._datasetIndex];\r\n                        var index = element._index;\r\n                        var custom = element.custom || {};\r\n                        var valueOrDefault = helpers.valueAtIndexOrDefault;\r\n                        var getHoverColor = helpers.getHoverColor;\r\n                        var model = element._model;\r\n\r\n                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    resyncElements: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var data = me.getDataset().data;\r\n                        var numMeta = meta.data.length;\r\n                        var numData = data.length;\r\n\r\n                        if (numData < numMeta) {\r\n                            meta.data.splice(numData, numMeta - numData);\r\n                        } else if (numData > numMeta) {\r\n                            me.insertElements(numMeta, numData - numMeta);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    insertElements: function(start, count) {\r\n                        for (var i = 0; i < count; ++i) {\r\n                            this.addElementAndReset(start + i);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataPush: function() {\r\n                        this.insertElements(this.getDataset().data.length - 1, arguments.length);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataPop: function() {\r\n                        this.getMeta().data.pop();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataShift: function() {\r\n                        this.getMeta().data.shift();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataSplice: function(start, count) {\r\n                        this.getMeta().data.splice(start, count);\r\n                        this.insertElements(start, arguments.length - 2);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataUnshift: function() {\r\n                        this.insertElements(0, arguments.length);\r\n                    }\r\n                });\r\n\r\n                Chart.DatasetController.extend = helpers.inherits;\r\n            };\r\n        }, { \"36\": 36 }], 16: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            module.exports = {\r\n                /**\r\n                 * @private\r\n                 */\r\n                _set: function(scope, values) {\r\n                    return helpers.merge(this[scope] || (this[scope] = {}), values);\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 17: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var color = require(2);\r\n            var helpers = require(36);\r\n\r\n            function interpolate(start, view, model, ease) {\r\n                var keys = Object.keys(model);\r\n                var i, ilen, key, actual, origin, target, type, c0, c1;\r\n\r\n                for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n                    key = keys[i];\r\n\r\n                    target = model[key];\r\n\r\n                    // if a value is added to the model after pivot() has been called, the view\r\n                    // doesn't contain it, so let's initialize the view to the target value.\r\n                    if (!view.hasOwnProperty(key)) {\r\n                        view[key] = target;\r\n                    }\r\n\r\n                    actual = view[key];\r\n\r\n                    if (actual === target || key[0] === '_') {\r\n                        continue;\r\n                    }\r\n\r\n                    if (!start.hasOwnProperty(key)) {\r\n                        start[key] = actual;\r\n                    }\r\n\r\n                    origin = start[key];\r\n\r\n                    type = typeof target;\r\n\r\n                    if (type === typeof origin) {\r\n                        if (type === 'string') {\r\n                            c0 = color(origin);\r\n                            if (c0.valid) {\r\n                                c1 = color(target);\r\n                                if (c1.valid) {\r\n                                    view[key] = c1.mix(c0, ease).rgbString();\r\n                                    continue;\r\n                                }\r\n                            }\r\n                        } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\r\n                            view[key] = origin + (target - origin) * ease;\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    view[key] = target;\r\n                }\r\n            }\r\n\r\n            var Element = function(configuration) {\r\n                helpers.extend(this, configuration);\r\n                this.initialize.apply(this, arguments);\r\n            };\r\n\r\n            helpers.extend(Element.prototype, {\r\n                initialize: function() {\r\n                    this.hidden = false;\r\n                },\r\n\r\n                pivot: function() {\r\n                    var me = this;\r\n                    if (!me._view) {\r\n                        me._view = helpers.clone(me._model);\r\n                    }\r\n                    me._start = {};\r\n                    return me;\r\n                },\r\n\r\n                transition: function(ease) {\r\n                    var me = this;\r\n                    var model = me._model;\r\n                    var start = me._start;\r\n                    var view = me._view;\r\n\r\n                    // No animation -> No Transition\r\n                    if (!model || ease === 1) {\r\n                        me._view = model;\r\n                        me._start = null;\r\n                        return me;\r\n                    }\r\n\r\n                    if (!view) {\r\n                        view = me._view = {};\r\n                    }\r\n\r\n                    if (!start) {\r\n                        start = me._start = {};\r\n                    }\r\n\r\n                    interpolate(start, view, model, ease);\r\n\r\n                    return me;\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    return {\r\n                        x: this._model.x,\r\n                        y: this._model.y\r\n                    };\r\n                },\r\n\r\n                hasValue: function() {\r\n                    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\r\n                }\r\n            });\r\n\r\n            Element.extend = helpers.inherits;\r\n\r\n            module.exports = Element;\r\n        }, { \"2\": 2, \"36\": 36 }], 18: [function(require, module, exports) {\r\n            /* global window: false */\r\n            /* global document: false */\r\n            'use strict';\r\n\r\n            var color = require(2);\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n\r\n            module.exports = function(Chart) {\r\n                // -- Basic js utility methods\r\n\r\n                helpers.configMerge = function(/* objects ... */) {\r\n                    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\r\n                        merger: function(key, target, source, options) {\r\n                            var tval = target[key] || {};\r\n                            var sval = source[key];\r\n\r\n                            if (key === 'scales') {\r\n                                // scale config merging is complex. Add our own function here for that\r\n                                target[key] = helpers.scaleMerge(tval, sval);\r\n                            } else if (key === 'scale') {\r\n                                // used in polar area & radar charts since there is only one scale\r\n                                target[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\r\n                            } else {\r\n                                helpers._merger(key, target, source, options);\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n\r\n                helpers.scaleMerge = function(/* objects ... */) {\r\n                    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\r\n                        merger: function(key, target, source, options) {\r\n                            if (key === 'xAxes' || key === 'yAxes') {\r\n                                var slen = source[key].length;\r\n                                var i, type, scale;\r\n\r\n                                if (!target[key]) {\r\n                                    target[key] = [];\r\n                                }\r\n\r\n                                for (i = 0; i < slen; ++i) {\r\n                                    scale = source[key][i];\r\n                                    type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\r\n\r\n                                    if (i >= target[key].length) {\r\n                                        target[key].push({});\r\n                                    }\r\n\r\n                                    if (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\r\n                                        // new/untyped scale or type changed: let's apply the new defaults\r\n                                        // then merge source scale to correctly overwrite the defaults.\r\n                                        helpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\r\n                                    } else {\r\n                                        // scales type are the same\r\n                                        helpers.merge(target[key][i], scale);\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                helpers._merger(key, target, source, options);\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n\r\n                helpers.where = function(collection, filterCallback) {\r\n                    if (helpers.isArray(collection) && Array.prototype.filter) {\r\n                        return collection.filter(filterCallback);\r\n                    }\r\n                    var filtered = [];\r\n\r\n                    helpers.each(collection, function(item) {\r\n                        if (filterCallback(item)) {\r\n                            filtered.push(item);\r\n                        }\r\n                    });\r\n\r\n                    return filtered;\r\n                };\r\n                helpers.findIndex = Array.prototype.findIndex ?\r\n                    function(array, callback, scope) {\r\n                        return array.findIndex(callback, scope);\r\n                    } :\r\n                    function(array, callback, scope) {\r\n                        scope = scope === undefined ? array : scope;\r\n                        for (var i = 0, ilen = array.length; i < ilen; ++i) {\r\n                            if (callback.call(scope, array[i], i, array)) {\r\n                                return i;\r\n                            }\r\n                        }\r\n                        return -1;\r\n                    };\r\n                helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n                    // Default to start of the array\r\n                    if (helpers.isNullOrUndef(startIndex)) {\r\n                        startIndex = -1;\r\n                    }\r\n                    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\r\n                        var currentItem = arrayToSearch[i];\r\n                        if (filterCallback(currentItem)) {\r\n                            return currentItem;\r\n                        }\r\n                    }\r\n                };\r\n                helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n                    // Default to end of the array\r\n                    if (helpers.isNullOrUndef(startIndex)) {\r\n                        startIndex = arrayToSearch.length;\r\n                    }\r\n                    for (var i = startIndex - 1; i >= 0; i--) {\r\n                        var currentItem = arrayToSearch[i];\r\n                        if (filterCallback(currentItem)) {\r\n                            return currentItem;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // -- Math methods\r\n                helpers.isNumber = function(n) {\r\n                    return !isNaN(parseFloat(n)) && isFinite(n);\r\n                };\r\n                helpers.almostEquals = function(x, y, epsilon) {\r\n                    return Math.abs(x - y) < epsilon;\r\n                };\r\n                helpers.almostWhole = function(x, epsilon) {\r\n                    var rounded = Math.round(x);\r\n                    return (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\r\n                };\r\n                helpers.max = function(array) {\r\n                    return array.reduce(function(max, value) {\r\n                        if (!isNaN(value)) {\r\n                            return Math.max(max, value);\r\n                        }\r\n                        return max;\r\n                    }, Number.NEGATIVE_INFINITY);\r\n                };\r\n                helpers.min = function(array) {\r\n                    return array.reduce(function(min, value) {\r\n                        if (!isNaN(value)) {\r\n                            return Math.min(min, value);\r\n                        }\r\n                        return min;\r\n                    }, Number.POSITIVE_INFINITY);\r\n                };\r\n                helpers.sign = Math.sign ?\r\n                    function(x) {\r\n                        return Math.sign(x);\r\n                    } :\r\n                    function(x) {\r\n                        x = +x; // convert to a number\r\n                        if (x === 0 || isNaN(x)) {\r\n                            return x;\r\n                        }\r\n                        return x > 0 ? 1 : -1;\r\n                    };\r\n                helpers.log10 = Math.log10 ?\r\n                    function(x) {\r\n                        return Math.log10(x);\r\n                    } :\r\n                    function(x) {\r\n                        var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\r\n                        // Check for whole powers of 10,\r\n                        // which due to floating point rounding error should be corrected.\r\n                        var powerOf10 = Math.round(exponent);\r\n                        var isPowerOf10 = x === Math.pow(10, powerOf10);\r\n\r\n                        return isPowerOf10 ? powerOf10 : exponent;\r\n                    };\r\n                helpers.toRadians = function(degrees) {\r\n                    return degrees * (Math.PI / 180);\r\n                };\r\n                helpers.toDegrees = function(radians) {\r\n                    return radians * (180 / Math.PI);\r\n                };\r\n                // Gets the angle from vertical upright to the point about a centre.\r\n                helpers.getAngleFromPoint = function(centrePoint, anglePoint) {\r\n                    var distanceFromXCenter = anglePoint.x - centrePoint.x;\r\n                    var distanceFromYCenter = anglePoint.y - centrePoint.y;\r\n                    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n\r\n                    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n\r\n                    if (angle < (-0.5 * Math.PI)) {\r\n                        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\r\n                    }\r\n\r\n                    return {\r\n                        angle: angle,\r\n                        distance: radialDistanceFromCenter\r\n                    };\r\n                };\r\n                helpers.distanceBetweenPoints = function(pt1, pt2) {\r\n                    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\r\n                };\r\n                helpers.aliasPixel = function(pixelWidth) {\r\n                    return (pixelWidth % 2 === 0) ? 0 : 0.5;\r\n                };\r\n                helpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\r\n                    // Props to Rob Spencer at scaled innovation for his post on splining between points\r\n                    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\r\n\r\n                    // This function must also respect \"skipped\" points\r\n\r\n                    var previous = firstPoint.skip ? middlePoint : firstPoint;\r\n                    var current = middlePoint;\r\n                    var next = afterPoint.skip ? middlePoint : afterPoint;\r\n\r\n                    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\r\n                    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\r\n\r\n                    var s01 = d01 / (d01 + d12);\r\n                    var s12 = d12 / (d01 + d12);\r\n\r\n                    // If all points are the same, s01 & s02 will be inf\r\n                    s01 = isNaN(s01) ? 0 : s01;\r\n                    s12 = isNaN(s12) ? 0 : s12;\r\n\r\n                    var fa = t * s01; // scaling factor for triangle Ta\r\n                    var fb = t * s12;\r\n\r\n                    return {\r\n                        previous: {\r\n                            x: current.x - fa * (next.x - previous.x),\r\n                            y: current.y - fa * (next.y - previous.y)\r\n                        },\r\n                        next: {\r\n                            x: current.x + fb * (next.x - previous.x),\r\n                            y: current.y + fb * (next.y - previous.y)\r\n                        }\r\n                    };\r\n                };\r\n                helpers.EPSILON = Number.EPSILON || 1e-14;\r\n                helpers.splineCurveMonotone = function(points) {\r\n                    // This function calculates Bézier control points in a similar way than |splineCurve|,\r\n                    // but preserves monotonicity of the provided data and ensures no local extremums are added\r\n                    // between the dataset discrete points due to the interpolation.\r\n                    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\r\n\r\n                    var pointsWithTangents = (points || []).map(function(point) {\r\n                        return {\r\n                            model: point._model,\r\n                            deltaK: 0,\r\n                            mK: 0\r\n                        };\r\n                    });\r\n\r\n                    // Calculate slopes (deltaK) and initialize tangents (mK)\r\n                    var pointsLen = pointsWithTangents.length;\r\n                    var i, pointBefore, pointCurrent, pointAfter;\r\n                    for (i = 0; i < pointsLen; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        if (pointCurrent.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n                        if (pointAfter && !pointAfter.model.skip) {\r\n                            var slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\r\n\r\n                            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\r\n                            pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\r\n                        }\r\n\r\n                        if (!pointBefore || pointBefore.model.skip) {\r\n                            pointCurrent.mK = pointCurrent.deltaK;\r\n                        } else if (!pointAfter || pointAfter.model.skip) {\r\n                            pointCurrent.mK = pointBefore.deltaK;\r\n                        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\r\n                            pointCurrent.mK = 0;\r\n                        } else {\r\n                            pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\r\n                        }\r\n                    }\r\n\r\n                    // Adjust tangents to ensure monotonic properties\r\n                    var alphaK, betaK, tauK, squaredMagnitude;\r\n                    for (i = 0; i < pointsLen - 1; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        pointAfter = pointsWithTangents[i + 1];\r\n                        if (pointCurrent.model.skip || pointAfter.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\r\n                            pointCurrent.mK = pointAfter.mK = 0;\r\n                            continue;\r\n                        }\r\n\r\n                        alphaK = pointCurrent.mK / pointCurrent.deltaK;\r\n                        betaK = pointAfter.mK / pointCurrent.deltaK;\r\n                        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\r\n                        if (squaredMagnitude <= 9) {\r\n                            continue;\r\n                        }\r\n\r\n                        tauK = 3 / Math.sqrt(squaredMagnitude);\r\n                        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\r\n                        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\r\n                    }\r\n\r\n                    // Compute control points\r\n                    var deltaX;\r\n                    for (i = 0; i < pointsLen; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        if (pointCurrent.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n                        if (pointBefore && !pointBefore.model.skip) {\r\n                            deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\r\n                            pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\r\n                            pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\r\n                        }\r\n                        if (pointAfter && !pointAfter.model.skip) {\r\n                            deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\r\n                            pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\r\n                            pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\r\n                        }\r\n                    }\r\n                };\r\n                helpers.nextItem = function(collection, index, loop) {\r\n                    if (loop) {\r\n                        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\r\n                    }\r\n                    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\r\n                };\r\n                helpers.previousItem = function(collection, index, loop) {\r\n                    if (loop) {\r\n                        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\r\n                    }\r\n                    return index <= 0 ? collection[0] : collection[index - 1];\r\n                };\r\n                // Implementation of the nice number algorithm used in determining where axis labels will go\r\n                helpers.niceNum = function(range, round) {\r\n                    var exponent = Math.floor(helpers.log10(range));\r\n                    var fraction = range / Math.pow(10, exponent);\r\n                    var niceFraction;\r\n\r\n                    if (round) {\r\n                        if (fraction < 1.5) {\r\n                            niceFraction = 1;\r\n                        } else if (fraction < 3) {\r\n                            niceFraction = 2;\r\n                        } else if (fraction < 7) {\r\n                            niceFraction = 5;\r\n                        } else {\r\n                            niceFraction = 10;\r\n                        }\r\n                    } else if (fraction <= 1.0) {\r\n                        niceFraction = 1;\r\n                    } else if (fraction <= 2) {\r\n                        niceFraction = 2;\r\n                    } else if (fraction <= 5) {\r\n                        niceFraction = 5;\r\n                    } else {\r\n                        niceFraction = 10;\r\n                    }\r\n\r\n                    return niceFraction * Math.pow(10, exponent);\r\n                };\r\n                // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n                helpers.requestAnimFrame = (function() {\r\n                    if (typeof window === 'undefined') {\r\n                        return function(callback) {\r\n                            callback();\r\n                        };\r\n                    }\r\n                    return window.requestAnimationFrame ||\r\n                        window.webkitRequestAnimationFrame ||\r\n                        window.mozRequestAnimationFrame ||\r\n                        window.oRequestAnimationFrame ||\r\n                        window.msRequestAnimationFrame ||\r\n                        function(callback) {\r\n                            return window.setTimeout(callback, 1000 / 60);\r\n                        };\r\n                }());\r\n                // -- DOM methods\r\n                helpers.getRelativePosition = function(evt, chart) {\r\n                    var mouseX, mouseY;\r\n                    var e = evt.originalEvent || evt;\r\n                    var canvas = evt.currentTarget || evt.srcElement;\r\n                    var boundingRect = canvas.getBoundingClientRect();\r\n\r\n                    var touches = e.touches;\r\n                    if (touches && touches.length > 0) {\r\n                        mouseX = touches[0].clientX;\r\n                        mouseY = touches[0].clientY;\r\n                    } else {\r\n                        mouseX = e.clientX;\r\n                        mouseY = e.clientY;\r\n                    }\r\n\r\n                    // Scale mouse coordinates into canvas coordinates\r\n                    // by following the pattern laid out by 'jerryj' in the comments of\r\n                    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\r\n                    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\r\n                    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\r\n                    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\r\n                    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\r\n                    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\r\n                    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\r\n\r\n                    // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\r\n                    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\r\n                    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\r\n                    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\r\n\r\n                    return {\r\n                        x: mouseX,\r\n                        y: mouseY\r\n                    };\r\n                };\r\n\r\n                // Private helper function to convert max-width/max-height values that may be percentages into a number\r\n                function parseMaxStyle(styleValue, node, parentProperty) {\r\n                    var valueInPixels;\r\n                    if (typeof styleValue === 'string') {\r\n                        valueInPixels = parseInt(styleValue, 10);\r\n\r\n                        if (styleValue.indexOf('%') !== -1) {\r\n                            // percentage * size in dimension\r\n                            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\r\n                        }\r\n                    } else {\r\n                        valueInPixels = styleValue;\r\n                    }\r\n\r\n                    return valueInPixels;\r\n                }\r\n\r\n                /**\r\n                 * Returns if the given value contains an effective constraint.\r\n                 * @private\r\n                 */\r\n                function isConstrainedValue(value) {\r\n                    return value !== undefined && value !== null && value !== 'none';\r\n                }\r\n\r\n                // Private helper to get a constraint dimension\r\n                // @param domNode : the node to check the constraint on\r\n                // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\r\n                // @param percentageProperty : property of parent to use when calculating width as a percentage\r\n                // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\r\n                function getConstraintDimension(domNode, maxStyle, percentageProperty) {\r\n                    var view = document.defaultView;\r\n                    var parentNode = domNode.parentNode;\r\n                    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\r\n                    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\r\n                    var hasCNode = isConstrainedValue(constrainedNode);\r\n                    var hasCContainer = isConstrainedValue(constrainedContainer);\r\n                    var infinity = Number.POSITIVE_INFINITY;\r\n\r\n                    if (hasCNode || hasCContainer) {\r\n                        return Math.min(\r\n                            hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\r\n                            hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\r\n                    }\r\n\r\n                    return 'none';\r\n                }\r\n                // returns Number or undefined if no constraint\r\n                helpers.getConstraintWidth = function(domNode) {\r\n                    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\r\n                };\r\n                // returns Number or undefined if no constraint\r\n                helpers.getConstraintHeight = function(domNode) {\r\n                    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\r\n                };\r\n                helpers.getMaximumWidth = function(domNode) {\r\n                    var container = domNode.parentNode;\r\n                    if (!container) {\r\n                        return domNode.clientWidth;\r\n                    }\r\n\r\n                    var paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\r\n                    var paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\r\n                    var w = container.clientWidth - paddingLeft - paddingRight;\r\n                    var cw = helpers.getConstraintWidth(domNode);\r\n                    return isNaN(cw) ? w : Math.min(w, cw);\r\n                };\r\n                helpers.getMaximumHeight = function(domNode) {\r\n                    var container = domNode.parentNode;\r\n                    if (!container) {\r\n                        return domNode.clientHeight;\r\n                    }\r\n\r\n                    var paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\r\n                    var paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\r\n                    var h = container.clientHeight - paddingTop - paddingBottom;\r\n                    var ch = helpers.getConstraintHeight(domNode);\r\n                    return isNaN(ch) ? h : Math.min(h, ch);\r\n                };\r\n                helpers.getStyle = function(el, property) {\r\n                    return el.currentStyle ?\r\n                        el.currentStyle[property] :\r\n                        document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\r\n                };\r\n                helpers.retinaScale = function(chart, forceRatio) {\r\n                    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\r\n                    if (pixelRatio === 1) {\r\n                        return;\r\n                    }\r\n\r\n                    var canvas = chart.canvas;\r\n                    var height = chart.height;\r\n                    var width = chart.width;\r\n\r\n                    canvas.height = height * pixelRatio;\r\n                    canvas.width = width * pixelRatio;\r\n                    chart.ctx.scale(pixelRatio, pixelRatio);\r\n\r\n                    // If no style has been set on the canvas, the render size is used as display size,\r\n                    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\r\n                    // See https://github.com/chartjs/Chart.js/issues/3575\r\n                    if (!canvas.style.height && !canvas.style.width) {\r\n                        canvas.style.height = height + 'px';\r\n                        canvas.style.width = width + 'px';\r\n                    }\r\n                };\r\n                // -- Canvas methods\r\n                helpers.fontString = function(pixelSize, fontStyle, fontFamily) {\r\n                    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\r\n                };\r\n                helpers.longestText = function(ctx, font, arrayOfThings, cache) {\r\n                    cache = cache || {};\r\n                    var data = cache.data = cache.data || {};\r\n                    var gc = cache.garbageCollect = cache.garbageCollect || [];\r\n\r\n                    if (cache.font !== font) {\r\n                        data = cache.data = {};\r\n                        gc = cache.garbageCollect = [];\r\n                        cache.font = font;\r\n                    }\r\n\r\n                    ctx.font = font;\r\n                    var longest = 0;\r\n                    helpers.each(arrayOfThings, function(thing) {\r\n                        // Undefined strings and arrays should not be measured\r\n                        if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\r\n                            longest = helpers.measureText(ctx, data, gc, longest, thing);\r\n                        } else if (helpers.isArray(thing)) {\r\n                            // if it is an array lets measure each element\r\n                            // to do maybe simplify this function a bit so we can do this more recursively?\r\n                            helpers.each(thing, function(nestedThing) {\r\n                                // Undefined strings and arrays should not be measured\r\n                                if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\r\n                                    longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    var gcLen = gc.length / 2;\r\n                    if (gcLen > arrayOfThings.length) {\r\n                        for (var i = 0; i < gcLen; i++) {\r\n                            delete data[gc[i]];\r\n                        }\r\n                        gc.splice(0, gcLen);\r\n                    }\r\n                    return longest;\r\n                };\r\n                helpers.measureText = function(ctx, data, gc, longest, string) {\r\n                    var textWidth = data[string];\r\n                    if (!textWidth) {\r\n                        textWidth = data[string] = ctx.measureText(string).width;\r\n                        gc.push(string);\r\n                    }\r\n                    if (textWidth > longest) {\r\n                        longest = textWidth;\r\n                    }\r\n                    return longest;\r\n                };\r\n                helpers.numberOfLabelLines = function(arrayOfThings) {\r\n                    var numberOfLines = 1;\r\n                    helpers.each(arrayOfThings, function(thing) {\r\n                        if (helpers.isArray(thing)) {\r\n                            if (thing.length > numberOfLines) {\r\n                                numberOfLines = thing.length;\r\n                            }\r\n                        }\r\n                    });\r\n                    return numberOfLines;\r\n                };\r\n\r\n                helpers.color = !color ?\r\n                    function(value) {\r\n                        console.error('Color.js not found!');\r\n                        return value;\r\n                    } :\r\n                    function(value) {\r\n                        /* global CanvasGradient */\r\n                        if (value instanceof CanvasGradient) {\r\n                            value = defaults.global.defaultColor;\r\n                        }\r\n\r\n                        return color(value);\r\n                    };\r\n\r\n                helpers.getHoverColor = function(colorValue) {\r\n                    /* global CanvasPattern */\r\n                    return (colorValue instanceof CanvasPattern) ?\r\n                        colorValue :\r\n                        helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"2\": 2, \"36\": 36 }], 19: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Helper function to get relative position for an event\r\n             * @param {Event|IEvent} event - The event to get the position for\r\n             * @param {Chart} chart - The chart\r\n             * @returns {Point} the event position\r\n             */\r\n            function getRelativePosition(e, chart) {\r\n                if (e.native) {\r\n                    return {\r\n                        x: e.x,\r\n                        y: e.y\r\n                    };\r\n                }\r\n\r\n                return helpers.getRelativePosition(e, chart);\r\n            }\r\n\r\n            /**\r\n             * Helper function to traverse all of the visible elements in the chart\r\n             * @param chart {chart} the chart\r\n             * @param handler {Function} the callback to execute for each visible item\r\n             */\r\n            function parseVisibleItems(chart, handler) {\r\n                var datasets = chart.data.datasets;\r\n                var meta, i, j, ilen, jlen;\r\n\r\n                for (i = 0, ilen = datasets.length; i < ilen; ++i) {\r\n                    if (!chart.isDatasetVisible(i)) {\r\n                        continue;\r\n                    }\r\n\r\n                    meta = chart.getDatasetMeta(i);\r\n                    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\r\n                        var element = meta.data[j];\r\n                        if (!element._view.skip) {\r\n                            handler(element);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the items that intersect the event position\r\n             * @param items {ChartElement[]} elements to filter\r\n             * @param position {Point} the point to be nearest to\r\n             * @return {ChartElement[]} the nearest items\r\n             */\r\n            function getIntersectItems(chart, position) {\r\n                var elements = [];\r\n\r\n                parseVisibleItems(chart, function(element) {\r\n                    if (element.inRange(position.x, position.y)) {\r\n                        elements.push(element);\r\n                    }\r\n                });\r\n\r\n                return elements;\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the items nearest to the event position considering all visible items in teh chart\r\n             * @param chart {Chart} the chart to look at elements from\r\n             * @param position {Point} the point to be nearest to\r\n             * @param intersect {Boolean} if true, only consider items that intersect the position\r\n             * @param distanceMetric {Function} function to provide the distance between points\r\n             * @return {ChartElement[]} the nearest items\r\n             */\r\n            function getNearestItems(chart, position, intersect, distanceMetric) {\r\n                var minDistance = Number.POSITIVE_INFINITY;\r\n                var nearestItems = [];\r\n\r\n                parseVisibleItems(chart, function(element) {\r\n                    if (intersect && !element.inRange(position.x, position.y)) {\r\n                        return;\r\n                    }\r\n\r\n                    var center = element.getCenterPoint();\r\n                    var distance = distanceMetric(position, center);\r\n\r\n                    if (distance < minDistance) {\r\n                        nearestItems = [element];\r\n                        minDistance = distance;\r\n                    } else if (distance === minDistance) {\r\n                        // Can have multiple items at the same distance in which case we sort by size\r\n                        nearestItems.push(element);\r\n                    }\r\n                });\r\n\r\n                return nearestItems;\r\n            }\r\n\r\n            /**\r\n             * Get a distance metric function for two points based on the\r\n             * axis mode setting\r\n             * @param {String} axis the axis mode. x|y|xy\r\n             */\r\n            function getDistanceMetricForAxis(axis) {\r\n                var useX = axis.indexOf('x') !== -1;\r\n                var useY = axis.indexOf('y') !== -1;\r\n\r\n                return function(pt1, pt2) {\r\n                    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n                    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n                    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n                };\r\n            }\r\n\r\n            function indexMode(chart, e, options) {\r\n                var position = getRelativePosition(e, chart);\r\n                // Default axis for index mode is 'x' to match old behaviour\r\n                options.axis = options.axis || 'x';\r\n                var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\r\n                var elements = [];\r\n\r\n                if (!items.length) {\r\n                    return [];\r\n                }\r\n\r\n                chart.data.datasets.forEach(function(dataset, datasetIndex) {\r\n                    if (chart.isDatasetVisible(datasetIndex)) {\r\n                        var meta = chart.getDatasetMeta(datasetIndex);\r\n                        var element = meta.data[items[0]._index];\r\n\r\n                        // don't count items that are skipped (null data)\r\n                        if (element && !element._view.skip) {\r\n                            elements.push(element);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                return elements;\r\n            }\r\n\r\n            /**\r\n             * @interface IInteractionOptions\r\n             */\r\n            /**\r\n             * If true, only consider items that intersect the point\r\n             * @name IInterfaceOptions#boolean\r\n             * @type Boolean\r\n             */\r\n\r\n            /**\r\n             * Contains interaction related functions\r\n             * @namespace Chart.Interaction\r\n             */\r\n            module.exports = {\r\n                // Helper function for different modes\r\n                modes: {\r\n                    single: function(chart, e) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var elements = [];\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                elements.push(element);\r\n                                return elements;\r\n                            }\r\n                        });\r\n\r\n                        return elements.slice(0, 1);\r\n                    },\r\n\r\n                    /**\r\n                     * @function Chart.Interaction.modes.label\r\n                     * @deprecated since version 2.4.0\r\n                     * @todo remove at version 3\r\n                     * @private\r\n                     */\r\n                    label: indexMode,\r\n\r\n                    /**\r\n                     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\r\n                     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\r\n                     * @function Chart.Interaction.modes.index\r\n                     * @since v2.4.0\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use during interaction\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    index: indexMode,\r\n\r\n                    /**\r\n                     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\r\n                     * If the options.intersect is false, we find the nearest item and return the items in that dataset\r\n                     * @function Chart.Interaction.modes.dataset\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use during interaction\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    dataset: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        options.axis = options.axis || 'xy';\r\n                        var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\r\n\r\n                        if (items.length > 0) {\r\n                            items = chart.getDatasetMeta(items[0]._datasetIndex).data;\r\n                        }\r\n\r\n                        return items;\r\n                    },\r\n\r\n                    /**\r\n                     * @function Chart.Interaction.modes.x-axis\r\n                     * @deprecated since version 2.4.0. Use index mode and intersect == true\r\n                     * @todo remove at version 3\r\n                     * @private\r\n                     */\r\n                    'x-axis': function(chart, e) {\r\n                        return indexMode(chart, e, { intersect: false });\r\n                    },\r\n\r\n                    /**\r\n                     * Point mode returns all elements that hit test based on the event position\r\n                     * of the event\r\n                     * @function Chart.Interaction.modes.intersect\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    point: function(chart, e) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        return getIntersectItems(chart, position);\r\n                    },\r\n\r\n                    /**\r\n                     * nearest mode returns the element closest to the point\r\n                     * @function Chart.Interaction.modes.intersect\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    nearest: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        options.axis = options.axis || 'xy';\r\n                        var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                        var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\r\n\r\n                        // We have multiple items at the same distance from the event. Now sort by smallest\r\n                        if (nearestItems.length > 1) {\r\n                            nearestItems.sort(function(a, b) {\r\n                                var sizeA = a.getArea();\r\n                                var sizeB = b.getArea();\r\n                                var ret = sizeA - sizeB;\r\n\r\n                                if (ret === 0) {\r\n                                    // if equal sort by dataset index\r\n                                    ret = a._datasetIndex - b._datasetIndex;\r\n                                }\r\n\r\n                                return ret;\r\n                            });\r\n                        }\r\n\r\n                        // Return only 1 item\r\n                        return nearestItems.slice(0, 1);\r\n                    },\r\n\r\n                    /**\r\n                     * x mode returns the elements that hit-test at the current x coordinate\r\n                     * @function Chart.Interaction.modes.x\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    x: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var items = [];\r\n                        var intersectsItem = false;\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inXRange(position.x)) {\r\n                                items.push(element);\r\n                            }\r\n\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                intersectsItem = true;\r\n                            }\r\n                        });\r\n\r\n                        // If we want to trigger on an intersect and we don't have any items\r\n                        // that intersect the position, return nothing\r\n                        if (options.intersect && !intersectsItem) {\r\n                            items = [];\r\n                        }\r\n                        return items;\r\n                    },\r\n\r\n                    /**\r\n                     * y mode returns the elements that hit-test at the current y coordinate\r\n                     * @function Chart.Interaction.modes.y\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    y: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var items = [];\r\n                        var intersectsItem = false;\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inYRange(position.y)) {\r\n                                items.push(element);\r\n                            }\r\n\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                intersectsItem = true;\r\n                            }\r\n                        });\r\n\r\n                        // If we want to trigger on an intersect and we don't have any items\r\n                        // that intersect the position, return nothing\r\n                        if (options.intersect && !intersectsItem) {\r\n                            items = [];\r\n                        }\r\n                        return items;\r\n                    }\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 20: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n\r\n            defaults._set('global', {\r\n                responsive: true,\r\n                responsiveAnimationDuration: 0,\r\n                maintainAspectRatio: true,\r\n                events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\r\n                hover: {\r\n                    onHover: null,\r\n                    mode: 'nearest',\r\n                    intersect: true,\r\n                    animationDuration: 400\r\n                },\r\n                onClick: null,\r\n                defaultColor: 'rgba(0,0,0,0.1)',\r\n                defaultFontColor: '#666',\r\n                defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n                defaultFontSize: 12,\r\n                defaultFontStyle: 'normal',\r\n                showLines: true,\r\n\r\n                // Element defaults defined in element extensions\r\n                elements: {},\r\n\r\n                // Layout options such as padding\r\n                layout: {\r\n                    padding: {\r\n                        top: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        left: 0\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = function() {\r\n                // Occupy the global variable of Chart, and create a simple base class\r\n                var Chart = function(item, config) {\r\n                    this.construct(item, config);\r\n                    return this;\r\n                };\r\n\r\n                Chart.Chart = Chart;\r\n\r\n                return Chart;\r\n            };\r\n        }, { \"16\": 16 }], 21: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            function filterByPosition(array, position) {\r\n                return helpers.where(array, function(v) {\r\n                    return v.position === position;\r\n                });\r\n            }\r\n\r\n            function sortByWeight(array, reverse) {\r\n                array.forEach(function(v, i) {\r\n                    v._tmpIndex_ = i;\r\n                    return v;\r\n                });\r\n                array.sort(function(a, b) {\r\n                    var v0 = reverse ? b : a;\r\n                    var v1 = reverse ? a : b;\r\n                    return v0.weight === v1.weight ?\r\n                        v0._tmpIndex_ - v1._tmpIndex_ :\r\n                        v0.weight - v1.weight;\r\n                });\r\n                array.forEach(function(v) {\r\n                    delete v._tmpIndex_;\r\n                });\r\n            }\r\n\r\n            /**\r\n             * @interface ILayoutItem\r\n             * @prop {String} position - The position of the item in the chart layout. Possible values are\r\n             * 'left', 'top', 'right', 'bottom', and 'chartArea'\r\n             * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\r\n             * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\r\n             * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\r\n             * @prop {Function} update - Takes two parameters: width and height. Returns size of item\r\n             * @prop {Function} getPadding -  Returns an object with padding on the edges\r\n             * @prop {Number} width - Width of item. Must be valid after update()\r\n             * @prop {Number} height - Height of item. Must be valid after update()\r\n             * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\r\n             */\r\n\r\n            // The layout service is very self explanatory.  It's responsible for the layout within a chart.\r\n            // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\r\n            // It is this service's responsibility of carrying out that layout.\r\n            module.exports = {\r\n                defaults: {},\r\n\r\n                /**\r\n                 * Register a box to a chart.\r\n                 * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\r\n                 * @param {Chart} chart - the chart to use\r\n                 * @param {ILayoutItem} item - the item to add to be layed out\r\n                 */\r\n                addBox: function(chart, item) {\r\n                    if (!chart.boxes) {\r\n                        chart.boxes = [];\r\n                    }\r\n\r\n                    // initialize item with default values\r\n                    item.fullWidth = item.fullWidth || false;\r\n                    item.position = item.position || 'top';\r\n                    item.weight = item.weight || 0;\r\n\r\n                    chart.boxes.push(item);\r\n                },\r\n\r\n                /**\r\n                 * Remove a layoutItem from a chart\r\n                 * @param {Chart} chart - the chart to remove the box from\r\n                 * @param {Object} layoutItem - the item to remove from the layout\r\n                 */\r\n                removeBox: function(chart, layoutItem) {\r\n                    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n                    if (index !== -1) {\r\n                        chart.boxes.splice(index, 1);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Sets (or updates) options on the given `item`.\r\n                 * @param {Chart} chart - the chart in which the item lives (or will be added to)\r\n                 * @param {Object} item - the item to configure with the given options\r\n                 * @param {Object} options - the new item options.\r\n                 */\r\n                configure: function(chart, item, options) {\r\n                    var props = ['fullWidth', 'position', 'weight'];\r\n                    var ilen = props.length;\r\n                    var i = 0;\r\n                    var prop;\r\n\r\n                    for (; i < ilen; ++i) {\r\n                        prop = props[i];\r\n                        if (options.hasOwnProperty(prop)) {\r\n                            item[prop] = options[prop];\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Fits boxes of the given chart into the given size by having each box measure itself\r\n                 * then running a fitting algorithm\r\n                 * @param {Chart} chart - the chart\r\n                 * @param {Number} width - the width to fit into\r\n                 * @param {Number} height - the height to fit into\r\n                 */\r\n                update: function(chart, width, height) {\r\n                    if (!chart) {\r\n                        return;\r\n                    }\r\n\r\n                    var layoutOptions = chart.options.layout || {};\r\n                    var padding = helpers.options.toPadding(layoutOptions.padding);\r\n                    var leftPadding = padding.left;\r\n                    var rightPadding = padding.right;\r\n                    var topPadding = padding.top;\r\n                    var bottomPadding = padding.bottom;\r\n\r\n                    var leftBoxes = filterByPosition(chart.boxes, 'left');\r\n                    var rightBoxes = filterByPosition(chart.boxes, 'right');\r\n                    var topBoxes = filterByPosition(chart.boxes, 'top');\r\n                    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\r\n                    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\r\n\r\n                    // Sort boxes by weight. A higher weight is further away from the chart area\r\n                    sortByWeight(leftBoxes, true);\r\n                    sortByWeight(rightBoxes, false);\r\n                    sortByWeight(topBoxes, true);\r\n                    sortByWeight(bottomBoxes, false);\r\n\r\n                    // Essentially we now have any number of boxes on each of the 4 sides.\r\n                    // Our canvas looks like the following.\r\n                    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\r\n                    // B1 is the bottom axis\r\n                    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\r\n                    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\r\n                    // an error will be thrown.\r\n                    //\r\n                    // |----------------------------------------------------|\r\n                    // |                  T1 (Full Width)                   |\r\n                    // |----------------------------------------------------|\r\n                    // |    |    |                 T2                  |    |\r\n                    // |    |----|-------------------------------------|----|\r\n                    // |    |    | C1 |                           | C2 |    |\r\n                    // |    |    |----|                           |----|    |\r\n                    // |    |    |                                     |    |\r\n                    // | L1 | L2 |           ChartArea (C0)            | R1 |\r\n                    // |    |    |                                     |    |\r\n                    // |    |    |----|                           |----|    |\r\n                    // |    |    | C3 |                           | C4 |    |\r\n                    // |    |----|-------------------------------------|----|\r\n                    // |    |    |                 B1                  |    |\r\n                    // |----------------------------------------------------|\r\n                    // |                  B2 (Full Width)                   |\r\n                    // |----------------------------------------------------|\r\n                    //\r\n                    // What we do to find the best sizing, we do the following\r\n                    // 1. Determine the minimum size of the chart area.\r\n                    // 2. Split the remaining width equally between each vertical axis\r\n                    // 3. Split the remaining height equally between each horizontal axis\r\n                    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\r\n                    // 5. Adjust the sizes of each axis based on it's minimum reported size.\r\n                    // 6. Refit each axis\r\n                    // 7. Position each axis in the final location\r\n                    // 8. Tell the chart the final location of the chart area\r\n                    // 9. Tell any axes that overlay the chart area the positions of the chart area\r\n\r\n                    // Step 1\r\n                    var chartWidth = width - leftPadding - rightPadding;\r\n                    var chartHeight = height - topPadding - bottomPadding;\r\n                    var chartAreaWidth = chartWidth / 2; // min 50%\r\n                    var chartAreaHeight = chartHeight / 2; // min 50%\r\n\r\n                    // Step 2\r\n                    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\r\n\r\n                    // Step 3\r\n                    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\r\n\r\n                    // Step 4\r\n                    var maxChartAreaWidth = chartWidth;\r\n                    var maxChartAreaHeight = chartHeight;\r\n                    var minBoxSizes = [];\r\n\r\n                    function getMinimumBoxSize(box) {\r\n                        var minSize;\r\n                        var isHorizontal = box.isHorizontal();\r\n\r\n                        if (isHorizontal) {\r\n                            minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\r\n                            maxChartAreaHeight -= minSize.height;\r\n                        } else {\r\n                            minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\r\n                            maxChartAreaWidth -= minSize.width;\r\n                        }\r\n\r\n                        minBoxSizes.push({\r\n                            horizontal: isHorizontal,\r\n                            minSize: minSize,\r\n                            box: box,\r\n                        });\r\n                    }\r\n\r\n                    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\r\n\r\n                    // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\r\n                    var maxHorizontalLeftPadding = 0;\r\n                    var maxHorizontalRightPadding = 0;\r\n                    var maxVerticalTopPadding = 0;\r\n                    var maxVerticalBottomPadding = 0;\r\n\r\n                    helpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\r\n                        if (horizontalBox.getPadding) {\r\n                            var boxPadding = horizontalBox.getPadding();\r\n                            maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\r\n                            maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\r\n                        }\r\n                    });\r\n\r\n                    helpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\r\n                        if (verticalBox.getPadding) {\r\n                            var boxPadding = verticalBox.getPadding();\r\n                            maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\r\n                            maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\r\n                        }\r\n                    });\r\n\r\n                    // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\r\n                    // be if the axes are drawn at their minimum sizes.\r\n                    // Steps 5 & 6\r\n                    var totalLeftBoxesWidth = leftPadding;\r\n                    var totalRightBoxesWidth = rightPadding;\r\n                    var totalTopBoxesHeight = topPadding;\r\n                    var totalBottomBoxesHeight = bottomPadding;\r\n\r\n                    // Function to fit a box\r\n                    function fitBox(box) {\r\n                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\r\n                            return minBox.box === box;\r\n                        });\r\n\r\n                        if (minBoxSize) {\r\n                            if (box.isHorizontal()) {\r\n                                var scaleMargin = {\r\n                                    left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\r\n                                    right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\r\n                                    top: 0,\r\n                                    bottom: 0\r\n                                };\r\n\r\n                                // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\r\n                                // on the margin. Sometimes they need to increase in size slightly\r\n                                box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\r\n                            } else {\r\n                                box.update(minBoxSize.minSize.width, maxChartAreaHeight);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Update, and calculate the left and right margins for the horizontal boxes\r\n                    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\r\n\r\n                    helpers.each(leftBoxes, function(box) {\r\n                        totalLeftBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(rightBoxes, function(box) {\r\n                        totalRightBoxesWidth += box.width;\r\n                    });\r\n\r\n                    // Set the Left and Right margins for the horizontal boxes\r\n                    helpers.each(topBoxes.concat(bottomBoxes), fitBox);\r\n\r\n                    // Figure out how much margin is on the top and bottom of the vertical boxes\r\n                    helpers.each(topBoxes, function(box) {\r\n                        totalTopBoxesHeight += box.height;\r\n                    });\r\n\r\n                    helpers.each(bottomBoxes, function(box) {\r\n                        totalBottomBoxesHeight += box.height;\r\n                    });\r\n\r\n                    function finalFitVerticalBox(box) {\r\n                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\r\n                            return minSize.box === box;\r\n                        });\r\n\r\n                        var scaleMargin = {\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: totalTopBoxesHeight,\r\n                            bottom: totalBottomBoxesHeight\r\n                        };\r\n\r\n                        if (minBoxSize) {\r\n                            box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\r\n                        }\r\n                    }\r\n\r\n                    // Let the left layout know the final margin\r\n                    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\r\n\r\n                    // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\r\n                    totalLeftBoxesWidth = leftPadding;\r\n                    totalRightBoxesWidth = rightPadding;\r\n                    totalTopBoxesHeight = topPadding;\r\n                    totalBottomBoxesHeight = bottomPadding;\r\n\r\n                    helpers.each(leftBoxes, function(box) {\r\n                        totalLeftBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(rightBoxes, function(box) {\r\n                        totalRightBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(topBoxes, function(box) {\r\n                        totalTopBoxesHeight += box.height;\r\n                    });\r\n                    helpers.each(bottomBoxes, function(box) {\r\n                        totalBottomBoxesHeight += box.height;\r\n                    });\r\n\r\n                    // We may be adding some padding to account for rotated x axis labels\r\n                    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\r\n                    totalLeftBoxesWidth += leftPaddingAddition;\r\n                    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\r\n\r\n                    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\r\n                    totalTopBoxesHeight += topPaddingAddition;\r\n                    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\r\n\r\n                    // Figure out if our chart area changed. This would occur if the dataset layout label rotation\r\n                    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\r\n                    // without calling `fit` again\r\n                    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\r\n                    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\r\n\r\n                    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\r\n                        helpers.each(leftBoxes, function(box) {\r\n                            box.height = newMaxChartAreaHeight;\r\n                        });\r\n\r\n                        helpers.each(rightBoxes, function(box) {\r\n                            box.height = newMaxChartAreaHeight;\r\n                        });\r\n\r\n                        helpers.each(topBoxes, function(box) {\r\n                            if (!box.fullWidth) {\r\n                                box.width = newMaxChartAreaWidth;\r\n                            }\r\n                        });\r\n\r\n                        helpers.each(bottomBoxes, function(box) {\r\n                            if (!box.fullWidth) {\r\n                                box.width = newMaxChartAreaWidth;\r\n                            }\r\n                        });\r\n\r\n                        maxChartAreaHeight = newMaxChartAreaHeight;\r\n                        maxChartAreaWidth = newMaxChartAreaWidth;\r\n                    }\r\n\r\n                    // Step 7 - Position the boxes\r\n                    var left = leftPadding + leftPaddingAddition;\r\n                    var top = topPadding + topPaddingAddition;\r\n\r\n                    function placeBox(box) {\r\n                        if (box.isHorizontal()) {\r\n                            box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\r\n                            box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\r\n                            box.top = top;\r\n                            box.bottom = top + box.height;\r\n\r\n                            // Move to next point\r\n                            top = box.bottom;\r\n                        } else {\r\n                            box.left = left;\r\n                            box.right = left + box.width;\r\n                            box.top = totalTopBoxesHeight;\r\n                            box.bottom = totalTopBoxesHeight + maxChartAreaHeight;\r\n\r\n                            // Move to next point\r\n                            left = box.right;\r\n                        }\r\n                    }\r\n\r\n                    helpers.each(leftBoxes.concat(topBoxes), placeBox);\r\n\r\n                    // Account for chart width and height\r\n                    left += maxChartAreaWidth;\r\n                    top += maxChartAreaHeight;\r\n\r\n                    helpers.each(rightBoxes, placeBox);\r\n                    helpers.each(bottomBoxes, placeBox);\r\n\r\n                    // Step 8\r\n                    chart.chartArea = {\r\n                        left: totalLeftBoxesWidth,\r\n                        top: totalTopBoxesHeight,\r\n                        right: totalLeftBoxesWidth + maxChartAreaWidth,\r\n                        bottom: totalTopBoxesHeight + maxChartAreaHeight\r\n                    };\r\n\r\n                    // Step 9\r\n                    helpers.each(chartAreaBoxes, function(box) {\r\n                        box.left = chart.chartArea.left;\r\n                        box.top = chart.chartArea.top;\r\n                        box.right = chart.chartArea.right;\r\n                        box.bottom = chart.chartArea.bottom;\r\n\r\n                        box.update(maxChartAreaWidth, maxChartAreaHeight);\r\n                    });\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 22: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                plugins: {}\r\n            });\r\n\r\n            /**\r\n             * The plugin service singleton\r\n             * @namespace Chart.plugins\r\n             * @since 2.1.0\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Globally registered plugins.\r\n                 * @private\r\n                 */\r\n                _plugins: [],\r\n\r\n                /**\r\n                 * This identifier is used to invalidate the descriptors cache attached to each chart\r\n                 * when a global plugin is registered or unregistered. In this case, the cache ID is\r\n                 * incremented and descriptors are regenerated during following API calls.\r\n                 * @private\r\n                 */\r\n                _cacheId: 0,\r\n\r\n                /**\r\n                 * Registers the given plugin(s) if not already registered.\r\n                 * @param {Array|Object} plugins plugin instance(s).\r\n                 */\r\n                register: function(plugins) {\r\n                    var p = this._plugins;\r\n                    ([]).concat(plugins).forEach(function(plugin) {\r\n                        if (p.indexOf(plugin) === -1) {\r\n                            p.push(plugin);\r\n                        }\r\n                    });\r\n\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Unregisters the given plugin(s) only if registered.\r\n                 * @param {Array|Object} plugins plugin instance(s).\r\n                 */\r\n                unregister: function(plugins) {\r\n                    var p = this._plugins;\r\n                    ([]).concat(plugins).forEach(function(plugin) {\r\n                        var idx = p.indexOf(plugin);\r\n                        if (idx !== -1) {\r\n                            p.splice(idx, 1);\r\n                        }\r\n                    });\r\n\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Remove all registered plugins.\r\n                 * @since 2.1.5\r\n                 */\r\n                clear: function() {\r\n                    this._plugins = [];\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Returns the number of registered plugins?\r\n                 * @returns {Number}\r\n                 * @since 2.1.5\r\n                 */\r\n                count: function() {\r\n                    return this._plugins.length;\r\n                },\r\n\r\n                /**\r\n                 * Returns all registered plugin instances.\r\n                 * @returns {Array} array of plugin objects.\r\n                 * @since 2.1.5\r\n                 */\r\n                getAll: function() {\r\n                    return this._plugins;\r\n                },\r\n\r\n                /**\r\n                 * Calls enabled plugins for `chart` on the specified hook and with the given args.\r\n                 * This method immediately returns as soon as a plugin explicitly returns false. The\r\n                 * returned value can be used, for instance, to interrupt the current action.\r\n                 * @param {Object} chart - The chart instance for which plugins should be called.\r\n                 * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\r\n                 * @param {Array} [args] - Extra arguments to apply to the hook call.\r\n                 * @returns {Boolean} false if any of the plugins return false, else returns true.\r\n                 */\r\n                notify: function(chart, hook, args) {\r\n                    var descriptors = this.descriptors(chart);\r\n                    var ilen = descriptors.length;\r\n                    var i, descriptor, plugin, params, method;\r\n\r\n                    for (i = 0; i < ilen; ++i) {\r\n                        descriptor = descriptors[i];\r\n                        plugin = descriptor.plugin;\r\n                        method = plugin[hook];\r\n                        if (typeof method === 'function') {\r\n                            params = [chart].concat(args || []);\r\n                            params.push(descriptor.options);\r\n                            if (method.apply(plugin, params) === false) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                },\r\n\r\n                /**\r\n                 * Returns descriptors of enabled plugins for the given chart.\r\n                 * @returns {Array} [{ plugin, options }]\r\n                 * @private\r\n                 */\r\n                descriptors: function(chart) {\r\n                    var cache = chart.$plugins || (chart.$plugins = {});\r\n                    if (cache.id === this._cacheId) {\r\n                        return cache.descriptors;\r\n                    }\r\n\r\n                    var plugins = [];\r\n                    var descriptors = [];\r\n                    var config = (chart && chart.config) || {};\r\n                    var options = (config.options && config.options.plugins) || {};\r\n\r\n                    this._plugins.concat(config.plugins || []).forEach(function(plugin) {\r\n                        var idx = plugins.indexOf(plugin);\r\n                        if (idx !== -1) {\r\n                            return;\r\n                        }\r\n\r\n                        var id = plugin.id;\r\n                        var opts = options[id];\r\n                        if (opts === false) {\r\n                            return;\r\n                        }\r\n\r\n                        if (opts === true) {\r\n                            opts = helpers.clone(defaults.global.plugins[id]);\r\n                        }\r\n\r\n                        plugins.push(plugin);\r\n                        descriptors.push({\r\n                            plugin: plugin,\r\n                            options: opts || {}\r\n                        });\r\n                    });\r\n\r\n                    cache.descriptors = descriptors;\r\n                    cache.id = this._cacheId;\r\n                    return descriptors;\r\n                },\r\n\r\n                /**\r\n                 * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\r\n                 * but in some cases, this reference can be changed by the user when updating options.\r\n                 * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\r\n                 * @private\r\n                 */\r\n                _invalidate: function(chart) {\r\n                    delete chart.$plugins;\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Plugin extension hooks.\r\n             * @interface IPlugin\r\n             * @since 2.1.0\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeInit\r\n             * @desc Called before initializing `chart`.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterInit\r\n             * @desc Called after `chart` has been initialized and before the first update.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeUpdate\r\n             * @desc Called before updating `chart`. If any plugin returns `false`, the update\r\n             * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart update.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterUpdate\r\n             * @desc Called after `chart` has been updated and before rendering. Note that this\r\n             * hook will not be called if the chart update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetsUpdate\r\n             * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\r\n             * the datasets update is cancelled until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} false to cancel the datasets update.\r\n             * @since version 2.1.5\r\n            */\r\n            /**\r\n             * @method IPlugin#afterDatasetsUpdate\r\n             * @desc Called after the `chart` datasets have been updated. Note that this hook\r\n             * will not be called if the datasets update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @since version 2.1.5\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetUpdate\r\n             * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\r\n             * returns `false`, the datasets update is cancelled until another `update` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetUpdate\r\n             * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\r\n             * that this hook will not be called if the datasets update has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeLayout\r\n             * @desc Called before laying out `chart`. If any plugin returns `false`,\r\n             * the layout update is cancelled until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart layout.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterLayout\r\n             * @desc Called after the `chart` has been layed out. Note that this hook will not\r\n             * be called if the layout update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeRender\r\n             * @desc Called before rendering `chart`. If any plugin returns `false`,\r\n             * the rendering is cancelled until another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart rendering.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterRender\r\n             * @desc Called after the `chart` has been fully rendered (and animation completed). Note\r\n             * that this hook will not be called if the rendering has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDraw\r\n             * @desc Called before drawing `chart` at every animation frame specified by the given\r\n             * easing value. If any plugin returns `false`, the frame drawing is cancelled until\r\n             * another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDraw\r\n             * @desc Called after the `chart` has been drawn for the specific easing value. Note\r\n             * that this hook will not be called if the drawing has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetsDraw\r\n             * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\r\n             * the datasets drawing is cancelled until another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetsDraw\r\n             * @desc Called after the `chart` datasets have been drawn. Note that this hook\r\n             * will not be called if the datasets drawing has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetDraw\r\n             * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\r\n             * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\r\n             * is cancelled until another `render` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetDraw\r\n             * @desc Called after the `chart` datasets at the given `args.index` have been drawn\r\n             * (datasets are drawn in the reverse order). Note that this hook will not be called\r\n             * if the datasets drawing has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeTooltipDraw\r\n             * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\r\n             * the tooltip drawing is cancelled until another `render` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Object} args.tooltip - The tooltip.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart tooltip drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterTooltipDraw\r\n             * @desc Called after drawing the `tooltip`. Note that this hook will not\r\n             * be called if the tooltip drawing has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Object} args.tooltip - The tooltip.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeEvent\r\n             * @desc Called before processing the specified `event`. If any plugin returns `false`,\r\n             * the event will be discarded.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {IEvent} event - The event object.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterEvent\r\n             * @desc Called after the `event` has been consumed. Note that this hook\r\n             * will not be called if the `event` has been previously discarded.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {IEvent} event - The event object.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#resize\r\n             * @desc Called after the chart as been resized.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#destroy\r\n             * @desc Called after the chart as been destroyed.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n        }, { \"16\": 16, \"36\": 36 }], 23: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var Ticks = require(25);\r\n\r\n            defaults._set('scale', {\r\n                display: true,\r\n                position: 'left',\r\n                offset: false,\r\n\r\n                // grid line settings\r\n                gridLines: {\r\n                    display: true,\r\n                    color: 'rgba(0, 0, 0, 0.1)',\r\n                    lineWidth: 1,\r\n                    drawBorder: true,\r\n                    drawOnChartArea: true,\r\n                    drawTicks: true,\r\n                    tickMarkLength: 10,\r\n                    zeroLineWidth: 1,\r\n                    zeroLineColor: 'rgba(0,0,0,0.25)',\r\n                    zeroLineBorderDash: [],\r\n                    zeroLineBorderDashOffset: 0.0,\r\n                    offsetGridLines: false,\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0\r\n                },\r\n\r\n                // scale label\r\n                scaleLabel: {\r\n                    // display property\r\n                    display: false,\r\n\r\n                    // actual label\r\n                    labelString: '',\r\n\r\n                    // line height\r\n                    lineHeight: 1.2,\r\n\r\n                    // top/bottom padding\r\n                    padding: {\r\n                        top: 4,\r\n                        bottom: 4\r\n                    }\r\n                },\r\n\r\n                // label settings\r\n                ticks: {\r\n                    beginAtZero: false,\r\n                    minRotation: 0,\r\n                    maxRotation: 50,\r\n                    mirror: false,\r\n                    padding: 0,\r\n                    reverse: false,\r\n                    display: true,\r\n                    autoSkip: true,\r\n                    autoSkipPadding: 0,\r\n                    labelOffset: 0,\r\n                    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\r\n                    callback: Ticks.formatters.values,\r\n                    minor: {},\r\n                    major: {}\r\n                }\r\n            });\r\n\r\n            function labelsFromTicks(ticks) {\r\n                var labels = [];\r\n                var i, ilen;\r\n\r\n                for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n                    labels.push(ticks[i].label);\r\n                }\r\n\r\n                return labels;\r\n            }\r\n\r\n            function getLineValue(scale, index, offsetGridLines) {\r\n                var lineValue = scale.getPixelForTick(index);\r\n\r\n                if (offsetGridLines) {\r\n                    if (index === 0) {\r\n                        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\r\n                    } else {\r\n                        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\r\n                    }\r\n                }\r\n                return lineValue;\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                function computeTextSize(context, tick, font) {\r\n                    return helpers.isArray(tick) ?\r\n                        helpers.longestText(context, font, tick) :\r\n                        context.measureText(tick).width;\r\n                }\r\n\r\n                function parseFontOptions(options) {\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var globalDefaults = defaults.global;\r\n                    var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\r\n                    var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\r\n                    var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\r\n\r\n                    return {\r\n                        size: size,\r\n                        style: style,\r\n                        family: family,\r\n                        font: helpers.fontString(size, style, family)\r\n                    };\r\n                }\r\n\r\n                function parseLineHeight(options) {\r\n                    return helpers.options.toLineHeight(\r\n                        helpers.valueOrDefault(options.lineHeight, 1.2),\r\n                        helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\r\n                }\r\n\r\n                Chart.Scale = Element.extend({\r\n                    /**\r\n                     * Get the padding needed for the scale\r\n                     * @method getPadding\r\n                     * @private\r\n                     * @returns {Padding} the necessary padding\r\n                     */\r\n                    getPadding: function() {\r\n                        var me = this;\r\n                        return {\r\n                            left: me.paddingLeft || 0,\r\n                            top: me.paddingTop || 0,\r\n                            right: me.paddingRight || 0,\r\n                            bottom: me.paddingBottom || 0\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the scale tick objects ({label, major})\r\n                     * @since 2.7\r\n                     */\r\n                    getTicks: function() {\r\n                        return this._ticks;\r\n                    },\r\n\r\n                    // These methods are ordered by lifecyle. Utilities then follow.\r\n                    // Any function defined here is inherited by all scale types.\r\n                    // Any function can be extended by the scale type\r\n\r\n                    mergeTicksOptions: function() {\r\n                        var ticks = this.options.ticks;\r\n                        if (ticks.minor === false) {\r\n                            ticks.minor = {\r\n                                display: false\r\n                            };\r\n                        }\r\n                        if (ticks.major === false) {\r\n                            ticks.major = {\r\n                                display: false\r\n                            };\r\n                        }\r\n                        for (var key in ticks) {\r\n                            if (key !== 'major' && key !== 'minor') {\r\n                                if (typeof ticks.minor[key] === 'undefined') {\r\n                                    ticks.minor[key] = ticks[key];\r\n                                }\r\n                                if (typeof ticks.major[key] === 'undefined') {\r\n                                    ticks.major[key] = ticks[key];\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    beforeUpdate: function() {\r\n                        helpers.callback(this.options.beforeUpdate, [this]);\r\n                    },\r\n                    update: function(maxWidth, maxHeight, margins) {\r\n                        var me = this;\r\n                        var i, ilen, labels, label, ticks, tick;\r\n\r\n                        // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                        me.beforeUpdate();\r\n\r\n                        // Absorb the master measurements\r\n                        me.maxWidth = maxWidth;\r\n                        me.maxHeight = maxHeight;\r\n                        me.margins = helpers.extend({\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: 0,\r\n                            bottom: 0\r\n                        }, margins);\r\n                        me.longestTextCache = me.longestTextCache || {};\r\n\r\n                        // Dimensions\r\n                        me.beforeSetDimensions();\r\n                        me.setDimensions();\r\n                        me.afterSetDimensions();\r\n\r\n                        // Data min/max\r\n                        me.beforeDataLimits();\r\n                        me.determineDataLimits();\r\n                        me.afterDataLimits();\r\n\r\n                        // Ticks - `this.ticks` is now DEPRECATED!\r\n                        // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\r\n                        // and must not be accessed directly from outside this class. `this.ticks` being\r\n                        // around for long time and not marked as private, we can't change its structure\r\n                        // without unexpected breaking changes. If you need to access the scale ticks,\r\n                        // use scale.getTicks() instead.\r\n\r\n                        me.beforeBuildTicks();\r\n\r\n                        // New implementations should return an array of objects but for BACKWARD COMPAT,\r\n                        // we still support no return (`this.ticks` internally set by calling this method).\r\n                        ticks = me.buildTicks() || [];\r\n\r\n                        me.afterBuildTicks();\r\n\r\n                        me.beforeTickToLabelConversion();\r\n\r\n                        // New implementations should return the formatted tick labels but for BACKWARD\r\n                        // COMPAT, we still support no return (`this.ticks` internally changed by calling\r\n                        // this method and supposed to contain only string values).\r\n                        labels = me.convertTicksToLabels(ticks) || me.ticks;\r\n\r\n                        me.afterTickToLabelConversion();\r\n\r\n                        me.ticks = labels;   // BACKWARD COMPATIBILITY\r\n\r\n                        // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\r\n\r\n                        // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\r\n                        for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n                            label = labels[i];\r\n                            tick = ticks[i];\r\n                            if (!tick) {\r\n                                ticks.push(tick = {\r\n                                    label: label,\r\n                                    major: false\r\n                                });\r\n                            } else {\r\n                                tick.label = label;\r\n                            }\r\n                        }\r\n\r\n                        me._ticks = ticks;\r\n\r\n                        // Tick Rotation\r\n                        me.beforeCalculateTickRotation();\r\n                        me.calculateTickRotation();\r\n                        me.afterCalculateTickRotation();\r\n                        // Fit\r\n                        me.beforeFit();\r\n                        me.fit();\r\n                        me.afterFit();\r\n                        //\r\n                        me.afterUpdate();\r\n\r\n                        return me.minSize;\r\n                    },\r\n                    afterUpdate: function() {\r\n                        helpers.callback(this.options.afterUpdate, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeSetDimensions: function() {\r\n                        helpers.callback(this.options.beforeSetDimensions, [this]);\r\n                    },\r\n                    setDimensions: function() {\r\n                        var me = this;\r\n                        // Set the unconstrained dimension before label rotation\r\n                        if (me.isHorizontal()) {\r\n                            // Reset position before calculating rotation\r\n                            me.width = me.maxWidth;\r\n                            me.left = 0;\r\n                            me.right = me.width;\r\n                        } else {\r\n                            me.height = me.maxHeight;\r\n\r\n                            // Reset position before calculating rotation\r\n                            me.top = 0;\r\n                            me.bottom = me.height;\r\n                        }\r\n\r\n                        // Reset padding\r\n                        me.paddingLeft = 0;\r\n                        me.paddingTop = 0;\r\n                        me.paddingRight = 0;\r\n                        me.paddingBottom = 0;\r\n                    },\r\n                    afterSetDimensions: function() {\r\n                        helpers.callback(this.options.afterSetDimensions, [this]);\r\n                    },\r\n\r\n                    // Data limits\r\n                    beforeDataLimits: function() {\r\n                        helpers.callback(this.options.beforeDataLimits, [this]);\r\n                    },\r\n                    determineDataLimits: helpers.noop,\r\n                    afterDataLimits: function() {\r\n                        helpers.callback(this.options.afterDataLimits, [this]);\r\n                    },\r\n\r\n                    //\r\n                    beforeBuildTicks: function() {\r\n                        helpers.callback(this.options.beforeBuildTicks, [this]);\r\n                    },\r\n                    buildTicks: helpers.noop,\r\n                    afterBuildTicks: function() {\r\n                        helpers.callback(this.options.afterBuildTicks, [this]);\r\n                    },\r\n\r\n                    beforeTickToLabelConversion: function() {\r\n                        helpers.callback(this.options.beforeTickToLabelConversion, [this]);\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        // Convert ticks to strings\r\n                        var tickOpts = me.options.ticks;\r\n                        me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\r\n                    },\r\n                    afterTickToLabelConversion: function() {\r\n                        helpers.callback(this.options.afterTickToLabelConversion, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeCalculateTickRotation: function() {\r\n                        helpers.callback(this.options.beforeCalculateTickRotation, [this]);\r\n                    },\r\n                    calculateTickRotation: function() {\r\n                        var me = this;\r\n                        var context = me.ctx;\r\n                        var tickOpts = me.options.ticks;\r\n                        var labels = labelsFromTicks(me._ticks);\r\n\r\n                        // Get the width of each grid by calculating the difference\r\n                        // between x offsets between 0 and 1.\r\n                        var tickFont = parseFontOptions(tickOpts);\r\n                        context.font = tickFont.font;\r\n\r\n                        var labelRotation = tickOpts.minRotation || 0;\r\n\r\n                        if (labels.length && me.options.display && me.isHorizontal()) {\r\n                            var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\r\n                            var labelWidth = originalLabelWidth;\r\n                            var cosRotation, sinRotation;\r\n\r\n                            // Allow 3 pixels x2 padding either side for label readability\r\n                            var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\r\n\r\n                            // Max label rotation can be set or default to 90 - also act as a loop counter\r\n                            while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\r\n                                var angleRadians = helpers.toRadians(labelRotation);\r\n                                cosRotation = Math.cos(angleRadians);\r\n                                sinRotation = Math.sin(angleRadians);\r\n\r\n                                if (sinRotation * originalLabelWidth > me.maxHeight) {\r\n                                    // go back one step\r\n                                    labelRotation--;\r\n                                    break;\r\n                                }\r\n\r\n                                labelRotation++;\r\n                                labelWidth = cosRotation * originalLabelWidth;\r\n                            }\r\n                        }\r\n\r\n                        me.labelRotation = labelRotation;\r\n                    },\r\n                    afterCalculateTickRotation: function() {\r\n                        helpers.callback(this.options.afterCalculateTickRotation, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeFit: function() {\r\n                        helpers.callback(this.options.beforeFit, [this]);\r\n                    },\r\n                    fit: function() {\r\n                        var me = this;\r\n                        // Reset\r\n                        var minSize = me.minSize = {\r\n                            width: 0,\r\n                            height: 0\r\n                        };\r\n\r\n                        var labels = labelsFromTicks(me._ticks);\r\n\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n                        var scaleLabelOpts = opts.scaleLabel;\r\n                        var gridLineOpts = opts.gridLines;\r\n                        var display = opts.display;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        var tickFont = parseFontOptions(tickOpts);\r\n                        var tickMarkLength = opts.gridLines.tickMarkLength;\r\n\r\n                        // Width\r\n                        if (isHorizontal) {\r\n                            // subtract the margins to line up with the chartArea if we are a full width scale\r\n                            minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\r\n                        } else {\r\n                            minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n                        }\r\n\r\n                        // height\r\n                        if (isHorizontal) {\r\n                            minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n                        } else {\r\n                            minSize.height = me.maxHeight; // fill all the height\r\n                        }\r\n\r\n                        // Are we showing a title for the scale?\r\n                        if (scaleLabelOpts.display && display) {\r\n                            var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\r\n                            var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\r\n                            var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\r\n\r\n                            if (isHorizontal) {\r\n                                minSize.height += deltaHeight;\r\n                            } else {\r\n                                minSize.width += deltaHeight;\r\n                            }\r\n                        }\r\n\r\n                        // Don't bother fitting the ticks if we are not showing them\r\n                        if (tickOpts.display && display) {\r\n                            var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\r\n                            var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\r\n                            var lineSpace = tickFont.size * 0.5;\r\n                            var tickPadding = me.options.ticks.padding;\r\n\r\n                            if (isHorizontal) {\r\n                                // A horizontal axis is more constrained by the height.\r\n                                me.longestLabelWidth = largestTextWidth;\r\n\r\n                                var angleRadians = helpers.toRadians(me.labelRotation);\r\n                                var cosRotation = Math.cos(angleRadians);\r\n                                var sinRotation = Math.sin(angleRadians);\r\n\r\n                                // TODO - improve this calculation\r\n                                var labelHeight = (sinRotation * largestTextWidth)\r\n                                    + (tickFont.size * tallestLabelHeightInLines)\r\n                                    + (lineSpace * (tallestLabelHeightInLines - 1))\r\n                                    + lineSpace; // padding\r\n\r\n                                minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\r\n\r\n                                me.ctx.font = tickFont.font;\r\n                                var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\r\n                                var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\r\n\r\n                                // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\r\n                                // which means that the right padding is dominated by the font height\r\n                                if (me.labelRotation !== 0) {\r\n                                    me.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\r\n                                    me.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\r\n                                } else {\r\n                                    me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\r\n                                    me.paddingRight = lastLabelWidth / 2 + 3;\r\n                                }\r\n                            } else {\r\n                                // A vertical axis is more constrained by the width. Labels are the\r\n                                // dominant factor here, so get that length first and account for padding\r\n                                if (tickOpts.mirror) {\r\n                                    largestTextWidth = 0;\r\n                                } else {\r\n                                    // use lineSpace for consistency with horizontal axis\r\n                                    // tickPadding is not implemented for horizontal\r\n                                    largestTextWidth += tickPadding + lineSpace;\r\n                                }\r\n\r\n                                minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\r\n\r\n                                me.paddingTop = tickFont.size / 2;\r\n                                me.paddingBottom = tickFont.size / 2;\r\n                            }\r\n                        }\r\n\r\n                        me.handleMargins();\r\n\r\n                        me.width = minSize.width;\r\n                        me.height = minSize.height;\r\n                    },\r\n\r\n                    /**\r\n                     * Handle margins and padding interactions\r\n                     * @private\r\n                     */\r\n                    handleMargins: function() {\r\n                        var me = this;\r\n                        if (me.margins) {\r\n                            me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\r\n                            me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\r\n                            me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\r\n                            me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\r\n                        }\r\n                    },\r\n\r\n                    afterFit: function() {\r\n                        helpers.callback(this.options.afterFit, [this]);\r\n                    },\r\n\r\n                    // Shared Methods\r\n                    isHorizontal: function() {\r\n                        return this.options.position === 'top' || this.options.position === 'bottom';\r\n                    },\r\n                    isFullWidth: function() {\r\n                        return (this.options.fullWidth);\r\n                    },\r\n\r\n                    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\r\n                    getRightValue: function(rawValue) {\r\n                        // Null and undefined values first\r\n                        if (helpers.isNullOrUndef(rawValue)) {\r\n                            return NaN;\r\n                        }\r\n                        // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\r\n                        if (typeof rawValue === 'number' && !isFinite(rawValue)) {\r\n                            return NaN;\r\n                        }\r\n                        // If it is in fact an object, dive in one more level\r\n                        if (rawValue) {\r\n                            if (this.isHorizontal()) {\r\n                                if (rawValue.x !== undefined) {\r\n                                    return this.getRightValue(rawValue.x);\r\n                                }\r\n                            } else if (rawValue.y !== undefined) {\r\n                                return this.getRightValue(rawValue.y);\r\n                            }\r\n                        }\r\n\r\n                        // Value is good, return it\r\n                        return rawValue;\r\n                    },\r\n\r\n                    /**\r\n                     * Used to get the value to display in the tooltip for the data at the given index\r\n                     * @param index\r\n                     * @param datasetIndex\r\n                     */\r\n                    getLabelForIndex: helpers.noop,\r\n\r\n                    /**\r\n                     * Returns the location of the given data point. Value can either be an index or a numerical value\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     * @param value\r\n                     * @param index\r\n                     * @param datasetIndex\r\n                     */\r\n                    getPixelForValue: helpers.noop,\r\n\r\n                    /**\r\n                     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     * @param pixel\r\n                     */\r\n                    getValueForPixel: helpers.noop,\r\n\r\n                    /**\r\n                     * Returns the location of the tick at the given index\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getPixelForTick: function(index) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        if (me.isHorizontal()) {\r\n                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n                            var tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\r\n                            var pixel = (tickWidth * index) + me.paddingLeft;\r\n\r\n                            if (offset) {\r\n                                pixel += tickWidth / 2;\r\n                            }\r\n\r\n                            var finalVal = me.left + Math.round(pixel);\r\n                            finalVal += me.isFullWidth() ? me.margins.left : 0;\r\n                            return finalVal;\r\n                        }\r\n                        var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\r\n                        return me.top + (index * (innerHeight / (me._ticks.length - 1)));\r\n                    },\r\n\r\n                    /**\r\n                     * Utility for getting the pixel location of a percentage of scale\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getPixelForDecimal: function(decimal) {\r\n                        var me = this;\r\n                        if (me.isHorizontal()) {\r\n                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n                            var valueOffset = (innerWidth * decimal) + me.paddingLeft;\r\n\r\n                            var finalVal = me.left + Math.round(valueOffset);\r\n                            finalVal += me.isFullWidth() ? me.margins.left : 0;\r\n                            return finalVal;\r\n                        }\r\n                        return me.top + (decimal * me.height);\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the pixel for the minimum chart value\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getBasePixel: function() {\r\n                        return this.getPixelForValue(this.getBaseValue());\r\n                    },\r\n\r\n                    getBaseValue: function() {\r\n                        var me = this;\r\n                        var min = me.min;\r\n                        var max = me.max;\r\n\r\n                        return me.beginAtZero ? 0 :\r\n                            min < 0 && max < 0 ? max :\r\n                                min > 0 && max > 0 ? min :\r\n                                    0;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns a subset of ticks to be plotted to avoid overlapping labels.\r\n                     * @private\r\n                     */\r\n                    _autoSkip: function(ticks) {\r\n                        var skipRatio;\r\n                        var me = this;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var optionTicks = me.options.ticks.minor;\r\n                        var tickCount = ticks.length;\r\n                        var labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n                        var cosRotation = Math.cos(labelRotationRadians);\r\n                        var longestRotatedLabel = me.longestLabelWidth * cosRotation;\r\n                        var result = [];\r\n                        var i, tick, shouldSkip;\r\n\r\n                        // figure out the maximum number of gridlines to show\r\n                        var maxTicks;\r\n                        if (optionTicks.maxTicksLimit) {\r\n                            maxTicks = optionTicks.maxTicksLimit;\r\n                        }\r\n\r\n                        if (isHorizontal) {\r\n                            skipRatio = false;\r\n\r\n                            if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\r\n                                skipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\r\n                            }\r\n\r\n                            // if they defined a max number of optionTicks,\r\n                            // increase skipRatio until that number is met\r\n                            if (maxTicks && tickCount > maxTicks) {\r\n                                skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\r\n                            }\r\n                        }\r\n\r\n                        for (i = 0; i < tickCount; i++) {\r\n                            tick = ticks[i];\r\n\r\n                            // Since we always show the last tick,we need may need to hide the last shown one before\r\n                            shouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\r\n                            if (shouldSkip && i !== tickCount - 1) {\r\n                                // leave tick in place but make sure it's not displayed (#4635)\r\n                                delete tick.label;\r\n                            }\r\n                            result.push(tick);\r\n                        }\r\n                        return result;\r\n                    },\r\n\r\n                    // Actually draw the scale on the canvas\r\n                    // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\r\n                    draw: function(chartArea) {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        if (!options.display) {\r\n                            return;\r\n                        }\r\n\r\n                        var context = me.ctx;\r\n                        var globalDefaults = defaults.global;\r\n                        var optionTicks = options.ticks.minor;\r\n                        var optionMajorTicks = options.ticks.major || optionTicks;\r\n                        var gridLines = options.gridLines;\r\n                        var scaleLabel = options.scaleLabel;\r\n\r\n                        var isRotated = me.labelRotation !== 0;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\r\n                        var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\r\n                        var tickFont = parseFontOptions(optionTicks);\r\n                        var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\r\n                        var majorTickFont = parseFontOptions(optionMajorTicks);\r\n\r\n                        var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\r\n\r\n                        var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\r\n                        var scaleLabelFont = parseFontOptions(scaleLabel);\r\n                        var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\r\n                        var labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n\r\n                        var itemsToDraw = [];\r\n\r\n                        var axisWidth = me.options.gridLines.lineWidth;\r\n                        var xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\r\n                        var xTickEnd = options.position === 'right' ? me.right + tl : me.right;\r\n                        var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\r\n                        var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\r\n\r\n                        helpers.each(ticks, function(tick, index) {\r\n                            // autoskipper skipped this tick (#4635)\r\n                            if (helpers.isNullOrUndef(tick.label)) {\r\n                                return;\r\n                            }\r\n\r\n                            var label = tick.label;\r\n                            var lineWidth, lineColor, borderDash, borderDashOffset;\r\n                            if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\r\n                                // Draw the first index specially\r\n                                lineWidth = gridLines.zeroLineWidth;\r\n                                lineColor = gridLines.zeroLineColor;\r\n                                borderDash = gridLines.zeroLineBorderDash;\r\n                                borderDashOffset = gridLines.zeroLineBorderDashOffset;\r\n                            } else {\r\n                                lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\r\n                                lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\r\n                                borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\r\n                                borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\r\n                            }\r\n\r\n                            // Common properties\r\n                            var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\r\n                            var textAlign = 'middle';\r\n                            var textBaseline = 'middle';\r\n                            var tickPadding = optionTicks.padding;\r\n\r\n                            if (isHorizontal) {\r\n                                var labelYOffset = tl + tickPadding;\r\n\r\n                                if (options.position === 'bottom') {\r\n                                    // bottom\r\n                                    textBaseline = !isRotated ? 'top' : 'middle';\r\n                                    textAlign = !isRotated ? 'center' : 'right';\r\n                                    labelY = me.top + labelYOffset;\r\n                                } else {\r\n                                    // top\r\n                                    textBaseline = !isRotated ? 'bottom' : 'middle';\r\n                                    textAlign = !isRotated ? 'center' : 'left';\r\n                                    labelY = me.bottom - labelYOffset;\r\n                                }\r\n\r\n                                var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\r\n                                if (xLineValue < me.left) {\r\n                                    lineColor = 'rgba(0,0,0,0)';\r\n                                }\r\n                                xLineValue += helpers.aliasPixel(lineWidth);\r\n\r\n                                labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\r\n\r\n                                tx1 = tx2 = x1 = x2 = xLineValue;\r\n                                ty1 = yTickStart;\r\n                                ty2 = yTickEnd;\r\n                                y1 = chartArea.top;\r\n                                y2 = chartArea.bottom + axisWidth;\r\n                            } else {\r\n                                var isLeft = options.position === 'left';\r\n                                var labelXOffset;\r\n\r\n                                if (optionTicks.mirror) {\r\n                                    textAlign = isLeft ? 'left' : 'right';\r\n                                    labelXOffset = tickPadding;\r\n                                } else {\r\n                                    textAlign = isLeft ? 'right' : 'left';\r\n                                    labelXOffset = tl + tickPadding;\r\n                                }\r\n\r\n                                labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\r\n\r\n                                var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\r\n                                if (yLineValue < me.top) {\r\n                                    lineColor = 'rgba(0,0,0,0)';\r\n                                }\r\n                                yLineValue += helpers.aliasPixel(lineWidth);\r\n\r\n                                labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\r\n\r\n                                tx1 = xTickStart;\r\n                                tx2 = xTickEnd;\r\n                                x1 = chartArea.left;\r\n                                x2 = chartArea.right + axisWidth;\r\n                                ty1 = ty2 = y1 = y2 = yLineValue;\r\n                            }\r\n\r\n                            itemsToDraw.push({\r\n                                tx1: tx1,\r\n                                ty1: ty1,\r\n                                tx2: tx2,\r\n                                ty2: ty2,\r\n                                x1: x1,\r\n                                y1: y1,\r\n                                x2: x2,\r\n                                y2: y2,\r\n                                labelX: labelX,\r\n                                labelY: labelY,\r\n                                glWidth: lineWidth,\r\n                                glColor: lineColor,\r\n                                glBorderDash: borderDash,\r\n                                glBorderDashOffset: borderDashOffset,\r\n                                rotation: -1 * labelRotationRadians,\r\n                                label: label,\r\n                                major: tick.major,\r\n                                textBaseline: textBaseline,\r\n                                textAlign: textAlign\r\n                            });\r\n                        });\r\n\r\n                        // Draw all of the tick labels, tick marks, and grid lines at the correct places\r\n                        helpers.each(itemsToDraw, function(itemToDraw) {\r\n                            if (gridLines.display) {\r\n                                context.save();\r\n                                context.lineWidth = itemToDraw.glWidth;\r\n                                context.strokeStyle = itemToDraw.glColor;\r\n                                if (context.setLineDash) {\r\n                                    context.setLineDash(itemToDraw.glBorderDash);\r\n                                    context.lineDashOffset = itemToDraw.glBorderDashOffset;\r\n                                }\r\n\r\n                                context.beginPath();\r\n\r\n                                if (gridLines.drawTicks) {\r\n                                    context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\r\n                                    context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\r\n                                }\r\n\r\n                                if (gridLines.drawOnChartArea) {\r\n                                    context.moveTo(itemToDraw.x1, itemToDraw.y1);\r\n                                    context.lineTo(itemToDraw.x2, itemToDraw.y2);\r\n                                }\r\n\r\n                                context.stroke();\r\n                                context.restore();\r\n                            }\r\n\r\n                            if (optionTicks.display) {\r\n                                // Make sure we draw text in the correct color and font\r\n                                context.save();\r\n                                context.translate(itemToDraw.labelX, itemToDraw.labelY);\r\n                                context.rotate(itemToDraw.rotation);\r\n                                context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\r\n                                context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\r\n                                context.textBaseline = itemToDraw.textBaseline;\r\n                                context.textAlign = itemToDraw.textAlign;\r\n\r\n                                var label = itemToDraw.label;\r\n                                if (helpers.isArray(label)) {\r\n                                    var lineCount = label.length;\r\n                                    var lineHeight = tickFont.size * 1.5;\r\n                                    var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\r\n\r\n                                    for (var i = 0; i < lineCount; ++i) {\r\n                                        // We just make sure the multiline element is a string here..\r\n                                        context.fillText('' + label[i], 0, y);\r\n                                        // apply same lineSpacing as calculated @ L#320\r\n                                        y += lineHeight;\r\n                                    }\r\n                                } else {\r\n                                    context.fillText(label, 0, 0);\r\n                                }\r\n                                context.restore();\r\n                            }\r\n                        });\r\n\r\n                        if (scaleLabel.display) {\r\n                            // Draw the scale label\r\n                            var scaleLabelX;\r\n                            var scaleLabelY;\r\n                            var rotation = 0;\r\n                            var halfLineHeight = parseLineHeight(scaleLabel) / 2;\r\n\r\n                            if (isHorizontal) {\r\n                                scaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\r\n                                scaleLabelY = options.position === 'bottom'\r\n                                    ? me.bottom - halfLineHeight - scaleLabelPadding.bottom\r\n                                    : me.top + halfLineHeight + scaleLabelPadding.top;\r\n                            } else {\r\n                                var isLeft = options.position === 'left';\r\n                                scaleLabelX = isLeft\r\n                                    ? me.left + halfLineHeight + scaleLabelPadding.top\r\n                                    : me.right - halfLineHeight - scaleLabelPadding.top;\r\n                                scaleLabelY = me.top + ((me.bottom - me.top) / 2);\r\n                                rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\r\n                            }\r\n\r\n                            context.save();\r\n                            context.translate(scaleLabelX, scaleLabelY);\r\n                            context.rotate(rotation);\r\n                            context.textAlign = 'center';\r\n                            context.textBaseline = 'middle';\r\n                            context.fillStyle = scaleLabelFontColor; // render in correct colour\r\n                            context.font = scaleLabelFont.font;\r\n                            context.fillText(scaleLabel.labelString, 0, 0);\r\n                            context.restore();\r\n                        }\r\n\r\n                        if (gridLines.drawBorder) {\r\n                            // Draw the line at the edge of the axis\r\n                            context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\r\n                            context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\r\n                            var x1 = me.left;\r\n                            var x2 = me.right + axisWidth;\r\n                            var y1 = me.top;\r\n                            var y2 = me.bottom + axisWidth;\r\n\r\n                            var aliasPixel = helpers.aliasPixel(context.lineWidth);\r\n                            if (isHorizontal) {\r\n                                y1 = y2 = options.position === 'top' ? me.bottom : me.top;\r\n                                y1 += aliasPixel;\r\n                                y2 += aliasPixel;\r\n                            } else {\r\n                                x1 = x2 = options.position === 'left' ? me.right : me.left;\r\n                                x1 += aliasPixel;\r\n                                x2 += aliasPixel;\r\n                            }\r\n\r\n                            context.beginPath();\r\n                            context.moveTo(x1, y1);\r\n                            context.lineTo(x2, y2);\r\n                            context.stroke();\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"25\": 25, \"36\": 36 }], 24: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.scaleService = {\r\n                    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\r\n                    // use the new chart options to grab the correct scale\r\n                    constructors: {},\r\n                    // Use a registration function so that we can move to an ES6 map when we no longer need to support\r\n                    // old browsers\r\n\r\n                    // Scale config defaults\r\n                    defaults: {},\r\n                    registerScaleType: function(type, scaleConstructor, scaleDefaults) {\r\n                        this.constructors[type] = scaleConstructor;\r\n                        this.defaults[type] = helpers.clone(scaleDefaults);\r\n                    },\r\n                    getScaleConstructor: function(type) {\r\n                        return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\r\n                    },\r\n                    getScaleDefaults: function(type) {\r\n                        // Return the scale defaults merged with the global settings so that we always use the latest ones\r\n                        return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\r\n                    },\r\n                    updateScaleDefaults: function(type, additions) {\r\n                        var me = this;\r\n                        if (me.defaults.hasOwnProperty(type)) {\r\n                            me.defaults[type] = helpers.extend(me.defaults[type], additions);\r\n                        }\r\n                    },\r\n                    addScalesToLayout: function(chart) {\r\n                        // Adds each scale to the chart.boxes array to be sized accordingly\r\n                        helpers.each(chart.scales, function(scale) {\r\n                            // Set ILayoutItem parameters for backwards compatibility\r\n                            scale.fullWidth = scale.options.fullWidth;\r\n                            scale.position = scale.options.position;\r\n                            scale.weight = scale.options.weight;\r\n                            layouts.addBox(chart, scale);\r\n                        });\r\n                    }\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"21\": 21, \"36\": 36 }], 25: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Namespace to hold static tick generation functions\r\n             * @namespace Chart.Ticks\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Namespace to hold formatters for different types of ticks\r\n                 * @namespace Chart.Ticks.formatters\r\n                 */\r\n                formatters: {\r\n                    /**\r\n                     * Formatter for value labels\r\n                     * @method Chart.Ticks.formatters.values\r\n                     * @param value the value to display\r\n                     * @return {String|Array} the label to display\r\n                     */\r\n                    values: function(value) {\r\n                        return helpers.isArray(value) ? value : '' + value;\r\n                    },\r\n\r\n                    /**\r\n                     * Formatter for linear numeric ticks\r\n                     * @method Chart.Ticks.formatters.linear\r\n                     * @param tickValue {Number} the value to be formatted\r\n                     * @param index {Number} the position of the tickValue parameter in the ticks array\r\n                     * @param ticks {Array<Number>} the list of ticks being converted\r\n                     * @return {String} string representation of the tickValue parameter\r\n                     */\r\n                    linear: function(tickValue, index, ticks) {\r\n                        // If we have lots of ticks, don't use the ones\r\n                        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\r\n\r\n                        // If we have a number like 2.5 as the delta, figure out how many decimal places we need\r\n                        if (Math.abs(delta) > 1) {\r\n                            if (tickValue !== Math.floor(tickValue)) {\r\n                                // not an integer\r\n                                delta = tickValue - Math.floor(tickValue);\r\n                            }\r\n                        }\r\n\r\n                        var logDelta = helpers.log10(Math.abs(delta));\r\n                        var tickString = '';\r\n\r\n                        if (tickValue !== 0) {\r\n                            var numDecimal = -1 * Math.floor(logDelta);\r\n                            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\r\n                            tickString = tickValue.toFixed(numDecimal);\r\n                        } else {\r\n                            tickString = '0'; // never show decimal places for 0\r\n                        }\r\n\r\n                        return tickString;\r\n                    },\r\n\r\n                    logarithmic: function(tickValue, index, ticks) {\r\n                        var remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\r\n\r\n                        if (tickValue === 0) {\r\n                            return '0';\r\n                        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\r\n                            return tickValue.toExponential();\r\n                        }\r\n                        return '';\r\n                    }\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 26: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                tooltips: {\r\n                    enabled: true,\r\n                    custom: null,\r\n                    mode: 'nearest',\r\n                    position: 'average',\r\n                    intersect: true,\r\n                    backgroundColor: 'rgba(0,0,0,0.8)',\r\n                    titleFontStyle: 'bold',\r\n                    titleSpacing: 2,\r\n                    titleMarginBottom: 6,\r\n                    titleFontColor: '#fff',\r\n                    titleAlign: 'left',\r\n                    bodySpacing: 2,\r\n                    bodyFontColor: '#fff',\r\n                    bodyAlign: 'left',\r\n                    footerFontStyle: 'bold',\r\n                    footerSpacing: 2,\r\n                    footerMarginTop: 6,\r\n                    footerFontColor: '#fff',\r\n                    footerAlign: 'left',\r\n                    yPadding: 6,\r\n                    xPadding: 6,\r\n                    caretPadding: 2,\r\n                    caretSize: 5,\r\n                    cornerRadius: 6,\r\n                    multiKeyBackground: '#fff',\r\n                    displayColors: true,\r\n                    borderColor: 'rgba(0,0,0,0)',\r\n                    borderWidth: 0,\r\n                    callbacks: {\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeTitle: helpers.noop,\r\n                        title: function(tooltipItems, data) {\r\n                            // Pick first xLabel for now\r\n                            var title = '';\r\n                            var labels = data.labels;\r\n                            var labelCount = labels ? labels.length : 0;\r\n\r\n                            if (tooltipItems.length > 0) {\r\n                                var item = tooltipItems[0];\r\n\r\n                                if (item.xLabel) {\r\n                                    title = item.xLabel;\r\n                                } else if (labelCount > 0 && item.index < labelCount) {\r\n                                    title = labels[item.index];\r\n                                }\r\n                            }\r\n\r\n                            return title;\r\n                        },\r\n                        afterTitle: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeBody: helpers.noop,\r\n\r\n                        // Args are: (tooltipItem, data)\r\n                        beforeLabel: helpers.noop,\r\n                        label: function(tooltipItem, data) {\r\n                            var label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\r\n                            if (label) {\r\n                                label += ': ';\r\n                            }\r\n                            label += tooltipItem.yLabel;\r\n                            return label;\r\n                        },\r\n                        labelColor: function(tooltipItem, chart) {\r\n                            var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n                            var activeElement = meta.data[tooltipItem.index];\r\n                            var view = activeElement._view;\r\n                            return {\r\n                                borderColor: view.borderColor,\r\n                                backgroundColor: view.backgroundColor\r\n                            };\r\n                        },\r\n                        labelTextColor: function() {\r\n                            return this._options.bodyFontColor;\r\n                        },\r\n                        afterLabel: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        afterBody: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeFooter: helpers.noop,\r\n                        footer: helpers.noop,\r\n                        afterFooter: helpers.noop\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                /**\r\n                   * Helper method to merge the opacity into a color\r\n                   */\r\n                function mergeOpacity(colorString, opacity) {\r\n                    var color = helpers.color(colorString);\r\n                    return color.alpha(opacity * color.alpha()).rgbaString();\r\n                }\r\n\r\n                // Helper to push or concat based on if the 2nd parameter is an array or not\r\n                function pushOrConcat(base, toPush) {\r\n                    if (toPush) {\r\n                        if (helpers.isArray(toPush)) {\r\n                            // base = base.concat(toPush);\r\n                            Array.prototype.push.apply(base, toPush);\r\n                        } else {\r\n                            base.push(toPush);\r\n                        }\r\n                    }\r\n\r\n                    return base;\r\n                }\r\n\r\n                // Private helper to create a tooltip item model\r\n                // @param element : the chart element (point, arc, bar) to create the tooltip item for\r\n                // @return : new tooltip item\r\n                function createTooltipItem(element) {\r\n                    var xScale = element._xScale;\r\n                    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\r\n                    var index = element._index;\r\n                    var datasetIndex = element._datasetIndex;\r\n\r\n                    return {\r\n                        xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\r\n                        yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\r\n                        index: index,\r\n                        datasetIndex: datasetIndex,\r\n                        x: element._model.x,\r\n                        y: element._model.y\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Helper to get the reset model for the tooltip\r\n                 * @param tooltipOpts {Object} the tooltip options\r\n                 */\r\n                function getBaseModel(tooltipOpts) {\r\n                    var globalDefaults = defaults.global;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n\r\n                    return {\r\n                        // Positioning\r\n                        xPadding: tooltipOpts.xPadding,\r\n                        yPadding: tooltipOpts.yPadding,\r\n                        xAlign: tooltipOpts.xAlign,\r\n                        yAlign: tooltipOpts.yAlign,\r\n\r\n                        // Body\r\n                        bodyFontColor: tooltipOpts.bodyFontColor,\r\n                        _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\r\n                        _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\r\n                        _bodyAlign: tooltipOpts.bodyAlign,\r\n                        bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\r\n                        bodySpacing: tooltipOpts.bodySpacing,\r\n\r\n                        // Title\r\n                        titleFontColor: tooltipOpts.titleFontColor,\r\n                        _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\r\n                        _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\r\n                        titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\r\n                        _titleAlign: tooltipOpts.titleAlign,\r\n                        titleSpacing: tooltipOpts.titleSpacing,\r\n                        titleMarginBottom: tooltipOpts.titleMarginBottom,\r\n\r\n                        // Footer\r\n                        footerFontColor: tooltipOpts.footerFontColor,\r\n                        _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\r\n                        _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\r\n                        footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\r\n                        _footerAlign: tooltipOpts.footerAlign,\r\n                        footerSpacing: tooltipOpts.footerSpacing,\r\n                        footerMarginTop: tooltipOpts.footerMarginTop,\r\n\r\n                        // Appearance\r\n                        caretSize: tooltipOpts.caretSize,\r\n                        cornerRadius: tooltipOpts.cornerRadius,\r\n                        backgroundColor: tooltipOpts.backgroundColor,\r\n                        opacity: 0,\r\n                        legendColorBackground: tooltipOpts.multiKeyBackground,\r\n                        displayColors: tooltipOpts.displayColors,\r\n                        borderColor: tooltipOpts.borderColor,\r\n                        borderWidth: tooltipOpts.borderWidth\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Get the size of the tooltip\r\n                 */\r\n                function getTooltipSize(tooltip, model) {\r\n                    var ctx = tooltip._chart.ctx;\r\n\r\n                    var height = model.yPadding * 2; // Tooltip Padding\r\n                    var width = 0;\r\n\r\n                    // Count of all lines in the body\r\n                    var body = model.body;\r\n                    var combinedBodyLength = body.reduce(function(count, bodyItem) {\r\n                        return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\r\n                    }, 0);\r\n                    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\r\n\r\n                    var titleLineCount = model.title.length;\r\n                    var footerLineCount = model.footer.length;\r\n                    var titleFontSize = model.titleFontSize;\r\n                    var bodyFontSize = model.bodyFontSize;\r\n                    var footerFontSize = model.footerFontSize;\r\n\r\n                    height += titleLineCount * titleFontSize; // Title Lines\r\n                    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\r\n                    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\r\n                    height += combinedBodyLength * bodyFontSize; // Body Lines\r\n                    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\r\n                    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\r\n                    height += footerLineCount * (footerFontSize); // Footer Lines\r\n                    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\r\n\r\n                    // Title width\r\n                    var widthPadding = 0;\r\n                    var maxLineWidth = function(line) {\r\n                        width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n                    };\r\n\r\n                    ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\r\n                    helpers.each(model.title, maxLineWidth);\r\n\r\n                    // Body width\r\n                    ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\r\n                    helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\r\n\r\n                    // Body lines may include some extra width due to the color box\r\n                    widthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\r\n                    helpers.each(body, function(bodyItem) {\r\n                        helpers.each(bodyItem.before, maxLineWidth);\r\n                        helpers.each(bodyItem.lines, maxLineWidth);\r\n                        helpers.each(bodyItem.after, maxLineWidth);\r\n                    });\r\n\r\n                    // Reset back to 0\r\n                    widthPadding = 0;\r\n\r\n                    // Footer width\r\n                    ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\r\n                    helpers.each(model.footer, maxLineWidth);\r\n\r\n                    // Add padding\r\n                    width += 2 * model.xPadding;\r\n\r\n                    return {\r\n                        width: width,\r\n                        height: height\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Helper to get the alignment of a tooltip given the size\r\n                 */\r\n                function determineAlignment(tooltip, size) {\r\n                    var model = tooltip._model;\r\n                    var chart = tooltip._chart;\r\n                    var chartArea = tooltip._chart.chartArea;\r\n                    var xAlign = 'center';\r\n                    var yAlign = 'center';\r\n\r\n                    if (model.y < size.height) {\r\n                        yAlign = 'top';\r\n                    } else if (model.y > (chart.height - size.height)) {\r\n                        yAlign = 'bottom';\r\n                    }\r\n\r\n                    var lf, rf; // functions to determine left, right alignment\r\n                    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\r\n                    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\r\n                    var midX = (chartArea.left + chartArea.right) / 2;\r\n                    var midY = (chartArea.top + chartArea.bottom) / 2;\r\n\r\n                    if (yAlign === 'center') {\r\n                        lf = function(x) {\r\n                            return x <= midX;\r\n                        };\r\n                        rf = function(x) {\r\n                            return x > midX;\r\n                        };\r\n                    } else {\r\n                        lf = function(x) {\r\n                            return x <= (size.width / 2);\r\n                        };\r\n                        rf = function(x) {\r\n                            return x >= (chart.width - (size.width / 2));\r\n                        };\r\n                    }\r\n\r\n                    olf = function(x) {\r\n                        return x + size.width + model.caretSize + model.caretPadding > chart.width;\r\n                    };\r\n                    orf = function(x) {\r\n                        return x - size.width - model.caretSize - model.caretPadding < 0;\r\n                    };\r\n                    yf = function(y) {\r\n                        return y <= midY ? 'top' : 'bottom';\r\n                    };\r\n\r\n                    if (lf(model.x)) {\r\n                        xAlign = 'left';\r\n\r\n                        // Is tooltip too wide and goes over the right side of the chart.?\r\n                        if (olf(model.x)) {\r\n                            xAlign = 'center';\r\n                            yAlign = yf(model.y);\r\n                        }\r\n                    } else if (rf(model.x)) {\r\n                        xAlign = 'right';\r\n\r\n                        // Is tooltip too wide and goes outside left edge of canvas?\r\n                        if (orf(model.x)) {\r\n                            xAlign = 'center';\r\n                            yAlign = yf(model.y);\r\n                        }\r\n                    }\r\n\r\n                    var opts = tooltip._options;\r\n                    return {\r\n                        xAlign: opts.xAlign ? opts.xAlign : xAlign,\r\n                        yAlign: opts.yAlign ? opts.yAlign : yAlign\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\r\n                 */\r\n                function getBackgroundPoint(vm, size, alignment, chart) {\r\n                    // Background Position\r\n                    var x = vm.x;\r\n                    var y = vm.y;\r\n\r\n                    var caretSize = vm.caretSize;\r\n                    var caretPadding = vm.caretPadding;\r\n                    var cornerRadius = vm.cornerRadius;\r\n                    var xAlign = alignment.xAlign;\r\n                    var yAlign = alignment.yAlign;\r\n                    var paddingAndSize = caretSize + caretPadding;\r\n                    var radiusAndPadding = cornerRadius + caretPadding;\r\n\r\n                    if (xAlign === 'right') {\r\n                        x -= size.width;\r\n                    } else if (xAlign === 'center') {\r\n                        x -= (size.width / 2);\r\n                        if (x + size.width > chart.width) {\r\n                            x = chart.width - size.width;\r\n                        }\r\n                        if (x < 0) {\r\n                            x = 0;\r\n                        }\r\n                    }\r\n\r\n                    if (yAlign === 'top') {\r\n                        y += paddingAndSize;\r\n                    } else if (yAlign === 'bottom') {\r\n                        y -= size.height + paddingAndSize;\r\n                    } else {\r\n                        y -= (size.height / 2);\r\n                    }\r\n\r\n                    if (yAlign === 'center') {\r\n                        if (xAlign === 'left') {\r\n                            x += paddingAndSize;\r\n                        } else if (xAlign === 'right') {\r\n                            x -= paddingAndSize;\r\n                        }\r\n                    } else if (xAlign === 'left') {\r\n                        x -= radiusAndPadding;\r\n                    } else if (xAlign === 'right') {\r\n                        x += radiusAndPadding;\r\n                    }\r\n\r\n                    return {\r\n                        x: x,\r\n                        y: y\r\n                    };\r\n                }\r\n\r\n                Chart.Tooltip = Element.extend({\r\n                    initialize: function() {\r\n                        this._model = getBaseModel(this._options);\r\n                        this._lastActive = [];\r\n                    },\r\n\r\n                    // Get the title\r\n                    // Args are: (tooltipItem, data)\r\n                    getTitle: function() {\r\n                        var me = this;\r\n                        var opts = me._options;\r\n                        var callbacks = opts.callbacks;\r\n\r\n                        var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\r\n                        var title = callbacks.title.apply(me, arguments);\r\n                        var afterTitle = callbacks.afterTitle.apply(me, arguments);\r\n\r\n                        var lines = [];\r\n                        lines = pushOrConcat(lines, beforeTitle);\r\n                        lines = pushOrConcat(lines, title);\r\n                        lines = pushOrConcat(lines, afterTitle);\r\n\r\n                        return lines;\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getBeforeBody: function() {\r\n                        var lines = this._options.callbacks.beforeBody.apply(this, arguments);\r\n                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getBody: function(tooltipItems, data) {\r\n                        var me = this;\r\n                        var callbacks = me._options.callbacks;\r\n                        var bodyItems = [];\r\n\r\n                        helpers.each(tooltipItems, function(tooltipItem) {\r\n                            var bodyItem = {\r\n                                before: [],\r\n                                lines: [],\r\n                                after: []\r\n                            };\r\n                            pushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\r\n                            pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\r\n                            pushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\r\n\r\n                            bodyItems.push(bodyItem);\r\n                        });\r\n\r\n                        return bodyItems;\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getAfterBody: function() {\r\n                        var lines = this._options.callbacks.afterBody.apply(this, arguments);\r\n                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n                    },\r\n\r\n                    // Get the footer and beforeFooter and afterFooter lines\r\n                    // Args are: (tooltipItem, data)\r\n                    getFooter: function() {\r\n                        var me = this;\r\n                        var callbacks = me._options.callbacks;\r\n\r\n                        var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\r\n                        var footer = callbacks.footer.apply(me, arguments);\r\n                        var afterFooter = callbacks.afterFooter.apply(me, arguments);\r\n\r\n                        var lines = [];\r\n                        lines = pushOrConcat(lines, beforeFooter);\r\n                        lines = pushOrConcat(lines, footer);\r\n                        lines = pushOrConcat(lines, afterFooter);\r\n\r\n                        return lines;\r\n                    },\r\n\r\n                    update: function(changed) {\r\n                        var me = this;\r\n                        var opts = me._options;\r\n\r\n                        // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\r\n                        // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\r\n                        // which breaks any animations.\r\n                        var existingModel = me._model;\r\n                        var model = me._model = getBaseModel(opts);\r\n                        var active = me._active;\r\n\r\n                        var data = me._data;\r\n\r\n                        // In the case where active.length === 0 we need to keep these at existing values for good animations\r\n                        var alignment = {\r\n                            xAlign: existingModel.xAlign,\r\n                            yAlign: existingModel.yAlign\r\n                        };\r\n                        var backgroundPoint = {\r\n                            x: existingModel.x,\r\n                            y: existingModel.y\r\n                        };\r\n                        var tooltipSize = {\r\n                            width: existingModel.width,\r\n                            height: existingModel.height\r\n                        };\r\n                        var tooltipPosition = {\r\n                            x: existingModel.caretX,\r\n                            y: existingModel.caretY\r\n                        };\r\n\r\n                        var i, len;\r\n\r\n                        if (active.length) {\r\n                            model.opacity = 1;\r\n\r\n                            var labelColors = [];\r\n                            var labelTextColors = [];\r\n                            tooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\r\n\r\n                            var tooltipItems = [];\r\n                            for (i = 0, len = active.length; i < len; ++i) {\r\n                                tooltipItems.push(createTooltipItem(active[i]));\r\n                            }\r\n\r\n                            // If the user provided a filter function, use it to modify the tooltip items\r\n                            if (opts.filter) {\r\n                                tooltipItems = tooltipItems.filter(function(a) {\r\n                                    return opts.filter(a, data);\r\n                                });\r\n                            }\r\n\r\n                            // If the user provided a sorting function, use it to modify the tooltip items\r\n                            if (opts.itemSort) {\r\n                                tooltipItems = tooltipItems.sort(function(a, b) {\r\n                                    return opts.itemSort(a, b, data);\r\n                                });\r\n                            }\r\n\r\n                            // Determine colors for boxes\r\n                            helpers.each(tooltipItems, function(tooltipItem) {\r\n                                labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\r\n                                labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\r\n                            });\r\n\r\n                            // Build the Text Lines\r\n                            model.title = me.getTitle(tooltipItems, data);\r\n                            model.beforeBody = me.getBeforeBody(tooltipItems, data);\r\n                            model.body = me.getBody(tooltipItems, data);\r\n                            model.afterBody = me.getAfterBody(tooltipItems, data);\r\n                            model.footer = me.getFooter(tooltipItems, data);\r\n\r\n                            // Initial positioning and colors\r\n                            model.x = Math.round(tooltipPosition.x);\r\n                            model.y = Math.round(tooltipPosition.y);\r\n                            model.caretPadding = opts.caretPadding;\r\n                            model.labelColors = labelColors;\r\n                            model.labelTextColors = labelTextColors;\r\n\r\n                            // data points\r\n                            model.dataPoints = tooltipItems;\r\n\r\n                            // We need to determine alignment of the tooltip\r\n                            tooltipSize = getTooltipSize(this, model);\r\n                            alignment = determineAlignment(this, tooltipSize);\r\n                            // Final Size and Position\r\n                            backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\r\n                        } else {\r\n                            model.opacity = 0;\r\n                        }\r\n\r\n                        model.xAlign = alignment.xAlign;\r\n                        model.yAlign = alignment.yAlign;\r\n                        model.x = backgroundPoint.x;\r\n                        model.y = backgroundPoint.y;\r\n                        model.width = tooltipSize.width;\r\n                        model.height = tooltipSize.height;\r\n\r\n                        // Point where the caret on the tooltip points to\r\n                        model.caretX = tooltipPosition.x;\r\n                        model.caretY = tooltipPosition.y;\r\n\r\n                        me._model = model;\r\n\r\n                        if (changed && opts.custom) {\r\n                            opts.custom.call(me, model);\r\n                        }\r\n\r\n                        return me;\r\n                    },\r\n                    drawCaret: function(tooltipPoint, size) {\r\n                        var ctx = this._chart.ctx;\r\n                        var vm = this._view;\r\n                        var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\r\n\r\n                        ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n                        ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n                        ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n                    },\r\n                    getCaretPosition: function(tooltipPoint, size, vm) {\r\n                        var x1, x2, x3, y1, y2, y3;\r\n                        var caretSize = vm.caretSize;\r\n                        var cornerRadius = vm.cornerRadius;\r\n                        var xAlign = vm.xAlign;\r\n                        var yAlign = vm.yAlign;\r\n                        var ptX = tooltipPoint.x;\r\n                        var ptY = tooltipPoint.y;\r\n                        var width = size.width;\r\n                        var height = size.height;\r\n\r\n                        if (yAlign === 'center') {\r\n                            y2 = ptY + (height / 2);\r\n\r\n                            if (xAlign === 'left') {\r\n                                x1 = ptX;\r\n                                x2 = x1 - caretSize;\r\n                                x3 = x1;\r\n\r\n                                y1 = y2 + caretSize;\r\n                                y3 = y2 - caretSize;\r\n                            } else {\r\n                                x1 = ptX + width;\r\n                                x2 = x1 + caretSize;\r\n                                x3 = x1;\r\n\r\n                                y1 = y2 - caretSize;\r\n                                y3 = y2 + caretSize;\r\n                            }\r\n                        } else {\r\n                            if (xAlign === 'left') {\r\n                                x2 = ptX + cornerRadius + (caretSize);\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            } else if (xAlign === 'right') {\r\n                                x2 = ptX + width - cornerRadius - caretSize;\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            } else {\r\n                                x2 = vm.caretX;\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            }\r\n                            if (yAlign === 'top') {\r\n                                y1 = ptY;\r\n                                y2 = y1 - caretSize;\r\n                                y3 = y1;\r\n                            } else {\r\n                                y1 = ptY + height;\r\n                                y2 = y1 + caretSize;\r\n                                y3 = y1;\r\n                                // invert drawing order\r\n                                var tmp = x3;\r\n                                x3 = x1;\r\n                                x1 = tmp;\r\n                            }\r\n                        }\r\n                        return { x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3 };\r\n                    },\r\n                    drawTitle: function(pt, vm, ctx, opacity) {\r\n                        var title = vm.title;\r\n\r\n                        if (title.length) {\r\n                            ctx.textAlign = vm._titleAlign;\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            var titleFontSize = vm.titleFontSize;\r\n                            var titleSpacing = vm.titleSpacing;\r\n\r\n                            ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\r\n                            ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\r\n                            var i, len;\r\n                            for (i = 0, len = title.length; i < len; ++i) {\r\n                                ctx.fillText(title[i], pt.x, pt.y);\r\n                                pt.y += titleFontSize + titleSpacing; // Line Height and spacing\r\n\r\n                                if (i + 1 === title.length) {\r\n                                    pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    drawBody: function(pt, vm, ctx, opacity) {\r\n                        var bodyFontSize = vm.bodyFontSize;\r\n                        var bodySpacing = vm.bodySpacing;\r\n                        var body = vm.body;\r\n\r\n                        ctx.textAlign = vm._bodyAlign;\r\n                        ctx.textBaseline = 'top';\r\n                        ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\r\n                        // Before Body\r\n                        var xLinePadding = 0;\r\n                        var fillLineOfText = function(line) {\r\n                            ctx.fillText(line, pt.x + xLinePadding, pt.y);\r\n                            pt.y += bodyFontSize + bodySpacing;\r\n                        };\r\n\r\n                        // Before body lines\r\n                        ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\r\n                        helpers.each(vm.beforeBody, fillLineOfText);\r\n\r\n                        var drawColorBoxes = vm.displayColors;\r\n                        xLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\r\n\r\n                        // Draw body lines now\r\n                        helpers.each(body, function(bodyItem, i) {\r\n                            var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\r\n                            ctx.fillStyle = textColor;\r\n                            helpers.each(bodyItem.before, fillLineOfText);\r\n\r\n                            helpers.each(bodyItem.lines, function(line) {\r\n                                // Draw Legend-like boxes if needed\r\n                                if (drawColorBoxes) {\r\n                                    // Fill a white rect so that colours merge nicely if the opacity is < 1\r\n                                    ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\r\n                                    ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n                                    // Border\r\n                                    ctx.lineWidth = 1;\r\n                                    ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\r\n                                    ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n                                    // Inner square\r\n                                    ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\r\n                                    ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\r\n                                    ctx.fillStyle = textColor;\r\n                                }\r\n\r\n                                fillLineOfText(line);\r\n                            });\r\n\r\n                            helpers.each(bodyItem.after, fillLineOfText);\r\n                        });\r\n\r\n                        // Reset back to 0 for after body\r\n                        xLinePadding = 0;\r\n\r\n                        // After body lines\r\n                        helpers.each(vm.afterBody, fillLineOfText);\r\n                        pt.y -= bodySpacing; // Remove last body spacing\r\n                    },\r\n                    drawFooter: function(pt, vm, ctx, opacity) {\r\n                        var footer = vm.footer;\r\n\r\n                        if (footer.length) {\r\n                            pt.y += vm.footerMarginTop;\r\n\r\n                            ctx.textAlign = vm._footerAlign;\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\r\n                            ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\r\n                            helpers.each(footer, function(line) {\r\n                                ctx.fillText(line, pt.x, pt.y);\r\n                                pt.y += vm.footerFontSize + vm.footerSpacing;\r\n                            });\r\n                        }\r\n                    },\r\n                    drawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\r\n                        ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\r\n                        ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\r\n                        ctx.lineWidth = vm.borderWidth;\r\n                        var xAlign = vm.xAlign;\r\n                        var yAlign = vm.yAlign;\r\n                        var x = pt.x;\r\n                        var y = pt.y;\r\n                        var width = tooltipSize.width;\r\n                        var height = tooltipSize.height;\r\n                        var radius = vm.cornerRadius;\r\n\r\n                        ctx.beginPath();\r\n                        ctx.moveTo(x + radius, y);\r\n                        if (yAlign === 'top') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + width - radius, y);\r\n                        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n                        if (yAlign === 'center' && xAlign === 'right') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + width, y + height - radius);\r\n                        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n                        if (yAlign === 'bottom') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + radius, y + height);\r\n                        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n                        if (yAlign === 'center' && xAlign === 'left') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x, y + radius);\r\n                        ctx.quadraticCurveTo(x, y, x + radius, y);\r\n                        ctx.closePath();\r\n\r\n                        ctx.fill();\r\n\r\n                        if (vm.borderWidth > 0) {\r\n                            ctx.stroke();\r\n                        }\r\n                    },\r\n                    draw: function() {\r\n                        var ctx = this._chart.ctx;\r\n                        var vm = this._view;\r\n\r\n                        if (vm.opacity === 0) {\r\n                            return;\r\n                        }\r\n\r\n                        var tooltipSize = {\r\n                            width: vm.width,\r\n                            height: vm.height\r\n                        };\r\n                        var pt = {\r\n                            x: vm.x,\r\n                            y: vm.y\r\n                        };\r\n\r\n                        // IE11/Edge does not like very small opacities, so snap to 0\r\n                        var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\r\n\r\n                        // Truthy/falsey value for empty tooltip\r\n                        var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\r\n\r\n                        if (this._options.enabled && hasTooltipContent) {\r\n                            // Draw Background\r\n                            this.drawBackground(pt, vm, ctx, tooltipSize, opacity);\r\n\r\n                            // Draw Title, Body, and Footer\r\n                            pt.x += vm.xPadding;\r\n                            pt.y += vm.yPadding;\r\n\r\n                            // Titles\r\n                            this.drawTitle(pt, vm, ctx, opacity);\r\n\r\n                            // Body\r\n                            this.drawBody(pt, vm, ctx, opacity);\r\n\r\n                            // Footer\r\n                            this.drawFooter(pt, vm, ctx, opacity);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Handle an event\r\n                     * @private\r\n                     * @param {IEvent} event - The event to handle\r\n                     * @returns {Boolean} true if the tooltip changed\r\n                     */\r\n                    handleEvent: function(e) {\r\n                        var me = this;\r\n                        var options = me._options;\r\n                        var changed = false;\r\n\r\n                        me._lastActive = me._lastActive || [];\r\n\r\n                        // Find Active Elements for tooltips\r\n                        if (e.type === 'mouseout') {\r\n                            me._active = [];\r\n                        } else {\r\n                            me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\r\n                        }\r\n\r\n                        // Remember Last Actives\r\n                        changed = !helpers.arrayEquals(me._active, me._lastActive);\r\n\r\n                        // Only handle target event on tooltip change\r\n                        if (changed) {\r\n                            me._lastActive = me._active;\r\n\r\n                            if (options.enabled || options.custom) {\r\n                                me._eventPosition = {\r\n                                    x: e.x,\r\n                                    y: e.y\r\n                                };\r\n\r\n                                me.update(true);\r\n                                me.pivot();\r\n                            }\r\n                        }\r\n\r\n                        return changed;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * @namespace Chart.Tooltip.positioners\r\n                 */\r\n                Chart.Tooltip.positioners = {\r\n                    /**\r\n                     * Average mode places the tooltip at the average position of the elements shown\r\n                     * @function Chart.Tooltip.positioners.average\r\n                     * @param elements {ChartElement[]} the elements being displayed in the tooltip\r\n                     * @returns {Point} tooltip position\r\n                     */\r\n                    average: function(elements) {\r\n                        if (!elements.length) {\r\n                            return false;\r\n                        }\r\n\r\n                        var i, len;\r\n                        var x = 0;\r\n                        var y = 0;\r\n                        var count = 0;\r\n\r\n                        for (i = 0, len = elements.length; i < len; ++i) {\r\n                            var el = elements[i];\r\n                            if (el && el.hasValue()) {\r\n                                var pos = el.tooltipPosition();\r\n                                x += pos.x;\r\n                                y += pos.y;\r\n                                ++count;\r\n                            }\r\n                        }\r\n\r\n                        return {\r\n                            x: Math.round(x / count),\r\n                            y: Math.round(y / count)\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Gets the tooltip position nearest of the item nearest to the event position\r\n                     * @function Chart.Tooltip.positioners.nearest\r\n                     * @param elements {Chart.Element[]} the tooltip elements\r\n                     * @param eventPosition {Point} the position of the event in canvas coordinates\r\n                     * @returns {Point} the tooltip position\r\n                     */\r\n                    nearest: function(elements, eventPosition) {\r\n                        var x = eventPosition.x;\r\n                        var y = eventPosition.y;\r\n                        var minDistance = Number.POSITIVE_INFINITY;\r\n                        var i, len, nearestElement;\r\n\r\n                        for (i = 0, len = elements.length; i < len; ++i) {\r\n                            var el = elements[i];\r\n                            if (el && el.hasValue()) {\r\n                                var center = el.getCenterPoint();\r\n                                var d = helpers.distanceBetweenPoints(eventPosition, center);\r\n\r\n                                if (d < minDistance) {\r\n                                    minDistance = d;\r\n                                    nearestElement = el;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (nearestElement) {\r\n                            var tp = nearestElement.tooltipPosition();\r\n                            x = tp.x;\r\n                            y = tp.y;\r\n                        }\r\n\r\n                        return {\r\n                            x: x,\r\n                            y: y\r\n                        };\r\n                    }\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 27: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    arc: {\r\n                        backgroundColor: defaults.global.defaultColor,\r\n                        borderColor: '#fff',\r\n                        borderWidth: 2\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = Element.extend({\r\n                inLabelRange: function(mouseX) {\r\n                    var vm = this._view;\r\n\r\n                    if (vm) {\r\n                        return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                inRange: function(chartX, chartY) {\r\n                    var vm = this._view;\r\n\r\n                    if (vm) {\r\n                        var pointRelativePosition = helpers.getAngleFromPoint(vm, { x: chartX, y: chartY });\r\n                        var angle = pointRelativePosition.angle;\r\n                        var distance = pointRelativePosition.distance;\r\n\r\n                        // Sanitise angle range\r\n                        var startAngle = vm.startAngle;\r\n                        var endAngle = vm.endAngle;\r\n                        while (endAngle < startAngle) {\r\n                            endAngle += 2.0 * Math.PI;\r\n                        }\r\n                        while (angle > endAngle) {\r\n                            angle -= 2.0 * Math.PI;\r\n                        }\r\n                        while (angle < startAngle) {\r\n                            angle += 2.0 * Math.PI;\r\n                        }\r\n\r\n                        // Check if within the range of the open/close angle\r\n                        var betweenAngles = (angle >= startAngle && angle <= endAngle);\r\n                        var withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\r\n\r\n                        return (betweenAngles && withinRadius);\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\r\n                    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\r\n                    return {\r\n                        x: vm.x + Math.cos(halfAngle) * halfRadius,\r\n                        y: vm.y + Math.sin(halfAngle) * halfRadius\r\n                    };\r\n                },\r\n\r\n                getArea: function() {\r\n                    var vm = this._view;\r\n                    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\r\n                    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\r\n\r\n                    return {\r\n                        x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\r\n                        y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\r\n                    };\r\n                },\r\n\r\n                draw: function() {\r\n                    var ctx = this._chart.ctx;\r\n                    var vm = this._view;\r\n                    var sA = vm.startAngle;\r\n                    var eA = vm.endAngle;\r\n\r\n                    ctx.beginPath();\r\n\r\n                    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\r\n                    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\r\n\r\n                    ctx.closePath();\r\n                    ctx.strokeStyle = vm.borderColor;\r\n                    ctx.lineWidth = vm.borderWidth;\r\n\r\n                    ctx.fillStyle = vm.backgroundColor;\r\n\r\n                    ctx.fill();\r\n                    ctx.lineJoin = 'bevel';\r\n\r\n                    if (vm.borderWidth) {\r\n                        ctx.stroke();\r\n                    }\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 28: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            var globalDefaults = defaults.global;\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    line: {\r\n                        tension: 0.4,\r\n                        backgroundColor: globalDefaults.defaultColor,\r\n                        borderWidth: 3,\r\n                        borderColor: globalDefaults.defaultColor,\r\n                        borderCapStyle: 'butt',\r\n                        borderDash: [],\r\n                        borderDashOffset: 0.0,\r\n                        borderJoinStyle: 'miter',\r\n                        capBezierPoints: true,\r\n                        fill: true, // do we fill in the area between the line and its base axis\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = Element.extend({\r\n                draw: function() {\r\n                    var me = this;\r\n                    var vm = me._view;\r\n                    var ctx = me._chart.ctx;\r\n                    var spanGaps = vm.spanGaps;\r\n                    var points = me._children.slice(); // clone array\r\n                    var globalOptionLineElements = globalDefaults.elements.line;\r\n                    var lastDrawnIndex = -1;\r\n                    var index, current, previous, currentVM;\r\n\r\n                    // If we are looping, adding the first point again\r\n                    if (me._loop && points.length) {\r\n                        points.push(points[0]);\r\n                    }\r\n\r\n                    ctx.save();\r\n\r\n                    // Stroke Line Options\r\n                    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\r\n\r\n                    // IE 9 and 10 do not support line dash\r\n                    if (ctx.setLineDash) {\r\n                        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\r\n                    }\r\n\r\n                    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\r\n                    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\r\n                    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\r\n                    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\r\n\r\n                    // Stroke Line\r\n                    ctx.beginPath();\r\n                    lastDrawnIndex = -1;\r\n\r\n                    for (index = 0; index < points.length; ++index) {\r\n                        current = points[index];\r\n                        previous = helpers.previousItem(points, index);\r\n                        currentVM = current._view;\r\n\r\n                        // First point moves to it's starting position no matter what\r\n                        if (index === 0) {\r\n                            if (!currentVM.skip) {\r\n                                ctx.moveTo(currentVM.x, currentVM.y);\r\n                                lastDrawnIndex = index;\r\n                            }\r\n                        } else {\r\n                            previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\r\n\r\n                            if (!currentVM.skip) {\r\n                                if ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\r\n                                    // There was a gap and this is the first point after the gap\r\n                                    ctx.moveTo(currentVM.x, currentVM.y);\r\n                                } else {\r\n                                    // Line to next point\r\n                                    helpers.canvas.lineTo(ctx, previous._view, current._view);\r\n                                }\r\n                                lastDrawnIndex = index;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    ctx.stroke();\r\n                    ctx.restore();\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 29: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            var defaultColor = defaults.global.defaultColor;\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    point: {\r\n                        radius: 3,\r\n                        pointStyle: 'circle',\r\n                        backgroundColor: defaultColor,\r\n                        borderColor: defaultColor,\r\n                        borderWidth: 1,\r\n                        // Hover\r\n                        hitRadius: 1,\r\n                        hoverRadius: 4,\r\n                        hoverBorderWidth: 1\r\n                    }\r\n                }\r\n            });\r\n\r\n            function xRange(mouseX) {\r\n                var vm = this._view;\r\n                return vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\r\n            }\r\n\r\n            function yRange(mouseY) {\r\n                var vm = this._view;\r\n                return vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\r\n            }\r\n\r\n            module.exports = Element.extend({\r\n                inRange: function(mouseX, mouseY) {\r\n                    var vm = this._view;\r\n                    return vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\r\n                },\r\n\r\n                inLabelRange: xRange,\r\n                inXRange: xRange,\r\n                inYRange: yRange,\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y\r\n                    };\r\n                },\r\n\r\n                getArea: function() {\r\n                    return Math.PI * Math.pow(this._view.radius, 2);\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y,\r\n                        padding: vm.radius + vm.borderWidth\r\n                    };\r\n                },\r\n\r\n                draw: function(chartArea) {\r\n                    var vm = this._view;\r\n                    var model = this._model;\r\n                    var ctx = this._chart.ctx;\r\n                    var pointStyle = vm.pointStyle;\r\n                    var radius = vm.radius;\r\n                    var x = vm.x;\r\n                    var y = vm.y;\r\n                    var color = helpers.color;\r\n                    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\r\n                    var ratio = 0;\r\n\r\n                    if (vm.skip) {\r\n                        return;\r\n                    }\r\n\r\n                    ctx.strokeStyle = vm.borderColor || defaultColor;\r\n                    ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\r\n                    ctx.fillStyle = vm.backgroundColor || defaultColor;\r\n\r\n                    // Cliping for Points.\r\n                    // going out from inner charArea?\r\n                    if ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\r\n                        // Point fade out\r\n                        if (model.x < chartArea.left) {\r\n                            ratio = (x - model.x) / (chartArea.left - model.x);\r\n                        } else if (chartArea.right * errMargin < model.x) {\r\n                            ratio = (model.x - x) / (model.x - chartArea.right);\r\n                        } else if (model.y < chartArea.top) {\r\n                            ratio = (y - model.y) / (chartArea.top - model.y);\r\n                        } else if (chartArea.bottom * errMargin < model.y) {\r\n                            ratio = (model.y - y) / (model.y - chartArea.bottom);\r\n                        }\r\n                        ratio = Math.round(ratio * 100) / 100;\r\n                        ctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\r\n                        ctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\r\n                    }\r\n\r\n                    helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 30: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    rectangle: {\r\n                        backgroundColor: defaults.global.defaultColor,\r\n                        borderColor: defaults.global.defaultColor,\r\n                        borderSkipped: 'bottom',\r\n                        borderWidth: 0\r\n                    }\r\n                }\r\n            });\r\n\r\n            function isVertical(bar) {\r\n                return bar._view.width !== undefined;\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the bounds of the bar regardless of the orientation\r\n             * @param bar {Chart.Element.Rectangle} the bar\r\n             * @return {Bounds} bounds of the bar\r\n             * @private\r\n             */\r\n            function getBarBounds(bar) {\r\n                var vm = bar._view;\r\n                var x1, x2, y1, y2;\r\n\r\n                if (isVertical(bar)) {\r\n                    // vertical\r\n                    var halfWidth = vm.width / 2;\r\n                    x1 = vm.x - halfWidth;\r\n                    x2 = vm.x + halfWidth;\r\n                    y1 = Math.min(vm.y, vm.base);\r\n                    y2 = Math.max(vm.y, vm.base);\r\n                } else {\r\n                    // horizontal bar\r\n                    var halfHeight = vm.height / 2;\r\n                    x1 = Math.min(vm.x, vm.base);\r\n                    x2 = Math.max(vm.x, vm.base);\r\n                    y1 = vm.y - halfHeight;\r\n                    y2 = vm.y + halfHeight;\r\n                }\r\n\r\n                return {\r\n                    left: x1,\r\n                    top: y1,\r\n                    right: x2,\r\n                    bottom: y2\r\n                };\r\n            }\r\n\r\n            module.exports = Element.extend({\r\n                draw: function() {\r\n                    var ctx = this._chart.ctx;\r\n                    var vm = this._view;\r\n                    var left, right, top, bottom, signX, signY, borderSkipped;\r\n                    var borderWidth = vm.borderWidth;\r\n\r\n                    if (!vm.horizontal) {\r\n                        // bar\r\n                        left = vm.x - vm.width / 2;\r\n                        right = vm.x + vm.width / 2;\r\n                        top = vm.y;\r\n                        bottom = vm.base;\r\n                        signX = 1;\r\n                        signY = bottom > top ? 1 : -1;\r\n                        borderSkipped = vm.borderSkipped || 'bottom';\r\n                    } else {\r\n                        // horizontal bar\r\n                        left = vm.base;\r\n                        right = vm.x;\r\n                        top = vm.y - vm.height / 2;\r\n                        bottom = vm.y + vm.height / 2;\r\n                        signX = right > left ? 1 : -1;\r\n                        signY = 1;\r\n                        borderSkipped = vm.borderSkipped || 'left';\r\n                    }\r\n\r\n                    // Canvas doesn't allow us to stroke inside the width so we can\r\n                    // adjust the sizes to fit if we're setting a stroke on the line\r\n                    if (borderWidth) {\r\n                        // borderWidth shold be less than bar width and bar height.\r\n                        var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n                        borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n                        var halfStroke = borderWidth / 2;\r\n                        // Adjust borderWidth when bar top position is near vm.base(zero).\r\n                        var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n                        var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n                        var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n                        var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n                        // not become a vertical line?\r\n                        if (borderLeft !== borderRight) {\r\n                            top = borderTop;\r\n                            bottom = borderBottom;\r\n                        }\r\n                        // not become a horizontal line?\r\n                        if (borderTop !== borderBottom) {\r\n                            left = borderLeft;\r\n                            right = borderRight;\r\n                        }\r\n                    }\r\n\r\n                    ctx.beginPath();\r\n                    ctx.fillStyle = vm.backgroundColor;\r\n                    ctx.strokeStyle = vm.borderColor;\r\n                    ctx.lineWidth = borderWidth;\r\n\r\n                    // Corner points, from bottom-left to bottom-right clockwise\r\n                    // | 1 2 |\r\n                    // | 0 3 |\r\n                    var corners = [\r\n                        [left, bottom],\r\n                        [left, top],\r\n                        [right, top],\r\n                        [right, bottom]\r\n                    ];\r\n\r\n                    // Find first (starting) corner with fallback to 'bottom'\r\n                    var borders = ['bottom', 'left', 'top', 'right'];\r\n                    var startCorner = borders.indexOf(borderSkipped, 0);\r\n                    if (startCorner === -1) {\r\n                        startCorner = 0;\r\n                    }\r\n\r\n                    function cornerAt(index) {\r\n                        return corners[(startCorner + index) % 4];\r\n                    }\r\n\r\n                    // Draw rectangle from 'startCorner'\r\n                    var corner = cornerAt(0);\r\n                    ctx.moveTo(corner[0], corner[1]);\r\n\r\n                    for (var i = 1; i < 4; i++) {\r\n                        corner = cornerAt(i);\r\n                        ctx.lineTo(corner[0], corner[1]);\r\n                    }\r\n\r\n                    ctx.fill();\r\n                    if (borderWidth) {\r\n                        ctx.stroke();\r\n                    }\r\n                },\r\n\r\n                height: function() {\r\n                    var vm = this._view;\r\n                    return vm.base - vm.y;\r\n                },\r\n\r\n                inRange: function(mouseX, mouseY) {\r\n                    var inRange = false;\r\n\r\n                    if (this._view) {\r\n                        var bounds = getBarBounds(this);\r\n                        inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                    }\r\n\r\n                    return inRange;\r\n                },\r\n\r\n                inLabelRange: function(mouseX, mouseY) {\r\n                    var me = this;\r\n                    if (!me._view) {\r\n                        return false;\r\n                    }\r\n\r\n                    var inRange = false;\r\n                    var bounds = getBarBounds(me);\r\n\r\n                    if (isVertical(me)) {\r\n                        inRange = mouseX >= bounds.left && mouseX <= bounds.right;\r\n                    } else {\r\n                        inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                    }\r\n\r\n                    return inRange;\r\n                },\r\n\r\n                inXRange: function(mouseX) {\r\n                    var bounds = getBarBounds(this);\r\n                    return mouseX >= bounds.left && mouseX <= bounds.right;\r\n                },\r\n\r\n                inYRange: function(mouseY) {\r\n                    var bounds = getBarBounds(this);\r\n                    return mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                },\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    var x, y;\r\n                    if (isVertical(this)) {\r\n                        x = vm.x;\r\n                        y = (vm.y + vm.base) / 2;\r\n                    } else {\r\n                        x = (vm.x + vm.base) / 2;\r\n                        y = vm.y;\r\n                    }\r\n\r\n                    return { x: x, y: y };\r\n                },\r\n\r\n                getArea: function() {\r\n                    var vm = this._view;\r\n                    return vm.width * Math.abs(vm.y - vm.base);\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y\r\n                    };\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17 }], 31: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = {};\r\n            module.exports.Arc = require(27);\r\n            module.exports.Line = require(28);\r\n            module.exports.Point = require(29);\r\n            module.exports.Rectangle = require(30);\r\n        }, { \"27\": 27, \"28\": 28, \"29\": 29, \"30\": 30 }], 32: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * @namespace Chart.helpers.canvas\r\n             */\r\n            var exports = module.exports = {\r\n                /**\r\n                 * Clears the entire canvas associated to the given `chart`.\r\n                 * @param {Chart} chart - The chart for which to clear the canvas.\r\n                 */\r\n                clear: function(chart) {\r\n                    chart.ctx.clearRect(0, 0, chart.width, chart.height);\r\n                },\r\n\r\n                /**\r\n                 * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\r\n                 * given size (width, height) and the same `radius` for all corners.\r\n                 * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\r\n                 * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\r\n                 * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\r\n                 * @param {Number} width - The rectangle's width.\r\n                 * @param {Number} height - The rectangle's height.\r\n                 * @param {Number} radius - The rounded amount (in pixels) for the four corners.\r\n                 * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\r\n                 */\r\n                roundedRect: function(ctx, x, y, width, height, radius) {\r\n                    if (radius) {\r\n                        var rx = Math.min(radius, width / 2);\r\n                        var ry = Math.min(radius, height / 2);\r\n\r\n                        ctx.moveTo(x + rx, y);\r\n                        ctx.lineTo(x + width - rx, y);\r\n                        ctx.quadraticCurveTo(x + width, y, x + width, y + ry);\r\n                        ctx.lineTo(x + width, y + height - ry);\r\n                        ctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\r\n                        ctx.lineTo(x + rx, y + height);\r\n                        ctx.quadraticCurveTo(x, y + height, x, y + height - ry);\r\n                        ctx.lineTo(x, y + ry);\r\n                        ctx.quadraticCurveTo(x, y, x + rx, y);\r\n                    } else {\r\n                        ctx.rect(x, y, width, height);\r\n                    }\r\n                },\r\n\r\n                drawPoint: function(ctx, style, radius, x, y) {\r\n                    var type, edgeLength, xOffset, yOffset, height, size;\r\n\r\n                    if (style && typeof style === 'object') {\r\n                        type = style.toString();\r\n                        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n                            ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    if (isNaN(radius) || radius <= 0) {\r\n                        return;\r\n                    }\r\n\r\n                    switch (style) {\r\n                        // Default includes circle\r\n                        default:\r\n                            ctx.beginPath();\r\n                            ctx.arc(x, y, radius, 0, Math.PI * 2);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'triangle':\r\n                            ctx.beginPath();\r\n                            edgeLength = 3 * radius / Math.sqrt(3);\r\n                            height = edgeLength * Math.sqrt(3) / 2;\r\n                            ctx.moveTo(x - edgeLength / 2, y + height / 3);\r\n                            ctx.lineTo(x + edgeLength / 2, y + height / 3);\r\n                            ctx.lineTo(x, y - 2 * height / 3);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'rect':\r\n                            size = 1 / Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            ctx.fillRect(x - size, y - size, 2 * size, 2 * size);\r\n                            ctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\r\n                            break;\r\n                        case 'rectRounded':\r\n                            var offset = radius / Math.SQRT2;\r\n                            var leftX = x - offset;\r\n                            var topY = y - offset;\r\n                            var sideSize = Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'rectRot':\r\n                            size = 1 / Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x - size, y);\r\n                            ctx.lineTo(x, y + size);\r\n                            ctx.lineTo(x + size, y);\r\n                            ctx.lineTo(x, y - size);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'cross':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y + radius);\r\n                            ctx.lineTo(x, y - radius);\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'crossRot':\r\n                            ctx.beginPath();\r\n                            xOffset = Math.cos(Math.PI / 4) * radius;\r\n                            yOffset = Math.sin(Math.PI / 4) * radius;\r\n                            ctx.moveTo(x - xOffset, y - yOffset);\r\n                            ctx.lineTo(x + xOffset, y + yOffset);\r\n                            ctx.moveTo(x - xOffset, y + yOffset);\r\n                            ctx.lineTo(x + xOffset, y - yOffset);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'star':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y + radius);\r\n                            ctx.lineTo(x, y - radius);\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            xOffset = Math.cos(Math.PI / 4) * radius;\r\n                            yOffset = Math.sin(Math.PI / 4) * radius;\r\n                            ctx.moveTo(x - xOffset, y - yOffset);\r\n                            ctx.lineTo(x + xOffset, y + yOffset);\r\n                            ctx.moveTo(x - xOffset, y + yOffset);\r\n                            ctx.lineTo(x + xOffset, y - yOffset);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'line':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'dash':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                    }\r\n\r\n                    ctx.stroke();\r\n                },\r\n\r\n                clipArea: function(ctx, area) {\r\n                    ctx.save();\r\n                    ctx.beginPath();\r\n                    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\r\n                    ctx.clip();\r\n                },\r\n\r\n                unclipArea: function(ctx) {\r\n                    ctx.restore();\r\n                },\r\n\r\n                lineTo: function(ctx, previous, target, flip) {\r\n                    if (target.steppedLine) {\r\n                        if ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\r\n                            ctx.lineTo(previous.x, target.y);\r\n                        } else {\r\n                            ctx.lineTo(target.x, previous.y);\r\n                        }\r\n                        ctx.lineTo(target.x, target.y);\r\n                        return;\r\n                    }\r\n\r\n                    if (!target.tension) {\r\n                        ctx.lineTo(target.x, target.y);\r\n                        return;\r\n                    }\r\n\r\n                    ctx.bezierCurveTo(\r\n                        flip ? previous.controlPointPreviousX : previous.controlPointNextX,\r\n                        flip ? previous.controlPointPreviousY : previous.controlPointNextY,\r\n                        flip ? target.controlPointNextX : target.controlPointPreviousX,\r\n                        flip ? target.controlPointNextY : target.controlPointPreviousY,\r\n                        target.x,\r\n                        target.y);\r\n                }\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\r\n             * @namespace Chart.helpers.clear\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.clear = exports.clear;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\r\n             * @namespace Chart.helpers.drawRoundedRectangle\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.drawRoundedRectangle = function(ctx) {\r\n                ctx.beginPath();\r\n                exports.roundedRect.apply(exports, arguments);\r\n                ctx.closePath();\r\n            };\r\n        }, { \"33\": 33 }], 33: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            /**\r\n             * @namespace Chart.helpers\r\n             */\r\n            var helpers = {\r\n                /**\r\n                 * An empty function that can be used, for example, for optional callback.\r\n                 */\r\n                noop: function() { },\r\n\r\n                /**\r\n                 * Returns a unique id, sequentially generated from a global variable.\r\n                 * @returns {Number}\r\n                 * @function\r\n                 */\r\n                uid: (function() {\r\n                    var id = 0;\r\n                    return function() {\r\n                        return id++;\r\n                    };\r\n                }()),\r\n\r\n                /**\r\n                 * Returns true if `value` is neither null nor undefined, else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @since 2.7.0\r\n                 */\r\n                isNullOrUndef: function(value) {\r\n                    return value === null || typeof value === 'undefined';\r\n                },\r\n\r\n                /**\r\n                 * Returns true if `value` is an array, else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @function\r\n                 */\r\n                isArray: Array.isArray ? Array.isArray : function(value) {\r\n                    return Object.prototype.toString.call(value) === '[object Array]';\r\n                },\r\n\r\n                /**\r\n                 * Returns true if `value` is an object (excluding null), else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @since 2.7.0\r\n                 */\r\n                isObject: function(value) {\r\n                    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\r\n                },\r\n\r\n                /**\r\n                 * Returns `value` if defined, else returns `defaultValue`.\r\n                 * @param {*} value - The value to return if defined.\r\n                 * @param {*} defaultValue - The value to return if `value` is undefined.\r\n                 * @returns {*}\r\n                 */\r\n                valueOrDefault: function(value, defaultValue) {\r\n                    return typeof value === 'undefined' ? defaultValue : value;\r\n                },\r\n\r\n                /**\r\n                 * Returns value at the given `index` in array if defined, else returns `defaultValue`.\r\n                 * @param {Array} value - The array to lookup for value at `index`.\r\n                 * @param {Number} index - The index in `value` to lookup for value.\r\n                 * @param {*} defaultValue - The value to return if `value[index]` is undefined.\r\n                 * @returns {*}\r\n                 */\r\n                valueAtIndexOrDefault: function(value, index, defaultValue) {\r\n                    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\r\n                },\r\n\r\n                /**\r\n                 * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\r\n                 * value returned by `fn`. If `fn` is not a function, this method returns undefined.\r\n                 * @param {Function} fn - The function to call.\r\n                 * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\r\n                 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\r\n                 * @returns {*}\r\n                 */\r\n                callback: function(fn, args, thisArg) {\r\n                    if (fn && typeof fn.call === 'function') {\r\n                        return fn.apply(thisArg, args);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Note(SB) for performance sake, this method should only be used when loopable type\r\n                 * is unknown or in none intensive code (not called often and small loopable). Else\r\n                 * it's preferable to use a regular for() loop and save extra function calls.\r\n                 * @param {Object|Array} loopable - The object or array to be iterated.\r\n                 * @param {Function} fn - The function to call for each item.\r\n                 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\r\n                 * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\r\n                 */\r\n                each: function(loopable, fn, thisArg, reverse) {\r\n                    var i, len, keys;\r\n                    if (helpers.isArray(loopable)) {\r\n                        len = loopable.length;\r\n                        if (reverse) {\r\n                            for (i = len - 1; i >= 0; i--) {\r\n                                fn.call(thisArg, loopable[i], i);\r\n                            }\r\n                        } else {\r\n                            for (i = 0; i < len; i++) {\r\n                                fn.call(thisArg, loopable[i], i);\r\n                            }\r\n                        }\r\n                    } else if (helpers.isObject(loopable)) {\r\n                        keys = Object.keys(loopable);\r\n                        len = keys.length;\r\n                        for (i = 0; i < len; i++) {\r\n                            fn.call(thisArg, loopable[keys[i]], keys[i]);\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\r\n                 * @see http://stackoverflow.com/a/14853974\r\n                 * @param {Array} a0 - The array to compare\r\n                 * @param {Array} a1 - The array to compare\r\n                 * @returns {Boolean}\r\n                 */\r\n                arrayEquals: function(a0, a1) {\r\n                    var i, ilen, v0, v1;\r\n\r\n                    if (!a0 || !a1 || a0.length !== a1.length) {\r\n                        return false;\r\n                    }\r\n\r\n                    for (i = 0, ilen = a0.length; i < ilen; ++i) {\r\n                        v0 = a0[i];\r\n                        v1 = a1[i];\r\n\r\n                        if (v0 instanceof Array && v1 instanceof Array) {\r\n                            if (!helpers.arrayEquals(v0, v1)) {\r\n                                return false;\r\n                            }\r\n                        } else if (v0 !== v1) {\r\n                            // NOTE: two different object instances will never be equal: {x:20} != {x:20}\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                },\r\n\r\n                /**\r\n                 * Returns a deep copy of `source` without keeping references on objects and arrays.\r\n                 * @param {*} source - The value to clone.\r\n                 * @returns {*}\r\n                 */\r\n                clone: function(source) {\r\n                    if (helpers.isArray(source)) {\r\n                        return source.map(helpers.clone);\r\n                    }\r\n\r\n                    if (helpers.isObject(source)) {\r\n                        var target = {};\r\n                        var keys = Object.keys(source);\r\n                        var klen = keys.length;\r\n                        var k = 0;\r\n\r\n                        for (; k < klen; ++k) {\r\n                            target[keys[k]] = helpers.clone(source[keys[k]]);\r\n                        }\r\n\r\n                        return target;\r\n                    }\r\n\r\n                    return source;\r\n                },\r\n\r\n                /**\r\n                 * The default merger when Chart.helpers.merge is called without merger option.\r\n                 * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\r\n                 * @private\r\n                 */\r\n                _merger: function(key, target, source, options) {\r\n                    var tval = target[key];\r\n                    var sval = source[key];\r\n\r\n                    if (helpers.isObject(tval) && helpers.isObject(sval)) {\r\n                        helpers.merge(tval, sval, options);\r\n                    } else {\r\n                        target[key] = helpers.clone(sval);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Merges source[key] in target[key] only if target[key] is undefined.\r\n                 * @private\r\n                 */\r\n                _mergerIf: function(key, target, source) {\r\n                    var tval = target[key];\r\n                    var sval = source[key];\r\n\r\n                    if (helpers.isObject(tval) && helpers.isObject(sval)) {\r\n                        helpers.mergeIf(tval, sval);\r\n                    } else if (!target.hasOwnProperty(key)) {\r\n                        target[key] = helpers.clone(sval);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Recursively deep copies `source` properties into `target` with the given `options`.\r\n                 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n                 * @param {Object} target - The target object in which all sources are merged into.\r\n                 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\r\n                 * @param {Object} [options] - Merging options:\r\n                 * @param {Function} [options.merger] - The merge method (key, target, source, options)\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                merge: function(target, source, options) {\r\n                    var sources = helpers.isArray(source) ? source : [source];\r\n                    var ilen = sources.length;\r\n                    var merge, i, keys, klen, k;\r\n\r\n                    if (!helpers.isObject(target)) {\r\n                        return target;\r\n                    }\r\n\r\n                    options = options || {};\r\n                    merge = options.merger || helpers._merger;\r\n\r\n                    for (i = 0; i < ilen; ++i) {\r\n                        source = sources[i];\r\n                        if (!helpers.isObject(source)) {\r\n                            continue;\r\n                        }\r\n\r\n                        keys = Object.keys(source);\r\n                        for (k = 0, klen = keys.length; k < klen; ++k) {\r\n                            merge(keys[k], target, source, options);\r\n                        }\r\n                    }\r\n\r\n                    return target;\r\n                },\r\n\r\n                /**\r\n                 * Recursively deep copies `source` properties into `target` *only* if not defined in target.\r\n                 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n                 * @param {Object} target - The target object in which all sources are merged into.\r\n                 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                mergeIf: function(target, source) {\r\n                    return helpers.merge(target, source, { merger: helpers._mergerIf });\r\n                },\r\n\r\n                /**\r\n                 * Applies the contents of two or more objects together into the first object.\r\n                 * @param {Object} target - The target object in which all objects are merged into.\r\n                 * @param {Object} arg1 - Object containing additional properties to merge in target.\r\n                 * @param {Object} argN - Additional objects containing properties to merge in target.\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                extend: function(target) {\r\n                    var setFn = function(value, key) {\r\n                        target[key] = value;\r\n                    };\r\n                    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\r\n                        helpers.each(arguments[i], setFn);\r\n                    }\r\n                    return target;\r\n                },\r\n\r\n                /**\r\n                 * Basic javascript inheritance based on the model created in Backbone.js\r\n                 */\r\n                inherits: function(extensions) {\r\n                    var me = this;\r\n                    var ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\r\n                        return me.apply(this, arguments);\r\n                    };\r\n\r\n                    var Surrogate = function() {\r\n                        this.constructor = ChartElement;\r\n                    };\r\n\r\n                    Surrogate.prototype = me.prototype;\r\n                    ChartElement.prototype = new Surrogate();\r\n                    ChartElement.extend = helpers.inherits;\r\n\r\n                    if (extensions) {\r\n                        helpers.extend(ChartElement.prototype, extensions);\r\n                    }\r\n\r\n                    ChartElement.__super__ = me.prototype;\r\n                    return ChartElement;\r\n                }\r\n            };\r\n\r\n            module.exports = helpers;\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.callback instead.\r\n             * @function Chart.helpers.callCallback\r\n             * @deprecated since version 2.6.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.callCallback = helpers.callback;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Array.prototype.indexOf instead.\r\n             * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\r\n             * @function Chart.helpers.indexOf\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.indexOf = function(array, item, fromIndex) {\r\n                return Array.prototype.indexOf.call(array, item, fromIndex);\r\n            };\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\r\n             * @function Chart.helpers.getValueOrDefault\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.getValueOrDefault = helpers.valueOrDefault;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\r\n             * @function Chart.helpers.getValueAtIndexOrDefault\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n        }, {}], 34: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * Easing functions adapted from Robert Penner's easing equations.\r\n             * @namespace Chart.helpers.easingEffects\r\n             * @see http://www.robertpenner.com/easing/\r\n             */\r\n            var effects = {\r\n                linear: function(t) {\r\n                    return t;\r\n                },\r\n\r\n                easeInQuad: function(t) {\r\n                    return t * t;\r\n                },\r\n\r\n                easeOutQuad: function(t) {\r\n                    return -t * (t - 2);\r\n                },\r\n\r\n                easeInOutQuad: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t;\r\n                    }\r\n                    return -0.5 * ((--t) * (t - 2) - 1);\r\n                },\r\n\r\n                easeInCubic: function(t) {\r\n                    return t * t * t;\r\n                },\r\n\r\n                easeOutCubic: function(t) {\r\n                    return (t = t - 1) * t * t + 1;\r\n                },\r\n\r\n                easeInOutCubic: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t;\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * t + 2);\r\n                },\r\n\r\n                easeInQuart: function(t) {\r\n                    return t * t * t * t;\r\n                },\r\n\r\n                easeOutQuart: function(t) {\r\n                    return -((t = t - 1) * t * t * t - 1);\r\n                },\r\n\r\n                easeInOutQuart: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t * t;\r\n                    }\r\n                    return -0.5 * ((t -= 2) * t * t * t - 2);\r\n                },\r\n\r\n                easeInQuint: function(t) {\r\n                    return t * t * t * t * t;\r\n                },\r\n\r\n                easeOutQuint: function(t) {\r\n                    return (t = t - 1) * t * t * t * t + 1;\r\n                },\r\n\r\n                easeInOutQuint: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t * t * t;\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * t * t * t + 2);\r\n                },\r\n\r\n                easeInSine: function(t) {\r\n                    return -Math.cos(t * (Math.PI / 2)) + 1;\r\n                },\r\n\r\n                easeOutSine: function(t) {\r\n                    return Math.sin(t * (Math.PI / 2));\r\n                },\r\n\r\n                easeInOutSine: function(t) {\r\n                    return -0.5 * (Math.cos(Math.PI * t) - 1);\r\n                },\r\n\r\n                easeInExpo: function(t) {\r\n                    return (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\r\n                },\r\n\r\n                easeOutExpo: function(t) {\r\n                    return (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\r\n                },\r\n\r\n                easeInOutExpo: function(t) {\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * Math.pow(2, 10 * (t - 1));\r\n                    }\r\n                    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\r\n                },\r\n\r\n                easeInCirc: function(t) {\r\n                    if (t >= 1) {\r\n                        return t;\r\n                    }\r\n                    return -(Math.sqrt(1 - t * t) - 1);\r\n                },\r\n\r\n                easeOutCirc: function(t) {\r\n                    return Math.sqrt(1 - (t = t - 1) * t);\r\n                },\r\n\r\n                easeInOutCirc: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return -0.5 * (Math.sqrt(1 - t * t) - 1);\r\n                    }\r\n                    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\r\n                },\r\n\r\n                easeInElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.3;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\r\n                },\r\n\r\n                easeOutElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.3;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\r\n                },\r\n\r\n                easeInOutElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if ((t /= 0.5) === 2) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.45;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    if (t < 1) {\r\n                        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\r\n                    }\r\n                    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n                },\r\n                easeInBack: function(t) {\r\n                    var s = 1.70158;\r\n                    return t * t * ((s + 1) * t - s);\r\n                },\r\n\r\n                easeOutBack: function(t) {\r\n                    var s = 1.70158;\r\n                    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\r\n                },\r\n\r\n                easeInOutBack: function(t) {\r\n                    var s = 1.70158;\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n                },\r\n\r\n                easeInBounce: function(t) {\r\n                    return 1 - effects.easeOutBounce(1 - t);\r\n                },\r\n\r\n                easeOutBounce: function(t) {\r\n                    if (t < (1 / 2.75)) {\r\n                        return 7.5625 * t * t;\r\n                    }\r\n                    if (t < (2 / 2.75)) {\r\n                        return 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\r\n                    }\r\n                    if (t < (2.5 / 2.75)) {\r\n                        return 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\r\n                    }\r\n                    return 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\r\n                },\r\n\r\n                easeInOutBounce: function(t) {\r\n                    if (t < 0.5) {\r\n                        return effects.easeInBounce(t * 2) * 0.5;\r\n                    }\r\n                    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\r\n                }\r\n            };\r\n\r\n            module.exports = {\r\n                effects: effects\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\r\n             * @function Chart.helpers.easingEffects\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.easingEffects = effects;\r\n        }, { \"33\": 33 }], 35: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * @alias Chart.helpers.options\r\n             * @namespace\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Converts the given line height `value` in pixels for a specific font `size`.\r\n                 * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\r\n                 * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\r\n                 * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\r\n                 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\r\n                 * @since 2.7.0\r\n                 */\r\n                toLineHeight: function(value, size) {\r\n                    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\r\n                    if (!matches || matches[1] === 'normal') {\r\n                        return size * 1.2;\r\n                    }\r\n\r\n                    value = +matches[2];\r\n\r\n                    switch (matches[3]) {\r\n                        case 'px':\r\n                            return value;\r\n                        case '%':\r\n                            value /= 100;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n\r\n                    return size * value;\r\n                },\r\n\r\n                /**\r\n                 * Converts the given value into a padding object with pre-computed width/height.\r\n                 * @param {Number|Object} value - If a number, set the value to all TRBL component,\r\n                 *  else, if and object, use defined properties and sets undefined ones to 0.\r\n                 * @returns {Object} The padding values (top, right, bottom, left, width, height)\r\n                 * @since 2.7.0\r\n                 */\r\n                toPadding: function(value) {\r\n                    var t, r, b, l;\r\n\r\n                    if (helpers.isObject(value)) {\r\n                        t = +value.top || 0;\r\n                        r = +value.right || 0;\r\n                        b = +value.bottom || 0;\r\n                        l = +value.left || 0;\r\n                    } else {\r\n                        t = r = b = l = +value || 0;\r\n                    }\r\n\r\n                    return {\r\n                        top: t,\r\n                        right: r,\r\n                        bottom: b,\r\n                        left: l,\r\n                        height: t + b,\r\n                        width: l + r\r\n                    };\r\n                },\r\n\r\n                /**\r\n                 * Evaluates the given `inputs` sequentially and returns the first defined value.\r\n                 * @param {Array[]} inputs - An array of values, falling back to the last value.\r\n                 * @param {Object} [context] - If defined and the current value is a function, the value\r\n                 * is called with `context` as first argument and the result becomes the new input.\r\n                 * @param {Number} [index] - If defined and the current value is an array, the value\r\n                 * at `index` become the new input.\r\n                 * @since 2.7.0\r\n                 */\r\n                resolve: function(inputs, context, index) {\r\n                    var i, ilen, value;\r\n\r\n                    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\r\n                        value = inputs[i];\r\n                        if (value === undefined) {\r\n                            continue;\r\n                        }\r\n                        if (context !== undefined && typeof value === 'function') {\r\n                            value = value(context);\r\n                        }\r\n                        if (index !== undefined && helpers.isArray(value)) {\r\n                            value = value[index];\r\n                        }\r\n                        if (value !== undefined) {\r\n                            return value;\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }, { \"33\": 33 }], 36: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = require(33);\r\n            module.exports.easing = require(34);\r\n            module.exports.canvas = require(32);\r\n            module.exports.options = require(35);\r\n        }, { \"32\": 32, \"33\": 33, \"34\": 34, \"35\": 35 }], 37: [function(require, module, exports) {\r\n            /**\r\n             * Platform fallback implementation (minimal).\r\n             * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\r\n             */\r\n\r\n            module.exports = {\r\n                acquireContext: function(item) {\r\n                    if (item && item.canvas) {\r\n                        // Support for any object associated to a canvas (including a context2d)\r\n                        item = item.canvas;\r\n                    }\r\n\r\n                    return item && item.getContext('2d') || null;\r\n                }\r\n            };\r\n        }, {}], 38: [function(require, module, exports) {\r\n            /**\r\n             * Chart.Platform implementation for targeting a web browser\r\n             */\r\n\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            var EXPANDO_KEY = '$chartjs';\r\n            var CSS_PREFIX = 'chartjs-';\r\n            var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\r\n            var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\r\n            var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\r\n\r\n            /**\r\n             * DOM event types -> Chart.js event types.\r\n             * Note: only events with different types are mapped.\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/Events\r\n             */\r\n            var EVENT_TYPES = {\r\n                touchstart: 'mousedown',\r\n                touchmove: 'mousemove',\r\n                touchend: 'mouseup',\r\n                pointerenter: 'mouseenter',\r\n                pointerdown: 'mousedown',\r\n                pointermove: 'mousemove',\r\n                pointerup: 'mouseup',\r\n                pointerleave: 'mouseout',\r\n                pointerout: 'mouseout'\r\n            };\r\n\r\n            /**\r\n             * The \"used\" size is the final value of a dimension property after all calculations have\r\n             * been performed. This method uses the computed style of `element` but returns undefined\r\n             * if the computed style is not expressed in pixels. That can happen in some cases where\r\n             * `element` has a size relative to its parent and this last one is not yet displayed,\r\n             * for example because of `display: none` on a parent node.\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\r\n             * @returns {Number} Size in pixels or undefined if unknown.\r\n             */\r\n            function readUsedSize(element, property) {\r\n                var value = helpers.getStyle(element, property);\r\n                var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\r\n                return matches ? Number(matches[1]) : undefined;\r\n            }\r\n\r\n            /**\r\n             * Initializes the canvas style and render size without modifying the canvas display size,\r\n             * since responsiveness is handled by the controller.resize() method. The config is used\r\n             * to determine the aspect ratio to apply in case no explicit height has been specified.\r\n             */\r\n            function initCanvas(canvas, config) {\r\n                var style = canvas.style;\r\n\r\n                // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\r\n                // returns null or '' if no explicit value has been set to the canvas attribute.\r\n                var renderHeight = canvas.getAttribute('height');\r\n                var renderWidth = canvas.getAttribute('width');\r\n\r\n                // Chart.js modifies some canvas values that we want to restore on destroy\r\n                canvas[EXPANDO_KEY] = {\r\n                    initial: {\r\n                        height: renderHeight,\r\n                        width: renderWidth,\r\n                        style: {\r\n                            display: style.display,\r\n                            height: style.height,\r\n                            width: style.width\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // Force canvas to display as block to avoid extra space caused by inline\r\n                // elements, which would interfere with the responsive resize process.\r\n                // https://github.com/chartjs/Chart.js/issues/2538\r\n                style.display = style.display || 'block';\r\n\r\n                if (renderWidth === null || renderWidth === '') {\r\n                    var displayWidth = readUsedSize(canvas, 'width');\r\n                    if (displayWidth !== undefined) {\r\n                        canvas.width = displayWidth;\r\n                    }\r\n                }\r\n\r\n                if (renderHeight === null || renderHeight === '') {\r\n                    if (canvas.style.height === '') {\r\n                        // If no explicit render height and style height, let's apply the aspect ratio,\r\n                        // which one can be specified by the user but also by charts as default option\r\n                        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\r\n                        canvas.height = canvas.width / (config.options.aspectRatio || 2);\r\n                    } else {\r\n                        var displayHeight = readUsedSize(canvas, 'height');\r\n                        if (displayWidth !== undefined) {\r\n                            canvas.height = displayHeight;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return canvas;\r\n            }\r\n\r\n            /**\r\n             * Detects support for options object argument in addEventListener.\r\n             * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\r\n             * @private\r\n             */\r\n            var supportsEventListenerOptions = (function() {\r\n                var supports = false;\r\n                try {\r\n                    var options = Object.defineProperty({}, 'passive', {\r\n                        get: function() {\r\n                            supports = true;\r\n                        }\r\n                    });\r\n                    window.addEventListener('e', null, options);\r\n                } catch (e) {\r\n                    // continue regardless of error\r\n                }\r\n                return supports;\r\n            }());\r\n\r\n            // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\r\n            // https://github.com/chartjs/Chart.js/issues/4287\r\n            var eventListenerOptions = supportsEventListenerOptions ? { passive: true } : false;\r\n\r\n            function addEventListener(node, type, listener) {\r\n                node.addEventListener(type, listener, eventListenerOptions);\r\n            }\r\n\r\n            function removeEventListener(node, type, listener) {\r\n                node.removeEventListener(type, listener, eventListenerOptions);\r\n            }\r\n\r\n            function createEvent(type, chart, x, y, nativeEvent) {\r\n                return {\r\n                    type: type,\r\n                    chart: chart,\r\n                    native: nativeEvent || null,\r\n                    x: x !== undefined ? x : null,\r\n                    y: y !== undefined ? y : null,\r\n                };\r\n            }\r\n\r\n            function fromNativeEvent(event, chart) {\r\n                var type = EVENT_TYPES[event.type] || event.type;\r\n                var pos = helpers.getRelativePosition(event, chart);\r\n                return createEvent(type, chart, pos.x, pos.y, event);\r\n            }\r\n\r\n            function throttled(fn, thisArg) {\r\n                var ticking = false;\r\n                var args = [];\r\n\r\n                return function() {\r\n                    args = Array.prototype.slice.call(arguments);\r\n                    thisArg = thisArg || this;\r\n\r\n                    if (!ticking) {\r\n                        ticking = true;\r\n                        helpers.requestAnimFrame.call(window, function() {\r\n                            ticking = false;\r\n                            fn.apply(thisArg, args);\r\n                        });\r\n                    }\r\n                };\r\n            }\r\n\r\n            // Implementation based on https://github.com/marcj/css-element-queries\r\n            function createResizer(handler) {\r\n                var resizer = document.createElement('div');\r\n                var cls = CSS_PREFIX + 'size-monitor';\r\n                var maxSize = 1000000;\r\n                var style =\r\n                    'position:absolute;' +\r\n                    'left:0;' +\r\n                    'top:0;' +\r\n                    'right:0;' +\r\n                    'bottom:0;' +\r\n                    'overflow:hidden;' +\r\n                    'pointer-events:none;' +\r\n                    'visibility:hidden;' +\r\n                    'z-index:-1;';\r\n\r\n                resizer.style.cssText = style;\r\n                resizer.className = cls;\r\n                resizer.innerHTML =\r\n                    '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\r\n                    '<div style=\"' +\r\n                    'position:absolute;' +\r\n                    'width:' + maxSize + 'px;' +\r\n                    'height:' + maxSize + 'px;' +\r\n                    'left:0;' +\r\n                    'top:0\">' +\r\n                    '</div>' +\r\n                    '</div>' +\r\n                    '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\r\n                    '<div style=\"' +\r\n                    'position:absolute;' +\r\n                    'width:200%;' +\r\n                    'height:200%;' +\r\n                    'left:0; ' +\r\n                    'top:0\">' +\r\n                    '</div>' +\r\n                    '</div>';\r\n\r\n                var expand = resizer.childNodes[0];\r\n                var shrink = resizer.childNodes[1];\r\n\r\n                resizer._reset = function() {\r\n                    expand.scrollLeft = maxSize;\r\n                    expand.scrollTop = maxSize;\r\n                    shrink.scrollLeft = maxSize;\r\n                    shrink.scrollTop = maxSize;\r\n                };\r\n                var onScroll = function() {\r\n                    resizer._reset();\r\n                    handler();\r\n                };\r\n\r\n                addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\r\n                addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\r\n\r\n                return resizer;\r\n            }\r\n\r\n            // https://davidwalsh.name/detect-node-insertion\r\n            function watchForRender(node, handler) {\r\n                var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\r\n                var proxy = expando.renderProxy = function(e) {\r\n                    if (e.animationName === CSS_RENDER_ANIMATION) {\r\n                        handler();\r\n                    }\r\n                };\r\n\r\n                helpers.each(ANIMATION_START_EVENTS, function(type) {\r\n                    addEventListener(node, type, proxy);\r\n                });\r\n\r\n                // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\r\n                // is removed then added back immediately (same animation frame?). Accessing the\r\n                // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\r\n                // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\r\n                // https://github.com/chartjs/Chart.js/issues/4737\r\n                expando.reflow = !!node.offsetParent;\r\n\r\n                node.classList.add(CSS_RENDER_MONITOR);\r\n            }\r\n\r\n            function unwatchForRender(node) {\r\n                var expando = node[EXPANDO_KEY] || {};\r\n                var proxy = expando.renderProxy;\r\n\r\n                if (proxy) {\r\n                    helpers.each(ANIMATION_START_EVENTS, function(type) {\r\n                        removeEventListener(node, type, proxy);\r\n                    });\r\n\r\n                    delete expando.renderProxy;\r\n                }\r\n\r\n                node.classList.remove(CSS_RENDER_MONITOR);\r\n            }\r\n\r\n            function addResizeListener(node, listener, chart) {\r\n                var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\r\n\r\n                // Let's keep track of this added resizer and thus avoid DOM query when removing it.\r\n                var resizer = expando.resizer = createResizer(throttled(function() {\r\n                    if (expando.resizer) {\r\n                        return listener(createEvent('resize', chart));\r\n                    }\r\n                }));\r\n\r\n                // The resizer needs to be attached to the node parent, so we first need to be\r\n                // sure that `node` is attached to the DOM before injecting the resizer element.\r\n                watchForRender(node, function() {\r\n                    if (expando.resizer) {\r\n                        var container = node.parentNode;\r\n                        if (container && container !== resizer.parentNode) {\r\n                            container.insertBefore(resizer, container.firstChild);\r\n                        }\r\n\r\n                        // The container size might have changed, let's reset the resizer state.\r\n                        resizer._reset();\r\n                    }\r\n                });\r\n            }\r\n\r\n            function removeResizeListener(node) {\r\n                var expando = node[EXPANDO_KEY] || {};\r\n                var resizer = expando.resizer;\r\n\r\n                delete expando.resizer;\r\n                unwatchForRender(node);\r\n\r\n                if (resizer && resizer.parentNode) {\r\n                    resizer.parentNode.removeChild(resizer);\r\n                }\r\n            }\r\n\r\n            //function injectCSS(platform, css) {\r\n            //    // http://stackoverflow.com/q/3922139\r\n            //    var style = platform._style || document.createElement('style');\r\n            //    if (!platform._style) {\r\n            //        platform._style = style;\r\n            //        css = '/* Chart.js */\\n' + css;\r\n            //        style.setAttribute('type', 'text/css');\r\n            //        document.getElementsByTagName('head')[0].appendChild(style);\r\n            //    }\r\n\r\n            //    style.appendChild(document.createTextNode(css));\r\n            //}\r\n\r\n            module.exports = {\r\n                /**\r\n                 * This property holds whether this platform is enabled for the current environment.\r\n                 * Currently used by platform.js to select the proper implementation.\r\n                 * @private\r\n                 */\r\n                _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\r\n\r\n                initialize: function() {\r\n                    var keyframes = 'from{opacity:0.99}to{opacity:1}';\r\n                    //injectCSS(this,\r\n                    //    // DOM rendering detection\r\n                    //    // https://davidwalsh.name/detect-node-insertion\r\n                    //    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\r\n                    //    '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\r\n                    //    '.' + CSS_RENDER_MONITOR + '{' +\r\n                    //    '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\r\n                    //    'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\r\n                    //    '}'\r\n                    //);\r\n                },\r\n\r\n                acquireContext: function(item, config) {\r\n                    if (typeof item === 'string') {\r\n                        item = document.getElementById(item);\r\n                    } else if (item.length) {\r\n                        // Support for array based queries (such as jQuery)\r\n                        item = item[0];\r\n                    }\r\n\r\n                    if (item && item.canvas) {\r\n                        // Support for any object associated to a canvas (including a context2d)\r\n                        item = item.canvas;\r\n                    }\r\n\r\n                    // To prevent canvas fingerprinting, some add-ons undefine the getContext\r\n                    // method, for example: https://github.com/kkapsner/CanvasBlocker\r\n                    // https://github.com/chartjs/Chart.js/issues/2807\r\n                    var context = item && item.getContext && item.getContext('2d');\r\n\r\n                    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\r\n                    // inside an iframe or when running in a protected environment. We could guess the\r\n                    // types from their toString() value but let's keep things flexible and assume it's\r\n                    // a sufficient condition if the item has a context2D which has item as `canvas`.\r\n                    // https://github.com/chartjs/Chart.js/issues/3887\r\n                    // https://github.com/chartjs/Chart.js/issues/4102\r\n                    // https://github.com/chartjs/Chart.js/issues/4152\r\n                    if (context && context.canvas === item) {\r\n                        initCanvas(item, config);\r\n                        return context;\r\n                    }\r\n\r\n                    return null;\r\n                },\r\n\r\n                releaseContext: function(context) {\r\n                    var canvas = context.canvas;\r\n                    if (!canvas[EXPANDO_KEY]) {\r\n                        return;\r\n                    }\r\n\r\n                    var initial = canvas[EXPANDO_KEY].initial;\r\n                    ['height', 'width'].forEach(function(prop) {\r\n                        var value = initial[prop];\r\n                        if (helpers.isNullOrUndef(value)) {\r\n                            canvas.removeAttribute(prop);\r\n                        } else {\r\n                            canvas.setAttribute(prop, value);\r\n                        }\r\n                    });\r\n\r\n                    helpers.each(initial.style || {}, function(value, key) {\r\n                        canvas.style[key] = value;\r\n                    });\r\n\r\n                    // The canvas render size might have been changed (and thus the state stack discarded),\r\n                    // we can't use save() and restore() to restore the initial state. So make sure that at\r\n                    // least the canvas context is reset to the default state by setting the canvas width.\r\n                    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\r\n                    canvas.width = canvas.width;\r\n\r\n                    delete canvas[EXPANDO_KEY];\r\n                },\r\n\r\n                addEventListener: function(chart, type, listener) {\r\n                    var canvas = chart.canvas;\r\n                    if (type === 'resize') {\r\n                        // Note: the resize event is not supported on all browsers.\r\n                        addResizeListener(canvas, listener, chart);\r\n                        return;\r\n                    }\r\n\r\n                    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\r\n                    var proxies = expando.proxies || (expando.proxies = {});\r\n                    var proxy = proxies[chart.id + '_' + type] = function(event) {\r\n                        listener(fromNativeEvent(event, chart));\r\n                    };\r\n\r\n                    addEventListener(canvas, type, proxy);\r\n                },\r\n\r\n                removeEventListener: function(chart, type, listener) {\r\n                    var canvas = chart.canvas;\r\n                    if (type === 'resize') {\r\n                        // Note: the resize event is not supported on all browsers.\r\n                        removeResizeListener(canvas, listener);\r\n                        return;\r\n                    }\r\n\r\n                    var expando = listener[EXPANDO_KEY] || {};\r\n                    var proxies = expando.proxies || {};\r\n                    var proxy = proxies[chart.id + '_' + type];\r\n                    if (!proxy) {\r\n                        return;\r\n                    }\r\n\r\n                    removeEventListener(canvas, type, proxy);\r\n                }\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use EventTarget.addEventListener instead.\r\n             * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\r\n             * @function Chart.helpers.addEvent\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.addEvent = addEventListener;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use EventTarget.removeEventListener instead.\r\n             * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\r\n             * @function Chart.helpers.removeEvent\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.removeEvent = removeEventListener;\r\n        }, { \"36\": 36 }], 39: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n            var basic = require(37);\r\n            var dom = require(38);\r\n\r\n            // @TODO Make possible to select another platform at build time.\r\n            var implementation = dom._enabled ? dom : basic;\r\n\r\n            /**\r\n             * @namespace Chart.platform\r\n             * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\r\n             * @since 2.4.0\r\n             */\r\n            module.exports = helpers.extend({\r\n                /**\r\n                 * @since 2.7.0\r\n                 */\r\n                initialize: function() { },\r\n\r\n                /**\r\n                 * Called at chart construction time, returns a context2d instance implementing\r\n                 * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\r\n                 * @param {*} item - The native item from which to acquire context (platform specific)\r\n                 * @param {Object} options - The chart options\r\n                 * @returns {CanvasRenderingContext2D} context2d instance\r\n                 */\r\n                acquireContext: function() { },\r\n\r\n                /**\r\n                 * Called at chart destruction time, releases any resources associated to the context\r\n                 * previously returned by the acquireContext() method.\r\n                 * @param {CanvasRenderingContext2D} context - The context2d instance\r\n                 * @returns {Boolean} true if the method succeeded, else false\r\n                 */\r\n                releaseContext: function() { },\r\n\r\n                /**\r\n                 * Registers the specified listener on the given chart.\r\n                 * @param {Chart} chart - Chart from which to listen for event\r\n                 * @param {String} type - The ({@link IEvent}) type to listen for\r\n                 * @param {Function} listener - Receives a notification (an object that implements\r\n                 * the {@link IEvent} interface) when an event of the specified type occurs.\r\n                 */\r\n                addEventListener: function() { },\r\n\r\n                /**\r\n                 * Removes the specified listener previously registered with addEventListener.\r\n                 * @param {Chart} chart -Chart from which to remove the listener\r\n                 * @param {String} type - The ({@link IEvent}) type to remove\r\n                 * @param {Function} listener - The listener function to remove from the event target.\r\n                 */\r\n                removeEventListener: function() { }\r\n            }, implementation);\r\n\r\n            /**\r\n             * @interface IPlatform\r\n             * Allows abstracting platform dependencies away from the chart\r\n             * @borrows Chart.platform.acquireContext as acquireContext\r\n             * @borrows Chart.platform.releaseContext as releaseContext\r\n             * @borrows Chart.platform.addEventListener as addEventListener\r\n             * @borrows Chart.platform.removeEventListener as removeEventListener\r\n             */\r\n\r\n            /**\r\n             * @interface IEvent\r\n             * @prop {String} type - The event type name, possible values are:\r\n             * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\r\n             * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\r\n             * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\r\n             * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\r\n             * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\r\n             */\r\n        }, { \"36\": 36, \"37\": 37, \"38\": 38 }], 40: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = {};\r\n            module.exports.filler = require(41);\r\n            module.exports.legend = require(42);\r\n            module.exports.title = require(43);\r\n        }, { \"41\": 41, \"42\": 42, \"43\": 43 }], 41: [function(require, module, exports) {\r\n            /**\r\n             * Plugin based on discussion from the following Chart.js issues:\r\n             * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\r\n             * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\r\n             */\r\n\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                plugins: {\r\n                    filler: {\r\n                        propagate: true\r\n                    }\r\n                }\r\n            });\r\n\r\n            var mappers = {\r\n                dataset: function(source) {\r\n                    var index = source.fill;\r\n                    var chart = source.chart;\r\n                    var meta = chart.getDatasetMeta(index);\r\n                    var visible = meta && chart.isDatasetVisible(index);\r\n                    var points = (visible && meta.dataset._children) || [];\r\n                    var length = points.length || 0;\r\n\r\n                    return !length ? null : function(point, i) {\r\n                        return (i < length && points[i]._view) || null;\r\n                    };\r\n                },\r\n\r\n                boundary: function(source) {\r\n                    var boundary = source.boundary;\r\n                    var x = boundary ? boundary.x : null;\r\n                    var y = boundary ? boundary.y : null;\r\n\r\n                    return function(point) {\r\n                        return {\r\n                            x: x === null ? point.x : x,\r\n                            y: y === null ? point.y : y,\r\n                        };\r\n                    };\r\n                }\r\n            };\r\n\r\n            // @todo if (fill[0] === '#')\r\n            function decodeFill(el, index, count) {\r\n                var model = el._model || {};\r\n                var fill = model.fill;\r\n                var target;\r\n\r\n                if (fill === undefined) {\r\n                    fill = !!model.backgroundColor;\r\n                }\r\n\r\n                if (fill === false || fill === null) {\r\n                    return false;\r\n                }\r\n\r\n                if (fill === true) {\r\n                    return 'origin';\r\n                }\r\n\r\n                target = parseFloat(fill, 10);\r\n                if (isFinite(target) && Math.floor(target) === target) {\r\n                    if (fill[0] === '-' || fill[0] === '+') {\r\n                        target = index + target;\r\n                    }\r\n\r\n                    if (target === index || target < 0 || target >= count) {\r\n                        return false;\r\n                    }\r\n\r\n                    return target;\r\n                }\r\n\r\n                switch (fill) {\r\n                    // compatibility\r\n                    case 'bottom':\r\n                        return 'start';\r\n                    case 'top':\r\n                        return 'end';\r\n                    case 'zero':\r\n                        return 'origin';\r\n                    // supported boundaries\r\n                    case 'origin':\r\n                    case 'start':\r\n                    case 'end':\r\n                        return fill;\r\n                    // invalid fill values\r\n                    default:\r\n                        return false;\r\n                }\r\n            }\r\n\r\n            function computeBoundary(source) {\r\n                var model = source.el._model || {};\r\n                var scale = source.el._scale || {};\r\n                var fill = source.fill;\r\n                var target = null;\r\n                var horizontal;\r\n\r\n                if (isFinite(fill)) {\r\n                    return null;\r\n                }\r\n\r\n                // Backward compatibility: until v3, we still need to support boundary values set on\r\n                // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\r\n                // controllers might still use it (e.g. the Smith chart).\r\n\r\n                if (fill === 'start') {\r\n                    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\r\n                } else if (fill === 'end') {\r\n                    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\r\n                } else if (model.scaleZero !== undefined) {\r\n                    target = model.scaleZero;\r\n                } else if (scale.getBasePosition) {\r\n                    target = scale.getBasePosition();\r\n                } else if (scale.getBasePixel) {\r\n                    target = scale.getBasePixel();\r\n                }\r\n\r\n                if (target !== undefined && target !== null) {\r\n                    if (target.x !== undefined && target.y !== undefined) {\r\n                        return target;\r\n                    }\r\n\r\n                    if (typeof target === 'number' && isFinite(target)) {\r\n                        horizontal = scale.isHorizontal();\r\n                        return {\r\n                            x: horizontal ? target : null,\r\n                            y: horizontal ? null : target\r\n                        };\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n\r\n            function resolveTarget(sources, index, propagate) {\r\n                var source = sources[index];\r\n                var fill = source.fill;\r\n                var visited = [index];\r\n                var target;\r\n\r\n                if (!propagate) {\r\n                    return fill;\r\n                }\r\n\r\n                while (fill !== false && visited.indexOf(fill) === -1) {\r\n                    if (!isFinite(fill)) {\r\n                        return fill;\r\n                    }\r\n\r\n                    target = sources[fill];\r\n                    if (!target) {\r\n                        return false;\r\n                    }\r\n\r\n                    if (target.visible) {\r\n                        return fill;\r\n                    }\r\n\r\n                    visited.push(fill);\r\n                    fill = target.fill;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            function createMapper(source) {\r\n                var fill = source.fill;\r\n                var type = 'dataset';\r\n\r\n                if (fill === false) {\r\n                    return null;\r\n                }\r\n\r\n                if (!isFinite(fill)) {\r\n                    type = 'boundary';\r\n                }\r\n\r\n                return mappers[type](source);\r\n            }\r\n\r\n            function isDrawable(point) {\r\n                return point && !point.skip;\r\n            }\r\n\r\n            function drawArea(ctx, curve0, curve1, len0, len1) {\r\n                var i;\r\n\r\n                if (!len0 || !len1) {\r\n                    return;\r\n                }\r\n\r\n                // building first area curve (normal)\r\n                ctx.moveTo(curve0[0].x, curve0[0].y);\r\n                for (i = 1; i < len0; ++i) {\r\n                    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\r\n                }\r\n\r\n                // joining the two area curves\r\n                ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\r\n\r\n                // building opposite area curve (reverse)\r\n                for (i = len1 - 1; i > 0; --i) {\r\n                    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\r\n                }\r\n            }\r\n\r\n            function doFill(ctx, points, mapper, view, color, loop) {\r\n                var count = points.length;\r\n                var span = view.spanGaps;\r\n                var curve0 = [];\r\n                var curve1 = [];\r\n                var len0 = 0;\r\n                var len1 = 0;\r\n                var i, ilen, index, p0, p1, d0, d1;\r\n\r\n                ctx.beginPath();\r\n\r\n                for (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\r\n                    index = i % count;\r\n                    p0 = points[index]._view;\r\n                    p1 = mapper(p0, index, view);\r\n                    d0 = isDrawable(p0);\r\n                    d1 = isDrawable(p1);\r\n\r\n                    if (d0 && d1) {\r\n                        len0 = curve0.push(p0);\r\n                        len1 = curve1.push(p1);\r\n                    } else if (len0 && len1) {\r\n                        if (!span) {\r\n                            drawArea(ctx, curve0, curve1, len0, len1);\r\n                            len0 = len1 = 0;\r\n                            curve0 = [];\r\n                            curve1 = [];\r\n                        } else {\r\n                            if (d0) {\r\n                                curve0.push(p0);\r\n                            }\r\n                            if (d1) {\r\n                                curve1.push(p1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                drawArea(ctx, curve0, curve1, len0, len1);\r\n\r\n                ctx.closePath();\r\n                ctx.fillStyle = color;\r\n                ctx.fill();\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'filler',\r\n\r\n                afterDatasetsUpdate: function(chart, options) {\r\n                    var count = (chart.data.datasets || []).length;\r\n                    var propagate = options.propagate;\r\n                    var sources = [];\r\n                    var meta, i, el, source;\r\n\r\n                    for (i = 0; i < count; ++i) {\r\n                        meta = chart.getDatasetMeta(i);\r\n                        el = meta.dataset;\r\n                        source = null;\r\n\r\n                        if (el && el._model && el instanceof elements.Line) {\r\n                            source = {\r\n                                visible: chart.isDatasetVisible(i),\r\n                                fill: decodeFill(el, i, count),\r\n                                chart: chart,\r\n                                el: el\r\n                            };\r\n                        }\r\n\r\n                        meta.$filler = source;\r\n                        sources.push(source);\r\n                    }\r\n\r\n                    for (i = 0; i < count; ++i) {\r\n                        source = sources[i];\r\n                        if (!source) {\r\n                            continue;\r\n                        }\r\n\r\n                        source.fill = resolveTarget(sources, i, propagate);\r\n                        source.boundary = computeBoundary(source);\r\n                        source.mapper = createMapper(source);\r\n                    }\r\n                },\r\n\r\n                beforeDatasetDraw: function(chart, args) {\r\n                    var meta = args.meta.$filler;\r\n                    if (!meta) {\r\n                        return;\r\n                    }\r\n\r\n                    var ctx = chart.ctx;\r\n                    var el = meta.el;\r\n                    var view = el._view;\r\n                    var points = el._children || [];\r\n                    var mapper = meta.mapper;\r\n                    var color = view.backgroundColor || defaults.global.defaultColor;\r\n\r\n                    if (mapper && color && points.length) {\r\n                        helpers.canvas.clipArea(ctx, chart.chartArea);\r\n                        doFill(ctx, points, mapper, view, color, el._loop);\r\n                        helpers.canvas.unclipArea(ctx);\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 42: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            var noop = helpers.noop;\r\n\r\n            defaults._set('global', {\r\n                legend: {\r\n                    display: true,\r\n                    position: 'top',\r\n                    fullWidth: true,\r\n                    reverse: false,\r\n                    weight: 1000,\r\n\r\n                    // a callback that will handle\r\n                    onClick: function(e, legendItem) {\r\n                        var index = legendItem.datasetIndex;\r\n                        var ci = this.chart;\r\n                        var meta = ci.getDatasetMeta(index);\r\n\r\n                        // See controller.isDatasetVisible comment\r\n                        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\r\n\r\n                        // We hid a dataset ... rerender the chart\r\n                        ci.update();\r\n                    },\r\n\r\n                    onHover: null,\r\n\r\n                    labels: {\r\n                        boxWidth: 40,\r\n                        padding: 10,\r\n                        // Generates labels shown in the legend\r\n                        // Valid properties to return:\r\n                        // text : text to display\r\n                        // fillStyle : fill of coloured box\r\n                        // strokeStyle: stroke of coloured box\r\n                        // hidden : if this legend item refers to a hidden item\r\n                        // lineCap : cap style for line\r\n                        // lineDash\r\n                        // lineDashOffset :\r\n                        // lineJoin :\r\n                        // lineWidth :\r\n                        generateLabels: function(chart) {\r\n                            var data = chart.data;\r\n                            return helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\r\n                                return {\r\n                                    text: dataset.label,\r\n                                    fillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\r\n                                    hidden: !chart.isDatasetVisible(i),\r\n                                    lineCap: dataset.borderCapStyle,\r\n                                    lineDash: dataset.borderDash,\r\n                                    lineDashOffset: dataset.borderDashOffset,\r\n                                    lineJoin: dataset.borderJoinStyle,\r\n                                    lineWidth: dataset.borderWidth,\r\n                                    strokeStyle: dataset.borderColor,\r\n                                    pointStyle: dataset.pointStyle,\r\n\r\n                                    // Below is extra data used for toggling the datasets\r\n                                    datasetIndex: i\r\n                                };\r\n                            }, this) : [];\r\n                        }\r\n                    }\r\n                },\r\n\r\n                legendCallback: function(chart) {\r\n                    var text = [];\r\n                    text.push('<ul class=\"' + chart.id + '-legend\">');\r\n                    for (var i = 0; i < chart.data.datasets.length; i++) {\r\n                        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\r\n                        if (chart.data.datasets[i].label) {\r\n                            text.push(chart.data.datasets[i].label);\r\n                        }\r\n                        text.push('</li>');\r\n                    }\r\n                    text.push('</ul>');\r\n                    return text.join('');\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Helper function to get the box width based on the usePointStyle option\r\n             * @param labelopts {Object} the label options on the legend\r\n             * @param fontSize {Number} the label font size\r\n             * @return {Number} width of the color box area\r\n             */\r\n            function getBoxWidth(labelOpts, fontSize) {\r\n                return labelOpts.usePointStyle ?\r\n                    fontSize * Math.SQRT2 :\r\n                    labelOpts.boxWidth;\r\n            }\r\n\r\n            /**\r\n             * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\r\n             */\r\n            var Legend = Element.extend({\r\n                initialize: function(config) {\r\n                    helpers.extend(this, config);\r\n\r\n                    // Contains hit boxes for each dataset (in dataset order)\r\n                    this.legendHitBoxes = [];\r\n\r\n                    // Are we in doughnut mode which has a different data type\r\n                    this.doughnutMode = false;\r\n                },\r\n\r\n                // These methods are ordered by lifecycle. Utilities then follow.\r\n                // Any function defined here is inherited by all legend types.\r\n                // Any function can be extended by the legend type\r\n\r\n                beforeUpdate: noop,\r\n                update: function(maxWidth, maxHeight, margins) {\r\n                    var me = this;\r\n\r\n                    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                    me.beforeUpdate();\r\n\r\n                    // Absorb the master measurements\r\n                    me.maxWidth = maxWidth;\r\n                    me.maxHeight = maxHeight;\r\n                    me.margins = margins;\r\n\r\n                    // Dimensions\r\n                    me.beforeSetDimensions();\r\n                    me.setDimensions();\r\n                    me.afterSetDimensions();\r\n                    // Labels\r\n                    me.beforeBuildLabels();\r\n                    me.buildLabels();\r\n                    me.afterBuildLabels();\r\n\r\n                    // Fit\r\n                    me.beforeFit();\r\n                    me.fit();\r\n                    me.afterFit();\r\n                    //\r\n                    me.afterUpdate();\r\n\r\n                    return me.minSize;\r\n                },\r\n                afterUpdate: noop,\r\n\r\n                //\r\n\r\n                beforeSetDimensions: noop,\r\n                setDimensions: function() {\r\n                    var me = this;\r\n                    // Set the unconstrained dimension before label rotation\r\n                    if (me.isHorizontal()) {\r\n                        // Reset position before calculating rotation\r\n                        me.width = me.maxWidth;\r\n                        me.left = 0;\r\n                        me.right = me.width;\r\n                    } else {\r\n                        me.height = me.maxHeight;\r\n\r\n                        // Reset position before calculating rotation\r\n                        me.top = 0;\r\n                        me.bottom = me.height;\r\n                    }\r\n\r\n                    // Reset padding\r\n                    me.paddingLeft = 0;\r\n                    me.paddingTop = 0;\r\n                    me.paddingRight = 0;\r\n                    me.paddingBottom = 0;\r\n\r\n                    // Reset minSize\r\n                    me.minSize = {\r\n                        width: 0,\r\n                        height: 0\r\n                    };\r\n                },\r\n                afterSetDimensions: noop,\r\n\r\n                //\r\n\r\n                beforeBuildLabels: noop,\r\n                buildLabels: function() {\r\n                    var me = this;\r\n                    var labelOpts = me.options.labels || {};\r\n                    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\r\n\r\n                    if (labelOpts.filter) {\r\n                        legendItems = legendItems.filter(function(item) {\r\n                            return labelOpts.filter(item, me.chart.data);\r\n                        });\r\n                    }\r\n\r\n                    if (me.options.reverse) {\r\n                        legendItems.reverse();\r\n                    }\r\n\r\n                    me.legendItems = legendItems;\r\n                },\r\n                afterBuildLabels: noop,\r\n\r\n                //\r\n\r\n                beforeFit: noop,\r\n                fit: function() {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var labelOpts = opts.labels;\r\n                    var display = opts.display;\r\n\r\n                    var ctx = me.ctx;\r\n\r\n                    var globalDefault = defaults.global;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\r\n                    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\r\n                    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\r\n                    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n                    // Reset hit boxes\r\n                    var hitboxes = me.legendHitBoxes = [];\r\n\r\n                    var minSize = me.minSize;\r\n                    var isHorizontal = me.isHorizontal();\r\n\r\n                    if (isHorizontal) {\r\n                        minSize.width = me.maxWidth; // fill all the width\r\n                        minSize.height = display ? 10 : 0;\r\n                    } else {\r\n                        minSize.width = display ? 10 : 0;\r\n                        minSize.height = me.maxHeight; // fill all the height\r\n                    }\r\n\r\n                    // Increase sizes here\r\n                    if (display) {\r\n                        ctx.font = labelFont;\r\n\r\n                        if (isHorizontal) {\r\n                            // Labels\r\n\r\n                            // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\r\n                            var lineWidths = me.lineWidths = [0];\r\n                            var totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\r\n\r\n                            ctx.textAlign = 'left';\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            helpers.each(me.legendItems, function(legendItem, i) {\r\n                                var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                                var width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n                                if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\r\n                                    totalHeight += fontSize + (labelOpts.padding);\r\n                                    lineWidths[lineWidths.length] = me.left;\r\n                                }\r\n\r\n                                // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                                hitboxes[i] = {\r\n                                    left: 0,\r\n                                    top: 0,\r\n                                    width: width,\r\n                                    height: fontSize\r\n                                };\r\n\r\n                                lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\r\n                            });\r\n\r\n                            minSize.height += totalHeight;\r\n                        } else {\r\n                            var vPadding = labelOpts.padding;\r\n                            var columnWidths = me.columnWidths = [];\r\n                            var totalWidth = labelOpts.padding;\r\n                            var currentColWidth = 0;\r\n                            var currentColHeight = 0;\r\n                            var itemHeight = fontSize + vPadding;\r\n\r\n                            helpers.each(me.legendItems, function(legendItem, i) {\r\n                                var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                                var itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n                                // If too tall, go to new column\r\n                                if (currentColHeight + itemHeight > minSize.height) {\r\n                                    totalWidth += currentColWidth + labelOpts.padding;\r\n                                    columnWidths.push(currentColWidth); // previous column width\r\n\r\n                                    currentColWidth = 0;\r\n                                    currentColHeight = 0;\r\n                                }\r\n\r\n                                // Get max width\r\n                                currentColWidth = Math.max(currentColWidth, itemWidth);\r\n                                currentColHeight += itemHeight;\r\n\r\n                                // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                                hitboxes[i] = {\r\n                                    left: 0,\r\n                                    top: 0,\r\n                                    width: itemWidth,\r\n                                    height: fontSize\r\n                                };\r\n                            });\r\n\r\n                            totalWidth += currentColWidth;\r\n                            columnWidths.push(currentColWidth);\r\n                            minSize.width += totalWidth;\r\n                        }\r\n                    }\r\n\r\n                    me.width = minSize.width;\r\n                    me.height = minSize.height;\r\n                },\r\n                afterFit: noop,\r\n\r\n                // Shared Methods\r\n                isHorizontal: function() {\r\n                    return this.options.position === 'top' || this.options.position === 'bottom';\r\n                },\r\n\r\n                // Actually draw the legend on the canvas\r\n                draw: function() {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var labelOpts = opts.labels;\r\n                    var globalDefault = defaults.global;\r\n                    var lineDefault = globalDefault.elements.line;\r\n                    var legendWidth = me.width;\r\n                    var lineWidths = me.lineWidths;\r\n\r\n                    if (opts.display) {\r\n                        var ctx = me.ctx;\r\n                        var valueOrDefault = helpers.valueOrDefault;\r\n                        var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\r\n                        var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\r\n                        var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\r\n                        var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\r\n                        var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n                        var cursor;\r\n\r\n                        // Canvas setup\r\n                        ctx.textAlign = 'left';\r\n                        ctx.textBaseline = 'middle';\r\n                        ctx.lineWidth = 0.5;\r\n                        ctx.strokeStyle = fontColor; // for strikethrough effect\r\n                        ctx.fillStyle = fontColor; // render in correct colour\r\n                        ctx.font = labelFont;\r\n\r\n                        var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                        var hitboxes = me.legendHitBoxes;\r\n\r\n                        // current position\r\n                        var drawLegendBox = function(x, y, legendItem) {\r\n                            if (isNaN(boxWidth) || boxWidth <= 0) {\r\n                                return;\r\n                            }\r\n\r\n                            // Set the ctx for the box\r\n                            ctx.save();\r\n\r\n                            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\r\n                            ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\r\n                            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\r\n                            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\r\n                            ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\r\n                            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\r\n                            var isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\r\n\r\n                            if (ctx.setLineDash) {\r\n                                // IE 9 and 10 do not support line dash\r\n                                ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\r\n                            }\r\n\r\n                            if (opts.labels && opts.labels.usePointStyle) {\r\n                                // Recalculate x and y for drawPoint() because its expecting\r\n                                // x and y to be center of figure (instead of top left)\r\n                                var radius = fontSize * Math.SQRT2 / 2;\r\n                                var offSet = radius / Math.SQRT2;\r\n                                var centerX = x + offSet;\r\n                                var centerY = y + offSet;\r\n\r\n                                // Draw pointStyle as legend symbol\r\n                                helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\r\n                            } else {\r\n                                // Draw box as legend symbol\r\n                                if (!isLineWidthZero) {\r\n                                    ctx.strokeRect(x, y, boxWidth, fontSize);\r\n                                }\r\n                                ctx.fillRect(x, y, boxWidth, fontSize);\r\n                            }\r\n\r\n                            ctx.restore();\r\n                        };\r\n                        var fillText = function(x, y, legendItem, textWidth) {\r\n                            var halfFontSize = fontSize / 2;\r\n                            var xLeft = boxWidth + halfFontSize + x;\r\n                            var yMiddle = y + halfFontSize;\r\n\r\n                            ctx.fillText(legendItem.text, xLeft, yMiddle);\r\n\r\n                            if (legendItem.hidden) {\r\n                                // Strikethrough the text if hidden\r\n                                ctx.beginPath();\r\n                                ctx.lineWidth = 2;\r\n                                ctx.moveTo(xLeft, yMiddle);\r\n                                ctx.lineTo(xLeft + textWidth, yMiddle);\r\n                                ctx.stroke();\r\n                            }\r\n                        };\r\n\r\n                        // Horizontal\r\n                        var isHorizontal = me.isHorizontal();\r\n                        if (isHorizontal) {\r\n                            cursor = {\r\n                                x: me.left + ((legendWidth - lineWidths[0]) / 2),\r\n                                y: me.top + labelOpts.padding,\r\n                                line: 0\r\n                            };\r\n                        } else {\r\n                            cursor = {\r\n                                x: me.left + labelOpts.padding,\r\n                                y: me.top + labelOpts.padding,\r\n                                line: 0\r\n                            };\r\n                        }\r\n\r\n                        var itemHeight = fontSize + labelOpts.padding;\r\n                        helpers.each(me.legendItems, function(legendItem, i) {\r\n                            var textWidth = ctx.measureText(legendItem.text).width;\r\n                            var width = boxWidth + (fontSize / 2) + textWidth;\r\n                            var x = cursor.x;\r\n                            var y = cursor.y;\r\n\r\n                            if (isHorizontal) {\r\n                                if (x + width >= legendWidth) {\r\n                                    y = cursor.y += itemHeight;\r\n                                    cursor.line++;\r\n                                    x = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\r\n                                }\r\n                            } else if (y + itemHeight > me.bottom) {\r\n                                x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\r\n                                y = cursor.y = me.top + labelOpts.padding;\r\n                                cursor.line++;\r\n                            }\r\n\r\n                            drawLegendBox(x, y, legendItem);\r\n\r\n                            hitboxes[i].left = x;\r\n                            hitboxes[i].top = y;\r\n\r\n                            // Fill the actual label\r\n                            fillText(x, y, legendItem, textWidth);\r\n\r\n                            if (isHorizontal) {\r\n                                cursor.x += width + (labelOpts.padding);\r\n                            } else {\r\n                                cursor.y += itemHeight;\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Handle an event\r\n                 * @private\r\n                 * @param {IEvent} event - The event to handle\r\n                 * @return {Boolean} true if a change occured\r\n                 */\r\n                handleEvent: function(e) {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var type = e.type === 'mouseup' ? 'click' : e.type;\r\n                    var changed = false;\r\n\r\n                    if (type === 'mousemove') {\r\n                        if (!opts.onHover) {\r\n                            return;\r\n                        }\r\n                    } else if (type === 'click') {\r\n                        if (!opts.onClick) {\r\n                            return;\r\n                        }\r\n                    } else {\r\n                        return;\r\n                    }\r\n\r\n                    // Chart event already has relative position in it\r\n                    var x = e.x;\r\n                    var y = e.y;\r\n\r\n                    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\r\n                        // See if we are touching one of the dataset boxes\r\n                        var lh = me.legendHitBoxes;\r\n                        for (var i = 0; i < lh.length; ++i) {\r\n                            var hitBox = lh[i];\r\n\r\n                            if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n                                // Touching an element\r\n                                if (type === 'click') {\r\n                                    // use e.native for backwards compatibility\r\n                                    opts.onClick.call(me, e.native, me.legendItems[i]);\r\n                                    changed = true;\r\n                                    break;\r\n                                } else if (type === 'mousemove') {\r\n                                    // use e.native for backwards compatibility\r\n                                    opts.onHover.call(me, e.native, me.legendItems[i]);\r\n                                    changed = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return changed;\r\n                }\r\n            });\r\n\r\n            function createNewLegendAndAttach(chart, legendOpts) {\r\n                var legend = new Legend({\r\n                    ctx: chart.ctx,\r\n                    options: legendOpts,\r\n                    chart: chart\r\n                });\r\n\r\n                layouts.configure(chart, legend, legendOpts);\r\n                layouts.addBox(chart, legend);\r\n                chart.legend = legend;\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'legend',\r\n\r\n                /**\r\n                 * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\r\n                 * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\r\n                 * the plugin, which one will be re-exposed in the chart.js file.\r\n                 * https://github.com/chartjs/Chart.js/pull/2640\r\n                 * @private\r\n                 */\r\n                _element: Legend,\r\n\r\n                beforeInit: function(chart) {\r\n                    var legendOpts = chart.options.legend;\r\n\r\n                    if (legendOpts) {\r\n                        createNewLegendAndAttach(chart, legendOpts);\r\n                    }\r\n                },\r\n\r\n                beforeUpdate: function(chart) {\r\n                    var legendOpts = chart.options.legend;\r\n                    var legend = chart.legend;\r\n\r\n                    if (legendOpts) {\r\n                        helpers.mergeIf(legendOpts, defaults.global.legend);\r\n\r\n                        if (legend) {\r\n                            layouts.configure(chart, legend, legendOpts);\r\n                            legend.options = legendOpts;\r\n                        } else {\r\n                            createNewLegendAndAttach(chart, legendOpts);\r\n                        }\r\n                    } else if (legend) {\r\n                        layouts.removeBox(chart, legend);\r\n                        delete chart.legend;\r\n                    }\r\n                },\r\n\r\n                afterEvent: function(chart, e) {\r\n                    var legend = chart.legend;\r\n                    if (legend) {\r\n                        legend.handleEvent(e);\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"21\": 21, \"36\": 36 }], 43: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            var noop = helpers.noop;\r\n\r\n            defaults._set('global', {\r\n                title: {\r\n                    display: false,\r\n                    fontStyle: 'bold',\r\n                    fullWidth: true,\r\n                    lineHeight: 1.2,\r\n                    padding: 10,\r\n                    position: 'top',\r\n                    text: '',\r\n                    weight: 2000         // by default greater than legend (1000) to be above\r\n                }\r\n            });\r\n\r\n            /**\r\n             * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\r\n             */\r\n            var Title = Element.extend({\r\n                initialize: function(config) {\r\n                    var me = this;\r\n                    helpers.extend(me, config);\r\n\r\n                    // Contains hit boxes for each dataset (in dataset order)\r\n                    me.legendHitBoxes = [];\r\n                },\r\n\r\n                // These methods are ordered by lifecycle. Utilities then follow.\r\n\r\n                beforeUpdate: noop,\r\n                update: function(maxWidth, maxHeight, margins) {\r\n                    var me = this;\r\n\r\n                    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                    me.beforeUpdate();\r\n\r\n                    // Absorb the master measurements\r\n                    me.maxWidth = maxWidth;\r\n                    me.maxHeight = maxHeight;\r\n                    me.margins = margins;\r\n\r\n                    // Dimensions\r\n                    me.beforeSetDimensions();\r\n                    me.setDimensions();\r\n                    me.afterSetDimensions();\r\n                    // Labels\r\n                    me.beforeBuildLabels();\r\n                    me.buildLabels();\r\n                    me.afterBuildLabels();\r\n\r\n                    // Fit\r\n                    me.beforeFit();\r\n                    me.fit();\r\n                    me.afterFit();\r\n                    //\r\n                    me.afterUpdate();\r\n\r\n                    return me.minSize;\r\n                },\r\n                afterUpdate: noop,\r\n\r\n                //\r\n\r\n                beforeSetDimensions: noop,\r\n                setDimensions: function() {\r\n                    var me = this;\r\n                    // Set the unconstrained dimension before label rotation\r\n                    if (me.isHorizontal()) {\r\n                        // Reset position before calculating rotation\r\n                        me.width = me.maxWidth;\r\n                        me.left = 0;\r\n                        me.right = me.width;\r\n                    } else {\r\n                        me.height = me.maxHeight;\r\n\r\n                        // Reset position before calculating rotation\r\n                        me.top = 0;\r\n                        me.bottom = me.height;\r\n                    }\r\n\r\n                    // Reset padding\r\n                    me.paddingLeft = 0;\r\n                    me.paddingTop = 0;\r\n                    me.paddingRight = 0;\r\n                    me.paddingBottom = 0;\r\n\r\n                    // Reset minSize\r\n                    me.minSize = {\r\n                        width: 0,\r\n                        height: 0\r\n                    };\r\n                },\r\n                afterSetDimensions: noop,\r\n\r\n                //\r\n\r\n                beforeBuildLabels: noop,\r\n                buildLabels: noop,\r\n                afterBuildLabels: noop,\r\n\r\n                //\r\n\r\n                beforeFit: noop,\r\n                fit: function() {\r\n                    var me = this;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var opts = me.options;\r\n                    var display = opts.display;\r\n                    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\r\n                    var minSize = me.minSize;\r\n                    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\r\n                    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\r\n                    var textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\r\n\r\n                    if (me.isHorizontal()) {\r\n                        minSize.width = me.maxWidth; // fill all the width\r\n                        minSize.height = textSize;\r\n                    } else {\r\n                        minSize.width = textSize;\r\n                        minSize.height = me.maxHeight; // fill all the height\r\n                    }\r\n\r\n                    me.width = minSize.width;\r\n                    me.height = minSize.height;\r\n                },\r\n                afterFit: noop,\r\n\r\n                // Shared Methods\r\n                isHorizontal: function() {\r\n                    var pos = this.options.position;\r\n                    return pos === 'top' || pos === 'bottom';\r\n                },\r\n\r\n                // Actually draw the title block on the canvas\r\n                draw: function() {\r\n                    var me = this;\r\n                    var ctx = me.ctx;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var opts = me.options;\r\n                    var globalDefaults = defaults.global;\r\n\r\n                    if (opts.display) {\r\n                        var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\r\n                        var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\r\n                        var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\r\n                        var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n                        var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\r\n                        var offset = lineHeight / 2 + opts.padding;\r\n                        var rotation = 0;\r\n                        var top = me.top;\r\n                        var left = me.left;\r\n                        var bottom = me.bottom;\r\n                        var right = me.right;\r\n                        var maxWidth, titleX, titleY;\r\n\r\n                        ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\r\n                        ctx.font = titleFont;\r\n\r\n                        // Horizontal\r\n                        if (me.isHorizontal()) {\r\n                            titleX = left + ((right - left) / 2); // midpoint of the width\r\n                            titleY = top + offset;\r\n                            maxWidth = right - left;\r\n                        } else {\r\n                            titleX = opts.position === 'left' ? left + offset : right - offset;\r\n                            titleY = top + ((bottom - top) / 2);\r\n                            maxWidth = bottom - top;\r\n                            rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\r\n                        }\r\n\r\n                        ctx.save();\r\n                        ctx.translate(titleX, titleY);\r\n                        ctx.rotate(rotation);\r\n                        ctx.textAlign = 'center';\r\n                        ctx.textBaseline = 'middle';\r\n\r\n                        var text = opts.text;\r\n                        if (helpers.isArray(text)) {\r\n                            var y = 0;\r\n                            for (var i = 0; i < text.length; ++i) {\r\n                                ctx.fillText(text[i], 0, y, maxWidth);\r\n                                y += lineHeight;\r\n                            }\r\n                        } else {\r\n                            ctx.fillText(text, 0, 0, maxWidth);\r\n                        }\r\n\r\n                        ctx.restore();\r\n                    }\r\n                }\r\n            });\r\n\r\n            function createNewTitleBlockAndAttach(chart, titleOpts) {\r\n                var title = new Title({\r\n                    ctx: chart.ctx,\r\n                    options: titleOpts,\r\n                    chart: chart\r\n                });\r\n\r\n                layouts.configure(chart, title, titleOpts);\r\n                layouts.addBox(chart, title);\r\n                chart.titleBlock = title;\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'title',\r\n\r\n                /**\r\n                 * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\r\n                 * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\r\n                 * the plugin, which one will be re-exposed in the chart.js file.\r\n                 * https://github.com/chartjs/Chart.js/pull/2640\r\n                 * @private\r\n                 */\r\n                _element: Title,\r\n\r\n                beforeInit: function(chart) {\r\n                    var titleOpts = chart.options.title;\r\n\r\n                    if (titleOpts) {\r\n                        createNewTitleBlockAndAttach(chart, titleOpts);\r\n                    }\r\n                },\r\n\r\n                beforeUpdate: function(chart) {\r\n                    var titleOpts = chart.options.title;\r\n                    var titleBlock = chart.titleBlock;\r\n\r\n                    if (titleOpts) {\r\n                        helpers.mergeIf(titleOpts, defaults.global.title);\r\n\r\n                        if (titleBlock) {\r\n                            layouts.configure(chart, titleBlock, titleOpts);\r\n                            titleBlock.options = titleOpts;\r\n                        } else {\r\n                            createNewTitleBlockAndAttach(chart, titleOpts);\r\n                        }\r\n                    } else if (titleBlock) {\r\n                        layouts.removeBox(chart, titleBlock);\r\n                        delete chart.titleBlock;\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"21\": 21, \"36\": 36 }], 44: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                // Default config for a category scale\r\n                var defaultConfig = {\r\n                    position: 'bottom'\r\n                };\r\n\r\n                var DatasetScale = Chart.Scale.extend({\r\n                    /**\r\n                    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\r\n                    * else fall back to data.labels\r\n                    * @private\r\n                    */\r\n                    getLabels: function() {\r\n                        var data = this.chart.data;\r\n                        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\r\n                    },\r\n\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var labels = me.getLabels();\r\n                        me.minIndex = 0;\r\n                        me.maxIndex = labels.length - 1;\r\n                        var findIndex;\r\n\r\n                        if (me.options.ticks.min !== undefined) {\r\n                            // user specified min value\r\n                            findIndex = labels.indexOf(me.options.ticks.min);\r\n                            me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\r\n                        }\r\n\r\n                        if (me.options.ticks.max !== undefined) {\r\n                            // user specified max value\r\n                            findIndex = labels.indexOf(me.options.ticks.max);\r\n                            me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\r\n                        }\r\n\r\n                        me.min = labels[me.minIndex];\r\n                        me.max = labels[me.maxIndex];\r\n                    },\r\n\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var labels = me.getLabels();\r\n                        // If we are viewing some subset of labels, slice the original array\r\n                        me.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\r\n                    },\r\n\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        var me = this;\r\n                        var data = me.chart.data;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        if (data.yLabels && !isHorizontal) {\r\n                            return me.getRightValue(data.datasets[datasetIndex].data[index]);\r\n                        }\r\n                        return me.ticks[index - me.minIndex];\r\n                    },\r\n\r\n                    // Used to get data value locations.  Value can either be an index or a numerical value\r\n                    getPixelForValue: function(value, index) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        // 1 is added because we need the length but we have the indexes\r\n                        var offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\r\n\r\n                        // If value is a data object, then index is the index in the data array,\r\n                        // not the index of the scale. We need to change that.\r\n                        var valueCategory;\r\n                        if (value !== undefined && value !== null) {\r\n                            valueCategory = me.isHorizontal() ? value.x : value.y;\r\n                        }\r\n                        if (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\r\n                            var labels = me.getLabels();\r\n                            value = valueCategory || value;\r\n                            var idx = labels.indexOf(value);\r\n                            index = idx !== -1 ? idx : index;\r\n                        }\r\n\r\n                        if (me.isHorizontal()) {\r\n                            var valueWidth = me.width / offsetAmt;\r\n                            var widthOffset = (valueWidth * (index - me.minIndex));\r\n\r\n                            if (offset) {\r\n                                widthOffset += (valueWidth / 2);\r\n                            }\r\n\r\n                            return me.left + Math.round(widthOffset);\r\n                        }\r\n                        var valueHeight = me.height / offsetAmt;\r\n                        var heightOffset = (valueHeight * (index - me.minIndex));\r\n\r\n                        if (offset) {\r\n                            heightOffset += (valueHeight / 2);\r\n                        }\r\n\r\n                        return me.top + Math.round(heightOffset);\r\n                    },\r\n                    getPixelForTick: function(index) {\r\n                        return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        var value;\r\n                        var offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\r\n                        var horz = me.isHorizontal();\r\n                        var valueDimension = (horz ? me.width : me.height) / offsetAmt;\r\n\r\n                        pixel -= horz ? me.left : me.top;\r\n\r\n                        if (offset) {\r\n                            pixel -= (valueDimension / 2);\r\n                        }\r\n\r\n                        if (pixel <= 0) {\r\n                            value = 0;\r\n                        } else {\r\n                            value = Math.round(pixel / valueDimension);\r\n                        }\r\n\r\n                        return value + me.minIndex;\r\n                    },\r\n                    getBasePixel: function() {\r\n                        return this.bottom;\r\n                    }\r\n                });\r\n\r\n                Chart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\r\n            };\r\n        }, {}], 45: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var Ticks = require(25);\r\n\r\n            module.exports = function(Chart) {\r\n                var defaultConfig = {\r\n                    position: 'left',\r\n                    ticks: {\r\n                        callback: Ticks.formatters.linear\r\n                    }\r\n                };\r\n\r\n                var LinearScale = Chart.LinearScaleBase.extend({\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var chart = me.chart;\r\n                        var data = chart.data;\r\n                        var datasets = data.datasets;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var DEFAULT_MIN = 0;\r\n                        var DEFAULT_MAX = 1;\r\n\r\n                        function IDMatches(meta) {\r\n                            return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\r\n                        }\r\n\r\n                        // First Calculate the range\r\n                        me.min = null;\r\n                        me.max = null;\r\n\r\n                        var hasStacks = opts.stacked;\r\n                        if (hasStacks === undefined) {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                if (hasStacks) {\r\n                                    return;\r\n                                }\r\n\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\r\n                                    meta.stack !== undefined) {\r\n                                    hasStacks = true;\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        if (opts.stacked || hasStacks) {\r\n                            var valuesPerStack = {};\r\n\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                var key = [\r\n                                    meta.type,\r\n                                    // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\r\n                                    ((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\r\n                                    meta.stack\r\n                                ].join('.');\r\n\r\n                                if (valuesPerStack[key] === undefined) {\r\n                                    valuesPerStack[key] = {\r\n                                        positiveValues: [],\r\n                                        negativeValues: []\r\n                                    };\r\n                                }\r\n\r\n                                // Store these per type\r\n                                var positiveValues = valuesPerStack[key].positiveValues;\r\n                                var negativeValues = valuesPerStack[key].negativeValues;\r\n\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        positiveValues[index] = positiveValues[index] || 0;\r\n                                        negativeValues[index] = negativeValues[index] || 0;\r\n\r\n                                        if (opts.relativePoints) {\r\n                                            positiveValues[index] = 100;\r\n                                        } else if (value < 0) {\r\n                                            negativeValues[index] += value;\r\n                                        } else {\r\n                                            positiveValues[index] += value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n\r\n                            helpers.each(valuesPerStack, function(valuesForType) {\r\n                                var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\r\n                                var minVal = helpers.min(values);\r\n                                var maxVal = helpers.max(values);\r\n                                me.min = me.min === null ? minVal : Math.min(me.min, minVal);\r\n                                me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\r\n                            });\r\n                        } else {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        if (me.min === null) {\r\n                                            me.min = value;\r\n                                        } else if (value < me.min) {\r\n                                            me.min = value;\r\n                                        }\r\n\r\n                                        if (me.max === null) {\r\n                                            me.max = value;\r\n                                        } else if (value > me.max) {\r\n                                            me.max = value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\r\n                        me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\r\n\r\n                        // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\r\n                        this.handleTickRangeOptions();\r\n                    },\r\n                    getTickLimit: function() {\r\n                        var maxTicks;\r\n                        var me = this;\r\n                        var tickOpts = me.options.ticks;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\r\n                        } else {\r\n                            // The factor of 2 used to scale the font size has been experimentally determined.\r\n                            var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\r\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\r\n                        }\r\n\r\n                        return maxTicks;\r\n                    },\r\n                    // Called after the ticks are built. We need\r\n                    handleDirectionalChanges: function() {\r\n                        if (!this.isHorizontal()) {\r\n                            // We are in a vertical orientation. The top value is the highest. So reverse the array\r\n                            this.ticks.reverse();\r\n                        }\r\n                    },\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n                    },\r\n                    // Utils\r\n                    getPixelForValue: function(value) {\r\n                        // This must be called after fit has been run so that\r\n                        // this.left, this.top, this.right, and this.bottom have been defined\r\n                        var me = this;\r\n                        var start = me.start;\r\n\r\n                        var rightValue = +me.getRightValue(value);\r\n                        var pixel;\r\n                        var range = me.end - start;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            pixel = me.left + (me.width / range * (rightValue - start));\r\n                        } else {\r\n                            pixel = me.bottom - (me.height / range * (rightValue - start));\r\n                        }\r\n                        return pixel;\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var innerDimension = isHorizontal ? me.width : me.height;\r\n                        var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\r\n                        return me.start + ((me.end - me.start) * offset);\r\n                    },\r\n                    getPixelForTick: function(index) {\r\n                        return this.getPixelForValue(this.ticksAsNumbers[index]);\r\n                    }\r\n                });\r\n                Chart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\r\n            };\r\n        }, { \"16\": 16, \"25\": 25, \"36\": 36 }], 46: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Generate a set of linear ticks\r\n             * @param generationOptions the options used to generate the ticks\r\n             * @param dataRange the range of the data\r\n             * @returns {Array<Number>} array of tick values\r\n             */\r\n            function generateTicks(generationOptions, dataRange) {\r\n                var ticks = [];\r\n                // To get a \"nice\" value for the tick spacing, we will use the appropriately named\r\n                // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\r\n                // for details.\r\n\r\n                var spacing;\r\n                if (generationOptions.stepSize && generationOptions.stepSize > 0) {\r\n                    spacing = generationOptions.stepSize;\r\n                } else {\r\n                    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\r\n                    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\r\n                }\r\n                var niceMin = Math.floor(dataRange.min / spacing) * spacing;\r\n                var niceMax = Math.ceil(dataRange.max / spacing) * spacing;\r\n\r\n                // If min, max and stepSize is set and they make an evenly spaced scale use it.\r\n                if (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\r\n                    // If very close to our whole number, use it.\r\n                    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\r\n                        niceMin = generationOptions.min;\r\n                        niceMax = generationOptions.max;\r\n                    }\r\n                }\r\n\r\n                var numSpaces = (niceMax - niceMin) / spacing;\r\n                // If very close to our rounded value, use it.\r\n                if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n                    numSpaces = Math.round(numSpaces);\r\n                } else {\r\n                    numSpaces = Math.ceil(numSpaces);\r\n                }\r\n\r\n                var precision = 1;\r\n                if (spacing < 1) {\r\n                    precision = Math.pow(10, spacing.toString().length - 2);\r\n                    niceMin = Math.round(niceMin * precision) / precision;\r\n                    niceMax = Math.round(niceMax * precision) / precision;\r\n                }\r\n                ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\r\n                for (var j = 1; j < numSpaces; ++j) {\r\n                    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\r\n                }\r\n                ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\r\n\r\n                return ticks;\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                var noop = helpers.noop;\r\n\r\n                Chart.LinearScaleBase = Chart.Scale.extend({\r\n                    getRightValue: function(value) {\r\n                        if (typeof value === 'string') {\r\n                            return +value;\r\n                        }\r\n                        return Chart.Scale.prototype.getRightValue.call(this, value);\r\n                    },\r\n\r\n                    handleTickRangeOptions: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\r\n                        // do nothing since that would make the chart weird. If the user really wants a weird chart\r\n                        // axis, they can manually override it\r\n                        if (tickOpts.beginAtZero) {\r\n                            var minSign = helpers.sign(me.min);\r\n                            var maxSign = helpers.sign(me.max);\r\n\r\n                            if (minSign < 0 && maxSign < 0) {\r\n                                // move the top up to 0\r\n                                me.max = 0;\r\n                            } else if (minSign > 0 && maxSign > 0) {\r\n                                // move the bottom down to 0\r\n                                me.min = 0;\r\n                            }\r\n                        }\r\n\r\n                        var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\r\n                        var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\r\n\r\n                        if (tickOpts.min !== undefined) {\r\n                            me.min = tickOpts.min;\r\n                        } else if (tickOpts.suggestedMin !== undefined) {\r\n                            if (me.min === null) {\r\n                                me.min = tickOpts.suggestedMin;\r\n                            } else {\r\n                                me.min = Math.min(me.min, tickOpts.suggestedMin);\r\n                            }\r\n                        }\r\n\r\n                        if (tickOpts.max !== undefined) {\r\n                            me.max = tickOpts.max;\r\n                        } else if (tickOpts.suggestedMax !== undefined) {\r\n                            if (me.max === null) {\r\n                                me.max = tickOpts.suggestedMax;\r\n                            } else {\r\n                                me.max = Math.max(me.max, tickOpts.suggestedMax);\r\n                            }\r\n                        }\r\n\r\n                        if (setMin !== setMax) {\r\n                            // We set the min or the max but not both.\r\n                            // So ensure that our range is good\r\n                            // Inverted or 0 length range can happen when\r\n                            // ticks.min is set, and no datasets are visible\r\n                            if (me.min >= me.max) {\r\n                                if (setMin) {\r\n                                    me.max = me.min + 1;\r\n                                } else {\r\n                                    me.min = me.max - 1;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (me.min === me.max) {\r\n                            me.max++;\r\n\r\n                            if (!tickOpts.beginAtZero) {\r\n                                me.min--;\r\n                            }\r\n                        }\r\n                    },\r\n                    getTickLimit: noop,\r\n                    handleDirectionalChanges: noop,\r\n\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        // Figure out what the max number of ticks we can support it is based on the size of\r\n                        // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n                        // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n                        // the graph. Make sure we always have at least 2 ticks\r\n                        var maxTicks = me.getTickLimit();\r\n                        maxTicks = Math.max(2, maxTicks);\r\n\r\n                        var numericGeneratorOptions = {\r\n                            maxTicks: maxTicks,\r\n                            min: tickOpts.min,\r\n                            max: tickOpts.max,\r\n                            stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\r\n                        };\r\n                        var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\r\n\r\n                        me.handleDirectionalChanges();\r\n\r\n                        // At this point, we need to update our max and min given the tick values since we have expanded the\r\n                        // range of the scale\r\n                        me.max = helpers.max(ticks);\r\n                        me.min = helpers.min(ticks);\r\n\r\n                        if (tickOpts.reverse) {\r\n                            ticks.reverse();\r\n\r\n                            me.start = me.max;\r\n                            me.end = me.min;\r\n                        } else {\r\n                            me.start = me.min;\r\n                            me.end = me.max;\r\n                        }\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        me.ticksAsNumbers = me.ticks.slice();\r\n                        me.zeroLineIndex = me.ticks.indexOf(0);\r\n\r\n                        Chart.Scale.prototype.convertTicksToLabels.call(me);\r\n                    }\r\n                });\r\n            };\r\n        }, { \"36\": 36 }]\r\n    }, {}, [6])(6)\r\n});\r\n","/*!\r\n * Allowing lists to dynamically expand and collapse.\r\n * Created by Stephen Morley - http://code.stephenmorley.org/ - and released under the terms of the CC0 1.0 Universal legal code:\r\n * http://creativecommons.org/publicdomain/zero/1.0/legalcode\r\n *\r\n * Modified to work with bootstrap/fontAwesome and incorporate cascading checkboxes.\r\n */\r\n(function(root, factory) {\r\n    root.CollapsibleList = factory(root.$);\r\n})(this, function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare CollapsibleList class.\r\n     * @param {Node} element - Node to make collapsible.\r\n     */\r\n    var CollapsibleList = function(element) {\r\n        this.container = $.get(element);\r\n        this.init();\r\n    };\r\n\r\n    CollapsibleList.prototype = {\r\n        init: function() {\r\n            var node = this.container;\r\n            // loop over the list items within this node\r\n            var lis = $.getAll('li', node);\r\n            for (var i = 0; i < lis.length; i++) {\r\n                // prevent text from being selected unintentionally\r\n                $.on(lis[i], 'mousedown', function(e) { e.preventDefault(); }, false);\r\n                // add the click listener\r\n                $.on(lis[i], 'click', this.createClickListener(lis[i]), false);\r\n                // close the unordered lists within this list item\r\n                this.toggle(lis[i]);\r\n\r\n                // check any parent items if this item is checked\r\n                node = $.get('input[type=\"checkbox\"]', lis[i]);\r\n                if (node.checked) {\r\n                    var p = node;\r\n                    while (this.container !== (p = p.parentNode)) {\r\n                        if (p.nodeName === 'LI') {\r\n                            var parent = p.parentNode.parentNode;\r\n                            if (parent.nodeName === 'LI') {\r\n                                var pi = $.get('input[type=\"checkbox\"]', parent);\r\n                                if (pi && pi !== node) {\r\n                                    pi.checked = true;\r\n                                }\r\n                                this.toggle(parent, true);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Toggles the display status of any unordered list elements within the specified node.\r\n         * @param {Node} node - Node containing the unordered list elements.\r\n         * @returns {Function} Click handler function.\r\n         */\r\n        createClickListener: function(node) {\r\n            var self = this;\r\n            return function(e) {\r\n                if (!e) {\r\n                    return;\r\n                }\r\n\r\n                // find the list item containing the target of the event\r\n                var elem = $.coalesce(e.target, e.srcElement);\r\n\r\n                // handle checking/unchecking buttons\r\n                if (elem.nodeName === 'INPUT') {\r\n                    var checked = elem.checked;\r\n\r\n                    // first toggle the check for all of the children\r\n                    var inputs = $.getAll('ul input[type=\"checkbox\"]', $.closest('li', elem));\r\n                    i = inputs.length;\r\n                    while (i--) {\r\n                        inputs[i].checked = checked;\r\n                    }\r\n\r\n                    // then check all parents. if any of the children of a checkbox are checked, then it should be checked.\r\n                    var checkedRelative = false;\r\n                    var p = elem;\r\n                    while (self.container !== (p = p.parentNode)) {\r\n                        if (p.nodeName === 'LI') {\r\n                            // see if anybody else on this node level is checked\r\n                            var relatives = $.getAll('input[type=\"checkbox\"]', p.parentNode);\r\n                            var i = relatives.length;\r\n                            checkedRelative = false;\r\n                            while (i--) {\r\n                                if (relatives[i].checked) {\r\n                                    checkedRelative = true;\r\n                                }\r\n                            }\r\n\r\n                            if (p.parentNode.parentNode !== self.container) {\r\n                                var pi = $.get('input[type=\"checkbox\"]', p.parentNode.parentNode);\r\n                                if (pi && pi !== elem) {\r\n                                    pi.checked = checkedRelative || checked;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                if ($.hasClass(elem, 'form-group') || $.hasClass(elem, 'form-icon') || (elem.parentNode && $.hasClass(elem.parentNode, 'form-group'))) {\r\n                    // prevent toggling tree when checking/unchecking an element\r\n                    return;\r\n                }\r\n\r\n                // now handle the tree itself\r\n                while (elem.nodeName !== 'LI') {\r\n                    elem = elem.parentNode;\r\n                }\r\n\r\n                // toggle the state of the node if it was the target of the event\r\n                if (elem === node) {\r\n                    self.toggle(node);\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Opens or closes the unordered list elements directly within the specified node.\r\n         * @param {Node} node - Node containing the unordered list elements.\r\n         * @param {bool} forceOpen - Set to true to force the node to be open regardless of current status.\r\n         */\r\n        toggle: function(node, forceOpen) {\r\n            // determine whether to open or close the unordered lists\r\n            var open = $.coalesce(forceOpen, $.hasClass(node, 'collapsible-list-closed'));\r\n\r\n            // loop over the unordered list elements with the node\r\n            var uls = $.getAll('ul', node);\r\n            for (var i = 0; i < uls.length; i++) {\r\n                // find the parent list item of this unordered list\r\n                var li = uls[i];\r\n                while (li.nodeName !== 'LI') {\r\n                    li = li.parentNode;\r\n                }\r\n\r\n                // style the unordered list if it is directly within this node\r\n                if (li === node) {\r\n                    uls[i].style.display = open ? 'block' : 'none';\r\n                }\r\n            }\r\n\r\n            // remove the current class from the node\r\n            $.removeClass(node, 'collapsible-list-' + (open ? 'closed' : 'open'));\r\n\r\n            // if the node contains unordered lists, set its class\r\n            if (uls.length) {\r\n                $.addClass(node, 'collapsible-list-' + (open ? 'open' : 'closed'));\r\n            }\r\n        }\r\n    };\r\n\r\n    return CollapsibleList;\r\n});\r\n","/*!\r\n * Wraps functionality needed for creating charts using Chart.js.\r\n */\r\n(function(root, factory) {\r\n    root.DashChart = factory(root.$, root.Alertify, root.Chart);\r\n})(this, function($, Alertify, Chart) {\r\n    'use strict';\r\n\r\n    // Change global chart settings.\r\n    Chart.defaults.global.responsive = true;\r\n    Chart.defaults.global.maintainAspectRatio = false;\r\n    Chart.defaults.global.title.display = false;\r\n    Chart.defaults.global.legend.position = 'bottom';\r\n    Chart.defaults.global.legend.labels.fontSize = 16;\r\n    Chart.defaults.global.legend.labels.fontFamily = 'Calibri';\r\n    Chart.defaults.global.layout = { padding: 10 };\r\n    Chart.defaults.scale.ticks.fontFamily = 'Calibri';\r\n    Chart.defaults.scale.ticks.fontSize = 12;\r\n\r\n    /**\r\n     * Declare DashChart class.\r\n     * @param {Node} content - DOM node that contains the chart.\r\n     * @param {bool} showLegend - Show or hide the chart legend.\r\n     * @param {Function} dataFn - Function to call if after loading data. Runs before other functions.\r\n     * @param {Function} errorFn - Function to call if an error occurs loading data.\r\n     * @param {Function} toggleExportFn - Function to enable/disable export.\r\n     */\r\n    var DashChart = function(content, showLegend, dataFn, errorFn, toggleExportFn) {\r\n        this.content = content;\r\n        this.url = content.getAttribute('data-url');\r\n        this.canvas = $.get('.chart-canvas', content);\r\n        this.showLegend = $.coalesce(showLegend, true);\r\n        this.dataFn = dataFn;\r\n        this.errorFn = errorFn;\r\n        this.toggleExportFn = toggleExportFn;\r\n        this.chart = null;\r\n        this.events = { resize: $.debounce(this.resize.bind(this), 50) };\r\n        $.on(window, 'resize', this.events.resize);\r\n        this.run();\r\n    };\r\n\r\n    DashChart.prototype = {\r\n        /**\r\n         * Generate a random number within range.\r\n         * @param {number[]} range - Min and max value.\r\n         * @returns {number} Random number.\r\n         */\r\n        randomWithin: function(range) {\r\n            return Math.floor(range[0] + Math.random() * (range[1] + 1 - range[0]));\r\n        },\r\n\r\n        /**\r\n         * Generates a random color and a lighter partner color.\r\n         * @returns {string[]} Color codes.\r\n         */\r\n        randomColor: function() {\r\n            var hsl = [this.randomWithin([0, 360]), this.randomWithin([50, 100]), this.randomWithin([30, 80])];\r\n            return [\r\n                'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%, 1)',\r\n                'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%, .2)'\r\n            ];\r\n        },\r\n\r\n        /**\r\n         * Generates an array of random colors.\r\n         * @param {number} cnt - Number of colors to generate.\r\n         * @returns {string[]} Array of color codes.\r\n         */\r\n        randomColors: function(cnt) {\r\n            var result = new Array(cnt);\r\n            for (var i = 0; i < cnt; i++) {\r\n                result[i] = this.randomColor()[0];\r\n            }\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Parse a hex color into a hsla color and a lighter partner color.\r\n         * @param {string} hex - Hex color code with leading '#'.\r\n         * @returns {string[]} Color codes.\r\n         */\r\n        parseColor: function(hex) {\r\n            if (!hex) {\r\n                return this.randomColor();\r\n            }\r\n            var hsl = $.colors.rgb2hsl($.colors.hex2rgb(hex));\r\n            return [\r\n                'hsla(' + (hsl[0] * 360).toFixed(0) + ',' + (hsl[1] * 100).toFixed(0) + '%,' + (hsl[2] * 100).toFixed(0) + '%, 1)',\r\n                'hsla(' + (hsl[0] * 360).toFixed(0) + ',' + (hsl[1] * 100).toFixed(0) + '%,' + (hsl[2] * 100).toFixed(0) + '%, .2)'\r\n            ];\r\n        },\r\n\r\n        run: function() {\r\n            var self = this;\r\n\r\n            $.show($.get('.chart-spinner', self.content));\r\n            $.hide($.get('.chart-error', self.content));\r\n            $.hide(self.canvas.parentNode);\r\n            if (self.toggleExportFn) {\r\n                self.toggleExportFn(false);\r\n            }\r\n\r\n            $.ajax({\r\n                method: 'POST',\r\n                url: self.url,\r\n                block: false,\r\n                headers: {\r\n                    'Content-Type': 'application/jil; charset=utf-8',\r\n                    'Accept': 'application/jil'\r\n                }\r\n            }, function(data) {\r\n                if ($.isFunction(self.dataFn)) {\r\n                    if (!self.dataFn(data)) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                var ranges = $.isArray(data.ranges) ? data.ranges : [data];\r\n                if (!ranges.some(function(x) { return x.rows && x.rows.length; })) {\r\n                    $.hide($.get('.chart-spinner', self.content));\r\n                    Alertify.error($.resx('chart.noData'));\r\n                    return;\r\n                }\r\n\r\n                $.hide($.get('.chart-spinner', self.content));\r\n                $.hide($.get('.chart-error', self.content));\r\n                $.show(self.canvas.parentNode);\r\n                if (self.toggleExportFn) {\r\n                    self.toggleExportFn(true);\r\n                }\r\n\r\n                if (self.chart) {\r\n                    // this code is used for refreshing dashboard chart data, but won't be used on the chart dialog\r\n                    ranges.forEach(function(x, i) {\r\n                        self.chart.data.datasets[i].data = ranges[i].rows;\r\n                        self.chart.data.datasets[i].label = ranges[i].yTitle;\r\n                    });\r\n                    self.chart.data.labels = ranges[0].labels;\r\n                    self.chart.update();\r\n                } else {\r\n                    var scales = {};\r\n                    var tooltips = { callbacks: {} };\r\n                    if (ranges[0].xType === 'currency') {\r\n                        var currencyFormat = $.accounting.parseFormat(ranges[0].currencyFormat);\r\n                        scales.xAxes = [{\r\n                            ticks: {\r\n                                callback: function(value) {\r\n                                    return $.accounting.formatMoney(value, currencyFormat);\r\n                                }\r\n                            }\r\n                        }];\r\n                        tooltips.callbacks.title = function(tooltipItems, data) {\r\n                            var title = '';\r\n                            if (tooltipItems.length > 0) {\r\n                                if (tooltipItems[0].xLabel) {\r\n                                    title = tooltipItems[0].xLabel;\r\n                                } else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n                                    title = data.labels[tooltipItems[0].index];\r\n                                }\r\n                                title = $.accounting.formatMoney(title, currencyFormat);\r\n                            }\r\n                            return title;\r\n                        };\r\n                    } else if (ranges[0].xType === 'date') {\r\n                        var dateFormat = ranges[0].dateFormat;\r\n                        scales.xAxes = [{\r\n                            ticks: {\r\n                                callback: function(value) {\r\n                                    return $.fecha.format(new Date(value), dateFormat);\r\n                                }\r\n                            }\r\n                        }];\r\n                        tooltips.callbacks.title = function(tooltipItems, data) {\r\n                            var title = '';\r\n                            if (tooltipItems.length > 0) {\r\n                                if (tooltipItems[0].xLabel) {\r\n                                    title = tooltipItems[0].xLabel;\r\n                                } else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n                                    title = data.labels[tooltipItems[0].index];\r\n                                }\r\n                                title = $.fecha.format(new Date(title), dateFormat);\r\n                            }\r\n                            return title;\r\n                        };\r\n                    }\r\n\r\n                    var chartType = data.type.toLowerCase();\r\n                    var isRadial = chartType === 'pie' || chartType === 'doughnut';\r\n                    var datasets = [];\r\n                    scales.yAxes = [];\r\n                    ranges.forEach(function(x, i) {\r\n                        var color = self.parseColor(x.color);\r\n                        datasets.push({\r\n                            backgroundColor: color[0],\r\n                            borderColor: 'rgb(255, 255, 255)',\r\n                            borderWidth: 2,\r\n                            data: x.rows,\r\n                            label: x.yTitle,\r\n                            yAxisID: 'y-axis-' + i\r\n                        });\r\n\r\n                        var ticks = {};\r\n                        if (x.yType === 'currency') {\r\n                            var currencyFormat = $.accounting.parseFormat(x.currencyFormat);\r\n                            ticks.callback = function(value) {\r\n                                return $.accounting.formatMoney(value, currencyFormat);\r\n                            };\r\n                            tooltips.callbacks.label = function(item) {\r\n                                return $.accounting.formatMoney(item.yLabel, currencyFormat);\r\n                            };\r\n                        } else if (x.yType === 'date') {\r\n                            var dateFormat = x.dateFormat;\r\n                            ticks.callback = function(value) {\r\n                                return $.fecha.format(new Date(value), dateFormat);\r\n                            };\r\n                            tooltips.callbacks.label = function(item) {\r\n                                return $.fecha.format(new Date(item.yLabel), dateFormat);\r\n                            };\r\n                        }\r\n\r\n                        if (!isRadial) {\r\n                            scales.yAxes.push({\r\n                                id: 'y-axis-' + i,\r\n                                position: i === 0 ? 'left' : 'right',\r\n                                ticks: ticks,\r\n                                gridLines: {\r\n                                    color: color[1]\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    var chartData = {\r\n                        type: chartType === 'horizontalbar' ? 'horizontalBar' : chartType,\r\n                        options: {\r\n                            scales: isRadial ? null : scales,\r\n                            tooltips: tooltips,\r\n                            legend: { display: self.showLegend }\r\n                        },\r\n                        data: {\r\n                            labels: ranges[0].labels,\r\n                            datasets: datasets\r\n                        }\r\n                    };\r\n\r\n                    if (isRadial) {\r\n                        chartData.data.datasets[0].backgroundColor = self.randomColors(ranges[0].rows.length);\r\n                    }\r\n\r\n                    self.chart = new Chart(self.canvas.getContext('2d'), chartData);\r\n                }\r\n            }, function() {\r\n                if ($.isFunction(self.errorFn)) {\r\n                    if (!self.errorFn()) {\r\n                        return;\r\n                    }\r\n                }\r\n                $.hide($.get('.chart-spinner', self.content));\r\n                $.show($.get('.chart-error', self.content));\r\n                if (self.toggleExportFn) {\r\n                    self.toggleExportFn(false);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Eventually this may not be necessary, but responsive functionality for Chart.js does not seem to work correctly.\r\n         */\r\n        resize: function() {\r\n            if (this.chart) {\r\n                this.chart.resize();\r\n            }\r\n        },\r\n\r\n        destroy: function() {\r\n            $.destroy(this.chart);\r\n            if (this.events) {\r\n                $.off(window, 'resize', this.events.resize);\r\n            }\r\n        }\r\n    };\r\n\r\n    return DashChart;\r\n});\r\n","/*!\r\n * Draggabilly PACKAGED v2.1.1\r\n * Make that shiz draggable\r\n * http://draggabilly.desandro.com\r\n * MIT license\r\n *\r\n * Modified to remove jQuery completely.\r\n */\r\n\r\n/*!\r\n * getSize v2.0.2\r\n * measure size of elements\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    root.getSize = factory(root.$);\r\n})(this, function factory($) {\r\n    /**\r\n     * Get a number from a string, not a percentage.\r\n     * @param {string} value - String to parse.\r\n     * @returns {Number} Returns the number.\r\n     */\r\n    function getStyleSize(value) {\r\n        var num = parseFloat(value);\r\n        // not a percent like '100%', and a number\r\n        return value.indexOf('%') === -1 && !isNaN(num) && num;\r\n    }\r\n\r\n    var measurements = [\r\n        'paddingLeft',\r\n        'paddingRight',\r\n        'paddingTop',\r\n        'paddingBottom',\r\n        'marginLeft',\r\n        'marginRight',\r\n        'marginTop',\r\n        'marginBottom',\r\n        'borderLeftWidth',\r\n        'borderRightWidth',\r\n        'borderTopWidth',\r\n        'borderBottomWidth'\r\n    ];\r\n\r\n    var measurementsLength = measurements.length;\r\n\r\n    /**\r\n     * Build the size measurements for a hidden element.\r\n     * @returns {Object} Measurements for the element.\r\n     */\r\n    function getZeroSize() {\r\n        var size = {\r\n            width: 0,\r\n            height: 0,\r\n            innerWidth: 0,\r\n            innerHeight: 0,\r\n            outerWidth: 0,\r\n            outerHeight: 0\r\n        };\r\n        for (var i = 0; i < measurementsLength; i++) {\r\n            size[measurements[i]] = 0;\r\n        }\r\n        return size;\r\n    }\r\n\r\n    var isSetup = false;\r\n    var isBoxSizeOuter;\r\n\r\n    /**\r\n     * Setup the instance.\r\n     */\r\n    function setup() {\r\n        // setup once\r\n        if (isSetup) {\r\n            return;\r\n        }\r\n        isSetup = true;\r\n\r\n        /**\r\n         * WebKit measures the outer-width on style.width on border-box elems\r\n         * IE & Firefox<29 measures the inner-width\r\n         */\r\n        var div = document.createElement('div');\r\n        $.style(div, { width: '200px', padding: '1px 2px 3px 4px', borderStyle: 'solid', borderWidth: '1px 2px 3px 4px', boxSizing: 'border-box' });\r\n\r\n        var body = document.body || document.documentElement;\r\n        body.appendChild(div);\r\n        var style = getComputedStyle(div);\r\n\r\n        getSize.isBoxSizeOuter = isBoxSizeOuter = getStyleSize(style.width) === 200;\r\n        body.removeChild(div);\r\n    }\r\n\r\n    /**\r\n     * Get the dimensions of a node.\r\n     * @param {Node|string} elem - Node object or query selector.\r\n     * @returns {Object} Dimensions for node.\r\n     */\r\n    function getSize(elem) {\r\n        setup();\r\n\r\n        elem = $.get(elem);\r\n        if (!$.isNode(elem)) {\r\n            return;\r\n        }\r\n\r\n        var style = getComputedStyle(elem);\r\n\r\n        // if hidden, everything is 0\r\n        if (style.display === 'none') {\r\n            return getZeroSize();\r\n        }\r\n\r\n        var size = { width: elem.offsetWidth, height: elem.offsetHeight };\r\n        var isBorderBox = size.isBorderBox = style.boxSizing === 'border-box';\r\n\r\n        // get all measurements\r\n        for (var i = 0; i < measurementsLength; i++) {\r\n            var measurement = measurements[i];\r\n            var value = style[measurement];\r\n            var num = parseFloat(value);\r\n            // any 'auto', 'medium' value will be 0\r\n            size[measurement] = !isNaN(num) ? num : 0;\r\n        }\r\n\r\n        var paddingWidth = size.paddingLeft + size.paddingRight;\r\n        var paddingHeight = size.paddingTop + size.paddingBottom;\r\n        var marginWidth = size.marginLeft + size.marginRight;\r\n        var marginHeight = size.marginTop + size.marginBottom;\r\n        var borderWidth = size.borderLeftWidth + size.borderRightWidth;\r\n        var borderHeight = size.borderTopWidth + size.borderBottomWidth;\r\n        var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\r\n\r\n        // overwrite width and height if we can get it from style\r\n        var styleWidth = getStyleSize(style.width);\r\n        if (styleWidth !== false) {\r\n            // add padding and border unless it's already including it\r\n            size.width = styleWidth + (isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth);\r\n        }\r\n\r\n        var styleHeight = getStyleSize(style.height);\r\n        if (styleHeight !== false) {\r\n            // add padding and border unless it's already including it\r\n            size.height = styleHeight + (isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight);\r\n        }\r\n\r\n        size.innerWidth = size.width - (paddingWidth + borderWidth);\r\n        size.innerHeight = size.height - (paddingHeight + borderHeight);\r\n        size.outerWidth = size.width + marginWidth;\r\n        size.outerHeight = size.height + marginHeight;\r\n\r\n        return size;\r\n    }\r\n\r\n    return getSize;\r\n});\r\n\r\n/**\r\n * EvEmitter v1.0.3\r\n * Lil' event emitter\r\n * MIT License\r\n */\r\n\r\n/* jshint unused: true, undef: true, strict: true */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.EvEmitter = factory();\r\n}(this, function() {\r\n    /**\r\n     * Constructor for the event emitter.\r\n     */\r\n    function EvEmitter() { }\r\n\r\n    EvEmitter.prototype = {\r\n        /**\r\n         * Add an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Function} listener - Callback function\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        on: function(eventName, listener) {\r\n            if (!eventName || !listener) {\r\n                return;\r\n            }\r\n            // set events hash\r\n            var events = this._events = this._events || {};\r\n            // set listeners array\r\n            var listeners = events[eventName] = events[eventName] || [];\r\n            // only add once\r\n            if (listeners.indexOf(listener) === -1) {\r\n                listeners.push(listener);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Remove an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Function} listener - Callback function\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        off: function(eventName, listener) {\r\n            var listeners = this._events && this._events[eventName];\r\n            if (!listeners || !listeners.length) {\r\n                return;\r\n            }\r\n            var index = listeners.indexOf(listener);\r\n            if (index !== -1) {\r\n                listeners.splice(index, 1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Dispatch an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Array} args - Arguments for the callback.\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        emitEvent: function(eventName, args) {\r\n            var listeners = this._events && this._events[eventName];\r\n            if (!listeners || !listeners.length) {\r\n                return;\r\n            }\r\n            args = args || [];\r\n            listeners.forEach(function(x) {\r\n                x.apply(this, args);\r\n            });\r\n            return this;\r\n        }\r\n    };\r\n\r\n    return EvEmitter;\r\n}));\r\n\r\n/*!\r\n * Unipointer v2.1.0\r\n * base class for doing one thing with pointer event\r\n * MIT license\r\n */\r\n\r\n/*jshint browser: true, undef: true, unused: true, strict: true */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Unipointer = factory(root.$, root, root.EvEmitter);\r\n}(this, function factory($, root, EvEmitter) {\r\n    /**\r\n     * Constructor for the Unipointer\r\n     */\r\n    function Unipointer() { }\r\n\r\n    // inherit EvEmitter\r\n    var proto = Unipointer.prototype = Object.create(EvEmitter.prototype);\r\n\r\n    /**\r\n     * Add an event to start dragging.\r\n     * @param {Node} elem - Node to add the event to.\r\n     */\r\n    proto.bindStartEvent = function(elem) {\r\n        this._bindStartEvent(elem, true);\r\n    };\r\n\r\n    /**\r\n     * Remove an event to start dragging.\r\n     * @param {Node} elem - Node to remove the event from.\r\n     */\r\n    proto.unbindStartEvent = function(elem) {\r\n        this._bindStartEvent(elem, false);\r\n    };\r\n\r\n    /**\r\n     * Add/remove the event to start dragging.\r\n     * @param {Node} elem - Node to add/remove the event to.\r\n     * @param {Boolean} isBind - will unbind if falsey.\r\n     * @private\r\n     */\r\n    proto._bindStartEvent = function(elem, isBind) {\r\n        var bindMethod = $.coalesce(isBind, true) ? 'addEventListener' : 'removeEventListener';\r\n\r\n        if (window.navigator.pointerEnabled) {\r\n            // W3C Pointer Events, IE11. See https://coderwall.com/p/mfreca\r\n            elem[bindMethod]('pointerdown', this);\r\n        } else if (window.navigator.msPointerEnabled) {\r\n            // IE10 Pointer Events\r\n            elem[bindMethod]('MSPointerDown', this);\r\n        } else {\r\n            // listen for both, for devices like Chrome Pixel\r\n            elem[bindMethod]('mousedown', this);\r\n            elem[bindMethod]('touchstart', this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Trigger handler methods for events\r\n     * @param {Event} event - Event to trigger.\r\n     */\r\n    proto.handleEvent = function(event) {\r\n        var method = 'on' + event.type;\r\n        if (this[method]) {\r\n            this[method](event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns the touch that we're keeping track of.\r\n     * @param {Touch[]} touches - Touch history\r\n     * @returns {Touch} Touch event.\r\n     */\r\n    proto.getTouch = function(touches) {\r\n        return $.findByKey(touches, 'identifier', this.pointerIdentifier);\r\n    };\r\n\r\n    /**\r\n     * Handle a mouse click.\r\n     * @param {Event} event - Click event.\r\n     */\r\n    proto.onmousedown = function(event) {\r\n        // dismiss clicks from right or middle buttons\r\n        var button = event.button;\r\n        if (button && (button !== 0 && button !== 1)) {\r\n            return;\r\n        }\r\n        this._pointerDown(event, event);\r\n    };\r\n\r\n    /**\r\n     * Handle a touch.\r\n     * @param {Touch} event - Touch event.\r\n     */\r\n    proto.ontouchstart = function(event) {\r\n        this._pointerDown(event, event.changedTouches[0]);\r\n    };\r\n\r\n    /**\r\n     * Handle a mouse click for IE.\r\n     * @param {Event} event - Click event.\r\n     */\r\n    proto.onMSPointerDown = proto.onpointerdown = function(event) {\r\n        this._pointerDown(event, event);\r\n    };\r\n\r\n    /**\r\n     * Start a click/touch event.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerDown = function(event, pointer) {\r\n        // dismiss other pointers\r\n        if (this.isPointerDown) {\r\n            return;\r\n        }\r\n\r\n        this.isPointerDown = true;\r\n        // save pointer identifier to match up touch events\r\n        // pointerId for pointer events, touch.indentifier for touch events\r\n        this.pointerIdentifier = pointer.pointerId !== undefined ? pointer.pointerId : pointer.identifier;\r\n        this.pointerDown(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Bind events after the start of a click/touch event.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        this._bindPostStartEvents(event);\r\n        this.emitEvent('pointerDown', [event, pointer]);\r\n    };\r\n\r\n    // hash of events to be bound after start event\r\n    var postStartEvents = {\r\n        mousedown: ['mousemove', 'mouseup'],\r\n        touchstart: ['touchmove', 'touchend', 'touchcancel'],\r\n        pointerdown: ['pointermove', 'pointerup', 'pointercancel'],\r\n        MSPointerDown: ['MSPointerMove', 'MSPointerUp', 'MSPointerCancel']\r\n    };\r\n\r\n    /**\r\n     * Add all of the events that are needed after start dragging.\r\n     * @param {Event} event - Original click/touch event.\r\n     * @private\r\n     */\r\n    proto._bindPostStartEvents = function(event) {\r\n        if (!event) {\r\n            return;\r\n        }\r\n        // get proper events to match start event\r\n        var events = postStartEvents[event.type];\r\n        // bind events to node\r\n        events.forEach(function(eventName) {\r\n            window.addEventListener(eventName, this);\r\n        }, this);\r\n        // save these arguments\r\n        this._boundPointerEvents = events;\r\n    };\r\n\r\n    /**\r\n     * Remove all of the events that are needed after start dragging.\r\n     * @param {Event} event - Original click/touch event.\r\n     * @private\r\n     */\r\n    proto._unbindPostStartEvents = function() {\r\n        // check for _boundEvents, in case dragEnd triggered twice (old IE8 bug)\r\n        if (!this._boundPointerEvents) {\r\n            return;\r\n        }\r\n        this._boundPointerEvents.forEach(function(eventName) {\r\n            window.removeEventListener(eventName, this);\r\n        }, this);\r\n\r\n        delete this._boundPointerEvents;\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse moves.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onmousemove = function(event) {\r\n        this._pointerMove(event, event);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse moves for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerMove = proto.onpointermove = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerMove(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch moves.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchmove = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerMove(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer move from all the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerMove = function(event, pointer) {\r\n        this.pointerMove(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer move event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        this.emitEvent('pointerMove', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse button is released.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onmouseup = function(event) {\r\n        this._pointerUp(event, event);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse button is released for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerUp = proto.onpointerup = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerUp(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch is released.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchend = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerUp(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer up from all the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerUp = function(event, pointer) {\r\n        this._pointerDone();\r\n        this.pointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer up event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        this.emitEvent('pointerUp', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Event handler for when the dragging stops.\r\n     * @private\r\n     */\r\n    proto._pointerDone = function() {\r\n        // reset properties\r\n        this.isPointerDown = false;\r\n        delete this.pointerIdentifier;\r\n        // remove events\r\n        this._unbindPostStartEvents();\r\n        this.pointerDone();\r\n    };\r\n\r\n    proto.pointerDone = $.noop;\r\n\r\n    /**\r\n     * Event handler when the mouse click is canceled for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerCancel = proto.onpointercancel = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerCancel(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch is canceled.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchcancel = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerCancel(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer cancel from all of the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerCancel = function(event, pointer) {\r\n        this._pointerDone();\r\n        this.pointerCancel(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer cancel event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerCancel = function(event, pointer) {\r\n        this.emitEvent('pointerCancel', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Utility function for getting x/y coords from event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @returns {Object} Object with x & y coordinates.\r\n     */\r\n    Unipointer.getPointerPoint = function(pointer) {\r\n        return {\r\n            x: pointer.pageX,\r\n            y: pointer.pageY\r\n        };\r\n    };\r\n\r\n    return Unipointer;\r\n}));\r\n\r\n/*!\r\n * Unidragger v2.1.0\r\n * Draggable base class\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Unidragger = factory(root.$, root, root.Unipointer);\r\n}(this, function factory($, root, Unipointer) {\r\n    /**\r\n     * Unidragger constructor.\r\n     */\r\n    function Unidragger() { }\r\n\r\n    /**\r\n     * Inherit Unipointer & EvEmitter\r\n     */\r\n    var proto = Unidragger.prototype = Object.create(Unipointer.prototype);\r\n\r\n    /**\r\n     * Add events for drag handle.\r\n     */\r\n    proto.bindHandles = function() {\r\n        this._bindHandles(true);\r\n    };\r\n\r\n    /**\r\n     * Remove events for drag handle.\r\n     */\r\n    proto.unbindHandles = function() {\r\n        this._bindHandles(false);\r\n    };\r\n\r\n    /**\r\n     * Handle adding/removing events for the drag handle.\r\n     * @param {Bool} isBind - Unbind if falsey.\r\n     */\r\n    proto._bindHandles = function(isBind) {\r\n        isBind = $.coalesce(isBind, true);\r\n        // extra bind logic\r\n        var binderExtra;\r\n        var navigator = window.navigator;\r\n        if (navigator.pointerEnabled || navigator.msPointerEnabled) {\r\n            var prop = navigator.pointerEnabled ? 'touchAction' : 'msTouchAction';\r\n            binderExtra = function(handle) {\r\n                // disable scrolling on the element\r\n                handle.style[prop] = isBind ? 'none' : '';\r\n            };\r\n        } else {\r\n            binderExtra = $.noop;\r\n        }\r\n        // bind each handle\r\n        var bindMethod = isBind ? 'addEventListener' : 'removeEventListener';\r\n        for (var i = 0; i < this.handles.length; i++) {\r\n            var handle = this.handles[i];\r\n            this._bindStartEvent(handle, isBind);\r\n            binderExtra(handle);\r\n            handle[bindMethod]('click', this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Pointer start\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        // dismiss range sliders\r\n        if (event.target.nodeName === 'INPUT' && event.target.type === 'range') {\r\n            // reset pointerDown logic\r\n            this.isPointerDown = false;\r\n            delete this.pointerIdentifier;\r\n            return;\r\n        }\r\n\r\n        this._dragPointerDown(event, pointer);\r\n        // kludge to blur focused inputs in dragger\r\n        var focused = document.activeElement;\r\n        if (focused && focused.blur) {\r\n            focused.blur();\r\n        }\r\n        // bind move and end events\r\n        this._bindPostStartEvents(event);\r\n        this.emitEvent('pointerDown', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Base pointer down logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragPointerDown = function(event, pointer) {\r\n        // track to see when dragging starts\r\n        this.pointerDownPoint = Unipointer.getPointerPoint(pointer);\r\n        if (this.canPreventDefaultOnPointerDown(event, pointer)) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Overwriteable method so Flickity can prevent for scrolling\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @returns {Bool} True if allowed to prevent default event, else false.\r\n     */\r\n    proto.canPreventDefaultOnPointerDown = function(event) {\r\n        // prevent default, unless touchstart or <select>\r\n        return event.target.nodeName !== 'SELECT';\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        var moveVector = this._dragPointerMove(event, pointer);\r\n        this.emitEvent('pointerMove', [event, pointer, moveVector]);\r\n        this._dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Base pointer move logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @returns {Object} Object with x & y coordinates.\r\n     */\r\n    proto._dragPointerMove = function(event, pointer) {\r\n        var movePoint = Unipointer.getPointerPoint(pointer);\r\n        var moveVector = {\r\n            x: movePoint.x - this.pointerDownPoint.x,\r\n            y: movePoint.y - this.pointerDownPoint.y\r\n        };\r\n        // start drag if pointer has moved far enough to start drag\r\n        if (!this.isDragging && this.hasDragStarted(moveVector)) {\r\n            this._dragStart(event, pointer);\r\n        }\r\n        return moveVector;\r\n    };\r\n\r\n    /**\r\n     * Check if pointer has moved far enough to start drag.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     * @returns {Bool} True if moved far enough to count as move.\r\n     */\r\n    proto.hasDragStarted = function(moveVector) {\r\n        return Math.abs(moveVector.x) > 3 || Math.abs(moveVector.y) > 3;\r\n    };\r\n\r\n    /**\r\n     * Pointer up.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        this.emitEvent('pointerUp', [event, pointer]);\r\n        this._dragPointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Handle mouse/touch up.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragPointerUp = function(event, pointer) {\r\n        if (this.isDragging) {\r\n            this._dragEnd(event, pointer);\r\n        } else {\r\n            // pointer didn't move enough for drag to start\r\n            this._staticClick(event, pointer);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Base drag start logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._dragStart = function(event, pointer) {\r\n        this.isDragging = true;\r\n        this.dragStartPoint = Unipointer.getPointerPoint(pointer);\r\n        this.isPreventingClicks = true;\r\n        this.dragStart(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag start event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragStart = function(event, pointer) {\r\n        this.emitEvent('dragStart', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Base drag move logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     * @private\r\n     */\r\n    proto._dragMove = function(event, pointer, moveVector) {\r\n        // do not drag if not dragging yet\r\n        if (!this.isDragging) {\r\n            return;\r\n        }\r\n        this.dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag move event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     */\r\n    proto.dragMove = function(event, pointer, moveVector) {\r\n        event.preventDefault();\r\n        this.emitEvent('dragMove', [event, pointer, moveVector]);\r\n    };\r\n\r\n    /**\r\n     * Base logic for drag end.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragEnd = function(event, pointer) {\r\n        this.isDragging = false;\r\n        // re-enable clicking async\r\n        setTimeout(function() {\r\n            delete this.isPreventingClicks;\r\n        }.bind(this));\r\n        this.dragEnd(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag end event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragEnd = function(event, pointer) {\r\n        this.emitEvent('dragEnd', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Handle all clicks and prevent clicks when dragging\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     */\r\n    proto.onclick = function(event) {\r\n        if (this.isPreventingClicks) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Triggered after pointer down & up with no/tiny movement.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._staticClick = function(event, pointer) {\r\n        // ignore emulated mouse up clicks\r\n        if (this.isIgnoringMouseUp && event.type === 'mouseup') {\r\n            return;\r\n        }\r\n\r\n        // allow click in <input>s and <textarea>s\r\n        var nodeName = event.target.nodeName;\r\n        if (nodeName === 'INPUT' || nodeName === 'TEXTAREA') {\r\n            event.target.focus();\r\n        }\r\n        this.staticClick(event, pointer);\r\n\r\n        // set flag for emulated clicks 300ms after touchend\r\n        if (event.type !== 'mouseup') {\r\n            this.isIgnoringMouseUp = true;\r\n            // reset flag after 300ms\r\n            setTimeout(function() {\r\n                delete this.isIgnoringMouseUp;\r\n            }.bind(this), 400);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Dispatch event for staticClick for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.staticClick = function(event, pointer) {\r\n        this.emitEvent('staticClick', [event, pointer]);\r\n    };\r\n\r\n    return Unidragger;\r\n}));\r\n\r\n/*!\r\n * Draggabilly v2.1.1\r\n * Make that shiz draggable\r\n * http://draggabilly.desandro.com\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Draggabilly = factory(root.$, root, root.getSize, root.Unidragger);\r\n}(this, function factory($, root, getSize, Unidragger) {\r\n    var lastTime = 0;\r\n    // get rAF, prefixed, if present. fallback to setTimeout\r\n    var requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(callback) {\r\n        var currTime = new Date().getTime();\r\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n        var id = setTimeout(callback, timeToCall);\r\n        lastTime = currTime + timeToCall;\r\n        return id;\r\n    };\r\n    var transformProperty = $.isString(document.documentElement.style.transform) ? 'transform' : 'WebkitTransform';\r\n\r\n    /**\r\n     * Draggabilly constructor.\r\n     * @param {Node|string} element - Node, or querySelector string of node, to make draggable.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    function Draggabilly(element, options) {\r\n        this.element = $.get(element);\r\n        this.options = options || {};\r\n        this._create();\r\n    }\r\n\r\n    /**\r\n     * Inherit Unidragger methods.\r\n     */\r\n    var proto = Draggabilly.prototype = Object.create(Unidragger.prototype);\r\n\r\n    /**\r\n     * CSS position values that don't need to be set.\r\n     */\r\n    var positionValues = { relative: true, absolute: true, fixed: true };\r\n\r\n    /**\r\n     * Initialize draggabilly.\r\n     */\r\n    proto._create = function() {\r\n        // properties\r\n        this.position = {};\r\n        this._getPosition();\r\n\r\n        this.startPoint = { x: 0, y: 0 };\r\n        this.dragPoint = { x: 0, y: 0 };\r\n        this.startPosition = {};\r\n\r\n        // set relative positioning\r\n        var style = getComputedStyle(this.element);\r\n        if (!positionValues[style.position]) {\r\n            this.element.style.position = 'relative';\r\n        }\r\n\r\n        this.enable();\r\n        this.setHandles();\r\n    };\r\n\r\n    /**\r\n     * Set this.handles and bind start events to the handles.\r\n     */\r\n    proto.setHandles = function() {\r\n        this.handles = this.options.handle ? $.getAll(this.options.handle, this.element) : [this.element];\r\n        this.bindHandles();\r\n    };\r\n\r\n    /**\r\n     * Emits events via EvEmitter.\r\n     * @param {String} type - Name of event.\r\n     * @param {Event} event - Original event.\r\n     * @param {Array} args - Extra arguments.\r\n     */\r\n    proto.dispatchEvent = function(type, event, args) {\r\n        this.emitEvent(type, [event].concat(args));\r\n    };\r\n\r\n    /**\r\n     * Get x/y position from style.\r\n     */\r\n    proto._getPosition = function() {\r\n        var style = getComputedStyle(this.element);\r\n        var x = this._getPositionCoord(style.left, 'width');\r\n        var y = this._getPositionCoord(style.top, 'height');\r\n        // clean up 'auto' or other non-integer values\r\n        this.position.x = isNaN(x) ? 0 : x;\r\n        this.position.y = isNaN(y) ? 0 : y;\r\n\r\n        this._addTransformPosition(style);\r\n    };\r\n\r\n    /**\r\n     * Get a numeric coordinate from a style.\r\n     * @param {String} styleSide - CSS style to parse.\r\n     * @param {String} measure - Property name to get the size for.\r\n     * @returns {Number} Resulting size in pixels.\r\n     */\r\n    proto._getPositionCoord = function(styleSide, measure) {\r\n        if (styleSide.indexOf('%') !== -1) {\r\n            // convert percent into pixel for Safari, #75\r\n            var parentSize = getSize(this.element.parentNode);\r\n            // prevent not-in-DOM element throwing bug, #131\r\n            return !parentSize ? 0 : (parseFloat(styleSide) / 100) * parentSize[measure];\r\n        }\r\n        return parseInt(styleSide, 10);\r\n    };\r\n\r\n    /**\r\n     * Add `transform: translate( x, y )` to position.\r\n     * @param {CSSStyleDeclaration} style - Element styles to add to.\r\n     */\r\n    proto._addTransformPosition = function(style) {\r\n        var transform = style[transformProperty];\r\n        // bail out if value is 'none'\r\n        if (transform.indexOf('matrix') !== 0) {\r\n            return;\r\n        }\r\n        // split matrix(1, 0, 0, 1, x, y)\r\n        var matrixValues = transform.split(',');\r\n        // translate X value is in 12th or 4th position\r\n        var xIndex = transform.indexOf('matrix3d') === 0 ? 12 : 4;\r\n        var translateX = parseInt(matrixValues[xIndex], 10);\r\n        // translate Y value is in 13th or 5th position\r\n        var translateY = parseInt(matrixValues[xIndex + 1], 10);\r\n        this.position.x += translateX;\r\n        this.position.y += translateY;\r\n    };\r\n\r\n    /**\r\n     * Pointer start.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        this._dragPointerDown(event, pointer);\r\n        // kludge to blur focused inputs in dragger\r\n        var focused = document.activeElement;\r\n        // do not blur body for IE10, metafizzy/flickity#117\r\n        if (focused && focused.blur && focused !== document.body) {\r\n            focused.blur();\r\n        }\r\n        // bind move and end events\r\n        this._bindPostStartEvents(event);\r\n        $.addClass(this.element, 'is-pointer-down');\r\n        this.dispatchEvent('pointerDown', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        var moveVector = this._dragPointerMove(event, pointer);\r\n        this.dispatchEvent('pointerMove', event, [pointer, moveVector]);\r\n        this._dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Drag start.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragStart = function(event, pointer) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n        this._getPosition();\r\n        this.measureContainment();\r\n        // position _when_ drag began\r\n        this.startPosition.x = this.position.x;\r\n        this.startPosition.y = this.position.y;\r\n        // reset left/top style\r\n        this.setLeftTop();\r\n\r\n        this.dragPoint.x = 0;\r\n        this.dragPoint.y = 0;\r\n\r\n        $.addClass(this.element, 'is-dragging');\r\n        this.dispatchEvent('dragStart', event, [pointer]);\r\n        // start animation\r\n        this.animate();\r\n    };\r\n\r\n    /**\r\n     * Calculate the correct position of the element within its container.\r\n     */\r\n    proto.measureContainment = function() {\r\n        var containment = this.options.containment;\r\n        if (!containment) {\r\n            return;\r\n        }\r\n\r\n        // use element if element, otherwise just `true`, use the parent\r\n        var container = $.isNode(containment) ? containment : $.isString(containment) ? $.get(containment) : this.element.parentNode;\r\n        var elemSize = getSize(this.element);\r\n        var containerSize = getSize(container);\r\n        var elemRect = this.element.getBoundingClientRect();\r\n        var containerRect = container.getBoundingClientRect();\r\n        var borderSizeX = containerSize.borderLeftWidth + containerSize.borderRightWidth;\r\n        var borderSizeY = containerSize.borderTopWidth + containerSize.borderBottomWidth;\r\n\r\n        var position = this.relativeStartPosition = {\r\n            x: elemRect.left - (containerRect.left + containerSize.borderLeftWidth),\r\n            y: elemRect.top - (containerRect.top + containerSize.borderTopWidth)\r\n        };\r\n\r\n        this.containSize = {\r\n            width: (containerSize.width - borderSizeX) - position.x - elemSize.width,\r\n            height: (containerSize.height - borderSizeY) - position.y - elemSize.height\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x and y coordinates of current position.\r\n     */\r\n    proto.dragMove = function(event, pointer, moveVector) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n\r\n        var dragX = moveVector.x;\r\n        var dragY = moveVector.y;\r\n        var grid = this.options.grid;\r\n        var gridX = grid && grid[0];\r\n        var gridY = grid && grid[1];\r\n\r\n        dragX = applyGrid(dragX, gridX);\r\n        dragY = applyGrid(dragY, gridY);\r\n\r\n        dragX = this.containDrag('x', dragX, gridX);\r\n        dragY = this.containDrag('y', dragY, gridY);\r\n\r\n        // constrain to axis\r\n        dragX = this.options.axis === 'y' ? 0 : dragX;\r\n        dragY = this.options.axis === 'x' ? 0 : dragY;\r\n\r\n        if (this.options.minZero) {\r\n            dragX = applyMinZero(this.startPosition.x, dragX);\r\n            dragY = applyMinZero(this.startPosition.y, dragY);\r\n        }\r\n\r\n        this.position.x = this.startPosition.x + dragX;\r\n        this.position.y = this.startPosition.y + dragY;\r\n        // set dragPoint properties\r\n        this.dragPoint.x = dragX;\r\n        this.dragPoint.y = dragY;\r\n\r\n        this.dispatchEvent('dragMove', event, [pointer, moveVector]);\r\n    };\r\n\r\n    /**\r\n     * Adjust a coordinate to snap to the grid.\r\n     * @param {Number} value - Coordinate to snap to grid.\r\n     * @param {Number} grid - Grid width/height.\r\n     * @param {String} method - Math method to apply.\r\n     * @returns {Number} Closes number that snaps to grid.\r\n     */\r\n    function applyGrid(value, grid, method) {\r\n        return grid ? Math[method || 'round'](value / grid) * grid : value;\r\n    }\r\n\r\n    /**\r\n     * Adjust the drag position to prevent the item from moving out of the container to the left or top.\r\n     * @param {Number} start - Element starting coordinate.\r\n     * @param {Number} drag - Distance element was dragged.\r\n     * @returns {Number} Corrected drag coordinate.\r\n     */\r\n    function applyMinZero(start, drag) {\r\n        return start + drag < 0 ? -start : drag;\r\n    }\r\n\r\n    /**\r\n     * Limit dragging within boundaries.\r\n     * @param {string} axis - X or Y Axis\r\n     * @param {number} drag - Position coordinate on axis\r\n     * @param {number} grid - Boundary coordinate on axis.\r\n     * @returns {number} Coordinate contained with drag.\r\n     */\r\n    proto.containDrag = function(axis, drag, grid) {\r\n        if (!this.options.containment) {\r\n            return drag;\r\n        }\r\n        var measure = axis === 'x' ? 'width' : 'height';\r\n\r\n        var rel = this.relativeStartPosition[axis];\r\n        var min = applyGrid(-rel, grid, 'ceil');\r\n        var max = this.containSize[measure];\r\n        max = applyGrid(max, grid, 'floor');\r\n        return Math.min(max, Math.max(min, drag));\r\n    };\r\n\r\n    /**\r\n     * pointer up\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        $.removeClass(this.element, 'is-pointer-down');\r\n        this.dispatchEvent('pointerUp', event, [pointer]);\r\n        this._dragPointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Drag end.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragEnd = function(event, pointer) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n        // use top left position when complete\r\n        if (transformProperty) {\r\n            this.element.style[transformProperty] = '';\r\n            this.setLeftTop();\r\n        }\r\n        $.removeClass(this.element, 'is-dragging');\r\n        this.dispatchEvent('dragEnd', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Animate while dragging.\r\n     */\r\n    proto.animate = function() {\r\n        if (!this.isDragging) {\r\n            return;\r\n        }\r\n        this.positionDrag();\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    };\r\n\r\n    /**\r\n     * Set left/top positioning.\r\n     */\r\n    proto.setLeftTop = function() {\r\n        $.style(this.element, { left: this.position.x + 'px', top: this.position.y + 'px' });\r\n    };\r\n\r\n    /**\r\n     * Set position transform based on drag.\r\n     */\r\n    proto.positionDrag = function() {\r\n        this.element.style[transformProperty] = 'translate3d( ' + this.dragPoint.x + 'px, ' + this.dragPoint.y + 'px, 0)';\r\n    };\r\n\r\n    /**\r\n     * Dispatch the event for static click callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.staticClick = function(event, pointer) {\r\n        this.dispatchEvent('staticClick', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Enable dragging.\r\n     */\r\n    proto.enable = function() {\r\n        this.isEnabled = true;\r\n    };\r\n\r\n    /**\r\n     * Disable dragging.\r\n     */\r\n    proto.disable = function() {\r\n        this.isEnabled = false;\r\n        if (this.isDragging) {\r\n            this.dragEnd();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy this instance.\r\n     */\r\n    proto.destroy = function() {\r\n        this.disable();\r\n        this.element.removeAttribute('style');\r\n        this.unbindHandles();\r\n    };\r\n\r\n    return Draggabilly;\r\n}));\r\n","/*!\r\n * ColorPicker - pure JavaScript color picker without using images, external CSS or 1px divs.\r\n * Copyright © 2011 David Durman, All rights reserved.\r\n */\r\n(function(factory) {\r\n    // Assume a traditional browser.\r\n    window.ColorPicker = factory(this.$, this.Draggabilly);\r\n})(function($, Draggabilly) {\r\n    'use strict';\r\n\r\n    var type = (window.SVGAngle || document.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1') ? 'SVG' : 'VML'),\r\n        picker,\r\n        slide,\r\n        svgNS = 'http://www.w3.org/2000/svg',\r\n        uniqID = 0;\r\n\r\n    /**\r\n     * This HTML snippet is inserted into the innerHTML property of the passed color picker element when the no-hassle call to ColorPicker() is used,\r\n     * i.e. ColorPicker(function(hex, hsv, rgb) { ... });.\r\n     */\r\n    var colorpickerHTMLSnippet = '<div class=\"cp-picker-wrapper\"><div class=\"cp-picker\"></div><div class=\"cp-drag-handle cp-picker-indicator\"></div></div><div class=\"cp-slide-wrapper\"><div class=\"cp-slide\"></div><div class=\"cp-drag-handle cp-slide-indicator\"></div></div>';\r\n\r\n    /**\r\n     * Create SVG element.\r\n     * @param {string} el - Node name.\r\n     * @param {Object} attrs - Attributes for the node.\r\n     * @param {Object[]} children - Child nodes.\r\n     * @return {Node} New DOM node.\r\n     */\r\n    function c(el, attrs, children) {\r\n        var node = document.createElementNS(svgNS, el);\r\n        for (var key in attrs) {\r\n            node.setAttribute(key, attrs[key]);\r\n        }\r\n        if (!$.isNull(children)) {\r\n            if (!$.isArray(children)) {\r\n                children = [children];\r\n            }\r\n            children.forEach(function(x) { node.appendChild(x); });\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * Create slide and picker markup depending on the supported technology.\r\n     */\r\n    if (type === 'SVG') {\r\n        slide = c('svg', { xmlns: 'http://www.w3.org/2000/svg', version: '1.1', width: '100%', height: '100%' }, [\r\n            c('defs', {},\r\n                c('linearGradient', { id: 'gradient-hsv', x1: '0%', y1: '100%', x2: '0%', y2: '0%' }, [\r\n                    c('stop', { offset: '0%', 'stop-color': '#FF0000', 'stop-opacity': '1' }),\r\n                    c('stop', { offset: '13%', 'stop-color': '#FF00FF', 'stop-opacity': '1' }),\r\n                    c('stop', { offset: '25%', 'stop-color': '#8000FF', 'stop-opacity': '1' }),\r\n                    c('stop', { offset: '38%', 'stop-color': '#0040FF', 'stop-opacity': '1' }),\r\n                    c('stop', { offset: '50%', 'stop-color': '#00FFFF', 'stop-opacity': '1' }),\r\n                    c('stop', { offset: '63%', 'stop-color': '#00FF40', 'stop-opacity': '1' }),\r\n                    c('stop', { offset: '75%', 'stop-color': '#0BED00', 'stop-opacity': '1' }),\r\n                    c('stop', { offset: '88%', 'stop-color': '#FFFF00', 'stop-opacity': '1' }),\r\n                    c('stop', { offset: '100%', 'stop-color': '#FF0000', 'stop-opacity': '1' })\r\n                ])\r\n            ),\r\n            c('rect', { x: '0', y: '0', width: '100%', height: '100%', fill: 'url(#gradient-hsv)' })\r\n        ]);\r\n\r\n        picker = c('svg', { xmlns: 'http://www.w3.org/2000/svg', version: '1.1', width: '100%', height: '100%' }, [\r\n            c('defs', {}, [\r\n                c('linearGradient', { id: 'gradient-black', x1: '0%', y1: '100%', x2: '0%', y2: '0%' }, [\r\n                    c('stop', { offset: '0%', 'stop-color': '#000000', 'stop-opacity': '1' }),\r\n                    c('stop', { offset: '100%', 'stop-color': '#CC9A81', 'stop-opacity': '0' })\r\n                ]),\r\n                c('linearGradient', { id: 'gradient-white', x1: '0%', y1: '100%', x2: '100%', y2: '100%' }, [\r\n                    c('stop', { offset: '0%', 'stop-color': '#FFFFFF', 'stop-opacity': '1' }),\r\n                    c('stop', { offset: '100%', 'stop-color': '#CC9A81', 'stop-opacity': '0' })\r\n                ])\r\n            ]),\r\n            c('rect', { x: '0', y: '0', width: '100%', height: '100%', fill: 'url(#gradient-white)' }),\r\n            c('rect', { x: '0', y: '0', width: '100%', height: '100%', fill: 'url(#gradient-black)' })\r\n        ]);\r\n    } else if (type === 'VML') {\r\n        slide = [\r\n            '<DIV style=\"position: relative; width: 100%; height: 100%\">',\r\n            '<v:rect style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%\" stroked=\"f\" filled=\"t\">',\r\n            '<v:fill type=\"gradient\" method=\"none\" angle=\"0\" color=\"red\" color2=\"red\" colors=\"8519f fuchsia;.25 #8000ff;24903f #0040ff;.5 aqua;41287f #00ff40;.75 #0bed00;57671f yellow\"></v:fill>',\r\n            '</v:rect>',\r\n            '</DIV>'\r\n        ].join('');\r\n\r\n        picker = [\r\n            '<DIV style=\"position: relative; width: 100%; height: 100%\">',\r\n            '<v:rect style=\"position: absolute; left: -1px; top: -1px; width: 101%; height: 101%\" stroked=\"f\" filled=\"t\">',\r\n            '<v:fill type=\"gradient\" method=\"none\" angle=\"270\" color=\"#FFFFFF\" opacity=\"100%\" color2=\"#CC9A81\" o:opacity2=\"0%\"></v:fill>',\r\n            '</v:rect>',\r\n            '<v:rect style=\"position: absolute; left: 0px; top: 0px; width: 100%; height: 101%\" stroked=\"f\" filled=\"t\">',\r\n            '<v:fill type=\"gradient\" method=\"none\" angle=\"0\" color=\"#000000\" opacity=\"100%\" color2=\"#CC9A81\" o:opacity2=\"0%\"></v:fill>',\r\n            '</v:rect>',\r\n            '</DIV>'\r\n        ].join('');\r\n\r\n        if (!document.namespaces['v']) {\r\n            document.namespaces.add('v', 'urn:schemas-microsoft-com:vml', '#default#VML');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ColorPicker constructor.\r\n     * @param {Node} container  - Picker parent element.\r\n     * @param {Function} callback - Called whenever the color is changed provided chosen color in RGB HEX format as the only argument.\r\n     */\r\n    function ColorPicker(container, callback) {\r\n        this.h = 0;\r\n        this.s = 1;\r\n        this.v = 1;\r\n        this.draggie = [];\r\n\r\n        container.innerHTML = colorpickerHTMLSnippet;\r\n        this.slideElement = container.getElementsByClassName('cp-slide')[0];\r\n        this.pickerElement = container.getElementsByClassName('cp-picker')[0];\r\n        this.slideIndicator = container.getElementsByClassName('cp-slide-indicator')[0];\r\n        this.pickerIndicator = container.getElementsByClassName('cp-picker-indicator')[0];\r\n        this.callback = callback;\r\n\r\n        if (type === 'SVG') {\r\n            // Generate uniq IDs for linearGradients so that we don't have the same IDs within one document.\r\n            // Then reference those gradients in the associated rectangles.\r\n\r\n            var slideClone = slide.cloneNode(true);\r\n            var pickerClone = picker.cloneNode(true);\r\n            var hsvGradient = $.get('#gradient-hsv', slideClone);\r\n            var hsvRect = $.get('rect', slideClone);\r\n\r\n            hsvGradient.id = 'gradient-hsv-' + uniqID;\r\n            hsvRect.setAttribute('fill', 'url(#' + hsvGradient.id + ')');\r\n\r\n            var blackAndWhiteGradients = [$.get('#gradient-black', pickerClone), $.get('#gradient-white', pickerClone)];\r\n            var whiteAndBlackRects = $.getAll('rect', pickerClone);\r\n\r\n            blackAndWhiteGradients[0].id = 'gradient-black-' + uniqID;\r\n            blackAndWhiteGradients[1].id = 'gradient-white-' + uniqID;\r\n\r\n            whiteAndBlackRects[0].setAttribute('fill', 'url(#' + blackAndWhiteGradients[1].id + ')');\r\n            whiteAndBlackRects[1].setAttribute('fill', 'url(#' + blackAndWhiteGradients[0].id + ')');\r\n\r\n            this.slideElement.appendChild(slideClone);\r\n            this.pickerElement.appendChild(pickerClone);\r\n\r\n            uniqID++;\r\n        } else {\r\n            this.slideElement.innerHTML = slide;\r\n            this.pickerElement.innerHTML = picker;\r\n        }\r\n\r\n        this.slideListener = this.slideHandler.bind(this);\r\n        this.pickerListener = this.pickerHandler.bind(this);\r\n        this.addEvents(this.slideElement, this.slideListener);\r\n        this.addEvents(this.pickerElement, this.pickerListener);\r\n    }\r\n\r\n    ColorPicker.prototype = {\r\n        /**\r\n         * Convert HSV representation to RGB HEX string. Credits to http://www.raphaeljs.com.\r\n         * @param {Object} hsv - Object with h, s, and v properties.\r\n         * @returns {Object} Object with RGB and hex value.\r\n         */\r\n        hsv2rgb: function(hsv) {\r\n            hsv = $.coalesce(hsv, this);\r\n            var R, G, B, X, C;\r\n            var h = (hsv.h % 360) / 60;\r\n\r\n            C = hsv.v * hsv.s;\r\n            X = C * (1 - Math.abs(h % 2 - 1));\r\n            R = G = B = hsv.v - C;\r\n\r\n            h = ~~h;\r\n            R += [C, X, 0, 0, X, C][h];\r\n            G += [X, C, C, X, 0, 0][h];\r\n            B += [0, 0, X, C, C, X][h];\r\n\r\n            var r = Math.floor(R * 255);\r\n            var g = Math.floor(G * 255);\r\n            var b = Math.floor(B * 255);\r\n            return { r: r, g: g, b: b, hex: '#' + (16777216 | b | (g << 8) | (r << 16)).toString(16).slice(1) };\r\n        },\r\n\r\n        /**\r\n         * Convert RGB representation to HSV. r, g, b can be either in <0,1> range or <0,255> range. Credits to http://www.raphaeljs.com.\r\n         * @param {Object} rgb - Object with r, g, and b properties.\r\n         * @returns {Object} Object wth HSV values.\r\n         */\r\n        rgb2hsv: function(rgb) {\r\n            var r = rgb.r;\r\n            var g = rgb.g;\r\n            var b = rgb.b;\r\n\r\n            if (rgb.r > 1 || rgb.g > 1 || rgb.b > 1) {\r\n                r /= 255;\r\n                g /= 255;\r\n                b /= 255;\r\n            }\r\n\r\n            var H, S, V, C;\r\n            V = Math.max(r, g, b);\r\n            C = V - Math.min(r, g, b);\r\n            H = (C === 0 ? null :\r\n                V === r ? (g - b) / C + (g < b ? 6 : 0) :\r\n                    V === g ? (b - r) / C + 2 :\r\n                        (r - g) / C + 4);\r\n            H = (H % 6) * 60;\r\n            S = C === 0 ? 0 : C / V;\r\n            return { h: H, s: S, v: V };\r\n        },\r\n\r\n        /**\r\n         * Convert hex string to hsv values.\r\n         * @param {string} hex - Hex string.\r\n         * @returns {Object} Object with HSV values.\r\n         */\r\n        hex2hsv: function(hex) {\r\n            return this.rgb2hsv($.colors.hex2rgb(hex));\r\n        },\r\n\r\n        /**\r\n         * Click event handler for the slider. Sets picker background color and calls callback if provided.\r\n         * @param {Event} event - Original mouseup or touchend event.\r\n         * @param {MouseEvent|Touch} pointer - Event object that has .pageX and .pageY.\r\n         * @param {Object} moveVector - Move distance as x/y properties.\r\n         */\r\n        slideHandler: function(event, pointer, moveVector) {\r\n            var rect = this.slideElement.getBoundingClientRect();\r\n            if (!this.contains(rect, event)) {\r\n                return;\r\n            }\r\n\r\n            this.h = (event.y - rect.top) / this.slideElement.offsetHeight * 360;\r\n            $.style(this.pickerElement, { 'background-color': this.hsv2rgb({ h: this.h, s: 1, v: 1 }).hex });\r\n            if (!moveVector) {\r\n                this.positionIndicators();\r\n            }\r\n            if (this.callback) {\r\n                this.callback(this.hsv2rgb({ h: this.h, s: this.s, v: this.v }).hex);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Click event handler for the picker. Calls callback if provided.\r\n         * @param {Event} event - Original mouseup or touchend event.\r\n         * @param {MouseEvent|Touch} pointer - Event object that has .pageX and .pageY.\r\n         * @param {Object} moveVector - Move distance as x/y properties.\r\n         */\r\n        pickerHandler: function(event, pointer, moveVector) {\r\n            var rect = this.pickerElement.getBoundingClientRect();\r\n            if (!this.contains(rect, event)) {\r\n                return;\r\n            }\r\n\r\n            this.s = (event.x - rect.left) / this.pickerElement.offsetWidth;\r\n            var height = this.pickerElement.offsetHeight;\r\n            this.v = (height - (event.y - rect.top) - this.pickerElement.offsetTop) / height;\r\n\r\n            if (!moveVector) {\r\n                this.positionIndicators();\r\n            }\r\n            if (this.callback) {\r\n                this.callback(this.hsv2rgb(this).hex);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check if the event is inside the rect.\r\n         * @param {Object} rect - Bounding rectangle to check against.\r\n         * @param {MouseEvent} event - Mouse location to check.\r\n         * @returns {bool} True if event is inside rect.\r\n         */\r\n        contains: function(rect, event) {\r\n            return event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom;\r\n        },\r\n\r\n        /**\r\n         * Enable click and drag&drop color selection.\r\n         * @param {DOMElement} element - HSV slide element or HSV picker element.\r\n         * @param {Function} listener - Function that will be called whenever mouse is dragged over the element with event object as argument.\r\n         */\r\n        addEvents: function(element, listener) {\r\n            $.on(element, 'click', listener, false);\r\n            this.draggie.push(new Draggabilly($.get('.cp-drag-handle', element.parentNode), { containment: true }).on('dragMove', listener).on('dragEnd', this.positionIndicators.bind(this)));\r\n        },\r\n\r\n        /**\r\n         * Sets color of the picker in hsv/rgb/hex format.\r\n         * @param {Object} hsv - Object of the form: { h: <hue>, s: <saturation>, v: <value> }.\r\n         * @param {Object} rgb - Object of the form: { r: <red>, g: <green>, b: <blue> }.\r\n         * @param {string} hex - String of the form: #RRGGBB.\r\n         */\r\n        setColor: function(hsv, rgb, hex) {\r\n            this.h = hsv.h % 360;\r\n            this.s = hsv.s;\r\n            this.v = hsv.v;\r\n\r\n            var c = this.hsv2rgb();\r\n            this.pickerElement.style.backgroundColor = this.hsv2rgb({ h: this.h, s: 1, v: 1 }).hex;\r\n            if (this.callback) {\r\n                this.callback(hex || c.hex);\r\n            }\r\n            this.positionIndicators();\r\n        },\r\n\r\n        /**\r\n         * Sets color of the picker in hex format.\r\n         * @param {string} hex - Hex color format #RRGGBB.\r\n         */\r\n        setHex: function(hex) {\r\n            this.setColor(this.hex2hsv(hex), undefined, hex);\r\n        },\r\n\r\n        /**\r\n         * Helper to position indicators.\r\n         */\r\n        positionIndicators: function() {\r\n            $.style(this.slideIndicator, { top: (((this.h * this.slideElement.offsetHeight) / 360) - this.slideIndicator.offsetHeight / 2) + 'px' });\r\n            var pickerHeight = this.pickerElement.offsetHeight;\r\n            $.style(this.pickerIndicator, {\r\n                top: ((pickerHeight - this.v * pickerHeight) - this.pickerIndicator.offsetHeight / 2) + 'px',\r\n                left: ((this.s * this.pickerElement.offsetWidth) - this.pickerIndicator.offsetWidth / 2) + 'px'\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Destroy this object.\r\n         */\r\n        destroy: function() {\r\n            $.off(this.slideElement, 'click', this.slideListener, false);\r\n            $.off(this.pickerElement, 'click', this.pickerListener, false);\r\n            this.draggie.forEach(function(x) { $.destroy(x); });\r\n\r\n            this.slideElement.parentNode.removeChild(this.slideElement);\r\n            this.pickerElement.parentNode.removeChild(this.pickerElement);\r\n        }\r\n    };\r\n\r\n    return ColorPicker;\r\n});\r\n","/*!\r\n * Library for storing widget positions and detecting collisions.\r\n */\r\n(function(root, factory) {\r\n    root.Rect = factory(root.$);\r\n})(this, function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Constructor for a rect.\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     */\r\n    function Rect(width, height, x, y) {\r\n        this.x = $.coalesce(x, 0);\r\n        this.y = $.coalesce(y, 0);\r\n        this.width = $.coalesce(width, 0);\r\n        this.height = $.coalesce(height, 0);\r\n        this.updated = false;\r\n    }\r\n\r\n    Rect.prototype = {\r\n        /**\r\n         * Check if rect intersects with this rect.\r\n         * @param {Rect} rect - Rect to check for intersection with.\r\n         * @returns {bool} True if the rectangles collide, else false.\r\n         */\r\n        overlaps: function(rect) {\r\n            var thisRight = this.x + this.width;\r\n            var thisBottom = this.y + this.height;\r\n            var rectRight = rect.x + rect.width;\r\n            var rectBottom = rect.y + rect.height;\r\n\r\n            // http://stackoverflow.com/a/306332\r\n            return this.x < rectRight && thisRight > rect.x && this.y < rectBottom && thisBottom > rect.y;\r\n        }\r\n    };\r\n\r\n    return Rect;\r\n});\r\n","/*!\r\n * doT based table component. Supports ajax data, searching, sorting, paging, & resizing columns.\r\n */\r\n(function(root, factory) {\r\n    root.doTable = factory(root.doT, root.$);\r\n})(this, function(doT, $) {\r\n    'use strict';\r\n\r\n    var _templates = {\r\n        headerFn: doT.template($.get('#tableHeaderTemplate').text),\r\n        footerFn: doT.template($.get('#tableFooterTemplate').text),\r\n        bodyFn: doT.template($.get('#tableBodyTemplate').text),\r\n        loadingFn: doT.template($.get('#tableLoadingTemplate').text),\r\n        noDataFn: doT.template($.get('#tableNoDataTemplate').text),\r\n        errorFn: doT.template($.get('#tableLoadingError').text)\r\n    };\r\n\r\n    /**\r\n    * Default sorting function for the data - resets to order when data was loaded.\r\n    * @param {Object} a - First object to compare.\r\n    * @param {Object} b - Object to compare to.\r\n    * @returns {number} 1 if a comes first, -1 if b comes first, else 0.\r\n    */\r\n    var defaultCompare = function(a, b) {\r\n        return a._index > b._index ? 1 : a._index < b._index ? -1 : 0;\r\n    };\r\n\r\n    var getFieldValue = function(value) {\r\n        if ($.isNull(value)) {\r\n            return null;\r\n        }\r\n        return value.getMonth ? value : value.toLowerCase ? value.toLowerCase() : value;\r\n    };\r\n\r\n    /**\r\n     * Multi-sorting function for the data.\r\n     * @this Object[] - Array that defines current sort columns.\r\n     * @param {Object} a - First object to compare.\r\n     * @param {Object} b - Object to compare to.\r\n     * @returns {number} 1 if a comes first, -1 if b comes first, else 0.\r\n     */\r\n    var compare = function(a, b) {\r\n        var i = 0, len = this.length;\r\n        for (; i < len; i++) {\r\n            var sort = this[i];\r\n            var aa = getFieldValue(a[sort.field]);\r\n            var bb = getFieldValue(b[sort.field]);\r\n\r\n            if (aa === null) {\r\n                return 1;\r\n            }\r\n            if (bb === null) {\r\n                return -1;\r\n            }\r\n            if (aa < bb) {\r\n                return sort.sortDir === 'ASC' ? -1 : 1;\r\n            }\r\n            if (aa > bb) {\r\n                return sort.sortDir === 'ASC' ? 1 : -1;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n\r\n    /**\r\n     * Filter an array of objects to find objects where value contains the value of `this`\r\n     * @param {Object} obj - Object to search in.\r\n     * @returns {bool} True if object contains `this`.\r\n     */\r\n    var filterArray = function(obj) {\r\n        for (var key in obj) {\r\n            if (key.indexOf('_') < 0 && obj.hasOwnProperty(key) && (obj[key] + '').toLowerCase().indexOf(this) > -1) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * Convert a style with 'px' to a float.\r\n     * @param {string} val - CSS style to convert.\r\n     * @returns {number} Numeric value.\r\n     */\r\n    var pixelToFloat = function(val) {\r\n        return val.replace('px', '').replace('%', '') * 1.0;\r\n    };\r\n\r\n    var disableIf = function(node, disable) {\r\n        if (!node) {\r\n            return;\r\n        }\r\n        if (disable) {\r\n            node.setAttribute('disabled', true);\r\n        } else {\r\n            node.removeAttribute('disabled');\r\n        }\r\n    };\r\n\r\n    var getDisplayValue = function(displayCurrencyFormat, displayDateFormat, value, dataType) {\r\n        if (!dataType || $.isNull(value)) {\r\n            return value;\r\n        }\r\n\r\n        var val = value;\r\n        if (dataType === 'currency') {\r\n            val = $.accounting.formatMoney(val, displayCurrencyFormat);\r\n        } else if (dataType === 'date') {\r\n            val = $.fecha.format(val, displayDateFormat);\r\n        }\r\n        return val;\r\n    };\r\n\r\n    var doTable = function(node) {\r\n        var opts = {};\r\n\r\n        opts.id = node.getAttribute('id');\r\n        opts.editable = node.getAttribute('data-editable').toLowerCase() === 'true';\r\n        opts.searchable = node.getAttribute('data-searchable').toLowerCase() === 'true' && opts.editable;\r\n        opts.storeSettings = node.getAttribute('data-store-settings').toLowerCase() === 'true';\r\n        opts.loadAll = node.getAttribute('data-load-all').toLowerCase() === 'true';\r\n        opts.url = node.getAttribute('data-url');\r\n        opts.template = node.getAttribute('data-template');\r\n\r\n        opts.requestMethod = node.getAttribute('data-request-method');\r\n        opts.storeUrl = node.getAttribute('data-store-url');\r\n        opts.width = node.hasAttribute('data-width') ? node.getAttribute('data-width') * 1 : null;\r\n        opts.storeRequestMethod = node.getAttribute('data-store-request-method');\r\n        opts.displayDateFormat = node.getAttribute('data-display-date-format');\r\n        opts.displayCurrencyFormat = node.getAttribute('data-display-currency-format');\r\n        if (node.hasAttribute('data-request-params')) {\r\n            var params = node.getAttribute('data-request-params');\r\n            try {\r\n                opts.requestParams = JSON.parse(params);\r\n            } catch (e) {\r\n                // placeholder\r\n            }\r\n        }\r\n\r\n        node.doTable = this;\r\n        this.opts = $.extend({\r\n            id: null,\r\n            columns: [],\r\n            url: '',\r\n            requestMethod: 'POST',\r\n            requestUsePascalCase: true,\r\n            requestParams: {},\r\n            searchable: true,\r\n            loadAll: true,\r\n            columnMinWidth: 50,\r\n            width: 100,\r\n            editable: true,\r\n            storeSettings: true,\r\n            storeUrl: null,\r\n            storeRequestMethod: 'PUT',\r\n            itemsPerPage: null,\r\n            searchQuery: null,\r\n            currentStartItem: null,\r\n            currentEndItem: null,\r\n            sorting: null,\r\n            dataDateFormat: 'YYYY-MM-DD HH:mm:ss',\r\n            displayDateFormat: 'YYYY-MM-DD HH:mm',\r\n            displayCurrencyFormat: '{s:$} {[t:,][d:.][p:2]}'\r\n        }, opts);\r\n\r\n        this.layoutSet = false;\r\n        this.data = null;\r\n        this.loading = true;\r\n        this.loadingError = false;\r\n        this.filteredTotal = 0;\r\n        this.results = [];\r\n        this.pageTotal = 0;\r\n        this.totalDistance = 0;\r\n        this.lastSeenAt = { x: null, y: null };\r\n        this.columnRenderer = {};\r\n        this.colGroups = [];\r\n        this.intColumns = [];\r\n        this.dateColumns = [];\r\n        this.currencyColumns = [];\r\n\r\n        this.storeFunction = null;\r\n        if (this.opts.storeUrl) {\r\n            var storeUrl = this.opts.storeUrl;\r\n            var storeRequestMethod = this.opts.storeRequestMethod;\r\n            this.storeFunction = $.debounce(function(data) {\r\n                $.ajax({\r\n                    url: storeUrl,\r\n                    method: storeRequestMethod,\r\n                    data: data\r\n                });\r\n            }, 250);\r\n        }\r\n\r\n        var template = $.get(this.opts.template);\r\n        this.opts.rowTemplateFn = doT.template(template ? template.text : '');\r\n        this.opts.displayValueFn = getDisplayValue.bind(null, this.opts.displayCurrencyFormat, this.opts.displayDateFormat);\r\n\r\n        var sorting = this.store('sorting');\r\n        var sortColumns = [];\r\n        if (sorting) {\r\n            try {\r\n                sortColumns = (typeof sorting === 'string' ? JSON.parse(sorting) : sorting) || [];\r\n            } catch (e) {\r\n                // placeholder\r\n            }\r\n        }\r\n\r\n        if (template) {\r\n            var tempNode = $.createNode();\r\n            tempNode.innerHTML = '<table>' + this.opts.rowTemplateFn({}) + '</table>';\r\n            var columns = $.getAll('td', tempNode);\r\n            $.forEach(columns, function(x) {\r\n                var field = x.getAttribute('data-field');\r\n                var width = x.getAttribute('data-width');\r\n                width = isNaN(width) ? null : width * 1;\r\n                var type = x.getAttribute('data-type').toLowerCase();\r\n                var column = {\r\n                    width: $.hasPositiveValue(width) ? width : this.store(field + '.width'),\r\n                    sortable: x.getAttribute('data-sortable').toLowerCase() === 'true',\r\n                    label: x.getAttribute('data-label'),\r\n                    field: field,\r\n                    dataType: type\r\n                };\r\n                if (type === 'int') {\r\n                    this.intColumns.push(field);\r\n                } else if (type === 'date') {\r\n                    this.dateColumns.push(field);\r\n                } else if (type === 'currency') {\r\n                    this.currencyColumns.push(field);\r\n                }\r\n\r\n                var dir = x.getAttribute('data-sort-dir');\r\n                if (dir) {\r\n                    column.sortDir = dir.toUpperCase();\r\n                    column.sortOrder = x.getAttribute('data-sort-order');\r\n                }\r\n\r\n                var sortColumn = $.findByKey(sortColumns, 'field', field);\r\n                if (sortColumn) {\r\n                    column.sortDir = sortColumn.sortDir;\r\n                    column.sortOrder = sortColumn.sortOrder;\r\n                }\r\n\r\n                this.opts.columns.push(column);\r\n            }, this);\r\n        }\r\n\r\n        this.itemsPerPage = this.store('itemsPerPage') * 1 || 10;\r\n        this.currentStartItem = this.store('currentStartItem') * 1 || 0;\r\n        this.searchQuery = this.store('searchQuery') || '';\r\n        this.width = this.store('width') * 1 || 100;\r\n\r\n        this.draw();\r\n        this.loadData();\r\n    };\r\n\r\n    /**\r\n    * Get/set persistent values.\r\n    * @param {string} key - Key name of the value to get/set.\r\n    * @param {*} value - Value to set.\r\n    * @returns {string|undefined} Value if getting, else undefined.\r\n    */\r\n    doTable.prototype.store = function(key, value) {\r\n        if (!this.opts.storeSettings) {\r\n            return;\r\n        }\r\n        var myKey = this.opts.id + '.' + key;\r\n        // getter\r\n        if ($.isUndefined(value)) {\r\n            return $.isNull(this.opts.storeUrl) ? localStorage[myKey] : $.coalesce(this.opts[key], null);\r\n        }\r\n\r\n        // setter\r\n        if ($.isNull(this.storeFunction)) {\r\n            localStorage[myKey] = value;\r\n        } else {\r\n            var data;\r\n            if (this.opts.requestUsePascalCase) {\r\n                data = $.extend($.toPascalKeys(this.opts.requestParams), {\r\n                    ItemsPerPage: this.itemsPerPage,\r\n                    CurrentStartItem: this.currentStartItem,\r\n                    SearchQuery: this.searchQuery,\r\n                    Width: this.width,\r\n                    Sorting: this.buildSortList(),\r\n                    Columns: $.toPascalKeys($.map(this.opts.columns, function(c) { return { field: c.field, width: c.width * 1.0 }; }))\r\n                });\r\n            } else {\r\n                data = $.extend(this.opts.requestParams, {\r\n                    itemsPerPage: this.itemsPerPage,\r\n                    currentStartItem: this.currentStartItem,\r\n                    searchQuery: this.searchQuery,\r\n                    width: this.width,\r\n                    sorting: this.buildSortList(),\r\n                    columns: $.map(this.opts.columns, function(c) { return { field: c.field, width: c.width * 1.0 }; })\r\n                });\r\n            }\r\n\r\n            this.storeFunction.call(null, data);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Process the data array result from the ajax request.\r\n     * @param {Object[]} data - Array of records to display.\r\n     */\r\n    doTable.prototype.processData = function(data) {\r\n        var i = 0, len = data.rows.length, j = 0;\r\n        for (; i < len; i++) {\r\n            // add an index to the data so we can reset to the default sort order later if the user wants\r\n            data.rows[i]._index = i;\r\n\r\n            var x;\r\n            // convert input to appropriate types\r\n            for (j = 0; j < this.intColumns.length; j++) {\r\n                x = this.intColumns[j];\r\n                data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : data.rows[i][x] * 1;\r\n            }\r\n            for (j = 0; j < this.dateColumns.length; j++) {\r\n                x = this.dateColumns[j];\r\n                // @todo switch to using flatpickr.parseDate and flatpickr.formatDate\r\n                data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : $.fecha.parse(data.rows[i][x], this.opts.dataDateFormat);\r\n            }\r\n            for (j = 0; j < this.currencyColumns.length; j++) {\r\n                x = this.currencyColumns[j];\r\n                data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : $.accounting.unformat(data.rows[i][x]);\r\n            }\r\n        }\r\n        this.data = data.rows;\r\n        this.filteredTotal = data.filteredTotal;\r\n\r\n        this.loading = false;\r\n        this.sort(false);\r\n        this.filterResults();\r\n    };\r\n\r\n    /**\r\n     * Load the data to populate the table.\r\n     */\r\n    doTable.prototype.loadData = function() {\r\n        this.loading = true;\r\n        this.loadingError = false;\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: this.opts.requestMethod,\r\n            url: this.opts.url,\r\n            data: this.buildParams(),\r\n            block: false,\r\n            headers: {\r\n                'Content-Type': 'application/jil; charset=utf-8',\r\n                'Accept': 'application/jil'\r\n            }\r\n        }, this.processData.bind(this), function(data) {\r\n            self.loading = false;\r\n            self.loadingError = true;\r\n            self.draw();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Force the table to refresh its data.\r\n     */\r\n    doTable.prototype.refresh = function() {\r\n        this.loading = true;\r\n        this.loadingError = false;\r\n        this.loadData();\r\n    };\r\n\r\n    /**\r\n     * Build an array containing the sorting info.\r\n     */\r\n    doTable.prototype.buildSortList = function() {\r\n        var sorting = [];\r\n        $.forEach(this.opts.columns, function(x) {\r\n            if (x.sortDir) {\r\n                sorting.push({ field: x.field, sortDir: x.sortDir, sortOrder: x.sortOrder });\r\n            }\r\n        });\r\n        return sorting.length ? sorting : null;\r\n    };\r\n\r\n    /**\r\n     * Build querystring params to fetch data from the server.\r\n     * @returns {Object} Request parameters.\r\n     */\r\n    doTable.prototype.buildParams = function() {\r\n        var sort = this.buildSortList();\r\n        if (this.opts.requestUsePascalCase) {\r\n            return $.extend($.toPascalKeys(this.opts.requestParams), {\r\n                StartItem: this.currentStartItem,\r\n                Items: this.itemsPerPage,\r\n                Query: this.searchQuery,\r\n                Sort: $.toPascalKeys(sort)\r\n            });\r\n        }\r\n        return $.extend(this.opts.requestParams, {\r\n            startItem: this.currentStartItem,\r\n            items: this.itemsPerPage,\r\n            query: this.searchQuery,\r\n            sort: sort\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Set the first item index to display.\r\n     * @param {type} index - Record index to start on.\r\n     */\r\n    doTable.prototype.setCurrentStartItem = function(index) {\r\n        this.currentStartItem = index;\r\n        this.store('currentStartItem', index);\r\n        this.filterResults(true);\r\n    };\r\n\r\n    /**\r\n     * Set the number of items to display per page.\r\n     * @param {number|Event} e - Number or items per page, or an event that triggered the change.\r\n     */\r\n    doTable.prototype.setItemsPerPage = function(e) {\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        var items = (isNaN(e) ? e.target.value : e) * 1;\r\n        if (this.itemsPerPage !== items) {\r\n            this.itemsPerPage = items;\r\n            this.store('itemsPerPage', items);\r\n            this.setCurrentStartItem(0);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the search query for filtering table data.\r\n     * @param {string} val - New search text.\r\n     */\r\n    doTable.prototype.setSearchQuery = function(val) {\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        var query = val.target ? val.target.value : val;\r\n        if (this.searchQuery !== query) {\r\n            this.searchQuery = query;\r\n            this.store('searchQuery', query);\r\n            this.requestTimer = null;\r\n            this.currentStartItem = 0;\r\n            this.currentEndItem = 0;\r\n            this.filterResults(true);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Filter the data based on the search query, current page, and items per page.\r\n     * @param {bool} refresh - Force it to refresh its data.\r\n     */\r\n    doTable.prototype.filterResults = function(refresh) {\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        if (refresh && !this.opts.loadAll) {\r\n            // force the data to reload. filterResults will get called again after the data loads\r\n            this.loadData();\r\n        } else if (!this.opts.loadAll) {\r\n            // we're not loading all the data to begin with. so whatever data we have should be displayed.\r\n            this.results = this.data;\r\n            this.currentEndItem = Math.min(this.currentStartItem + this.itemsPerPage, this.filteredTotal);\r\n            this.pageTotal = Math.ceil(this.filteredTotal / this.itemsPerPage);\r\n            this.draw();\r\n        } else {\r\n            // we're loading all the data to begin with. so figure out what data to display.\r\n            var filteredTotal = 0;\r\n            if (this.data.constructor !== Array) {\r\n                this.loading = true;\r\n                this.results = [];\r\n            } else {\r\n                var startItem = this.currentStartItem;\r\n                var res = this.searchQuery ? this.data.filter(filterArray.bind(this.searchQuery.toLowerCase())) : this.data;\r\n                filteredTotal = res.length;\r\n                this.results = res.slice(startItem, startItem + this.itemsPerPage);\r\n            }\r\n            this.currentEndItem = Math.min(this.currentStartItem + this.itemsPerPage, filteredTotal);\r\n            this.pageTotal = Math.ceil(filteredTotal / this.itemsPerPage);\r\n            this.filteredTotal = filteredTotal;\r\n            this.draw();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Page forward or backward.\r\n     * @param {number} d - Direction to move, 1 is forward, -1 is backward.\r\n     * @param {number} m - Move to end (first or last page) if true.\r\n     */\r\n    doTable.prototype.moveToPage = function(d, m) {\r\n        this.changePage(d === 1 ? m ? this.pageTotal : this.currentStartItem / this.itemsPerPage + 2 : m ? 1 : this.currentStartItem / this.itemsPerPage);\r\n    };\r\n\r\n    /**\r\n     * Move to the specified page number.\r\n     * @param {number|Event} e - New page number, or an event that triggered the change.\r\n     */\r\n    doTable.prototype.changePage = function(e) {\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        var page = (isNaN(e) ? e.target.value : e) * 1;\r\n        if (page <= this.pageTotal && page > 0) {\r\n            this.setCurrentStartItem((page - 1) * this.itemsPerPage);\r\n            this.draw();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Reset table sorting.\r\n     */\r\n    doTable.prototype.resetSort = function(column) {\r\n        $.forEach(this.opts.columns, function(x) {\r\n            if (x !== this) {\r\n                delete x.sortOrder;\r\n                delete x.sortDir;\r\n            }\r\n        }, column);\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * Change the sorting order.\r\n     * @param {string} fieldName - Name of the field to sort on.\r\n     * @param {string} dataType - Data type of the field.\r\n     * @param {Event} e - Event that triggered the change.\r\n     */\r\n    doTable.prototype.changeSort = function(fieldName, dataType, e) {\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        var sortOrder = this.opts.columns.filter(function(x) {\r\n            return x.sortDir;\r\n        }).length + 1;\r\n\r\n        var column = $.findByKey(this.opts.columns, 'field', fieldName);\r\n        if (e.shiftKey) {\r\n            document.getSelection().removeAllRanges();\r\n        } else {\r\n            sortOrder = 0;\r\n            this.resetSort(column);\r\n        }\r\n\r\n        if ($.isNull(column.sortDir)) {\r\n            column.sortDir = 'ASC';\r\n            column.sortOrder = sortOrder;\r\n        } else if (e.shiftKey) {\r\n            if (column.dir === 'DESC') {\r\n                delete column.sortDir;\r\n                delete column.sortOrder;\r\n            } else {\r\n                column.sortDir = 'DESC';\r\n            }\r\n        } else {\r\n            column.sortDir = column.sortDir === 'ASC' ? 'DESC' : 'ASC';\r\n        }\r\n\r\n        this.sort();\r\n        this.setCurrentStartItem(0);\r\n        this.draw();\r\n    };\r\n\r\n    /**\r\n     * Sort the underlying data.\r\n     * @param {bool} refresh - Refresh the data from the server.\r\n     */\r\n    doTable.prototype.sort = function(refresh) {\r\n        refresh = $.coalesce(refresh, true);\r\n\r\n        var sortColumns = this.buildSortList();\r\n        this.data.sort(sortColumns && sortColumns.length > 0 ? compare.bind(sortColumns) : defaultCompare);\r\n        this.store('sorting', JSON.stringify(sortColumns));\r\n        this.filterResults(refresh);\r\n    };\r\n\r\n    /**\r\n     * Set up the table and column styles and events.\r\n     */\r\n    doTable.prototype.setLayout = function() {\r\n        if (this.layoutSet) {\r\n            return;\r\n        }\r\n\r\n        var contentNode = this.getContainer();\r\n        this.layoutSet = true;\r\n        this.table = $.get('.dotable-data', contentNode);\r\n        this.table.style.tableLayout = 'fixed';\r\n        this.tableHeaderRow = this.table.tHead.rows[0];\r\n\r\n        if (this.table !== null) {\r\n            this.clientWidth = contentNode.clientWidth;\r\n            this.table.tHead.style.width = this.table.style.width = (this.width / 100 * this.table.offsetWidth) + 'px';\r\n\r\n            var hWidth = this.table.tHead.offsetWidth;\r\n            var tWidth = this.table.offsetWidth;\r\n            var i = 0;\r\n            var cells = this.tableHeaderRow.cells;\r\n            $.forEach(this.opts.columns, function(x) {\r\n                if (!x.width) {\r\n                    x.width = cells[i].offsetWidth / hWidth * 100;\r\n                }\r\n                cells[i].style.width = x.width / 100 * tWidth + 'px';\r\n                ++i;\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Update the table and column widths based on a window resize.\r\n     */\r\n    doTable.prototype.onResize = function() {\r\n        var cWidth = this.getContainer().clientWidth;\r\n        if (cWidth === 0) {\r\n            return;\r\n        }\r\n        var scale = cWidth / this.clientWidth;\r\n        this.clientWidth = cWidth;\r\n        this.table.tHead.style.width = this.table.style.width = (pixelToFloat(this.table.style.width) * scale) + 'px';\r\n        for (var i = 0; i < this.opts.columns.length; i++) {\r\n            this.tableHeaderRow.cells[i].style.width = (pixelToFloat(this.tableHeaderRow.cells[i].style.width) * scale) + 'px';\r\n        }\r\n        this.updateLayout();\r\n    };\r\n\r\n    /**\r\n     * Update the table header style.\r\n     */\r\n    doTable.prototype.updateLayout = function() {\r\n        if (!$.isVisible(this.table)) {\r\n            return;\r\n        }\r\n        var contentNode = this.getContainer();\r\n        $.get('.dotable-scrollable', contentNode).style.paddingTop = this.table.tHead.offsetHeight + 'px';\r\n        var colGroup = $.get('.dotable-column-group', contentNode);\r\n        for (var i = 0; i < this.opts.columns.length; i++) {\r\n            colGroup.children[i].style.width = this.tableHeaderRow.cells[i].style.width;\r\n        }\r\n        if (this.clientWidth > 0 && contentNode.clientWidth / this.clientWidth !== 1) {\r\n            this.onResize();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Make the table header scroll horizontally with the table\r\n     * @param {Event} e - Event that triggered the scroll.\r\n     */\r\n    doTable.prototype.onScroll = function(e) {\r\n        var head = this.table.tHead;\r\n        var scroll = e.target;\r\n        if (-head.offsetLeft !== scroll.scrollLeft) {\r\n            head.style.left = '-' + scroll.scrollLeft + 'px';\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle dragging to change column widths.\r\n     * @param {type} e - Event that triggered the change.\r\n     */\r\n    doTable.prototype.onHeaderMouseDown = function(e) {\r\n        if (e.button !== 0) {\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        var callbackFunc = function(cellEl) {\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n\r\n            var contentNode = this.getContainer();\r\n            self.resizeContext = {\r\n                colIndex: cellEl.cellIndex,\r\n                initX: e.clientX,\r\n                scrWidth: $.get('.dotable-scrollable', contentNode).offsetWidth,\r\n                initTblWidth: self.table.offsetWidth,\r\n                initColWidth: pixelToFloat($.get('.dotable-column-group', contentNode).children[cellEl.cellIndex].style.width),\r\n                layoutTimer: null\r\n            };\r\n        };\r\n        self.inResizeArea(e, callbackFunc);\r\n    };\r\n\r\n    /**\r\n     * Handle resizing columns.\r\n     * @param {Event} e - Event that triggered the change.\r\n     */\r\n    doTable.prototype.onMouseMove = function(e) {\r\n        var newStyle = '';\r\n        var cursorFunc = function() {\r\n            newStyle = 'col-resize';\r\n        };\r\n        this.inResizeArea(e, cursorFunc);\r\n        if (this.table.tHead.style.cursor !== newStyle) {\r\n            this.table.tHead.style.cursor = newStyle;\r\n        }\r\n\r\n        var ctx = this.resizeContext;\r\n        if ($.isNull(ctx)) {\r\n            return;\r\n        }\r\n\r\n        e.stopImmediatePropagation();\r\n        e.preventDefault();\r\n\r\n        var newColWidth = Math.max(ctx.initColWidth + e.clientX - ctx.initX, this.opts.columnMinWidth);\r\n        this.table.tHead.style.width = this.table.style.width = (ctx.initTblWidth + (newColWidth - ctx.initColWidth)) + 'px';\r\n        $.get('.dotable-column-group', this.getContainer()).children[ctx.colIndex].style.width = this.tableHeaderRow.cells[ctx.colIndex].style.width = newColWidth + 'px';\r\n\r\n        if (ctx.layoutTimer === null) {\r\n            var self = this;\r\n            var timerFunc = function() {\r\n                self.resizeContext.layoutTimer = null;\r\n                self.updateLayout();\r\n            };\r\n            ctx.layoutTimer = setTimeout(timerFunc, 25);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Update column widths and save them.\r\n     */\r\n    doTable.prototype.onMouseUp = function() {\r\n        var ctx = this.resizeContext;\r\n        if ($.isNull(ctx)) {\r\n            return;\r\n        }\r\n\r\n        if (ctx.layoutTimer !== null) {\r\n            clearTimeout(ctx.layoutTimer);\r\n        }\r\n        this.resizeContext = null;\r\n\r\n        var newTblWidth = this.table.offsetWidth;\r\n        this.width = (newTblWidth / ctx.scrWidth * 100).toFixed(2);\r\n        this.store('width', this.width);\r\n        for (var i = 0; i < this.opts.columns.length; i++) {\r\n            this.opts.columns[i].width = (pixelToFloat(this.tableHeaderRow.cells[i].style.width) / newTblWidth * 100).toFixed(2);\r\n            this.store(this.opts.columns[i].field + '.width', this.opts.columns[i].width);\r\n        }\r\n\r\n        this.updateLayout();\r\n    };\r\n\r\n    /**\r\n     * Check if the cursor is in the area where the user can click to drag a column.\r\n     * @param {Event} e - Event that triggered the check.\r\n     * @param {Function} callback - Function to run if in the resize area.\r\n     */\r\n    doTable.prototype.inResizeArea = function(e, callback) {\r\n        var tblX = e.clientX;\r\n        var el;\r\n        for (el = this.table.tHead; el !== null; el = el.offsetParent) {\r\n            tblX -= el.offsetLeft + el.clientLeft - el.scrollLeft;\r\n        }\r\n\r\n        var cellEl = e.target;\r\n        while (cellEl !== this.table.tHead && cellEl !== null) {\r\n            if (cellEl.nodeName === 'TH') {\r\n                break;\r\n            }\r\n            cellEl = cellEl.parentNode;\r\n        }\r\n\r\n        if (cellEl === this.table.tHead) {\r\n            for (var i = this.tableHeaderRow.cells.length - 1; i >= 0; i--) {\r\n                cellEl = this.tableHeaderRow.cells[i];\r\n                if (cellEl.offsetLeft <= tblX) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (cellEl !== null) {\r\n            var x = tblX;\r\n            for (el = cellEl; el !== this.table.tHead; el = el.offsetParent) {\r\n                if (el === null) {\r\n                    break;\r\n                }\r\n                x -= el.offsetLeft - el.scrollLeft + el.clientLeft;\r\n            }\r\n            if (x < 10 && cellEl.cellIndex !== 0) {\r\n                callback.call(this, cellEl.previousElementSibling);\r\n            } else if (x > cellEl.clientWidth - 10) {\r\n                callback.call(this, cellEl);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Make column resizing play nice with touch. \r\n     * http://stackoverflow.com/questions/28218888/touch-event-handler-overrides-click-handlers\r\n     * @param {Event} e Event that triggered the handler.\r\n     */\r\n    doTable.prototype.touchHandler = function(e) {\r\n        var mouseEvent = null;\r\n        var simulatedEvent = document.createEvent('MouseEvent');\r\n        var touch = e.changedTouches[0];\r\n\r\n        switch (e.type) {\r\n            case 'touchstart':\r\n                mouseEvent = 'mousedown';\r\n                this.totalDistance = 0;\r\n                this.lastSeenAt.x = touch.clientX;\r\n                this.lastSeenAt.y = touch.clientY;\r\n                break;\r\n            case 'touchmove':\r\n                mouseEvent = 'mousemove';\r\n                break;\r\n            case 'touchend':\r\n                if (this.lastSeenAt.x) {\r\n                    this.totalDistance += Math.sqrt(Math.pow(this.lastSeenAt.y - touch.clientY, 2) + Math.pow(this.lastSeenAt.x - touch.clientX, 2));\r\n                }\r\n                mouseEvent = this.totalDistance > 5 ? 'mouseup' : 'click';\r\n                this.lastSeenAt = { x: null, y: null };\r\n                break;\r\n        }\r\n\r\n        simulatedEvent.initMouseEvent(mouseEvent, true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);\r\n        $.dispatch(touch.target, simulatedEvent);\r\n        e.preventDefault();\r\n    };\r\n\r\n    doTable.prototype.getContainer = function() {\r\n        return $.get('#' + this.opts.id);\r\n    };\r\n\r\n    doTable.prototype.create = function() {\r\n        var contentNode = this.getContainer();\r\n        contentNode.innerHTML = '';\r\n\r\n        var container = $.createNode('<div class=\"dash-table\"></div>');\r\n        container.innerHTML = _templates.headerFn(this) +\r\n            _templates.bodyFn(this) +\r\n            _templates.footerFn(this);\r\n\r\n        contentNode.appendChild(container);\r\n\r\n        $.on($.get('.dotable-search-input', container), 'input', this.setSearchQuery.bind(this));\r\n        $.on($.get('.dotable-items-input', container), 'change', this.setItemsPerPage.bind(this));\r\n\r\n        if (this.opts.editable) {\r\n            // bind column sort and column resize events\r\n            var thead = $.get('.dotable-head', container);\r\n            if (thead) {\r\n                var handler = this.touchHandler.bind(this);\r\n                $.on(thead, 'touchstart', handler);\r\n                $.on(thead, 'touchend', handler);\r\n                $.on(thead, 'touchmove', handler);\r\n                $.on(thead, 'touchcancel', handler);\r\n\r\n                var ths = $.getAll('th', thead);\r\n                if (ths && ths.length) {\r\n                    var mouseFunc = this.onHeaderMouseDown.bind(this);\r\n                    $.forEach(ths, function(x) {\r\n                        $.on(x, 'mousedown', mouseFunc);\r\n                    });\r\n                }\r\n\r\n                var arrows = $.getAll('.dotable-arrow', thead);\r\n                if (arrows && arrows.length) {\r\n                    var self = this;\r\n                    $.forEach(arrows, function(x) {\r\n                        $.on(x, 'click', self.changeSort.bind(self, x.getAttribute('data-field'), x.getAttribute('data-type').toLowerCase()));\r\n                    });\r\n                }\r\n            }\r\n\r\n            this.events = {\r\n                resize: $.debounce(this.onResize.bind(this), 50),\r\n                move: this.onMouseMove.bind(this),\r\n                up: this.onMouseUp.bind(this)\r\n            };\r\n            $.on(window, 'resize', this.events.resize);\r\n            $.on(window, 'mousemove', this.events.move);\r\n            $.on(window, 'mouseup', this.events.up);\r\n        }\r\n\r\n        $.on('.dotable-btn-first', 'click', this.moveToPage.bind(this, -1, true));\r\n        $.on('.dotable-btn-previous', 'click', this.moveToPage.bind(this, -1, false));\r\n        $.on('.dotable-btn-next', 'click', this.moveToPage.bind(this, 1, false));\r\n        $.on('.dotable-btn-last', 'click', this.moveToPage.bind(this, 1, true));\r\n\r\n        $.on('.dotable-area', 'scroll', this.onScroll.bind(this));\r\n\r\n        this.setLayout();\r\n    };\r\n\r\n    /**\r\n     * Build the view that actually shows the table.\r\n     */\r\n    doTable.prototype.draw = function() {\r\n        var contentNode = this.getContainer();\r\n        var container = $.get('.dash-table', contentNode);\r\n        if (!container) {\r\n            this.create();\r\n        }\r\n\r\n        if (this.opts.editable) {\r\n            // update column sort icons\r\n            var sortArrows = $.getAll('.dotable-arrow', $.get('.dotable-head', container));\r\n            if (sortArrows && sortArrows.length) {\r\n                $.forEach(sortArrows, function(x) {\r\n                    var val = $.findByKey(this.opts.columns, 'field', x.getAttribute('data-field'));\r\n                    if (val && val.sortDir) {\r\n                        $.removeClass(x, 'dash-sort-up');\r\n                        $.removeClass(x, 'dash-sort-down');\r\n                        $.removeClass(x, 'dash-sort');\r\n                        if (val.sortDir === 'ASC') {\r\n                            $.addClass(x, 'dash-sort-up');\r\n                        } else {\r\n                            $.addClass(x, 'dash-sort-down');\r\n                        }\r\n                    } else {\r\n                        $.removeClass(x, 'dash-sort-up');\r\n                        $.removeClass(x, 'dash-sort-down');\r\n                        $.addClass(x, 'dash-sort');\r\n                    }\r\n                }, this);\r\n            }\r\n        }\r\n\r\n        // toggle disabled status for pagination buttons\r\n        disableIf($.get('.dotable-btn-first', contentNode), this.currentStartItem === 0);\r\n        disableIf($.get('.dotable-btn-previous', contentNode), this.currentStartItem === 0);\r\n        disableIf($.get('.dotable-btn-next', contentNode), this.currentStartItem >= this.filteredTotal - this.itemsPerPage);\r\n        disableIf($.get('.dotable-btn-last', contentNode), this.currentStartItem >= this.filteredTotal - this.itemsPerPage);\r\n\r\n        // set values for showing `x - x of x` rows\r\n        $.setText($.get('.dotable-start-item', contentNode), this.filteredTotal ? this.currentStartItem + 1 : 0);\r\n        $.setText($.get('.dotable-end-item', contentNode), this.currentEndItem);\r\n        $.setText($.get('.dotable-total-items', contentNode), this.filteredTotal);\r\n\r\n        // update table body\r\n        var body = $.get('.dotable-body', contentNode);\r\n        if (body) {\r\n            body.innerHTML = '';\r\n\r\n            if (this.loading) {\r\n                body.innerHTML = _templates.loadingFn(this.opts.columns.length);\r\n            } else if (this.loadingError) {\r\n                body.innerHTML = _templates.errorFn(this.opts.columns.length);\r\n                $.on($.get('.dotable-btn-refresh', body), 'click', this.refresh.bind(this));\r\n            } else if (this.filteredTotal === 0) {\r\n                body.innerHTML = _templates.noDataFn(this.opts.columns.length);\r\n            } else {\r\n                var bodyHTML = '';\r\n                var rows = $.map(this.results, doTable.prototype.makeRow.bind(this));\r\n                $.forEach(rows, function(x) {\r\n                    bodyHTML += this(x);\r\n                }, this.opts.rowTemplateFn);\r\n                body.innerHTML = bodyHTML;\r\n            }\r\n        }\r\n\r\n        this.updateLayout();\r\n    };\r\n\r\n    doTable.prototype.makeRow = function(obj) {\r\n        var newObj = $.clone(obj);\r\n        $.forEach(this.opts.columns, function(x) {\r\n            if (newObj.hasOwnProperty(x.field)) {\r\n                newObj[x.field] = this(newObj[x.field], x.dataType);\r\n            }\r\n        }, this.opts.displayValueFn);\r\n        return newObj;\r\n    };\r\n\r\n    doTable.prototype.destroy = function() {\r\n        if (this.opts.editable) {\r\n            $.off(window, 'resize', this.events.resize);\r\n            $.off(window, 'mousemove', this.events.move);\r\n            $.off(window, 'mouseup', this.events.up);\r\n        }\r\n    };\r\n\r\n    return doTable;\r\n});\r\n","/*!\r\n * Wraps functionality needed to display a dashboard widget.\r\n */\r\n(function(root, factory) {\r\n    root.Widget = factory(root.$, root.Alertify, root.DashChart, root.Draggabilly, root.Rect);\r\n})(this, function($, Alertify, DashChart, Draggabilly, Rect) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Use object properties to make class list for a widget container.\r\n     * @param {Object} obj - Widget properties.\r\n     * @returns {string} CSS class list.\r\n     */\r\n    var buildClassList = function(obj) {\r\n        return 'grid-item grid-item-width-' + obj.width + ' grid-item-height-' + obj.height +\r\n            ' grid-item-x-' + obj.x + ' grid-item-y-' + obj.y;\r\n    };\r\n\r\n    /**\r\n     * Declare Widget class.\r\n     * @param {Object} opts - Widget settings\r\n     */\r\n    var Widget = function(opts) {\r\n        this.init(opts);\r\n\r\n        // attach this to the container for reference in the dashboard\r\n        var container = this.getContainer();\r\n        container.widget = this;\r\n    };\r\n\r\n    Widget.prototype = {\r\n        /**\r\n         * Initialize the widget.\r\n         * @param {Object} opts - Widget settings\r\n         */\r\n        init: function(opts) {\r\n            opts.isData = $.coalesce(opts.isData, true);\r\n            opts.refreshSeconds = $.coalesce(opts.refreshSeconds, 0);\r\n            opts.baseUrl = $.get('body').getAttribute('data-base-url');\r\n            this.opts = opts;\r\n\r\n            this.id = opts.id;\r\n            this.chart = null;\r\n            this.interval = null;\r\n            this.isFullscreen = false;\r\n            this.initDate = new Date();\r\n            this.dragMargin = 0;\r\n\r\n            this.render();\r\n\r\n            var container = this.getContainer();\r\n            this.rect = new Rect(opts.width, opts.height, opts.x, opts.y);\r\n            this.setupDraggie(container);\r\n\r\n            if (!opts.isData) {\r\n                this.chart = new DashChart($.get('.widget-chart', container), false, this.processJson.bind(this), this.onError.bind(this));\r\n            }\r\n            if (opts.refreshSeconds > 0) {\r\n                this.interval = setInterval(this.refresh.bind(this), opts.refreshSeconds * 1000);\r\n            }\r\n\r\n            if (opts.title) {\r\n                $.setText($.get('.grid-title', container), opts.title);\r\n            }\r\n        },\r\n\r\n        render: function() {\r\n            var parentNode = $.get('#widget_' + this.opts.id);\r\n\r\n            $.on($.get('.btn-refresh', parentNode), 'click', this.forceRefresh.bind(this));\r\n            $.on($.get('.btn-fullscreen', parentNode), 'click', this.toggleFullScreen.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Get the container element for the widget.\r\n         * @returns {Node} DOM node that contains the widget content.\r\n         */\r\n        getContainer: function() {\r\n            return $.get('#widget_' + this.opts.id);\r\n        },\r\n\r\n        /**\r\n         * Add the draggabilly handlers.\r\n         * @param {Node} container - DOM node that contains the widget content.\r\n         * @param {Object} grid - Object that contains the grid columnWidth and rowHeight.\r\n         */\r\n        setupDraggie: function(container, grid) {\r\n            container = $.coalesce(container, this.getContainer());\r\n            var g = this.opts.grid = $.coalesce(grid, this.opts.grid);\r\n\r\n            $.destroy(this.moveDraggie);\r\n            this.moveDraggie = new Draggabilly(container, { handle: '.drag-handle', grid: [g.columnWidth, g.rowHeight], minZero: true }).on('dragEnd', this.stopDrag.bind(this));\r\n\r\n            $.destroy(this.resizeDraggie);\r\n            var handle = $.get('.resizable-handle', container);\r\n            this.resizeDraggie = new Draggabilly(handle, { grid: [g.columnWidth, g.rowHeight] }).on('dragStart', this.initResize.bind(this)).on('dragEnd', this.stopResize.bind(this));\r\n\r\n            var style = handle.currentStyle || window.getComputedStyle(handle);\r\n            this.dragMargin = style.marginRight.replace('px', '') * 1;\r\n        },\r\n\r\n        /**\r\n         * Stop dragging the widget and updates its location.\r\n         */\r\n        stopDrag: function() {\r\n            var x = Math.max(Math.round(this.moveDraggie.position.x / this.opts.grid.columnWidth), 0);\r\n            var y = Math.max(Math.round(this.moveDraggie.position.y / this.opts.grid.rowHeight), 0);\r\n            if (x + this.rect.width > this.opts.grid.columns) {\r\n                x = this.opts.grid.columns - this.rect.width;\r\n            }\r\n            if (y + this.rect.height > this.opts.grid.rows) {\r\n                y = this.opts.grid.rows - this.rect.height;\r\n            }\r\n            this.setLocation(x, y);\r\n            this.rect.updated = true;\r\n            this.opts.layoutCallback();\r\n        },\r\n\r\n        /**\r\n         * Start resizing a widget\r\n         * @param {Event} event - Original mousedown or touchstart event\r\n         */\r\n        initResize: function(event) {\r\n            // clear any selection so browser doesn't think we are dragging the selection\r\n            window.getSelection().removeAllRanges();\r\n\r\n            var container = this.getContainer();\r\n            container.style['z-index'] = 9999;\r\n            var pos = event.changedTouches ? event.changedTouches[0] : event;\r\n            this.x = pos.clientX;\r\n            this.y = pos.clientY;\r\n\r\n            var styles = document.defaultView.getComputedStyle(container);\r\n            this.width = styles.width.replace('px', '') * 1;\r\n            this.height = styles.height.replace('px', '') * 1;\r\n\r\n            if (event.target !== event.currentTarget) {\r\n                event.stopPropagation();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update the widget after the user finishes resizing.\r\n         */\r\n        stopResize: function() {\r\n            var container = this.getContainer();\r\n            var w = Math.max(this.width + this.resizeDraggie.position.x + this.dragMargin, this.opts.grid.columnWidth * 4);\r\n            var h = Math.max(this.height + this.resizeDraggie.position.y, this.opts.grid.rowHeight * 4);\r\n\r\n            this.setSize(Math.min(Math.round(w / this.opts.grid.columnWidth), this.opts.grid.columns), Math.min(Math.round(h / this.opts.grid.rowHeight), this.opts.grid.rows));\r\n\r\n            var handle = $.get('.resizable-handle', container);\r\n            if (handle) {\r\n                handle.removeAttribute('style');\r\n            }\r\n\r\n            this.opts.layoutCallback();\r\n            this.updateLayout();\r\n            this.rect.updated = true;\r\n        },\r\n\r\n        /**\r\n         * Handle the result of a query for report data.\r\n         * @param {Object} json - Data to display in the widget.\r\n         * @returns {bool} True if the json data is valid\r\n         */\r\n        processJson: function(json) {\r\n            if (json.updatedDate && this.initDate) {\r\n                var updateDate = new Date(json.updatedDate);\r\n                if (updateDate && updateDate > this.initDate) {\r\n                    this.reload();\r\n                    return false;\r\n                }\r\n            }\r\n            if ((this.opts.isData && $.isNull(json.rows)) || (!this.opts.isData && ($.isNull(json.ranges) || json.ranges.length === 0))) {\r\n                Alertify.error($.resx('errorConnectingToDataSource'));\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Reload the widget options and reinitialize.\r\n         * @param {bool} showMsg - If true show the widget reloaded message to the user.\r\n         * @param {Object} options - Options to use to reload the widget instead of requesting from the server.\r\n         */\r\n        reload: function(showMsg, options) {\r\n            var callback = function(opts) {\r\n                this.destroy(false);\r\n                this.init($.extend(this.opts, opts));\r\n                if ($.coalesce(showMsg, true)) {\r\n                    Alertify.success($.resx('widgetReloaded').replace('{0}', this.opts.title));\r\n                }\r\n                return;\r\n            };\r\n\r\n            if (!$.isNull(options)) {\r\n                callback.call(this, options);\r\n            } else {\r\n                $.ajax({\r\n                    method: 'GET', url: this.opts.baseUrl + 'Dashboard/WidgetOptions/' + this.opts.id,\r\n                    headers: {\r\n                        'Content-Type': 'application/jil; charset=utf-8',\r\n                        'Accept': 'application/jil'\r\n                    }\r\n                }, callback.bind(this));\r\n            }\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.opts.isData) {\r\n                var table = $.get('[data-toggle=\"dotable\"]', this.getContainer());\r\n                if (table && table.doTable) {\r\n                    table.doTable.refresh();\r\n                }\r\n            } else {\r\n                this.chart.run();\r\n            }\r\n            $.setText($.get('.grid-updated-time', this.getContainer()), new Date().toLocaleTimeString());\r\n        },\r\n\r\n        updateLayout: function() {\r\n            if (this.opts.isData) {\r\n                var table = $.get('[data-toggle=\"dotable\"]', this.getContainer());\r\n                if (table && table.doTable) {\r\n                    table.doTable.updateLayout();\r\n                }\r\n            } else {\r\n                this.chart.resize();\r\n            }\r\n        },\r\n\r\n        forceRefresh: function() {\r\n            if (this.opts.refreshSeconds > 0) {\r\n                clearInterval(this.interval);\r\n                this.interval = setInterval(this.refresh.bind(this), this.opts.refreshSeconds * 1000);\r\n            }\r\n            this.refresh();\r\n        },\r\n\r\n        /**\r\n         * Refresh the style based on the dimensions.\r\n         * @param {number} width - New width of the widget.\r\n         * @param {number} height - New height of the widget.\r\n         */\r\n        setSize: function(width, height) {\r\n            this.rect.width = width;\r\n            this.rect.height = height;\r\n            this.updateStyle();\r\n        },\r\n\r\n        /**\r\n         * Refresh the style based on the dimensions.\r\n         * @param {number} x - New x coordinate of the widget.\r\n         * @param {number} y - New y coordinate of the widget.\r\n         */\r\n        setLocation: function(x, y) {\r\n            this.rect.x = x;\r\n            this.rect.y = y;\r\n            this.updateStyle();\r\n        },\r\n\r\n        /**\r\n        * Refresh the style based on the dimensions.\r\n        */\r\n        updateStyle: function() {\r\n            var container = this.getContainer();\r\n            container.className = buildClassList(this.rect);\r\n            container.removeAttribute('style');\r\n        },\r\n\r\n        /**\r\n         * Handle an error.\r\n         * @returns {bool} Always returns true.\r\n         */\r\n        onError: function() {\r\n            if (this.interval) {\r\n                clearInterval(this.interval);\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Destroy the widget.\r\n         * @param {bool} totalDestruction - Remove the container node and null out the widget object if true.\r\n         */\r\n        destroy: function(totalDestruction) {\r\n            if (this.opts.isData) {\r\n                var table = $.get('[data-toggle=\"dotable\"]', this.getContainer());\r\n                if (table && table.doTable) {\r\n                    table.doTable.destroy();\r\n                }\r\n            } else {\r\n                $.destroy(this.chart);\r\n            }\r\n\r\n            $.destroy(this.moveDraggie);\r\n            $.destroy(this.resizeDraggie);\r\n\r\n            if (this.interval) {\r\n                clearInterval(this.interval);\r\n                this.interval = null;\r\n            }\r\n\r\n            if ($.coalesce(totalDestruction, true)) {\r\n                var container = this.getContainer();\r\n                container.widget = null;\r\n                container.parentNode.removeChild(container);\r\n            }\r\n        },\r\n\r\n        toggleFullScreen: function() {\r\n            var container = this.getContainer();\r\n            var fullScreenIcon = $.get('.btn-fullscreen i', container);\r\n            $.toggleClass(container, 'full-screen', !this.isFullscreen);\r\n            $.toggleClass(fullScreenIcon, 'dash-min', !this.isFullscreen);\r\n            $.toggleClass(fullScreenIcon, 'dash-max', this.isFullscreen);\r\n            var isFullscreen = this.isFullscreen;\r\n            $.getAll('.fs-disabled', container).forEach(function(x) { $.toggleClass(x, 'disabled', !isFullscreen); });\r\n            this.isFullscreen = !this.isFullscreen;\r\n            this.updateLayout();\r\n        }\r\n    };\r\n\r\n    return Widget;\r\n});\r\n","/*!\r\n * Wraps content processing functionality.\r\n */\r\n(function(m, $, Alertify, pjax, doTable, CollapsibleList, Autocomplete, Draggabilly, flatpickr, DashChart, ColorPicker) {\r\n    'use strict';\r\n\r\n    var _autocompletes = [];\r\n    var _draggabillies = [];\r\n    var _charts = [];\r\n    var _colorpickers = [];\r\n\r\n    /**\r\n     * Display context help.\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var contextHelp = function() {\r\n        $.on(this, 'click', Alertify.alert.bind(null, this.getAttribute('data-message').replace(/&quot;/g, '\"'), focusOnClose, focusOnClose));\r\n    };\r\n\r\n    /**\r\n     * Hide content.\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var hide = function() {\r\n        var node = $.get(this.getAttribute('data-target'));\r\n        if (node) {\r\n            $.on(this, 'click', $.hide.bind(null, node, false));\r\n        }\r\n    };\r\n\r\n    var conditionallyDisable = function() {\r\n        var n = $.get(this.getAttribute('data-target'));\r\n        if (this.value == this.getAttribute('data-match')) {\r\n            n.removeAttribute('disabled');\r\n        } else {\r\n            n.value = '';\r\n            n.setAttribute('disabled', true);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Conditionally disable content.\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var disable = function() {\r\n        $.onChange(this, conditionallyDisable, true);\r\n    };\r\n\r\n    /**\r\n     * Initialize autocomplete.\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var autocompleteLoad = function() {\r\n        // @todo maybe add a way to include source list in original html response instead of requiring another request\r\n\r\n        var preload = ['true', 'True'].indexOf(this.getAttribute('data-preload')) > -1;\r\n        var self = this;\r\n        if (preload) {\r\n            $.ajax({\r\n                method: self.getAttribute('data-method') || 'GET',\r\n                url: self.getAttribute('data-url')\r\n            }, function(data) {\r\n                if (data && data.length) {\r\n                    _autocompletes.push(new Autocomplete({ selector: self, sourceData: data }));\r\n                } else {\r\n                    // error - @todo what do i do here?\r\n                    _autocompletes.push(new Autocomplete({ selector: self, sourceData: null }));\r\n                }\r\n            });\r\n        } else {\r\n            _autocompletes.push(new Autocomplete({\r\n                selector: self,\r\n                source: function(search, response) {\r\n                    var params = { search: search };\r\n                    if (self.hasAttribute('data-params')) {\r\n                        self.getAttribute('data-params').split(',').forEach(function(x) {\r\n                            var node = $.get(x);\r\n                            if (node) {\r\n                                params[node.id] = node.value;\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    $.ajax({\r\n                        method: self.getAttribute('data-method') || 'GET',\r\n                        url: self.getAttribute('data-url'),\r\n                        data: params\r\n                    }, function(data) {\r\n                        if (data && data.length) {\r\n                            response(data);\r\n                        } else {\r\n                            // error - @todo what do i do here?\r\n                        }\r\n                    });\r\n                }\r\n            }));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy autocompletes on this page.\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var autocompleteUnload = function() {\r\n        _autocompletes.forEach(function(x) {\r\n            x.destroy();\r\n        });\r\n        _autocompletes = [];\r\n    };\r\n\r\n    /**\r\n     * Set focus on an element after a dialog closes.\r\n     * @param {Event} e - Event that originally triggered this.\r\n     */\r\n    var focusOnClose = function(e) {\r\n        if (e && e.target) {\r\n            e.target.focus();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initialize a doTable instance\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var doTableLoad = function() {\r\n        var node = $.isNode(this) ? this : this.target;\r\n        if (node) {\r\n            new doTable(node);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy a doTable instance\r\n     * @this {Node} Node for the table to destroy.\r\n     */\r\n    var doTableUnload = function() {\r\n        var node = $.isNode(this) ? this : this.target;\r\n        if (node && node.doTable) {\r\n            node.doTable.destroy();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initialize a chart instance\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var chartLoad = function() {\r\n        var node = $.isNode(this) ? this : this.target;\r\n        if (node) {\r\n            _charts.push(new DashChart(node, true));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy a chart instance\r\n     * @this {Node} Node for the chart to destroy.\r\n     */\r\n    var chartUnload = function() {\r\n        _charts.forEach(function(x) {\r\n            x.destroy();\r\n        });\r\n        _charts = [];\r\n    };\r\n\r\n    /**\r\n     * Toggle for exporting a chart.\r\n     */\r\n    var chartExportLoad = function() {\r\n        var node = $.isNode(this) ? this : this.target;\r\n        if (node) {\r\n            $.on(node, 'click', function() {\r\n                var chartContainer = $.get('.chart-container');\r\n                if (chartContainer) {\r\n                    // @todo this is sloppy - probably need a data- attribute of some sort to help narrow querySelector down\r\n                    $.get('.export-width').value = chartContainer.offsetWidth;\r\n                    $.get('.export-data').value = _charts.length ? _charts[0].chart.toBase64Image() : null;\r\n                    $.get('.export-form').submit();\r\n                }\r\n            }, true);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Update zIndex of column being dragged so it is on top.\r\n     * @param {Event} event - Original mousedown or touchstart event\r\n     */\r\n    var startColumnDrag = function(event) {\r\n        var target = $.hasClass(event.target, 'column-item') ? event.target : event.target.parentNode;\r\n        target.style['z-index'] = 9999;\r\n    };\r\n\r\n    /**\r\n     * Update column lists when the user stops dragging a column.\r\n     * @param {Event} event - Original mouseup or touchend event\r\n     * @param {MouseEvent|Touch} pointer - Event object that has .pageX and .pageY\r\n     */\r\n    var stopColumnDrag = function(event, pointer) {\r\n        var target = $.hasClass(event.target, 'column-item') ? event.target : event.target.parentNode;\r\n        var isLeft = (pointer.x || pointer.clientX) + target.offsetWidth / 2 < document.documentElement.clientWidth / 2;\r\n        var newPos = Math.max(Math.round(target.offsetTop / target.offsetHeight), 0);\r\n\r\n        $.removeClass(target, 'column-item-right');\r\n        $.removeClass(target, 'column-item-left');\r\n        target.removeAttribute('style');\r\n\r\n        var leftItems = $.getAll('.column-item-left');\r\n        leftItems.sort(columnSort);\r\n        var rightItems = $.getAll('.column-item-right');\r\n        rightItems.sort(columnSort);\r\n        newPos = Math.min(newPos, isLeft ? leftItems.length : rightItems.length);\r\n\r\n        if (isLeft) {\r\n            $.addClass(target, 'column-item-left');\r\n            leftItems.splice(newPos, 0, target);\r\n        } else {\r\n            $.addClass(target, 'column-item-right');\r\n            rightItems.splice(newPos, 0, target);\r\n        }\r\n\r\n        updateColumnList(leftItems, true);\r\n        updateColumnList(rightItems, false);\r\n        $.addClass($.closest('form', target), 'has-changes');\r\n    };\r\n\r\n    /**\r\n     * Sort columns by their vertical position.\r\n     * @param {Object} a - Object for first column.\r\n     * @param {Object} b - Object for second column.\r\n     * @returns {bool} True if first column should be after second column, else false;\r\n     */\r\n    var columnSort = function(a, b) {\r\n        return a.offsetTop > b.offsetTop;\r\n    };\r\n\r\n    /**\r\n     * Update the position and displayOrder of columns in a list.\r\n     * @param {Node[]} items - Array of column nodes.\r\n     * @param {bool} isLeft - True if the left column list, else false.\r\n     */\r\n    var updateColumnList = function(items, isLeft) {\r\n        $.forEach(items, function(x, i) {\r\n            updateColumn(x, i, isLeft);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Update the class list and displayOrder for a column item.\r\n     * @param {Node} element - DOM node for the column.\r\n     * @param {number} index - New index of the column in the list.\r\n     * @param {bool} isLeft - True if the column is in the left list, else false.\r\n     */\r\n    var updateColumn = function(element, index, isLeft) {\r\n        element.className = element.className.replace(/column-item-y-([0-9]*)/i, '').trim() + ' column-item-y-' + index;\r\n        var input = $.get('.column-grid-display-order', element);\r\n        if (input) {\r\n            if (isLeft) {\r\n                input.value = 0;\r\n            } else {\r\n                input.value = index + 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initialize the column selector.\r\n     */\r\n    var columnSelectorLoad = function() {\r\n        var node = $.isNode(this) ? this : this.target;\r\n        if (node) {\r\n            $.forEach($.getAll('.column-item', node), function(x) {\r\n                _draggabillies.push(new Draggabilly(x).on('dragStart', startColumnDrag).on('dragEnd', stopColumnDrag));\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy the column selector.\r\n     */\r\n    var columnSelectorUnload = function() {\r\n        $.forEach(_draggabillies, function(x) {\r\n            x.destroy();\r\n        });\r\n        _draggabillies = [];\r\n    };\r\n\r\n    /**\r\n     * Initialize datepicker.\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var datepickerLoad = function() {\r\n        var node = $.isNode(this) ? this : this.target;\r\n        if (node) {\r\n            var opts = {\r\n                altInput: true,\r\n                defaultDate: node.value,\r\n                enableTime: true,\r\n                enableSeconds: true,\r\n                time_24hr: true\r\n            };\r\n            var lang = $.get('body').getAttribute('data-lang');\r\n            if (lang !== 'en') {\r\n                // @todo update this to be able to handle languages more gracefully\r\n                opts.locale = 'Spanish';\r\n            }\r\n            flatpickr(node, opts);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy datepickers on this page.\r\n     * @this {Node} Node the event is being unbound from.\r\n     */\r\n    var datepickerUnload = function() {\r\n        if (this._flatpickr) {\r\n            this._flatpickr.destroy();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initialize colorpicker.\r\n     * @this {Node} Node the picker is being bound to.\r\n     */\r\n    var colorpickerLoad = function() {\r\n        var node = $.isNode(this) ? this : this.target;\r\n        if (node) {\r\n            // @todo probably want to replace this with a better looking picker later, but it'll do for now\r\n            var newNode = $.createNode('<div id=\"colorpickerContainer\" class=\"cp-fancy\"></div>');\r\n            node.parentNode.insertBefore(newNode, node.nextSibling);\r\n            var picker = new ColorPicker(newNode, function(hex) {\r\n                node.value = hex;\r\n                //$.style('#selectedColorSwatch', { 'background-color': hex });\r\n            });\r\n            picker.setHex(node.value);\r\n            //$.style('#selectedColorSwatch', { 'background-color': node.value });\r\n\r\n            $.on(node, 'change', function() {\r\n                picker.setHex(this.value);\r\n            });\r\n\r\n            _colorpickers.push(picker);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy colorpickers on this page.\r\n     * @this {Node} Node the event is being unbound from.\r\n     */\r\n    var colorpickerUnload = function() {\r\n        $.forEach(_colorpickers, function(x) {\r\n            x.destroy();\r\n        });\r\n        _colorpickers = [];\r\n    };\r\n\r\n    /**\r\n     * Initialize content replacer.\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var contentReplaceLoad = function() {\r\n        $.onChange(this, function() {\r\n            var params = {};\r\n            if (this.hasAttribute('data-params')) {\r\n                this.getAttribute('data-params').split(',').forEach(function(x) {\r\n                    var node = $.get(x);\r\n                    if (node) {\r\n                        params[node.id] = node.value;\r\n                    }\r\n                });\r\n            }\r\n\r\n            loading();\r\n            $.ajax({\r\n                method: this.getAttribute('data-method') || 'GET',\r\n                url: this.getAttribute('data-url'),\r\n                data: params\r\n            }, function(html) {\r\n                var node = $.createNode(html);\r\n                if (node.id) {\r\n                    var existingNode = $.get('#' + node.id);\r\n                    if (existingNode) {\r\n                        processToggles(existingNode, true);\r\n                        processToggles(node);\r\n                        existingNode.parentNode.replaceChild(node, existingNode);\r\n                    }\r\n                }\r\n                done();\r\n            }, function() {\r\n                done();\r\n            });\r\n        }, false);\r\n    };\r\n\r\n    /**\r\n     * Focus on the first error or input.\r\n     * @param {Node} node - Parent node to search in.\r\n     */\r\n    var autofocus = function(node) {\r\n        if (!node) {\r\n            return null;\r\n        }\r\n        var elems = $.getAll('input[autofocus]', node).filter($.isVisible);\r\n        if (!elems.length) {\r\n            elems = $.getAll('.form-control-error:not([type=\"hidden\"]):not([disabled]):not([readonly]), .mform-control-error:not([type=\"hidden\"]):not([disabled]):not([readonly])', node).filter($.isVisible);\r\n        }\r\n        if (!elems.length) {\r\n            elems = $.getAll('input:not([type=\"hidden\"]):not([disabled]):not([readonly]), select:not([disabled]):not([readonly])', node).filter($.isVisible);\r\n        }\r\n        if (!elems.length) {\r\n            elems = $.getAll('button:not([disabled]), a:not([disabled]), [tabindex]:not([disabled]):not([tabindex=\"-1\"])', node).filter($.isVisible);\r\n        }\r\n        if (!elems.length) {\r\n            var dlg = $.closest('.rd-dialog', node);\r\n            if (dlg) {\r\n                elems = $.getAll('.rd-close', dlg).filter($.isVisible);\r\n            }\r\n        }\r\n        if (elems.length) {\r\n            elems[0].focus();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Replace the value of the data-target node with the data-value from this. Used for providing defaults via a dropdown.\r\n     */\r\n    var inputReplace = function() {\r\n        if (this.hasAttribute('data-target') && this.hasAttribute('data-value')) {\r\n            var target = $.get(this.getAttribute('data-target'));\r\n            if (target && !$.isNull(target.value)) {\r\n                target.value = this.getAttribute('data-value');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set up click event for nav menu.\r\n     */\r\n    var menuLoad = function() {\r\n        $.on(this, 'click', function() {\r\n            $.toggleClass('body', 'toggled', null);\r\n            $.dispatch(window, new Event('resize'));\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Selectors and callback function to create events.\r\n     */\r\n    var _toggles = {\r\n        'nav-menu': {\r\n            onLoad: menuLoad,\r\n            onUnload: null\r\n        },\r\n        'dotable': {\r\n            onLoad: doTableLoad,\r\n            onUnload: doTableUnload\r\n        },\r\n        'context-help': {\r\n            onLoad: contextHelp,\r\n            onUnload: null\r\n        },\r\n        'collapsible-list': {\r\n            onLoad: function() { new CollapsibleList(this); },\r\n            onUnload: null\r\n        },\r\n        'input-replace': {\r\n            onLoad: function() { $.on(this, 'click', inputReplace); },\r\n            onUnload: null\r\n        },\r\n        'hide': {\r\n            onLoad: hide,\r\n            onUnload: null\r\n        },\r\n        'disable': {\r\n            onLoad: disable,\r\n            onUnload: null\r\n        },\r\n        'autocomplete': {\r\n            onLoad: autocompleteLoad,\r\n            onUnload: autocompleteUnload\r\n        },\r\n        'column-selector': {\r\n            onLoad: columnSelectorLoad,\r\n            onUnload: columnSelectorUnload\r\n        },\r\n        'content-replace': {\r\n            onLoad: contentReplaceLoad\r\n        },\r\n        'datepicker': {\r\n            onLoad: datepickerLoad,\r\n            onUnload: datepickerUnload\r\n        },\r\n        'chart': {\r\n            onLoad: chartLoad,\r\n            onUnload: chartUnload\r\n        },\r\n        'chart-export': {\r\n            onLoad: chartExportLoad,\r\n            onUnload: null\r\n        },\r\n        'colorpicker': {\r\n            onLoad: colorpickerLoad,\r\n            onUnload: colorpickerUnload\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Process data-toggles for a node.\r\n     * @param {Node} node - Node to add events to.\r\n     * @param {bool} isUnload - True if unloading, false if loading\r\n     */\r\n    var processToggles = function(node, isUnload) {\r\n        // process all the toggles\r\n        var elems = $.getAll('[data-toggle]', node);\r\n        if ($.matches(node, '[data-toggle]')) {\r\n            elems.push(node);\r\n        }\r\n        $.forEach(elems, function(x) {\r\n            var toggle = x.getAttribute('data-toggle');\r\n            if (_toggles[toggle]) {\r\n                var func = isUnload ? _toggles[toggle].onUnload : _toggles[toggle].onLoad;\r\n                if (func) {\r\n                    func.call(x);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Process node content adding events.\r\n     * @param {Node} node - Node to add events to.\r\n     * @param {bool} isUnload - True if unloading, false if loading\r\n     */\r\n    var processContent = function(node, isUnload) {\r\n        node = $.isEvent(node) ? null : node;\r\n        if (!node) {\r\n            return;\r\n        }\r\n        processToggles(node, isUnload);\r\n        autofocus(node);\r\n    };\r\n\r\n    /**\r\n     * Process node content handling load events.\r\n     * @param {Node} node - Node to add events to.\r\n     */\r\n    var load = function(node) {\r\n        processContent(node, false);\r\n    };\r\n\r\n    /**\r\n     * Process node content handling unload events.\r\n     * @param {Node} node - Node to remove events from.\r\n     */\r\n    var unload = function(node) {\r\n        processContent(node, true);\r\n    };\r\n\r\n    /**\r\n     * Set up content after page has loaded.\r\n     */\r\n    var pageLoaded = function() {\r\n        pjax.init();\r\n    };\r\n\r\n    /**\r\n     * Closure to set up the loading splash screen and return the node for it.\r\n     */\r\n    var _loadingDiv = (function() {\r\n        var div = $.get('#loader');\r\n        $.on(div, 'keydown', function(e) {\r\n            if ($.hasClass('#loader', 'd-none')) {\r\n                return;\r\n            }\r\n            // @todo maybe add a way to cancel a pending request using escape?\r\n\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            return false;\r\n        });\r\n        return div;\r\n    })();\r\n\r\n    /**\r\n     * Show loading indicator.\r\n     */\r\n    var loading = function() {\r\n        $.show(_loadingDiv);\r\n    };\r\n\r\n    /**\r\n     * Hide loading indicator.\r\n     */\r\n    var done = function() {\r\n        $.hide(_loadingDiv);\r\n    };\r\n\r\n    $.content = {\r\n        done: done,\r\n        focusOnClose: focusOnClose,\r\n        load: load,\r\n        loading: loading,\r\n        unload: unload\r\n    };\r\n\r\n    /**\r\n     * Run events needed for the inital page load.\r\n     */\r\n    if ($.resxLoaded) {\r\n        pageLoaded();\r\n    } else {\r\n        $.on(document, 'resxLoaded', pageLoaded);\r\n    }\r\n\r\n})(this.m, this.$, this.Alertify, this.pjax, this.doTable, this.CollapsibleList, this.Autocomplete, this.Draggabilly, this.flatpickr, this.DashChart, this.ColorPicker);\r\n","/*!\r\n * Wraps functionality for displaying/moving/resizing widgets and their contents.\r\n */\r\n(function($, Widget) {\r\n    'use strict';\r\n\r\n    var _columns = 20;\r\n    var _rows = 20;\r\n    var _currentPositions = null;\r\n    var _windowEvents = null;\r\n\r\n    /**\r\n     * Make the extra options needed to create a widget.\r\n     * @param {Node} dashboard - Dashboard node.\r\n     * @returns {Object} Object with grid and layoutCallback.\r\n     */\r\n    var makeWidgetOpts = function(dashboard) {\r\n        dashboard = $.coalesce(dashboard, $.get('#bodyContent'));\r\n        return {\r\n            grid: { columns: _columns, rows: _rows, columnWidth: dashboard.parentNode.offsetWidth / _columns, rowHeight: dashboard.parentNode.offsetHeight / _rows },\r\n            layoutCallback: $.debounce(updatePosition, 100)\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Get the config for the dashboard from the server.\r\n     */\r\n    $.on(document, 'dashboardLoad', function() {\r\n        var dash = $.get('#bodyContent');\r\n        if (!dash) {\r\n            return;\r\n        }\r\n        var json = dash.getAttribute('data-json');\r\n        if (json) {\r\n            dash.removeAttribute('data-json');\r\n\r\n            // @todo Refactor to use data attributes on the widgets instead of needing this json\r\n            var widgets = $.coalesce(JSON.parse(json), []);\r\n            var opts = makeWidgetOpts(dash);\r\n            if (widgets.length) {\r\n                widgets.forEach(function(x) { new Widget($.extend(x, opts)); });\r\n                _windowEvents = {\r\n                    keydown: checkKeyPress,\r\n                    resize: $.debounce(resizeLayout, 100)\r\n                };\r\n                $.on(window, 'keydown', _windowEvents.keydown);\r\n                $.on(window, 'resize', _windowEvents.resize);\r\n            }\r\n        }\r\n    }, true);\r\n\r\n    /**\r\n     * Destory dashboard.\r\n     */\r\n    $.on(document, 'dashboardUnload', function() {\r\n        var dash = $.get('#bodyContent.dashboard');\r\n        if (!(dash)) {\r\n            return;\r\n        }\r\n\r\n        var widgets = getWidgets();\r\n        if (widgets.length) {\r\n            // any widgets still left need to be deleted\r\n            widgets.forEach(function(x) { x.destroy(true); });\r\n        }\r\n        if (_windowEvents) {\r\n            $.off(window, 'keydown', _windowEvents.keydown);\r\n            $.off(window, 'resize', _windowEvents.resize);\r\n        }\r\n        _windowEvents = null;\r\n    }, true);\r\n\r\n    /**\r\n     * Get the widget objects for the dashboard.\r\n     * @returns {Widget[]} Array of widgets.\r\n     */\r\n    var getWidgets = function() {\r\n        return $.getAll('.grid-item').map(function(x) { return x.widget; });\r\n    };\r\n\r\n    /**\r\n     * Update widget tables on window resize.\r\n     */\r\n    var resizeLayout = function() {\r\n        var grid = makeWidgetOpts().grid;\r\n        getWidgets().forEach(function(x) {\r\n            x.updateLayout();\r\n            x.setupDraggie(null, grid);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Update widget position to avoid collisions after a resize or drag.\r\n     */\r\n    var updatePosition = function() {\r\n        var sorted = getWidgets();\r\n        sorted.sort(rectSort);\r\n\r\n        var l = sorted.length, aWidget, bWidget;\r\n        for (var i = 0; i < l; i++) {\r\n            aWidget = sorted[i];\r\n            aWidget.rect.updated = false;\r\n\r\n            for (var j = 0; j < l; j++) {\r\n                if (i === j) {\r\n                    continue;\r\n                }\r\n\r\n                bWidget = sorted[j];\r\n                if (bWidget.rect.overlaps(aWidget.rect)) {\r\n                    if (bWidget.rect.y > aWidget.rect.y) {\r\n                        // need to move down\r\n                        bWidget.setLocation(bWidget.rect.x, aWidget.rect.y + aWidget.rect.height);\r\n                    } else if (aWidget.rect.x + aWidget.rect.width + bWidget.rect.width > _columns) {\r\n                        // need to move down\r\n                        bWidget.setLocation(bWidget.rect.x, aWidget.rect.y + aWidget.rect.height);\r\n                    } else {\r\n                        // safe to move right\r\n                        bWidget.setLocation(aWidget.rect.x + aWidget.rect.width, bWidget.rect.y);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        saveDashboard();\r\n    };\r\n\r\n    /**\r\n     * Sort widgets from top left to bottom right.\r\n     * @param {Widget} a - First widget to compare.\r\n     * @param {Widget} b - Second widget to compare.\r\n     * @returns {number} Negative number if a comes first, positive number if b, zero if equal.\r\n     */\r\n    var rectSort = function(a, b) {\r\n        if (a.rect.y === b.rect.y && a.rect.x === b.rect.x) {\r\n            return a.rect.updated ? -1 : b.rect.updated ? 1 : 0;\r\n        }\r\n        if (a.rect.x === b.rect.x) {\r\n            return a.rect.y - b.rect.y;\r\n        }\r\n        return a.rect.x - b.rect.x;\r\n    };\r\n\r\n    /**\r\n     * Save dashboard settings back to server.\r\n     */\r\n    var saveDashboard = function() {\r\n        var positions = getWidgets().map(function(w) {\r\n            return {\r\n                Id: w.opts.id || 0,\r\n                Width: w.rect.width || 1,\r\n                Height: w.rect.height || 1,\r\n                X: w.rect.x || 0,\r\n                Y: w.rect.y || 0\r\n            };\r\n        });\r\n\r\n        if (_currentPositions && $.equals(_currentPositions, positions)) {\r\n            return;\r\n        }\r\n        _currentPositions = positions;\r\n\r\n        var dash = $.get('#bodyContent');\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: dash.getAttribute('data-save-url'),\r\n            data: { Widgets: positions },\r\n            block: false,\r\n            headers: {\r\n                'Content-Type': 'application/jil; charset=utf-8',\r\n                'Accept': 'application/jil'\r\n            }\r\n        }, null);\r\n    };\r\n\r\n    /**\r\n     * Toggle full screen on escape key.\r\n     * @param {Event} evt - Key press event.\r\n     */\r\n    var checkKeyPress = function(evt) {\r\n        evt = evt || window.event;\r\n        if (evt.keyCode === 27) {\r\n            getWidgets().filter(function(x) { return x.isFullscreen; }).forEach(function(x) { x.toggleFullScreen(); });\r\n        }\r\n    };\r\n})(this.$, this.Widget);\r\n"]}