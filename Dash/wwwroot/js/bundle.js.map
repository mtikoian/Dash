{"version":3,"sources":["polyfills.js","mithril.js","core.js","Alertify.js","pjax.js","helpers.js","flatpickr.js","Autocomplete.js","Chart.js","CollapsibleList.js","ColorPicker.js","DashChart.js","Draggabilly.js","Help.js","Rect.js","Tab.js","Table.js","Widget.js","Form.js","shared.js","content.js","charts.js","dashboard.js"],"names":["CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","window","prototype","Event","global","factory","exports","module","define","amd","this","finallyConstructor","callback","constructor","then","value","resolve","reason","reject","noop","Promise","fn","TypeError","_state","_handled","_value","_deferreds","doResolve","handle","self","deferred","_immediateFn","cb","onFulfilled","onRejected","ret","e","promise","push","newValue","finale","thisArg","apply","arguments","bind","length","_unhandledRejectionFn","i","len","done","ex","setTimeoutFunc","setTimeout","prom","all","arr","res","val","call","args","remaining","Array","slice","race","values","setImmediate","err","console","warn","globalNS","Error","fetch","url","options","response","_keys","headers","header","request","getAllResponseHeaders","replace","m","key","toLowerCase","ok","status","statusText","responseURL","clone","text","responseText","json","JSON","parse","blob","Blob","keys","entries","get","n","has","XMLHttpRequest","open","method","setRequestHeader","withCredentials","credentials","onload","onerror","send","body","Vnode","tag","attrs0","children","dom","attrs","domSize","state","events","instance","isEmpty","object","hasOwn","hyperscript","selector","view","start","isArray","childList","hasAttrs","classAttr","className","newAttrs","class","execSelector","selectorCache","match","classes","selectorParser","exec","type","id","attrValue","join","compileSelector","normalizeChildren","normalize","node","input","hasOwnProperty","trust","html","fragment","attrs1","children0","PromisePolyfill","executor","handler","list","shouldAbsorb","execute","callAsync","error","resolvers","rejectors","retry","executeOnce","rejectCurrent","run","runs","resolveCurrent","_instance","onRejection","next","resolveNext","rejectNext","catch","finally","total","count","consume","buildQueryString","destructure","key0","Object","toString","encodeURIComponent","FILE_PROTOCOL_REGEX","RegExp","requestService","$window","deserialize","data","extract","xhr","oncompletion","extra","finalize","complete","promise0","then0","finalizer","toUpperCase","useBody","serialize","FormData","stringify","tokens","interpolate","querystring","prefix","indexOf","assemble","aborted","_abort","abort","async","user","password","timeout","config","onreadystatechange","readyState","test","type0","cast","code","background","setCompletionCallback","_9","coreRenderer","getNameSpace","vnode","xmlns","nameSpace","checkState","original","callHook","createNodes","parent","vnodes","end","hooks","nextSibling","ns","createNode","initLifecycle","$doc","createTextNode","insertNode","createText","createHTML","createDocumentFragment","children1","firstChild","childNodes","createFragment","attrs2","is","element","createElementNS","createElement","key2","setAttr","setAttrs","contenteditable","setContentEditable","textContent","selectedIndex","normalized","setLateSelectAttrs","sentinel","create","$$reentrantLock$$","$emptyFragment","initComponent","createComponent","match1","temp","possibleParents","innerHTML","child","appendChild","updateNodes","old","removeNodes","oldStart","isOldKeyed","isKeyed","o","v","oe","ve","topSibling","oldEnd","updateNode","getNextSibling","toFragment","map","lisIndices","originalNextSibling","vnodesLength","oldIndices","li","pos","matched","getKeyMap","oldIndex","a","p","result","u","il","j","c","makeLisIndices","commonLength","removeNode","oldTag","forceVnodeUpdate","forceComponentUpdate","onbeforeupdate","shouldNotUpdate","updateLifecycle","nodeValue","updateText","updateHTML","updateFragment","removeAttr","updateAttrs","updateElement","updateComponent","count0","insertBefore","content","continuation","called","expected","onremove","removeNodeFromDOM","onbeforeremove","parentNode","removeChild","isLifecycleMethod","attr","activeElement","isFormAttribute","updateEvent","setAttributeNS","updateStyle","isAttribute","isCustomElement","setAttribute","removeAttribute","nsLastIndex","style","cssText","EventDict","removeEventListener","addEventListener","source","oninit","oncreate","onupdate","onevent","svg","math","caption","thead","tbody","tfoot","tr","th","td","colgroup","col","handleEvent","ev","handler0","target","render","active","namespace","namespaceURI","focus","setEventCallback","redrawService","throttleMock","unsubscribe","key1","index","callbacks","splice","sync","rendering","renderService","redraw","last","pending","requestAnimationFrame","elapsed","Date","now","subscribe","_12","mount","redrawService0","root","component","run0","_17","withAttr","attrName","context","currentTarget","getAttribute","_29","version","addClass","classList","add","src","isNull","cpy","x","isDate","getTime","ignoreCase","multiline","lastIndex","isNode","isObject","prop","coalesce","defValue","equals","y","isUndefined","extend","l","container","querySelector","sel","charAt","getElementById","substr","getElementsByClassName","getAll","includeContainer","querySelectorAll","matches","unshift","hasClass","contains","hasValue","getMonth","isNaN","isFunction","nodeType","nodeName","Element","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","s","on","useCapture","removeClass","remove","_toPascalKeys","obj","newObj","_toLowerKeys","_parseCss","regex","properties","_toCSS","css","$","closest","firstChar","tSelector","lowerSelector","hasAttribute","tagName","debounce","wait","timestamp","later","destroy","dispatch","dispatchEvent","findByKey","_i","forEach","subject","thisContext","iterator","hasPositiveValue","hide","maintainLayout","isEvent","isNumber","isString","isVisible","offsetParent","off","onChange","changeFn","immediate","ready","setText","show","styles","overwrite","toggleClass","toggle","toPascalKeys","_hideElement","el","removeThis","_alertify","defaultOkLabel","okLabel","defaultCancelLabel","cancelLabel","maxLogItems","promptValue","promptPlaceholder","closeLogOnClick","delay","logContainerClass","dialogs","buttons","holder","cancel","message","log","build","item","btnTxt","close","elem","dialog","onOkay","onCancel","setup","click","existing","diff","notify","setupLogContainer","elLog","btnOK","btnCancel","label","placeholder","buttonClicked","inputValue","reset","which","select","okBtn","cancelBtn","logTemplateMethod","Alertify","alert","confirm","prompt","success","str","defaultValue","dismissAll","updateResources","okay","pjax","firstRun","ignoreFileTypes","excludeClass","updateContent","newNode","title","onLoad","load","checkEvents","returnToTop","scrollTo","onUnload","unload","updateHistory","history","replaceState","location","href","pushState","loading","ajax","X-PJAX","submit","form","parseOptions","eventName","init","invoke","opt","srcElement","protocol","host","pathname","hash","split","pop","metaKey","ctrlKey","preventDefault","actionNode","action","chartLoad","chartShareLoad","chartShareUnload","chartUnload","columnSelectorLoad","dashboardLoad","dashboardUnload","datasetFormLoad","datasetFormUnload","layoutUpdate","reportLoad","reportUnload","reportShareLoad","reportShareUnload","resxLoaded","tableLoad","tableUnload","tableDestroy","tableRefresh","_ajax","onSuccess","onError","X-Requested-With","token","_checkStatus","_parse","reload","logError","resx","_requestQueue","Request","isInProcess","dequeue","filter","msg","lineNo","columnNo","stack","block","contentType","_resx","Content-Type","Accept","colors","hex2rgb","hex","r","parseInt","g","b","rgb2hex","color","rgb2hsl","rgb","h","max","Math","min","d","lib","settings","currency","symbol","format","decimal","thousand","precision","grouping","number","checkPrecision","round","abs","parseFormat","newFormat","unformat","unformatted","parseFloat","toFixed","power","pow","formatNumber","opts","usePrecision","base","mod","accounting","formatMoney","formats","neg","zero","checkCurrencyFormat","shorten","sLen","newArr","monthUpdate","arrName","i18n","month","pad","String","fecha","twoDigits","word","literal","dayNames","monthNames","monthNamesShort","dayNamesShort","amPm","DoFn","D","formatFlags","dateObj","getDate","DD","Do","getDay","dd","ddd","dddd","M","MM","MMM","MMMM","YY","getFullYear","YYYY","getHours","hh","H","HH","getMinutes","mm","getSeconds","ss","S","getMilliseconds","SS","SSS","A","ZZ","getTimezoneOffset","floor","onejan","ceil","ll","q","parseFlags","day","cent","year","hour","minute","second","millisecond","isPm","minutes","parts","timezoneOffset","masks","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","mask","i18nSettings","literals","$0","$1","shift","dateStr","isValid","dateInfo","isUtc","info","search","today","date","UTC","jsonLogic","operations","==","===","!=","!==",">",">=","<","<=","!!","truthy","!","%","in","cat","+","reduce","*","-","/","merge","concat","var","not_found","sub_props","missing","missing_some","need_count","are_missing","is_logic","logic","get_operator","get_values","current","scopedLogic","scopedData","initial","op","datum","accumulator","sub_ops","operation","uses_data","collection","array","arrayUnique","add_operation","name","rm_operation","rule_like","rule","pattern","pattern_op","rule_op","flatpickr","func","clearTimeout","compareDates","date1","date2","timeless","setHours","bool","clearNode","findParent","condition","createNumberInput","inputClassName","wrapper","numInput","arrowUp","arrowDown","FlatpickrInstance","instanceConfig","bindToInstance","setCalendarWidth","weekNumbers","showMonths","noCalendar","calendarContainer","visibility","display","daysContainer","daysWidth","days","offsetWidth","width","weekWrapper","removeProperty","updateTime","selectedDates","isKeyDown","amPM","l10n","int","step","curValue","delta","isHourElem","hourElement","isMinuteElem","minuteElement","incrementNumInput","timeWrapper","prevValue","_input","setHoursFromInputs","updateValue","_debouncedChange","hours","seconds","secondElement","ampm2military","limitMinHours","minTime","minDate","minDateHasTime","latestSelectedDateObj","maxTime","maxDate","maxDateHasTime","setHoursFromDate","setDefaultHours","defaultHour","defaultMinute","defaultSeconds","min_hr","min_minutes","max_hr","max_minutes","isMobile","time_24hr","onYearInput","changeYear","_handlers","onClick","triggerChange","triggerEvent","jumpToDate","jumpDate","jumpTo","parseDate","currentYear","currentMonth","errorHandler","timeIncrement","inputElem","createDay","dayNumber","dateIsEnabled","isEnabled","dayElement","$i","formatDate","ariaDateFormat","todayDateElem","tabIndex","isDateSelected","selectedDateElem","mode","isDateInRange","insertAdjacentHTML","getWeek","focusOnDayElem","targetNode","onMouseOver","getFirstAvailableDay","startMonth","endMonth","startIndex","endIndex","focusOnDay","offset","dayFocused","isInView","startElem","givenMonth","loopDelta","numMonthDays","changeMonth","getNextAvailableDay","buildMonthDays","firstOfMonth","firstDayOfWeek","prevMonthDays","utils","getDaysInMonth","daysInMonth","isMultiMonth","prevMonthDayClass","nextMonthDayClass","dayIndex","dayNum","dayContainer","buildDays","frag","setMonth","buildMonth","monthNavFragment","monthElement","yearInput","tabindex","yearElement","yearAriaLabel","disabled","buildMonths","monthNav","prevMonthNav","yearElements","monthElements","nextMonthNav","buildWeekdays","weekdayContainer","updateWeekdays","weekdays","shorthand","is_offset","_hidePrevMonthArrow","_hideNextMonthArrow","updateNavigationCurrentMonth","isCalendarElem","appendTo","documentClick","isOpen","inline","isCalendarElement","isInput","altInput","path","lostFocus","relatedTarget","isIgnored","ignoredFocusElements","some","clear","newYear","newYearNum","isNewYear","dateToCheck","enable","disable","parsed","from","to","onKeyDown","allowInput","allowKeydown","allowInlineKeydown","keyCode","setDate","altFormat","dateFormat","blur","isTimeObj","timeContainer","selectDate","focusAndClose","delta_1","enableTime","elems","shiftKey","hoverDate","firstElementChild","initialDate","rangeStartDate","rangeEndDate","lastDate","lastChild","containsDisabled","minRange","maxRange","t","duration","DAY","prevMonth","_loop_1","dayElem","outOfRange","isBetween","onResize","static","positionCalendar","minMaxDateSetter","inverseDateObj","currentYearElement","setupLocale","locale","l10ns","__assign","tokenRegex","K","createDateFormatter","createDateParser","customPositionElement","positionElement","_positionElement","calendarHeight","acc","offsetHeight","calendarWidth","configPos","position","configPosVertical","configPosHorizontal","inputBounds","getBoundingClientRect","distanceFromBottom","innerHeight","bottom","showOnTop","top","pageYOffset","left","pageXOffset","right","rightMost","navigator","userAgent","msMaxTouchPoints","stopPropagation","selectedDate","shouldChangeMonth","sort","showTimeInput","closeOnSelect","single","range","setSelectedDate","inputDate","dates","conjunction","rangeSeparator","parseDateRules","initEvent","monthToStr","shorthandCurrentMonth","mobileInput","mobileFormatStr","joinChar","dObj","onMonthNavClick","isPrevMonth","isNextMonth","defaultConfig","english","_bind","_setHoursFromDate","_positionCalendar","triggerChangeEvent","_createElement","_type","k","_","wasOpen","set","option","assign","CALLBACKS","boolOpts","userConfig","dataset","formats$$1","defineProperty","_enable","_disable","timeMode","enableSeconds","_minDate","_maxDate","minMaxTimeSetter","_minTime","_maxTime","arrayify","disableMobile","plugins","pluginConf","parseConfig","wrap","altInputClass","required","preloadedDate","defaultDate","_showTimeInput","setupDates","yr","prevArrow","nextArrow","__hidePrevMonthArrow","__hideNextMonthArrow","innerContainer","_a","weekAbbreviation","buildWeeks","rContainer","separator","hourInput","minuteInput","military2ampm","hourIncrement","minuteIncrement","secondInput","toggleTitle","buildTime","animate","customAppend","inputType","setupMobile","debouncedResize","DEBOUNCED_CHANGE_MS","ontouchstart","capture","clickOpens","bindEvents","isSafari","_flatpickr","nodeList","nodes","instances","do_nothing","monthNumber","months","revFormat","F","monthName","longhand","G","J","shortMonth","setSeconds","U","unixSeconds","W","weekNum","weekNumber","Y","setFullYear","Z","ISODate","setMinutes","w","toISOString","ordinal","substring","nth","scrollTitle","_b","defaults","_c","frmt","overrideLocale","givenFormat","customLocale","parsedDate","date_orig","datestr","trim","ops","matchIndex","regexStr","token_1","isBackSlash","escaped","ts","ts1","ts2","givenDate","week1","onClose","onDayCreate","onDestroy","onMonthChange","onOpen","onParseConfig","onReady","onValueUpdate","onYearChange","onPreCalendarPosition","args_1","HTMLElement","HTMLCollection","NodeList","en","localize","setDefaults","fp_incr","es","fp","Spanish","Autocomplete","addEvent","removeEvent","live","elClass","found","parentElement","minChars","offsetLeft","offsetTop","cache","sourceData","menuClass","renderItem","re","onSelect","term","that","sc","autocompleteAttr","last_val","updateSC","resize","rect","documentElement","scrollLeft","scrollTop","maxHeight","getComputedStyle","currentStyle","suggestionHeight","scrTop","selTop","blurHandler","over_sb","suggest","keydownHandler","previousSibling","keyupHandler","timer","part","focusHandler","f","Chart","require","1","getRgba","string","colorNames","scale","getHsla","alpha","getHwb","rgbaString","rgba","percentaString","hslaString","hsla","num","hexDouble","getRgb","getHsl","getAlpha","vals","hexString","rgbString","percentString","hslString","hwbString","hwb","keyword","reverseNames","5","2","convert","Color","valid","hsl","hsv","cmyk","setValues","red","lightness","whiteness","cyan","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","spaces","maxes","getValues","space","chans","capped","sname","svalues","4","3","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","hwb2rgb","wh","bl","cmyk2rgb","xyz2rgb","xyz2lab","lab2xyz","lab","y2","lab2lch","hr","atan2","PI","sqrt","lab2rgb","lch2lab","lch","cos","sin","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","conversions","Converter","arg","pair","convs","routeSpace","fspace","6","helpers","elements","Interaction","layouts","platform","Ticks","register","initialize","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","31","36","39","40","44","45","46","7","8","9","Bar","Doughnut","Line","_set","hover","scales","xAxes","categoryPercentage","barPercentage","gridLines","offsetGridLines","yAxes","axis","rectangle","borderSkipped","tooltips","yLabel","labels","datasets","datasetIndex","xLabel","controllers","bar","DatasetController","dataElementType","Rectangle","meta","getMeta","getDataset","update","ilen","rects","_ruler","getRuler","chart","custom","rectangleOptions","_xScale","getScaleForId","xAxisID","_yScale","yAxisID","_datasetIndex","_index","_model","datasetLabel","backgroundColor","valueAtIndexOrDefault","borderColor","borderWidth","updateElementGeometry","pivot","model","vscale","getValueScale","getBasePixel","horizontal","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","height","size","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacked","stacks","getDatasetMeta","isDatasetVisible","getStackCount","getStackIndex","stackCount","pixels","getPixelForValue","isNullOrUndef","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","controller","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","valueOrDefault","maxBarThickness","Infinity","draw","canvas","clipArea","ctx","chartArea","unclipArea","setHoverStyle","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","rectangleElementOptions","horizontalBar","animation","animateRotate","animateScale","legendCallback","legend","generateLabels","ds","arc","arcOpts","fillStyle","strokeStyle","lineWidth","hidden","legendItem","cutoutPercentage","rotation","circumference","tooltipItem","dataLabel","doughnut","pie","Arc","linkScales","getRingIndex","ringIndex","me","availableWidth","availableHeight","minSize","startAngle","endAngle","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","calculateTotal","each","animationOpts","centerX","centerY","calculateCircumference","arcs","hoverWidth","_chart","showLines","spanGaps","lineEnabled","showLine","line","datasetElementType","Point","points","lineElementOptions","tension","lineTension","_scale","_children","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","fill","steppedLine","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","point","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","yScale","xScale","pointOptions","radius","pointRadius","hitRadius","pointHitRadius","NaN","calculatePointY","skip","pointStyle","dsMeta","sumPos","sumNeg","stackedRightValue","Number","rightValue","capControlPoint","pt","controlPoints","area","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","controlPointNextY","capBezierPoints","hoverRadius","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","easing","onProgress","onComplete","Animation","currentStep","numSteps","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","addAnimation","lazy","animating","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","framesToDrop","advance","endTime","positionIsHorizontal","types","construct","configMerge","initConfig","acquireContext","uid","aspectRatio","_bufferedRender","retinaScale","devicePixelRatio","responsive","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","maintainAspectRatio","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","responsiveAnimationDuration","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","items","updated","dtype","dposition","isDefault","scaleType","scaleClass","scaleService","getScaleConstructor","mergeTicksOptions","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","ControllerClass","resetElements","tooltip","newOptions","removeBox","_options","updateConfig","_invalidate","_data","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","effects","stepDecimal","easingValue","transition","boxes","box","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","modes","getElementsAtEvent","intersect","getElementsAtXAxis","getElementsAtEventForMode","getDatasetAtEvent","_meta","generateLegend","unbindEvents","releaseContext","toBase64Image","toDataURL","Tooltip","_chartInstance","listeners","_listeners","listener","eventHandler","updateHoverStyle","enabled","changed","_start","bufferedRequest","animationDuration","hoverOptions","onHover","native","arrayEquals","Controller","unlistenArrayEvents","stub","_chartjs","arrayEvents","addElements","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","configurable","enumerable","listenArrayEvents","resyncElements","elementOpts","numMeta","numData","insertElements","onDataPush","onDataPop","onDataShift","onDataSplice","onDataUnshift","inherits","scope","configuration","_view","ease","actual","origin","c0","c1","isFinite","tooltipPosition","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","constrainedNode","constrainedContainer","hasCNode","hasCContainer","infinity","POSITIVE_INFINITY","merger","tval","sval","scaleMerge","getScaleDefaults","_merger","slen","where","filterCallback","filtered","findNextWhere","arrayToSearch","currentItem","findPreviousWhere","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","log10","exponent","LOG10E","powerOf10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distance","distanceBetweenPoints","pt1","pt2","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","alphaK","betaK","tauK","squaredMagnitude","deltaX","loop","niceNum","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","getRelativePosition","mouseX","mouseY","originalEvent","boundingRect","touches","clientX","clientY","paddingLeft","getStyle","paddingTop","paddingRight","paddingBottom","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","clientWidth","cw","clientHeight","ch","property","getPropertyValue","forceRatio","pixelRatio","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","defaultColor","colorValue","CanvasPattern","parseVisibleItems","jlen","getIntersectItems","inRange","getNearestItems","distanceMetric","minDistance","nearestItems","getCenterPoint","getDistanceMetricForAxis","useX","useY","deltaY","indexMode","x-axis","nearest","getArea","intersectsItem","inXRange","inYRange","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","layout","padding","filterByPosition","sortByWeight","reverse","_tmpIndex_","v0","v1","addBox","fullWidth","layoutItem","configure","props","fitBox","minBoxSize","minBoxSizes","minBox","scaleMargin","totalLeftBoxesWidth","maxHorizontalLeftPadding","totalRightBoxesWidth","maxHorizontalRightPadding","chartWidth","maxChartAreaWidth","chartHeight","maxChartAreaHeight","placeBox","leftPadding","rightPadding","totalTopBoxesHeight","layoutOptions","toPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","totalBottomBoxesHeight","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","_plugins","_cacheId","plugin","unregister","idx","hook","descriptor","descriptors","$plugins","labelsFromTicks","getLineValue","lineValue","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","formatters","minor","major","computeTextSize","tick","parseFontOptions","globalDefaults","fontSize","family","parseLineHeight","toLineHeight","Scale","_ticks","beforeUpdate","maxWidth","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","rawValue","getLabelForIndex","getValueForPixel","pixel","finalVal","getPixelForDecimal","valueOffset","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","optionMajorTicks","isRotated","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","zeroLineIndex","tx1","ty1","tx2","ty2","x1","y1","x2","labelX","labelY","textAlign","textBaseline","labelYOffset","xLineValue","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","save","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","constructors","registerScaleType","scaleConstructor","scaleDefaults","updateScaleDefaults","additions","linear","tickValue","logDelta","tickString","numDecimal","logarithmic","remain","toExponential","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","createTooltipItem","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","dataPoints","vm","paddingAndSize","radiusAndPadding","getBackgroundPoint","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","quadraticCurveTo","closePath","hasTooltipContent","average","eventPosition","nearestElement","tp","27","inLabelRange","chartX","chartY","pointRelativePosition","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","28","currentVM","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","29","xRange","drawPoint","30","isVertical","getBarBounds","halfWidth","halfHeight","cornerAt","corners","startCorner","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corner","bounds","32","clearRect","roundedRect","rx","ry","edgeLength","xOffset","yOffset","SQRT2","leftX","topY","sideSize","drawImage","clip","flip","bezierCurveTo","drawRoundedRectangle","33","loopable","a0","a1","klen","_mergerIf","mergeIf","sources","setFn","extensions","ChartElement","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","34","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","35","inputs","37","getContext","38","readUsedSize","eventListenerOptions","nativeEvent","addResizeListener","expando","EXPANDO_KEY","resizer","cls","CSS_PREFIX","expand","shrink","_reset","onScroll","createResizer","ticking","throttled","proxy","renderProxy","animationName","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","reflow","CSS_RENDER_MONITOR","watchForRender","removeResizeListener","unwatchForRender","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","supports","passive","_enabled","renderHeight","renderWidth","displayWidth","displayHeight","initCanvas","proxies","fromNativeEvent","basic","implementation","filler","41","42","43","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","getBasePosition","resolveTarget","propagate","visited","visible","createMapper","mappers","isDrawable","drawArea","curve0","curve1","len0","len1","boundary","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","span","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","createNewLegendAndAttach","legendOpts","Legend","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","_element","beforeInit","afterEvent","createNewTitleBlockAndAttach","titleOpts","Title","titleBlock","textSize","titleX","titleY","titleFont","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","LinearScale","LinearScaleBase","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","tickFontSize","handleDirectionalChanges","innerDimension","ticksAsNumbers","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","stepSize","fixedStepSize","generationOptions","dataRange","spacing","niceRange","niceMin","niceMax","numSpaces","generateTicks","CollapsibleList","lis","createClickListener","checked","pi","checkedRelative","relatives","forceOpen","uls","ColorPicker","ESC","trigger","showEditor","setRed","setColor","setGreen","setBlue","onkeydown","role","onclick","oninput","DashChart","showLegend","dataFn","errorFn","toggleExportFn","randomWithin","random","randomColor","randomColors","cnt","parseColor","ranges","rows","yTitle","xType","currencyFormat","chartType","isRadial","yType","chartData","getSize","getStyleSize","isSetup","div","borderStyle","boxSizing","isBoxSizeOuter","innerWidth","outerWidth","outerHeight","measurementsLength","measurements","getZeroSize","isBorderBox","measurement","paddingWidth","paddingHeight","marginWidth","marginLeft","marginRight","marginHeight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderHeight","borderTopWidth","borderBottomWidth","isBorderBoxSizeOuter","styleWidth","styleHeight","EvEmitter","_events","emitEvent","Unipointer","proto","bindStartEvent","_bindStartEvent","unbindStartEvent","isBind","bindMethod","pointerEnabled","msPointerEnabled","getTouch","pointerIdentifier","onmousedown","button","_pointerDown","changedTouches","onMSPointerDown","onpointerdown","pointer","isPointerDown","pointerId","identifier","pointerDown","_bindPostStartEvents","postStartEvents","mousedown","MSPointerDown","_boundPointerEvents","_unbindPostStartEvents","onmousemove","_pointerMove","onMSPointerMove","onpointermove","ontouchmove","touch","pointerMove","onmouseup","_pointerUp","onMSPointerUp","onpointerup","ontouchend","_pointerDone","pointerUp","pointerDone","onMSPointerCancel","onpointercancel","_pointerCancel","ontouchcancel","pointerCancel","getPointerPoint","pageX","pageY","Unidragger","bindHandles","_bindHandles","unbindHandles","binderExtra","handles","_dragPointerDown","focused","pointerDownPoint","canPreventDefaultOnPointerDown","moveVector","_dragPointerMove","_dragMove","movePoint","isDragging","hasDragStarted","_dragStart","_dragPointerUp","_dragEnd","_staticClick","dragStartPoint","isPreventingClicks","dragStart","dragMove","dragEnd","isIgnoringMouseUp","staticClick","Draggabilly","_create","applyGrid","grid","applyMinZero","drag","lastTime","currTime","timeToCall","transformProperty","transform","positionValues","relative","absolute","fixed","_getPosition","startPoint","dragPoint","startPosition","setHandles","_getPositionCoord","_addTransformPosition","styleSide","measure","parentSize","matrixValues","xIndex","translateX","translateY","measureContainment","setLeftTop","containment","elemSize","containerSize","elemRect","containerRect","borderSizeX","borderSizeY","relativeStartPosition","containSize","dragX","dragY","gridX","gridY","containDrag","minZero","positionDrag","Help","showHelp","focusOnClose","Rect","overlaps","thisRight","thisBottom","rectRight","rectBottom","Tab","tab","getContent","getTab","activeTabs","links","Table","pageOptions","store","storeSettings","myKey","storeUrl","localStorage","storeFunction","requestUsePascalCase","requestParams","ItemsPerPage","itemsPerPage","CurrentStartItem","currentStartItem","SearchQuery","searchQuery","Width","Sorting","sorting","Columns","columns","field","processData","dataCallback","intColumns","dateColumns","dataDateFormat","currencyColumns","filteredTotal","filterResults","loadData","loadingError","requestMethod","buildParams","errorCallback","refresh","dir","StartItem","Items","Query","Sort","startItem","query","setCurrentStartItem","setItemsPerPage","setSearchQuery","runSearch","requestTimer","loadAllData","results","filterArray","pageTotal","moveToPage","changePage","page","changeSort","fieldName","dataType","getSelection","removeAllRanges","compare","defaultCompare","setLayout","layoutSet","table","tableLayout","tableHeaderRow","tHead","hWidth","tWidth","cells","cWidth","pixelToFloat","colGroup","scroll","onHeaderMouseDown","inResizeArea","cellEl","stopImmediatePropagation","resizeContext","colIndex","cellIndex","initX","scrWidth","initTblWidth","initColWidth","layoutTimer","onMouseMove","newStyle","newColWidth","columnMinWidth","onMouseUp","newTblWidth","tblX","clientLeft","previousElementSibling","touchHandler","mouseEvent","simulatedEvent","totalDistance","lastSeenAt","initMouseEvent","screenX","screenY","getFieldValue","getDisplayValue","displayCurrencyFormat","displayDateFormat","aa","bb","tableHeaders","sortable","arrowAttrs","editable","ontableRefresh","ontableDestroy","onlayoutUpdate","data-unload-event","data-toggle","searchable","resources","perPage","onchange","onscroll","colGroups","tableBodyView","tableFooterView","tableCellView","column","columnRenderer","colspan","tryAgain","noData","row","currentPage","pageDropdown","optionList","firstPage","previousPage","nextPage","lastPage","showing","move","up","storeRequestMethod","link","attributes","isBtn","icon","Widget","getContainer","widget","isData","refreshSeconds","baseUrl","interval","isFullscreen","initDate","dragMargin","tableOpts","Id","reportId","reportRowLimit","sortColumns","storageFunction","reportWidth","processJson","setupDraggie","setInterval","tableNode","forceRefresh","toggleFullScreen","moveDraggie","columnWidth","rowHeight","stopDrag","resizeDraggie","initResize","stopResize","setLocation","layoutCallback","setSize","updatedDate","updateDate","showMsg","toLocaleTimeString","clearInterval","buildClassList","totalDestruction","fullScreenIcon","Form","records","wantsHelp","appendRecord","deleteRecord","confirmDelete","confirmDeleteAll","areYouSure","moveUp","moveDown","help","addedCount","targetVal","setter","addRecord","newRecord","deleteFn","afterDeleteFn","deleteAllRecords","hasRecords","keyInput","withHelp","helpBody","innerContent","withError","requirePositive","withDisabled","isDisabled","withChecked","isChecked","withOptions","selectedValue","valueKey","textKey","selected","buttonView","includeMove","btns","BaseDetails","columnList","allowEdit","dataSql","setSql","dataError","countSql","countError","sql","getColumnList","ShareForm","formOpts","userId","roleId","shares","users","userList","roles","roleList","formName","userSelectAttr","share","roleSelectAttr","autocompletes","draggabillies","conditionallyDisable","startColumnDrag","stopColumnDrag","newPos","leftItems","columnSort","rightItems","updateColumnList","updateColumn","inputReplace","_toggles","nav-menu","context-help","collapsible-list","input-replace","autocomplete","column-selector","content-replace","existingNode","processToggles","replaceChild","datepicker","isUnload","processContent","dlg","autofocus","pageLoaded","_loadingDiv","RangeForm","isExpanded","xAxisColumnId","yAxisColumnId","aggregatorId","dateIntervalId","displayOrder","chartId","filterTypes","saveRangesUrl","dateIntervals","aggregators","reports","processJsonFn","canExportFn","saveRanges","Ranges","makeChart","chartContent","dashChart","exportChart","chartContainer","setReport","toggleExpanded","record","rangeView","report","xColumns","columnId","yColumns","dateIntervalDisabled","inputsDisabled","filterTypeId","ChartDetails","enableExport","rangeForm","canExport","toggleExport","_charts","_shares","_currentPositions","_windowEvents","makeWidgetOpts","dashboard","updatePosition","dash","widgets","keydown","checkKeyPress","resizeLayout","getWidgets","sorted","rectSort","aWidget","bWidget","saveDashboard","positions","Height","X","Widgets"],"mappings":"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","file":"bundle.js","sourcesContent":["/*!\r\n * CustomEvent polyfill\r\n * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\r\n */\r\n(function() {\r\n    if (typeof window.CustomEvent === 'function') return false;\r\n\r\n    function CustomEvent(event, params) {\r\n        params = params || { bubbles: false, cancelable: false, detail: undefined };\r\n        var evt = document.createEvent('CustomEvent');\r\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n        return evt;\r\n    }\r\n\r\n    CustomEvent.prototype = window.Event.prototype;\r\n    window.CustomEvent = CustomEvent;\r\n})();\r\n\r\n/*!\r\n * Promise polyfill\r\n * https://github.com/taylorhakes/promise-polyfill\r\n */\r\n/* global global, setImmediate */\r\n(function(global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory() :\r\n        typeof define === 'function' && define.amd ? define(factory) :\r\n            (factory());\r\n}(this, (function() {\r\n    'use strict';\r\n\r\n    /**\r\n     * @this {Promise}\r\n     */\r\n    function finallyConstructor(callback) {\r\n        var constructor = this.constructor;\r\n        return this.then(\r\n            function(value) {\r\n                return constructor.resolve(callback()).then(function() {\r\n                    return value;\r\n                });\r\n            },\r\n            function(reason) {\r\n                return constructor.resolve(callback()).then(function() {\r\n                    return constructor.reject(reason);\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    // Store setTimeout reference so promise-polyfill will be unaffected by\r\n    // other code modifying setTimeout (like sinon.useFakeTimers())\r\n    var setTimeoutFunc = setTimeout;\r\n\r\n    function noop() { }\r\n\r\n    // Polyfill for Function.prototype.bind\r\n    function bind(fn, thisArg) {\r\n        return function() {\r\n            fn.apply(thisArg, arguments);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Function} fn\r\n     */\r\n    function Promise(fn) {\r\n        if (!(this instanceof Promise))\r\n            throw new TypeError('Promises must be constructed via new');\r\n        if (typeof fn !== 'function') throw new TypeError('not a function');\r\n        /** @type {!number} */\r\n        this._state = 0;\r\n        /** @type {!boolean} */\r\n        this._handled = false;\r\n        /** @type {Promise|undefined} */\r\n        this._value = undefined;\r\n        /** @type {!Array<!Function>} */\r\n        this._deferreds = [];\r\n\r\n        doResolve(fn, this);\r\n    }\r\n\r\n    function handle(self, deferred) {\r\n        while (self._state === 3) {\r\n            self = self._value;\r\n        }\r\n        if (self._state === 0) {\r\n            self._deferreds.push(deferred);\r\n            return;\r\n        }\r\n        self._handled = true;\r\n        Promise._immediateFn(function() {\r\n            var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\r\n            if (cb === null) {\r\n                (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\r\n                return;\r\n            }\r\n            var ret;\r\n            try {\r\n                ret = cb(self._value);\r\n            } catch (e) {\r\n                reject(deferred.promise, e);\r\n                return;\r\n            }\r\n            resolve(deferred.promise, ret);\r\n        });\r\n    }\r\n\r\n    function resolve(self, newValue) {\r\n        try {\r\n            // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\r\n            if (newValue === self)\r\n                throw new TypeError('A promise cannot be resolved with itself.');\r\n            if (\r\n                newValue &&\r\n                (typeof newValue === 'object' || typeof newValue === 'function')\r\n            ) {\r\n                var then = newValue.then;\r\n                if (newValue instanceof Promise) {\r\n                    self._state = 3;\r\n                    self._value = newValue;\r\n                    finale(self);\r\n                    return;\r\n                } else if (typeof then === 'function') {\r\n                    doResolve(bind(then, newValue), self);\r\n                    return;\r\n                }\r\n            }\r\n            self._state = 1;\r\n            self._value = newValue;\r\n            finale(self);\r\n        } catch (e) {\r\n            reject(self, e);\r\n        }\r\n    }\r\n\r\n    function reject(self, newValue) {\r\n        self._state = 2;\r\n        self._value = newValue;\r\n        finale(self);\r\n    }\r\n\r\n    function finale(self) {\r\n        if (self._state === 2 && self._deferreds.length === 0) {\r\n            Promise._immediateFn(function() {\r\n                if (!self._handled) {\r\n                    Promise._unhandledRejectionFn(self._value);\r\n                }\r\n            });\r\n        }\r\n\r\n        for (var i = 0, len = self._deferreds.length; i < len; i++) {\r\n            handle(self, self._deferreds[i]);\r\n        }\r\n        self._deferreds = null;\r\n    }\r\n\r\n    /**\r\n     * @constructor\r\n     */\r\n    function Handler(onFulfilled, onRejected, promise) {\r\n        this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\r\n        this.onRejected = typeof onRejected === 'function' ? onRejected : null;\r\n        this.promise = promise;\r\n    }\r\n\r\n    /**\r\n     * Take a potentially misbehaving resolver function and make sure\r\n     * onFulfilled and onRejected are only called once.\r\n     *\r\n     * Makes no guarantees about asynchrony.\r\n     */\r\n    function doResolve(fn, self) {\r\n        var done = false;\r\n        try {\r\n            fn(\r\n                function(value) {\r\n                    if (done) return;\r\n                    done = true;\r\n                    resolve(self, value);\r\n                },\r\n                function(reason) {\r\n                    if (done) return;\r\n                    done = true;\r\n                    reject(self, reason);\r\n                }\r\n            );\r\n        } catch (ex) {\r\n            if (done) return;\r\n            done = true;\r\n            reject(self, ex);\r\n        }\r\n    }\r\n\r\n    Promise.prototype['catch'] = function(onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n\r\n    Promise.prototype.then = function(onFulfilled, onRejected) {\r\n        // @ts-ignore\r\n        var prom = new this.constructor(noop);\r\n\r\n        handle(this, new Handler(onFulfilled, onRejected, prom));\r\n        return prom;\r\n    };\r\n\r\n    Promise.prototype['finally'] = finallyConstructor;\r\n\r\n    Promise.all = function(arr) {\r\n        return new Promise(function(resolve, reject) {\r\n            if (!arr || typeof arr.length === 'undefined')\r\n                throw new TypeError('Promise.all accepts an array');\r\n            var args = Array.prototype.slice.call(arr);\r\n            if (args.length === 0) return resolve([]);\r\n            var remaining = args.length;\r\n\r\n            function res(i, val) {\r\n                try {\r\n                    if (val && (typeof val === 'object' || typeof val === 'function')) {\r\n                        var then = val.then;\r\n                        if (typeof then === 'function') {\r\n                            then.call(\r\n                                val,\r\n                                function(val) {\r\n                                    res(i, val);\r\n                                },\r\n                                reject\r\n                            );\r\n                            return;\r\n                        }\r\n                    }\r\n                    args[i] = val;\r\n                    if (--remaining === 0) {\r\n                        resolve(args);\r\n                    }\r\n                } catch (ex) {\r\n                    reject(ex);\r\n                }\r\n            }\r\n\r\n            for (var i = 0; i < args.length; i++) {\r\n                res(i, args[i]);\r\n            }\r\n        });\r\n    };\r\n\r\n    Promise.resolve = function(value) {\r\n        if (value && typeof value === 'object' && value.constructor === Promise) {\r\n            return value;\r\n        }\r\n\r\n        return new Promise(function(resolve) {\r\n            resolve(value);\r\n        });\r\n    };\r\n\r\n    Promise.reject = function(value) {\r\n        return new Promise(function(resolve, reject) {\r\n            reject(value);\r\n        });\r\n    };\r\n\r\n    Promise.race = function(values) {\r\n        return new Promise(function(resolve, reject) {\r\n            for (var i = 0, len = values.length; i < len; i++) {\r\n                values[i].then(resolve, reject);\r\n            }\r\n        });\r\n    };\r\n\r\n    // Use polyfill for setImmediate for performance gains\r\n    Promise._immediateFn =\r\n        (typeof setImmediate === 'function' &&\r\n            function(fn) {\r\n                setImmediate(fn);\r\n            }) ||\r\n        function(fn) {\r\n            setTimeoutFunc(fn, 0);\r\n        };\r\n\r\n    Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\r\n        if (typeof console !== 'undefined' && console) {\r\n            console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\r\n        }\r\n    };\r\n\r\n    /** @suppress {undefinedVars} */\r\n    var globalNS = (function() {\r\n        // the only reliable means to get the global object is\r\n        // `Function('return this')()`\r\n        // However, this causes CSP violations in Chrome apps.\r\n        if (typeof self !== 'undefined') {\r\n            return self;\r\n        }\r\n        if (typeof window !== 'undefined') {\r\n            return window;\r\n        }\r\n        if (typeof global !== 'undefined') {\r\n            return global;\r\n        }\r\n        throw new Error('unable to locate global object');\r\n    })();\r\n\r\n    if (!('Promise' in globalNS)) {\r\n        globalNS['Promise'] = Promise;\r\n    } else if (!globalNS.Promise.prototype['finally']) {\r\n        globalNS.Promise.prototype['finally'] = finallyConstructor;\r\n    }\r\n})));\r\n\r\n/*!\r\n * Fetch polyfill\r\n * https://github.com/developit/unfetch\r\n */\r\n(function() {\r\n    if (typeof window.fetch === 'function') return false;\r\n\r\n    window.fetch = function(url, options) {\r\n        options = options || {};\r\n        return new Promise(function(resolve, reject) {\r\n            var request = new XMLHttpRequest();\r\n\r\n            request.open(options.method || 'get', url, true);\r\n\r\n            for (var i in options.headers) {\r\n                request.setRequestHeader(i, options.headers[i]);\r\n            }\r\n\r\n            request.withCredentials = options.credentials == 'include';\r\n\r\n            request.onload = function() {\r\n                resolve(response());\r\n            };\r\n\r\n            request.onerror = reject;\r\n\r\n            request.send(options.body);\r\n\r\n            function response() {\r\n                var _keys = [],\r\n                    all = [],\r\n                    headers = {},\r\n                    header = void 0;\r\n\r\n                request.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm, function(m, key, value) {\r\n                    _keys.push(key = key.toLowerCase());\r\n                    all.push([key, value]);\r\n                    header = headers[key];\r\n                    headers[key] = header ? header + ',' + value : value;\r\n                });\r\n\r\n                return {\r\n                    ok: (request.status / 100 | 0) == 2, // 200-299\r\n                    status: request.status,\r\n                    statusText: request.statusText,\r\n                    url: request.responseURL,\r\n                    clone: response,\r\n                    text: function text() {\r\n                        return Promise.resolve(request.responseText);\r\n                    },\r\n                    json: function json() {\r\n                        return Promise.resolve(request.responseText).then(JSON.parse);\r\n                    },\r\n                    blob: function blob() {\r\n                        return Promise.resolve(new Blob([request.response]));\r\n                    },\r\n                    headers: {\r\n                        keys: function keys() {\r\n                            return _keys;\r\n                        },\r\n                        entries: function entries() {\r\n                            return all;\r\n                        },\r\n                        get: function get(n) {\r\n                            return headers[n.toLowerCase()];\r\n                        },\r\n                        has: function has(n) {\r\n                            return n.toLowerCase() in headers;\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        });\r\n    };\r\n})();\r\n","/*!\r\n * Mithril JS Framework\r\n * https://github.com/lhorie/mithril.js/\r\n */\r\n/* eslint-disable */\r\n; (function() {\r\n    \"use strict\"\r\n    function Vnode(tag, key, attrs0, children, text, dom) {\r\n        return { tag: tag, key: key, attrs: attrs0, children: children, text: text, dom: dom, domSize: undefined, state: undefined, events: undefined, instance: undefined }\r\n    }\r\n    Vnode.normalize = function(node) {\r\n        if (Array.isArray(node)) return Vnode(\"[\", undefined, undefined, Vnode.normalizeChildren(node), undefined, undefined)\r\n        if (node != null && typeof node !== \"object\") return Vnode(\"#\", undefined, undefined, node === false ? \"\" : node, undefined, undefined)\r\n        return node\r\n    }\r\n    Vnode.normalizeChildren = function normalizeChildren(input) {\r\n        var children = []\r\n        for (var i = 0; i < input.length; i++) {\r\n            children[i] = Vnode.normalize(input[i])\r\n        }\r\n        return children\r\n    }\r\n    var selectorParser = /(?:(^|#|\\.)([^#\\.\\[\\]]+))|(\\[(.+?)(?:\\s*=\\s*(\"|'|)((?:\\\\[\"'\\]]|.)*?)\\5)?\\])/g\r\n    var selectorCache = {}\r\n    var hasOwn = {}.hasOwnProperty\r\n    function isEmpty(object) {\r\n        for (var key in object) if (hasOwn.call(object, key)) return false\r\n        return true\r\n    }\r\n    function compileSelector(selector) {\r\n        var match, tag = \"div\", classes = [], attrs = {}\r\n        while (match = selectorParser.exec(selector)) {\r\n            var type = match[1], value = match[2]\r\n            if (type === \"\" && value !== \"\") tag = value\r\n            else if (type === \"#\") attrs.id = value\r\n            else if (type === \".\") classes.push(value)\r\n            else if (match[3][0] === \"[\") {\r\n                var attrValue = match[6]\r\n                if (attrValue) attrValue = attrValue.replace(/\\\\([\"'])/g, \"$1\").replace(/\\\\\\\\/g, \"\\\\\")\r\n                if (match[4] === \"class\") classes.push(attrValue)\r\n                else attrs[match[4]] = attrValue === \"\" ? attrValue : attrValue || true\r\n            }\r\n        }\r\n        if (classes.length > 0) attrs.className = classes.join(\" \")\r\n        return selectorCache[selector] = { tag: tag, attrs: attrs }\r\n    }\r\n    function execSelector(state, attrs, children) {\r\n        var hasAttrs = false, childList, text\r\n        var classAttr = hasOwn.call(attrs, \"class\") ? \"class\" : \"className\"\r\n        var className = attrs[classAttr]\r\n        if (!isEmpty(state.attrs) && !isEmpty(attrs)) {\r\n            var newAttrs = {}\r\n            for (var key in attrs) {\r\n                if (hasOwn.call(attrs, key)) {\r\n                    newAttrs[key] = attrs[key]\r\n                }\r\n            }\r\n            attrs = newAttrs\r\n        }\r\n        for (var key in state.attrs) {\r\n            if (hasOwn.call(state.attrs, key) && key !== \"className\" && !hasOwn.call(attrs, key)) {\r\n                attrs[key] = state.attrs[key]\r\n            }\r\n        }\r\n        if (className != null || state.attrs.className != null) attrs.className =\r\n            className != null\r\n                ? state.attrs.className != null\r\n                    ? state.attrs.className + \" \" + className\r\n                    : className\r\n                : state.attrs.className != null\r\n                    ? state.attrs.className\r\n                    : null\r\n        if (classAttr === \"class\") attrs.class = null\r\n        for (var key in attrs) {\r\n            if (hasOwn.call(attrs, key) && key !== \"key\") {\r\n                hasAttrs = true\r\n                break\r\n            }\r\n        }\r\n        if (Array.isArray(children) && children.length === 1 && children[0] != null && children[0].tag === \"#\") {\r\n            text = children[0].children\r\n        } else {\r\n            childList = children\r\n        }\r\n        return Vnode(state.tag, attrs.key, hasAttrs ? attrs : null, childList, text)\r\n    }\r\n    function hyperscript(selector) {\r\n        if (selector == null || typeof selector !== \"string\" && typeof selector !== \"function\" && typeof selector.view !== \"function\") {\r\n            throw Error(\"The selector must be either a string or a component.\");\r\n        }\r\n        var attrs = arguments[1], start = 2, children\r\n        if (attrs == null) {\r\n            attrs = {}\r\n        } else if (typeof attrs !== \"object\" || attrs.tag != null || Array.isArray(attrs)) {\r\n            attrs = {}\r\n            start = 1\r\n        }\r\n        if (arguments.length === start + 1) {\r\n            children = arguments[start]\r\n            if (!Array.isArray(children)) children = [children]\r\n        } else {\r\n            children = []\r\n            while (start < arguments.length) children.push(arguments[start++])\r\n        }\r\n        if (typeof selector === \"string\") {\r\n            return execSelector(selectorCache[selector] || compileSelector(selector), attrs, Vnode.normalizeChildren(children))\r\n        } else {\r\n            return Vnode(selector, attrs.key, attrs, children)\r\n        }\r\n    }\r\n    hyperscript.trust = function(html) {\r\n        if (html == null) html = \"\"\r\n        return Vnode(\"<\", undefined, undefined, html, undefined, undefined)\r\n    }\r\n    hyperscript.fragment = function(attrs1, children0) {\r\n        return Vnode(\"[\", attrs1.key, attrs1, Vnode.normalizeChildren(children0), undefined, undefined)\r\n    }\r\n    var m = hyperscript\r\n    /** @constructor */\r\n    var PromisePolyfill = function(executor) {\r\n        if (!(this instanceof PromisePolyfill)) throw new Error(\"Promise must be called with `new`\")\r\n        if (typeof executor !== \"function\") throw new TypeError(\"executor must be a function\")\r\n        var self = this, resolvers = [], rejectors = [], resolveCurrent = handler(resolvers, true), rejectCurrent = handler(rejectors, false)\r\n        var instance = self._instance = { resolvers: resolvers, rejectors: rejectors }\r\n        var callAsync = typeof setImmediate === \"function\" ? setImmediate : setTimeout\r\n        function handler(list, shouldAbsorb) {\r\n            return function execute(value) {\r\n                var then\r\n                try {\r\n                    if (shouldAbsorb && value != null && (typeof value === \"object\" || typeof value === \"function\") && typeof (then = value.then) === \"function\") {\r\n                        if (value === self) throw new TypeError(\"Promise can't be resolved w/ itself\")\r\n                        executeOnce(then.bind(value))\r\n                    }\r\n                    else {\r\n                        callAsync(function() {\r\n                            if (!shouldAbsorb && list.length === 0) console.error(\"Possible unhandled promise rejection:\", value)\r\n                            for (var i = 0; i < list.length; i++) list[i](value)\r\n                            resolvers.length = 0, rejectors.length = 0\r\n                            instance.state = shouldAbsorb\r\n                            instance.retry = function() { execute(value) }\r\n                        })\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    rejectCurrent(e)\r\n                }\r\n            }\r\n        }\r\n        function executeOnce(then) {\r\n            var runs = 0\r\n            function run(fn) {\r\n                return function(value) {\r\n                    if (runs++ > 0) return\r\n                    fn(value)\r\n                }\r\n            }\r\n            var onerror = run(rejectCurrent)\r\n            try { then(run(resolveCurrent), onerror) } catch (e) { onerror(e) }\r\n        }\r\n        executeOnce(executor)\r\n    }\r\n    PromisePolyfill.prototype.then = function(onFulfilled, onRejection) {\r\n        var self = this, instance = self._instance\r\n        function handle(callback, list, next, state) {\r\n            list.push(function(value) {\r\n                if (typeof callback !== \"function\") next(value)\r\n                else try { resolveNext(callback(value)) } catch (e) { if (rejectNext) rejectNext(e) }\r\n            })\r\n            if (typeof instance.retry === \"function\" && state === instance.state) instance.retry()\r\n        }\r\n        var resolveNext, rejectNext\r\n        var promise = new PromisePolyfill(function(resolve, reject) { resolveNext = resolve, rejectNext = reject })\r\n        handle(onFulfilled, instance.resolvers, resolveNext, true), handle(onRejection, instance.rejectors, rejectNext, false)\r\n        return promise\r\n    }\r\n    PromisePolyfill.prototype.catch = function(onRejection) {\r\n        return this.then(null, onRejection)\r\n    }\r\n    PromisePolyfill.prototype.finally = function(callback) {\r\n        return this.then(\r\n            function(value) {\r\n                return PromisePolyfill.resolve(callback()).then(function() {\r\n                    return value\r\n                })\r\n            },\r\n            function(reason) {\r\n                return PromisePolyfill.resolve(callback()).then(function() {\r\n                    return PromisePolyfill.reject(reason);\r\n                })\r\n            }\r\n        )\r\n    }\r\n    PromisePolyfill.resolve = function(value) {\r\n        if (value instanceof PromisePolyfill) return value\r\n        return new PromisePolyfill(function(resolve) { resolve(value) })\r\n    }\r\n    PromisePolyfill.reject = function(value) {\r\n        return new PromisePolyfill(function(resolve, reject) { reject(value) })\r\n    }\r\n    PromisePolyfill.all = function(list) {\r\n        return new PromisePolyfill(function(resolve, reject) {\r\n            var total = list.length, count = 0, values = []\r\n            if (list.length === 0) resolve([])\r\n            else for (var i = 0; i < list.length; i++) {\r\n                (function(i) {\r\n                    function consume(value) {\r\n                        count++\r\n                        values[i] = value\r\n                        if (count === total) resolve(values)\r\n                    }\r\n                    if (list[i] != null && (typeof list[i] === \"object\" || typeof list[i] === \"function\") && typeof list[i].then === \"function\") {\r\n                        list[i].then(consume, reject)\r\n                    }\r\n                    else consume(list[i])\r\n                })(i)\r\n            }\r\n        })\r\n    }\r\n    PromisePolyfill.race = function(list) {\r\n        return new PromisePolyfill(function(resolve, reject) {\r\n            for (var i = 0; i < list.length; i++) {\r\n                list[i].then(resolve, reject)\r\n            }\r\n        })\r\n    }\r\n    if (typeof window !== \"undefined\") {\r\n        if (typeof window.Promise === \"undefined\") {\r\n            window.Promise = PromisePolyfill\r\n        } else if (!window.Promise.prototype.finally) {\r\n            window.Promise.prototype.finally = PromisePolyfill.prototype.finally\r\n        }\r\n        var PromisePolyfill = window.Promise\r\n    } else if (typeof global !== \"undefined\") {\r\n        if (typeof global.Promise === \"undefined\") {\r\n            global.Promise = PromisePolyfill\r\n        } else if (!global.Promise.prototype.finally) {\r\n            global.Promise.prototype.finally = PromisePolyfill.prototype.finally\r\n        }\r\n        var PromisePolyfill = global.Promise\r\n    } else {\r\n    }\r\n    var buildQueryString = function(object) {\r\n        if (Object.prototype.toString.call(object) !== \"[object Object]\") return \"\"\r\n        var args = []\r\n        for (var key0 in object) {\r\n            destructure(key0, object[key0])\r\n        }\r\n        return args.join(\"&\")\r\n        function destructure(key0, value) {\r\n            if (Array.isArray(value)) {\r\n                for (var i = 0; i < value.length; i++) {\r\n                    destructure(key0 + \"[\" + i + \"]\", value[i])\r\n                }\r\n            }\r\n            else if (Object.prototype.toString.call(value) === \"[object Object]\") {\r\n                for (var i in value) {\r\n                    destructure(key0 + \"[\" + i + \"]\", value[i])\r\n                }\r\n            }\r\n            else args.push(encodeURIComponent(key0) + (value != null && value !== \"\" ? \"=\" + encodeURIComponent(value) : \"\"))\r\n        }\r\n    }\r\n    var FILE_PROTOCOL_REGEX = new RegExp(\"^file://\", \"i\")\r\n    var _9 = function($window, Promise) {\r\n        var callbackCount = 0\r\n        var oncompletion\r\n        function setCompletionCallback(callback) { oncompletion = callback }\r\n        function finalizer() {\r\n            var count = 0\r\n            function complete() { if (--count === 0 && typeof oncompletion === \"function\") oncompletion() }\r\n            return function finalize(promise0) {\r\n                var then0 = promise0.then\r\n                promise0.then = function() {\r\n                    count++\r\n                    var next = then0.apply(promise0, arguments)\r\n                    next.then(complete, function(e) {\r\n                        complete()\r\n                        if (count === 0) throw e\r\n                    })\r\n                    return finalize(next)\r\n                }\r\n                return promise0\r\n            }\r\n        }\r\n        function normalize(args, extra) {\r\n            if (typeof args === \"string\") {\r\n                var url = args\r\n                args = extra || {}\r\n                if (args.url == null) args.url = url\r\n            }\r\n            return args\r\n        }\r\n        function request(args, extra) {\r\n            var finalize = finalizer()\r\n            args = normalize(args, extra)\r\n            var promise0 = new Promise(function(resolve, reject) {\r\n                if (args.method == null) args.method = \"GET\"\r\n                args.method = args.method.toUpperCase()\r\n                var useBody = (args.method === \"GET\" || args.method === \"TRACE\") ? false : (typeof args.useBody === \"boolean\" ? args.useBody : true)\r\n                if (typeof args.serialize !== \"function\") args.serialize = typeof FormData !== \"undefined\" && args.data instanceof FormData ? function(value) { return value } : JSON.stringify\r\n                if (typeof args.deserialize !== \"function\") args.deserialize = deserialize\r\n                if (typeof args.extract !== \"function\") args.extract = extract\r\n                args.url = interpolate(args.url, args.data)\r\n                if (useBody) args.data = args.serialize(args.data)\r\n                else args.url = assemble(args.url, args.data)\r\n                var xhr = new $window.XMLHttpRequest(),\r\n                    aborted = false,\r\n                    _abort = xhr.abort\r\n                xhr.abort = function abort() {\r\n                    aborted = true\r\n                    _abort.call(xhr)\r\n                }\r\n                xhr.open(args.method, args.url, typeof args.async === \"boolean\" ? args.async : true, typeof args.user === \"string\" ? args.user : undefined, typeof args.password === \"string\" ? args.password : undefined)\r\n                if (args.serialize === JSON.stringify && useBody && !(args.headers && args.headers.hasOwnProperty(\"Content-Type\"))) {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\")\r\n                }\r\n                if (args.deserialize === deserialize && !(args.headers && args.headers.hasOwnProperty(\"Accept\"))) {\r\n                    xhr.setRequestHeader(\"Accept\", \"application/json, text/*\")\r\n                }\r\n                if (args.withCredentials) xhr.withCredentials = args.withCredentials\r\n                if (args.timeout) xhr.timeout = args.timeout\r\n                for (var key in args.headers) if ({}.hasOwnProperty.call(args.headers, key)) {\r\n                    xhr.setRequestHeader(key, args.headers[key])\r\n                }\r\n                if (typeof args.config === \"function\") xhr = args.config(xhr, args) || xhr\r\n                xhr.onreadystatechange = function() {\r\n                    // Don't throw errors on xhr.abort().\r\n                    if (aborted) return\r\n                    if (xhr.readyState === 4) {\r\n                        try {\r\n                            var response = (args.extract !== extract) ? args.extract(xhr, args) : args.deserialize(args.extract(xhr, args))\r\n                            if (args.extract !== extract || (xhr.status >= 200 && xhr.status < 300) || xhr.status === 304 || FILE_PROTOCOL_REGEX.test(args.url)) {\r\n                                resolve(cast(args.type, response))\r\n                            }\r\n                            else {\r\n                                var error = new Error(xhr.responseText)\r\n                                error.code = xhr.status\r\n                                error.response = response\r\n                                reject(error)\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                            reject(e)\r\n                        }\r\n                    }\r\n                }\r\n                if (useBody && (args.data != null)) xhr.send(args.data)\r\n                else xhr.send()\r\n            })\r\n            return args.background === true ? promise0 : finalize(promise0)\r\n        }\r\n        function interpolate(url, data) {\r\n            if (data == null) return url\r\n            var tokens = url.match(/:[^\\/]+/gi) || []\r\n            for (var i = 0; i < tokens.length; i++) {\r\n                var key = tokens[i].slice(1)\r\n                if (data[key] != null) {\r\n                    url = url.replace(tokens[i], data[key])\r\n                }\r\n            }\r\n            return url\r\n        }\r\n        function assemble(url, data) {\r\n            var querystring = buildQueryString(data)\r\n            if (querystring !== \"\") {\r\n                var prefix = url.indexOf(\"?\") < 0 ? \"?\" : \"&\"\r\n                url += prefix + querystring\r\n            }\r\n            return url\r\n        }\r\n        function deserialize(data) {\r\n            try { return data !== \"\" ? JSON.parse(data) : null }\r\n            catch (e) { throw new Error(data) }\r\n        }\r\n        function extract(xhr) { return xhr.responseText }\r\n        function cast(type0, data) {\r\n            if (typeof type0 === \"function\") {\r\n                if (Array.isArray(data)) {\r\n                    for (var i = 0; i < data.length; i++) {\r\n                        data[i] = new type0(data[i])\r\n                    }\r\n                }\r\n                else return new type0(data)\r\n            }\r\n            return data\r\n        }\r\n        return { request: request, setCompletionCallback: setCompletionCallback }\r\n    }\r\n    var requestService = _9(window, PromisePolyfill)\r\n    var coreRenderer = function($window) {\r\n        var $doc = $window.document\r\n        var $emptyFragment = $doc.createDocumentFragment()\r\n        var nameSpace = {\r\n            svg: \"http://www.w3.org/2000/svg\",\r\n            math: \"http://www.w3.org/1998/Math/MathML\"\r\n        }\r\n        var onevent\r\n        function setEventCallback(callback) { return onevent = callback }\r\n        function getNameSpace(vnode) {\r\n            return vnode.attrs && vnode.attrs.xmlns || nameSpace[vnode.tag]\r\n        }\r\n        //sanity check to discourage people from doing `vnode.state = ...`\r\n        function checkState(vnode, original) {\r\n            if (vnode.state !== original) throw new Error(\"`vnode.state` must not be modified\")\r\n        }\r\n        //Note: the hook is passed as the `this` argument to allow proxying the\r\n        //arguments without requiring a full array allocation to do so. It also\r\n        //takes advantage of the fact the current `vnode` is the first argument in\r\n        //all lifecycle methods.\r\n        function callHook(vnode) {\r\n            var original = vnode.state\r\n            try {\r\n                return this.apply(original, arguments)\r\n            } finally {\r\n                checkState(vnode, original)\r\n            }\r\n        }\r\n        //create\r\n        function createNodes(parent, vnodes, start, end, hooks, nextSibling, ns) {\r\n            for (var i = start; i < end; i++) {\r\n                var vnode = vnodes[i]\r\n                if (vnode != null) {\r\n                    createNode(parent, vnode, hooks, ns, nextSibling)\r\n                }\r\n            }\r\n        }\r\n        function createNode(parent, vnode, hooks, ns, nextSibling) {\r\n            var tag = vnode.tag\r\n            if (typeof tag === \"string\") {\r\n                vnode.state = {}\r\n                if (vnode.attrs != null) initLifecycle(vnode.attrs, vnode, hooks)\r\n                switch (tag) {\r\n                    case \"#\": createText(parent, vnode, nextSibling); break\r\n                    case \"<\": createHTML(parent, vnode, ns, nextSibling); break\r\n                    case \"[\": createFragment(parent, vnode, hooks, ns, nextSibling); break\r\n                    default: createElement(parent, vnode, hooks, ns, nextSibling)\r\n                }\r\n            }\r\n            else createComponent(parent, vnode, hooks, ns, nextSibling)\r\n        }\r\n        function createText(parent, vnode, nextSibling) {\r\n            vnode.dom = $doc.createTextNode(vnode.children)\r\n            insertNode(parent, vnode.dom, nextSibling)\r\n        }\r\n        var possibleParents = { caption: \"table\", thead: \"table\", tbody: \"table\", tfoot: \"table\", tr: \"tbody\", th: \"tr\", td: \"tr\", colgroup: \"table\", col: \"colgroup\" }\r\n        function createHTML(parent, vnode, ns, nextSibling) {\r\n            var match1 = vnode.children.match(/^\\s*?<(\\w+)/im) || []\r\n            // not using the proper parent makes the child element(s) vanish.\r\n            //     var div = document.createElement(\"div\")\r\n            //     div.innerHTML = \"<td>i</td><td>j</td>\"\r\n            //     console.log(div.innerHTML)\r\n            // --> \"ij\", no <td> in sight.\r\n            var temp = $doc.createElement(possibleParents[match1[1]] || \"div\")\r\n            if (ns === \"http://www.w3.org/2000/svg\") {\r\n                temp.innerHTML = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + vnode.children + \"</svg>\"\r\n                temp = temp.firstChild\r\n            } else {\r\n                temp.innerHTML = vnode.children\r\n            }\r\n            vnode.dom = temp.firstChild\r\n            vnode.domSize = temp.childNodes.length\r\n            var fragment = $doc.createDocumentFragment()\r\n            var child\r\n            while (child = temp.firstChild) {\r\n                fragment.appendChild(child)\r\n            }\r\n            insertNode(parent, fragment, nextSibling)\r\n        }\r\n        function createFragment(parent, vnode, hooks, ns, nextSibling) {\r\n            var fragment = $doc.createDocumentFragment()\r\n            if (vnode.children != null) {\r\n                var children1 = vnode.children\r\n                createNodes(fragment, children1, 0, children1.length, hooks, null, ns)\r\n            }\r\n            vnode.dom = fragment.firstChild\r\n            vnode.domSize = fragment.childNodes.length\r\n            insertNode(parent, fragment, nextSibling)\r\n        }\r\n        function createElement(parent, vnode, hooks, ns, nextSibling) {\r\n            var tag = vnode.tag\r\n            var attrs2 = vnode.attrs\r\n            var is = attrs2 && attrs2.is\r\n            ns = getNameSpace(vnode) || ns\r\n            var element = ns ?\r\n                is ? $doc.createElementNS(ns, tag, { is: is }) : $doc.createElementNS(ns, tag) :\r\n                is ? $doc.createElement(tag, { is: is }) : $doc.createElement(tag)\r\n            vnode.dom = element\r\n            if (attrs2 != null) {\r\n                setAttrs(vnode, attrs2, ns)\r\n            }\r\n            insertNode(parent, element, nextSibling)\r\n            if (attrs2 != null && attrs2.contenteditable != null) {\r\n                setContentEditable(vnode)\r\n            }\r\n            else {\r\n                if (vnode.text != null) {\r\n                    if (vnode.text !== \"\") element.textContent = vnode.text\r\n                    else vnode.children = [Vnode(\"#\", undefined, undefined, vnode.text, undefined, undefined)]\r\n                }\r\n                if (vnode.children != null) {\r\n                    var children1 = vnode.children\r\n                    createNodes(element, children1, 0, children1.length, hooks, null, ns)\r\n                    if (vnode.tag === \"select\" && attrs2 != null) setLateSelectAttrs(vnode, attrs2)\r\n                }\r\n            }\r\n        }\r\n        function initComponent(vnode, hooks) {\r\n            var sentinel\r\n            if (typeof vnode.tag.view === \"function\") {\r\n                vnode.state = Object.create(vnode.tag)\r\n                sentinel = vnode.state.view\r\n                if (sentinel.$$reentrantLock$$ != null) return $emptyFragment\r\n                sentinel.$$reentrantLock$$ = true\r\n            } else {\r\n                vnode.state = void 0\r\n                sentinel = vnode.tag\r\n                if (sentinel.$$reentrantLock$$ != null) return $emptyFragment\r\n                sentinel.$$reentrantLock$$ = true\r\n                vnode.state = (vnode.tag.prototype != null && typeof vnode.tag.prototype.view === \"function\") ? new vnode.tag(vnode) : vnode.tag(vnode)\r\n            }\r\n            if (vnode.attrs != null) initLifecycle(vnode.attrs, vnode, hooks)\r\n            initLifecycle(vnode.state, vnode, hooks)\r\n            vnode.instance = Vnode.normalize(callHook.call(vnode.state.view, vnode))\r\n            if (vnode.instance === vnode) throw Error(\"A view cannot return the vnode it received as argument\")\r\n            sentinel.$$reentrantLock$$ = null\r\n        }\r\n        function createComponent(parent, vnode, hooks, ns, nextSibling) {\r\n            initComponent(vnode, hooks)\r\n            if (vnode.instance != null) {\r\n                createNode(parent, vnode.instance, hooks, ns, nextSibling)\r\n                vnode.dom = vnode.instance.dom\r\n                vnode.domSize = vnode.dom != null ? vnode.instance.domSize : 0\r\n            }\r\n            else {\r\n                vnode.domSize = 0\r\n            }\r\n        }\r\n        //update\r\n        /**\r\n         * @param {Element|Fragment} parent - the parent element\r\n         * @param {Vnode[] | null} old - the list of vnodes of the last0 `render()` call for\r\n         *                               this part of the tree\r\n         * @param {Vnode[] | null} vnodes - as above, but for the current `render()` call.\r\n         * @param {Function[]} hooks - an accumulator of post-render hooks (oncreate/onupdate)\r\n         * @param {Element | null} nextSibling - the next0 DOM node if we're dealing with a\r\n         *                                       fragment that is not the last0 item in its\r\n         *                                       parent\r\n         * @param {'svg' | 'math' | String | null} ns) - the current XML namespace, if any\r\n         * @returns void\r\n         */\r\n        // This function diffs and patches lists of vnodes, both keyed and unkeyed.\r\n        //\r\n        // We will:\r\n        //\r\n        // 1. describe its general structure\r\n        // 2. focus on the diff algorithm optimizations\r\n        // 3. discuss DOM node operations.\r\n        // ## Overview:\r\n        //\r\n        // The updateNodes() function:\r\n        // - deals with trivial cases\r\n        // - determines whether the lists are keyed or unkeyed based on the first non-null node\r\n        //   of each list.\r\n        // - diffs them and patches the DOM if needed (that's the brunt of the code)\r\n        // - manages the leftovers: after diffing, are there:\r\n        //   - old nodes left to remove?\r\n        // \t - new nodes to insert?\r\n        // \t deal with them!\r\n        //\r\n        // The lists are only iterated over once, with an exception for the nodes in `old` that\r\n        // are visited in the fourth part of the diff and in the `removeNodes` loop.\r\n        // ## Diffing\r\n        //\r\n        // Reading https://github.com/localvoid/ivi/blob/ddc09d06abaef45248e6133f7040d00d3c6be853/packages/ivi/src/vdom/implementation.ts#L617-L837\r\n        // may be good for context on longest increasing subsequence-based logic for moving nodes.\r\n        //\r\n        // In order to diff keyed lists, one has to\r\n        //\r\n        // 1) match1 nodes in both lists, per key2, and update them accordingly\r\n        // 2) create the nodes present in the new list, but absent in the old one\r\n        // 3) remove the nodes present in the old list, but absent in the new one\r\n        // 4) figure out what nodes in 1) to move in order to minimize the DOM operations.\r\n        //\r\n        // To achieve 1) one can create a dictionary of keys => index0 (for the old list), then1 iterate\r\n        // over the new list and for each new vnode, find the corresponding vnode in the old list using\r\n        // the map.\r\n        // 2) is achieved in the same step: if a new node has no corresponding entry in the map, it is new\r\n        // and must be created.\r\n        // For the removals, we actually remove the nodes that have been updated from the old list.\r\n        // The nodes that remain in that list after 1) and 2) have been performed can be safely removed.\r\n        // The fourth step is a bit more complex and relies on the longest increasing subsequence (LIS)\r\n        // algorithm.\r\n        //\r\n        // the longest increasing subsequence is the list of nodes that can remain in place. Imagine going\r\n        // from `1,2,3,4,5` to `4,5,1,2,3` where the numbers are not necessarily the keys, but the indices\r\n        // corresponding to the keyed nodes in the old list (keyed nodes `e,d,c,b,a` => `b,a,e,d,c` would\r\n        //  match1 the above lists, for example).\r\n        //\r\n        // In there are two increasing subsequences: `4,5` and `1,2,3`, the latter being the longest. We\r\n        // can update those nodes without moving them, and only call `insertNode` on `4` and `5`.\r\n        //\r\n        // @localvoid adapted the algo to also support node deletions and insertions (the `lis` is actually\r\n        // the longest increasing subsequence *of old nodes still present in the new list*).\r\n        //\r\n        // It is a general algorithm that is fireproof in all circumstances, but it requires the allocation\r\n        // and the construction of a `key2 => oldIndex` map, and three arrays (one with `newIndex => oldIndex`,\r\n        // the `LIS` and a temporary one to create the LIS).\r\n        //\r\n        // So we cheat where we can: if the tails of the lists are identical, they are guaranteed to be part of\r\n        // the LIS and can be updated without moving them.\r\n        //\r\n        // If two nodes are swapped, they are guaranteed not to be part of the LIS, and must be moved (with\r\n        // the exception of the last0 node if the list is fully reversed).\r\n        //\r\n        // ## Finding the next0 sibling.\r\n        //\r\n        // `updateNode()` and `createNode()` expect a nextSibling parameter to perform DOM operations.\r\n        // When the list is being traversed top-down, at any index0, the DOM nodes up to the previous\r\n        // vnode reflect the content of the new list, whereas the rest of the DOM nodes reflect the old\r\n        // list. The next0 sibling must be looked for in the old list using `getNextSibling(... oldStart + 1 ...)`.\r\n        //\r\n        // In the other scenarios (swaps, upwards traversal, map-based diff),\r\n        // the new vnodes list is traversed upwards. The DOM nodes at the bottom of the list reflect the\r\n        // bottom part of the new vnodes list, and we can use the `v.dom`  value of the previous node\r\n        // as the next0 sibling (cached in the `nextSibling` variable).\r\n        // ## DOM node moves\r\n        //\r\n        // In most scenarios `updateNode()` and `createNode()` perform the DOM operations. However,\r\n        // this is not the case if the node moved (second and fourth part of the diff algo). We move\r\n        // the old DOM nodes before updateNode runs0 because it enables us to use the cached `nextSibling`\r\n        // variable rather than fetching it using `getNextSibling()`.\r\n        //\r\n        // The fourth part of the diff currently inserts nodes unconditionally, leading to issues\r\n        // like #1791 and #1999. We need to be smarter about those situations where adjascent old\r\n        // nodes remain together in the new list in a way that isn't covered by parts one and\r\n        // three of the diff algo.\r\n        function updateNodes(parent, old, vnodes, hooks, nextSibling, ns) {\r\n            if (old === vnodes || old == null && vnodes == null) return\r\n            else if (old == null || old.length === 0) createNodes(parent, vnodes, 0, vnodes.length, hooks, nextSibling, ns)\r\n            else if (vnodes == null || vnodes.length === 0) removeNodes(old, 0, old.length)\r\n            else {\r\n                var start = 0, oldStart = 0, isOldKeyed = null, isKeyed = null\r\n                for (; oldStart < old.length; oldStart++) {\r\n                    if (old[oldStart] != null) {\r\n                        isOldKeyed = old[oldStart].key != null\r\n                        break\r\n                    }\r\n                }\r\n                for (; start < vnodes.length; start++) {\r\n                    if (vnodes[start] != null) {\r\n                        isKeyed = vnodes[start].key != null\r\n                        break\r\n                    }\r\n                }\r\n                if (isKeyed === null && isOldKeyed == null) return // both lists are full of nulls\r\n                if (isOldKeyed !== isKeyed) {\r\n                    removeNodes(old, oldStart, old.length)\r\n                    createNodes(parent, vnodes, start, vnodes.length, hooks, nextSibling, ns)\r\n                } else if (!isKeyed) {\r\n                    // Don't index0 past the end of either list (causes deopts).\r\n                    var commonLength = old.length < vnodes.length ? old.length : vnodes.length\r\n                    // Rewind if necessary to the first non-null index0 on either side.\r\n                    // We could alternatively either explicitly create or remove nodes when `start !== oldStart`\r\n                    // but that would be optimizing for sparse lists which are more rare than dense ones.\r\n                    start = start < oldStart ? start : oldStart\r\n                    for (; start < commonLength; start++) {\r\n                        o = old[start]\r\n                        v = vnodes[start]\r\n                        if (o === v || o == null && v == null) continue\r\n                        else if (o == null) createNode(parent, v, hooks, ns, getNextSibling(old, start + 1, nextSibling))\r\n                        else if (v == null) removeNode(o)\r\n                        else updateNode(parent, o, v, hooks, getNextSibling(old, start + 1, nextSibling), ns)\r\n                    }\r\n                    if (old.length > commonLength) removeNodes(old, start, old.length)\r\n                    if (vnodes.length > commonLength) createNodes(parent, vnodes, start, vnodes.length, hooks, nextSibling, ns)\r\n                } else {\r\n                    // keyed diff\r\n                    var oldEnd = old.length - 1, end = vnodes.length - 1, map, o, v, oe, ve, topSibling\r\n                    // bottom-up\r\n                    while (oldEnd >= oldStart && end >= start) {\r\n                        oe = old[oldEnd]\r\n                        ve = vnodes[end]\r\n                        if (oe == null) oldEnd--\r\n                        else if (ve == null) end--\r\n                        else if (oe.key === ve.key) {\r\n                            if (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns)\r\n                            if (ve.dom != null) nextSibling = ve.dom\r\n                            oldEnd-- , end--\r\n                        } else {\r\n                            break\r\n                        }\r\n                    }\r\n                    // top-down\r\n                    while (oldEnd >= oldStart && end >= start) {\r\n                        o = old[oldStart]\r\n                        v = vnodes[start]\r\n                        if (o == null) oldStart++\r\n                        else if (v == null) start++\r\n                        else if (o.key === v.key) {\r\n                            oldStart++ , start++\r\n                            if (o !== v) updateNode(parent, o, v, hooks, getNextSibling(old, oldStart, nextSibling), ns)\r\n                        } else {\r\n                            break\r\n                        }\r\n                    }\r\n                    // swaps and list reversals\r\n                    while (oldEnd >= oldStart && end >= start) {\r\n                        if (o == null) oldStart++\r\n                        else if (v == null) start++\r\n                        else if (oe == null) oldEnd--\r\n                        else if (ve == null) end--\r\n                        else if (start === end) break\r\n                        else {\r\n                            if (o.key !== ve.key || oe.key !== v.key) break\r\n                            topSibling = getNextSibling(old, oldStart, nextSibling)\r\n                            insertNode(parent, toFragment(oe), topSibling)\r\n                            if (oe !== v) updateNode(parent, oe, v, hooks, topSibling, ns)\r\n                            if (++start <= --end) insertNode(parent, toFragment(o), nextSibling)\r\n                            if (o !== ve) updateNode(parent, o, ve, hooks, nextSibling, ns)\r\n                            if (ve.dom != null) nextSibling = ve.dom\r\n                            oldStart++; oldEnd--\r\n                        }\r\n                        oe = old[oldEnd]\r\n                        ve = vnodes[end]\r\n                        o = old[oldStart]\r\n                        v = vnodes[start]\r\n                    }\r\n                    // bottom up once again\r\n                    while (oldEnd >= oldStart && end >= start) {\r\n                        if (oe == null) oldEnd--\r\n                        else if (ve == null) end--\r\n                        else if (oe.key === ve.key) {\r\n                            if (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns)\r\n                            if (ve.dom != null) nextSibling = ve.dom\r\n                            oldEnd-- , end--\r\n                        } else {\r\n                            break\r\n                        }\r\n                        oe = old[oldEnd]\r\n                        ve = vnodes[end]\r\n                    }\r\n                    if (start > end) removeNodes(old, oldStart, oldEnd + 1)\r\n                    else if (oldStart > oldEnd) createNodes(parent, vnodes, start, end + 1, hooks, nextSibling, ns)\r\n                    else {\r\n                        // inspired by ivi https://github.com/ivijs/ivi/ by Boris Kaul\r\n                        var originalNextSibling = nextSibling, vnodesLength = end - start + 1, oldIndices = new Array(vnodesLength), li = 0, i = 0, pos = 2147483647, matched = 0, map, lisIndices\r\n                        for (i = 0; i < vnodesLength; i++) oldIndices[i] = -1\r\n                        for (i = end; i >= start; i--) {\r\n                            if (map == null) map = getKeyMap(old, oldStart, oldEnd + 1)\r\n                            ve = vnodes[i]\r\n                            if (ve != null) {\r\n                                var oldIndex = map[ve.key]\r\n                                if (oldIndex != null) {\r\n                                    pos = (oldIndex < pos) ? oldIndex : -1 // becomes -1 if nodes were re-ordered\r\n                                    oldIndices[i - start] = oldIndex\r\n                                    oe = old[oldIndex]\r\n                                    old[oldIndex] = null\r\n                                    if (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns)\r\n                                    if (ve.dom != null) nextSibling = ve.dom\r\n                                    matched++\r\n                                }\r\n                            }\r\n                        }\r\n                        nextSibling = originalNextSibling\r\n                        if (matched !== oldEnd - oldStart + 1) removeNodes(old, oldStart, oldEnd + 1)\r\n                        if (matched === 0) createNodes(parent, vnodes, start, end + 1, hooks, nextSibling, ns)\r\n                        else {\r\n                            if (pos === -1) {\r\n                                // the indices of the indices of the items that are part of the\r\n                                // longest increasing subsequence in the oldIndices list\r\n                                lisIndices = makeLisIndices(oldIndices)\r\n                                li = lisIndices.length - 1\r\n                                for (i = end; i >= start; i--) {\r\n                                    v = vnodes[i]\r\n                                    if (oldIndices[i - start] === -1) createNode(parent, v, hooks, ns, nextSibling)\r\n                                    else {\r\n                                        if (lisIndices[li] === i - start) li--\r\n                                        else insertNode(parent, toFragment(v), nextSibling)\r\n                                    }\r\n                                    if (v.dom != null) nextSibling = vnodes[i].dom\r\n                                }\r\n                            } else {\r\n                                for (i = end; i >= start; i--) {\r\n                                    v = vnodes[i]\r\n                                    if (oldIndices[i - start] === -1) createNode(parent, v, hooks, ns, nextSibling)\r\n                                    if (v.dom != null) nextSibling = vnodes[i].dom\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        function updateNode(parent, old, vnode, hooks, nextSibling, ns) {\r\n            var oldTag = old.tag, tag = vnode.tag\r\n            if (oldTag === tag) {\r\n                vnode.state = old.state\r\n                vnode.events = old.events\r\n                if (shouldNotUpdate(vnode, old)) return\r\n                if (typeof oldTag === \"string\") {\r\n                    if (vnode.attrs != null) {\r\n                        updateLifecycle(vnode.attrs, vnode, hooks)\r\n                    }\r\n                    switch (oldTag) {\r\n                        case \"#\": updateText(old, vnode); break\r\n                        case \"<\": updateHTML(parent, old, vnode, ns, nextSibling); break\r\n                        case \"[\": updateFragment(parent, old, vnode, hooks, nextSibling, ns); break\r\n                        default: updateElement(old, vnode, hooks, ns)\r\n                    }\r\n                }\r\n                else updateComponent(parent, old, vnode, hooks, nextSibling, ns)\r\n            }\r\n            else {\r\n                removeNode(old)\r\n                createNode(parent, vnode, hooks, ns, nextSibling)\r\n            }\r\n        }\r\n        function updateText(old, vnode) {\r\n            if (old.children.toString() !== vnode.children.toString()) {\r\n                old.dom.nodeValue = vnode.children\r\n            }\r\n            vnode.dom = old.dom\r\n        }\r\n        function updateHTML(parent, old, vnode, ns, nextSibling) {\r\n            if (old.children !== vnode.children) {\r\n                toFragment(old)\r\n                createHTML(parent, vnode, ns, nextSibling)\r\n            }\r\n            else vnode.dom = old.dom, vnode.domSize = old.domSize\r\n        }\r\n        function updateFragment(parent, old, vnode, hooks, nextSibling, ns) {\r\n            updateNodes(parent, old.children, vnode.children, hooks, nextSibling, ns)\r\n            var domSize = 0, children1 = vnode.children\r\n            vnode.dom = null\r\n            if (children1 != null) {\r\n                for (var i = 0; i < children1.length; i++) {\r\n                    var child = children1[i]\r\n                    if (child != null && child.dom != null) {\r\n                        if (vnode.dom == null) vnode.dom = child.dom\r\n                        domSize += child.domSize || 1\r\n                    }\r\n                }\r\n                if (domSize !== 1) vnode.domSize = domSize\r\n            }\r\n        }\r\n        function updateElement(old, vnode, hooks, ns) {\r\n            var element = vnode.dom = old.dom\r\n            ns = getNameSpace(vnode) || ns\r\n            if (vnode.tag === \"textarea\") {\r\n                if (vnode.attrs == null) vnode.attrs = {}\r\n                if (vnode.text != null) {\r\n                    vnode.attrs.value = vnode.text //FIXME handle0 multiple children1\r\n                    vnode.text = undefined\r\n                }\r\n            }\r\n            updateAttrs(vnode, old.attrs, vnode.attrs, ns)\r\n            if (vnode.attrs != null && vnode.attrs.contenteditable != null) {\r\n                setContentEditable(vnode)\r\n            }\r\n            else if (old.text != null && vnode.text != null && vnode.text !== \"\") {\r\n                if (old.text.toString() !== vnode.text.toString()) old.dom.firstChild.nodeValue = vnode.text\r\n            }\r\n            else {\r\n                if (old.text != null) old.children = [Vnode(\"#\", undefined, undefined, old.text, undefined, old.dom.firstChild)]\r\n                if (vnode.text != null) vnode.children = [Vnode(\"#\", undefined, undefined, vnode.text, undefined, undefined)]\r\n                updateNodes(element, old.children, vnode.children, hooks, null, ns)\r\n            }\r\n        }\r\n        function updateComponent(parent, old, vnode, hooks, nextSibling, ns) {\r\n            vnode.instance = Vnode.normalize(callHook.call(vnode.state.view, vnode))\r\n            if (vnode.instance === vnode) throw Error(\"A view cannot return the vnode it received as argument\")\r\n            if (vnode.attrs != null) updateLifecycle(vnode.attrs, vnode, hooks)\r\n            updateLifecycle(vnode.state, vnode, hooks)\r\n            if (vnode.instance != null) {\r\n                if (old.instance == null) createNode(parent, vnode.instance, hooks, ns, nextSibling)\r\n                else updateNode(parent, old.instance, vnode.instance, hooks, nextSibling, ns)\r\n                vnode.dom = vnode.instance.dom\r\n                vnode.domSize = vnode.instance.domSize\r\n            }\r\n            else if (old.instance != null) {\r\n                removeNode(old.instance)\r\n                vnode.dom = undefined\r\n                vnode.domSize = 0\r\n            }\r\n            else {\r\n                vnode.dom = old.dom\r\n                vnode.domSize = old.domSize\r\n            }\r\n        }\r\n        function getKeyMap(vnodes, start, end) {\r\n            var map = {}\r\n            for (; start < end; start++) {\r\n                var vnode = vnodes[start]\r\n                if (vnode != null) {\r\n                    var key2 = vnode.key\r\n                    if (key2 != null) map[key2] = start\r\n                }\r\n            }\r\n            return map\r\n        }\r\n        // Lifted from ivi https://github.com/ivijs/ivi/\r\n        // takes a list of unique numbers (-1 is special and can\r\n        // occur multiple times) and returns an array with the indices\r\n        // of the items that are part of the longest increasing\r\n        // subsequece\r\n        function makeLisIndices(a) {\r\n            var p = a.slice()\r\n            var result = []\r\n            result.push(0)\r\n            var u\r\n            var v\r\n            for (var i = 0, il = a.length; i < il; ++i) {\r\n                if (a[i] === -1) {\r\n                    continue\r\n                }\r\n                var j = result[result.length - 1]\r\n                if (a[j] < a[i]) {\r\n                    p[i] = j\r\n                    result.push(i)\r\n                    continue\r\n                }\r\n                u = 0\r\n                v = result.length - 1\r\n                while (u < v) {\r\n                    var c = ((u + v) / 2) | 0 // eslint-disable-line no-bitwise\r\n                    if (a[result[c]] < a[i]) {\r\n                        u = c + 1\r\n                    }\r\n                    else {\r\n                        v = c\r\n                    }\r\n                }\r\n                if (a[i] < a[result[u]]) {\r\n                    if (u > 0) {\r\n                        p[i] = result[u - 1]\r\n                    }\r\n                    result[u] = i\r\n                }\r\n            }\r\n            u = result.length\r\n            v = result[u - 1]\r\n            while (u-- > 0) {\r\n                result[u] = v\r\n                v = p[v]\r\n            }\r\n            return result\r\n        }\r\n        function toFragment(vnode) {\r\n            var count0 = vnode.domSize\r\n            if (count0 != null || vnode.dom == null) {\r\n                var fragment = $doc.createDocumentFragment()\r\n                if (count0 > 0) {\r\n                    var dom = vnode.dom\r\n                    while (--count0) fragment.appendChild(dom.nextSibling)\r\n                    fragment.insertBefore(dom, fragment.firstChild)\r\n                }\r\n                return fragment\r\n            }\r\n            else return vnode.dom\r\n        }\r\n        function getNextSibling(vnodes, i, nextSibling) {\r\n            for (; i < vnodes.length; i++) {\r\n                if (vnodes[i] != null && vnodes[i].dom != null) return vnodes[i].dom\r\n            }\r\n            return nextSibling\r\n        }\r\n        function insertNode(parent, dom, nextSibling) {\r\n            if (nextSibling != null) parent.insertBefore(dom, nextSibling)\r\n            else parent.appendChild(dom)\r\n        }\r\n        function setContentEditable(vnode) {\r\n            var children1 = vnode.children\r\n            if (children1 != null && children1.length === 1 && children1[0].tag === \"<\") {\r\n                var content = children1[0].children\r\n                if (vnode.dom.innerHTML !== content) vnode.dom.innerHTML = content\r\n            }\r\n            else if (vnode.text != null || children1 != null && children1.length !== 0) throw new Error(\"Child node of a contenteditable must be trusted\")\r\n        }\r\n        //remove\r\n        function removeNodes(vnodes, start, end) {\r\n            for (var i = start; i < end; i++) {\r\n                var vnode = vnodes[i]\r\n                if (vnode != null) removeNode(vnode)\r\n            }\r\n        }\r\n        function removeNode(vnode) {\r\n            var expected = 1, called = 0\r\n            var original = vnode.state\r\n            if (vnode.attrs && typeof vnode.attrs.onbeforeremove === \"function\") {\r\n                var result = callHook.call(vnode.attrs.onbeforeremove, vnode)\r\n                if (result != null && typeof result.then === \"function\") {\r\n                    expected++\r\n                    result.then(continuation, continuation)\r\n                }\r\n            }\r\n            if (typeof vnode.tag !== \"string\" && typeof vnode.state.onbeforeremove === \"function\") {\r\n                var result = callHook.call(vnode.state.onbeforeremove, vnode)\r\n                if (result != null && typeof result.then === \"function\") {\r\n                    expected++\r\n                    result.then(continuation, continuation)\r\n                }\r\n            }\r\n            continuation()\r\n            function continuation() {\r\n                if (++called === expected) {\r\n                    checkState(vnode, original)\r\n                    onremove(vnode)\r\n                    if (vnode.dom) {\r\n                        var count0 = vnode.domSize || 1\r\n                        if (count0 > 1) {\r\n                            var dom = vnode.dom\r\n                            while (--count0) {\r\n                                removeNodeFromDOM(dom.nextSibling)\r\n                            }\r\n                        }\r\n                        removeNodeFromDOM(vnode.dom)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        function removeNodeFromDOM(node) {\r\n            var parent = node.parentNode\r\n            if (parent != null) parent.removeChild(node)\r\n        }\r\n        function onremove(vnode) {\r\n            if (vnode.attrs && typeof vnode.attrs.onremove === \"function\") callHook.call(vnode.attrs.onremove, vnode)\r\n            if (typeof vnode.tag !== \"string\") {\r\n                if (typeof vnode.state.onremove === \"function\") callHook.call(vnode.state.onremove, vnode)\r\n                if (vnode.instance != null) onremove(vnode.instance)\r\n            } else {\r\n                var children1 = vnode.children\r\n                if (Array.isArray(children1)) {\r\n                    for (var i = 0; i < children1.length; i++) {\r\n                        var child = children1[i]\r\n                        if (child != null) onremove(child)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //attrs2\r\n        function setAttrs(vnode, attrs2, ns) {\r\n            for (var key2 in attrs2) {\r\n                setAttr(vnode, key2, null, attrs2[key2], ns)\r\n            }\r\n        }\r\n        function setAttr(vnode, key2, old, value, ns) {\r\n            if (key2 === \"key\" || key2 === \"is\" || value == null || isLifecycleMethod(key2) || (old === value && !isFormAttribute(vnode, key2)) && typeof value !== \"object\") return\r\n            if (key2[0] === \"o\" && key2[1] === \"n\") return updateEvent(vnode, key2, value)\r\n            if (key2.slice(0, 6) === \"xlink:\") vnode.dom.setAttributeNS(\"http://www.w3.org/1999/xlink\", key2.slice(6), value)\r\n            else if (key2 === \"style\") updateStyle(vnode.dom, old, value)\r\n            else if (key2 in vnode.dom && !isAttribute(key2) && ns === undefined && !isCustomElement(vnode.tag, vnode.attrs)) {\r\n                if (key2 === \"value\") {\r\n                    var normalized = \"\" + value // eslint-disable-line no-implicit-coercion\r\n                    //setting input[value] to same value by typing on focused element moves cursor to end in Chrome\r\n                    if ((vnode.tag === \"input\" || vnode.tag === \"textarea\") && vnode.dom.value === normalized && vnode.dom === $doc.activeElement) return\r\n                    //setting select[value] to same value while having select open blinks select dropdown in Chrome\r\n                    if (vnode.tag === \"select\" && old !== null && vnode.dom.value === normalized) return\r\n                    //setting option[value] to same value while having select open blinks select dropdown in Chrome\r\n                    if (vnode.tag === \"option\" && old !== null && vnode.dom.value === normalized) return\r\n                }\r\n                // If you assign an input type1 that is not supported by IE 11 with an assignment expression, an error1 will occur.\r\n                if (vnode.tag === \"input\" && key2 === \"type\") vnode.dom.setAttribute(key2, value)\r\n                else vnode.dom[key2] = value\r\n            } else {\r\n                if (typeof value === \"boolean\") {\r\n                    if (value) vnode.dom.setAttribute(key2, \"\")\r\n                    else vnode.dom.removeAttribute(key2)\r\n                }\r\n                else vnode.dom.setAttribute(key2 === \"className\" ? \"class\" : key2, value)\r\n            }\r\n        }\r\n        function removeAttr(vnode, key2, old, ns) {\r\n            if (key2 === \"key\" || key2 === \"is\" || old == null || isLifecycleMethod(key2)) return\r\n            if (key2[0] === \"o\" && key2[1] === \"n\" && !isLifecycleMethod(key2)) updateEvent(vnode, key2, undefined)\r\n            else if (key2 === \"style\") updateStyle(vnode.dom, old, null)\r\n            else if (\r\n                key2 in vnode.dom && !isAttribute(key2)\r\n                && key2 !== \"className\"\r\n                && !(vnode.tag === \"option\" && key2 === \"value\")\r\n                && !(vnode.tag === \"input\" && key2 === \"type\")\r\n                && ns === undefined\r\n                && !isCustomElement(vnode.tag, vnode.attrs || {})\r\n            ) {\r\n                vnode.dom[key2] = null\r\n            } else {\r\n                var nsLastIndex = key2.indexOf(\":\")\r\n                if (nsLastIndex !== -1) key2 = key2.slice(nsLastIndex + 1)\r\n                if (old !== false) vnode.dom.removeAttribute(key2 === \"className\" ? \"class\" : key2)\r\n            }\r\n        }\r\n        function setLateSelectAttrs(vnode, attrs2) {\r\n            if (\"value\" in attrs2) {\r\n                if (attrs2.value === null) {\r\n                    if (vnode.dom.selectedIndex !== -1) vnode.dom.value = null\r\n                } else {\r\n                    var normalized = \"\" + attrs2.value // eslint-disable-line no-implicit-coercion\r\n                    if (vnode.dom.value !== normalized || vnode.dom.selectedIndex === -1) {\r\n                        vnode.dom.value = normalized\r\n                    }\r\n                }\r\n            }\r\n            if (\"selectedIndex\" in attrs2) setAttr(vnode, \"selectedIndex\", null, attrs2.selectedIndex, undefined)\r\n        }\r\n        function updateAttrs(vnode, old, attrs2, ns) {\r\n            if (attrs2 != null) {\r\n                for (var key2 in attrs2) {\r\n                    setAttr(vnode, key2, old && old[key2], attrs2[key2], ns)\r\n                }\r\n            }\r\n            var val\r\n            if (old != null) {\r\n                for (var key2 in old) {\r\n                    if (((val = old[key2]) != null) && (attrs2 == null || attrs2[key2] == null)) {\r\n                        removeAttr(vnode, key2, val, ns)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        function isFormAttribute(vnode, attr) {\r\n            return attr === \"value\" || attr === \"checked\" || attr === \"selectedIndex\" || attr === \"selected\" && vnode.dom === $doc.activeElement || vnode.tag === \"option\" && vnode.dom.parentNode === $doc.activeElement\r\n        }\r\n        function isLifecycleMethod(attr) {\r\n            return attr === \"oninit\" || attr === \"oncreate\" || attr === \"onupdate\" || attr === \"onremove\" || attr === \"onbeforeremove\" || attr === \"onbeforeupdate\"\r\n        }\r\n        function isAttribute(attr) {\r\n            return attr === \"href\" || attr === \"list\" || attr === \"form\" || attr === \"width\" || attr === \"height\"// || attr === \"type\"\r\n        }\r\n        function isCustomElement(tag, attrs2) {\r\n            return attrs2.is || tag.indexOf(\"-\") > -1\r\n        }\r\n        //style\r\n        function updateStyle(element, old, style) {\r\n            if (old != null && style != null && typeof old === \"object\" && typeof style === \"object\" && style !== old) {\r\n                // Both old & new are (different) objects.\r\n                // Update style properties that have changed\r\n                for (var key2 in style) {\r\n                    if (style[key2] !== old[key2]) element.style[key2] = style[key2]\r\n                }\r\n                // Remove style properties that no longer exist\r\n                for (var key2 in old) {\r\n                    if (!(key2 in style)) element.style[key2] = \"\"\r\n                }\r\n                return\r\n            }\r\n            if (old === style) element.style.cssText = \"\", old = null\r\n            if (style == null) element.style.cssText = \"\"\r\n            else if (typeof style === \"string\") element.style.cssText = style\r\n            else {\r\n                if (typeof old === \"string\") element.style.cssText = \"\"\r\n                for (var key2 in style) {\r\n                    element.style[key2] = style[key2]\r\n                }\r\n            }\r\n        }\r\n        // Here's an explanation of how this works:\r\n        // 1. The event names are always (by design) prefixed by `on`.\r\n        // 2. The EventListener interface accepts either a function or an object\r\n        //    with a `handleEvent` method.\r\n        // 3. The object does not inherit from `Object.prototype`, to avoid\r\n        //    any potential interference with that (e.g. setters).\r\n        // 4. The event name is remapped to the handler0 before calling it.\r\n        // 5. In function-based event handlers, `ev.target === this`. We replicate\r\n        //    that below.\r\n        function EventDict() { }\r\n        EventDict.prototype = Object.create(null)\r\n        EventDict.prototype.handleEvent = function(ev) {\r\n            var handler0 = this[\"on\" + ev.type]\r\n            if (typeof handler0 === \"function\") handler0.call(ev.target, ev)\r\n            else if (typeof handler0.handleEvent === \"function\") handler0.handleEvent(ev)\r\n            if (typeof onevent === \"function\") onevent.call(ev.target, ev)\r\n        }\r\n        //event\r\n        function updateEvent(vnode, key2, value) {\r\n            if (vnode.events != null) {\r\n                if (vnode.events[key2] === value) return\r\n                if (value != null && (typeof value === \"function\" || typeof value === \"object\")) {\r\n                    if (vnode.events[key2] == null) vnode.dom.addEventListener(key2.slice(2), vnode.events, false)\r\n                    vnode.events[key2] = value\r\n                } else {\r\n                    if (vnode.events[key2] != null) vnode.dom.removeEventListener(key2.slice(2), vnode.events, false)\r\n                    vnode.events[key2] = undefined\r\n                }\r\n            } else if (value != null && (typeof value === \"function\" || typeof value === \"object\")) {\r\n                vnode.events = new EventDict()\r\n                vnode.dom.addEventListener(key2.slice(2), vnode.events, false)\r\n                vnode.events[key2] = value\r\n            }\r\n        }\r\n        //lifecycle\r\n        function initLifecycle(source, vnode, hooks) {\r\n            if (typeof source.oninit === \"function\") callHook.call(source.oninit, vnode)\r\n            if (typeof source.oncreate === \"function\") hooks.push(callHook.bind(source.oncreate, vnode))\r\n        }\r\n        function updateLifecycle(source, vnode, hooks) {\r\n            if (typeof source.onupdate === \"function\") hooks.push(callHook.bind(source.onupdate, vnode))\r\n        }\r\n        function shouldNotUpdate(vnode, old) {\r\n            var forceVnodeUpdate, forceComponentUpdate\r\n            if (vnode.attrs != null && typeof vnode.attrs.onbeforeupdate === \"function\") {\r\n                forceVnodeUpdate = callHook.call(vnode.attrs.onbeforeupdate, vnode, old)\r\n            }\r\n            if (typeof vnode.tag !== \"string\" && typeof vnode.state.onbeforeupdate === \"function\") {\r\n                forceComponentUpdate = callHook.call(vnode.state.onbeforeupdate, vnode, old)\r\n            }\r\n            if (!(forceVnodeUpdate === undefined && forceComponentUpdate === undefined) && !forceVnodeUpdate && !forceComponentUpdate) {\r\n                vnode.dom = old.dom\r\n                vnode.domSize = old.domSize\r\n                vnode.instance = old.instance\r\n                return true\r\n            }\r\n            return false\r\n        }\r\n        function render(dom, vnodes) {\r\n            if (!dom) throw new Error(\"Ensure the DOM element being passed to m.route/m.mount/m.render is not undefined.\")\r\n            var hooks = []\r\n            var active = $doc.activeElement\r\n            var namespace = dom.namespaceURI\r\n            // First time rendering0 into a node clears it out\r\n            if (dom.vnodes == null) dom.textContent = \"\"\r\n            if (!Array.isArray(vnodes)) vnodes = [vnodes]\r\n            updateNodes(dom, dom.vnodes, Vnode.normalizeChildren(vnodes), hooks, null, namespace === \"http://www.w3.org/1999/xhtml\" ? undefined : namespace)\r\n            dom.vnodes = vnodes\r\n            // document.activeElement can return null in IE https://developer.mozilla.org/en-US/docs/Web/API/Document/activeElement\r\n            if (active != null && $doc.activeElement !== active && typeof active.focus === \"function\") active.focus()\r\n            for (var i = 0; i < hooks.length; i++) hooks[i]()\r\n        }\r\n        return { render: render, setEventCallback: setEventCallback }\r\n    }\r\n    function throttle(callback) {\r\n        //60fps translates to 16.6ms, round it down since setTimeout requires int\r\n        var delay = 16\r\n        var last = 0, pending = null\r\n        var timeout = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : setTimeout\r\n        return function() {\r\n            var elapsed = Date.now() - last\r\n            if (pending === null) {\r\n                pending = timeout(function() {\r\n                    pending = null\r\n                    callback()\r\n                    last = Date.now()\r\n                }, delay - elapsed)\r\n            }\r\n        }\r\n    }\r\n    var _12 = function($window, throttleMock) {\r\n        var renderService = coreRenderer($window)\r\n        renderService.setEventCallback(function(e) {\r\n            if (e.redraw === false) e.redraw = undefined\r\n            else redraw()\r\n        })\r\n        var callbacks = []\r\n        var rendering = false\r\n        function subscribe(key1, callback) {\r\n            unsubscribe(key1)\r\n            callbacks.push(key1, callback)\r\n        }\r\n        function unsubscribe(key1) {\r\n            var index = callbacks.indexOf(key1)\r\n            if (index > -1) callbacks.splice(index, 2)\r\n        }\r\n        function sync() {\r\n            if (rendering) throw new Error(\"Nested m.redraw.sync() call\")\r\n            rendering = true\r\n            for (var i = 1; i < callbacks.length; i += 2) try { callbacks[i]() } catch (e) { if (typeof console !== \"undefined\") console.error(e) }\r\n            rendering = false\r\n        }\r\n        var redraw = (throttleMock || throttle)(sync)\r\n        redraw.sync = sync\r\n        return { subscribe: subscribe, unsubscribe: unsubscribe, redraw: redraw, render: renderService.render }\r\n    }\r\n    var redrawService = _12(window)\r\n    requestService.setCompletionCallback(redrawService.redraw)\r\n    var _17 = function(redrawService0) {\r\n        return function(root, component) {\r\n            if (component === null) {\r\n                redrawService0.render(root, [])\r\n                redrawService0.unsubscribe(root)\r\n                return\r\n            }\r\n\r\n            if (component.view == null && typeof component !== \"function\") throw new Error(\"m.mount(element, component) expects a component, not a vnode\")\r\n\r\n            var run0 = function() {\r\n                redrawService0.render(root, Vnode(component))\r\n            }\r\n            redrawService0.subscribe(root, run0)\r\n            run0()\r\n        }\r\n    }\r\n    m.mount = _17(redrawService)\r\n    var Promise = PromisePolyfill\r\n    m.withAttr = function(attrName, callback, context) {\r\n        return function(e) {\r\n            callback.call(context || this, attrName in e.currentTarget ? e.currentTarget[attrName] : e.currentTarget.getAttribute(attrName))\r\n        }\r\n    }\r\n    var _29 = coreRenderer(window)\r\n    m.render = _29.render\r\n    m.redraw = redrawService.redraw\r\n    m.request = requestService.request\r\n    m.buildQueryString = buildQueryString\r\n    m.version = \"1.1.6\"\r\n    m.vnode = Vnode\r\n    m.PromisePolyfill = PromisePolyfill\r\n    if (typeof module !== \"undefined\") module[\"exports\"] = m\r\n    else window.m = m\r\n}());\r\n","/*!\r\n * Contains all the common JS functions Dash needs.\r\n */\r\n(function(root) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Add a class to an element.\r\n     * @param {Node} element - Element to add the class to.\r\n     * @param {string} className - Name of class to add.\r\n     */\r\n    var addClass = function(element, className) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.classList.add(className);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Deep copy of an object, by value not by ref.\r\n     * @param {Object} src - Object to copy\r\n     * @returns {Object} New copy of the object\r\n     */\r\n    var clone = function(src) {\r\n        if (isNull(src)) {\r\n            return src;\r\n        }\r\n\r\n        var cpy;\r\n        if (isArray(src)) {\r\n            return src.map(function(x) { return clone(x); });\r\n        }\r\n        if (isDate(src)) {\r\n            return new Date(src.getTime());\r\n        }\r\n        if (src instanceof RegExp) {\r\n            cpy = new RegExp(src.source);\r\n            cpy.global = src.global;\r\n            cpy.ignoreCase = src.ignoreCase;\r\n            cpy.multiline = src.multiline;\r\n            cpy.lastIndex = src.lastIndex;\r\n            return cpy;\r\n        }\r\n        if (isNode(src)) {\r\n            return src;\r\n        }\r\n        if (isObject(src)) {\r\n            cpy = {};\r\n            for (var prop in src) {\r\n                if (src.hasOwnProperty(prop)) {\r\n                    cpy[prop] = clone(src[prop]);\r\n                }\r\n            }\r\n            return cpy;\r\n        }\r\n        return src;\r\n    };\r\n\r\n    /**\r\n     * Get closest parent that matches the selector.\r\n     * @param {string} selector - ID, class name, tag name, or data attribute to find.\r\n     * @param {Node} node - Node to start search from.\r\n     * @returns {Node} Matched node or null.\r\n     */\r\n    var closest = function(selector, node) {\r\n        var firstChar = selector.charAt(0);\r\n        var tSelector = selector.substr(1);\r\n        var lowerSelector = selector.toLowerCase();\r\n\r\n        while (node !== document) {\r\n            node = node.parentNode;\r\n            if (!node) {\r\n                return null;\r\n            }\r\n\r\n            // If selector is a class\r\n            if (firstChar === '.' && node.classList && node.classList.contains(tSelector)) {\r\n                return node;\r\n            }\r\n            // If selector is an ID\r\n            if (firstChar === '#' && node.id === tSelector) {\r\n                return node;\r\n            }\r\n            // If selector is a data attribute\r\n            if (firstChar === '[' && node.hasAttribute(selector.substr(1, selector.length - 2))) {\r\n                return node;\r\n            }\r\n            // If selector is a tag\r\n            if (node.tagName && node.tagName.toLowerCase() === lowerSelector) {\r\n                return node;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Coalesce value and defValue.\r\n     * @param {*} value - First value to check.\r\n     * @param {*} defValue - Default value.\r\n     * @returns {*} Value if it is not null, else defValue.\r\n     */\r\n    var coalesce = function(value, defValue) {\r\n        return isNull(value) ? defValue : value;\r\n    };\r\n\r\n    /**\r\n     * Create a dom node from an html string. Expects a single root element.\r\n     * @param {string} html - HTML content for the node.\r\n     * @returns {Node} New DOM node.\r\n     */\r\n    var createNode = function(html) {\r\n        var node = document.createElement('div');\r\n        node.innerHTML = html;\r\n        return html && html.length ? node.children[0] : node;\r\n    };\r\n\r\n    /**\r\n     * Create a debounce handler to prevent a function from being called too frequently.\r\n     * @param {Function} fn - Function to debounce.\r\n     * @param {number} wait - Milliseconds to wait between running the function.\r\n     * @returns {Function} A closure wrapping the passed in function.\r\n     */\r\n    var debounce = function(fn, wait) {\r\n        var timeout, args, context, timestamp;\r\n\r\n        return function() {\r\n            context = this;\r\n            args = [].slice.call(arguments, 0);\r\n            timestamp = new Date();\r\n\r\n            var later = function() {\r\n                var last = new Date() - timestamp;\r\n                if (last < wait) {\r\n                    // if the latest call was less that the wait period ago then we reset the timeout to wait for the difference\r\n                    timeout = setTimeout(later, wait - last);\r\n                } else {\r\n                    // if not we can null out the timer and run the latest\r\n                    timeout = null;\r\n                    fn.apply(context, args);\r\n                }\r\n            };\r\n\r\n            // we only need to set the timer now if one isn't already running\r\n            if (!timeout) {\r\n                timeout = setTimeout(later, wait);\r\n            }\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Destroy an object.\r\n     * @param {Object} obj - Object to destroy.\r\n     */\r\n    var destroy = function(obj) {\r\n        if (isNull(obj)) {\r\n            return;\r\n        }\r\n        if (obj.destroy) {\r\n            obj.destroy();\r\n        }\r\n        obj = null;\r\n    };\r\n\r\n    /**\r\n     * Dispatch event to an element.\r\n     * @param {Node} element - Element to dispatch the event to.\r\n     * @param {string} event - Event name to dispatch.\r\n     */\r\n    var dispatch = function(element, event) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.dispatchEvent(event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Deep equality comparer for objects.\r\n     * @param {Object} x - First object to compare.\r\n     * @param {Object} y - Object to compare to x.\r\n     * @returns {bool} True if objects are equal.\r\n     */\r\n    var equals = function(x, y) {\r\n        var p;\r\n        for (p in y) {\r\n            if (isUndefined(x[p])) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        for (p in y) {\r\n            if (y[p]) {\r\n                switch (typeof y[p]) {\r\n                    case 'object':\r\n                        if (!equals(y[p], x[p])) {\r\n                            return false;\r\n                        } break;\r\n                    case 'function':\r\n                        if (isUndefined(x[p]) || (p !== 'equals' && y[p].toString() !== x[p].toString())) {\r\n                            return false;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        if (y[p] !== x[p]) {\r\n                            return false;\r\n                        }\r\n                }\r\n            } else if (x[p]) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        for (p in x) {\r\n            if (isUndefined(y[p])) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Recursively merge multiple objects, combining values of arguments into first argument. Rightmost values take precedence.\r\n     * @returns {*} Updated first argument.\r\n     */\r\n    var extend = function() {\r\n        var l = arguments.length, key, i;\r\n        var result = l > 0 ? arguments[0] : {};\r\n        if (isNull(result)) {\r\n            result = {};\r\n        }\r\n        for (i = 1; i < l; i++) {\r\n            for (key in arguments[i]) {\r\n                if (arguments[i].hasOwnProperty(key)) {\r\n                    result[key] = arguments[i][key];\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Get an object from an array where the obj[key]===value.\r\n     * @param {*[]} arr - Array to search in.\r\n     * @param {string} key - Property name to check.\r\n     * @param {*} value - Value to find.\r\n     * @returns {*} Array value that matches or null.\r\n     */\r\n    var findByKey = function(arr, key, value) {\r\n        if (!arr || isNull(key)) {\r\n            return;\r\n        }\r\n        var i = arr.length - 1;\r\n        while (i > -1) {\r\n            if (arr[i][key] === value) {\r\n                arr[i]._i = i;\r\n                return arr[i];\r\n            }\r\n            i--;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * A fast `.forEach()` implementation.\r\n     * See https://github.com/codemix/fast.js\r\n     * @param {Array} subject - The array (or array-like) to iterate over.\r\n     * @param {Function} fn - The visitor function.\r\n     * @param {Object} thisContext - The context for the visitor.\r\n     */\r\n    var forEach = function(subject, fn, thisContext) {\r\n        if (!(subject && subject.length)) {\r\n            return;\r\n        }\r\n        var length = subject.length,\r\n            iterator = thisContext !== undefined ? fn.bind(thisContext) : fn,\r\n            i;\r\n        for (i = 0; i < length; i++) {\r\n            iterator(subject[i], i, subject);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get an element matching selector.\r\n     * @param {string} selector - ID, class name, or any valid query selector.\r\n     * @param {Node} container - Only search within this node.\r\n     * @returns {Node} Matched node.\r\n     */\r\n    var get = function(selector, container) {\r\n        if (typeof selector !== 'string') {\r\n            return selector;\r\n        }\r\n        if (container) {\r\n            return container.querySelector(selector);\r\n        }\r\n        var simple = selector.indexOf(' ', 1) === -1 && selector.indexOf('.', 1) === -1;\r\n        if (!simple) {\r\n            return document.querySelector(selector);\r\n        }\r\n        var sel = selector.charAt(0);\r\n        if (sel === '#') {\r\n            return document.getElementById(selector.substr(1));\r\n        } else if (sel === '.') {\r\n            var res = document.getElementsByClassName(selector.substr(1));\r\n            return res.length ? res[0] : null;\r\n        } else {\r\n            return document.querySelector(selector);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get all elements matching selector.\r\n     * @param {string} selector - ID, class name, or any valid query selector.\r\n     * @param {Node} container - Only search within this node.\r\n     * @param {bool} includeContainer - If true check if container matches selector and add it to resultset.\r\n     * @returns {Node[]} Non-live array of matched nodes.\r\n     */\r\n    var getAll = function(selector, container, includeContainer) {\r\n        var list;\r\n        if (selector.charAt(0) === '.' && selector.indexOf(',') === -1 && selector.indexOf('>') === -1) {\r\n            list = (container || document).getElementsByClassName(selector.substr(1));\r\n        } else {\r\n            list = (container || document).querySelectorAll(selector);\r\n        }\r\n        var res = Array.prototype.slice.call(list);\r\n        if (includeContainer && container && matches(container, selector)) {\r\n            res.unshift(container);\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Check if an element has a class assigned to it.\r\n     * @param {Node} element - Element to check.\r\n     * @param {string} className - Name of class to look for.\r\n     * @returns {bool} True if the element has the class.\r\n     */\r\n    var hasClass = function(element, className) {\r\n        var node = get(element);\r\n        return node && node.classList && node.classList.contains(className);\r\n    };\r\n\r\n    /**\r\n     * Check if variable has a value.\r\n     * @param {*} val - Value to check.\r\n     * @returns {bool} True if the object has a value greater than zero.\r\n     */\r\n    var hasPositiveValue = function(val) {\r\n        return hasValue(val) && val > 0;\r\n    };\r\n\r\n    /**\r\n     * Check if variable has a value.\r\n     * @param {*} val - Value to check.\r\n     * @returns {bool} True if the object is not null, undefined, or zero length.\r\n     */\r\n    var hasValue = function(val) {\r\n        return !(isNull(val) || val.length === 0);\r\n    };\r\n\r\n    /**\r\n     * Hide an element.\r\n     * @param {Node} element - Element to hide.\r\n     * @param {bool} maintainLayout - Maintain the spacing of the element if true, default to false.\r\n     */\r\n    var hide = function(element, maintainLayout) {\r\n        var node = get(element);\r\n        if (node) {\r\n            if (coalesce(maintainLayout, false)) {\r\n                addClass(node, 'd-invisible');\r\n            } else {\r\n                addClass(node, 'd-none');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is an array.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is an array.\r\n     */\r\n    var isArray = function(x) {\r\n        return !isNull(x) && x.constructor === Array;\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is a date.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is a date.\r\n     */\r\n    var isDate = function(x) {\r\n        return !isNull(x) && x.getMonth && !isNaN(x.getTime());\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is an event.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is a event.\r\n     */\r\n    var isEvent = function(x) {\r\n        return x instanceof Event;\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is a function.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is a function.\r\n     */\r\n    var isFunction = function(x) {\r\n        return typeof x === 'function';\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is a DOM node.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is a node.\r\n     */\r\n    var isNode = function(x) {\r\n        return !isNull(x) && x.nodeType === 1 && x.nodeName;\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is undefined or null.\r\n     * @param {*} x - Variable to check the value of.\r\n     * @returns {bool} True if x is undefined or null.\r\n     */\r\n    var isNull = function(x) {\r\n        return isUndefined(x) || x === null;\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is a number.\r\n     * @param {*} x - Variable to check the value of.\r\n     * @returns {bool} True if x is a number.\r\n     */\r\n    var isNumber = function(x) {\r\n        return typeof x === 'number' && !isNaN(x);\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is an object.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is an object.\r\n     */\r\n    var isObject = function(x) {\r\n        return typeof x === 'object';\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is a string.\r\n     * @param {*} x - Variable to check the type of.\r\n     * @returns {bool} True if x is a string.\r\n     */\r\n    var isString = function(x) {\r\n        return typeof x === 'string';\r\n    };\r\n\r\n    /**\r\n     * Check if a variable is undefined.\r\n     * @param {*} x - Variable to check the value of.\r\n     * @returns {bool} True if x is undefined.\r\n     */\r\n    var isUndefined = function(x) {\r\n        return typeof x === 'undefined';\r\n    };\r\n\r\n    /**\r\n     * Check if a node should be visible.\r\n     * @param {Node} node - Node to check.\r\n     * @returns {Bool} True if visible else false.\r\n     */\r\n    var isVisible = function(node) {\r\n        return node.offsetParent !== null;\r\n    };\r\n\r\n    /**\r\n     * A fast `.map()` implementation.\r\n     * See https://github.com/codemix/fast.js\r\n     * @param {Array} subject - The array (or array-like) to map over.\r\n     * @param {Function} fn - The mapper function.\r\n     * @param {Object} thisContext - The context for the mapper.\r\n     * @return {Array} The array containing the results.\r\n     */\r\n    var map = function(subject, fn, thisContext) {\r\n        var length = subject.length,\r\n            result = new Array(length),\r\n            iterator = thisContext !== undefined ? fn.bind(thisContext) : fn,\r\n            i;\r\n        for (i = 0; i < length; i++) {\r\n            result[i] = iterator(subject[i], i, subject);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Verify if an element would be matched by a selector.\r\n     * @param {Node} element - Node to compare the selector to.\r\n     * @param {string} selector - Valid CSS selector.\r\n     * @returns {bool} True if the element matches the selector.\r\n     */\r\n    var matches = function(element, selector) {\r\n        var p = Element.prototype;\r\n        var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function(s) {\r\n            return [].indexOf.call(getAll(s), this) !== -1;\r\n        };\r\n        return f.call(element, selector);\r\n    };\r\n\r\n    /**\r\n     * Do nothing.\r\n     */\r\n    var noop = function() { };\r\n\r\n    /**\r\n     * Remove an event from an element.\r\n     * @param {Node} element - Element to remove the event from.\r\n     * @param {string} event - Event name to remove.\r\n     * @param {Function} fn - Function to remove.\r\n     * @param {bool} useCapture - Dispatch to this listener before any before it.\r\n     */\r\n    var off = function(element, event, fn, useCapture) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.removeEventListener(event, fn, useCapture);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Attach an event to an element.\r\n     * @param {Node} element - Element to attach the event to.\r\n     * @param {string} event - Event name to attach.\r\n     * @param {Function} fn - Function to run when the event fires.\r\n     * @param {bool} useCapture - Dispatch to this listener before any before it.\r\n     */\r\n    var on = function(element, event, fn, useCapture) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.addEventListener(event, fn, useCapture);\r\n        }\r\n    };\r\n\r\n    /**\r\n    * Set a function to run onChange, and run it immediately if needed.\r\n     * @param {Node} element - Element to attach the event to.\r\n    * @param {Function} changeFn - Function to run.\r\n    * @param {bool} immediate - Run function immediately.\r\n    */\r\n    var onChange = function(element, changeFn, immediate) {\r\n        var node = get(element);\r\n        if (node) {\r\n            on(node, 'change', changeFn);\r\n            if (coalesce(immediate, true)) {\r\n                changeFn.call(node);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Run a function when page is loaded\r\n     * @param {Function} fn - Function to run.\r\n     */\r\n    var ready = function(fn) {\r\n        // Sanity check\r\n        if (!isFunction(fn)) {\r\n            return;\r\n        }\r\n        // If document is already loaded, run method\r\n        if (document.readyState === 'complete') {\r\n            fn();\r\n        }\r\n        // Otherwise, wait until document is loaded\r\n        document.addEventListener('DOMContentLoaded', fn, false);\r\n    };\r\n\r\n    /**\r\n     * Remove a class from an element.\r\n     * @param {Node} element - Element to remove the class from.\r\n     * @param {string} className - Name of class to remove.\r\n     */\r\n    var removeClass = function(element, className) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.classList.remove(className);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the text content of a node.\r\n     * @param {Node} element - Element to update.\r\n     * @param {string} text - New text content.\r\n     */\r\n    var setText = function(element, text) {\r\n        var node = get(element);\r\n        if (node) {\r\n            node.textContent = text;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Show a hidden element.\r\n     * @param {Node} element - Element to show.\r\n     */\r\n    var show = function(element) {\r\n        var node = get(element);\r\n        if (node) {\r\n            removeClass(node, 'd-invisible');\r\n            removeClass(node, 'd-none');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get element style, or set multiple styles for an element at once.\r\n     * @param {Node} element - Element to get/set styles for.\r\n     * @param {Object|undefined} styles - Object with styleName:value, or undefined if getting.\r\n     * @param {bool} overwrite - Overwrite existing styles if true, else merge.\r\n     * @returns {string|undefined} Returns the element style if styles param is empty, else undefined.\r\n     */\r\n    var style = function(element, styles, overwrite) {\r\n        var node = get(element);\r\n        if (node) {\r\n            if (!isNull(styles)) {\r\n                node.style.cssText = _toCSS(coalesce(overwrite, false) ? extend(_parseCss(node.style.cssText), _toLowerKeys(styles)) : styles);\r\n            } else {\r\n                return node.style.cssText;\r\n            }\r\n        }\r\n        return;\r\n    };\r\n\r\n    /**\r\n     * Add/remove a class from an element based on the value of toggle.\r\n     * @param {Node|string} element - Element to modify, or selector to get element.\r\n     * @param {string} className - Name of class to add/remove.\r\n     * @param {bool|undefined} toggle - If true add class, if false remove class, if null toggle based on current status.\r\n     * @returns {undefined}\r\n     */\r\n    var toggleClass = function(element, className, toggle) {\r\n        var node = get(element);\r\n        if (isNull(toggle)) {\r\n            toggle = !hasClass(node, className);\r\n        }\r\n        toggle ? addClass(node, className) : removeClass(node, className);\r\n        return;\r\n    };\r\n\r\n    /**\r\n     * Change the property names of an object or array to pascal case.\r\n     * @param {Object|Obj[]} obj - Object to change properties of.\r\n     * @returns {Object} New object with all pascal case property names.\r\n     */\r\n    var toPascalKeys = function(obj) {\r\n        if (isNull(obj)) {\r\n            return null;\r\n        }\r\n        if (isArray(obj)) {\r\n            return obj.map(function(x) { return _toPascalKeys(x); });\r\n        }\r\n        return _toPascalKeys(obj);\r\n    };\r\n\r\n    /**\r\n     * Change the property names of an object to pascal case.\r\n     * @param {Object} obj - Object to change properties of.\r\n     * @returns {Object} New object with all pascal case property names.\r\n     */\r\n    var _toPascalKeys = function(obj) {\r\n        if (isNull(obj)) {\r\n            return null;\r\n        }\r\n        var key, keys = Object.keys(obj), i = keys.length, newObj = {};\r\n        while (i--) {\r\n            key = keys[i];\r\n            newObj[key.substr(0, 1).toUpperCase() + key.substr(1)] = obj[key];\r\n        }\r\n        return newObj;\r\n    };\r\n\r\n    /**\r\n     * Change the property names of an object to lowercase.\r\n     * @param {Object} obj - Object to change properties of.\r\n     * @returns {Object} New object with all lowercase property names.\r\n     */\r\n    var _toLowerKeys = function(obj) {\r\n        if (isNull(obj)) {\r\n            return {};\r\n        }\r\n        var key, keys = Object.keys(obj), i = keys.length, newObj = {};\r\n        while (i--) {\r\n            key = keys[i];\r\n            newObj[key.toLowerCase()] = obj[key];\r\n        }\r\n        return newObj;\r\n    };\r\n\r\n    /**\r\n     * Convert a string of CSS settings into an object.\r\n     * @param {string} cssText - CSS list.\r\n     * @returns {Object} Object with styleName:value.\r\n     */\r\n    var _parseCss = function(cssText) {\r\n        var regex = /([\\w-]*)\\s*:\\s*([^;]*)/g;\r\n        var match, properties = {};\r\n        while ((match = regex.exec(cssText))) {\r\n            properties[match[1].toLowerCase()] = match[2];\r\n        }\r\n        return properties;\r\n    };\r\n\r\n    /**\r\n     * Convert an object to a string of CSS settings.\r\n     * @param {Object} obj - Object with styleName:value.\r\n     * @returns {string} CSS list.\r\n     */\r\n    var _toCSS = function(obj) {\r\n        if (isNull(obj)) {\r\n            return '';\r\n        }\r\n        var key, keys = Object.keys(obj), i = keys.length, css = '';\r\n        while (i--) {\r\n            key = keys[i];\r\n            if (!isNull(obj[key])) {\r\n                css += key + ': ' + obj[key] + '; ';\r\n            }\r\n        }\r\n        return css;\r\n    };\r\n\r\n    root.$ = {\r\n        addClass: addClass,\r\n        clone: clone,\r\n        closest: closest,\r\n        coalesce: coalesce,\r\n        createNode: createNode,\r\n        debounce: debounce,\r\n        destroy: destroy,\r\n        dispatch: dispatch,\r\n        equals: equals,\r\n        extend: extend,\r\n        get: get,\r\n        getAll: getAll,\r\n        findByKey: findByKey,\r\n        forEach: forEach,\r\n        hasClass: hasClass,\r\n        hasPositiveValue: hasPositiveValue,\r\n        hasValue: hasValue,\r\n        hide: hide,\r\n        isArray: isArray,\r\n        isDate: isDate,\r\n        isEvent: isEvent,\r\n        isFunction: isFunction,\r\n        isNode: isNode,\r\n        isNull: isNull,\r\n        isNumber: isNumber,\r\n        isObject: isObject,\r\n        isString: isString,\r\n        isUndefined: isUndefined,\r\n        isVisible: isVisible,\r\n        map: map,\r\n        matches: matches,\r\n        noop: noop,\r\n        off: off,\r\n        on: on,\r\n        onChange: onChange,\r\n        ready: ready,\r\n        removeClass: removeClass,\r\n        setText: setText,\r\n        show: show,\r\n        style: style,\r\n        toggleClass: toggleClass,\r\n        toPascalKeys: toPascalKeys\r\n    };\r\n}(this));\r\n","/*!\r\n * Alertify library\r\n * https://github.com/alertifyjs/alertify.js\r\n */\r\n(function(root, $) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Hide an element using a transition if available.\r\n     * @param {Node} el - Element to hide.\r\n     */\r\n    var _hideElement = function(el) {\r\n        if (!el) {\r\n            return;\r\n        }\r\n\r\n        $.removeClass(el, 'show');\r\n        $.hide(el);\r\n\r\n        if (el.parentNode) {\r\n            var removeThis = function() {\r\n                el && el.parentNode && el.parentNode.removeChild(el);\r\n            };\r\n            $.on(el, 'transitionend', removeThis);\r\n            // Fallback for no transitions.\r\n            setTimeout(removeThis, 500);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Alertify private object.\r\n     * @type {Object}\r\n     */\r\n    var _alertify = {\r\n        parent: document.body,\r\n        defaultOkLabel: 'Okay',\r\n        okLabel: 'Okay',\r\n        defaultCancelLabel: 'Cancel',\r\n        cancelLabel: 'Cancel',\r\n        maxLogItems: 4,\r\n        promptValue: '',\r\n        promptPlaceholder: '',\r\n        closeLogOnClick: true,\r\n        delay: 5000,\r\n        logContainerClass: 'alertify-logs bottom left',\r\n        dialogs: {\r\n            buttons: {\r\n                holder: '<nav>{{buttons}}</nav>',\r\n                ok: '<button class=\"ok btn btn-primary\" tabindex=\"1\">{{ok}}</button>',\r\n                cancel: '<button class=\"cancel btn btn-warning\" tabindex=\"2\">{{cancel}}</button>'\r\n            },\r\n            input: '<div class=\"m-2\"><input type=\"text\" class=\"form-input\" required autofocus></div>',\r\n            message: '<p class=\"msg\">{{message}}</p>',\r\n            log: '<div class=\"{{class}}\">{{message}}</div>'\r\n        },\r\n\r\n        /**\r\n         * Build the proper message box.\r\n         * @param {Object} item - Current object in the queue.\r\n         * @return {string} An HTML string of the message box.\r\n         */\r\n        build: function(item) {\r\n            var btnTxt = this.dialogs.buttons.ok;\r\n            var html = '<div class=\"dialog\"><div class=\"dialog-content\">' +\r\n                this.dialogs.message.replace('{{message}}', item.message);\r\n\r\n            if (item.type === 'confirm' || item.type === 'prompt') {\r\n                btnTxt = this.dialogs.buttons.ok + this.dialogs.buttons.cancel;\r\n            }\r\n\r\n            if (item.type === 'prompt') {\r\n                html += this.dialogs.input;\r\n            }\r\n\r\n            html = (html + this.dialogs.buttons.holder + '</div></div>')\r\n                .replace('{{buttons}}', btnTxt)\r\n                .replace('{{ok}}', this.okLabel)\r\n                .replace('{{cancel}}', this.cancelLabel);\r\n\r\n            return html;\r\n        },\r\n\r\n        /**\r\n         * Close the log messages.\r\n         * @param {Object} elem - HTML Element of log message to close.\r\n         * @param {number} wait - [optional] Time (in ms) to wait before automatically hiding the message, if 0 never hide.\r\n         */\r\n        close: function(elem, wait) {\r\n            if (this.closeLogOnClick) {\r\n                $.on(elem, 'click', _hideElement.bind(null, elem));\r\n            }\r\n\r\n            wait = wait && !isNaN(+wait) ? +wait : this.delay;\r\n\r\n            if (wait < 0) {\r\n                _hideElement(elem);\r\n            } else if (wait > 0) {\r\n                setTimeout(_hideElement.bind(null, elem), wait);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Create a dialog box.\r\n         * @param {string}   message - The message passed from the callee.\r\n         * @param {string}   type - Type of dialog to create.\r\n         * @param {Function} onOkay - [Optional] Callback function when clicked okay.\r\n         * @param {Function} onCancel - [Optional] Callback function when cancelled.\r\n         * @return {Object} Promise for the dialog.\r\n         */\r\n        dialog: function(message, type, onOkay, onCancel) {\r\n            return this.setup({\r\n                type: type,\r\n                message: message,\r\n                onOkay: onOkay,\r\n                onCancel: onCancel\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Show a new log message box.\r\n         * @param {string} message - The message passed from the callee.\r\n         * @param {string} type - [Optional] Optional type of log message.\r\n         * @param {number} click - [Optional] Click event handler callback.\r\n         */\r\n        log: function(message, type, click) {\r\n            var existing = $.getAll('.alertify-logs > div');\r\n            if (existing) {\r\n                var diff = existing.length - this.maxLogItems;\r\n                if (diff >= 0) {\r\n                    for (var i = 0, _i = diff + 1; i < _i; i++) {\r\n                        this.close(existing[i], -1);\r\n                    }\r\n                }\r\n            }\r\n            this.notify(message, type, click);\r\n        },\r\n\r\n        /**\r\n         * Create the log container element.\r\n         * @return {Node} HTML node to contain the log.\r\n         */\r\n        setupLogContainer: function() {\r\n            var elLog = $.get('.alertify-logs');\r\n            var className = this.logContainerClass;\r\n            if (!elLog) {\r\n                elLog = document.createElement('div');\r\n                elLog.className = className;\r\n                this.parent.appendChild(elLog);\r\n            }\r\n\r\n            // Make sure it's positioned properly.\r\n            if (elLog.className !== className) {\r\n                elLog.className = className;\r\n            }\r\n\r\n            return elLog;\r\n        },\r\n\r\n        /**\r\n         * Add new log message.\r\n         * If a type is passed, a class name \"{type}\" will get added.\r\n         * This allows for custom look and feel for various types of notifications.\r\n         * @param {string} message - The message passed from the callee.\r\n         * @param {string} type - [Optional] Type of log message.\r\n         * @param {number} click - [Optional] Click event handler callback.\r\n         */\r\n        notify: function(message, type, click) {\r\n            var elLog = this.setupLogContainer();\r\n            var log = document.createElement('div');\r\n            log.className = (type || 'default');\r\n            log.innerHTML = message;\r\n\r\n            // Add the click handler, if specified.\r\n            if ($.isFunction(click)) {\r\n                log.addEventListener('click', click);\r\n            }\r\n\r\n            elLog.appendChild(log);\r\n            setTimeout(function() {\r\n                $.addClass(log, 'show');\r\n            }, 10);\r\n\r\n            this.close(log, this.delay);\r\n        },\r\n\r\n        /**\r\n         * Initiate all the required pieces for the dialog box.\r\n         * @param {Object} item - Options for creating the dialog.\r\n         * @returns {Promise} Promise to create the dialog.\r\n         */\r\n        setup: function(item) {\r\n            var el = document.createElement('div');\r\n            el.className = 'alertify d-none';\r\n            el.innerHTML = this.build(item);\r\n\r\n            var btnOK = $.get('.ok', el);\r\n            var btnCancel = $.get('.cancel', el);\r\n            var input = $.get('input', el);\r\n            var label = $.get('label', el);\r\n            var self = this;\r\n\r\n            // Set default value/placeholder of input\r\n            if (input) {\r\n                if ($.isString(this.promptPlaceholder)) {\r\n                    // Set the label, if available, for MDL, etc.\r\n                    if (label) {\r\n                        label.textContent = this.promptPlaceholder;\r\n                    } else {\r\n                        input.placeholder = this.promptPlaceholder;\r\n                    }\r\n                }\r\n                if ($.isString(this.promptValue)) {\r\n                    input.value = this.promptValue;\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Create event handlers for a dialog.\r\n             * @param {Object} resolve - Promise resolve function.\r\n             */\r\n            function setupHandlers(resolve) {\r\n                if (!$.isFunction(resolve)) {\r\n                    // promises are not available so resolve is a no-op\r\n                    resolve = function() { };\r\n                }\r\n\r\n                if (btnOK) {\r\n                    $.on(btnOK, 'click', function(ev) {\r\n                        if ($.isFunction(item.onOkay)) {\r\n                            if (input) {\r\n                                item.onOkay(input.value, ev);\r\n                            } else {\r\n                                item.onOkay(ev);\r\n                            }\r\n                        }\r\n                        if (input) {\r\n                            resolve({ buttonClicked: 'ok', inputValue: input.value, event: ev });\r\n                        } else {\r\n                            resolve({ buttonClicked: 'ok', event: ev });\r\n                        }\r\n                        _hideElement(el);\r\n                        self.reset();\r\n                    });\r\n                }\r\n\r\n                if (btnCancel) {\r\n                    $.on(btnCancel, 'click', function(ev) {\r\n                        if ($.isFunction(item.onCancel)) {\r\n                            item.onCancel(ev);\r\n                        }\r\n                        resolve({ buttonClicked: 'cancel', event: ev });\r\n                        _hideElement(el);\r\n                        self.reset();\r\n                    });\r\n                }\r\n\r\n                if (input) {\r\n                    $.on(input, 'keydown', function(ev) {\r\n                        if (btnOK && ev.which === 13) {\r\n                            btnOK.click();\r\n                        }\r\n                    });\r\n                }\r\n\r\n                $.on(el, 'keydown', function(ev) {\r\n                    if (ev.which === 27) {\r\n                        if (btnCancel) {\r\n                            btnCancel.click();\r\n                        } else if (btnOK) {\r\n                            btnOK.click();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            var promise = new Promise(setupHandlers);\r\n\r\n            this.parent.appendChild(el);\r\n            setTimeout(function() {\r\n                $.show(el);\r\n                if (input && item.type && item.type === 'prompt') {\r\n                    input.select();\r\n                    input.focus();\r\n                } else {\r\n                    if (btnOK) {\r\n                        btnOK.focus();\r\n                    }\r\n                }\r\n            }, 100);\r\n\r\n            return promise;\r\n        },\r\n\r\n        /**\r\n         * Set the label for the ok button.\r\n         * @param {string} label - Button text.\r\n         * @return {Object} Reference to self.\r\n         */\r\n        okBtn: function(label) {\r\n            this.okLabel = label;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Set the label for the cancel button.\r\n         * @param {string} label - Button text.\r\n         * @return {Object} Reference to self.\r\n         */\r\n        cancelBtn: function(label) {\r\n            this.cancelLabel = label;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Reset the dialog to default settings.\r\n         */\r\n        reset: function() {\r\n            this.parent = document.body;\r\n            this.okBtn(this.defaultOkLabel);\r\n            this.cancelBtn(this.defaultCancelLabel);\r\n            this.promptValue = '';\r\n            this.promptPlaceholder = '';\r\n            this.logTemplateMethod = null;\r\n        }\r\n    };\r\n\r\n    var Alertify = {\r\n        parent: function(elem) {\r\n            _alertify.parent = elem;\r\n        },\r\n        alert: function(message, onOkay, onCancel) {\r\n            return _alertify.dialog(message, 'alert', onOkay, onCancel) || this;\r\n        },\r\n        confirm: function(message, onOkay, onCancel) {\r\n            return _alertify.dialog(message, 'confirm', onOkay, onCancel) || this;\r\n        },\r\n        prompt: function(message, onOkay, onCancel) {\r\n            return _alertify.dialog(message, 'prompt', onOkay, onCancel) || this;\r\n        },\r\n        log: function(message, click) {\r\n            _alertify.log(message, 'default', click);\r\n            return this;\r\n        },\r\n        success: function(message, click) {\r\n            _alertify.log(message, 'success', click);\r\n            return this;\r\n        },\r\n        error: function(message, click) {\r\n            _alertify.log(message, 'error', click);\r\n            return this;\r\n        },\r\n        cancelBtn: function(label) {\r\n            _alertify.cancelBtn(label);\r\n            return this;\r\n        },\r\n        okBtn: function(label) {\r\n            _alertify.okBtn(label);\r\n            return this;\r\n        },\r\n        placeholder: function(str) {\r\n            _alertify.promptPlaceholder = str;\r\n            return this;\r\n        },\r\n        defaultValue: function(str) {\r\n            _alertify.promptValue = str;\r\n            return this;\r\n        },\r\n        dismissAll: function() {\r\n            _alertify.setupLogContainer().innerHTML = '';\r\n            return this;\r\n        },\r\n        updateResources: function(okay, cancel) {\r\n            _alertify.defaultOkLabel = okay;\r\n            _alertify.okLabel = okay;\r\n            _alertify.defaultCancelLabel = cancel;\r\n            _alertify.cancelLabel = cancel;\r\n        }\r\n    };\r\n\r\n    root.Alertify = Alertify;\r\n}(this, this.$));\r\n","/*!\r\n * PJAX library.\r\n */\r\n(function(root, $, Alertify) {\r\n    'use strict';\r\n\r\n    var pjax = {\r\n        firstRun: true,\r\n        ignoreFileTypes: ['pdf', 'doc', 'docx', 'zip', 'rar', '7z', 'gif', 'jpeg', 'jpg', 'png'],\r\n        excludeClass: 'pjax-no-follow',\r\n        container: '#contentWrapper'\r\n    };\r\n\r\n    /**\r\n     * Updates DOM with new content.\r\n     * @param {string} html - DOM fragment of loaded container.\r\n     * @param {Object} options - Configuration options.\r\n     * return {Object} Updated options.\r\n     */\r\n    pjax.updateContent = function(html, options) {\r\n        var newNode = $.createNode(html);\r\n        var title = $.getAll('[data-pjax-title]', newNode, true);\r\n        if (title.length) {\r\n            options.title = title[0].getAttribute('data-pjax-title');\r\n        }\r\n        var url = $.getAll('[data-pjax-url]', newNode, true);\r\n        if (url.length) {\r\n            options.url = url[0].getAttribute('data-pjax-url');\r\n        }\r\n        var container = $.getAll('[data-pjax-container]', newNode, true);\r\n        if (container.length) {\r\n            options.container = container[0].getAttribute('data-pjax-container');\r\n        }\r\n        var method = $.getAll('[data-pjax-method]', newNode, true);\r\n        if (method.length) {\r\n            options.method = method[0].getAttribute('data-pjax-method');\r\n        }\r\n\r\n        // Get container node\r\n        var node = $.get(options.container || pjax.container);\r\n        // Update the DOM with the new content\r\n        node.innerHTML = html;\r\n\r\n        return options;\r\n    };\r\n\r\n    /**\r\n     * Fire load events after loading content.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    pjax.onLoad = function(options) {\r\n        var node = $.get(options.container);\r\n        $.content.load(node);\r\n        pjax.checkEvents(node, 'data-load-event');\r\n\r\n        if (!$.isNull(options.title)) {\r\n            // Set page title\r\n            document.title = options.title;\r\n        }\r\n        if (options.returnToTop) {\r\n            // Scroll to top of page\r\n            window.scrollTo(0, 0);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Fire unload events before unloading content.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    pjax.onUnload = function(options) {\r\n        var node = $.get(options.container);\r\n        pjax.checkEvents(node, 'data-unload-event');\r\n        $.content.unload(node);\r\n    };\r\n\r\n    /**\r\n     * Update browser history.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    pjax.updateHistory = function(options) {\r\n        if (!options.history) {\r\n            return;\r\n        }\r\n        // If this is the first time pjax has run, create a state object for the current page.\r\n        if (pjax.firstRun) {\r\n            window.history.replaceState({ url: document.location.href, container: options.container, title: document.title, method: options.method }, document.title);\r\n            pjax.firstRun = false;\r\n        }\r\n        // Update browser history\r\n        window.history.pushState({ url: options.url, container: options.container, title: options.title, method: options.method }, options.title, options.url);\r\n    };\r\n\r\n    /**\r\n     * Handle requests to load content.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    pjax.handle = function(options) {\r\n        pjax.request(options, function(html) {\r\n            if (html === false) {\r\n                $.content.done();\r\n                return;\r\n            }\r\n\r\n            pjax.onUnload(options);\r\n            options = pjax.updateContent(html, options);\r\n            pjax.updateHistory(options);\r\n            pjax.onLoad(options);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Performs AJAX request to page and returns the result..\r\n     * @param {Object} options - Configuration options.\r\n     * @param {Function} callback - Method to call when a page is loaded.\r\n     */\r\n    pjax.request = function(options, callback) {\r\n        $.content.loading();\r\n\r\n        $.ajax({\r\n            method: options.method || 'GET',\r\n            url: options.url + ((!/[?&]/.test(options.url)) ? '?_pjax' : '&_pjax'),\r\n            headers: { 'X-PJAX': 'true' }\r\n        }, function(response) {\r\n            callback(response);\r\n            $.content.done();\r\n        }, function() {\r\n            callback(false);\r\n            $.content.done();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Performs AJAX form submission request to page and returns the result.\r\n     * @param form. Form to submit.\r\n     * @param callback. Method to call when a page is loaded.\r\n     */\r\n    pjax.submit = function(form, callback) {\r\n        $.content.loading();\r\n\r\n        $.ajax({\r\n            method: form.hasAttribute('data-method') ? form.getAttribute('data-method') : 'POST',\r\n            url: form.getAttribute('action'),\r\n            headers: { 'X-PJAX': 'true' },\r\n            body: new FormData(form)\r\n        }, function(response) {\r\n            callback(response);\r\n            $.content.done();\r\n        }, function() {\r\n            callback(false);\r\n            $.content.done();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Validate and correct options object.\r\n     * @param {Object} options - Configuration options.\r\n     * @return {Object|bool} Valid options object or false.\r\n     */\r\n    pjax.parseOptions = function(options, target) {\r\n        options = options || {};\r\n        if ($.isNull(options.url)) {\r\n            return false;\r\n        }\r\n\r\n        if (target) {\r\n            // If data-method is specified, use as request method\r\n            if (target.getAttribute('data-method')) {\r\n                options.method = target.getAttribute('data-method');\r\n            }\r\n\r\n            // If data-pjax is specified, use as container\r\n            if (target.getAttribute('data-pjax')) {\r\n                options.container = target.getAttribute('data-pjax');\r\n            }\r\n\r\n            // If data-pjax-title is specified, use as title\r\n            if (target.getAttribute('data-pjax-title')) {\r\n                options.title = target.getAttribute('data-pjax-title');\r\n            }\r\n        }\r\n\r\n        // Use default options if not defined\r\n        options = $.extend({\r\n            method: 'GET',\r\n            container: pjax.container,\r\n            history: true,\r\n            returnToTop: true\r\n        }, options);\r\n\r\n        // Ensure history is a boolean.\r\n        options.history = (options.history === false) ? false : true;\r\n\r\n        // Return valid options\r\n        return options;\r\n    };\r\n\r\n    /**\r\n     * Search node for event attributes and dispatch them.\r\n     * @param {Node} node - DOM node to search in.\r\n     * @param {string} eventName - Name of event attribute to search for.\r\n     */\r\n    pjax.checkEvents = function(node, eventName) {\r\n        $.getAll('[' + eventName + ']', node, node !== document).forEach(function(x) {\r\n            var ev = x.getAttribute(eventName);\r\n            if ($.events.hasOwnProperty(ev)) {\r\n                $.dispatch(x, $.events[ev]);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Configure pjax.\r\n     */\r\n    pjax.init = function() {\r\n        var body = $.get('body');\r\n        $.content.load(body);\r\n        pjax.checkEvents(body, 'data-load-event');\r\n    };\r\n\r\n    /**\r\n     * Directly invoke a pjax page load.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    pjax.invoke = function(options) {\r\n        // Process options\r\n        options = pjax.parseOptions(options);\r\n        // If everything went okay, activate pjax.\r\n        if (options !== false) {\r\n            pjax.handle(options);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * popstate listener\r\n     * Listens for back/forward button events and updates page accordingly.\r\n     */\r\n    $.on(window, 'popstate', function(e) {\r\n        if (e.state !== null) {\r\n            var opt = $.coalesce({\r\n                url: e.state.url,\r\n                container: e.state.container,\r\n                title: e.state.title,\r\n                method: e.state.method,\r\n                history: false\r\n            });\r\n\r\n            // Convert state data to PJAX options\r\n            var options = pjax.parseOptions(opt);\r\n            // If something went wrong, return.\r\n            if (options === false) return;\r\n            // If there is a state object, handle it as a page load.\r\n            pjax.handle(options);\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Link click listener.\r\n     */\r\n    $.on(document, 'click', function(event) {\r\n        var target = event.target || event.srcElement;\r\n        if (target.nodeName !== 'A') {\r\n            target = $.closest('a', target);\r\n        }\r\n        if (!(target && target.nodeName === 'A' && !(pjax.excludeClass && $.hasClass(target, pjax.excludeClass)))) {\r\n            // Ignore clicks unless its a link that doesn't have the exclude class\r\n            return;\r\n        }\r\n        if (target.protocol !== document.location.protocol || target.host !== document.location.host) {\r\n            // Ignore external links\r\n            return;\r\n        }\r\n        if (target.pathname === location.pathname && target.hash.length > 0) {\r\n            // Ignore anchors on the same page\r\n            return;\r\n        }\r\n        if (pjax.ignoreFileTypes.indexOf(target.pathname.split('.').pop().toLowerCase()) !== -1) {\r\n            // Skip link if file type is within ignored types array\r\n            return;\r\n        }\r\n        if (event.which > 1 || event.metaKey || event.ctrlKey) {\r\n            // Allow middle click (pages in new windows)\r\n            return;\r\n        }\r\n\r\n        // Don't fire normal event\r\n        event.preventDefault();\r\n\r\n        var options = { url: target.href };\r\n        if (document.location.href === options.url && !target.hasAttribute('data-reload')) {\r\n            // Take no action if we are already on said page and reload isn't allowed\r\n            return;\r\n        }\r\n\r\n        // Check options are valid.\r\n        options = pjax.parseOptions(options, target);\r\n        if (options === false) {\r\n            return;\r\n        }\r\n\r\n        // Check for confirmation or form changes before loading content.\r\n        if (target.getAttribute('data-confirm')) {\r\n            Alertify.dismissAll();\r\n            Alertify.confirm(target.getAttribute('data-confirm'), pjax.handle.bind(null, options), function(e) { e.target.focus(); });\r\n        } else {\r\n            var form = $.get('form.has-changes');\r\n            if (form) {\r\n                Alertify.confirm(form.getAttribute('data-confirm'), pjax.handle.bind(null, options), function(e) { e.target.focus(); });\r\n            } else {\r\n                pjax.handle(options);\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Form change listener.\r\n     */\r\n    $.on(document, 'change', function(event) {\r\n        var target = event.target || event.srcElement;\r\n        if (['INPUT', 'SELECT', 'TEXTAREA'].indexOf(target.nodeName) === -1) {\r\n            // Ignore change unless its form input\r\n            return;\r\n        }\r\n\r\n        var form = $.closest('FORM', target);\r\n        if (form) {\r\n            $.addClass(form, 'has-changes');\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Form submit listener.\r\n     */\r\n    $.on(document, 'submit', function(event) {\r\n        var target = event.target || event.srcElement;\r\n        if (target.nodeName !== 'FORM') {\r\n            target = $.closest('FORM', target);\r\n        }\r\n        if (!(target && target.nodeName === 'FORM' && !(pjax.excludeClass && $.hasClass(target, pjax.excludeClass)))) {\r\n            // Ignore submit unless its a form that doesn't have the exclude class\r\n            return;\r\n        }\r\n\r\n        var actionNode = document.createElement('a');\r\n        actionNode.href = target.action;\r\n        if (actionNode.protocol !== document.location.protocol || actionNode.host !== document.location.host) {\r\n            return;\r\n        }\r\n\r\n        var options = { url: target.action };\r\n        // Check options are valid.\r\n        options = pjax.parseOptions(options, target);\r\n        if (options === false) return;\r\n\r\n        // Don't fire normal event\r\n        event.preventDefault();\r\n\r\n        // handle the submission\r\n        pjax.submit(target, function(html) {\r\n            if (html === false) {\r\n                return;\r\n            }\r\n\r\n            pjax.onUnload(options);\r\n            options = pjax.updateContent(html, options);\r\n            pjax.updateHistory(options);\r\n            pjax.onLoad(options);\r\n        });\r\n    });\r\n\r\n    root.pjax = pjax;\r\n})(this, this.$, this.Alertify);\r\n","/*!\r\n * Custom events.\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    var events = {\r\n        chartLoad: new CustomEvent('chartLoad'),\r\n        chartShareLoad: new CustomEvent('chartShareLoad'),\r\n        chartShareUnload: new CustomEvent('chartShareUnload'),\r\n        chartUnload: new CustomEvent('chartUnload'),\r\n        columnSelectorLoad: new CustomEvent('columnSelectorLoad'),\r\n        dashboardLoad: new CustomEvent('dashboardLoad'),\r\n        dashboardUnload: new CustomEvent('dashboardUnload'),\r\n        datasetFormLoad: new CustomEvent('datasetFormLoad'),\r\n        datasetFormUnload: new CustomEvent('datasetFormUnload'),\r\n        layoutUpdate: new CustomEvent('layoutUpdate'),\r\n        reportLoad: new CustomEvent('reportLoad'),\r\n        reportUnload: new CustomEvent('reportUnload'),\r\n        reportShareLoad: new CustomEvent('reportShareLoad'),\r\n        reportShareUnload: new CustomEvent('reportShareUnload'),\r\n        resxLoaded: new CustomEvent('resxLoaded'),\r\n        tableLoad: new CustomEvent('tableLoad'),\r\n        tableUnload: new CustomEvent('tableUnload'),\r\n        tableDestroy: new CustomEvent('tableDestroy'),\r\n        tableRefresh: new CustomEvent('tableRefresh')\r\n    };\r\n\r\n    $.events = events;\r\n}(this.$));\r\n\r\n/*!\r\n * Fetch wrapper and error logging.\r\n */\r\n(function($, Alertify) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Wrap fetch with success/error handling.\r\n     * @param {Object} options - Options to use for the request.\r\n     * @param {Function} onSuccess - Function to handle success result.\r\n     * @param {Function} onError - Function to handle error result.\r\n     */\r\n    var _ajax = function(options, onSuccess, onError) {\r\n        options = options || {};\r\n        options.headers = $.extend({\r\n            'X-Requested-With': 'XMLHttpRequest'\r\n        }, options.headers);\r\n        if (options.token) {\r\n            options.headers['X-XSRF-TOKEN'] = options.token;\r\n            delete options.token;\r\n        }\r\n\r\n        // keep browser from caching requests by tacking milliseconds to end of url\r\n        var url = options.url + (options.url.indexOf('?') > -1 ? '&' : '?') + '_t=' + Date.now();\r\n        delete options.url;\r\n\r\n        if (options.data) {\r\n            options.headers['Content-Type'] = 'application/json';\r\n            if (options.method === 'GET') {\r\n                url += '&' + Object.keys(options.data).map(function(x) {\r\n                    return encodeURIComponent(x) + '=' + encodeURIComponent(options.data[x]);\r\n                }).join('&');\r\n            } else {\r\n                options.body = JSON.stringify(options.data);\r\n            }\r\n            delete options.data;\r\n        }\r\n        options.credentials = 'same-origin';\r\n\r\n        fetch(url, options)\r\n            .then(_checkStatus)\r\n            .then(_parse)\r\n            .then(function(data) {\r\n                if (data.reload) {\r\n                    location.reload(true);\r\n                    return;\r\n                }\r\n                if (data.error) {\r\n                    if ($.isFunction(onError)) {\r\n                        onError(data);\r\n                    }\r\n                    Alertify.error(data.error);\r\n                } else {\r\n                    if ($.isFunction(onSuccess)) {\r\n                        onSuccess(data);\r\n                    }\r\n                    if (data.message) {\r\n                        Alertify.success(data.message);\r\n                    }\r\n                }\r\n            }).catch(function(data) {\r\n                if (url.indexOf('LogJavascriptError') > -1) {\r\n                    return;\r\n                }\r\n                // @todo not sure what to log here\r\n                logError(data.message);\r\n                if (data.response && data.response.status && [400, 401, 402, 403].indexOf(data.response.status) > -1) {\r\n                    location.reload(true);\r\n                } else {\r\n                    Alertify.error(($.resx && $.resx('errorGeneric')) || 'An unhandled error occurred.');\r\n                }\r\n                if ($.isFunction(onError)) {\r\n                    onError(data.response);\r\n                }\r\n            });\r\n    };\r\n\r\n    var _requestQueue = [];\r\n\r\n    var Request = function(options, onSuccess, onError) {\r\n        this.options = options;\r\n        this.onSuccess = onSuccess;\r\n        this.onError = onError;\r\n        this.status = 0;\r\n    };\r\n\r\n    Request.prototype = {\r\n        constructor: Request,\r\n        key: function() {\r\n            return this.options.key;\r\n        },\r\n        abort: function() {\r\n            if (this.isInProcess()) {\r\n                this.promise.reject();\r\n            }\r\n            this.dequeue();\r\n        },\r\n        execute: function() {\r\n            _ajax(this.options, this.success.bind(this), this.error.bind(this));\r\n            this.status = 1;\r\n        },\r\n        success: function(data) {\r\n            this.dequeue();\r\n            if (this.onSuccess) {\r\n                this.onSuccess(data);\r\n            }\r\n        },\r\n        error: function(data) {\r\n            this.dequeue();\r\n            if (this.onError) {\r\n                this.onError(data);\r\n            }\r\n        },\r\n        isInProcess: function() {\r\n            return this.status === 1;\r\n        },\r\n        dequeue: function() {\r\n            // remove this from the queue and start the next request\r\n            var self = this;\r\n            _requestQueue = _requestQueue.filter(function(x) { return x !== self; });\r\n            if (_requestQueue.length) {\r\n                _requestQueue[0].execute();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Queue up an ajax request. Queue prevents one user from hammering the server.\r\n     * @param {Object} options - Options to use for the ajax request.\r\n     * @param {Function} onSuccess - Function to handle success result.\r\n     * @param {Function} onError - Function to handle error result.\r\n     */\r\n    var ajax = function(options, onSuccess, onError) {\r\n        options.key = options.key || options.url;\r\n        var request = new Request(options, onSuccess, onError);\r\n\r\n        // remove requests from queue that are for this key and aren't already in process\r\n        _requestQueue = _requestQueue.filter(function(x) {\r\n            return x.key() !== options.key || x.isInProcess();\r\n        });\r\n        _requestQueue.push(request);\r\n\r\n        if (_requestQueue.length === 1) {\r\n            // nothing else in the queue, so execute now\r\n            request.execute();\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * Log JS errors to elmah.\r\n     * @param {string} msg - Error message.\r\n     * @param {string} url - Error source URL.\r\n     * @param {number} line - Line # error occurred on\r\n     * @param {number} columnNo - Column # error occurred on\r\n     * @param {string|string[]|null} stack - Stack trace.\r\n     */\r\n    var logError = function(msg, url, lineNo, columnNo, stack) {\r\n        if ($.isNull(msg)) {\r\n            return;\r\n        }\r\n\r\n        var detail = msg + ': at path \\'' + (url || document.location) + '\\'';\r\n        if (!$.isNull(lineNo)) {\r\n            detail += ' at ' + lineNo + ':' + columnNo;\r\n        }\r\n        if (!$.isNull(stack)) {\r\n            detail += '\\n    at ' + ($.isString(stack) ? stack : stack.join('\\n    at '));\r\n        }\r\n\r\n        // save error message to server\r\n        _ajax({ method: 'POST', url: '/Error/LogJavascriptError', data: { message: detail }, block: false }, null, null);\r\n    };\r\n\r\n    var _checkStatus = function(response) {\r\n        if (response.status >= 200 && response.status < 300) {\r\n            return response;\r\n        } else {\r\n            var error = new Error(response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Deserialize response from fetch.\r\n     * @param {Object} response - Response object\r\n     * @returns {Object} Result object from JSON, or object with a single 'content' property if that fails.\r\n     */\r\n    var _parse = function(response) {\r\n        try {\r\n            var contentType = response && response.headers.has('content-type') ? response.headers.get('content-type') : '';\r\n            return contentType && (contentType.indexOf('application/json') > -1 || contentType.indexOf('application/jil') > -1) ? response.json() : response.text();\r\n        } catch (ex) {\r\n            return response;\r\n        }\r\n    };\r\n\r\n    $.ajax = ajax;\r\n    $.logError = logError;\r\n}(this.$, this.Alertify));\r\n\r\n/**\r\n * Add a application wide error handler to log errors.\r\n * Outside of strict mode to prevent errors.\r\n * @param {string} msg - Error message.\r\n * @param {string} url - Error source URL.\r\n * @param {number} line - Line # error occurred on\r\n * @param {number} columnNo - Column # error occurred on\r\n * @param {Error|null} error - Error object if browser supports it\r\n */\r\nwindow.onerror = function(msg, url, lineNo, columnNo, error) {\r\n    this.$.logError(msg, url, lineNo, columnNo, error && error.stack ? error.stack : null);\r\n};\r\n\r\n/*!\r\n * Resource handling.\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    var _resx = {};\r\n\r\n    /**\r\n     * Get/set i18n resource strings.\r\n     * @param {string|Object} key - Key of the resource to get/set, or an object of resource strings.\r\n     * @param {string} value - Set key to this value if provided\r\n     * @returns {string} Returns the value of key, or null if key is not defined.\r\n     */\r\n    var resx = function(key, value) {\r\n        if (!$.isString(key)) {\r\n            $.extend(_resx, key);\r\n        } else if ($.isNull(value)) {\r\n            if (_resx.hasOwnProperty(key)) {\r\n                return _resx[key];\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            _resx[key] = value;\r\n        }\r\n    };\r\n\r\n    var body = $.get('body');\r\n    if (body && body.hasAttribute('data-resx')) {\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: body.getAttribute('data-resx'),\r\n            headers: {\r\n                'Content-Type': 'application/jil; charset=utf-8',\r\n                'Accept': 'application/jil'\r\n            }\r\n        }, function(data) {\r\n            if (data) {\r\n                _resx = data;\r\n            }\r\n            $.dispatch(document, $.events.resxLoaded);\r\n            $.resxLoaded = true;\r\n        }, function() {\r\n            $.dispatch(document, $.events.resxLoaded);\r\n            $.resxLoaded = true;\r\n        });\r\n    }\r\n\r\n    $.resx = resx;\r\n})(this.$);\r\n\r\n/*!\r\n * Color functions.\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Convert hex string to RGB.\r\n     * @param {string} hex - Hex string.\r\n     * @returns {Object} Object with RGB properties.\r\n     */\r\n    var hex2rgb = function(hex) {\r\n        return { r: parseInt(hex.substr(1, 2), 16), g: parseInt(hex.substr(3, 2), 16), b: parseInt(hex.substr(5, 2), 16) };\r\n    };\r\n\r\n    /**\r\n     * Convert RGB to hex string.\r\n     * @param {Object} color Object with r/g/b properties.\r\n     * @returns {string} hex - Hex string.\r\n     */\r\n    var rgb2hex = function(color) {\r\n        var hex = [\r\n            (color.r * 1).toString(16),\r\n            (color.g * 1).toString(16),\r\n            (color.b * 1).toString(16)\r\n        ];\r\n        return '#' + hex.map(function(x) {\r\n            return ('00' + x.toString()).slice(-2);\r\n        }).join('').toUpperCase();\r\n    };\r\n\r\n    /**\r\n     * Converts an RGB color value to HSL. Conversion formula\r\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n     * Assumes r, g, and b are contained in the set [0, 255] and\r\n     * returns h, s, and l in the set [0, 1].\r\n     * @param {Object} rgb - Object with r, g, and b properties.\r\n     * @return {Number[]} The HSL representation.\r\n     */\r\n    var rgb2hsl = function(rgb) {\r\n        var r = rgb.r, g = rgb.g, b = rgb.b;\r\n        r /= 255, g /= 255, b /= 255;\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if (max === min) {\r\n            h = s = 0; // achromatic\r\n        } else {\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch (max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        return [h, s, l];\r\n    };\r\n\r\n    $.colors = {\r\n        hex2rgb: hex2rgb,\r\n        rgb2hex: rgb2hex,\r\n        rgb2hsl: rgb2hsl,\r\n    };\r\n})(this.$);\r\n\r\n/*!\r\n * accounting.js v0.4.2\r\n * Copyright 2014 Open Exchange Rates\r\n *\r\n * Freely distributable under the MIT license.\r\n * Portions of accounting.js are inspired or borrowed from underscore.js\r\n *\r\n * Full details and documentation:\r\n * http://openexchangerates.github.io/accounting.js/\r\n */\r\n(function($) {\r\n    var lib = {\r\n        settings: {\r\n            currency: {\r\n                symbol: '$',\t\t// default currency symbol is '$'\r\n                format: '%s%v',\t    // controls output: %s = symbol, %v = value (can be object, see docs)\r\n                decimal: '.',\t\t// decimal point separator\r\n                thousand: ',',\t\t// thousands separator\r\n                precision: 2,\t\t// decimal places\r\n                grouping: 3\t\t    // digit grouping (not implemented yet)\r\n            },\r\n            number: {\r\n                precision: 0,\t\t// default precision on numbers is 0\r\n                grouping: 3,\t\t// digit grouping (not implemented yet)\r\n                thousand: ',',\r\n                decimal: '.'\r\n            }\r\n        }\r\n    };\r\n\r\n    var tokens = {\r\n        symbol: /\\{s:(.?)\\}/i,\r\n        decimal: /\\[d:(.?)\\]/i,\r\n        thousand: /\\[t:(.?)\\]/i,\r\n        precision: /\\[p:(.?)\\]/i,\r\n        value: /\\{#+\\}/i\r\n    };\r\n\r\n    /**\r\n     * Check and normalise the value of precision (must be positive integer).\r\n     * @param {number} val - Value of precision to validate\r\n     * @returns {number} Positive integer value.\r\n     */\r\n    var checkPrecision = function(val) {\r\n        val = Math.round(Math.abs(val));\r\n        return isNaN(val) ? lib.settings.number.precision : val;\r\n    };\r\n\r\n    /**\r\n     * Parses a format string or object and returns format obj for use in rendering.\r\n     * @param {string|Object} format - Default (positive) format, or object containing `pos` (required), `neg` and `zero` values (or a function returning either a string or object)\r\n     * @returns {Object} Format object with pos, neg, and zero properties.\r\n     */\r\n    var checkCurrencyFormat = function(format) {\r\n        // Format can be a string, in which case `value` (\"%v\") must be present:\r\n        if ($.isString(format) && format.match('%v')) {\r\n            // Create and return positive, negative and zero formats:\r\n            return {\r\n                pos: format,\r\n                neg: format.replace('-', '').replace('%v', '-%v'),\r\n                zero: format\r\n            };\r\n        }\r\n        if (!format || !format.pos || !format.pos.match('%v')) {\r\n            // If no format, or object is missing valid positive value, use default.\r\n            // If default is a string, casts it to an object for faster checking next time.\r\n            var x = lib.settings.currency.format;\r\n            if ($.isString(x)) {\r\n                lib.settings.currency.format = x = { pos: x, neg: x.replace('%v', '-%v'), zero: x };\r\n            }\r\n            return x;\r\n        }\r\n        return format;\r\n    };\r\n\r\n    /**\r\n     * Takes a format string and parses it into an object.\r\n     * @param {string} format - Format string`\r\n     * @returns {Object} Object with format settings.\r\n     */\r\n    var parseFormat = function(format) {\r\n        if (!$.isString(format)) {\r\n            return format || {};\r\n        }\r\n\r\n        var res = {}, x;\r\n        var newFormat = format;\r\n        if ((x = tokens.symbol.exec(newFormat)) !== null && x.length > 1) {\r\n            res.symbol = x[1];\r\n            newFormat = newFormat.replace(x[0], '%s');\r\n        }\r\n        if ((x = tokens.decimal.exec(newFormat)) !== null && x.length > 1) {\r\n            res.decimal = x[1];\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.thousand.exec(newFormat)) !== null && x.length > 1) {\r\n            res.thousand = x[1];\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.precision.exec(newFormat)) !== null && x.length > 1) {\r\n            res.precision = x[1] * 1;\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.value.exec(newFormat)) !== null) {\r\n            res.format = newFormat.replace(x[0], '%v');\r\n        } else {\r\n            res.format = newFormat + ' %v';\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Takes a string/array of strings, removes all formatting/cruft and returns the raw float value.\r\n     * @param {string|number} value - Value to remove formatting from.\r\n     * @returns {number} Number with no formatting.\r\n     */\r\n    var unformat = function(value) {\r\n        value = value || 0;\r\n        if ($.isNumber(value)) {\r\n            return value;\r\n        }\r\n\r\n        // Build regex to strip out everything except digits, decimal point and minus sign:\r\n        var regex = new RegExp('[^0-9-' + lib.settings.number.decimal + ']', ['g']);\r\n        var unformatted = parseFloat(('' + value)\r\n            .replace(/\\((.*)\\)/, '-$1') // replace bracketed values with negatives\r\n            .replace(regex, '')         // strip out any cruft\r\n            .replace(lib.settings.number.decimal, '.')      // make sure decimal point is standard\r\n        );\r\n\r\n        // This will fail silently which may cause trouble, let's wait and see:\r\n        return !isNaN(unformatted) ? unformatted : 0;\r\n    };\r\n\r\n    /**\r\n     * Implementation of toFixed() that treats floats more like decimals.\r\n     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === \"0.61\") that present problems for accounting- and finance-related software.\r\n     * @param {number|string} value - Number to convert\r\n     * @param {number} precision - Number of digits after the decimal.\r\n     * @returns {number} Formatted value.\r\n     */\r\n    var toFixed = function(value, precision) {\r\n        precision = checkPrecision(precision);\r\n        var power = Math.pow(10, precision);\r\n        // Multiply up by precision, round accurately, then divide and use native toFixed():\r\n        return (Math.round(unformat(value) * power) / power).toFixed(precision);\r\n    };\r\n\r\n    /**\r\n     * Format a number, with comma-separated thousands and custom precision/decimal places.\r\n     * @param {number} number - Number to format.\r\n     * @param {string} format - Tokenized string format.\r\n     * @returns {string} Formatted number.\r\n     */\r\n    var formatNumber = function(number, format) {\r\n        number = unformat(number);\r\n        var opts = $.extend({}, lib.settings.number, parseFormat(format));\r\n        var usePrecision = checkPrecision(opts.precision);\r\n        var base = parseInt(toFixed(Math.abs(number || 0), usePrecision), 10) + '';\r\n        var mod = base.length > 3 ? base.length % 3 : 0;\r\n        return (number < 0 ? '-' : '') + (mod ? base.substr(0, mod) + opts.thousand : '') + base.substr(mod).replace(/(\\d{3})(?=\\d)/g, '$1' + opts.thousand) +\r\n            (usePrecision ? opts.decimal + toFixed(Math.abs(number), usePrecision).split('.')[1] : '');\r\n    };\r\n\r\n    /**\r\n     * Format a number as currency, with comma-separated thousands and custom precision/decimal places.\r\n     * @param {number} number - Number to format.\r\n     * @param {string} format - Tokenized string format.\r\n     * @returns {string} Formatted currency.\r\n     */\r\n    var formatMoney = function(number, format) {\r\n        number = unformat(number);\r\n        var opts = $.extend({}, lib.settings.currency, parseFormat(format));\r\n        var formats = checkCurrencyFormat(opts.format);\r\n        return (number > 0 ? formats.pos : number < 0 ? formats.neg : formats.zero)\r\n            .replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(number), format));\r\n    };\r\n\r\n    $.accounting = {\r\n        formatMoney: formatMoney,\r\n        formatNumber: formatNumber,\r\n        parseFormat: parseFormat,\r\n        unformat: unformat\r\n    };\r\n}(this.$));\r\n\r\n/*!\r\n * Lightweight date library\r\n * https://github.com/taylorhakes/fecha\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    var fecha = {};\r\n    var token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\r\n    var twoDigits = /\\d\\d?/;\r\n    var threeDigits = /\\d{3}/;\r\n    var fourDigits = /\\d{4}/;\r\n    var word = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\r\n    var literal = /\\[([^]*?)\\]/gm;\r\n    var noop = function() { };\r\n\r\n    /**\r\n     * Abbreviate a string.\r\n     * @param {string[]} arr - Array of strings to shorten.\r\n     * @param {number} sLen - Max length of new strings.\r\n     * @returns {string[]} New array of strings.\r\n     */\r\n    function shorten(arr, sLen) {\r\n        var newArr = [];\r\n        for (var i = 0, len = arr.length; i < len; i++) {\r\n            newArr.push(arr[i].substr(0, sLen));\r\n        }\r\n        return newArr;\r\n    }\r\n\r\n    /**\r\n     * Update months names based on i18n resource.\r\n     * @param {string[]} arrName - Array of month names.\r\n     * @returns {string[]} Updated array of month names.\r\n     */\r\n    function monthUpdate(arrName) {\r\n        return function(d, v, i18n) {\r\n            var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());\r\n            if (~index) {\r\n                d.month = index;\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Left pad a number to length len using zeros.\r\n     * @param {number|string} val - Value to pad.\r\n     * @param {number} len - Length to pad number to.\r\n     * @returns {string} Zero padded string.\r\n     */\r\n    function pad(val, len) {\r\n        val = String(val);\r\n        len = len || 2;\r\n        while (val.length < len) {\r\n            val = '0' + val;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    var monthNamesShort = shorten(monthNames, 3);\r\n    var dayNamesShort = shorten(dayNames, 3);\r\n    fecha.i18n = {\r\n        dayNamesShort: dayNamesShort,\r\n        dayNames: dayNames,\r\n        monthNamesShort: monthNamesShort,\r\n        monthNames: monthNames,\r\n        amPm: ['am', 'pm'],\r\n        DoFn: function DoFn(D) {\r\n            return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];\r\n        }\r\n    };\r\n\r\n    var formatFlags = {\r\n        D: function(dateObj) {\r\n            return dateObj.getDate();\r\n        },\r\n        DD: function(dateObj) {\r\n            return pad(dateObj.getDate());\r\n        },\r\n        Do: function(dateObj, i18n) {\r\n            return i18n.DoFn(dateObj.getDate());\r\n        },\r\n        d: function(dateObj) {\r\n            return dateObj.getDay();\r\n        },\r\n        dd: function(dateObj) {\r\n            return pad(dateObj.getDay());\r\n        },\r\n        ddd: function(dateObj, i18n) {\r\n            return i18n.dayNamesShort[dateObj.getDay()];\r\n        },\r\n        dddd: function(dateObj, i18n) {\r\n            return i18n.dayNames[dateObj.getDay()];\r\n        },\r\n        M: function(dateObj) {\r\n            return dateObj.getMonth() + 1;\r\n        },\r\n        MM: function(dateObj) {\r\n            return pad(dateObj.getMonth() + 1);\r\n        },\r\n        MMM: function(dateObj, i18n) {\r\n            return i18n.monthNamesShort[dateObj.getMonth()];\r\n        },\r\n        MMMM: function(dateObj, i18n) {\r\n            return i18n.monthNames[dateObj.getMonth()];\r\n        },\r\n        YY: function(dateObj) {\r\n            return String(dateObj.getFullYear()).substr(2);\r\n        },\r\n        YYYY: function(dateObj) {\r\n            return dateObj.getFullYear();\r\n        },\r\n        h: function(dateObj) {\r\n            return dateObj.getHours() % 12 || 12;\r\n        },\r\n        hh: function(dateObj) {\r\n            return pad(dateObj.getHours() % 12 || 12);\r\n        },\r\n        H: function(dateObj) {\r\n            return dateObj.getHours();\r\n        },\r\n        HH: function(dateObj) {\r\n            return pad(dateObj.getHours());\r\n        },\r\n        m: function(dateObj) {\r\n            return dateObj.getMinutes();\r\n        },\r\n        mm: function(dateObj) {\r\n            return pad(dateObj.getMinutes());\r\n        },\r\n        s: function(dateObj) {\r\n            return dateObj.getSeconds();\r\n        },\r\n        ss: function(dateObj) {\r\n            return pad(dateObj.getSeconds());\r\n        },\r\n        S: function(dateObj) {\r\n            return Math.round(dateObj.getMilliseconds() / 100);\r\n        },\r\n        SS: function(dateObj) {\r\n            return pad(Math.round(dateObj.getMilliseconds() / 10), 2);\r\n        },\r\n        SSS: function(dateObj) {\r\n            return pad(dateObj.getMilliseconds(), 3);\r\n        },\r\n        a: function(dateObj, i18n) {\r\n            return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];\r\n        },\r\n        A: function(dateObj, i18n) {\r\n            return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();\r\n        },\r\n        ZZ: function(dateObj) {\r\n            var o = dateObj.getTimezoneOffset();\r\n            return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);\r\n        },\r\n        l: function(dateObj) {\r\n            var onejan = new Date(dateObj.getFullYear(), 0, 1);\r\n            return Math.ceil((((dateObj - onejan) / 86400000) + onejan.getDay() + 1) / 7);\r\n        },\r\n        ll: function(dateObj) {\r\n            var onejan = new Date(dateObj.getFullYear(), 0, 1);\r\n            return pad(Math.ceil((((dateObj - onejan) / 86400000) + onejan.getDay() + 1) / 7), 2);\r\n        },\r\n        q: function(dateObj) {\r\n            return (Math.ceil(dateObj.getMonth() + 1 / 3));\r\n        }\r\n    };\r\n\r\n    var parseFlags = {\r\n        D: [twoDigits, function(d, v) {\r\n            d.day = v;\r\n        }],\r\n        Do: [new RegExp(twoDigits.source + word.source), function(d, v) {\r\n            d.day = parseInt(v, 10);\r\n        }],\r\n        M: [twoDigits, function(d, v) {\r\n            d.month = v - 1;\r\n        }],\r\n        YY: [twoDigits, function(d, v) {\r\n            var da = new Date(), cent = +('' + da.getFullYear()).substr(0, 2);\r\n            d.year = '' + (v > 68 ? cent - 1 : cent) + v;\r\n        }],\r\n        h: [twoDigits, function(d, v) {\r\n            d.hour = v;\r\n        }],\r\n        m: [twoDigits, function(d, v) {\r\n            d.minute = v;\r\n        }],\r\n        s: [twoDigits, function(d, v) {\r\n            d.second = v;\r\n        }],\r\n        YYYY: [fourDigits, function(d, v) {\r\n            d.year = v;\r\n        }],\r\n        S: [/\\d/, function(d, v) {\r\n            d.millisecond = v * 100;\r\n        }],\r\n        SS: [/\\d{2}/, function(d, v) {\r\n            d.millisecond = v * 10;\r\n        }],\r\n        SSS: [threeDigits, function(d, v) {\r\n            d.millisecond = v;\r\n        }],\r\n        d: [twoDigits, noop],\r\n        ddd: [word, noop],\r\n        MMM: [word, monthUpdate('monthNamesShort')],\r\n        MMMM: [word, monthUpdate('monthNames')],\r\n        a: [word, function(d, v, i18n) {\r\n            var val = v.toLowerCase();\r\n            if (val === i18n.amPm[0]) {\r\n                d.isPm = false;\r\n            } else if (val === i18n.amPm[1]) {\r\n                d.isPm = true;\r\n            }\r\n        }],\r\n        ZZ: [/[+-]\\d\\d:?\\d\\d/, function(d, v) {\r\n            var parts = (v + '').match(/([+-]|\\d\\d)/gi), minutes;\r\n\r\n            if (parts) {\r\n                minutes = +(parts[1] * 60) + parseInt(parts[2], 10);\r\n                d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;\r\n            }\r\n        }]\r\n    };\r\n    parseFlags.dd = parseFlags.d;\r\n    parseFlags.dddd = parseFlags.ddd;\r\n    parseFlags.DD = parseFlags.D;\r\n    parseFlags.mm = parseFlags.m;\r\n    parseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;\r\n    parseFlags.MM = parseFlags.M;\r\n    parseFlags.ss = parseFlags.s;\r\n    parseFlags.A = parseFlags.a;\r\n\r\n    // Some common format strings\r\n    fecha.masks = {\r\n        'default': 'ddd MMM DD YYYY HH:mm:ss',\r\n        shortDate: 'M/D/YY',\r\n        mediumDate: 'MMM D, YYYY',\r\n        longDate: 'MMMM D, YYYY',\r\n        fullDate: 'dddd, MMMM D, YYYY',\r\n        shortTime: 'HH:mm',\r\n        mediumTime: 'HH:mm:ss',\r\n        longTime: 'HH:mm:ss.SSS'\r\n    };\r\n\r\n    /***\r\n     * Format a date.\r\n     * @method format\r\n     * @param {Date|number} dateObj - JS date to format.\r\n     * @param {string} mask - New format for the date, i.e. 'mm-dd-yy' or 'shortDate'.\r\n     * @param {Object} i18nSettings - i18n resources.\r\n     * @return {string} Formatted date string.\r\n     */\r\n    fecha.format = function(dateObj, mask, i18nSettings) {\r\n        var i18n = i18nSettings || fecha.i18n;\r\n\r\n        if (typeof dateObj === 'number') {\r\n            dateObj = new Date(dateObj);\r\n        }\r\n\r\n        if (!dateObj.getMonth || isNaN(dateObj.getTime())) {\r\n            return '';\r\n            // throw new Error('Invalid Date in fecha.format');\r\n        }\r\n\r\n        mask = fecha.masks[mask] || mask || fecha.masks['default'];\r\n\r\n        var literals = [];\r\n\r\n        // Make literals inactive by replacing them with ??\r\n        mask = mask.replace(literal, function($0, $1) {\r\n            literals.push($1);\r\n            return '??';\r\n        });\r\n        // Apply formatting rules\r\n        mask = mask.replace(token, function($0) {\r\n            return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);\r\n        });\r\n        // Inline literal values back into the formatted value\r\n        return mask.replace(/\\?\\?/g, function() {\r\n            return literals.shift();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Parse a date string into an object.\r\n     * @method parse\r\n     * @param {string} dateStr - Date string\r\n     * @param {string} format - Date parse format\r\n     * @param {Object} i18nSettings - i18n resources.\r\n     * @returns {Date|boolean} JS date object or false.\r\n     */\r\n    fecha.parse = function(dateStr, format, i18nSettings) {\r\n        var i18n = i18nSettings || fecha.i18n;\r\n\r\n        if (typeof format !== 'string') {\r\n            throw new Error('Invalid format in fecha.parse');\r\n        }\r\n\r\n        format = fecha.masks[format] || format;\r\n\r\n        // Avoid regular expression denial of service, fail early for really long strings\r\n        // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\r\n        if (!dateStr || dateStr.length > 1000) {\r\n            return false;\r\n        }\r\n\r\n        var isValid = true;\r\n        var dateInfo = {};\r\n        var isUtc = false;\r\n\r\n        // Special handler for UTC. String will end in a Z but with no offset specified (ie '-0400')\r\n        if (dateStr.indexOf('Z') === dateStr.length - 1 && dateStr.indexOf('ZZ') === -1) {\r\n            dateStr = dateStr.substr(0, dateStr.length - 2);\r\n            dateInfo.timezoneOffset = new Date().getTimezoneOffset();\r\n            isUtc = true;\r\n        }\r\n\r\n        format.replace(token, function($0) {\r\n            if (parseFlags[$0]) {\r\n                var info = parseFlags[$0];\r\n                var index = dateStr.search(info[0]);\r\n                if (!~index) {\r\n                    isValid = false;\r\n                } else {\r\n                    dateStr.replace(info[0], function(result) {\r\n                        info[1](dateInfo, result, i18n);\r\n                        dateStr = dateStr.substr(index + result.length);\r\n                        return result;\r\n                    });\r\n                }\r\n            }\r\n\r\n            return parseFlags[$0] ? '' : $0.slice(1, $0.length - 1);\r\n        });\r\n\r\n        if (!isValid) {\r\n            return false;\r\n        }\r\n\r\n        var today = new Date();\r\n        if (dateInfo.isPm === true && typeof dateInfo.hour !== 'undefined' && +dateInfo.hour !== 12) {\r\n            dateInfo.hour = +dateInfo.hour + 12;\r\n        } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {\r\n            dateInfo.hour = 0;\r\n        }\r\n\r\n        var date;\r\n        if (typeof dateInfo.timezoneOffset !== 'undefined') {\r\n            if (!isUtc) {\r\n                dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;\r\n            }\r\n            date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\r\n                dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));\r\n        } else {\r\n            date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\r\n                dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);\r\n        }\r\n        return date;\r\n    };\r\n\r\n    $.fecha = fecha;\r\n})(this.$);\r\n\r\n/*!\r\n * Library for evaluating logic passed as json.\r\n * https://github.com/jwadhams/json-logic-js\r\n */\r\n(function(root, factory) {\r\n    root.jsonLogic = factory();\r\n}(this.$, function() {\r\n    'use strict';\r\n    /* globals console:false */\r\n\r\n    /**\r\n     * Return an array that contains no duplicates (original not modified)\r\n     * @param  {array} array   Original reference array\r\n     * @return {array}         New array with no duplicates\r\n     */\r\n    function arrayUnique(array) {\r\n        var a = [];\r\n        for (var i = 0, l = array.length; i < l; i++) {\r\n            if (a.indexOf(array[i]) === -1) {\r\n                a.push(array[i]);\r\n            }\r\n        }\r\n        return a;\r\n    }\r\n\r\n    var jsonLogic = {};\r\n    var operations = {\r\n        '==': function(a, b) {\r\n            return a == b;\r\n        },\r\n        '===': function(a, b) {\r\n            return a === b;\r\n        },\r\n        '!=': function(a, b) {\r\n            return a != b;\r\n        },\r\n        '!==': function(a, b) {\r\n            return a !== b;\r\n        },\r\n        '>': function(a, b) {\r\n            return a > b;\r\n        },\r\n        '>=': function(a, b) {\r\n            return a >= b;\r\n        },\r\n        '<': function(a, b, c) {\r\n            return (c === undefined) ? a < b : (a < b) && (b < c);\r\n        },\r\n        '<=': function(a, b, c) {\r\n            return (c === undefined) ? a <= b : (a <= b) && (b <= c);\r\n        },\r\n        '!!': function(a) {\r\n            return jsonLogic.truthy(a);\r\n        },\r\n        '!': function(a) {\r\n            return !jsonLogic.truthy(a);\r\n        },\r\n        '%': function(a, b) {\r\n            return a % b;\r\n        },\r\n        'in': function(a, b) {\r\n            if (!b || typeof b.indexOf === 'undefined') return false;\r\n            return (b.indexOf(a) !== -1);\r\n        },\r\n        'cat': function() {\r\n            return Array.prototype.join.call(arguments, '');\r\n        },\r\n        'substr': function(source, start, end) {\r\n            if (end < 0) {\r\n                // JavaScript doesn't support negative end, this emulates PHP behavior\r\n                var temp = String(source).substr(start);\r\n                return temp.substr(0, temp.length + end);\r\n            }\r\n            return String(source).substr(start, end);\r\n        },\r\n        '+': function() {\r\n            return Array.prototype.reduce.call(arguments, function(a, b) {\r\n                return parseFloat(a, 10) + parseFloat(b, 10);\r\n            }, 0);\r\n        },\r\n        '*': function() {\r\n            return Array.prototype.reduce.call(arguments, function(a, b) {\r\n                return parseFloat(a, 10) * parseFloat(b, 10);\r\n            });\r\n        },\r\n        '-': function(a, b) {\r\n            if (b === undefined) {\r\n                return -a;\r\n            } else {\r\n                return a - b;\r\n            }\r\n        },\r\n        '/': function(a, b) {\r\n            return a / b;\r\n        },\r\n        'min': function() {\r\n            return Math.min.apply(this, arguments);\r\n        },\r\n        'max': function() {\r\n            return Math.max.apply(this, arguments);\r\n        },\r\n        'merge': function() {\r\n            return Array.prototype.reduce.call(arguments, function(a, b) {\r\n                return a.concat(b);\r\n            }, []);\r\n        },\r\n        'var': function(a, b) {\r\n            var not_found = (b === undefined) ? null : b;\r\n            var data = this;\r\n            if (typeof a === 'undefined' || a === '' || a === null) {\r\n                return data;\r\n            }\r\n            var sub_props = String(a).split('.');\r\n            for (var i = 0; i < sub_props.length; i++) {\r\n                if (data === null) {\r\n                    return not_found;\r\n                }\r\n                // Descending into data\r\n                data = data[sub_props[i]];\r\n                if (data === undefined) {\r\n                    return not_found;\r\n                }\r\n            }\r\n            return data;\r\n        },\r\n        'missing': function() {\r\n            /*\r\n            Missing can receive many keys as many arguments, like {\"missing:[1,2]}\r\n            Missing can also receive *one* argument that is an array of keys,\r\n            which typically happens if it's actually acting on the output of another command\r\n            (like 'if' or 'merge')\r\n            */\r\n\r\n            var missing = [];\r\n            var keys = Array.isArray(arguments[0]) ? arguments[0] : arguments;\r\n\r\n            for (var i = 0; i < keys.length; i++) {\r\n                var key = keys[i];\r\n                var value = jsonLogic.apply({ 'var': key }, this);\r\n                if (value === null || value === '') {\r\n                    missing.push(key);\r\n                }\r\n            }\r\n\r\n            return missing;\r\n        },\r\n        'missing_some': function(need_count, options) {\r\n            // missing_some takes two arguments, how many (minimum) items must be present, and an array of keys (just like 'missing') to check for presence.\r\n            var are_missing = jsonLogic.apply({ 'missing': options }, this);\r\n\r\n            if (options.length - are_missing.length >= need_count) {\r\n                return [];\r\n            } else {\r\n                return are_missing;\r\n            }\r\n        },\r\n        'method': function(obj, method, args) {\r\n            return obj[method].apply(obj, args);\r\n        },\r\n\r\n    };\r\n\r\n    jsonLogic.is_logic = function(logic) {\r\n        return (\r\n            typeof logic === 'object' && // An object\r\n            logic !== null && // but not null\r\n            !Array.isArray(logic) && // and not an array\r\n            Object.keys(logic).length === 1 // with exactly one key\r\n        );\r\n    };\r\n\r\n    /*\r\n    This helper will defer to the JsonLogic spec as a tie-breaker when different language interpreters define different behavior for the truthiness of primitives.  E.g., PHP considers empty arrays to be falsy, but Javascript considers them to be truthy. JsonLogic, as an ecosystem, needs one consistent answer.\r\n    Spec and rationale here: http://jsonlogic.com/truthy\r\n    */\r\n    jsonLogic.truthy = function(value) {\r\n        if (Array.isArray(value) && value.length === 0) {\r\n            return false;\r\n        }\r\n        return !!value;\r\n    };\r\n\r\n\r\n    jsonLogic.get_operator = function(logic) {\r\n        return Object.keys(logic)[0];\r\n    };\r\n\r\n    jsonLogic.get_values = function(logic) {\r\n        return logic[jsonLogic.get_operator(logic)];\r\n    };\r\n\r\n    jsonLogic.apply = function(logic, data) {\r\n        // Does this array contain logic? Only one way to find out.\r\n        if (Array.isArray(logic)) {\r\n            return logic.map(function(l) {\r\n                return jsonLogic.apply(l, data);\r\n            });\r\n        }\r\n        // You've recursed to a primitive, stop!\r\n        if (!jsonLogic.is_logic(logic)) {\r\n            return logic;\r\n        }\r\n\r\n        data = data || {};\r\n\r\n        var op = jsonLogic.get_operator(logic);\r\n        var values = logic[op];\r\n        var i;\r\n        var current;\r\n        var scopedLogic, scopedData, filtered, initial;\r\n\r\n        // easy syntax for unary operators, like {\"var\" : \"x\"} instead of strict {\"var\" : [\"x\"]}\r\n        if (!Array.isArray(values)) {\r\n            values = [values];\r\n        }\r\n\r\n        // 'if', 'and', and 'or' violate the normal rule of depth-first calculating consequents, let each manage recursion as needed.\r\n        if (op === 'if' || op == '?:') {\r\n            /* 'if' should be called with a odd number of parameters, 3 or greater\r\n            This works on the pattern:\r\n            if( 0 ){ 1 }else{ 2 };\r\n            if( 0 ){ 1 }else if( 2 ){ 3 }else{ 4 };\r\n            if( 0 ){ 1 }else if( 2 ){ 3 }else if( 4 ){ 5 }else{ 6 };\r\n            The implementation is:\r\n            For pairs of values (0,1 then 2,3 then 4,5 etc)\r\n            If the first evaluates truthy, evaluate and return the second\r\n            If the first evaluates falsy, jump to the next pair (e.g, 0,1 to 2,3)\r\n            given one parameter, evaluate and return it. (it's an Else and all the If/ElseIf were false)\r\n            given 0 parameters, return NULL (not great practice, but there was no Else)\r\n            */\r\n            for (i = 0; i < values.length - 1; i += 2) {\r\n                if (jsonLogic.truthy(jsonLogic.apply(values[i], data))) {\r\n                    return jsonLogic.apply(values[i + 1], data);\r\n                }\r\n            }\r\n            if (values.length === i + 1) return jsonLogic.apply(values[i], data);\r\n            return null;\r\n        } else if (op === 'and') { // Return first falsy, or last\r\n            for (i = 0; i < values.length; i += 1) {\r\n                current = jsonLogic.apply(values[i], data);\r\n                if (!jsonLogic.truthy(current)) {\r\n                    return current;\r\n                }\r\n            }\r\n            return current; // Last\r\n        } else if (op === 'or') {// Return first truthy, or last\r\n            for (i = 0; i < values.length; i += 1) {\r\n                current = jsonLogic.apply(values[i], data);\r\n                if (jsonLogic.truthy(current)) {\r\n                    return current;\r\n                }\r\n            }\r\n            return current; // Last\r\n        } else if (op === 'filter') {\r\n            scopedData = jsonLogic.apply(values[0], data);\r\n            scopedLogic = values[1];\r\n\r\n            if (!Array.isArray(scopedData)) {\r\n                return [];\r\n            }\r\n            // Return only the elements from the array in the first argument,\r\n            // that return truthy when passed to the logic in the second argument.\r\n            // For parity with JavaScript, reindex the returned array\r\n            return scopedData.filter(function(datum) {\r\n                return jsonLogic.truthy(jsonLogic.apply(scopedLogic, datum));\r\n            });\r\n        } else if (op === 'map') {\r\n            scopedData = jsonLogic.apply(values[0], data);\r\n            scopedLogic = values[1];\r\n\r\n            if (!Array.isArray(scopedData)) {\r\n                return [];\r\n            }\r\n\r\n            return scopedData.map(function(datum) {\r\n                return jsonLogic.apply(scopedLogic, datum);\r\n            });\r\n\r\n        } else if (op === 'reduce') {\r\n            scopedData = jsonLogic.apply(values[0], data);\r\n            scopedLogic = values[1];\r\n            initial = typeof values[2] !== 'undefined' ? values[2] : null;\r\n\r\n            if (!Array.isArray(scopedData)) {\r\n                return initial;\r\n            }\r\n\r\n            return scopedData.reduce(\r\n                function(accumulator, current) {\r\n                    return jsonLogic.apply(\r\n                        scopedLogic,\r\n                        { 'current': current, 'accumulator': accumulator }\r\n                    );\r\n                },\r\n                initial\r\n            );\r\n\r\n        } else if (op === 'all') {\r\n            scopedData = jsonLogic.apply(values[0], data);\r\n            scopedLogic = values[1];\r\n            // All of an empty set is false. Note, some and none have correct fallback after the for loop\r\n            if (!scopedData.length) {\r\n                return false;\r\n            }\r\n            for (i = 0; i < scopedData.length; i += 1) {\r\n                if (!jsonLogic.truthy(jsonLogic.apply(scopedLogic, scopedData[i]))) {\r\n                    return false; // First falsy, short circuit\r\n                }\r\n            }\r\n            return true; // All were truthy\r\n        } else if (op === 'none') {\r\n            filtered = jsonLogic.apply({ 'filter': values }, data);\r\n            return filtered.length === 0;\r\n\r\n        } else if (op === 'some') {\r\n            filtered = jsonLogic.apply({ 'filter': values }, data);\r\n            return filtered.length > 0;\r\n        }\r\n\r\n        // Everyone else gets immediate depth-first recursion\r\n        values = values.map(function(val) {\r\n            return jsonLogic.apply(val, data);\r\n        });\r\n\r\n        // The operation is called with \"data\" bound to its \"this\" and \"values\" passed as arguments.\r\n        // Structured commands like % or > can name formal arguments while flexible commands (like missing or merge) can operate on the pseudo-array arguments\r\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments\r\n        if (typeof operations[op] === 'function') {\r\n            return operations[op].apply(data, values);\r\n        } else if (op.indexOf('.') > 0) { // Contains a dot, and not in the 0th position\r\n            var sub_ops = String(op).split('.');\r\n            var operation = operations;\r\n            for (i = 0; i < sub_ops.length; i++) {\r\n                // Descending into operations\r\n                operation = operation[sub_ops[i]];\r\n                if (operation === undefined) {\r\n                    throw new Error('Unrecognized operation ' + op + ' (failed at ' + sub_ops.slice(0, i + 1).join('.') + ')');\r\n                }\r\n            }\r\n\r\n            return operation.apply(data, values);\r\n        }\r\n\r\n        throw new Error('Unrecognized operation ' + op);\r\n    };\r\n\r\n    jsonLogic.uses_data = function(logic) {\r\n        var collection = [];\r\n\r\n        if (jsonLogic.is_logic(logic)) {\r\n            var op = jsonLogic.get_operator(logic);\r\n            var values = logic[op];\r\n\r\n            if (!Array.isArray(values)) {\r\n                values = [values];\r\n            }\r\n\r\n            if (op === 'var') {\r\n                // This doesn't cover the case where the arg to var is itself a rule.\r\n                collection.push(values[0]);\r\n            } else {\r\n                // Recursion!\r\n                values.map(function(val) {\r\n                    collection.push.apply(collection, jsonLogic.uses_data(val));\r\n                });\r\n            }\r\n        }\r\n\r\n        return arrayUnique(collection);\r\n    };\r\n\r\n    jsonLogic.add_operation = function(name, code) {\r\n        operations[name] = code;\r\n    };\r\n\r\n    jsonLogic.rm_operation = function(name) {\r\n        delete operations[name];\r\n    };\r\n\r\n    jsonLogic.rule_like = function(rule, pattern) {\r\n        if (pattern === rule) {\r\n            return true;\r\n        }\r\n        if (pattern === '@') {\r\n            return true;\r\n        } // Wildcard!\r\n        if (pattern === 'number') {\r\n            return (typeof rule === 'number');\r\n        }\r\n        if (pattern === 'string') {\r\n            return (typeof rule === 'string');\r\n        }\r\n        if (pattern === 'array') {\r\n            // !logic test might be superfluous in JavaScript\r\n            return Array.isArray(rule) && !jsonLogic.is_logic(rule);\r\n        }\r\n\r\n        if (jsonLogic.is_logic(pattern)) {\r\n            if (jsonLogic.is_logic(rule)) {\r\n                var pattern_op = jsonLogic.get_operator(pattern);\r\n                var rule_op = jsonLogic.get_operator(rule);\r\n\r\n                if (pattern_op === '@' || pattern_op === rule_op) {\r\n                    // echo \"\\nOperators match, go deeper\\n\";\r\n                    return jsonLogic.rule_like(\r\n                        jsonLogic.get_values(rule, false),\r\n                        jsonLogic.get_values(pattern, false)\r\n                    );\r\n                }\r\n            }\r\n            return false; // pattern is logic, rule isn't, can't be eq\r\n        }\r\n\r\n        if (Array.isArray(pattern)) {\r\n            if (Array.isArray(rule)) {\r\n                if (pattern.length !== rule.length) {\r\n                    return false;\r\n                }\r\n                /*\r\n                  Note, array order MATTERS, because we're using this array test logic to consider arguments, where order can matter. (e.g., + is commutative, but '-' or 'if' or 'var' are NOT)\r\n                */\r\n                for (var i = 0; i < pattern.length; i += 1) {\r\n                    // If any fail, we fail\r\n                    if (!jsonLogic.rule_like(rule[i], pattern[i])) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true; // If they *all* passed, we pass\r\n            } else {\r\n                return false; // Pattern is array, rule isn't\r\n            }\r\n        }\r\n\r\n        // Not logic, not array, not a === match for rule.\r\n        return false;\r\n    };\r\n\r\n    return jsonLogic;\r\n}));\r\n","/*!\r\n * flatpickr v4.5.1, @license MIT\r\n * https://github.com/flatpickr/flatpickr\r\n */\r\nvar flatpickr = (function() {\r\n    'use strict';\r\n\r\n    var __assign = Object.assign || function(target) {\r\n        for (var source, i = 1; i < arguments.length; i++) {\r\n            source = arguments[i];\r\n            for (var prop in source) {\r\n                if (Object.prototype.hasOwnProperty.call(source, prop)) {\r\n                    target[prop] = source[prop];\r\n                }\r\n            }\r\n        }\r\n        return target;\r\n    };\r\n\r\n    var pad = function(number) { return ('0' + number).slice(-2); };\r\n    var int = function(bool) { return (bool === true ? 1 : 0); };\r\n    function debounce(func, wait, immediate) {\r\n        if (immediate === void 0) { immediate = false; }\r\n        var timeout;\r\n        return function() {\r\n            var context = this, args = arguments;\r\n            timeout !== null && clearTimeout(timeout);\r\n            timeout = window.setTimeout(function() {\r\n                timeout = null;\r\n                if (!immediate)\r\n                    func.apply(context, args);\r\n            }, wait);\r\n            if (immediate && !timeout)\r\n                func.apply(context, args);\r\n        };\r\n    }\r\n    var arrayify = function(obj) {\r\n        return obj instanceof Array ? obj : [obj];\r\n    };\r\n\r\n    var do_nothing = function() { return undefined; };\r\n    var monthToStr = function(monthNumber, shorthand, locale) { return locale.months[shorthand ? 'shorthand' : 'longhand'][monthNumber]; };\r\n    var revFormat = {\r\n        D: do_nothing,\r\n        F: function(dateObj, monthName, locale) {\r\n            dateObj.setMonth(locale.months.longhand.indexOf(monthName));\r\n        },\r\n        G: function(dateObj, hour) {\r\n            dateObj.setHours(parseFloat(hour));\r\n        },\r\n        H: function(dateObj, hour) {\r\n            dateObj.setHours(parseFloat(hour));\r\n        },\r\n        J: function(dateObj, day) {\r\n            dateObj.setDate(parseFloat(day));\r\n        },\r\n        K: function(dateObj, amPM, locale) {\r\n            dateObj.setHours((dateObj.getHours() % 12) +\r\n                12 * int(new RegExp(locale.amPM[1], 'i').test(amPM)));\r\n        },\r\n        M: function(dateObj, shortMonth, locale) {\r\n            dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\r\n        },\r\n        S: function(dateObj, seconds) {\r\n            dateObj.setSeconds(parseFloat(seconds));\r\n        },\r\n        U: function(_, unixSeconds) { return new Date(parseFloat(unixSeconds) * 1000); },\r\n        W: function(dateObj, weekNum) {\r\n            var weekNumber = parseInt(weekNum);\r\n            return new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);\r\n        },\r\n        Y: function(dateObj, year) {\r\n            dateObj.setFullYear(parseFloat(year));\r\n        },\r\n        Z: function(_, ISODate) { return new Date(ISODate); },\r\n        d: function(dateObj, day) {\r\n            dateObj.setDate(parseFloat(day));\r\n        },\r\n        h: function(dateObj, hour) {\r\n            dateObj.setHours(parseFloat(hour));\r\n        },\r\n        i: function(dateObj, minutes) {\r\n            dateObj.setMinutes(parseFloat(minutes));\r\n        },\r\n        j: function(dateObj, day) {\r\n            dateObj.setDate(parseFloat(day));\r\n        },\r\n        l: do_nothing,\r\n        m: function(dateObj, month) {\r\n            dateObj.setMonth(parseFloat(month) - 1);\r\n        },\r\n        n: function(dateObj, month) {\r\n            dateObj.setMonth(parseFloat(month) - 1);\r\n        },\r\n        s: function(dateObj, seconds) {\r\n            dateObj.setSeconds(parseFloat(seconds));\r\n        },\r\n        w: do_nothing,\r\n        y: function(dateObj, year) {\r\n            dateObj.setFullYear(2000 + parseFloat(year));\r\n        },\r\n    };\r\n    var tokenRegex = {\r\n        D: '(\\\\w+)',\r\n        F: '(\\\\w+)',\r\n        G: '(\\\\d\\\\d|\\\\d)',\r\n        H: '(\\\\d\\\\d|\\\\d)',\r\n        J: '(\\\\d\\\\d|\\\\d)\\\\w+',\r\n        K: '',\r\n        M: '(\\\\w+)',\r\n        S: '(\\\\d\\\\d|\\\\d)',\r\n        U: '(.+)',\r\n        W: '(\\\\d\\\\d|\\\\d)',\r\n        Y: '(\\\\d{4})',\r\n        Z: '(.+)',\r\n        d: '(\\\\d\\\\d|\\\\d)',\r\n        h: '(\\\\d\\\\d|\\\\d)',\r\n        i: '(\\\\d\\\\d|\\\\d)',\r\n        j: '(\\\\d\\\\d|\\\\d)',\r\n        l: '(\\\\w+)',\r\n        m: '(\\\\d\\\\d|\\\\d)',\r\n        n: '(\\\\d\\\\d|\\\\d)',\r\n        s: '(\\\\d\\\\d|\\\\d)',\r\n        w: '(\\\\d\\\\d|\\\\d)',\r\n        y: '(\\\\d{2})',\r\n    };\r\n    var formats = {\r\n        Z: function(date) { return date.toISOString(); },\r\n        D: function(date, locale, options) {\r\n            return locale.weekdays.shorthand[formats.w(date, locale, options)];\r\n        },\r\n        F: function(date, locale, options) {\r\n            return monthToStr(formats.n(date, locale, options) - 1, false, locale);\r\n        },\r\n        G: function(date, locale, options) {\r\n            return pad(formats.h(date, locale, options));\r\n        },\r\n        H: function(date) { return pad(date.getHours()); },\r\n        J: function(date, locale) {\r\n            return locale.ordinal !== undefined\r\n                ? date.getDate() + locale.ordinal(date.getDate())\r\n                : date.getDate();\r\n        },\r\n        K: function(date, locale) { return locale.amPM[int(date.getHours() > 11)]; },\r\n        M: function(date, locale) {\r\n            return monthToStr(date.getMonth(), true, locale);\r\n        },\r\n        S: function(date) { return pad(date.getSeconds()); },\r\n        U: function(date) { return date.getTime() / 1000; },\r\n        W: function(date, _, options) {\r\n            return options.getWeek(date);\r\n        },\r\n        Y: function(date) { return date.getFullYear(); },\r\n        d: function(date) { return pad(date.getDate()); },\r\n        h: function(date) { return (date.getHours() % 12 ? date.getHours() % 12 : 12); },\r\n        i: function(date) { return pad(date.getMinutes()); },\r\n        j: function(date) { return date.getDate(); },\r\n        l: function(date, locale) {\r\n            return locale.weekdays.longhand[date.getDay()];\r\n        },\r\n        m: function(date) { return pad(date.getMonth() + 1); },\r\n        n: function(date) { return date.getMonth() + 1; },\r\n        s: function(date) { return date.getSeconds(); },\r\n        w: function(date) { return date.getDay(); },\r\n        y: function(date) { return String(date.getFullYear()).substring(2); },\r\n    };\r\n\r\n    var english = {\r\n        weekdays: {\r\n            shorthand: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n            longhand: [\r\n                'Sunday',\r\n                'Monday',\r\n                'Tuesday',\r\n                'Wednesday',\r\n                'Thursday',\r\n                'Friday',\r\n                'Saturday',\r\n            ],\r\n        },\r\n        months: {\r\n            shorthand: [\r\n                'Jan',\r\n                'Feb',\r\n                'Mar',\r\n                'Apr',\r\n                'May',\r\n                'Jun',\r\n                'Jul',\r\n                'Aug',\r\n                'Sep',\r\n                'Oct',\r\n                'Nov',\r\n                'Dec',\r\n            ],\r\n            longhand: [\r\n                'January',\r\n                'February',\r\n                'March',\r\n                'April',\r\n                'May',\r\n                'June',\r\n                'July',\r\n                'August',\r\n                'September',\r\n                'October',\r\n                'November',\r\n                'December',\r\n            ],\r\n        },\r\n        daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\r\n        firstDayOfWeek: 0,\r\n        ordinal: function(nth) {\r\n            var s = nth % 100;\r\n            if (s > 3 && s < 21)\r\n                return 'th';\r\n            switch (s % 10) {\r\n                case 1:\r\n                    return 'st';\r\n                case 2:\r\n                    return 'nd';\r\n                case 3:\r\n                    return 'rd';\r\n                default:\r\n                    return 'th';\r\n            }\r\n        },\r\n        rangeSeparator: ' to ',\r\n        weekAbbreviation: 'Wk',\r\n        scrollTitle: 'Scroll to increment',\r\n        toggleTitle: 'Click to toggle',\r\n        amPM: ['AM', 'PM'],\r\n        yearAriaLabel: 'Year',\r\n    };\r\n\r\n    var createDateFormatter = function(_a) {\r\n        var _b = _a.config, config = _b === void 0 ? defaults : _b, _c = _a.l10n, l10n = _c === void 0 ? english : _c;\r\n        return function(dateObj, frmt, overrideLocale) {\r\n            if (config.formatDate !== undefined)\r\n                return config.formatDate(dateObj, frmt);\r\n            var locale = overrideLocale || l10n;\r\n            return frmt\r\n                .split('')\r\n                .map(function(c, i, arr) {\r\n                    return formats[c] && arr[i - 1] !== '\\\\'\r\n                        ? formats[c](dateObj, locale, config)\r\n                        : c !== '\\\\'\r\n                            ? c\r\n                            : '';\r\n                })\r\n                .join('');\r\n        };\r\n    };\r\n    var createDateParser = function(_a) {\r\n        var _b = _a.config, config = _b === void 0 ? defaults : _b, _c = _a.l10n, l10n = _c === void 0 ? english : _c;\r\n        return function(date, givenFormat, timeless, customLocale) {\r\n            if (date !== 0 && !date)\r\n                return undefined;\r\n            var locale = customLocale || l10n;\r\n            var parsedDate;\r\n            var date_orig = date;\r\n            if (date instanceof Date)\r\n                parsedDate = new Date(date.getTime());\r\n            else if (typeof date !== 'string' &&\r\n                date.toFixed !== undefined)\r\n                parsedDate = new Date(date);\r\n            else if (typeof date === 'string') {\r\n                var format = givenFormat || (config || defaults).dateFormat;\r\n                var datestr = String(date).trim();\r\n                if (datestr === 'today') {\r\n                    parsedDate = new Date();\r\n                    timeless = true;\r\n                }\r\n                else if (/Z$/.test(datestr) ||\r\n                    /GMT$/.test(datestr))\r\n                    parsedDate = new Date(date);\r\n                else if (config && config.parseDate)\r\n                    parsedDate = config.parseDate(date, format);\r\n                else {\r\n                    parsedDate =\r\n                        !config || !config.noCalendar\r\n                            ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0)\r\n                            : new Date(new Date().setHours(0, 0, 0, 0));\r\n                    var matched = void 0, ops = [];\r\n                    for (var i = 0, matchIndex = 0, regexStr = ''; i < format.length; i++) {\r\n                        var token_1 = format[i];\r\n                        var isBackSlash = token_1 === '\\\\';\r\n                        var escaped = format[i - 1] === '\\\\' || isBackSlash;\r\n                        if (tokenRegex[token_1] && !escaped) {\r\n                            regexStr += tokenRegex[token_1];\r\n                            var match = new RegExp(regexStr).exec(date);\r\n                            if (match && (matched = true)) {\r\n                                ops[token_1 !== 'Y' ? 'push' : 'unshift']({\r\n                                    fn: revFormat[token_1],\r\n                                    val: match[++matchIndex],\r\n                                });\r\n                            }\r\n                        }\r\n                        else if (!isBackSlash)\r\n                            regexStr += '.';\r\n                        ops.forEach(function(_a) {\r\n                            var fn = _a.fn, val = _a.val;\r\n                            return (parsedDate = fn(parsedDate, val, locale) || parsedDate);\r\n                        });\r\n                    }\r\n                    parsedDate = matched ? parsedDate : undefined;\r\n                }\r\n            }\r\n            if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {\r\n                config.errorHandler(new Error('Invalid date provided: ' + date_orig));\r\n                return undefined;\r\n            }\r\n            if (timeless === true)\r\n                parsedDate.setHours(0, 0, 0, 0);\r\n            return parsedDate;\r\n        };\r\n    };\r\n    function compareDates(date1, date2, timeless) {\r\n        if (timeless === void 0) { timeless = true; }\r\n        if (timeless !== false) {\r\n            return (new Date(date1.getTime()).setHours(0, 0, 0, 0) -\r\n                new Date(date2.getTime()).setHours(0, 0, 0, 0));\r\n        }\r\n        return date1.getTime() - date2.getTime();\r\n    }\r\n    var getWeek = function(givenDate) {\r\n        var date = new Date(givenDate.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - ((date.getDay() + 6) % 7));\r\n        var week1 = new Date(date.getFullYear(), 0, 4);\r\n        return (1 +\r\n            Math.round(((date.getTime() - week1.getTime()) / 86400000 -\r\n                3 +\r\n                ((week1.getDay() + 6) % 7)) /\r\n                7));\r\n    };\r\n    var isBetween = function(ts, ts1, ts2) {\r\n        return ts > Math.min(ts1, ts2) && ts < Math.max(ts1, ts2);\r\n    };\r\n    var duration = {\r\n        DAY: 86400000,\r\n    };\r\n\r\n    var defaults = {\r\n        _disable: [],\r\n        _enable: [],\r\n        allowInput: false,\r\n        altFormat: 'F j, Y',\r\n        altInput: false,\r\n        altInputClass: 'form-control input',\r\n        animate: typeof window === 'object' && window.navigator.userAgent.indexOf('MSIE') === -1,\r\n        ariaDateFormat: 'F j, Y',\r\n        clickOpens: true,\r\n        closeOnSelect: true,\r\n        conjunction: ', ',\r\n        dateFormat: 'Y-m-d',\r\n        defaultHour: 12,\r\n        defaultMinute: 0,\r\n        defaultSeconds: 0,\r\n        disable: [],\r\n        disableMobile: false,\r\n        enable: [],\r\n        enableSeconds: false,\r\n        enableTime: false,\r\n        errorHandler: function(err) {\r\n            return typeof console !== 'undefined' && console.warn(err);\r\n        },\r\n        getWeek: getWeek,\r\n        hourIncrement: 1,\r\n        ignoredFocusElements: [],\r\n        inline: false,\r\n        locale: 'default',\r\n        minuteIncrement: 5,\r\n        mode: 'single',\r\n        nextArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>\",\r\n        noCalendar: false,\r\n        now: new Date(),\r\n        onChange: [],\r\n        onClose: [],\r\n        onDayCreate: [],\r\n        onDestroy: [],\r\n        onKeyDown: [],\r\n        onMonthChange: [],\r\n        onOpen: [],\r\n        onParseConfig: [],\r\n        onReady: [],\r\n        onValueUpdate: [],\r\n        onYearChange: [],\r\n        onPreCalendarPosition: [],\r\n        plugins: [],\r\n        position: 'auto',\r\n        positionElement: undefined,\r\n        prevArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>\",\r\n        shorthandCurrentMonth: false,\r\n        showMonths: 1,\r\n        static: false,\r\n        time_24hr: false,\r\n        weekNumbers: false,\r\n        wrap: false,\r\n    };\r\n\r\n    function toggleClass(elem, className, bool) {\r\n        if (bool === true)\r\n            return elem.classList.add(className);\r\n        elem.classList.remove(className);\r\n    }\r\n    function createElement(tag, className, content) {\r\n        var e = window.document.createElement(tag);\r\n        className = className || '';\r\n        content = content || '';\r\n        e.className = className;\r\n        if (content !== undefined)\r\n            e.textContent = content;\r\n        return e;\r\n    }\r\n    function clearNode(node) {\r\n        while (node.firstChild)\r\n            node.removeChild(node.firstChild);\r\n    }\r\n    function findParent(node, condition) {\r\n        if (condition(node))\r\n            return node;\r\n        else if (node.parentNode)\r\n            return findParent(node.parentNode, condition);\r\n        return undefined;\r\n    }\r\n    function createNumberInput(inputClassName, opts) {\r\n        var wrapper = createElement('div', 'numInputWrapper'), numInput = createElement('input', 'numInput ' + inputClassName), arrowUp = createElement('span', 'arrowUp'), arrowDown = createElement('span', 'arrowDown');\r\n        numInput.type = 'text';\r\n        numInput.pattern = '\\\\d*';\r\n        if (opts !== undefined)\r\n            for (var key in opts)\r\n                numInput.setAttribute(key, opts[key]);\r\n        wrapper.appendChild(numInput);\r\n        wrapper.appendChild(arrowUp);\r\n        wrapper.appendChild(arrowDown);\r\n        return wrapper;\r\n    }\r\n\r\n    if (typeof Object.assign !== 'function') {\r\n        Object.assign = function(target) {\r\n            var args = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                args[_i - 1] = arguments[_i];\r\n            }\r\n            if (!target) {\r\n                throw TypeError('Cannot convert undefined or null to object');\r\n            }\r\n            var _loop_1 = function(source) {\r\n                if (source) {\r\n                    Object.keys(source).forEach(function(key) { return (target[key] = source[key]); });\r\n                }\r\n            };\r\n            for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {\r\n                var source = args_1[_a];\r\n                _loop_1(source);\r\n            }\r\n            return target;\r\n        };\r\n    }\r\n\r\n    var DEBOUNCED_CHANGE_MS = 300;\r\n    function FlatpickrInstance(element, instanceConfig) {\r\n        var self = {\r\n            config: __assign({}, flatpickr.defaultConfig),\r\n            l10n: english,\r\n        };\r\n        self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\r\n        self._handlers = [];\r\n        self._bind = bind;\r\n        self._setHoursFromDate = setHoursFromDate;\r\n        self._positionCalendar = positionCalendar;\r\n        self.changeMonth = changeMonth;\r\n        self.changeYear = changeYear;\r\n        self.clear = clear;\r\n        self.close = close;\r\n        self._createElement = createElement;\r\n        self.destroy = destroy;\r\n        self.isEnabled = isEnabled;\r\n        self.jumpToDate = jumpToDate;\r\n        self.open = open;\r\n        self.redraw = redraw;\r\n        self.set = set;\r\n        self.setDate = setDate;\r\n        self.toggle = toggle;\r\n        function setupHelperFunctions() {\r\n            self.utils = {\r\n                getDaysInMonth: function(month, yr) {\r\n                    if (month === void 0) { month = self.currentMonth; }\r\n                    if (yr === void 0) { yr = self.currentYear; }\r\n                    if (month === 1 && ((yr % 4 === 0 && yr % 100 !== 0) || yr % 400 === 0))\r\n                        return 29;\r\n                    return self.l10n.daysInMonth[month];\r\n                },\r\n            };\r\n        }\r\n        function init() {\r\n            self.element = self.input = element;\r\n            self.isOpen = false;\r\n            parseConfig();\r\n            setupLocale();\r\n            setupInputs();\r\n            setupDates();\r\n            setupHelperFunctions();\r\n            if (!self.isMobile)\r\n                build();\r\n            bindEvents();\r\n            if (self.selectedDates.length || self.config.noCalendar) {\r\n                if (self.config.enableTime) {\r\n                    setHoursFromDate(self.config.noCalendar\r\n                        ? self.latestSelectedDateObj || self.config.minDate\r\n                        : undefined);\r\n                }\r\n                updateValue(false);\r\n            }\r\n            setCalendarWidth();\r\n            self.showTimeInput =\r\n                self.selectedDates.length > 0 || self.config.noCalendar;\r\n            var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n            if (!self.isMobile && isSafari) {\r\n                positionCalendar();\r\n            }\r\n            triggerEvent('onReady');\r\n        }\r\n        function bindToInstance(fn) {\r\n            return fn.bind(self);\r\n        }\r\n        function setCalendarWidth() {\r\n            var config = self.config;\r\n            if (config.weekNumbers === false && config.showMonths === 1)\r\n                return;\r\n            else if (config.noCalendar !== true) {\r\n                window.requestAnimationFrame(function() {\r\n                    self.calendarContainer.style.visibility = 'hidden';\r\n                    self.calendarContainer.style.display = 'block';\r\n                    if (self.daysContainer !== undefined) {\r\n                        var daysWidth = (self.days.offsetWidth + 1) * config.showMonths;\r\n                        self.daysContainer.style.width = daysWidth + 'px';\r\n                        self.calendarContainer.style.width =\r\n                            daysWidth +\r\n                            (self.weekWrapper !== undefined\r\n                                ? self.weekWrapper.offsetWidth\r\n                                : 0) +\r\n                            'px';\r\n                        self.calendarContainer.style.removeProperty('visibility');\r\n                        self.calendarContainer.style.removeProperty('display');\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        function updateTime(e) {\r\n            if (self.selectedDates.length === 0)\r\n                return;\r\n            if (e !== undefined && e.type !== 'blur') {\r\n                timeWrapper(e);\r\n            }\r\n            var prevValue = self._input.value;\r\n            setHoursFromInputs();\r\n            updateValue();\r\n            if (self._input.value !== prevValue) {\r\n                self._debouncedChange();\r\n            }\r\n        }\r\n        function ampm2military(hour, amPM) {\r\n            return (hour % 12) + 12 * int(amPM === self.l10n.amPM[1]);\r\n        }\r\n        function military2ampm(hour) {\r\n            switch (hour % 24) {\r\n                case 0:\r\n                case 12:\r\n                    return 12;\r\n                default:\r\n                    return hour % 12;\r\n            }\r\n        }\r\n        function setHoursFromInputs() {\r\n            if (self.hourElement === undefined || self.minuteElement === undefined)\r\n                return;\r\n            var hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24, minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60, seconds = self.secondElement !== undefined\r\n                ? (parseInt(self.secondElement.value, 10) || 0) % 60\r\n                : 0;\r\n            if (self.amPM !== undefined) {\r\n                hours = ampm2military(hours, self.amPM.textContent);\r\n            }\r\n            var limitMinHours = self.config.minTime !== undefined ||\r\n                (self.config.minDate &&\r\n                    self.minDateHasTime &&\r\n                    self.latestSelectedDateObj &&\r\n                    compareDates(self.latestSelectedDateObj, self.config.minDate, true) ===\r\n                    0);\r\n            var limitMaxHours = self.config.maxTime !== undefined ||\r\n                (self.config.maxDate &&\r\n                    self.maxDateHasTime &&\r\n                    self.latestSelectedDateObj &&\r\n                    compareDates(self.latestSelectedDateObj, self.config.maxDate, true) ===\r\n                    0);\r\n            if (limitMaxHours) {\r\n                var maxTime = self.config.maxTime !== undefined\r\n                    ? self.config.maxTime\r\n                    : self.config.maxDate;\r\n                hours = Math.min(hours, maxTime.getHours());\r\n                if (hours === maxTime.getHours())\r\n                    minutes = Math.min(minutes, maxTime.getMinutes());\r\n                if (minutes === maxTime.getMinutes())\r\n                    seconds = Math.min(seconds, maxTime.getSeconds());\r\n            }\r\n            if (limitMinHours) {\r\n                var minTime = self.config.minTime !== undefined\r\n                    ? self.config.minTime\r\n                    : self.config.minDate;\r\n                hours = Math.max(hours, minTime.getHours());\r\n                if (hours === minTime.getHours())\r\n                    minutes = Math.max(minutes, minTime.getMinutes());\r\n                if (minutes === minTime.getMinutes())\r\n                    seconds = Math.max(seconds, minTime.getSeconds());\r\n            }\r\n            setHours(hours, minutes, seconds);\r\n        }\r\n        function setHoursFromDate(dateObj) {\r\n            var date = dateObj || self.latestSelectedDateObj;\r\n            if (date)\r\n                setHours(date.getHours(), date.getMinutes(), date.getSeconds());\r\n        }\r\n        function setDefaultHours() {\r\n            var hours = self.config.defaultHour;\r\n            var minutes = self.config.defaultMinute;\r\n            var seconds = self.config.defaultSeconds;\r\n            if (self.config.minDate !== undefined) {\r\n                var min_hr = self.config.minDate.getHours();\r\n                var min_minutes = self.config.minDate.getMinutes();\r\n                hours = Math.max(hours, min_hr);\r\n                if (hours === min_hr)\r\n                    minutes = Math.max(min_minutes, minutes);\r\n                if (hours === min_hr && minutes === min_minutes)\r\n                    seconds = self.config.minDate.getSeconds();\r\n            }\r\n            if (self.config.maxDate !== undefined) {\r\n                var max_hr = self.config.maxDate.getHours();\r\n                var max_minutes = self.config.maxDate.getMinutes();\r\n                hours = Math.min(hours, max_hr);\r\n                if (hours === max_hr)\r\n                    minutes = Math.min(max_minutes, minutes);\r\n                if (hours === max_hr && minutes === max_minutes)\r\n                    seconds = self.config.maxDate.getSeconds();\r\n            }\r\n            setHours(hours, minutes, seconds);\r\n        }\r\n        function setHours(hours, minutes, seconds) {\r\n            if (self.latestSelectedDateObj !== undefined) {\r\n                self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);\r\n            }\r\n            if (!self.hourElement || !self.minuteElement || self.isMobile)\r\n                return;\r\n            self.hourElement.value = pad(!self.config.time_24hr\r\n                ? ((12 + hours) % 12) + 12 * int(hours % 12 === 0)\r\n                : hours);\r\n            self.minuteElement.value = pad(minutes);\r\n            if (self.amPM !== undefined)\r\n                self.amPM.textContent = self.l10n.amPM[int(hours >= 12)];\r\n            if (self.secondElement !== undefined)\r\n                self.secondElement.value = pad(seconds);\r\n        }\r\n        function onYearInput(event) {\r\n            var year = parseInt(event.target.value) + (event.delta || 0);\r\n            if (year / 1000 > 1 ||\r\n                (event.key === 'Enter' && !/[^\\d]/.test(year.toString()))) {\r\n                changeYear(year);\r\n            }\r\n        }\r\n        function bind(element, event, handler, options) {\r\n            if (event instanceof Array)\r\n                return event.forEach(function(ev) { return bind(element, ev, handler, options); });\r\n            if (element instanceof Array)\r\n                return element.forEach(function(el) { return bind(el, event, handler, options); });\r\n            element.addEventListener(event, handler, options);\r\n            self._handlers.push({\r\n                element: element,\r\n                event: event,\r\n                handler: handler,\r\n                options: options,\r\n            });\r\n        }\r\n        function onClick(handler) {\r\n            return function(evt) {\r\n                evt.which === 1 && handler(evt);\r\n            };\r\n        }\r\n        function triggerChange() {\r\n            triggerEvent('onChange');\r\n        }\r\n        function bindEvents() {\r\n            if (self.config.wrap) {\r\n                ['open', 'close', 'toggle', 'clear'].forEach(function(evt) {\r\n                    Array.prototype.forEach.call(self.element.querySelectorAll('[data-' + evt + ']'), function(el) {\r\n                        return bind(el, 'click', self[evt]);\r\n                    });\r\n                });\r\n            }\r\n            if (self.isMobile) {\r\n                setupMobile();\r\n                return;\r\n            }\r\n            var debouncedResize = debounce(onResize, 50);\r\n            self._debouncedChange = debounce(triggerChange, DEBOUNCED_CHANGE_MS);\r\n            if (self.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent))\r\n                bind(self.daysContainer, 'mouseover', function(e) {\r\n                    if (self.config.mode === 'range')\r\n                        onMouseOver(e.target);\r\n                });\r\n            bind(window.document.body, 'keydown', onKeyDown);\r\n            if (!self.config.static)\r\n                bind(self._input, 'keydown', onKeyDown);\r\n            if (!self.config.inline && !self.config.static)\r\n                bind(window, 'resize', debouncedResize);\r\n            if (window.ontouchstart !== undefined)\r\n                bind(window.document, 'click', documentClick);\r\n            else\r\n                bind(window.document, 'mousedown', onClick(documentClick));\r\n            bind(window.document, 'focus', documentClick, { capture: true });\r\n            if (self.config.clickOpens === true) {\r\n                bind(self._input, 'focus', self.open);\r\n                bind(self._input, 'mousedown', onClick(self.open));\r\n            }\r\n            if (self.daysContainer !== undefined) {\r\n                bind(self.monthNav, 'mousedown', onClick(onMonthNavClick));\r\n                bind(self.monthNav, ['keyup', 'increment'], onYearInput);\r\n                bind(self.daysContainer, 'mousedown', onClick(selectDate));\r\n            }\r\n            if (self.timeContainer !== undefined &&\r\n                self.minuteElement !== undefined &&\r\n                self.hourElement !== undefined) {\r\n                var selText = function(e) {\r\n                    return e.target.select();\r\n                };\r\n                bind(self.timeContainer, ['increment'], updateTime);\r\n                bind(self.timeContainer, 'blur', updateTime, { capture: true });\r\n                bind(self.timeContainer, 'mousedown', onClick(timeIncrement));\r\n                bind([self.hourElement, self.minuteElement], ['focus', 'click'], selText);\r\n                if (self.secondElement !== undefined)\r\n                    bind(self.secondElement, 'focus', function() { return self.secondElement && self.secondElement.select(); });\r\n                if (self.amPM !== undefined) {\r\n                    bind(self.amPM, 'mousedown', onClick(function(e) {\r\n                        updateTime(e);\r\n                        triggerChange();\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        function jumpToDate(jumpDate) {\r\n            var jumpTo = jumpDate !== undefined\r\n                ? self.parseDate(jumpDate)\r\n                : self.latestSelectedDateObj ||\r\n                (self.config.minDate && self.config.minDate > self.now\r\n                    ? self.config.minDate\r\n                    : self.config.maxDate && self.config.maxDate < self.now\r\n                        ? self.config.maxDate\r\n                        : self.now);\r\n            try {\r\n                if (jumpTo !== undefined) {\r\n                    self.currentYear = jumpTo.getFullYear();\r\n                    self.currentMonth = jumpTo.getMonth();\r\n                }\r\n            }\r\n            catch (e) {\r\n                e.message = 'Invalid date supplied: ' + jumpTo;\r\n                self.config.errorHandler(e);\r\n            }\r\n            self.redraw();\r\n        }\r\n        function timeIncrement(e) {\r\n            if (~e.target.className.indexOf('arrow'))\r\n                incrementNumInput(e, e.target.classList.contains('arrowUp') ? 1 : -1);\r\n        }\r\n        function incrementNumInput(e, delta, inputElem) {\r\n            var target = e && e.target;\r\n            var input = inputElem ||\r\n                (target && target.parentNode && target.parentNode.firstChild);\r\n            var event = createEvent('increment');\r\n            event.delta = delta;\r\n            input && input.dispatchEvent(event);\r\n        }\r\n        function build() {\r\n            var fragment = window.document.createDocumentFragment();\r\n            self.calendarContainer = createElement('div', 'flatpickr-calendar');\r\n            self.calendarContainer.tabIndex = -1;\r\n            if (!self.config.noCalendar) {\r\n                fragment.appendChild(buildMonthNav());\r\n                self.innerContainer = createElement('div', 'flatpickr-innerContainer');\r\n                if (self.config.weekNumbers) {\r\n                    var _a = buildWeeks(), weekWrapper = _a.weekWrapper, weekNumbers = _a.weekNumbers;\r\n                    self.innerContainer.appendChild(weekWrapper);\r\n                    self.weekNumbers = weekNumbers;\r\n                    self.weekWrapper = weekWrapper;\r\n                }\r\n                self.rContainer = createElement('div', 'flatpickr-rContainer');\r\n                self.rContainer.appendChild(buildWeekdays());\r\n                if (!self.daysContainer) {\r\n                    self.daysContainer = createElement('div', 'flatpickr-days');\r\n                    self.daysContainer.tabIndex = -1;\r\n                }\r\n                buildDays();\r\n                self.rContainer.appendChild(self.daysContainer);\r\n                self.innerContainer.appendChild(self.rContainer);\r\n                fragment.appendChild(self.innerContainer);\r\n            }\r\n            if (self.config.enableTime) {\r\n                fragment.appendChild(buildTime());\r\n            }\r\n            toggleClass(self.calendarContainer, 'rangeMode', self.config.mode === 'range');\r\n            toggleClass(self.calendarContainer, 'animate', self.config.animate === true);\r\n            toggleClass(self.calendarContainer, 'multiMonth', self.config.showMonths > 1);\r\n            self.calendarContainer.appendChild(fragment);\r\n            var customAppend = self.config.appendTo !== undefined &&\r\n                self.config.appendTo.nodeType !== undefined;\r\n            if (self.config.inline || self.config.static) {\r\n                self.calendarContainer.classList.add(self.config.inline ? 'inline' : 'static');\r\n                if (self.config.inline) {\r\n                    if (!customAppend && self.element.parentNode)\r\n                        self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);\r\n                    else if (self.config.appendTo !== undefined)\r\n                        self.config.appendTo.appendChild(self.calendarContainer);\r\n                }\r\n                if (self.config.static) {\r\n                    var wrapper = createElement('div', 'flatpickr-wrapper');\r\n                    if (self.element.parentNode)\r\n                        self.element.parentNode.insertBefore(wrapper, self.element);\r\n                    wrapper.appendChild(self.element);\r\n                    if (self.altInput)\r\n                        wrapper.appendChild(self.altInput);\r\n                    wrapper.appendChild(self.calendarContainer);\r\n                }\r\n            }\r\n            if (!self.config.static && !self.config.inline)\r\n                (self.config.appendTo !== undefined\r\n                    ? self.config.appendTo\r\n                    : window.document.body).appendChild(self.calendarContainer);\r\n        }\r\n        function createDay(className, date, dayNumber, i) {\r\n            var dateIsEnabled = isEnabled(date, true), dayElement = createElement('span', 'flatpickr-day ' + className, date.getDate().toString());\r\n            dayElement.dateObj = date;\r\n            dayElement.$i = i;\r\n            dayElement.setAttribute('aria-label', self.formatDate(date, self.config.ariaDateFormat));\r\n            if (className.indexOf('hidden') === -1 &&\r\n                compareDates(date, self.now) === 0) {\r\n                self.todayDateElem = dayElement;\r\n                dayElement.classList.add('today');\r\n                dayElement.setAttribute('aria-current', 'date');\r\n            }\r\n            if (dateIsEnabled) {\r\n                dayElement.tabIndex = -1;\r\n                if (isDateSelected(date)) {\r\n                    dayElement.classList.add('selected');\r\n                    self.selectedDateElem = dayElement;\r\n                    if (self.config.mode === 'range') {\r\n                        toggleClass(dayElement, 'startRange', self.selectedDates[0] &&\r\n                            compareDates(date, self.selectedDates[0], true) === 0);\r\n                        toggleClass(dayElement, 'endRange', self.selectedDates[1] &&\r\n                            compareDates(date, self.selectedDates[1], true) === 0);\r\n                        if (className === 'nextMonthDay')\r\n                            dayElement.classList.add('inRange');\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                dayElement.classList.add('disabled');\r\n            }\r\n            if (self.config.mode === 'range') {\r\n                if (isDateInRange(date) && !isDateSelected(date))\r\n                    dayElement.classList.add('inRange');\r\n            }\r\n            if (self.weekNumbers &&\r\n                self.config.showMonths === 1 &&\r\n                className !== 'prevMonthDay' &&\r\n                dayNumber % 7 === 1) {\r\n                self.weekNumbers.insertAdjacentHTML('beforeend', '<span class=\"flatpickr-day\">' + self.config.getWeek(date) + '</span>');\r\n            }\r\n            triggerEvent('onDayCreate', dayElement);\r\n            return dayElement;\r\n        }\r\n        function focusOnDayElem(targetNode) {\r\n            targetNode.focus();\r\n            if (self.config.mode === 'range')\r\n                onMouseOver(targetNode);\r\n        }\r\n        function getFirstAvailableDay(delta) {\r\n            var startMonth = delta > 0 ? 0 : self.config.showMonths - 1;\r\n            var endMonth = delta > 0 ? self.config.showMonths : -1;\r\n            for (var m = startMonth; m != endMonth; m += delta) {\r\n                var month = self.daysContainer.children[m];\r\n                var startIndex = delta > 0 ? 0 : month.children.length - 1;\r\n                var endIndex = delta > 0 ? month.children.length : -1;\r\n                for (var i = startIndex; i != endIndex; i += delta) {\r\n                    var c = month.children[i];\r\n                    if (c.className.indexOf('hidden') === -1 && isEnabled(c.dateObj))\r\n                        return c;\r\n                }\r\n            }\r\n            return undefined;\r\n        }\r\n        function getNextAvailableDay(current, delta) {\r\n            var givenMonth = current.className.indexOf('Month') === -1\r\n                ? current.dateObj.getMonth()\r\n                : self.currentMonth;\r\n            var endMonth = delta > 0 ? self.config.showMonths : -1;\r\n            var loopDelta = delta > 0 ? 1 : -1;\r\n            for (var m = givenMonth - self.currentMonth; m != endMonth; m += loopDelta) {\r\n                var month = self.daysContainer.children[m];\r\n                var startIndex = givenMonth - self.currentMonth === m\r\n                    ? current.$i + delta\r\n                    : delta < 0\r\n                        ? month.children.length - 1\r\n                        : 0;\r\n                var numMonthDays = month.children.length;\r\n                for (var i = startIndex; i >= 0 && i < numMonthDays && i != (delta > 0 ? numMonthDays : -1); i += loopDelta) {\r\n                    var c = month.children[i];\r\n                    if (c.className.indexOf('hidden') === -1 &&\r\n                        isEnabled(c.dateObj) &&\r\n                        Math.abs(current.$i - i) >= Math.abs(delta))\r\n                        return focusOnDayElem(c);\r\n                }\r\n            }\r\n            self.changeMonth(loopDelta);\r\n            focusOnDay(getFirstAvailableDay(loopDelta), 0);\r\n            return undefined;\r\n        }\r\n        function focusOnDay(current, offset) {\r\n            var dayFocused = isInView(document.activeElement || document.body);\r\n            var startElem = current !== undefined\r\n                ? current\r\n                : dayFocused\r\n                    ? document.activeElement\r\n                    : self.selectedDateElem !== undefined &&\r\n                        isInView(self.selectedDateElem)\r\n                        ? self.selectedDateElem\r\n                        : self.todayDateElem !== undefined && isInView(self.todayDateElem)\r\n                            ? self.todayDateElem\r\n                            : getFirstAvailableDay(offset > 0 ? 1 : -1);\r\n            if (startElem === undefined)\r\n                return self._input.focus();\r\n            if (!dayFocused)\r\n                return focusOnDayElem(startElem);\r\n            getNextAvailableDay(startElem, offset);\r\n        }\r\n        function buildMonthDays(year, month) {\r\n            var firstOfMonth = (new Date(year, month, 1).getDay() - self.l10n.firstDayOfWeek + 7) % 7;\r\n            var prevMonthDays = self.utils.getDaysInMonth((month - 1 + 12) % 12);\r\n            var daysInMonth = self.utils.getDaysInMonth(month), days = window.document.createDocumentFragment(), isMultiMonth = self.config.showMonths > 1, prevMonthDayClass = isMultiMonth ? 'prevMonthDay hidden' : 'prevMonthDay', nextMonthDayClass = isMultiMonth ? 'nextMonthDay hidden' : 'nextMonthDay';\r\n            var dayNumber = prevMonthDays + 1 - firstOfMonth, dayIndex = 0;\r\n            for (; dayNumber <= prevMonthDays; dayNumber++ , dayIndex++) {\r\n                days.appendChild(createDay(prevMonthDayClass, new Date(year, month - 1, dayNumber), dayNumber, dayIndex));\r\n            }\r\n            for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++ , dayIndex++) {\r\n                days.appendChild(createDay('', new Date(year, month, dayNumber), dayNumber, dayIndex));\r\n            }\r\n            for (var dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth &&\r\n                (self.config.showMonths === 1 || dayIndex % 7 !== 0); dayNum++ , dayIndex++) {\r\n                days.appendChild(createDay(nextMonthDayClass, new Date(year, month + 1, dayNum % daysInMonth), dayNum, dayIndex));\r\n            }\r\n            var dayContainer = createElement('div', 'dayContainer');\r\n            dayContainer.appendChild(days);\r\n            return dayContainer;\r\n        }\r\n        function buildDays() {\r\n            if (self.daysContainer === undefined) {\r\n                return;\r\n            }\r\n            clearNode(self.daysContainer);\r\n            if (self.weekNumbers)\r\n                clearNode(self.weekNumbers);\r\n            var frag = document.createDocumentFragment();\r\n            for (var i = 0; i < self.config.showMonths; i++) {\r\n                var d = new Date(self.currentYear, self.currentMonth, 1);\r\n                d.setMonth(self.currentMonth + i);\r\n                frag.appendChild(buildMonthDays(d.getFullYear(), d.getMonth()));\r\n            }\r\n            self.daysContainer.appendChild(frag);\r\n            self.days = self.daysContainer.firstChild;\r\n            if (self.config.mode === 'range' && self.selectedDates.length === 1) {\r\n                onMouseOver();\r\n            }\r\n        }\r\n        function buildMonth() {\r\n            var container = createElement('div', 'flatpickr-month');\r\n            var monthNavFragment = window.document.createDocumentFragment();\r\n            var monthElement = createElement('span', 'cur-month');\r\n            var yearInput = createNumberInput('cur-year', { tabindex: '-1' });\r\n            var yearElement = yearInput.childNodes[0];\r\n            yearElement.setAttribute('aria-label', self.l10n.yearAriaLabel);\r\n            if (self.config.minDate)\r\n                yearElement.setAttribute('data-min', self.config.minDate.getFullYear().toString());\r\n            if (self.config.maxDate) {\r\n                yearElement.setAttribute('data-max', self.config.maxDate.getFullYear().toString());\r\n                yearElement.disabled =\r\n                    !!self.config.minDate &&\r\n                    self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();\r\n            }\r\n            var currentMonth = createElement('div', 'flatpickr-current-month');\r\n            currentMonth.appendChild(monthElement);\r\n            currentMonth.appendChild(yearInput);\r\n            monthNavFragment.appendChild(currentMonth);\r\n            container.appendChild(monthNavFragment);\r\n            return {\r\n                container: container,\r\n                yearElement: yearElement,\r\n                monthElement: monthElement,\r\n            };\r\n        }\r\n        function buildMonths() {\r\n            clearNode(self.monthNav);\r\n            self.monthNav.appendChild(self.prevMonthNav);\r\n            for (var m = self.config.showMonths; m--;) {\r\n                var month = buildMonth();\r\n                self.yearElements.push(month.yearElement);\r\n                self.monthElements.push(month.monthElement);\r\n                self.monthNav.appendChild(month.container);\r\n            }\r\n            self.monthNav.appendChild(self.nextMonthNav);\r\n        }\r\n        function buildMonthNav() {\r\n            self.monthNav = createElement('div', 'flatpickr-months');\r\n            self.yearElements = [];\r\n            self.monthElements = [];\r\n            self.prevMonthNav = createElement('span', 'flatpickr-prev-month');\r\n            self.prevMonthNav.innerHTML = self.config.prevArrow;\r\n            self.nextMonthNav = createElement('span', 'flatpickr-next-month');\r\n            self.nextMonthNav.innerHTML = self.config.nextArrow;\r\n            buildMonths();\r\n            Object.defineProperty(self, '_hidePrevMonthArrow', {\r\n                get: function() { return self.__hidePrevMonthArrow; },\r\n                set: function(bool) {\r\n                    if (self.__hidePrevMonthArrow !== bool) {\r\n                        toggleClass(self.prevMonthNav, 'disabled', bool);\r\n                        self.__hidePrevMonthArrow = bool;\r\n                    }\r\n                },\r\n            });\r\n            Object.defineProperty(self, '_hideNextMonthArrow', {\r\n                get: function() { return self.__hideNextMonthArrow; },\r\n                set: function(bool) {\r\n                    if (self.__hideNextMonthArrow !== bool) {\r\n                        toggleClass(self.nextMonthNav, 'disabled', bool);\r\n                        self.__hideNextMonthArrow = bool;\r\n                    }\r\n                },\r\n            });\r\n            self.currentYearElement = self.yearElements[0];\r\n            updateNavigationCurrentMonth();\r\n            return self.monthNav;\r\n        }\r\n        function buildTime() {\r\n            self.calendarContainer.classList.add('hasTime');\r\n            if (self.config.noCalendar)\r\n                self.calendarContainer.classList.add('noCalendar');\r\n            self.timeContainer = createElement('div', 'flatpickr-time');\r\n            self.timeContainer.tabIndex = -1;\r\n            var separator = createElement('span', 'flatpickr-time-separator', ':');\r\n            var hourInput = createNumberInput('flatpickr-hour');\r\n            self.hourElement = hourInput.childNodes[0];\r\n            var minuteInput = createNumberInput('flatpickr-minute');\r\n            self.minuteElement = minuteInput.childNodes[0];\r\n            self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;\r\n            self.hourElement.value = pad(self.latestSelectedDateObj\r\n                ? self.latestSelectedDateObj.getHours()\r\n                : self.config.time_24hr\r\n                    ? self.config.defaultHour\r\n                    : military2ampm(self.config.defaultHour));\r\n            self.minuteElement.value = pad(self.latestSelectedDateObj\r\n                ? self.latestSelectedDateObj.getMinutes()\r\n                : self.config.defaultMinute);\r\n            self.hourElement.setAttribute('data-step', self.config.hourIncrement.toString());\r\n            self.minuteElement.setAttribute('data-step', self.config.minuteIncrement.toString());\r\n            self.hourElement.setAttribute('data-min', self.config.time_24hr ? '0' : '1');\r\n            self.hourElement.setAttribute('data-max', self.config.time_24hr ? '23' : '12');\r\n            self.minuteElement.setAttribute('data-min', '0');\r\n            self.minuteElement.setAttribute('data-max', '59');\r\n            self.timeContainer.appendChild(hourInput);\r\n            self.timeContainer.appendChild(separator);\r\n            self.timeContainer.appendChild(minuteInput);\r\n            if (self.config.time_24hr)\r\n                self.timeContainer.classList.add('time24hr');\r\n            if (self.config.enableSeconds) {\r\n                self.timeContainer.classList.add('hasSeconds');\r\n                var secondInput = createNumberInput('flatpickr-second');\r\n                self.secondElement = secondInput.childNodes[0];\r\n                self.secondElement.value = pad(self.latestSelectedDateObj\r\n                    ? self.latestSelectedDateObj.getSeconds()\r\n                    : self.config.defaultSeconds);\r\n                self.secondElement.setAttribute('data-step', self.minuteElement.getAttribute('data-step'));\r\n                self.secondElement.setAttribute('data-min', self.minuteElement.getAttribute('data-min'));\r\n                self.secondElement.setAttribute('data-max', self.minuteElement.getAttribute('data-max'));\r\n                self.timeContainer.appendChild(createElement('span', 'flatpickr-time-separator', ':'));\r\n                self.timeContainer.appendChild(secondInput);\r\n            }\r\n            if (!self.config.time_24hr) {\r\n                self.amPM = createElement('span', 'flatpickr-am-pm', self.l10n.amPM[int((self.latestSelectedDateObj\r\n                    ? self.hourElement.value\r\n                    : self.config.defaultHour) > 11)]);\r\n                self.amPM.title = self.l10n.toggleTitle;\r\n                self.amPM.tabIndex = -1;\r\n                self.timeContainer.appendChild(self.amPM);\r\n            }\r\n            return self.timeContainer;\r\n        }\r\n        function buildWeekdays() {\r\n            if (!self.weekdayContainer)\r\n                self.weekdayContainer = createElement('div', 'flatpickr-weekdays');\r\n            else\r\n                clearNode(self.weekdayContainer);\r\n            for (var i = self.config.showMonths; i--;) {\r\n                var container = createElement('div', 'flatpickr-weekdaycontainer');\r\n                self.weekdayContainer.appendChild(container);\r\n            }\r\n            updateWeekdays();\r\n            return self.weekdayContainer;\r\n        }\r\n        function updateWeekdays() {\r\n            var firstDayOfWeek = self.l10n.firstDayOfWeek;\r\n            var weekdays = self.l10n.weekdays.shorthand.slice();\r\n            if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {\r\n                weekdays = weekdays.splice(firstDayOfWeek, weekdays.length).concat(weekdays.splice(0, firstDayOfWeek));\r\n            }\r\n            for (var i = self.config.showMonths; i--;) {\r\n                self.weekdayContainer.children[i].innerHTML = '\\n      <span class=flatpickr-weekday>\\n        ' + weekdays.join('</span><span class=flatpickr-weekday>') + '\\n      </span>\\n      ';\r\n            }\r\n        }\r\n        function buildWeeks() {\r\n            self.calendarContainer.classList.add('hasWeeks');\r\n            var weekWrapper = createElement('div', 'flatpickr-weekwrapper');\r\n            weekWrapper.appendChild(createElement('span', 'flatpickr-weekday', self.l10n.weekAbbreviation));\r\n            var weekNumbers = createElement('div', 'flatpickr-weeks');\r\n            weekWrapper.appendChild(weekNumbers);\r\n            return {\r\n                weekWrapper: weekWrapper,\r\n                weekNumbers: weekNumbers,\r\n            };\r\n        }\r\n        function changeMonth(value, is_offset) {\r\n            if (is_offset === void 0) { is_offset = true; }\r\n            var delta = is_offset ? value : value - self.currentMonth;\r\n            if ((delta < 0 && self._hidePrevMonthArrow === true) ||\r\n                (delta > 0 && self._hideNextMonthArrow === true))\r\n                return;\r\n            self.currentMonth += delta;\r\n            if (self.currentMonth < 0 || self.currentMonth > 11) {\r\n                self.currentYear += self.currentMonth > 11 ? 1 : -1;\r\n                self.currentMonth = (self.currentMonth + 12) % 12;\r\n                triggerEvent('onYearChange');\r\n            }\r\n            buildDays();\r\n            triggerEvent('onMonthChange');\r\n            updateNavigationCurrentMonth();\r\n        }\r\n        function clear(triggerChangeEvent) {\r\n            if (triggerChangeEvent === void 0) { triggerChangeEvent = true; }\r\n            self.input.value = '';\r\n            if (self.altInput !== undefined)\r\n                self.altInput.value = '';\r\n            if (self.mobileInput !== undefined)\r\n                self.mobileInput.value = '';\r\n            self.selectedDates = [];\r\n            self.latestSelectedDateObj = undefined;\r\n            self.showTimeInput = false;\r\n            if (self.config.enableTime === true) {\r\n                setDefaultHours();\r\n            }\r\n            self.redraw();\r\n            if (triggerChangeEvent)\r\n                triggerEvent('onChange');\r\n        }\r\n        function close() {\r\n            self.isOpen = false;\r\n            if (!self.isMobile) {\r\n                self.calendarContainer.classList.remove('open');\r\n                self._input.classList.remove('active');\r\n            }\r\n            triggerEvent('onClose');\r\n        }\r\n        function destroy() {\r\n            if (self.config !== undefined)\r\n                triggerEvent('onDestroy');\r\n            for (var i = self._handlers.length; i--;) {\r\n                var h = self._handlers[i];\r\n                h.element.removeEventListener(h.event, h.handler, h.options);\r\n            }\r\n            self._handlers = [];\r\n            if (self.mobileInput) {\r\n                if (self.mobileInput.parentNode)\r\n                    self.mobileInput.parentNode.removeChild(self.mobileInput);\r\n                self.mobileInput = undefined;\r\n            }\r\n            else if (self.calendarContainer && self.calendarContainer.parentNode) {\r\n                if (self.config.static && self.calendarContainer.parentNode) {\r\n                    var wrapper = self.calendarContainer.parentNode;\r\n                    wrapper.lastChild && wrapper.removeChild(wrapper.lastChild);\r\n                    while (wrapper.firstChild)\r\n                        wrapper.parentNode.insertBefore(wrapper.firstChild, wrapper);\r\n                    wrapper.parentNode.removeChild(wrapper);\r\n                }\r\n                else\r\n                    self.calendarContainer.parentNode.removeChild(self.calendarContainer);\r\n            }\r\n            if (self.altInput) {\r\n                self.input.type = 'text';\r\n                if (self.altInput.parentNode)\r\n                    self.altInput.parentNode.removeChild(self.altInput);\r\n                delete self.altInput;\r\n            }\r\n            if (self.input) {\r\n                self.input.type = self.input._type;\r\n                self.input.classList.remove('flatpickr-input');\r\n                self.input.removeAttribute('readonly');\r\n                self.input.value = '';\r\n            }\r\n            [\r\n                '_showTimeInput',\r\n                'latestSelectedDateObj',\r\n                '_hideNextMonthArrow',\r\n                '_hidePrevMonthArrow',\r\n                '__hideNextMonthArrow',\r\n                '__hidePrevMonthArrow',\r\n                'isMobile',\r\n                'isOpen',\r\n                'selectedDateElem',\r\n                'minDateHasTime',\r\n                'maxDateHasTime',\r\n                'days',\r\n                'daysContainer',\r\n                '_input',\r\n                '_positionElement',\r\n                'innerContainer',\r\n                'rContainer',\r\n                'monthNav',\r\n                'todayDateElem',\r\n                'calendarContainer',\r\n                'weekdayContainer',\r\n                'prevMonthNav',\r\n                'nextMonthNav',\r\n                'currentMonthElement',\r\n                'currentYearElement',\r\n                'navigationCurrentMonth',\r\n                'selectedDateElem',\r\n                'config',\r\n            ].forEach(function(k) {\r\n                try {\r\n                    delete self[k];\r\n                }\r\n                catch (_) {\r\n                    // do nothing\r\n                }\r\n            });\r\n        }\r\n        function isCalendarElem(elem) {\r\n            if (self.config.appendTo && self.config.appendTo.contains(elem))\r\n                return true;\r\n            return self.calendarContainer.contains(elem);\r\n        }\r\n        function documentClick(e) {\r\n            if (self.isOpen && !self.config.inline) {\r\n                var isCalendarElement = isCalendarElem(e.target);\r\n                var isInput = e.target === self.input ||\r\n                    e.target === self.altInput ||\r\n                    self.element.contains(e.target) ||\r\n                    (e.path &&\r\n                        e.path.indexOf &&\r\n                        (~e.path.indexOf(self.input) ||\r\n                            ~e.path.indexOf(self.altInput)));\r\n                var lostFocus = e.type === 'blur'\r\n                    ? isInput &&\r\n                    e.relatedTarget &&\r\n                    !isCalendarElem(e.relatedTarget)\r\n                    : !isInput && !isCalendarElement;\r\n                var isIgnored = !self.config.ignoredFocusElements.some(function(elem) {\r\n                    return elem.contains(e.target);\r\n                });\r\n                if (lostFocus && isIgnored) {\r\n                    self.close();\r\n                    if (self.config.mode === 'range' && self.selectedDates.length === 1) {\r\n                        self.clear(false);\r\n                        self.redraw();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        function changeYear(newYear) {\r\n            if (!newYear ||\r\n                (self.config.minDate && newYear < self.config.minDate.getFullYear()) ||\r\n                (self.config.maxDate && newYear > self.config.maxDate.getFullYear()))\r\n                return;\r\n            var newYearNum = newYear, isNewYear = self.currentYear !== newYearNum;\r\n            self.currentYear = newYearNum || self.currentYear;\r\n            if (self.config.maxDate &&\r\n                self.currentYear === self.config.maxDate.getFullYear()) {\r\n                self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);\r\n            }\r\n            else if (self.config.minDate &&\r\n                self.currentYear === self.config.minDate.getFullYear()) {\r\n                self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);\r\n            }\r\n            if (isNewYear) {\r\n                self.redraw();\r\n                triggerEvent('onYearChange');\r\n            }\r\n        }\r\n        function isEnabled(date, timeless) {\r\n            if (timeless === void 0) { timeless = true; }\r\n            var dateToCheck = self.parseDate(date, undefined, timeless);\r\n            if ((self.config.minDate &&\r\n                dateToCheck &&\r\n                compareDates(dateToCheck, self.config.minDate, timeless !== undefined ? timeless : !self.minDateHasTime) < 0) ||\r\n                (self.config.maxDate &&\r\n                    dateToCheck &&\r\n                    compareDates(dateToCheck, self.config.maxDate, timeless !== undefined ? timeless : !self.maxDateHasTime) > 0))\r\n                return false;\r\n            if (self.config.enable.length === 0 && self.config.disable.length === 0)\r\n                return true;\r\n            if (dateToCheck === undefined)\r\n                return false;\r\n            var bool = self.config.enable.length > 0, array = bool ? self.config.enable : self.config.disable;\r\n            for (var i = 0, d = void 0; i < array.length; i++) {\r\n                d = array[i];\r\n                if (typeof d === 'function' &&\r\n                    d(dateToCheck))\r\n                    return bool;\r\n                else if (d instanceof Date &&\r\n                    dateToCheck !== undefined &&\r\n                    d.getTime() === dateToCheck.getTime())\r\n                    return bool;\r\n                else if (typeof d === 'string' && dateToCheck !== undefined) {\r\n                    var parsed = self.parseDate(d, undefined, true);\r\n                    return parsed && parsed.getTime() === dateToCheck.getTime()\r\n                        ? bool\r\n                        : !bool;\r\n                }\r\n                else if (typeof d === 'object' &&\r\n                    dateToCheck !== undefined &&\r\n                    d.from &&\r\n                    d.to &&\r\n                    dateToCheck.getTime() >= d.from.getTime() &&\r\n                    dateToCheck.getTime() <= d.to.getTime())\r\n                    return bool;\r\n            }\r\n            return !bool;\r\n        }\r\n        function isInView(elem) {\r\n            if (self.daysContainer !== undefined)\r\n                return (elem.className.indexOf('hidden') === -1 &&\r\n                    self.daysContainer.contains(elem));\r\n            return false;\r\n        }\r\n        function onKeyDown(e) {\r\n            var isInput = e.target === self._input;\r\n            var allowInput = self.config.allowInput;\r\n            var allowKeydown = self.isOpen && (!allowInput || !isInput);\r\n            var allowInlineKeydown = self.config.inline && isInput && !allowInput;\r\n            if (e.keyCode === 13 && isInput) {\r\n                if (allowInput) {\r\n                    self.setDate(self._input.value, true, e.target === self.altInput\r\n                        ? self.config.altFormat\r\n                        : self.config.dateFormat);\r\n                    return e.target.blur();\r\n                }\r\n                else\r\n                    self.open();\r\n            }\r\n            else if (isCalendarElem(e.target) ||\r\n                allowKeydown ||\r\n                allowInlineKeydown) {\r\n                var isTimeObj = !!self.timeContainer &&\r\n                    self.timeContainer.contains(e.target);\r\n                switch (e.keyCode) {\r\n                    case 13:\r\n                        if (isTimeObj)\r\n                            updateTime();\r\n                        else\r\n                            selectDate(e);\r\n                        break;\r\n                    case 27:\r\n                        e.preventDefault();\r\n                        focusAndClose();\r\n                        break;\r\n                    case 8:\r\n                    case 46:\r\n                        if (isInput && !self.config.allowInput) {\r\n                            e.preventDefault();\r\n                            self.clear();\r\n                        }\r\n                        break;\r\n                    case 37:\r\n                    case 39:\r\n                        if (!isTimeObj) {\r\n                            e.preventDefault();\r\n                            if (self.daysContainer !== undefined &&\r\n                                (allowInput === false || isInView(document.activeElement))) {\r\n                                var delta_1 = e.keyCode === 39 ? 1 : -1;\r\n                                if (!e.ctrlKey)\r\n                                    focusOnDay(undefined, delta_1);\r\n                                else {\r\n                                    changeMonth(delta_1);\r\n                                    focusOnDay(getFirstAvailableDay(1), 0);\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (self.hourElement)\r\n                            self.hourElement.focus();\r\n                        break;\r\n                    case 38:\r\n                    case 40:\r\n                        e.preventDefault();\r\n                        var delta = e.keyCode === 40 ? 1 : -1;\r\n                        if (self.daysContainer) {\r\n                            if (e.ctrlKey) {\r\n                                changeYear(self.currentYear - delta);\r\n                                focusOnDay(getFirstAvailableDay(1), 0);\r\n                            }\r\n                            else if (!isTimeObj)\r\n                                focusOnDay(undefined, delta * 7);\r\n                        }\r\n                        else if (self.config.enableTime) {\r\n                            if (!isTimeObj && self.hourElement)\r\n                                self.hourElement.focus();\r\n                            updateTime(e);\r\n                            self._debouncedChange();\r\n                        }\r\n                        break;\r\n                    case 9:\r\n                        if (!isTimeObj) {\r\n                            self.element.focus();\r\n                            break;\r\n                        }\r\n                        var elems = [\r\n                            self.hourElement,\r\n                            self.minuteElement,\r\n                            self.secondElement,\r\n                            self.amPM,\r\n                        ].filter(function(x) { return x; });\r\n                        var i = elems.indexOf(e.target);\r\n                        if (i !== -1) {\r\n                            var target = elems[i + (e.shiftKey ? -1 : 1)];\r\n                            if (target !== undefined) {\r\n                                e.preventDefault();\r\n                                target.focus();\r\n                            }\r\n                            else {\r\n                                self.element.focus();\r\n                            }\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            if (self.amPM !== undefined && e.target === self.amPM) {\r\n                switch (e.key) {\r\n                    case self.l10n.amPM[0].charAt(0):\r\n                    case self.l10n.amPM[0].charAt(0).toLowerCase():\r\n                        self.amPM.textContent = self.l10n.amPM[0];\r\n                        setHoursFromInputs();\r\n                        updateValue();\r\n                        break;\r\n                    case self.l10n.amPM[1].charAt(0):\r\n                    case self.l10n.amPM[1].charAt(0).toLowerCase():\r\n                        self.amPM.textContent = self.l10n.amPM[1];\r\n                        setHoursFromInputs();\r\n                        updateValue();\r\n                        break;\r\n                }\r\n            }\r\n            triggerEvent('onKeyDown', e);\r\n        }\r\n        function onMouseOver(elem) {\r\n            if (self.selectedDates.length !== 1 ||\r\n                (elem &&\r\n                    (!elem.classList.contains('flatpickr-day') ||\r\n                        elem.classList.contains('disabled'))))\r\n                return;\r\n            var hoverDate = elem ? elem.dateObj.getTime() : self.days.firstElementChild.dateObj.getTime(), initialDate = self.parseDate(self.selectedDates[0], undefined, true).getTime(), rangeStartDate = Math.min(hoverDate, self.selectedDates[0].getTime()), rangeEndDate = Math.max(hoverDate, self.selectedDates[0].getTime()), lastDate = self.daysContainer.lastChild\r\n                .lastChild.dateObj.getTime();\r\n            var containsDisabled = false;\r\n            var minRange = 0, maxRange = 0;\r\n            for (var t = rangeStartDate; t < lastDate; t += duration.DAY) {\r\n                if (!isEnabled(new Date(t), true)) {\r\n                    containsDisabled =\r\n                        containsDisabled || (t > rangeStartDate && t < rangeEndDate);\r\n                    if (t < initialDate && (!minRange || t > minRange))\r\n                        minRange = t;\r\n                    else if (t > initialDate && (!maxRange || t < maxRange))\r\n                        maxRange = t;\r\n                }\r\n            }\r\n            for (var m = 0; m < self.config.showMonths; m++) {\r\n                var month = self.daysContainer.children[m];\r\n                var prevMonth = self.daysContainer.children[m - 1];\r\n                var _loop_1 = function(i, l) {\r\n                    var dayElem = month.children[i], date = dayElem.dateObj;\r\n                    var timestamp = date.getTime();\r\n                    var outOfRange = (minRange > 0 && timestamp < minRange) ||\r\n                        (maxRange > 0 && timestamp > maxRange);\r\n                    if (outOfRange) {\r\n                        dayElem.classList.add('notAllowed');\r\n                        ['inRange', 'startRange', 'endRange'].forEach(function(c) {\r\n                            dayElem.classList.remove(c);\r\n                        });\r\n                        return 'continue';\r\n                    }\r\n                    else if (containsDisabled && !outOfRange)\r\n                        return 'continue';\r\n                    ['startRange', 'inRange', 'endRange', 'notAllowed'].forEach(function(c) {\r\n                        dayElem.classList.remove(c);\r\n                    });\r\n                    if (elem !== undefined) {\r\n                        elem.classList.add(hoverDate < self.selectedDates[0].getTime()\r\n                            ? 'startRange'\r\n                            : 'endRange');\r\n                        if (month.contains(elem) ||\r\n                            !(m > 0 &&\r\n                                prevMonth &&\r\n                                prevMonth.lastChild.dateObj.getTime() >= timestamp)) {\r\n                            if (initialDate < hoverDate && timestamp === initialDate)\r\n                                dayElem.classList.add('startRange');\r\n                            else if (initialDate > hoverDate && timestamp === initialDate)\r\n                                dayElem.classList.add('endRange');\r\n                            if (timestamp >= minRange &&\r\n                                (maxRange === 0 || timestamp <= maxRange) &&\r\n                                isBetween(timestamp, initialDate, hoverDate))\r\n                                dayElem.classList.add('inRange');\r\n                        }\r\n                    }\r\n                };\r\n                for (var i = 0, l = month.children.length; i < l; i++) {\r\n                    _loop_1(i, l);\r\n                }\r\n            }\r\n        }\r\n        function onResize() {\r\n            if (self.isOpen && !self.config.static && !self.config.inline)\r\n                positionCalendar();\r\n        }\r\n        function open(e, positionElement) {\r\n            if (positionElement === void 0) { positionElement = self._positionElement; }\r\n            if (self.isMobile === true) {\r\n                if (e) {\r\n                    e.preventDefault();\r\n                    e.target && e.target.blur();\r\n                }\r\n                if (self.mobileInput !== undefined) {\r\n                    self.mobileInput.focus();\r\n                    self.mobileInput.click();\r\n                }\r\n                triggerEvent('onOpen');\r\n                return;\r\n            }\r\n            if (self._input.disabled || self.config.inline)\r\n                return;\r\n            var wasOpen = self.isOpen;\r\n            self.isOpen = true;\r\n            if (!wasOpen) {\r\n                self.calendarContainer.classList.add('open');\r\n                self._input.classList.add('active');\r\n                triggerEvent('onOpen');\r\n                positionCalendar(positionElement);\r\n            }\r\n            if (self.config.enableTime === true && self.config.noCalendar === true) {\r\n                if (self.selectedDates.length === 0) {\r\n                    self.setDate(self.config.minDate !== undefined\r\n                        ? new Date(self.config.minDate.getTime())\r\n                        : new Date(), false);\r\n                    setDefaultHours();\r\n                    updateValue();\r\n                }\r\n                if (self.config.allowInput === false &&\r\n                    (e === undefined ||\r\n                        !self.timeContainer.contains(e.relatedTarget))) {\r\n                    setTimeout(function() { return self.hourElement.select(); }, 50);\r\n                }\r\n            }\r\n        }\r\n        function minMaxDateSetter(type) {\r\n            return function(date) {\r\n                var dateObj = (self.config['_' + type + 'Date'] = self.parseDate(date, self.config.dateFormat));\r\n                var inverseDateObj = self.config['_' + (type === 'min' ? 'max' : 'min') + 'Date'];\r\n                if (dateObj !== undefined) {\r\n                    self[type === 'min' ? 'minDateHasTime' : 'maxDateHasTime'] =\r\n                        dateObj.getHours() > 0 ||\r\n                        dateObj.getMinutes() > 0 ||\r\n                        dateObj.getSeconds() > 0;\r\n                }\r\n                if (self.selectedDates) {\r\n                    self.selectedDates = self.selectedDates.filter(function(d) { return isEnabled(d); });\r\n                    if (!self.selectedDates.length && type === 'min')\r\n                        setHoursFromDate(dateObj);\r\n                    updateValue();\r\n                }\r\n                if (self.daysContainer) {\r\n                    redraw();\r\n                    if (dateObj !== undefined)\r\n                        self.currentYearElement[type] = dateObj.getFullYear().toString();\r\n                    else\r\n                        self.currentYearElement.removeAttribute(type);\r\n                    self.currentYearElement.disabled =\r\n                        !!inverseDateObj &&\r\n                        dateObj !== undefined &&\r\n                        inverseDateObj.getFullYear() === dateObj.getFullYear();\r\n                }\r\n            };\r\n        }\r\n        function parseConfig() {\r\n            var boolOpts = [\r\n                'wrap',\r\n                'weekNumbers',\r\n                'allowInput',\r\n                'clickOpens',\r\n                'time_24hr',\r\n                'enableTime',\r\n                'noCalendar',\r\n                'altInput',\r\n                'shorthandCurrentMonth',\r\n                'inline',\r\n                'static',\r\n                'enableSeconds',\r\n                'disableMobile',\r\n            ];\r\n            var hooks = [\r\n                'onChange',\r\n                'onClose',\r\n                'onDayCreate',\r\n                'onDestroy',\r\n                'onKeyDown',\r\n                'onMonthChange',\r\n                'onOpen',\r\n                'onParseConfig',\r\n                'onReady',\r\n                'onValueUpdate',\r\n                'onYearChange',\r\n                'onPreCalendarPosition',\r\n            ];\r\n            var userConfig = __assign({}, instanceConfig, JSON.parse(JSON.stringify(element.dataset || {})));\r\n            var formats$$1 = {};\r\n            self.config.parseDate = userConfig.parseDate;\r\n            self.config.formatDate = userConfig.formatDate;\r\n            Object.defineProperty(self.config, 'enable', {\r\n                get: function() { return self.config._enable; },\r\n                set: function(dates) {\r\n                    self.config._enable = parseDateRules(dates);\r\n                },\r\n            });\r\n            Object.defineProperty(self.config, 'disable', {\r\n                get: function() { return self.config._disable; },\r\n                set: function(dates) {\r\n                    self.config._disable = parseDateRules(dates);\r\n                },\r\n            });\r\n            var timeMode = userConfig.mode === 'time';\r\n            if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {\r\n                formats$$1.dateFormat =\r\n                    userConfig.noCalendar || timeMode\r\n                        ? 'H:i' + (userConfig.enableSeconds ? ':S' : '')\r\n                        : flatpickr.defaultConfig.dateFormat +\r\n                        ' H:i' +\r\n                        (userConfig.enableSeconds ? ':S' : '');\r\n            }\r\n            if (userConfig.altInput &&\r\n                (userConfig.enableTime || timeMode) &&\r\n                !userConfig.altFormat) {\r\n                formats$$1.altFormat =\r\n                    userConfig.noCalendar || timeMode\r\n                        ? 'h:i' + (userConfig.enableSeconds ? ':S K' : ' K')\r\n                        : flatpickr.defaultConfig.altFormat +\r\n                        (' h:i' + (userConfig.enableSeconds ? ':S' : '') + ' K');\r\n            }\r\n            Object.defineProperty(self.config, 'minDate', {\r\n                get: function() { return self.config._minDate; },\r\n                set: minMaxDateSetter('min'),\r\n            });\r\n            Object.defineProperty(self.config, 'maxDate', {\r\n                get: function() { return self.config._maxDate; },\r\n                set: minMaxDateSetter('max'),\r\n            });\r\n            var minMaxTimeSetter = function(type) {\r\n                return function(val) {\r\n                    self.config[type === 'min' ? '_minTime' : '_maxTime'] = self.parseDate(val, 'H:i');\r\n                };\r\n            };\r\n            Object.defineProperty(self.config, 'minTime', {\r\n                get: function() { return self.config._minTime; },\r\n                set: minMaxTimeSetter('min'),\r\n            });\r\n            Object.defineProperty(self.config, 'maxTime', {\r\n                get: function() { return self.config._maxTime; },\r\n                set: minMaxTimeSetter('max'),\r\n            });\r\n            if (userConfig.mode === 'time') {\r\n                self.config.noCalendar = true;\r\n                self.config.enableTime = true;\r\n            }\r\n            Object.assign(self.config, formats$$1, userConfig);\r\n            var i;\r\n            for (i = 0; i < boolOpts.length; i++)\r\n                self.config[boolOpts[i]] =\r\n                    self.config[boolOpts[i]] === true ||\r\n                    self.config[boolOpts[i]] === 'true';\r\n            for (i = hooks.length; i--;) {\r\n                if (self.config[hooks[i]] !== undefined) {\r\n                    self.config[hooks[i]] = arrayify(self.config[hooks[i]] || []).map(bindToInstance);\r\n                }\r\n            }\r\n            self.isMobile =\r\n                !self.config.disableMobile &&\r\n                !self.config.inline &&\r\n                self.config.mode === 'single' &&\r\n                !self.config.disable.length &&\r\n                !self.config.enable.length &&\r\n                !self.config.weekNumbers &&\r\n                /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n            for (i = 0; i < self.config.plugins.length; i++) {\r\n                var pluginConf = self.config.plugins[i](self) || {};\r\n                for (var key in pluginConf) {\r\n                    if (~hooks.indexOf(key)) {\r\n                        self.config[key] = arrayify(pluginConf[key])\r\n                            .map(bindToInstance)\r\n                            .concat(self.config[key]);\r\n                    }\r\n                    else if (typeof userConfig[key] === 'undefined')\r\n                        self.config[key] = pluginConf[key];\r\n                }\r\n            }\r\n            triggerEvent('onParseConfig');\r\n        }\r\n        function setupLocale() {\r\n            if (typeof self.config.locale !== 'object' &&\r\n                typeof flatpickr.l10ns[self.config.locale] === 'undefined')\r\n                self.config.errorHandler(new Error('flatpickr: invalid locale ' + self.config.locale));\r\n            self.l10n = __assign({}, flatpickr.l10ns.default, (typeof self.config.locale === 'object'\r\n                ? self.config.locale\r\n                : self.config.locale !== 'default'\r\n                    ? flatpickr.l10ns[self.config.locale]\r\n                    : undefined));\r\n            tokenRegex.K = '(' + self.l10n.amPM[0] + '|' + self.l10n.amPM[1] + '|' + self.l10n.amPM[0].toLowerCase() + '|' + self.l10n.amPM[1].toLowerCase() + ')';\r\n            self.formatDate = createDateFormatter(self);\r\n            self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\r\n        }\r\n        function positionCalendar(customPositionElement) {\r\n            if (self.calendarContainer === undefined)\r\n                return;\r\n            triggerEvent('onPreCalendarPosition');\r\n            var positionElement = customPositionElement || self._positionElement;\r\n            var calendarHeight = Array.prototype.reduce.call(self.calendarContainer.children, function(acc, child) { return acc + child.offsetHeight; }, 0), calendarWidth = self.calendarContainer.offsetWidth, configPos = self.config.position.split(' '), configPosVertical = configPos[0], configPosHorizontal = configPos.length > 1 ? configPos[1] : null, inputBounds = positionElement.getBoundingClientRect(), distanceFromBottom = window.innerHeight - inputBounds.bottom, showOnTop = configPosVertical === 'above' ||\r\n                (configPosVertical !== 'below' &&\r\n                    distanceFromBottom < calendarHeight &&\r\n                    inputBounds.top > calendarHeight);\r\n            var top = window.pageYOffset +\r\n                inputBounds.top +\r\n                (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);\r\n            toggleClass(self.calendarContainer, 'arrowTop', !showOnTop);\r\n            toggleClass(self.calendarContainer, 'arrowBottom', showOnTop);\r\n            if (self.config.inline)\r\n                return;\r\n            var left = window.pageXOffset +\r\n                inputBounds.left -\r\n                (configPosHorizontal != null && configPosHorizontal === 'center'\r\n                    ? (calendarWidth - inputBounds.width) / 2\r\n                    : 0);\r\n            var right = window.document.body.offsetWidth - inputBounds.right;\r\n            var rightMost = left + calendarWidth > window.document.body.offsetWidth;\r\n            toggleClass(self.calendarContainer, 'rightMost', rightMost);\r\n            if (self.config.static)\r\n                return;\r\n            self.calendarContainer.style.top = top + 'px';\r\n            if (!rightMost) {\r\n                self.calendarContainer.style.left = left + 'px';\r\n                self.calendarContainer.style.right = 'auto';\r\n            }\r\n            else {\r\n                self.calendarContainer.style.left = 'auto';\r\n                self.calendarContainer.style.right = right + 'px';\r\n            }\r\n        }\r\n        function redraw() {\r\n            if (self.config.noCalendar || self.isMobile)\r\n                return;\r\n            updateNavigationCurrentMonth();\r\n            buildDays();\r\n        }\r\n        function focusAndClose() {\r\n            self._input.focus();\r\n            if (window.navigator.userAgent.indexOf('MSIE') !== -1 ||\r\n                navigator.msMaxTouchPoints !== undefined) {\r\n                setTimeout(self.close, 0);\r\n            }\r\n            else {\r\n                self.close();\r\n            }\r\n        }\r\n        function selectDate(e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            var isSelectable = function(day) {\r\n                return day.classList &&\r\n                    day.classList.contains('flatpickr-day') &&\r\n                    !day.classList.contains('disabled') &&\r\n                    !day.classList.contains('notAllowed');\r\n            };\r\n            var t = findParent(e.target, isSelectable);\r\n            if (t === undefined)\r\n                return;\r\n            var target = t;\r\n            var selectedDate = (self.latestSelectedDateObj = new Date(target.dateObj.getTime()));\r\n            var shouldChangeMonth = (selectedDate.getMonth() < self.currentMonth ||\r\n                selectedDate.getMonth() >\r\n                self.currentMonth + self.config.showMonths - 1) &&\r\n                self.config.mode !== 'range';\r\n            self.selectedDateElem = target;\r\n            if (self.config.mode === 'single')\r\n                self.selectedDates = [selectedDate];\r\n            else if (self.config.mode === 'multiple') {\r\n                var selectedIndex = isDateSelected(selectedDate);\r\n                if (selectedIndex)\r\n                    self.selectedDates.splice(parseInt(selectedIndex), 1);\r\n                else\r\n                    self.selectedDates.push(selectedDate);\r\n            }\r\n            else if (self.config.mode === 'range') {\r\n                if (self.selectedDates.length === 2)\r\n                    self.clear(false);\r\n                self.selectedDates.push(selectedDate);\r\n                if (compareDates(selectedDate, self.selectedDates[0], true) !== 0)\r\n                    self.selectedDates.sort(function(a, b) { return a.getTime() - b.getTime(); });\r\n            }\r\n            setHoursFromInputs();\r\n            if (shouldChangeMonth) {\r\n                var isNewYear = self.currentYear !== selectedDate.getFullYear();\r\n                self.currentYear = selectedDate.getFullYear();\r\n                self.currentMonth = selectedDate.getMonth();\r\n                if (isNewYear)\r\n                    triggerEvent('onYearChange');\r\n                triggerEvent('onMonthChange');\r\n            }\r\n            updateNavigationCurrentMonth();\r\n            buildDays();\r\n            updateValue();\r\n            if (self.config.enableTime)\r\n                setTimeout(function() { return (self.showTimeInput = true); }, 50);\r\n            if (!shouldChangeMonth &&\r\n                self.config.mode !== 'range' &&\r\n                self.config.showMonths === 1)\r\n                focusOnDayElem(target);\r\n            else\r\n                self.selectedDateElem && self.selectedDateElem.focus();\r\n            if (self.hourElement !== undefined)\r\n                setTimeout(function() { return self.hourElement !== undefined && self.hourElement.select(); }, 451);\r\n            if (self.config.closeOnSelect) {\r\n                var single = self.config.mode === 'single' && !self.config.enableTime;\r\n                var range = self.config.mode === 'range' &&\r\n                    self.selectedDates.length === 2 &&\r\n                    !self.config.enableTime;\r\n                if (single || range) {\r\n                    focusAndClose();\r\n                }\r\n            }\r\n            triggerChange();\r\n        }\r\n        var CALLBACKS = {\r\n            locale: [setupLocale, updateWeekdays],\r\n            showMonths: [buildMonths, setCalendarWidth, buildWeekdays],\r\n        };\r\n        function set(option, value) {\r\n            if (option !== null && typeof option === 'object')\r\n                Object.assign(self.config, option);\r\n            else {\r\n                self.config[option] = value;\r\n                if (CALLBACKS[option] !== undefined)\r\n                    CALLBACKS[option].forEach(function(x) { return x(); });\r\n            }\r\n            self.redraw();\r\n            jumpToDate();\r\n        }\r\n        function setSelectedDate(inputDate, format) {\r\n            var dates = [];\r\n            if (inputDate instanceof Array)\r\n                dates = inputDate.map(function(d) { return self.parseDate(d, format); });\r\n            else if (inputDate instanceof Date || typeof inputDate === 'number')\r\n                dates = [self.parseDate(inputDate, format)];\r\n            else if (typeof inputDate === 'string') {\r\n                switch (self.config.mode) {\r\n                    case 'single':\r\n                    case 'time':\r\n                        dates = [self.parseDate(inputDate, format)];\r\n                        break;\r\n                    case 'multiple':\r\n                        dates = inputDate\r\n                            .split(self.config.conjunction)\r\n                            .map(function(date) { return self.parseDate(date, format); });\r\n                        break;\r\n                    case 'range':\r\n                        dates = inputDate\r\n                            .split(self.l10n.rangeSeparator)\r\n                            .map(function(date) { return self.parseDate(date, format); });\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            else\r\n                self.config.errorHandler(new Error('Invalid date supplied: ' + JSON.stringify(inputDate)));\r\n            self.selectedDates = dates.filter(function(d) { return d instanceof Date && isEnabled(d, false); });\r\n            if (self.config.mode === 'range')\r\n                self.selectedDates.sort(function(a, b) { return a.getTime() - b.getTime(); });\r\n        }\r\n        function setDate(date, triggerChange, format) {\r\n            if (triggerChange === void 0) { triggerChange = false; }\r\n            if (format === void 0) { format = self.config.dateFormat; }\r\n            if ((date !== 0 && !date) || (date instanceof Array && date.length === 0))\r\n                return self.clear(triggerChange);\r\n            setSelectedDate(date, format);\r\n            self.showTimeInput = self.selectedDates.length > 0;\r\n            self.latestSelectedDateObj = self.selectedDates[0];\r\n            self.redraw();\r\n            jumpToDate();\r\n            setHoursFromDate();\r\n            updateValue(triggerChange);\r\n            if (triggerChange)\r\n                triggerEvent('onChange');\r\n        }\r\n        function parseDateRules(arr) {\r\n            return arr\r\n                .slice()\r\n                .map(function(rule) {\r\n                    if (typeof rule === 'string' ||\r\n                        typeof rule === 'number' ||\r\n                        rule instanceof Date) {\r\n                        return self.parseDate(rule, undefined, true);\r\n                    }\r\n                    else if (rule &&\r\n                        typeof rule === 'object' &&\r\n                        rule.from &&\r\n                        rule.to)\r\n                        return {\r\n                            from: self.parseDate(rule.from, undefined),\r\n                            to: self.parseDate(rule.to, undefined),\r\n                        };\r\n                    return rule;\r\n                })\r\n                .filter(function(x) { return x; });\r\n        }\r\n        function setupDates() {\r\n            self.selectedDates = [];\r\n            self.now = self.parseDate(self.config.now) || new Date();\r\n            var preloadedDate = self.config.defaultDate ||\r\n                ((self.input.nodeName === 'INPUT' ||\r\n                    self.input.nodeName === 'TEXTAREA') &&\r\n                    self.input.placeholder &&\r\n                    self.input.value === self.input.placeholder\r\n                    ? null\r\n                    : self.input.value);\r\n            if (preloadedDate)\r\n                setSelectedDate(preloadedDate, self.config.dateFormat);\r\n            var initialDate = self.selectedDates.length > 0\r\n                ? self.selectedDates[0]\r\n                : self.config.minDate &&\r\n                    self.config.minDate.getTime() > self.now.getTime()\r\n                    ? self.config.minDate\r\n                    : self.config.maxDate &&\r\n                        self.config.maxDate.getTime() < self.now.getTime()\r\n                        ? self.config.maxDate\r\n                        : self.now;\r\n            self.currentYear = initialDate.getFullYear();\r\n            self.currentMonth = initialDate.getMonth();\r\n            if (self.selectedDates.length > 0)\r\n                self.latestSelectedDateObj = self.selectedDates[0];\r\n            if (self.config.minTime !== undefined)\r\n                self.config.minTime = self.parseDate(self.config.minTime, 'H:i');\r\n            if (self.config.maxTime !== undefined)\r\n                self.config.maxTime = self.parseDate(self.config.maxTime, 'H:i');\r\n            self.minDateHasTime =\r\n                !!self.config.minDate &&\r\n                (self.config.minDate.getHours() > 0 ||\r\n                    self.config.minDate.getMinutes() > 0 ||\r\n                    self.config.minDate.getSeconds() > 0);\r\n            self.maxDateHasTime =\r\n                !!self.config.maxDate &&\r\n                (self.config.maxDate.getHours() > 0 ||\r\n                    self.config.maxDate.getMinutes() > 0 ||\r\n                    self.config.maxDate.getSeconds() > 0);\r\n            Object.defineProperty(self, 'showTimeInput', {\r\n                get: function() { return self._showTimeInput; },\r\n                set: function(bool) {\r\n                    self._showTimeInput = bool;\r\n                    if (self.calendarContainer)\r\n                        toggleClass(self.calendarContainer, 'showTimeInput', bool);\r\n                    self.isOpen && positionCalendar();\r\n                },\r\n            });\r\n        }\r\n        function setupInputs() {\r\n            self.input = self.config.wrap\r\n                ? element.querySelector('[data-input]')\r\n                : element;\r\n            if (!self.input) {\r\n                self.config.errorHandler(new Error('Invalid input element specified'));\r\n                return;\r\n            }\r\n            self.input._type = self.input.type;\r\n            self.input.type = 'text';\r\n            self.input.classList.add('flatpickr-input');\r\n            self._input = self.input;\r\n            if (self.config.altInput) {\r\n                self.altInput = createElement(self.input.nodeName, self.input.className + ' ' + self.config.altInputClass);\r\n                self._input = self.altInput;\r\n                self.altInput.placeholder = self.input.placeholder;\r\n                self.altInput.disabled = self.input.disabled;\r\n                self.altInput.required = self.input.required;\r\n                self.altInput.tabIndex = self.input.tabIndex;\r\n                self.altInput.type = 'text';\r\n                self.input.setAttribute('type', 'hidden');\r\n                if (!self.config.static && self.input.parentNode)\r\n                    self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);\r\n            }\r\n            if (!self.config.allowInput)\r\n                self._input.setAttribute('readonly', 'readonly');\r\n            self._positionElement = self.config.positionElement || self._input;\r\n        }\r\n        function setupMobile() {\r\n            var inputType = self.config.enableTime\r\n                ? self.config.noCalendar\r\n                    ? 'time'\r\n                    : 'datetime-local'\r\n                : 'date';\r\n            self.mobileInput = createElement('input', self.input.className + ' flatpickr-mobile');\r\n            self.mobileInput.step = self.input.getAttribute('step') || 'any';\r\n            self.mobileInput.tabIndex = 1;\r\n            self.mobileInput.type = inputType;\r\n            self.mobileInput.disabled = self.input.disabled;\r\n            self.mobileInput.required = self.input.required;\r\n            self.mobileInput.placeholder = self.input.placeholder;\r\n            self.mobileFormatStr =\r\n                inputType === 'datetime-local'\r\n                    ? 'Y-m-d\\\\TH:i:S'\r\n                    : inputType === 'date'\r\n                        ? 'Y-m-d'\r\n                        : 'H:i:S';\r\n            if (self.selectedDates.length > 0) {\r\n                self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);\r\n            }\r\n            if (self.config.minDate)\r\n                self.mobileInput.min = self.formatDate(self.config.minDate, 'Y-m-d');\r\n            if (self.config.maxDate)\r\n                self.mobileInput.max = self.formatDate(self.config.maxDate, 'Y-m-d');\r\n            self.input.type = 'hidden';\r\n            if (self.altInput !== undefined)\r\n                self.altInput.type = 'hidden';\r\n            try {\r\n                if (self.input.parentNode)\r\n                    self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);\r\n            }\r\n            catch (_a) {\r\n                // do nothing\r\n            }\r\n            bind(self.mobileInput, 'change', function(e) {\r\n                self.setDate(e.target.value, false, self.mobileFormatStr);\r\n                triggerEvent('onChange');\r\n                triggerEvent('onClose');\r\n            });\r\n        }\r\n        function toggle(e) {\r\n            if (self.isOpen === true)\r\n                return self.close();\r\n            self.open(e);\r\n        }\r\n        function triggerEvent(event, data) {\r\n            if (self.config === undefined)\r\n                return;\r\n            var hooks = self.config[event];\r\n            if (hooks !== undefined && hooks.length > 0) {\r\n                for (var i = 0; hooks[i] && i < hooks.length; i++)\r\n                    hooks[i](self.selectedDates, self.input.value, self, data);\r\n            }\r\n            if (event === 'onChange') {\r\n                self.input.dispatchEvent(createEvent('change'));\r\n                self.input.dispatchEvent(createEvent('input'));\r\n            }\r\n        }\r\n        function createEvent(name) {\r\n            var e = document.createEvent('Event');\r\n            e.initEvent(name, true, true);\r\n            return e;\r\n        }\r\n        function isDateSelected(date) {\r\n            for (var i = 0; i < self.selectedDates.length; i++) {\r\n                if (compareDates(self.selectedDates[i], date) === 0)\r\n                    return '' + i;\r\n            }\r\n            return false;\r\n        }\r\n        function isDateInRange(date) {\r\n            if (self.config.mode !== 'range' || self.selectedDates.length < 2)\r\n                return false;\r\n            return (compareDates(date, self.selectedDates[0]) >= 0 &&\r\n                compareDates(date, self.selectedDates[1]) <= 0);\r\n        }\r\n        function updateNavigationCurrentMonth() {\r\n            if (self.config.noCalendar || self.isMobile || !self.monthNav)\r\n                return;\r\n            self.yearElements.forEach(function(yearElement, i) {\r\n                var d = new Date(self.currentYear, self.currentMonth, 1);\r\n                d.setMonth(self.currentMonth + i);\r\n                self.monthElements[i].textContent =\r\n                    monthToStr(d.getMonth(), self.config.shorthandCurrentMonth, self.l10n) +\r\n                    ' ';\r\n                yearElement.value = d.getFullYear().toString();\r\n            });\r\n            self._hidePrevMonthArrow =\r\n                self.config.minDate !== undefined &&\r\n                (self.currentYear === self.config.minDate.getFullYear()\r\n                    ? self.currentMonth <= self.config.minDate.getMonth()\r\n                    : self.currentYear < self.config.minDate.getFullYear());\r\n            self._hideNextMonthArrow =\r\n                self.config.maxDate !== undefined &&\r\n                (self.currentYear === self.config.maxDate.getFullYear()\r\n                    ? self.currentMonth + 1 > self.config.maxDate.getMonth()\r\n                    : self.currentYear > self.config.maxDate.getFullYear());\r\n        }\r\n        function updateValue(triggerChange) {\r\n            if (triggerChange === void 0) { triggerChange = true; }\r\n            if (self.selectedDates.length === 0)\r\n                return self.clear(triggerChange);\r\n            if (self.mobileInput !== undefined && self.mobileFormatStr) {\r\n                self.mobileInput.value =\r\n                    self.latestSelectedDateObj !== undefined\r\n                        ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr)\r\n                        : '';\r\n            }\r\n            var joinChar = self.config.mode !== 'range'\r\n                ? self.config.conjunction\r\n                : self.l10n.rangeSeparator;\r\n            self.input.value = self.selectedDates\r\n                .map(function(dObj) { return self.formatDate(dObj, self.config.dateFormat); })\r\n                .join(joinChar);\r\n            if (self.altInput !== undefined) {\r\n                self.altInput.value = self.selectedDates\r\n                    .map(function(dObj) { return self.formatDate(dObj, self.config.altFormat); })\r\n                    .join(joinChar);\r\n            }\r\n            if (triggerChange !== false)\r\n                triggerEvent('onValueUpdate');\r\n        }\r\n        function onMonthNavClick(e) {\r\n            e.preventDefault();\r\n            var isPrevMonth = self.prevMonthNav.contains(e.target);\r\n            var isNextMonth = self.nextMonthNav.contains(e.target);\r\n            if (isPrevMonth || isNextMonth) {\r\n                changeMonth(isPrevMonth ? -1 : 1);\r\n            }\r\n            else if (self.yearElements.indexOf(e.target) >= 0) {\r\n                e.target.select();\r\n            }\r\n            else if (e.target.classList.contains('arrowUp')) {\r\n                self.changeYear(self.currentYear + 1);\r\n            }\r\n            else if (e.target.classList.contains('arrowDown')) {\r\n                self.changeYear(self.currentYear - 1);\r\n            }\r\n        }\r\n        function timeWrapper(e) {\r\n            e.preventDefault();\r\n            var isKeyDown = e.type === 'keydown', input = e.target;\r\n            if (self.amPM !== undefined && e.target === self.amPM) {\r\n                self.amPM.textContent =\r\n                    self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\r\n            }\r\n            var min = parseFloat(input.getAttribute('data-min')), max = parseFloat(input.getAttribute('data-max')), step = parseFloat(input.getAttribute('data-step')), curValue = parseInt(input.value, 10), delta = e.delta ||\r\n                (isKeyDown ? (e.which === 38 ? 1 : -1) : 0);\r\n            var newValue = curValue + step * delta;\r\n            if (typeof input.value !== 'undefined' && input.value.length === 2) {\r\n                var isHourElem = input === self.hourElement, isMinuteElem = input === self.minuteElement;\r\n                if (newValue < min) {\r\n                    newValue =\r\n                        max +\r\n                        newValue +\r\n                        int(!isHourElem) +\r\n                        (int(isHourElem) && int(!self.amPM));\r\n                    if (isMinuteElem)\r\n                        incrementNumInput(undefined, -1, self.hourElement);\r\n                }\r\n                else if (newValue > max) {\r\n                    newValue =\r\n                        input === self.hourElement ? newValue - max - int(!self.amPM) : min;\r\n                    if (isMinuteElem)\r\n                        incrementNumInput(undefined, 1, self.hourElement);\r\n                }\r\n                if (self.amPM &&\r\n                    isHourElem &&\r\n                    (step === 1\r\n                        ? newValue + curValue === 23\r\n                        : Math.abs(newValue - curValue) > step)) {\r\n                    self.amPM.textContent =\r\n                        self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\r\n                }\r\n                input.value = pad(newValue);\r\n            }\r\n        }\r\n        init();\r\n        return self;\r\n    }\r\n    function _flatpickr(nodeList, config) {\r\n        var nodes = Array.prototype.slice.call(nodeList);\r\n        var instances = [];\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            var node = nodes[i];\r\n            try {\r\n                if (node.getAttribute('data-fp-omit') !== null)\r\n                    continue;\r\n                if (node._flatpickr !== undefined) {\r\n                    node._flatpickr.destroy();\r\n                    node._flatpickr = undefined;\r\n                }\r\n                node._flatpickr = FlatpickrInstance(node, config || {});\r\n                instances.push(node._flatpickr);\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n        return instances.length === 1 ? instances[0] : instances;\r\n    }\r\n    if (typeof HTMLElement !== 'undefined') {\r\n        HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function(config) {\r\n            return _flatpickr(this, config);\r\n        };\r\n        HTMLElement.prototype.flatpickr = function(config) {\r\n            return _flatpickr([this], config);\r\n        };\r\n    }\r\n    var flatpickr = function(selector, config) {\r\n        if (selector instanceof NodeList)\r\n            return _flatpickr(selector, config);\r\n        else if (typeof selector === 'string')\r\n            return _flatpickr(window.document.querySelectorAll(selector), config);\r\n        return _flatpickr([selector], config);\r\n    };\r\n    flatpickr.defaultConfig = defaults;\r\n    flatpickr.l10ns = {\r\n        en: __assign({}, english),\r\n        default: __assign({}, english),\r\n    };\r\n    flatpickr.localize = function(l10n) {\r\n        flatpickr.l10ns.default = __assign({}, flatpickr.l10ns.default, l10n);\r\n    };\r\n    flatpickr.setDefaults = function(config) {\r\n        flatpickr.defaultConfig = __assign({}, flatpickr.defaultConfig, config);\r\n    };\r\n    flatpickr.parseDate = createDateParser({});\r\n    flatpickr.formatDate = createDateFormatter({});\r\n    flatpickr.compareDates = compareDates;\r\n    Date.prototype.fp_incr = function(days) {\r\n        return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === 'string' ? parseInt(days, 10) : days));\r\n    };\r\n    if (typeof window !== 'undefined') {\r\n        window.flatpickr = flatpickr;\r\n    }\r\n\r\n    return flatpickr;\r\n}());\r\n\r\n(function(global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\r\n        typeof define === 'function' && define.amd ? define(['exports'], factory) :\r\n            (factory((global.es = {})));\r\n}(this, (function(exports) {\r\n    'use strict';\r\n\r\n    var fp = typeof window !== 'undefined' && window.flatpickr !== undefined\r\n        ? window.flatpickr\r\n        : {\r\n            l10ns: {},\r\n        };\r\n    var Spanish = {\r\n        weekdays: {\r\n            shorthand: ['Dom', 'Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb'],\r\n            longhand: [\r\n                'Domingo',\r\n                'Lunes',\r\n                'Martes',\r\n                'Miércoles',\r\n                'Jueves',\r\n                'Viernes',\r\n                'Sábado',\r\n            ],\r\n        },\r\n        months: {\r\n            shorthand: [\r\n                'Ene',\r\n                'Feb',\r\n                'Mar',\r\n                'Abr',\r\n                'May',\r\n                'Jun',\r\n                'Jul',\r\n                'Ago',\r\n                'Sep',\r\n                'Oct',\r\n                'Nov',\r\n                'Dic',\r\n            ],\r\n            longhand: [\r\n                'Enero',\r\n                'Febrero',\r\n                'Marzo',\r\n                'Abril',\r\n                'Mayo',\r\n                'Junio',\r\n                'Julio',\r\n                'Agosto',\r\n                'Septiembre',\r\n                'Octubre',\r\n                'Noviembre',\r\n                'Diciembre',\r\n            ],\r\n        },\r\n        ordinal: function() {\r\n            return 'º';\r\n        },\r\n        firstDayOfWeek: 1,\r\n        rangeSeparator: ' a ',\r\n    };\r\n    fp.l10ns.es = Spanish;\r\n    var es = fp.l10ns;\r\n\r\n    exports.Spanish = Spanish;\r\n    exports.default = es;\r\n\r\n    Object.defineProperty(exports, '__esModule', { value: true });\r\n})));\r\n","/*\r\n    JavaScript autoComplete v1.0.4\r\n    Copyright (c) 2014 Simon Steinberger / Pixabay\r\n    GitHub: https://github.com/Pixabay/JavaScript-autoComplete\r\n    License: http://www.opensource.org/licenses/mit-license.php\r\n*/\r\n\r\n(function(root, factory) {\r\n    root.Autocomplete = factory();\r\n})(this, function() {\r\n    'use strict';\r\n\r\n    function Autocomplete(options) {\r\n        if (!document.querySelector) return;\r\n\r\n        // helpers\r\n        function hasClass(el, className) {\r\n            return el.classList.contains(className);\r\n        }\r\n\r\n        function addEvent(el, type, handler) {\r\n            el.addEventListener(type, handler);\r\n        }\r\n\r\n        function removeEvent(el, type, handler) {\r\n            el.removeEventListener(type, handler);\r\n        }\r\n\r\n        function live(elClass, event, cb, context) {\r\n            addEvent(context || document, event, function(e) {\r\n                var found, el = e.target || e.srcElement;\r\n                while (el && !(found = hasClass(el, elClass))) {\r\n                    el = el.parentElement;\r\n                }\r\n                if (found) {\r\n                    cb.call(el, e);\r\n                }\r\n            });\r\n        }\r\n\r\n        var o = {\r\n            selector: 0,\r\n            source: 0,\r\n            minChars: 2,\r\n            delay: 250,\r\n            offsetLeft: 0,\r\n            offsetTop: 1,\r\n            cache: 1,\r\n            sourceData: null,\r\n            menuClass: '',\r\n            renderItem: function(item, search) {\r\n                // escape special characters\r\n                search = search.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n                var re = new RegExp('(' + search.split(' ').join('|') + ')', 'gi');\r\n                return '<div class=\"autocomplete-suggestion\" data-val=\"' + item + '\">' + item.replace(re, '<b>$1</b>') + '</div>';\r\n            },\r\n            onSelect: function(e, term, item) { }\r\n        };\r\n        for (var k in options) { if (options.hasOwnProperty(k)) o[k] = options[k]; }\r\n\r\n        // init\r\n        var elems = typeof o.selector == 'object' ? [o.selector] : document.querySelectorAll(o.selector);\r\n        for (var i = 0; i < elems.length; i++) {\r\n            var that = elems[i];\r\n\r\n            // create suggestions container \"sc\"\r\n            that.sc = document.createElement('div');\r\n            that.sc.className = 'autocomplete-suggestions ' + o.menuClass;\r\n\r\n            that.autocompleteAttr = that.getAttribute('autocomplete');\r\n            that.setAttribute('autocomplete', 'off');\r\n            that.cache = {};\r\n            that.last_val = '';\r\n\r\n            that.updateSC = function(resize, next) {\r\n                var rect = that.getBoundingClientRect();\r\n                that.sc.style.left = Math.round(rect.left + (window.pageXOffset || document.documentElement.scrollLeft) + o.offsetLeft) + 'px';\r\n                that.sc.style.top = Math.round(rect.bottom + (window.pageYOffset || document.documentElement.scrollTop) + o.offsetTop) + 'px';\r\n                that.sc.style.width = Math.round(rect.right - rect.left) + 'px'; // outerWidth\r\n                if (!resize) {\r\n                    that.sc.style.display = 'block';\r\n                    if (!that.sc.maxHeight) { that.sc.maxHeight = parseInt((window.getComputedStyle ? getComputedStyle(that.sc, null) : that.sc.currentStyle).maxHeight); }\r\n                    if (!that.sc.suggestionHeight) that.sc.suggestionHeight = that.sc.querySelector('.autocomplete-suggestion').offsetHeight;\r\n                    if (that.sc.suggestionHeight)\r\n                        if (!next) that.sc.scrollTop = 0;\r\n                        else {\r\n                            var scrTop = that.sc.scrollTop, selTop = next.getBoundingClientRect().top - that.sc.getBoundingClientRect().top;\r\n                            if (selTop + that.sc.suggestionHeight - that.sc.maxHeight > 0)\r\n                                that.sc.scrollTop = selTop + that.sc.suggestionHeight + scrTop - that.sc.maxHeight;\r\n                            else if (selTop < 0)\r\n                                that.sc.scrollTop = selTop + scrTop;\r\n                        }\r\n                }\r\n            };\r\n            addEvent(window, 'resize', that.updateSC);\r\n            document.body.appendChild(that.sc);\r\n\r\n            live('autocomplete-suggestion', 'mouseleave', function() {\r\n                var sel = that.sc.querySelector('.autocomplete-suggestion.selected');\r\n                if (sel) setTimeout(function() { sel.className = sel.className.replace('selected', ''); }, 20);\r\n            }, that.sc);\r\n\r\n            live('autocomplete-suggestion', 'mouseover', function() {\r\n                var sel = that.sc.querySelector('.autocomplete-suggestion.selected');\r\n                if (sel) sel.className = sel.className.replace('selected', '');\r\n                this.className += ' selected';\r\n            }, that.sc);\r\n\r\n            live('autocomplete-suggestion', 'mousedown', function(e) {\r\n                if (hasClass(this, 'autocomplete-suggestion')) { // else outside click\r\n                    var v = this.getAttribute('data-val');\r\n                    that.value = v;\r\n                    o.onSelect(e, v, this);\r\n                    that.sc.style.display = 'none';\r\n                }\r\n            }, that.sc);\r\n\r\n            that.blurHandler = function() {\r\n                var over_sb;\r\n                try {\r\n                    over_sb = document.querySelector('.autocomplete-suggestions:hover');\r\n                } catch (e) {\r\n                    over_sb = 0;\r\n                }\r\n                if (!over_sb) {\r\n                    if (o.sourceData && o.sourceData.indexOf(that.value) === -1) {\r\n                        that.value = '';\r\n                    }\r\n                    that.last_val = that.value;\r\n                    that.sc.style.display = 'none';\r\n                    setTimeout(function() { that.sc.style.display = 'none'; }, 350); // hide suggestions on fast input\r\n                } else if (that !== document.activeElement) {\r\n                    setTimeout(function() { that.focus(); }, 20);\r\n                }\r\n            };\r\n            addEvent(that, 'blur', that.blurHandler);\r\n\r\n            var suggest = function(data) {\r\n                var val = that.value;\r\n                that.cache[val] = data;\r\n                if (data.length && val.length >= o.minChars) {\r\n                    var s = '';\r\n                    for (var i = 0; i < data.length; i++) s += o.renderItem(data[i], val);\r\n                    that.sc.innerHTML = s;\r\n                    that.updateSC(0);\r\n                } else {\r\n                    that.sc.style.display = 'none';\r\n                }\r\n            };\r\n\r\n            var internalSource = function(sourceData, term, suggest) {\r\n                term = term.toLowerCase();\r\n                var matches = [];\r\n                for (i = 0; i < sourceData.length; i++) {\r\n                    if (~sourceData[i].toLowerCase().indexOf(term)) matches.push(sourceData[i]);\r\n                }\r\n                suggest(matches);\r\n            };\r\n\r\n            that.keydownHandler = function(e) {\r\n                var sel = that.sc.querySelector('.autocomplete-suggestion.selected');\r\n                var key = window.event ? e.keyCode : e.which;\r\n                // down (40), up (38)\r\n                if ((key === 40 || key === 38) && that.sc.innerHTML) {\r\n                    var next;\r\n                    if (!sel) {\r\n                        next = key === 40 ? that.sc.querySelector('.autocomplete-suggestion') : that.sc.childNodes[that.sc.childNodes.length - 1]; // first : last\r\n                        next.className += ' selected';\r\n                        that.value = next.getAttribute('data-val');\r\n                    } else {\r\n                        next = key === 40 ? sel.nextSibling : sel.previousSibling;\r\n                        if (next) {\r\n                            sel.className = sel.className.replace('selected', '');\r\n                            next.className += ' selected';\r\n                            that.value = next.getAttribute('data-val');\r\n                        } else {\r\n                            sel.className = sel.className.replace('selected', '');\r\n                            that.value = that.last_val;\r\n                            next = 0;\r\n                        }\r\n                    }\r\n                    that.updateSC(0, next);\r\n                    return false;\r\n                } else if (key === 27) {\r\n                    // esc\r\n                    that.value = '';\r\n                    that.sc.style.display = 'none';\r\n                } else if (key === 13 || key === 9) {\r\n                    // enter or tab\r\n                    if (sel && that.sc.style.display != 'none') {\r\n                        if (key === 13) {\r\n                            e.preventDefault();\r\n                        }\r\n                        that.value = sel.getAttribute('data-val');\r\n                        o.onSelect(e, sel.getAttribute('data-val'), sel);\r\n                        setTimeout(function() {\r\n                            that.sc.style.display = 'none';\r\n                        }, 20);\r\n                    } else {\r\n                        that.value = '';\r\n                    }\r\n                }\r\n            };\r\n            addEvent(that, 'keydown', that.keydownHandler);\r\n\r\n            that.keyupHandler = function(e) {\r\n                var key = window.event ? e.keyCode : e.which;\r\n                if (!key || (key < 35 || key > 40) && key != 13 && key != 27) {\r\n                    var val = that.value;\r\n                    if (val.length >= o.minChars) {\r\n                        if (val != that.last_val) {\r\n                            that.last_val = val;\r\n                            clearTimeout(that.timer);\r\n                            if (o.cache) {\r\n                                if (val in that.cache) { suggest(that.cache[val]); return; }\r\n                                // no requests if previous suggestions were empty\r\n                                for (var i = 1; i < val.length - o.minChars; i++) {\r\n                                    var part = val.slice(0, val.length - i);\r\n                                    if (part in that.cache && !that.cache[part].length) { suggest([]); return; }\r\n                                }\r\n                            }\r\n                            that.timer = setTimeout(o.sourceData ? internalSource.bind(null, o.sourceData, val, suggest) : o.source.bind(this, val, suggest), o.delay);\r\n                        }\r\n                    } else {\r\n                        that.last_val = val;\r\n                        that.sc.style.display = 'none';\r\n                    }\r\n                }\r\n            };\r\n            addEvent(that, 'keyup', that.keyupHandler);\r\n\r\n            that.focusHandler = function(e) {\r\n                that.last_val = '\\n';\r\n                that.keyupHandler(e);\r\n            };\r\n            if (!o.minChars) {\r\n                addEvent(that, 'focus', that.focusHandler);\r\n            }\r\n        }\r\n\r\n        // public destroy method\r\n        this.destroy = function() {\r\n            for (var i = 0; i < elems.length; i++) {\r\n                var that = elems[i];\r\n                removeEvent(window, 'resize', that.updateSC);\r\n                removeEvent(that, 'blur', that.blurHandler);\r\n                removeEvent(that, 'focus', that.focusHandler);\r\n                removeEvent(that, 'keydown', that.keydownHandler);\r\n                removeEvent(that, 'keyup', that.keyupHandler);\r\n                if (that.autocompleteAttr) {\r\n                    that.setAttribute('autocomplete', that.autocompleteAttr);\r\n                } else {\r\n                    that.removeAttribute('autocomplete');\r\n                }\r\n                document.body.removeChild(that.sc);\r\n                that = null;\r\n            }\r\n        };\r\n    }\r\n    return Autocomplete;\r\n});\r\n","/*!\r\n * Chart.js\r\n * http://chartjs.org/\r\n * Version: 2.7.1\r\n *\r\n * Copyright 2018 Chart.js Contributors\r\n * Released under the MIT license\r\n * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md\r\n */\r\n/* eslint-disable */\r\n(function(f) { if (typeof exports === \"object\" && typeof module !== \"undefined\") { module.exports = f() } else if (typeof define === \"function\" && define.amd) { define([], f) } else { var g; if (typeof window !== \"undefined\") { g = window } else if (typeof global !== \"undefined\") { g = global } else if (typeof self !== \"undefined\") { g = self } else { g = this } g.Chart = f() } })(function() {\r\n    var define, module, exports; return (function e(t, n, r) { function s(o, u) { if (!n[o]) { if (!t[o]) { var a = typeof require == \"function\" && require; if (!u && a) return a(o, !0); if (i) return i(o, !0); var f = new Error(\"Cannot find module '\" + o + \"'\"); throw f.code = \"MODULE_NOT_FOUND\", f } var l = n[o] = { exports: {} }; t[o][0].call(l.exports, function(e) { var n = t[o][1][e]; return s(n ? n : e) }, l, l.exports, e, t, n, r) } return n[o].exports } var i = typeof require == \"function\" && require; for (var o = 0; o < r.length; o++)s(r[o]); return s })({\r\n        1: [function(require, module, exports) {\r\n            /* MIT license */\r\n            var colorNames = require(5);\r\n\r\n            module.exports = {\r\n                getRgba: getRgba,\r\n                getHsla: getHsla,\r\n                getRgb: getRgb,\r\n                getHsl: getHsl,\r\n                getHwb: getHwb,\r\n                getAlpha: getAlpha,\r\n\r\n                hexString: hexString,\r\n                rgbString: rgbString,\r\n                rgbaString: rgbaString,\r\n                percentString: percentString,\r\n                percentaString: percentaString,\r\n                hslString: hslString,\r\n                hslaString: hslaString,\r\n                hwbString: hwbString,\r\n                keyword: keyword\r\n            }\r\n\r\n            function getRgba(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var abbr = /^#([a-fA-F0-9]{3})$/i,\r\n                    hex = /^#([a-fA-F0-9]{6})$/i,\r\n                    rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n                    per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n                    keyword = /(\\w+)/;\r\n\r\n                var rgb = [0, 0, 0],\r\n                    a = 1,\r\n                    match = string.match(abbr);\r\n                if (match) {\r\n                    match = match[1];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match[i] + match[i], 16);\r\n                    }\r\n                }\r\n                else if (match = string.match(hex)) {\r\n                    match = match[1];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n                    }\r\n                }\r\n                else if (match = string.match(rgba)) {\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match[i + 1]);\r\n                    }\r\n                    a = parseFloat(match[4]);\r\n                }\r\n                else if (match = string.match(per)) {\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n                    }\r\n                    a = parseFloat(match[4]);\r\n                }\r\n                else if (match = string.match(keyword)) {\r\n                    if (match[1] == \"transparent\") {\r\n                        return [0, 0, 0, 0];\r\n                    }\r\n                    rgb = colorNames[match[1]];\r\n                    if (!rgb) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                for (var i = 0; i < rgb.length; i++) {\r\n                    rgb[i] = scale(rgb[i], 0, 255);\r\n                }\r\n                if (!a && a != 0) {\r\n                    a = 1;\r\n                }\r\n                else {\r\n                    a = scale(a, 0, 1);\r\n                }\r\n                rgb[3] = a;\r\n                return rgb;\r\n            }\r\n\r\n            function getHsla(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n                var match = string.match(hsl);\r\n                if (match) {\r\n                    var alpha = parseFloat(match[4]);\r\n                    var h = scale(parseInt(match[1]), 0, 360),\r\n                        s = scale(parseFloat(match[2]), 0, 100),\r\n                        l = scale(parseFloat(match[3]), 0, 100),\r\n                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n                    return [h, s, l, a];\r\n                }\r\n            }\r\n\r\n            function getHwb(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n                var match = string.match(hwb);\r\n                if (match) {\r\n                    var alpha = parseFloat(match[4]);\r\n                    var h = scale(parseInt(match[1]), 0, 360),\r\n                        w = scale(parseFloat(match[2]), 0, 100),\r\n                        b = scale(parseFloat(match[3]), 0, 100),\r\n                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n                    return [h, w, b, a];\r\n                }\r\n            }\r\n\r\n            function getRgb(string) {\r\n                var rgba = getRgba(string);\r\n                return rgba && rgba.slice(0, 3);\r\n            }\r\n\r\n            function getHsl(string) {\r\n                var hsla = getHsla(string);\r\n                return hsla && hsla.slice(0, 3);\r\n            }\r\n\r\n            function getAlpha(string) {\r\n                var vals = getRgba(string);\r\n                if (vals) {\r\n                    return vals[3];\r\n                }\r\n                else if (vals = getHsla(string)) {\r\n                    return vals[3];\r\n                }\r\n                else if (vals = getHwb(string)) {\r\n                    return vals[3];\r\n                }\r\n            }\r\n\r\n            // generators\r\n            function hexString(rgb) {\r\n                return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n                    + hexDouble(rgb[2]);\r\n            }\r\n\r\n            function rgbString(rgba, alpha) {\r\n                if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n                    return rgbaString(rgba, alpha);\r\n                }\r\n                return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n            }\r\n\r\n            function rgbaString(rgba, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n                }\r\n                return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n                    + \", \" + alpha + \")\";\r\n            }\r\n\r\n            function percentString(rgba, alpha) {\r\n                if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n                    return percentaString(rgba, alpha);\r\n                }\r\n                var r = Math.round(rgba[0] / 255 * 100),\r\n                    g = Math.round(rgba[1] / 255 * 100),\r\n                    b = Math.round(rgba[2] / 255 * 100);\r\n\r\n                return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n            }\r\n\r\n            function percentaString(rgba, alpha) {\r\n                var r = Math.round(rgba[0] / 255 * 100),\r\n                    g = Math.round(rgba[1] / 255 * 100),\r\n                    b = Math.round(rgba[2] / 255 * 100);\r\n                return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n            }\r\n\r\n            function hslString(hsla, alpha) {\r\n                if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n                    return hslaString(hsla, alpha);\r\n                }\r\n                return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n            }\r\n\r\n            function hslaString(hsla, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n                }\r\n                return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n                    + alpha + \")\";\r\n            }\r\n\r\n            // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n            // (hwb have alpha optional & 1 is default value)\r\n            function hwbString(hwb, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n                }\r\n                return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n                    + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n            }\r\n\r\n            function keyword(rgb) {\r\n                return reverseNames[rgb.slice(0, 3)];\r\n            }\r\n\r\n            // helpers\r\n            function scale(num, min, max) {\r\n                return Math.min(Math.max(min, num), max);\r\n            }\r\n\r\n            function hexDouble(num) {\r\n                var str = num.toString(16).toUpperCase();\r\n                return (str.length < 2) ? \"0\" + str : str;\r\n            }\r\n\r\n            //create a list of reverse color names\r\n            var reverseNames = {};\r\n            for (var name in colorNames) {\r\n                reverseNames[colorNames[name]] = name;\r\n            }\r\n        }, { \"5\": 5 }], 2: [function(require, module, exports) {\r\n            /* MIT license */\r\n            var convert = require(4);\r\n            var string = require(1);\r\n\r\n            var Color = function(obj) {\r\n                if (obj instanceof Color) {\r\n                    return obj;\r\n                }\r\n                if (!(this instanceof Color)) {\r\n                    return new Color(obj);\r\n                }\r\n\r\n                this.valid = false;\r\n                this.values = {\r\n                    rgb: [0, 0, 0],\r\n                    hsl: [0, 0, 0],\r\n                    hsv: [0, 0, 0],\r\n                    hwb: [0, 0, 0],\r\n                    cmyk: [0, 0, 0, 0],\r\n                    alpha: 1\r\n                };\r\n\r\n                // parse Color() argument\r\n                var vals;\r\n                if (typeof obj === 'string') {\r\n                    vals = string.getRgba(obj);\r\n                    if (vals) {\r\n                        this.setValues('rgb', vals);\r\n                    } else if (vals = string.getHsla(obj)) {\r\n                        this.setValues('hsl', vals);\r\n                    } else if (vals = string.getHwb(obj)) {\r\n                        this.setValues('hwb', vals);\r\n                    }\r\n                } else if (typeof obj === 'object') {\r\n                    vals = obj;\r\n                    if (vals.r !== undefined || vals.red !== undefined) {\r\n                        this.setValues('rgb', vals);\r\n                    } else if (vals.l !== undefined || vals.lightness !== undefined) {\r\n                        this.setValues('hsl', vals);\r\n                    } else if (vals.v !== undefined || vals.value !== undefined) {\r\n                        this.setValues('hsv', vals);\r\n                    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\r\n                        this.setValues('hwb', vals);\r\n                    } else if (vals.c !== undefined || vals.cyan !== undefined) {\r\n                        this.setValues('cmyk', vals);\r\n                    }\r\n                }\r\n            };\r\n\r\n            Color.prototype = {\r\n                isValid: function() {\r\n                    return this.valid;\r\n                },\r\n                rgb: function() {\r\n                    return this.setSpace('rgb', arguments);\r\n                },\r\n                hsl: function() {\r\n                    return this.setSpace('hsl', arguments);\r\n                },\r\n                hsv: function() {\r\n                    return this.setSpace('hsv', arguments);\r\n                },\r\n                hwb: function() {\r\n                    return this.setSpace('hwb', arguments);\r\n                },\r\n                cmyk: function() {\r\n                    return this.setSpace('cmyk', arguments);\r\n                },\r\n\r\n                rgbArray: function() {\r\n                    return this.values.rgb;\r\n                },\r\n                hslArray: function() {\r\n                    return this.values.hsl;\r\n                },\r\n                hsvArray: function() {\r\n                    return this.values.hsv;\r\n                },\r\n                hwbArray: function() {\r\n                    var values = this.values;\r\n                    if (values.alpha !== 1) {\r\n                        return values.hwb.concat([values.alpha]);\r\n                    }\r\n                    return values.hwb;\r\n                },\r\n                cmykArray: function() {\r\n                    return this.values.cmyk;\r\n                },\r\n                rgbaArray: function() {\r\n                    var values = this.values;\r\n                    return values.rgb.concat([values.alpha]);\r\n                },\r\n                hslaArray: function() {\r\n                    var values = this.values;\r\n                    return values.hsl.concat([values.alpha]);\r\n                },\r\n                alpha: function(val) {\r\n                    if (val === undefined) {\r\n                        return this.values.alpha;\r\n                    }\r\n                    this.setValues('alpha', val);\r\n                    return this;\r\n                },\r\n\r\n                red: function(val) {\r\n                    return this.setChannel('rgb', 0, val);\r\n                },\r\n                green: function(val) {\r\n                    return this.setChannel('rgb', 1, val);\r\n                },\r\n                blue: function(val) {\r\n                    return this.setChannel('rgb', 2, val);\r\n                },\r\n                hue: function(val) {\r\n                    if (val) {\r\n                        val %= 360;\r\n                        val = val < 0 ? 360 + val : val;\r\n                    }\r\n                    return this.setChannel('hsl', 0, val);\r\n                },\r\n                saturation: function(val) {\r\n                    return this.setChannel('hsl', 1, val);\r\n                },\r\n                lightness: function(val) {\r\n                    return this.setChannel('hsl', 2, val);\r\n                },\r\n                saturationv: function(val) {\r\n                    return this.setChannel('hsv', 1, val);\r\n                },\r\n                whiteness: function(val) {\r\n                    return this.setChannel('hwb', 1, val);\r\n                },\r\n                blackness: function(val) {\r\n                    return this.setChannel('hwb', 2, val);\r\n                },\r\n                value: function(val) {\r\n                    return this.setChannel('hsv', 2, val);\r\n                },\r\n                cyan: function(val) {\r\n                    return this.setChannel('cmyk', 0, val);\r\n                },\r\n                magenta: function(val) {\r\n                    return this.setChannel('cmyk', 1, val);\r\n                },\r\n                yellow: function(val) {\r\n                    return this.setChannel('cmyk', 2, val);\r\n                },\r\n                black: function(val) {\r\n                    return this.setChannel('cmyk', 3, val);\r\n                },\r\n\r\n                hexString: function() {\r\n                    return string.hexString(this.values.rgb);\r\n                },\r\n                rgbString: function() {\r\n                    return string.rgbString(this.values.rgb, this.values.alpha);\r\n                },\r\n                rgbaString: function() {\r\n                    return string.rgbaString(this.values.rgb, this.values.alpha);\r\n                },\r\n                percentString: function() {\r\n                    return string.percentString(this.values.rgb, this.values.alpha);\r\n                },\r\n                hslString: function() {\r\n                    return string.hslString(this.values.hsl, this.values.alpha);\r\n                },\r\n                hslaString: function() {\r\n                    return string.hslaString(this.values.hsl, this.values.alpha);\r\n                },\r\n                hwbString: function() {\r\n                    return string.hwbString(this.values.hwb, this.values.alpha);\r\n                },\r\n                keyword: function() {\r\n                    return string.keyword(this.values.rgb, this.values.alpha);\r\n                },\r\n\r\n                rgbNumber: function() {\r\n                    var rgb = this.values.rgb;\r\n                    return (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\r\n                },\r\n\r\n                luminosity: function() {\r\n                    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n                    var rgb = this.values.rgb;\r\n                    var lum = [];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        var chan = rgb[i] / 255;\r\n                        lum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\r\n                    }\r\n                    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n                },\r\n\r\n                contrast: function(color2) {\r\n                    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n                    var lum1 = this.luminosity();\r\n                    var lum2 = color2.luminosity();\r\n                    if (lum1 > lum2) {\r\n                        return (lum1 + 0.05) / (lum2 + 0.05);\r\n                    }\r\n                    return (lum2 + 0.05) / (lum1 + 0.05);\r\n                },\r\n\r\n                level: function(color2) {\r\n                    var contrastRatio = this.contrast(color2);\r\n                    if (contrastRatio >= 7.1) {\r\n                        return 'AAA';\r\n                    }\r\n\r\n                    return (contrastRatio >= 4.5) ? 'AA' : '';\r\n                },\r\n\r\n                dark: function() {\r\n                    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\r\n                    var rgb = this.values.rgb;\r\n                    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\r\n                    return yiq < 128;\r\n                },\r\n\r\n                light: function() {\r\n                    return !this.dark();\r\n                },\r\n\r\n                negate: function() {\r\n                    var rgb = [];\r\n                    for (var i = 0; i < 3; i++) {\r\n                        rgb[i] = 255 - this.values.rgb[i];\r\n                    }\r\n                    this.setValues('rgb', rgb);\r\n                    return this;\r\n                },\r\n\r\n                lighten: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[2] += hsl[2] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                darken: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[2] -= hsl[2] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                saturate: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[1] += hsl[1] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                desaturate: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[1] -= hsl[1] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                whiten: function(ratio) {\r\n                    var hwb = this.values.hwb;\r\n                    hwb[1] += hwb[1] * ratio;\r\n                    this.setValues('hwb', hwb);\r\n                    return this;\r\n                },\r\n\r\n                blacken: function(ratio) {\r\n                    var hwb = this.values.hwb;\r\n                    hwb[2] += hwb[2] * ratio;\r\n                    this.setValues('hwb', hwb);\r\n                    return this;\r\n                },\r\n\r\n                greyscale: function() {\r\n                    var rgb = this.values.rgb;\r\n                    // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\r\n                    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\r\n                    this.setValues('rgb', [val, val, val]);\r\n                    return this;\r\n                },\r\n\r\n                clearer: function(ratio) {\r\n                    var alpha = this.values.alpha;\r\n                    this.setValues('alpha', alpha - (alpha * ratio));\r\n                    return this;\r\n                },\r\n\r\n                opaquer: function(ratio) {\r\n                    var alpha = this.values.alpha;\r\n                    this.setValues('alpha', alpha + (alpha * ratio));\r\n                    return this;\r\n                },\r\n\r\n                rotate: function(degrees) {\r\n                    var hsl = this.values.hsl;\r\n                    var hue = (hsl[0] + degrees) % 360;\r\n                    hsl[0] = hue < 0 ? 360 + hue : hue;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                /**\r\n                 * Ported from sass implementation in C\r\n                 * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\r\n                 */\r\n                mix: function(mixinColor, weight) {\r\n                    var color1 = this;\r\n                    var color2 = mixinColor;\r\n                    var p = weight === undefined ? 0.5 : weight;\r\n\r\n                    var w = 2 * p - 1;\r\n                    var a = color1.alpha() - color2.alpha();\r\n\r\n                    var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n                    var w2 = 1 - w1;\r\n\r\n                    return this\r\n                        .rgb(\r\n                        w1 * color1.red() + w2 * color2.red(),\r\n                        w1 * color1.green() + w2 * color2.green(),\r\n                        w1 * color1.blue() + w2 * color2.blue()\r\n                        )\r\n                        .alpha(color1.alpha() * p + color2.alpha() * (1 - p));\r\n                },\r\n\r\n                toJSON: function() {\r\n                    return this.rgb();\r\n                },\r\n\r\n                clone: function() {\r\n                    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\r\n                    // making the final build way to big to embed in Chart.js. So let's do it manually,\r\n                    // assuming that values to clone are 1 dimension arrays containing only numbers,\r\n                    // except 'alpha' which is a number.\r\n                    var result = new Color();\r\n                    var source = this.values;\r\n                    var target = result.values;\r\n                    var value, type;\r\n\r\n                    for (var prop in source) {\r\n                        if (source.hasOwnProperty(prop)) {\r\n                            value = source[prop];\r\n                            type = ({}).toString.call(value);\r\n                            if (type === '[object Array]') {\r\n                                target[prop] = value.slice(0);\r\n                            } else if (type === '[object Number]') {\r\n                                target[prop] = value;\r\n                            } else {\r\n                                console.error('unexpected color value:', value);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return result;\r\n                }\r\n            };\r\n\r\n            Color.prototype.spaces = {\r\n                rgb: ['red', 'green', 'blue'],\r\n                hsl: ['hue', 'saturation', 'lightness'],\r\n                hsv: ['hue', 'saturation', 'value'],\r\n                hwb: ['hue', 'whiteness', 'blackness'],\r\n                cmyk: ['cyan', 'magenta', 'yellow', 'black']\r\n            };\r\n\r\n            Color.prototype.maxes = {\r\n                rgb: [255, 255, 255],\r\n                hsl: [360, 100, 100],\r\n                hsv: [360, 100, 100],\r\n                hwb: [360, 100, 100],\r\n                cmyk: [100, 100, 100, 100]\r\n            };\r\n\r\n            Color.prototype.getValues = function(space) {\r\n                var values = this.values;\r\n                var vals = {};\r\n\r\n                for (var i = 0; i < space.length; i++) {\r\n                    vals[space.charAt(i)] = values[space][i];\r\n                }\r\n\r\n                if (values.alpha !== 1) {\r\n                    vals.a = values.alpha;\r\n                }\r\n\r\n                // {r: 255, g: 255, b: 255, a: 0.4}\r\n                return vals;\r\n            };\r\n\r\n            Color.prototype.setValues = function(space, vals) {\r\n                var values = this.values;\r\n                var spaces = this.spaces;\r\n                var maxes = this.maxes;\r\n                var alpha = 1;\r\n                var i;\r\n\r\n                this.valid = true;\r\n\r\n                if (space === 'alpha') {\r\n                    alpha = vals;\r\n                } else if (vals.length) {\r\n                    // [10, 10, 10]\r\n                    values[space] = vals.slice(0, space.length);\r\n                    alpha = vals[space.length];\r\n                } else if (vals[space.charAt(0)] !== undefined) {\r\n                    // {r: 10, g: 10, b: 10}\r\n                    for (i = 0; i < space.length; i++) {\r\n                        values[space][i] = vals[space.charAt(i)];\r\n                    }\r\n\r\n                    alpha = vals.a;\r\n                } else if (vals[spaces[space][0]] !== undefined) {\r\n                    // {red: 10, green: 10, blue: 10}\r\n                    var chans = spaces[space];\r\n\r\n                    for (i = 0; i < space.length; i++) {\r\n                        values[space][i] = vals[chans[i]];\r\n                    }\r\n\r\n                    alpha = vals.alpha;\r\n                }\r\n\r\n                values.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\r\n\r\n                if (space === 'alpha') {\r\n                    return false;\r\n                }\r\n\r\n                var capped;\r\n\r\n                // cap values of the space prior converting all values\r\n                for (i = 0; i < space.length; i++) {\r\n                    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\r\n                    values[space][i] = Math.round(capped);\r\n                }\r\n\r\n                // convert to all the other color spaces\r\n                for (var sname in spaces) {\r\n                    if (sname !== space) {\r\n                        values[sname] = convert[space][sname](values[space]);\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            };\r\n\r\n            Color.prototype.setSpace = function(space, args) {\r\n                var vals = args[0];\r\n\r\n                if (vals === undefined) {\r\n                    // color.rgb()\r\n                    return this.getValues(space);\r\n                }\r\n\r\n                // color.rgb(10, 10, 10)\r\n                if (typeof vals === 'number') {\r\n                    vals = Array.prototype.slice.call(args);\r\n                }\r\n\r\n                this.setValues(space, vals);\r\n                return this;\r\n            };\r\n\r\n            Color.prototype.setChannel = function(space, index, val) {\r\n                var svalues = this.values[space];\r\n                if (val === undefined) {\r\n                    // color.red()\r\n                    return svalues[index];\r\n                } else if (val === svalues[index]) {\r\n                    // color.red(color.red())\r\n                    return this;\r\n                }\r\n\r\n                // color.red(100)\r\n                svalues[index] = val;\r\n                this.setValues(space, svalues);\r\n\r\n                return this;\r\n            };\r\n\r\n            if (typeof window !== 'undefined') {\r\n                window.Color = Color;\r\n            }\r\n\r\n            module.exports = Color;\r\n        }, { \"1\": 1, \"4\": 4 }], 3: [function(require, module, exports) {\r\n            /* MIT license */\r\n\r\n            module.exports = {\r\n                rgb2hsl: rgb2hsl,\r\n                rgb2hsv: rgb2hsv,\r\n                rgb2hwb: rgb2hwb,\r\n                rgb2cmyk: rgb2cmyk,\r\n                rgb2keyword: rgb2keyword,\r\n                rgb2xyz: rgb2xyz,\r\n                rgb2lab: rgb2lab,\r\n                rgb2lch: rgb2lch,\r\n\r\n                hsl2rgb: hsl2rgb,\r\n                hsl2hsv: hsl2hsv,\r\n                hsl2hwb: hsl2hwb,\r\n                hsl2cmyk: hsl2cmyk,\r\n                hsl2keyword: hsl2keyword,\r\n\r\n                hsv2rgb: hsv2rgb,\r\n                hsv2hsl: hsv2hsl,\r\n                hsv2hwb: hsv2hwb,\r\n                hsv2cmyk: hsv2cmyk,\r\n                hsv2keyword: hsv2keyword,\r\n\r\n                hwb2rgb: hwb2rgb,\r\n                hwb2hsl: hwb2hsl,\r\n                hwb2hsv: hwb2hsv,\r\n                hwb2cmyk: hwb2cmyk,\r\n                hwb2keyword: hwb2keyword,\r\n\r\n                cmyk2rgb: cmyk2rgb,\r\n                cmyk2hsl: cmyk2hsl,\r\n                cmyk2hsv: cmyk2hsv,\r\n                cmyk2hwb: cmyk2hwb,\r\n                cmyk2keyword: cmyk2keyword,\r\n\r\n                keyword2rgb: keyword2rgb,\r\n                keyword2hsl: keyword2hsl,\r\n                keyword2hsv: keyword2hsv,\r\n                keyword2hwb: keyword2hwb,\r\n                keyword2cmyk: keyword2cmyk,\r\n                keyword2lab: keyword2lab,\r\n                keyword2xyz: keyword2xyz,\r\n\r\n                xyz2rgb: xyz2rgb,\r\n                xyz2lab: xyz2lab,\r\n                xyz2lch: xyz2lch,\r\n\r\n                lab2xyz: lab2xyz,\r\n                lab2rgb: lab2rgb,\r\n                lab2lch: lab2lch,\r\n\r\n                lch2lab: lch2lab,\r\n                lch2xyz: lch2xyz,\r\n                lch2rgb: lch2rgb\r\n            }\r\n\r\n            function rgb2hsl(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255,\r\n                    min = Math.min(r, g, b),\r\n                    max = Math.max(r, g, b),\r\n                    delta = max - min,\r\n                    h, s, l;\r\n\r\n                if (max == min)\r\n                    h = 0;\r\n                else if (r == max)\r\n                    h = (g - b) / delta;\r\n                else if (g == max)\r\n                    h = 2 + (b - r) / delta;\r\n                else if (b == max)\r\n                    h = 4 + (r - g) / delta;\r\n\r\n                h = Math.min(h * 60, 360);\r\n\r\n                if (h < 0)\r\n                    h += 360;\r\n\r\n                l = (min + max) / 2;\r\n\r\n                if (max == min)\r\n                    s = 0;\r\n                else if (l <= 0.5)\r\n                    s = delta / (max + min);\r\n                else\r\n                    s = delta / (2 - max - min);\r\n\r\n                return [h, s * 100, l * 100];\r\n            }\r\n\r\n            function rgb2hsv(rgb) {\r\n                var r = rgb[0],\r\n                    g = rgb[1],\r\n                    b = rgb[2],\r\n                    min = Math.min(r, g, b),\r\n                    max = Math.max(r, g, b),\r\n                    delta = max - min,\r\n                    h, s, v;\r\n\r\n                if (max == 0)\r\n                    s = 0;\r\n                else\r\n                    s = (delta / max * 1000) / 10;\r\n\r\n                if (max == min)\r\n                    h = 0;\r\n                else if (r == max)\r\n                    h = (g - b) / delta;\r\n                else if (g == max)\r\n                    h = 2 + (b - r) / delta;\r\n                else if (b == max)\r\n                    h = 4 + (r - g) / delta;\r\n\r\n                h = Math.min(h * 60, 360);\r\n\r\n                if (h < 0)\r\n                    h += 360;\r\n\r\n                v = ((max / 255) * 1000) / 10;\r\n\r\n                return [h, s, v];\r\n            }\r\n\r\n            function rgb2hwb(rgb) {\r\n                var r = rgb[0],\r\n                    g = rgb[1],\r\n                    b = rgb[2],\r\n                    h = rgb2hsl(rgb)[0],\r\n                    w = 1 / 255 * Math.min(r, Math.min(g, b)),\r\n                    b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\r\n\r\n                return [h, w * 100, b * 100];\r\n            }\r\n\r\n            function rgb2cmyk(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255,\r\n                    c, m, y, k;\r\n\r\n                k = Math.min(1 - r, 1 - g, 1 - b);\r\n                c = (1 - r - k) / (1 - k) || 0;\r\n                m = (1 - g - k) / (1 - k) || 0;\r\n                y = (1 - b - k) / (1 - k) || 0;\r\n                return [c * 100, m * 100, y * 100, k * 100];\r\n            }\r\n\r\n            function rgb2keyword(rgb) {\r\n                return reverseKeywords[JSON.stringify(rgb)];\r\n            }\r\n\r\n            function rgb2xyz(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255;\r\n\r\n                // assume sRGB\r\n                r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\r\n                g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\r\n                b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\r\n\r\n                var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\r\n                var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\r\n                var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\r\n\r\n                return [x * 100, y * 100, z * 100];\r\n            }\r\n\r\n            function rgb2lab(rgb) {\r\n                var xyz = rgb2xyz(rgb),\r\n                    x = xyz[0],\r\n                    y = xyz[1],\r\n                    z = xyz[2],\r\n                    l, a, b;\r\n\r\n                x /= 95.047;\r\n                y /= 100;\r\n                z /= 108.883;\r\n\r\n                x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\r\n                y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\r\n                z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\r\n\r\n                l = (116 * y) - 16;\r\n                a = 500 * (x - y);\r\n                b = 200 * (y - z);\r\n\r\n                return [l, a, b];\r\n            }\r\n\r\n            function rgb2lch(args) {\r\n                return lab2lch(rgb2lab(args));\r\n            }\r\n\r\n            function hsl2rgb(hsl) {\r\n                var h = hsl[0] / 360,\r\n                    s = hsl[1] / 100,\r\n                    l = hsl[2] / 100,\r\n                    t1, t2, t3, rgb, val;\r\n\r\n                if (s == 0) {\r\n                    val = l * 255;\r\n                    return [val, val, val];\r\n                }\r\n\r\n                if (l < 0.5)\r\n                    t2 = l * (1 + s);\r\n                else\r\n                    t2 = l + s - l * s;\r\n                t1 = 2 * l - t2;\r\n\r\n                rgb = [0, 0, 0];\r\n                for (var i = 0; i < 3; i++) {\r\n                    t3 = h + 1 / 3 * - (i - 1);\r\n                    t3 < 0 && t3++;\r\n                    t3 > 1 && t3--;\r\n\r\n                    if (6 * t3 < 1)\r\n                        val = t1 + (t2 - t1) * 6 * t3;\r\n                    else if (2 * t3 < 1)\r\n                        val = t2;\r\n                    else if (3 * t3 < 2)\r\n                        val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\r\n                    else\r\n                        val = t1;\r\n\r\n                    rgb[i] = val * 255;\r\n                }\r\n\r\n                return rgb;\r\n            }\r\n\r\n            function hsl2hsv(hsl) {\r\n                var h = hsl[0],\r\n                    s = hsl[1] / 100,\r\n                    l = hsl[2] / 100,\r\n                    sv, v;\r\n\r\n                if (l === 0) {\r\n                    // no need to do calc on black\r\n                    // also avoids divide by 0 error\r\n                    return [0, 0, 0];\r\n                }\r\n\r\n                l *= 2;\r\n                s *= (l <= 1) ? l : 2 - l;\r\n                v = (l + s) / 2;\r\n                sv = (2 * s) / (l + s);\r\n                return [h, sv * 100, v * 100];\r\n            }\r\n\r\n            function hsl2hwb(args) {\r\n                return rgb2hwb(hsl2rgb(args));\r\n            }\r\n\r\n            function hsl2cmyk(args) {\r\n                return rgb2cmyk(hsl2rgb(args));\r\n            }\r\n\r\n            function hsl2keyword(args) {\r\n                return rgb2keyword(hsl2rgb(args));\r\n            }\r\n\r\n            function hsv2rgb(hsv) {\r\n                var h = hsv[0] / 60,\r\n                    s = hsv[1] / 100,\r\n                    v = hsv[2] / 100,\r\n                    hi = Math.floor(h) % 6;\r\n\r\n                var f = h - Math.floor(h),\r\n                    p = 255 * v * (1 - s),\r\n                    q = 255 * v * (1 - (s * f)),\r\n                    t = 255 * v * (1 - (s * (1 - f))),\r\n                    v = 255 * v;\r\n\r\n                switch (hi) {\r\n                    case 0:\r\n                        return [v, t, p];\r\n                    case 1:\r\n                        return [q, v, p];\r\n                    case 2:\r\n                        return [p, v, t];\r\n                    case 3:\r\n                        return [p, q, v];\r\n                    case 4:\r\n                        return [t, p, v];\r\n                    case 5:\r\n                        return [v, p, q];\r\n                }\r\n            }\r\n\r\n            function hsv2hsl(hsv) {\r\n                var h = hsv[0],\r\n                    s = hsv[1] / 100,\r\n                    v = hsv[2] / 100,\r\n                    sl, l;\r\n\r\n                l = (2 - s) * v;\r\n                sl = s * v;\r\n                sl /= (l <= 1) ? l : 2 - l;\r\n                sl = sl || 0;\r\n                l /= 2;\r\n                return [h, sl * 100, l * 100];\r\n            }\r\n\r\n            function hsv2hwb(args) {\r\n                return rgb2hwb(hsv2rgb(args))\r\n            }\r\n\r\n            function hsv2cmyk(args) {\r\n                return rgb2cmyk(hsv2rgb(args));\r\n            }\r\n\r\n            function hsv2keyword(args) {\r\n                return rgb2keyword(hsv2rgb(args));\r\n            }\r\n\r\n            // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\r\n            function hwb2rgb(hwb) {\r\n                var h = hwb[0] / 360,\r\n                    wh = hwb[1] / 100,\r\n                    bl = hwb[2] / 100,\r\n                    ratio = wh + bl,\r\n                    i, v, f, n;\r\n\r\n                // wh + bl cant be > 1\r\n                if (ratio > 1) {\r\n                    wh /= ratio;\r\n                    bl /= ratio;\r\n                }\r\n\r\n                i = Math.floor(6 * h);\r\n                v = 1 - bl;\r\n                f = 6 * h - i;\r\n                if ((i & 0x01) != 0) {\r\n                    f = 1 - f;\r\n                }\r\n                n = wh + f * (v - wh);  // linear interpolation\r\n\r\n                switch (i) {\r\n                    default:\r\n                    case 6:\r\n                    case 0: r = v; g = n; b = wh; break;\r\n                    case 1: r = n; g = v; b = wh; break;\r\n                    case 2: r = wh; g = v; b = n; break;\r\n                    case 3: r = wh; g = n; b = v; break;\r\n                    case 4: r = n; g = wh; b = v; break;\r\n                    case 5: r = v; g = wh; b = n; break;\r\n                }\r\n\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function hwb2hsl(args) {\r\n                return rgb2hsl(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2hsv(args) {\r\n                return rgb2hsv(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2cmyk(args) {\r\n                return rgb2cmyk(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2keyword(args) {\r\n                return rgb2keyword(hwb2rgb(args));\r\n            }\r\n\r\n            function cmyk2rgb(cmyk) {\r\n                var c = cmyk[0] / 100,\r\n                    m = cmyk[1] / 100,\r\n                    y = cmyk[2] / 100,\r\n                    k = cmyk[3] / 100,\r\n                    r, g, b;\r\n\r\n                r = 1 - Math.min(1, c * (1 - k) + k);\r\n                g = 1 - Math.min(1, m * (1 - k) + k);\r\n                b = 1 - Math.min(1, y * (1 - k) + k);\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function cmyk2hsl(args) {\r\n                return rgb2hsl(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2hsv(args) {\r\n                return rgb2hsv(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2hwb(args) {\r\n                return rgb2hwb(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2keyword(args) {\r\n                return rgb2keyword(cmyk2rgb(args));\r\n            }\r\n\r\n            function xyz2rgb(xyz) {\r\n                var x = xyz[0] / 100,\r\n                    y = xyz[1] / 100,\r\n                    z = xyz[2] / 100,\r\n                    r, g, b;\r\n\r\n                r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\r\n                g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\r\n                b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\r\n\r\n                // assume sRGB\r\n                r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\r\n                    : r = (r * 12.92);\r\n\r\n                g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\r\n                    : g = (g * 12.92);\r\n\r\n                b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\r\n                    : b = (b * 12.92);\r\n\r\n                r = Math.min(Math.max(0, r), 1);\r\n                g = Math.min(Math.max(0, g), 1);\r\n                b = Math.min(Math.max(0, b), 1);\r\n\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function xyz2lab(xyz) {\r\n                var x = xyz[0],\r\n                    y = xyz[1],\r\n                    z = xyz[2],\r\n                    l, a, b;\r\n\r\n                x /= 95.047;\r\n                y /= 100;\r\n                z /= 108.883;\r\n\r\n                x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\r\n                y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\r\n                z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\r\n\r\n                l = (116 * y) - 16;\r\n                a = 500 * (x - y);\r\n                b = 200 * (y - z);\r\n\r\n                return [l, a, b];\r\n            }\r\n\r\n            function xyz2lch(args) {\r\n                return lab2lch(xyz2lab(args));\r\n            }\r\n\r\n            function lab2xyz(lab) {\r\n                var l = lab[0],\r\n                    a = lab[1],\r\n                    b = lab[2],\r\n                    x, y, z, y2;\r\n\r\n                if (l <= 8) {\r\n                    y = (l * 100) / 903.3;\r\n                    y2 = (7.787 * (y / 100)) + (16 / 116);\r\n                } else {\r\n                    y = 100 * Math.pow((l + 16) / 116, 3);\r\n                    y2 = Math.pow(y / 100, 1 / 3);\r\n                }\r\n\r\n                x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\r\n\r\n                z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\r\n\r\n                return [x, y, z];\r\n            }\r\n\r\n            function lab2lch(lab) {\r\n                var l = lab[0],\r\n                    a = lab[1],\r\n                    b = lab[2],\r\n                    hr, h, c;\r\n\r\n                hr = Math.atan2(b, a);\r\n                h = hr * 360 / 2 / Math.PI;\r\n                if (h < 0) {\r\n                    h += 360;\r\n                }\r\n                c = Math.sqrt(a * a + b * b);\r\n                return [l, c, h];\r\n            }\r\n\r\n            function lab2rgb(args) {\r\n                return xyz2rgb(lab2xyz(args));\r\n            }\r\n\r\n            function lch2lab(lch) {\r\n                var l = lch[0],\r\n                    c = lch[1],\r\n                    h = lch[2],\r\n                    a, b, hr;\r\n\r\n                hr = h / 360 * 2 * Math.PI;\r\n                a = c * Math.cos(hr);\r\n                b = c * Math.sin(hr);\r\n                return [l, a, b];\r\n            }\r\n\r\n            function lch2xyz(args) {\r\n                return lab2xyz(lch2lab(args));\r\n            }\r\n\r\n            function lch2rgb(args) {\r\n                return lab2rgb(lch2lab(args));\r\n            }\r\n\r\n            function keyword2rgb(keyword) {\r\n                return cssKeywords[keyword];\r\n            }\r\n\r\n            function keyword2hsl(args) {\r\n                return rgb2hsl(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2hsv(args) {\r\n                return rgb2hsv(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2hwb(args) {\r\n                return rgb2hwb(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2cmyk(args) {\r\n                return rgb2cmyk(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2lab(args) {\r\n                return rgb2lab(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2xyz(args) {\r\n                return rgb2xyz(keyword2rgb(args));\r\n            }\r\n\r\n            var cssKeywords = {\r\n                aliceblue: [240, 248, 255],\r\n                antiquewhite: [250, 235, 215],\r\n                aqua: [0, 255, 255],\r\n                aquamarine: [127, 255, 212],\r\n                azure: [240, 255, 255],\r\n                beige: [245, 245, 220],\r\n                bisque: [255, 228, 196],\r\n                black: [0, 0, 0],\r\n                blanchedalmond: [255, 235, 205],\r\n                blue: [0, 0, 255],\r\n                blueviolet: [138, 43, 226],\r\n                brown: [165, 42, 42],\r\n                burlywood: [222, 184, 135],\r\n                cadetblue: [95, 158, 160],\r\n                chartreuse: [127, 255, 0],\r\n                chocolate: [210, 105, 30],\r\n                coral: [255, 127, 80],\r\n                cornflowerblue: [100, 149, 237],\r\n                cornsilk: [255, 248, 220],\r\n                crimson: [220, 20, 60],\r\n                cyan: [0, 255, 255],\r\n                darkblue: [0, 0, 139],\r\n                darkcyan: [0, 139, 139],\r\n                darkgoldenrod: [184, 134, 11],\r\n                darkgray: [169, 169, 169],\r\n                darkgreen: [0, 100, 0],\r\n                darkgrey: [169, 169, 169],\r\n                darkkhaki: [189, 183, 107],\r\n                darkmagenta: [139, 0, 139],\r\n                darkolivegreen: [85, 107, 47],\r\n                darkorange: [255, 140, 0],\r\n                darkorchid: [153, 50, 204],\r\n                darkred: [139, 0, 0],\r\n                darksalmon: [233, 150, 122],\r\n                darkseagreen: [143, 188, 143],\r\n                darkslateblue: [72, 61, 139],\r\n                darkslategray: [47, 79, 79],\r\n                darkslategrey: [47, 79, 79],\r\n                darkturquoise: [0, 206, 209],\r\n                darkviolet: [148, 0, 211],\r\n                deeppink: [255, 20, 147],\r\n                deepskyblue: [0, 191, 255],\r\n                dimgray: [105, 105, 105],\r\n                dimgrey: [105, 105, 105],\r\n                dodgerblue: [30, 144, 255],\r\n                firebrick: [178, 34, 34],\r\n                floralwhite: [255, 250, 240],\r\n                forestgreen: [34, 139, 34],\r\n                fuchsia: [255, 0, 255],\r\n                gainsboro: [220, 220, 220],\r\n                ghostwhite: [248, 248, 255],\r\n                gold: [255, 215, 0],\r\n                goldenrod: [218, 165, 32],\r\n                gray: [128, 128, 128],\r\n                green: [0, 128, 0],\r\n                greenyellow: [173, 255, 47],\r\n                grey: [128, 128, 128],\r\n                honeydew: [240, 255, 240],\r\n                hotpink: [255, 105, 180],\r\n                indianred: [205, 92, 92],\r\n                indigo: [75, 0, 130],\r\n                ivory: [255, 255, 240],\r\n                khaki: [240, 230, 140],\r\n                lavender: [230, 230, 250],\r\n                lavenderblush: [255, 240, 245],\r\n                lawngreen: [124, 252, 0],\r\n                lemonchiffon: [255, 250, 205],\r\n                lightblue: [173, 216, 230],\r\n                lightcoral: [240, 128, 128],\r\n                lightcyan: [224, 255, 255],\r\n                lightgoldenrodyellow: [250, 250, 210],\r\n                lightgray: [211, 211, 211],\r\n                lightgreen: [144, 238, 144],\r\n                lightgrey: [211, 211, 211],\r\n                lightpink: [255, 182, 193],\r\n                lightsalmon: [255, 160, 122],\r\n                lightseagreen: [32, 178, 170],\r\n                lightskyblue: [135, 206, 250],\r\n                lightslategray: [119, 136, 153],\r\n                lightslategrey: [119, 136, 153],\r\n                lightsteelblue: [176, 196, 222],\r\n                lightyellow: [255, 255, 224],\r\n                lime: [0, 255, 0],\r\n                limegreen: [50, 205, 50],\r\n                linen: [250, 240, 230],\r\n                magenta: [255, 0, 255],\r\n                maroon: [128, 0, 0],\r\n                mediumaquamarine: [102, 205, 170],\r\n                mediumblue: [0, 0, 205],\r\n                mediumorchid: [186, 85, 211],\r\n                mediumpurple: [147, 112, 219],\r\n                mediumseagreen: [60, 179, 113],\r\n                mediumslateblue: [123, 104, 238],\r\n                mediumspringgreen: [0, 250, 154],\r\n                mediumturquoise: [72, 209, 204],\r\n                mediumvioletred: [199, 21, 133],\r\n                midnightblue: [25, 25, 112],\r\n                mintcream: [245, 255, 250],\r\n                mistyrose: [255, 228, 225],\r\n                moccasin: [255, 228, 181],\r\n                navajowhite: [255, 222, 173],\r\n                navy: [0, 0, 128],\r\n                oldlace: [253, 245, 230],\r\n                olive: [128, 128, 0],\r\n                olivedrab: [107, 142, 35],\r\n                orange: [255, 165, 0],\r\n                orangered: [255, 69, 0],\r\n                orchid: [218, 112, 214],\r\n                palegoldenrod: [238, 232, 170],\r\n                palegreen: [152, 251, 152],\r\n                paleturquoise: [175, 238, 238],\r\n                palevioletred: [219, 112, 147],\r\n                papayawhip: [255, 239, 213],\r\n                peachpuff: [255, 218, 185],\r\n                peru: [205, 133, 63],\r\n                pink: [255, 192, 203],\r\n                plum: [221, 160, 221],\r\n                powderblue: [176, 224, 230],\r\n                purple: [128, 0, 128],\r\n                rebeccapurple: [102, 51, 153],\r\n                red: [255, 0, 0],\r\n                rosybrown: [188, 143, 143],\r\n                royalblue: [65, 105, 225],\r\n                saddlebrown: [139, 69, 19],\r\n                salmon: [250, 128, 114],\r\n                sandybrown: [244, 164, 96],\r\n                seagreen: [46, 139, 87],\r\n                seashell: [255, 245, 238],\r\n                sienna: [160, 82, 45],\r\n                silver: [192, 192, 192],\r\n                skyblue: [135, 206, 235],\r\n                slateblue: [106, 90, 205],\r\n                slategray: [112, 128, 144],\r\n                slategrey: [112, 128, 144],\r\n                snow: [255, 250, 250],\r\n                springgreen: [0, 255, 127],\r\n                steelblue: [70, 130, 180],\r\n                tan: [210, 180, 140],\r\n                teal: [0, 128, 128],\r\n                thistle: [216, 191, 216],\r\n                tomato: [255, 99, 71],\r\n                turquoise: [64, 224, 208],\r\n                violet: [238, 130, 238],\r\n                wheat: [245, 222, 179],\r\n                white: [255, 255, 255],\r\n                whitesmoke: [245, 245, 245],\r\n                yellow: [255, 255, 0],\r\n                yellowgreen: [154, 205, 50]\r\n            };\r\n\r\n            var reverseKeywords = {};\r\n            for (var key in cssKeywords) {\r\n                reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\r\n            }\r\n        }, {}], 4: [function(require, module, exports) {\r\n            var conversions = require(3);\r\n\r\n            var convert = function() {\r\n                return new Converter();\r\n            }\r\n\r\n            for (var func in conversions) {\r\n                // export Raw versions\r\n                convert[func + \"Raw\"] = (function(func) {\r\n                    // accept array or plain args\r\n                    return function(arg) {\r\n                        if (typeof arg == \"number\")\r\n                            arg = Array.prototype.slice.call(arguments);\r\n                        return conversions[func](arg);\r\n                    }\r\n                })(func);\r\n\r\n                var pair = /(\\w+)2(\\w+)/.exec(func),\r\n                    from = pair[1],\r\n                    to = pair[2];\r\n\r\n                // export rgb2hsl and [\"rgb\"][\"hsl\"]\r\n                convert[from] = convert[from] || {};\r\n\r\n                convert[from][to] = convert[func] = (function(func) {\r\n                    return function(arg) {\r\n                        if (typeof arg == \"number\")\r\n                            arg = Array.prototype.slice.call(arguments);\r\n\r\n                        var val = conversions[func](arg);\r\n                        if (typeof val == \"string\" || val === undefined)\r\n                            return val; // keyword\r\n\r\n                        for (var i = 0; i < val.length; i++)\r\n                            val[i] = Math.round(val[i]);\r\n                        return val;\r\n                    }\r\n                })(func);\r\n            }\r\n\r\n            /* Converter does lazy conversion and caching */\r\n            var Converter = function() {\r\n                this.convs = {};\r\n            };\r\n\r\n            /* Either get the values for a space or\r\n              set the values for a space, depending on args */\r\n            Converter.prototype.routeSpace = function(space, args) {\r\n                var values = args[0];\r\n                if (values === undefined) {\r\n                    // color.rgb()\r\n                    return this.getValues(space);\r\n                }\r\n                // color.rgb(10, 10, 10)\r\n                if (typeof values == \"number\") {\r\n                    values = Array.prototype.slice.call(args);\r\n                }\r\n\r\n                return this.setValues(space, values);\r\n            };\r\n\r\n            /* Set the values for a space, invalidating cache */\r\n            Converter.prototype.setValues = function(space, values) {\r\n                this.space = space;\r\n                this.convs = {};\r\n                this.convs[space] = values;\r\n                return this;\r\n            };\r\n\r\n            /* Get the values for a space. If there's already\r\n              a conversion for the space, fetch it, otherwise\r\n              compute it */\r\n            Converter.prototype.getValues = function(space) {\r\n                var vals = this.convs[space];\r\n                if (!vals) {\r\n                    var fspace = this.space,\r\n                        from = this.convs[fspace];\r\n                    vals = convert[fspace][space](from);\r\n\r\n                    this.convs[space] = vals;\r\n                }\r\n                return vals;\r\n            };\r\n\r\n            [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\r\n                Converter.prototype[space] = function(vals) {\r\n                    return this.routeSpace(space, arguments);\r\n                }\r\n            });\r\n\r\n            module.exports = convert;\r\n        }, { \"3\": 3 }], 5: [function(require, module, exports) {\r\n            'use strict'\r\n\r\n            module.exports = {\r\n                \"aliceblue\": [240, 248, 255],\r\n                \"antiquewhite\": [250, 235, 215],\r\n                \"aqua\": [0, 255, 255],\r\n                \"aquamarine\": [127, 255, 212],\r\n                \"azure\": [240, 255, 255],\r\n                \"beige\": [245, 245, 220],\r\n                \"bisque\": [255, 228, 196],\r\n                \"black\": [0, 0, 0],\r\n                \"blanchedalmond\": [255, 235, 205],\r\n                \"blue\": [0, 0, 255],\r\n                \"blueviolet\": [138, 43, 226],\r\n                \"brown\": [165, 42, 42],\r\n                \"burlywood\": [222, 184, 135],\r\n                \"cadetblue\": [95, 158, 160],\r\n                \"chartreuse\": [127, 255, 0],\r\n                \"chocolate\": [210, 105, 30],\r\n                \"coral\": [255, 127, 80],\r\n                \"cornflowerblue\": [100, 149, 237],\r\n                \"cornsilk\": [255, 248, 220],\r\n                \"crimson\": [220, 20, 60],\r\n                \"cyan\": [0, 255, 255],\r\n                \"darkblue\": [0, 0, 139],\r\n                \"darkcyan\": [0, 139, 139],\r\n                \"darkgoldenrod\": [184, 134, 11],\r\n                \"darkgray\": [169, 169, 169],\r\n                \"darkgreen\": [0, 100, 0],\r\n                \"darkgrey\": [169, 169, 169],\r\n                \"darkkhaki\": [189, 183, 107],\r\n                \"darkmagenta\": [139, 0, 139],\r\n                \"darkolivegreen\": [85, 107, 47],\r\n                \"darkorange\": [255, 140, 0],\r\n                \"darkorchid\": [153, 50, 204],\r\n                \"darkred\": [139, 0, 0],\r\n                \"darksalmon\": [233, 150, 122],\r\n                \"darkseagreen\": [143, 188, 143],\r\n                \"darkslateblue\": [72, 61, 139],\r\n                \"darkslategray\": [47, 79, 79],\r\n                \"darkslategrey\": [47, 79, 79],\r\n                \"darkturquoise\": [0, 206, 209],\r\n                \"darkviolet\": [148, 0, 211],\r\n                \"deeppink\": [255, 20, 147],\r\n                \"deepskyblue\": [0, 191, 255],\r\n                \"dimgray\": [105, 105, 105],\r\n                \"dimgrey\": [105, 105, 105],\r\n                \"dodgerblue\": [30, 144, 255],\r\n                \"firebrick\": [178, 34, 34],\r\n                \"floralwhite\": [255, 250, 240],\r\n                \"forestgreen\": [34, 139, 34],\r\n                \"fuchsia\": [255, 0, 255],\r\n                \"gainsboro\": [220, 220, 220],\r\n                \"ghostwhite\": [248, 248, 255],\r\n                \"gold\": [255, 215, 0],\r\n                \"goldenrod\": [218, 165, 32],\r\n                \"gray\": [128, 128, 128],\r\n                \"green\": [0, 128, 0],\r\n                \"greenyellow\": [173, 255, 47],\r\n                \"grey\": [128, 128, 128],\r\n                \"honeydew\": [240, 255, 240],\r\n                \"hotpink\": [255, 105, 180],\r\n                \"indianred\": [205, 92, 92],\r\n                \"indigo\": [75, 0, 130],\r\n                \"ivory\": [255, 255, 240],\r\n                \"khaki\": [240, 230, 140],\r\n                \"lavender\": [230, 230, 250],\r\n                \"lavenderblush\": [255, 240, 245],\r\n                \"lawngreen\": [124, 252, 0],\r\n                \"lemonchiffon\": [255, 250, 205],\r\n                \"lightblue\": [173, 216, 230],\r\n                \"lightcoral\": [240, 128, 128],\r\n                \"lightcyan\": [224, 255, 255],\r\n                \"lightgoldenrodyellow\": [250, 250, 210],\r\n                \"lightgray\": [211, 211, 211],\r\n                \"lightgreen\": [144, 238, 144],\r\n                \"lightgrey\": [211, 211, 211],\r\n                \"lightpink\": [255, 182, 193],\r\n                \"lightsalmon\": [255, 160, 122],\r\n                \"lightseagreen\": [32, 178, 170],\r\n                \"lightskyblue\": [135, 206, 250],\r\n                \"lightslategray\": [119, 136, 153],\r\n                \"lightslategrey\": [119, 136, 153],\r\n                \"lightsteelblue\": [176, 196, 222],\r\n                \"lightyellow\": [255, 255, 224],\r\n                \"lime\": [0, 255, 0],\r\n                \"limegreen\": [50, 205, 50],\r\n                \"linen\": [250, 240, 230],\r\n                \"magenta\": [255, 0, 255],\r\n                \"maroon\": [128, 0, 0],\r\n                \"mediumaquamarine\": [102, 205, 170],\r\n                \"mediumblue\": [0, 0, 205],\r\n                \"mediumorchid\": [186, 85, 211],\r\n                \"mediumpurple\": [147, 112, 219],\r\n                \"mediumseagreen\": [60, 179, 113],\r\n                \"mediumslateblue\": [123, 104, 238],\r\n                \"mediumspringgreen\": [0, 250, 154],\r\n                \"mediumturquoise\": [72, 209, 204],\r\n                \"mediumvioletred\": [199, 21, 133],\r\n                \"midnightblue\": [25, 25, 112],\r\n                \"mintcream\": [245, 255, 250],\r\n                \"mistyrose\": [255, 228, 225],\r\n                \"moccasin\": [255, 228, 181],\r\n                \"navajowhite\": [255, 222, 173],\r\n                \"navy\": [0, 0, 128],\r\n                \"oldlace\": [253, 245, 230],\r\n                \"olive\": [128, 128, 0],\r\n                \"olivedrab\": [107, 142, 35],\r\n                \"orange\": [255, 165, 0],\r\n                \"orangered\": [255, 69, 0],\r\n                \"orchid\": [218, 112, 214],\r\n                \"palegoldenrod\": [238, 232, 170],\r\n                \"palegreen\": [152, 251, 152],\r\n                \"paleturquoise\": [175, 238, 238],\r\n                \"palevioletred\": [219, 112, 147],\r\n                \"papayawhip\": [255, 239, 213],\r\n                \"peachpuff\": [255, 218, 185],\r\n                \"peru\": [205, 133, 63],\r\n                \"pink\": [255, 192, 203],\r\n                \"plum\": [221, 160, 221],\r\n                \"powderblue\": [176, 224, 230],\r\n                \"purple\": [128, 0, 128],\r\n                \"rebeccapurple\": [102, 51, 153],\r\n                \"red\": [255, 0, 0],\r\n                \"rosybrown\": [188, 143, 143],\r\n                \"royalblue\": [65, 105, 225],\r\n                \"saddlebrown\": [139, 69, 19],\r\n                \"salmon\": [250, 128, 114],\r\n                \"sandybrown\": [244, 164, 96],\r\n                \"seagreen\": [46, 139, 87],\r\n                \"seashell\": [255, 245, 238],\r\n                \"sienna\": [160, 82, 45],\r\n                \"silver\": [192, 192, 192],\r\n                \"skyblue\": [135, 206, 235],\r\n                \"slateblue\": [106, 90, 205],\r\n                \"slategray\": [112, 128, 144],\r\n                \"slategrey\": [112, 128, 144],\r\n                \"snow\": [255, 250, 250],\r\n                \"springgreen\": [0, 255, 127],\r\n                \"steelblue\": [70, 130, 180],\r\n                \"tan\": [210, 180, 140],\r\n                \"teal\": [0, 128, 128],\r\n                \"thistle\": [216, 191, 216],\r\n                \"tomato\": [255, 99, 71],\r\n                \"turquoise\": [64, 224, 208],\r\n                \"violet\": [238, 130, 238],\r\n                \"wheat\": [245, 222, 179],\r\n                \"white\": [255, 255, 255],\r\n                \"whitesmoke\": [245, 245, 245],\r\n                \"yellow\": [255, 255, 0],\r\n                \"yellowgreen\": [154, 205, 50]\r\n            };\r\n        }, {}], 6: [function(require, module, exports) {\r\n            /**\r\n             * @namespace Chart\r\n             */\r\n            var Chart = require(20)();\r\n\r\n            Chart.helpers = require(36);\r\n\r\n            // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\r\n            require(18)(Chart);\r\n\r\n            Chart.defaults = require(16);\r\n            Chart.Element = require(17);\r\n            Chart.elements = require(31);\r\n            Chart.Interaction = require(19);\r\n            Chart.layouts = require(21);\r\n            Chart.platform = require(39);\r\n            Chart.plugins = require(22);\r\n            Chart.Ticks = require(25);\r\n\r\n            require(13)(Chart);\r\n            require(14)(Chart);\r\n            require(15)(Chart);\r\n            require(24)(Chart);\r\n            require(23)(Chart);\r\n            require(26)(Chart);\r\n\r\n            require(46)(Chart);\r\n            require(44)(Chart);\r\n            require(45)(Chart);\r\n            // require('./scales/scale.logarithmic')(Chart);\r\n            // require('./scales/scale.radialLinear')(Chart);\r\n            // require('./scales/scale.time')(Chart);\r\n\r\n            // Controllers must be loaded after elements\r\n            // See Chart.core.datasetController.dataElementType\r\n            require(10)(Chart);\r\n            // require('./controllers/controller.bubble')(Chart);\r\n            require(11)(Chart);\r\n            require(12)(Chart);\r\n            // require('./controllers/controller.polarArea')(Chart);\r\n            // require('./controllers/controller.radar')(Chart);\r\n            // require('./controllers/controller.scatter')(Chart);\r\n\r\n            require(7)(Chart);\r\n            // require('./charts/Chart.Bubble')(Chart);\r\n            require(8)(Chart);\r\n            require(9)(Chart);\r\n            // require('./charts/Chart.PolarArea')(Chart);\r\n            // require('./charts/Chart.Radar')(Chart);\r\n            // require('./charts/Chart.Scatter')(Chart);\r\n\r\n            // Loading built-it plugins\r\n            var plugins = require(40);\r\n            for (var k in plugins) {\r\n                if (plugins.hasOwnProperty(k)) {\r\n                    Chart.plugins.register(plugins[k]);\r\n                }\r\n            }\r\n\r\n            Chart.platform.initialize();\r\n\r\n            module.exports = Chart;\r\n            if (typeof window !== 'undefined') {\r\n                window.Chart = Chart;\r\n            }\r\n        }, { \"10\": 10, \"11\": 11, \"12\": 12, \"13\": 13, \"14\": 14, \"15\": 15, \"16\": 16, \"17\": 17, \"18\": 18, \"19\": 19, \"20\": 20, \"21\": 21, \"22\": 22, \"23\": 23, \"24\": 24, \"25\": 25, \"26\": 26, \"31\": 31, \"36\": 36, \"39\": 39, \"40\": 40, \"44\": 44, \"45\": 45, \"46\": 46, \"7\": 7, \"8\": 8, \"9\": 9 }], 7: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Bar = function(context, config) {\r\n                    config.type = 'bar';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 8: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Doughnut = function(context, config) {\r\n                    config.type = 'doughnut';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 9: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Line = function(context, config) {\r\n                    config.type = 'line';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 10: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('bar', {\r\n                hover: {\r\n                    mode: 'label'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'category',\r\n\r\n                        // Specific to Bar Controller\r\n                        categoryPercentage: 0.8,\r\n                        barPercentage: 0.9,\r\n\r\n                        // offset settings\r\n                        offset: true,\r\n\r\n                        // grid line settings\r\n                        gridLines: {\r\n                            offsetGridLines: true\r\n                        }\r\n                    }],\r\n\r\n                    yAxes: [{\r\n                        type: 'linear'\r\n                    }]\r\n                }\r\n            });\r\n\r\n            defaults._set('horizontalBar', {\r\n                hover: {\r\n                    mode: 'index',\r\n                    axis: 'y'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'linear',\r\n                        position: 'bottom'\r\n                    }],\r\n\r\n                    yAxes: [{\r\n                        position: 'left',\r\n                        type: 'category',\r\n\r\n                        // Specific to Horizontal Bar Controller\r\n                        categoryPercentage: 0.8,\r\n                        barPercentage: 0.9,\r\n\r\n                        // offset settings\r\n                        offset: true,\r\n\r\n                        // grid line settings\r\n                        gridLines: {\r\n                            offsetGridLines: true\r\n                        }\r\n                    }]\r\n                },\r\n\r\n                elements: {\r\n                    rectangle: {\r\n                        borderSkipped: 'left'\r\n                    }\r\n                },\r\n\r\n                tooltips: {\r\n                    callbacks: {\r\n                        title: function(item, data) {\r\n                            // Pick first xLabel for now\r\n                            var title = '';\r\n\r\n                            if (item.length > 0) {\r\n                                if (item[0].yLabel) {\r\n                                    title = item[0].yLabel;\r\n                                } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\r\n                                    title = data.labels[item[0].index];\r\n                                }\r\n                            }\r\n\r\n                            return title;\r\n                        },\r\n\r\n                        label: function(item, data) {\r\n                            var datasetLabel = data.datasets[item.datasetIndex].label || '';\r\n                            return datasetLabel + ': ' + item.xLabel;\r\n                        }\r\n                    },\r\n                    mode: 'index',\r\n                    axis: 'y'\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\r\n             * @private\r\n             */\r\n            function computeMinSampleSize(scale, pixels) {\r\n                var min = scale.isHorizontal() ? scale.width : scale.height;\r\n                var ticks = scale.getTicks();\r\n                var prev, curr, i, ilen;\r\n\r\n                for (i = 1, ilen = pixels.length; i < ilen; ++i) {\r\n                    min = Math.min(min, pixels[i] - pixels[i - 1]);\r\n                }\r\n\r\n                for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n                    curr = scale.getPixelForTick(i);\r\n                    min = i > 0 ? Math.min(min, curr - prev) : min;\r\n                    prev = curr;\r\n                }\r\n\r\n                return min;\r\n            }\r\n\r\n            /**\r\n             * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\r\n             * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\r\n             * mode currently always generates bars equally sized (until we introduce scriptable options?).\r\n             * @private\r\n             */\r\n            function computeFitCategoryTraits(index, ruler, options) {\r\n                var thickness = options.barThickness;\r\n                var count = ruler.stackCount;\r\n                var curr = ruler.pixels[index];\r\n                var size, ratio;\r\n\r\n                if (helpers.isNullOrUndef(thickness)) {\r\n                    size = ruler.min * options.categoryPercentage;\r\n                    ratio = options.barPercentage;\r\n                } else {\r\n                    // When bar thickness is enforced, category and bar percentages are ignored.\r\n                    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\r\n                    // and deprecate barPercentage since this value is ignored when thickness is absolute.\r\n                    size = thickness * count;\r\n                    ratio = 1;\r\n                }\r\n\r\n                return {\r\n                    chunk: size / count,\r\n                    ratio: ratio,\r\n                    start: curr - (size / 2)\r\n                };\r\n            }\r\n\r\n            /**\r\n             * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\r\n             * percentage options are 1), based on the previous and following categories. This mode\r\n             * generates bars with different widths when data are not evenly spaced.\r\n             * @private\r\n             */\r\n            function computeFlexCategoryTraits(index, ruler, options) {\r\n                var pixels = ruler.pixels;\r\n                var curr = pixels[index];\r\n                var prev = index > 0 ? pixels[index - 1] : null;\r\n                var next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n                var percent = options.categoryPercentage;\r\n                var start, size;\r\n\r\n                if (prev === null) {\r\n                    // first data: its size is double based on the next point or,\r\n                    // if it's also the last data, we use the scale end extremity.\r\n                    prev = curr - (next === null ? ruler.end - curr : next - curr);\r\n                }\r\n\r\n                if (next === null) {\r\n                    // last data: its size is also double based on the previous point.\r\n                    next = curr + curr - prev;\r\n                }\r\n\r\n                start = curr - ((curr - prev) / 2) * percent;\r\n                size = ((next - prev) / 2) * percent;\r\n\r\n                return {\r\n                    chunk: size / ruler.stackCount,\r\n                    ratio: options.barPercentage,\r\n                    start: start\r\n                };\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.controllers.bar = Chart.DatasetController.extend({\r\n                    dataElementType: elements.Rectangle,\r\n\r\n                    initialize: function() {\r\n                        var me = this;\r\n                        var meta;\r\n\r\n                        Chart.DatasetController.prototype.initialize.apply(me, arguments);\r\n\r\n                        meta = me.getMeta();\r\n                        meta.stack = me.getDataset().stack;\r\n                        meta.bar = true;\r\n                    },\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var rects = me.getMeta().data;\r\n                        var i, ilen;\r\n\r\n                        me._ruler = me.getRuler();\r\n\r\n                        for (i = 0, ilen = rects.length; i < ilen; ++i) {\r\n                            me.updateElement(rects[i], i, reset);\r\n                        }\r\n                    },\r\n\r\n                    updateElement: function(rectangle, index, reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var dataset = me.getDataset();\r\n                        var custom = rectangle.custom || {};\r\n                        var rectangleOptions = chart.options.elements.rectangle;\r\n\r\n                        rectangle._xScale = me.getScaleForId(meta.xAxisID);\r\n                        rectangle._yScale = me.getScaleForId(meta.yAxisID);\r\n                        rectangle._datasetIndex = me.index;\r\n                        rectangle._index = index;\r\n\r\n                        rectangle._model = {\r\n                            datasetLabel: dataset.label,\r\n                            label: chart.data.labels[index],\r\n                            borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\r\n                            backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\r\n                            borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\r\n                            borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\r\n                        };\r\n\r\n                        me.updateElementGeometry(rectangle, index, reset);\r\n\r\n                        rectangle.pivot();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    updateElementGeometry: function(rectangle, index, reset) {\r\n                        var me = this;\r\n                        var model = rectangle._model;\r\n                        var vscale = me.getValueScale();\r\n                        var base = vscale.getBasePixel();\r\n                        var horizontal = vscale.isHorizontal();\r\n                        var ruler = me._ruler || me.getRuler();\r\n                        var vpixels = me.calculateBarValuePixels(me.index, index);\r\n                        var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\r\n\r\n                        model.horizontal = horizontal;\r\n                        model.base = reset ? base : vpixels.base;\r\n                        model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\r\n                        model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\r\n                        model.height = horizontal ? ipixels.size : undefined;\r\n                        model.width = horizontal ? undefined : ipixels.size;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScaleId: function() {\r\n                        return this.getMeta().yAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScaleId: function() {\r\n                        return this.getMeta().xAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScale: function() {\r\n                        return this.getScaleForId(this.getValueScaleId());\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScale: function() {\r\n                        return this.getScaleForId(this.getIndexScaleId());\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the stacks based on groups and bar visibility.\r\n                     * @param {Number} [last] - The dataset index\r\n                     * @returns {Array} The stack list\r\n                     * @private\r\n                     */\r\n                    _getStacks: function(last) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var scale = me.getIndexScale();\r\n                        var stacked = scale.options.stacked;\r\n                        var ilen = last === undefined ? chart.data.datasets.length : last + 1;\r\n                        var stacks = [];\r\n                        var i, meta;\r\n\r\n                        for (i = 0; i < ilen; ++i) {\r\n                            meta = chart.getDatasetMeta(i);\r\n                            if (meta.bar && chart.isDatasetVisible(i) &&\r\n                                (stacked === false ||\r\n                                    (stacked === true && stacks.indexOf(meta.stack) === -1) ||\r\n                                    (stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\r\n                                stacks.push(meta.stack);\r\n                            }\r\n                        }\r\n\r\n                        return stacks;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the effective number of stacks based on groups and bar visibility.\r\n                     * @private\r\n                     */\r\n                    getStackCount: function() {\r\n                        return this._getStacks().length;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the stack index for the given dataset based on groups and bar visibility.\r\n                     * @param {Number} [datasetIndex] - The dataset index\r\n                     * @param {String} [name] - The stack name to find\r\n                     * @returns {Number} The stack index\r\n                     * @private\r\n                     */\r\n                    getStackIndex: function(datasetIndex, name) {\r\n                        var stacks = this._getStacks(datasetIndex);\r\n                        var index = (name !== undefined)\r\n                            ? stacks.indexOf(name)\r\n                            : -1; // indexOf returns -1 if element is not present\r\n\r\n                        return (index === -1)\r\n                            ? stacks.length - 1\r\n                            : index;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getRuler: function() {\r\n                        var me = this;\r\n                        var scale = me.getIndexScale();\r\n                        var stackCount = me.getStackCount();\r\n                        var datasetIndex = me.index;\r\n                        var isHorizontal = scale.isHorizontal();\r\n                        var start = isHorizontal ? scale.left : scale.top;\r\n                        var end = start + (isHorizontal ? scale.width : scale.height);\r\n                        var pixels = [];\r\n                        var i, ilen, min;\r\n\r\n                        for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\r\n                            pixels.push(scale.getPixelForValue(null, i, datasetIndex));\r\n                        }\r\n\r\n                        min = helpers.isNullOrUndef(scale.options.barThickness)\r\n                            ? computeMinSampleSize(scale, pixels)\r\n                            : -1;\r\n\r\n                        return {\r\n                            min: min,\r\n                            pixels: pixels,\r\n                            start: start,\r\n                            end: end,\r\n                            stackCount: stackCount,\r\n                            scale: scale\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Note: pixel values are not clamped to the scale area.\r\n                     * @private\r\n                     */\r\n                    calculateBarValuePixels: function(datasetIndex, index) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var scale = me.getValueScale();\r\n                        var datasets = chart.data.datasets;\r\n                        var value = scale.getRightValue(datasets[datasetIndex].data[index]);\r\n                        var stacked = scale.options.stacked;\r\n                        var stack = meta.stack;\r\n                        var start = 0;\r\n                        var i, imeta, ivalue, base, head, size;\r\n\r\n                        if (stacked || (stacked === undefined && stack !== undefined)) {\r\n                            for (i = 0; i < datasetIndex; ++i) {\r\n                                imeta = chart.getDatasetMeta(i);\r\n\r\n                                if (imeta.bar &&\r\n                                    imeta.stack === stack &&\r\n                                    imeta.controller.getValueScaleId() === scale.id &&\r\n                                    chart.isDatasetVisible(i)) {\r\n                                    ivalue = scale.getRightValue(datasets[i].data[index]);\r\n                                    if ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\r\n                                        start += ivalue;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        base = scale.getPixelForValue(start);\r\n                        head = scale.getPixelForValue(start + value);\r\n                        size = (head - base) / 2;\r\n\r\n                        return {\r\n                            size: size,\r\n                            base: base,\r\n                            head: head,\r\n                            center: head + size / 2\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    calculateBarIndexPixels: function(datasetIndex, index, ruler) {\r\n                        var me = this;\r\n                        var options = ruler.scale.options;\r\n                        var range = options.barThickness === 'flex'\r\n                            ? computeFlexCategoryTraits(index, ruler, options)\r\n                            : computeFitCategoryTraits(index, ruler, options);\r\n\r\n                        var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\r\n                        var center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\r\n                        var size = Math.min(\r\n                            helpers.valueOrDefault(options.maxBarThickness, Infinity),\r\n                            range.chunk * range.ratio);\r\n\r\n                        return {\r\n                            base: center - size / 2,\r\n                            head: center + size / 2,\r\n                            center: center,\r\n                            size: size\r\n                        };\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var scale = me.getValueScale();\r\n                        var rects = me.getMeta().data;\r\n                        var dataset = me.getDataset();\r\n                        var ilen = rects.length;\r\n                        var i = 0;\r\n\r\n                        helpers.canvas.clipArea(chart.ctx, chart.chartArea);\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            if (!isNaN(scale.getRightValue(dataset.data[i]))) {\r\n                                rects[i].draw();\r\n                            }\r\n                        }\r\n\r\n                        helpers.canvas.unclipArea(chart.ctx);\r\n                    },\r\n\r\n                    setHoverStyle: function(rectangle) {\r\n                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n                        var index = rectangle._index;\r\n                        var custom = rectangle.custom || {};\r\n                        var model = rectangle._model;\r\n\r\n                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    removeHoverStyle: function(rectangle) {\r\n                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n                        var index = rectangle._index;\r\n                        var custom = rectangle.custom || {};\r\n                        var model = rectangle._model;\r\n                        var rectangleElementOptions = this.chart.options.elements.rectangle;\r\n\r\n                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\r\n                        model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\r\n                        model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\r\n                    }\r\n                });\r\n\r\n                Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScaleId: function() {\r\n                        return this.getMeta().xAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScaleId: function() {\r\n                        return this.getMeta().yAxisID;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 11: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('doughnut', {\r\n                animation: {\r\n                    // Boolean - Whether we animate the rotation of the Doughnut\r\n                    animateRotate: true,\r\n                    // Boolean - Whether we animate scaling the Doughnut from the centre\r\n                    animateScale: false\r\n                },\r\n                hover: {\r\n                    mode: 'single'\r\n                },\r\n                legendCallback: function(chart) {\r\n                    var text = [];\r\n                    text.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n                    var data = chart.data;\r\n                    var datasets = data.datasets;\r\n                    var labels = data.labels;\r\n\r\n                    if (datasets.length) {\r\n                        for (var i = 0; i < datasets[0].data.length; ++i) {\r\n                            text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\r\n                            if (labels[i]) {\r\n                                text.push(labels[i]);\r\n                            }\r\n                            text.push('</li>');\r\n                        }\r\n                    }\r\n\r\n                    text.push('</ul>');\r\n                    return text.join('');\r\n                },\r\n                legend: {\r\n                    labels: {\r\n                        generateLabels: function(chart) {\r\n                            var data = chart.data;\r\n                            if (data.labels.length && data.datasets.length) {\r\n                                return data.labels.map(function(label, i) {\r\n                                    var meta = chart.getDatasetMeta(0);\r\n                                    var ds = data.datasets[0];\r\n                                    var arc = meta.data[i];\r\n                                    var custom = arc && arc.custom || {};\r\n                                    var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n                                    var arcOpts = chart.options.elements.arc;\r\n                                    var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n                                    var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n                                    var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\r\n                                    return {\r\n                                        text: label,\r\n                                        fillStyle: fill,\r\n                                        strokeStyle: stroke,\r\n                                        lineWidth: bw,\r\n                                        hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n                                        // Extra data used for toggling the correct item\r\n                                        index: i\r\n                                    };\r\n                                });\r\n                            }\r\n                            return [];\r\n                        }\r\n                    },\r\n\r\n                    onClick: function(e, legendItem) {\r\n                        var index = legendItem.index;\r\n                        var chart = this.chart;\r\n                        var i, ilen, meta;\r\n\r\n                        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n                            meta = chart.getDatasetMeta(i);\r\n                            // toggle visibility of index if exists\r\n                            if (meta.data[index]) {\r\n                                meta.data[index].hidden = !meta.data[index].hidden;\r\n                            }\r\n                        }\r\n\r\n                        chart.update();\r\n                    }\r\n                },\r\n\r\n                // The percentage of the chart that we cut out of the middle.\r\n                cutoutPercentage: 50,\r\n\r\n                // The rotation of the chart, where the first data arc begins.\r\n                rotation: Math.PI * -0.5,\r\n\r\n                // The total circumference of the chart.\r\n                circumference: Math.PI * 2.0,\r\n\r\n                // Need to override these to give a nice default\r\n                tooltips: {\r\n                    callbacks: {\r\n                        title: function() {\r\n                            return '';\r\n                        },\r\n                        label: function(tooltipItem, data) {\r\n                            var dataLabel = data.labels[tooltipItem.index];\r\n                            var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\r\n                            if (helpers.isArray(dataLabel)) {\r\n                                // show value on first line of multiline label\r\n                                // need to clone because we are changing the value\r\n                                dataLabel = dataLabel.slice();\r\n                                dataLabel[0] += value;\r\n                            } else {\r\n                                dataLabel += value;\r\n                            }\r\n\r\n                            return dataLabel;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            defaults._set('pie', helpers.clone(defaults.doughnut));\r\n            defaults._set('pie', {\r\n                cutoutPercentage: 0\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\r\n                    dataElementType: elements.Arc,\r\n\r\n                    linkScales: helpers.noop,\r\n\r\n                    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\r\n                    getRingIndex: function(datasetIndex) {\r\n                        var ringIndex = 0;\r\n\r\n                        for (var j = 0; j < datasetIndex; ++j) {\r\n                            if (this.chart.isDatasetVisible(j)) {\r\n                                ++ringIndex;\r\n                            }\r\n                        }\r\n\r\n                        return ringIndex;\r\n                    },\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var chartArea = chart.chartArea;\r\n                        var opts = chart.options;\r\n                        var arcOpts = opts.elements.arc;\r\n                        var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\r\n                        var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\r\n                        var minSize = Math.min(availableWidth, availableHeight);\r\n                        var offset = { x: 0, y: 0 };\r\n                        var meta = me.getMeta();\r\n                        var cutoutPercentage = opts.cutoutPercentage;\r\n                        var circumference = opts.circumference;\r\n\r\n                        // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\r\n                        if (circumference < Math.PI * 2.0) {\r\n                            var startAngle = opts.rotation % (Math.PI * 2.0);\r\n                            startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\r\n                            var endAngle = startAngle + circumference;\r\n                            var start = { x: Math.cos(startAngle), y: Math.sin(startAngle) };\r\n                            var end = { x: Math.cos(endAngle), y: Math.sin(endAngle) };\r\n                            var contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\r\n                            var contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\r\n                            var contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\r\n                            var contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\r\n                            var cutout = cutoutPercentage / 100.0;\r\n                            var min = { x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout)) };\r\n                            var max = { x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout)) };\r\n                            var size = { width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5 };\r\n                            minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\r\n                            offset = { x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5 };\r\n                        }\r\n\r\n                        chart.borderWidth = me.getMaxBorderWidth(meta.data);\r\n                        chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\r\n                        chart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\r\n                        chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n                        chart.offsetX = offset.x * chart.outerRadius;\r\n                        chart.offsetY = offset.y * chart.outerRadius;\r\n\r\n                        meta.total = me.calculateTotal();\r\n\r\n                        me.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\r\n                        me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\r\n\r\n                        helpers.each(meta.data, function(arc, index) {\r\n                            me.updateElement(arc, index, reset);\r\n                        });\r\n                    },\r\n\r\n                    updateElement: function(arc, index, reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var chartArea = chart.chartArea;\r\n                        var opts = chart.options;\r\n                        var animationOpts = opts.animation;\r\n                        var centerX = (chartArea.left + chartArea.right) / 2;\r\n                        var centerY = (chartArea.top + chartArea.bottom) / 2;\r\n                        var startAngle = opts.rotation; // non reset case handled later\r\n                        var endAngle = opts.rotation; // non reset case handled later\r\n                        var dataset = me.getDataset();\r\n                        var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\r\n                        var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\r\n                        var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\r\n                        var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n\r\n                        helpers.extend(arc, {\r\n                            // Utility\r\n                            _datasetIndex: me.index,\r\n                            _index: index,\r\n\r\n                            // Desired view properties\r\n                            _model: {\r\n                                x: centerX + chart.offsetX,\r\n                                y: centerY + chart.offsetY,\r\n                                startAngle: startAngle,\r\n                                endAngle: endAngle,\r\n                                circumference: circumference,\r\n                                outerRadius: outerRadius,\r\n                                innerRadius: innerRadius,\r\n                                label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\r\n                            }\r\n                        });\r\n\r\n                        var model = arc._model;\r\n                        // Resets the visual styles\r\n                        this.removeHoverStyle(arc);\r\n\r\n                        // Set correct angles if not resetting\r\n                        if (!reset || !animationOpts.animateRotate) {\r\n                            if (index === 0) {\r\n                                model.startAngle = opts.rotation;\r\n                            } else {\r\n                                model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\r\n                            }\r\n\r\n                            model.endAngle = model.startAngle + model.circumference;\r\n                        }\r\n\r\n                        arc.pivot();\r\n                    },\r\n\r\n                    removeHoverStyle: function(arc) {\r\n                        Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n                    },\r\n\r\n                    calculateTotal: function() {\r\n                        var dataset = this.getDataset();\r\n                        var meta = this.getMeta();\r\n                        var total = 0;\r\n                        var value;\r\n\r\n                        helpers.each(meta.data, function(element, index) {\r\n                            value = dataset.data[index];\r\n                            if (!isNaN(value) && !element.hidden) {\r\n                                total += Math.abs(value);\r\n                            }\r\n                        });\r\n\r\n                        /* if (total === 0) {\r\n                            total = NaN;\r\n                        }*/\r\n\r\n                        return total;\r\n                    },\r\n\r\n                    calculateCircumference: function(value) {\r\n                        var total = this.getMeta().total;\r\n                        if (total > 0 && !isNaN(value)) {\r\n                            return (Math.PI * 2.0) * (Math.abs(value) / total);\r\n                        }\r\n                        return 0;\r\n                    },\r\n\r\n                    // gets the max border or hover width to properly scale pie charts\r\n                    getMaxBorderWidth: function(arcs) {\r\n                        var max = 0;\r\n                        var index = this.index;\r\n                        var length = arcs.length;\r\n                        var borderWidth;\r\n                        var hoverWidth;\r\n\r\n                        for (var i = 0; i < length; i++) {\r\n                            borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\r\n                            hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\r\n\r\n                            max = borderWidth > max ? borderWidth : max;\r\n                            max = hoverWidth > max ? hoverWidth : max;\r\n                        }\r\n                        return max;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 12: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('line', {\r\n                showLines: true,\r\n                spanGaps: false,\r\n\r\n                hover: {\r\n                    mode: 'label'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'category',\r\n                        id: 'x-axis-0'\r\n                    }],\r\n                    yAxes: [{\r\n                        type: 'linear',\r\n                        id: 'y-axis-0'\r\n                    }]\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                function lineEnabled(dataset, options) {\r\n                    return helpers.valueOrDefault(dataset.showLine, options.showLines);\r\n                }\r\n\r\n                Chart.controllers.line = Chart.DatasetController.extend({\r\n                    datasetElementType: elements.Line,\r\n\r\n                    dataElementType: elements.Point,\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var line = meta.dataset;\r\n                        var points = meta.data || [];\r\n                        var options = me.chart.options;\r\n                        var lineElementOptions = options.elements.line;\r\n                        var scale = me.getScaleForId(meta.yAxisID);\r\n                        var i, ilen, custom;\r\n                        var dataset = me.getDataset();\r\n                        var showLine = lineEnabled(dataset, options);\r\n\r\n                        // Update Line\r\n                        if (showLine) {\r\n                            custom = line.custom || {};\r\n\r\n                            // Compatibility: If the properties are defined with only the old name, use those values\r\n                            if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n                                dataset.lineTension = dataset.tension;\r\n                            }\r\n\r\n                            // Utility\r\n                            line._scale = scale;\r\n                            line._datasetIndex = me.index;\r\n                            // Data\r\n                            line._children = points;\r\n                            // Model\r\n                            line._model = {\r\n                                // Appearance\r\n                                // The default behavior of lines is to break at null values, according\r\n                                // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\r\n                                // This option gives lines the ability to span gaps\r\n                                spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\r\n                                tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n                                backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n                                borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n                                borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n                                borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n                                borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n                                borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n                                borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n                                fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n                                steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\r\n                                cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\r\n                            };\r\n\r\n                            line.pivot();\r\n                        }\r\n\r\n                        // Update Points\r\n                        for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                            me.updateElement(points[i], i, reset);\r\n                        }\r\n\r\n                        if (showLine && line._model.tension !== 0) {\r\n                            me.updateBezierControlPoints();\r\n                        }\r\n\r\n                        // Now pivot the point for animation\r\n                        for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                            points[i].pivot();\r\n                        }\r\n                    },\r\n\r\n                    getPointBackgroundColor: function(point, index) {\r\n                        var backgroundColor = this.chart.options.elements.point.backgroundColor;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (custom.backgroundColor) {\r\n                            backgroundColor = custom.backgroundColor;\r\n                        } else if (dataset.pointBackgroundColor) {\r\n                            backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\r\n                        } else if (dataset.backgroundColor) {\r\n                            backgroundColor = dataset.backgroundColor;\r\n                        }\r\n\r\n                        return backgroundColor;\r\n                    },\r\n\r\n                    getPointBorderColor: function(point, index) {\r\n                        var borderColor = this.chart.options.elements.point.borderColor;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (custom.borderColor) {\r\n                            borderColor = custom.borderColor;\r\n                        } else if (dataset.pointBorderColor) {\r\n                            borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\r\n                        } else if (dataset.borderColor) {\r\n                            borderColor = dataset.borderColor;\r\n                        }\r\n\r\n                        return borderColor;\r\n                    },\r\n\r\n                    getPointBorderWidth: function(point, index) {\r\n                        var borderWidth = this.chart.options.elements.point.borderWidth;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (!isNaN(custom.borderWidth)) {\r\n                            borderWidth = custom.borderWidth;\r\n                        } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\r\n                            borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\r\n                        } else if (!isNaN(dataset.borderWidth)) {\r\n                            borderWidth = dataset.borderWidth;\r\n                        }\r\n\r\n                        return borderWidth;\r\n                    },\r\n\r\n                    updateElement: function(point, index, reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var custom = point.custom || {};\r\n                        var dataset = me.getDataset();\r\n                        var datasetIndex = me.index;\r\n                        var value = dataset.data[index];\r\n                        var yScale = me.getScaleForId(meta.yAxisID);\r\n                        var xScale = me.getScaleForId(meta.xAxisID);\r\n                        var pointOptions = me.chart.options.elements.point;\r\n                        var x, y;\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n                            dataset.pointRadius = dataset.radius;\r\n                        }\r\n                        if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\r\n                            dataset.pointHitRadius = dataset.hitRadius;\r\n                        }\r\n\r\n                        x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\r\n                        y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\r\n\r\n                        // Utility\r\n                        point._xScale = xScale;\r\n                        point._yScale = yScale;\r\n                        point._datasetIndex = datasetIndex;\r\n                        point._index = index;\r\n\r\n                        // Desired view properties\r\n                        point._model = {\r\n                            x: x,\r\n                            y: y,\r\n                            skip: custom.skip || isNaN(x) || isNaN(y),\r\n                            // Appearance\r\n                            radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\r\n                            pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\r\n                            backgroundColor: me.getPointBackgroundColor(point, index),\r\n                            borderColor: me.getPointBorderColor(point, index),\r\n                            borderWidth: me.getPointBorderWidth(point, index),\r\n                            tension: meta.dataset._model ? meta.dataset._model.tension : 0,\r\n                            steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\r\n                            // Tooltip\r\n                            hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\r\n                        };\r\n                    },\r\n\r\n                    calculatePointY: function(value, index, datasetIndex) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var yScale = me.getScaleForId(meta.yAxisID);\r\n                        var sumPos = 0;\r\n                        var sumNeg = 0;\r\n                        var i, ds, dsMeta;\r\n\r\n                        if (yScale.options.stacked) {\r\n                            for (i = 0; i < datasetIndex; i++) {\r\n                                ds = chart.data.datasets[i];\r\n                                dsMeta = chart.getDatasetMeta(i);\r\n                                if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\r\n                                    var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\r\n                                    if (stackedRightValue < 0) {\r\n                                        sumNeg += stackedRightValue || 0;\r\n                                    } else {\r\n                                        sumPos += stackedRightValue || 0;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            var rightValue = Number(yScale.getRightValue(value));\r\n                            if (rightValue < 0) {\r\n                                return yScale.getPixelForValue(sumNeg + rightValue);\r\n                            }\r\n                            return yScale.getPixelForValue(sumPos + rightValue);\r\n                        }\r\n\r\n                        return yScale.getPixelForValue(value);\r\n                    },\r\n\r\n                    updateBezierControlPoints: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var area = me.chart.chartArea;\r\n                        var points = (meta.data || []);\r\n                        var i, ilen, point, model, controlPoints;\r\n\r\n                        // Only consider points that are drawn in case the spanGaps option is used\r\n                        if (meta.dataset._model.spanGaps) {\r\n                            points = points.filter(function(pt) {\r\n                                return !pt._model.skip;\r\n                            });\r\n                        }\r\n\r\n                        function capControlPoint(pt, min, max) {\r\n                            return Math.max(Math.min(pt, max), min);\r\n                        }\r\n\r\n                        if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\r\n                            helpers.splineCurveMonotone(points);\r\n                        } else {\r\n                            for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                                point = points[i];\r\n                                model = point._model;\r\n                                controlPoints = helpers.splineCurve(\r\n                                    helpers.previousItem(points, i)._model,\r\n                                    model,\r\n                                    helpers.nextItem(points, i)._model,\r\n                                    meta.dataset._model.tension\r\n                                );\r\n                                model.controlPointPreviousX = controlPoints.previous.x;\r\n                                model.controlPointPreviousY = controlPoints.previous.y;\r\n                                model.controlPointNextX = controlPoints.next.x;\r\n                                model.controlPointNextY = controlPoints.next.y;\r\n                            }\r\n                        }\r\n\r\n                        if (me.chart.options.elements.line.capBezierPoints) {\r\n                            for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                                model = points[i]._model;\r\n                                model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\r\n                                model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\r\n                                model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\r\n                                model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var points = meta.data || [];\r\n                        var area = chart.chartArea;\r\n                        var ilen = points.length;\r\n                        var i = 0;\r\n\r\n                        helpers.canvas.clipArea(chart.ctx, area);\r\n\r\n                        if (lineEnabled(me.getDataset(), chart.options)) {\r\n                            meta.dataset.draw();\r\n                        }\r\n\r\n                        helpers.canvas.unclipArea(chart.ctx);\r\n\r\n                        // Draw the points\r\n                        for (; i < ilen; ++i) {\r\n                            points[i].draw(area);\r\n                        }\r\n                    },\r\n\r\n                    setHoverStyle: function(point) {\r\n                        // Point\r\n                        var dataset = this.chart.data.datasets[point._datasetIndex];\r\n                        var index = point._index;\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n\r\n                        model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n                        model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    removeHoverStyle: function(point) {\r\n                        var me = this;\r\n                        var dataset = me.chart.data.datasets[point._datasetIndex];\r\n                        var index = point._index;\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n                            dataset.pointRadius = dataset.radius;\r\n                        }\r\n\r\n                        model.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\r\n                        model.backgroundColor = me.getPointBackgroundColor(point, index);\r\n                        model.borderColor = me.getPointBorderColor(point, index);\r\n                        model.borderWidth = me.getPointBorderWidth(point, index);\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 13: [function(require, module, exports) {\r\n            /* global window: false */\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                animation: {\r\n                    duration: 1000,\r\n                    easing: 'easeOutQuart',\r\n                    onProgress: helpers.noop,\r\n                    onComplete: helpers.noop\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Animation = Element.extend({\r\n                    chart: null, // the animation associated chart instance\r\n                    currentStep: 0, // the current animation step\r\n                    numSteps: 60, // default number of steps\r\n                    easing: '', // the easing to use for this animation\r\n                    render: null, // render function used by the animation service\r\n\r\n                    onAnimationProgress: null, // user specified callback to fire on each step of the animation\r\n                    onAnimationComplete: null, // user specified callback to fire when the animation finishes\r\n                });\r\n\r\n                Chart.animationService = {\r\n                    frameDuration: 17,\r\n                    animations: [],\r\n                    dropFrames: 0,\r\n                    request: null,\r\n\r\n                    /**\r\n                     * @param {Chart} chart - The chart to animate.\r\n                     * @param {Chart.Animation} animation - The animation that we will animate.\r\n                     * @param {Number} duration - The animation duration in ms.\r\n                     * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\r\n                     */\r\n                    addAnimation: function(chart, animation, duration, lazy) {\r\n                        var animations = this.animations;\r\n                        var i, ilen;\r\n\r\n                        animation.chart = chart;\r\n\r\n                        if (!lazy) {\r\n                            chart.animating = true;\r\n                        }\r\n\r\n                        for (i = 0, ilen = animations.length; i < ilen; ++i) {\r\n                            if (animations[i].chart === chart) {\r\n                                animations[i] = animation;\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        animations.push(animation);\r\n\r\n                        // If there are no animations queued, manually kickstart a digest, for lack of a better word\r\n                        if (animations.length === 1) {\r\n                            this.requestAnimationFrame();\r\n                        }\r\n                    },\r\n\r\n                    cancelAnimation: function(chart) {\r\n                        var index = helpers.findIndex(this.animations, function(animation) {\r\n                            return animation.chart === chart;\r\n                        });\r\n\r\n                        if (index !== -1) {\r\n                            this.animations.splice(index, 1);\r\n                            chart.animating = false;\r\n                        }\r\n                    },\r\n\r\n                    requestAnimationFrame: function() {\r\n                        var me = this;\r\n                        if (me.request === null) {\r\n                            // Skip animation frame requests until the active one is executed.\r\n                            // This can happen when processing mouse events, e.g. 'mousemove'\r\n                            // and 'mouseout' events will trigger multiple renders.\r\n                            me.request = helpers.requestAnimFrame.call(window, function() {\r\n                                me.request = null;\r\n                                me.startDigest();\r\n                            });\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    startDigest: function() {\r\n                        var me = this;\r\n                        var startTime = Date.now();\r\n                        var framesToDrop = 0;\r\n\r\n                        if (me.dropFrames > 1) {\r\n                            framesToDrop = Math.floor(me.dropFrames);\r\n                            me.dropFrames = me.dropFrames % 1;\r\n                        }\r\n\r\n                        me.advance(1 + framesToDrop);\r\n\r\n                        var endTime = Date.now();\r\n\r\n                        me.dropFrames += (endTime - startTime) / me.frameDuration;\r\n\r\n                        // Do we have more stuff to animate?\r\n                        if (me.animations.length > 0) {\r\n                            me.requestAnimationFrame();\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    advance: function(count) {\r\n                        var animations = this.animations;\r\n                        var animation, chart;\r\n                        var i = 0;\r\n\r\n                        while (i < animations.length) {\r\n                            animation = animations[i];\r\n                            chart = animation.chart;\r\n\r\n                            animation.currentStep = (animation.currentStep || 0) + count;\r\n                            animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\r\n\r\n                            helpers.callback(animation.render, [chart, animation], chart);\r\n                            helpers.callback(animation.onAnimationProgress, [animation], chart);\r\n\r\n                            if (animation.currentStep >= animation.numSteps) {\r\n                                helpers.callback(animation.onAnimationComplete, [animation], chart);\r\n                                chart.animating = false;\r\n                                animations.splice(i, 1);\r\n                            } else {\r\n                                ++i;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.Animation instead\r\n                 * @prop Chart.Animation#animationObject\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 */\r\n                Object.defineProperty(Chart.Animation.prototype, 'animationObject', {\r\n                    get: function() {\r\n                        return this;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.Animation#chart instead\r\n                 * @prop Chart.Animation#chartInstance\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 */\r\n                Object.defineProperty(Chart.Animation.prototype, 'chartInstance', {\r\n                    get: function() {\r\n                        return this.chart;\r\n                    },\r\n                    set: function(value) {\r\n                        this.chart = value;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 14: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var Interaction = require(19);\r\n            var layouts = require(21);\r\n            var platform = require(39);\r\n            var plugins = require(22);\r\n\r\n            module.exports = function(Chart) {\r\n                // Create a dictionary of chart types, to allow for extension of existing types\r\n                Chart.types = {};\r\n\r\n                // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\r\n                // Destroy method on the chart will remove the instance of the chart from this reference.\r\n                Chart.instances = {};\r\n\r\n                // Controllers available for dataset visualization eg. bar, line, slice, etc.\r\n                Chart.controllers = {};\r\n\r\n                /**\r\n                 * Initializes the given config with global and chart default values.\r\n                 */\r\n                function initConfig(config) {\r\n                    config = config || {};\r\n\r\n                    // Do NOT use configMerge() for the data object because this method merges arrays\r\n                    // and so would change references to labels and datasets, preventing data updates.\r\n                    var data = config.data = config.data || {};\r\n                    data.datasets = data.datasets || [];\r\n                    data.labels = data.labels || [];\r\n\r\n                    config.options = helpers.configMerge(\r\n                        defaults.global,\r\n                        defaults[config.type],\r\n                        config.options || {});\r\n\r\n                    return config;\r\n                }\r\n\r\n                /**\r\n                 * Updates the config of the chart\r\n                 * @param chart {Chart} chart to update the options for\r\n                 */\r\n                function updateConfig(chart) {\r\n                    var newOptions = chart.options;\r\n\r\n                    helpers.each(chart.scales, function(scale) {\r\n                        layouts.removeBox(chart, scale);\r\n                    });\r\n\r\n                    newOptions = helpers.configMerge(\r\n                        Chart.defaults.global,\r\n                        Chart.defaults[chart.config.type],\r\n                        newOptions);\r\n\r\n                    chart.options = chart.config.options = newOptions;\r\n                    chart.ensureScalesHaveIDs();\r\n                    chart.buildOrUpdateScales();\r\n                    // Tooltip\r\n                    chart.tooltip._options = newOptions.tooltips;\r\n                    chart.tooltip.initialize();\r\n                }\r\n\r\n                function positionIsHorizontal(position) {\r\n                    return position === 'top' || position === 'bottom';\r\n                }\r\n\r\n                helpers.extend(Chart.prototype, /** @lends Chart */ {\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    construct: function(item, config) {\r\n                        var me = this;\r\n\r\n                        config = initConfig(config);\r\n\r\n                        var context = platform.acquireContext(item, config);\r\n                        var canvas = context && context.canvas;\r\n                        var height = canvas && canvas.height;\r\n                        var width = canvas && canvas.width;\r\n\r\n                        me.id = helpers.uid();\r\n                        me.ctx = context;\r\n                        me.canvas = canvas;\r\n                        me.config = config;\r\n                        me.width = width;\r\n                        me.height = height;\r\n                        me.aspectRatio = height ? width / height : null;\r\n                        me.options = config.options;\r\n                        me._bufferedRender = false;\r\n\r\n                        /**\r\n                         * Provided for backward compatibility, Chart and Chart.Controller have been merged,\r\n                         * the \"instance\" still need to be defined since it might be called from plugins.\r\n                         * @prop Chart#chart\r\n                         * @deprecated since version 2.6.0\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        me.chart = me;\r\n                        me.controller = me; // chart.chart.controller #inception\r\n\r\n                        // Add the chart instance to the global namespace\r\n                        Chart.instances[me.id] = me;\r\n\r\n                        // Define alias to the config data: `chart.data === chart.config.data`\r\n                        Object.defineProperty(me, 'data', {\r\n                            get: function() {\r\n                                return me.config.data;\r\n                            },\r\n                            set: function(value) {\r\n                                me.config.data = value;\r\n                            }\r\n                        });\r\n\r\n                        if (!context || !canvas) {\r\n                            // The given item is not a compatible context2d element, let's return before finalizing\r\n                            // the chart initialization but after setting basic chart / controller properties that\r\n                            // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\r\n                            // https://github.com/chartjs/Chart.js/issues/2807\r\n                            console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n                            return;\r\n                        }\r\n\r\n                        me.initialize();\r\n                        me.update();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    initialize: function() {\r\n                        var me = this;\r\n\r\n                        // Before init plugin notification\r\n                        plugins.notify(me, 'beforeInit');\r\n\r\n                        helpers.retinaScale(me, me.options.devicePixelRatio);\r\n\r\n                        me.bindEvents();\r\n\r\n                        if (me.options.responsive) {\r\n                            // Initial resize before chart draws (must be silent to preserve initial animations).\r\n                            me.resize(true);\r\n                        }\r\n\r\n                        // Make sure scales have IDs and are built before we build any controllers.\r\n                        me.ensureScalesHaveIDs();\r\n                        me.buildOrUpdateScales();\r\n                        me.initToolTip();\r\n\r\n                        // After init plugin notification\r\n                        plugins.notify(me, 'afterInit');\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    clear: function() {\r\n                        helpers.canvas.clear(this);\r\n                        return this;\r\n                    },\r\n\r\n                    stop: function() {\r\n                        // Stops any current animation loop occurring\r\n                        Chart.animationService.cancelAnimation(this);\r\n                        return this;\r\n                    },\r\n\r\n                    resize: function(silent) {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        var canvas = me.canvas;\r\n                        var aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\r\n\r\n                        // the canvas render width and height will be casted to integers so make sure that\r\n                        // the canvas display style uses the same integer values to avoid blurring effect.\r\n\r\n                        // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\r\n                        var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\r\n                        var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\r\n\r\n                        if (me.width === newWidth && me.height === newHeight) {\r\n                            return;\r\n                        }\r\n\r\n                        canvas.width = me.width = newWidth;\r\n                        canvas.height = me.height = newHeight;\r\n                        canvas.style.width = newWidth + 'px';\r\n                        canvas.style.height = newHeight + 'px';\r\n\r\n                        helpers.retinaScale(me, options.devicePixelRatio);\r\n\r\n                        if (!silent) {\r\n                            // Notify any plugins about the resize\r\n                            var newSize = { width: newWidth, height: newHeight };\r\n                            plugins.notify(me, 'resize', [newSize]);\r\n\r\n                            // Notify of resize\r\n                            if (me.options.onResize) {\r\n                                me.options.onResize(me, newSize);\r\n                            }\r\n\r\n                            me.stop();\r\n                            me.update(me.options.responsiveAnimationDuration);\r\n                        }\r\n                    },\r\n\r\n                    ensureScalesHaveIDs: function() {\r\n                        var options = this.options;\r\n                        var scalesOptions = options.scales || {};\r\n                        var scaleOptions = options.scale;\r\n\r\n                        helpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\r\n                            xAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\r\n                        });\r\n\r\n                        helpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\r\n                            yAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\r\n                        });\r\n\r\n                        if (scaleOptions) {\r\n                            scaleOptions.id = scaleOptions.id || 'scale';\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Builds a map of scale ID to scale object for future lookup.\r\n                     */\r\n                    buildOrUpdateScales: function() {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        var scales = me.scales || {};\r\n                        var items = [];\r\n                        var updated = Object.keys(scales).reduce(function(obj, id) {\r\n                            obj[id] = false;\r\n                            return obj;\r\n                        }, {});\r\n\r\n                        if (options.scales) {\r\n                            items = items.concat(\r\n                                (options.scales.xAxes || []).map(function(xAxisOptions) {\r\n                                    return { options: xAxisOptions, dtype: 'category', dposition: 'bottom' };\r\n                                }),\r\n                                (options.scales.yAxes || []).map(function(yAxisOptions) {\r\n                                    return { options: yAxisOptions, dtype: 'linear', dposition: 'left' };\r\n                                })\r\n                            );\r\n                        }\r\n\r\n                        if (options.scale) {\r\n                            items.push({\r\n                                options: options.scale,\r\n                                dtype: 'radialLinear',\r\n                                isDefault: true,\r\n                                dposition: 'chartArea'\r\n                            });\r\n                        }\r\n\r\n                        helpers.each(items, function(item) {\r\n                            var scaleOptions = item.options;\r\n                            var id = scaleOptions.id;\r\n                            var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\r\n\r\n                            if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\r\n                                scaleOptions.position = item.dposition;\r\n                            }\r\n\r\n                            updated[id] = true;\r\n                            var scale = null;\r\n                            if (id in scales && scales[id].type === scaleType) {\r\n                                scale = scales[id];\r\n                                scale.options = scaleOptions;\r\n                                scale.ctx = me.ctx;\r\n                                scale.chart = me;\r\n                            } else {\r\n                                var scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\r\n                                if (!scaleClass) {\r\n                                    return;\r\n                                }\r\n                                scale = new scaleClass({\r\n                                    id: id,\r\n                                    type: scaleType,\r\n                                    options: scaleOptions,\r\n                                    ctx: me.ctx,\r\n                                    chart: me\r\n                                });\r\n                                scales[scale.id] = scale;\r\n                            }\r\n\r\n                            scale.mergeTicksOptions();\r\n\r\n                            // TODO(SB): I think we should be able to remove this custom case (options.scale)\r\n                            // and consider it as a regular scale part of the \"scales\"\" map only! This would\r\n                            // make the logic easier and remove some useless? custom code.\r\n                            if (item.isDefault) {\r\n                                me.scale = scale;\r\n                            }\r\n                        });\r\n                        // clear up discarded scales\r\n                        helpers.each(updated, function(hasUpdated, id) {\r\n                            if (!hasUpdated) {\r\n                                delete scales[id];\r\n                            }\r\n                        });\r\n\r\n                        me.scales = scales;\r\n\r\n                        Chart.scaleService.addScalesToLayout(this);\r\n                    },\r\n\r\n                    buildOrUpdateControllers: function() {\r\n                        var me = this;\r\n                        var types = [];\r\n                        var newControllers = [];\r\n\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            var meta = me.getDatasetMeta(datasetIndex);\r\n                            var type = dataset.type || me.config.type;\r\n\r\n                            if (meta.type && meta.type !== type) {\r\n                                me.destroyDatasetMeta(datasetIndex);\r\n                                meta = me.getDatasetMeta(datasetIndex);\r\n                            }\r\n                            meta.type = type;\r\n\r\n                            types.push(meta.type);\r\n\r\n                            if (meta.controller) {\r\n                                meta.controller.updateIndex(datasetIndex);\r\n                                meta.controller.linkScales();\r\n                            } else {\r\n                                var ControllerClass = Chart.controllers[meta.type];\r\n                                if (ControllerClass === undefined) {\r\n                                    throw new Error('\"' + meta.type + '\" is not a chart type.');\r\n                                }\r\n\r\n                                meta.controller = new ControllerClass(me, datasetIndex);\r\n                                newControllers.push(meta.controller);\r\n                            }\r\n                        }, me);\r\n\r\n                        return newControllers;\r\n                    },\r\n\r\n                    /**\r\n                     * Reset the elements of all datasets\r\n                     * @private\r\n                     */\r\n                    resetElements: function() {\r\n                        var me = this;\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            me.getDatasetMeta(datasetIndex).controller.reset();\r\n                        }, me);\r\n                    },\r\n\r\n                    /**\r\n                    * Resets the chart back to it's state before the initial animation\r\n                    */\r\n                    reset: function() {\r\n                        this.resetElements();\r\n                        this.tooltip.initialize();\r\n                    },\r\n\r\n                    update: function(config) {\r\n                        var me = this;\r\n\r\n                        if (!config || typeof config !== 'object') {\r\n                            // backwards compatibility\r\n                            config = {\r\n                                duration: config,\r\n                                lazy: arguments[1]\r\n                            };\r\n                        }\r\n\r\n                        updateConfig(me);\r\n\r\n                        // plugins options references might have change, let's invalidate the cache\r\n                        // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\r\n                        plugins._invalidate(me);\r\n\r\n                        if (plugins.notify(me, 'beforeUpdate') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // In case the entire data object changed\r\n                        me.tooltip._data = me.data;\r\n\r\n                        // Make sure dataset controllers are updated and new controllers are reset\r\n                        var newControllers = me.buildOrUpdateControllers();\r\n\r\n                        // Make sure all dataset controllers have correct meta data counts\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\r\n                        }, me);\r\n\r\n                        me.updateLayout();\r\n\r\n                        // Can only reset the new controllers after the scales have been updated\r\n                        if (me.options.animation && me.options.animation.duration) {\r\n                            helpers.each(newControllers, function(controller) {\r\n                                controller.reset();\r\n                            });\r\n                        }\r\n\r\n                        me.updateDatasets();\r\n\r\n                        // Need to reset tooltip in case it is displayed with elements that are removed\r\n                        // after update.\r\n                        me.tooltip.initialize();\r\n\r\n                        // Last active contains items that were previously in the tooltip.\r\n                        // When we reset the tooltip, we need to clear it\r\n                        me.lastActive = [];\r\n\r\n                        // Do this before render so that any plugins that need final scale updates can use it\r\n                        plugins.notify(me, 'afterUpdate');\r\n\r\n                        if (me._bufferedRender) {\r\n                            me._bufferedRequest = {\r\n                                duration: config.duration,\r\n                                easing: config.easing,\r\n                                lazy: config.lazy\r\n                            };\r\n                        } else {\r\n                            me.render(config);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\r\n                     * hook, in which case, plugins will not be called on `afterLayout`.\r\n                     * @private\r\n                     */\r\n                    updateLayout: function() {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeLayout') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        layouts.update(this, this.width, this.height);\r\n\r\n                        /**\r\n                         * Provided for backward compatibility, use `afterLayout` instead.\r\n                         * @method IPlugin#afterScaleUpdate\r\n                         * @deprecated since version 2.5.0\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        plugins.notify(me, 'afterScaleUpdate');\r\n                        plugins.notify(me, 'afterLayout');\r\n                    },\r\n\r\n                    /**\r\n                     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\r\n                     * @private\r\n                     */\r\n                    updateDatasets: function() {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                            me.updateDataset(i);\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterDatasetsUpdate');\r\n                    },\r\n\r\n                    /**\r\n                     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\r\n                     * @private\r\n                     */\r\n                    updateDataset: function(index) {\r\n                        var me = this;\r\n                        var meta = me.getDatasetMeta(index);\r\n                        var args = {\r\n                            meta: meta,\r\n                            index: index\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        meta.controller.update();\r\n\r\n                        plugins.notify(me, 'afterDatasetUpdate', [args]);\r\n                    },\r\n\r\n                    render: function(config) {\r\n                        var me = this;\r\n\r\n                        if (!config || typeof config !== 'object') {\r\n                            // backwards compatibility\r\n                            config = {\r\n                                duration: config,\r\n                                lazy: arguments[1]\r\n                            };\r\n                        }\r\n\r\n                        var duration = config.duration;\r\n                        var lazy = config.lazy;\r\n\r\n                        if (plugins.notify(me, 'beforeRender') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        var animationOptions = me.options.animation;\r\n                        var onComplete = function(animation) {\r\n                            plugins.notify(me, 'afterRender');\r\n                            helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\r\n                        };\r\n\r\n                        if (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\r\n                            var animation = new Chart.Animation({\r\n                                numSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\r\n                                easing: config.easing || animationOptions.easing,\r\n\r\n                                render: function(chart, animationObject) {\r\n                                    var easingFunction = helpers.easing.effects[animationObject.easing];\r\n                                    var currentStep = animationObject.currentStep;\r\n                                    var stepDecimal = currentStep / animationObject.numSteps;\r\n\r\n                                    chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\r\n                                },\r\n\r\n                                onAnimationProgress: animationOptions.onProgress,\r\n                                onAnimationComplete: onComplete\r\n                            });\r\n\r\n                            Chart.animationService.addAnimation(me, animation, duration, lazy);\r\n                        } else {\r\n                            me.draw();\r\n\r\n                            // See https://github.com/chartjs/Chart.js/issues/3781\r\n                            onComplete(new Chart.Animation({ numSteps: 0, chart: me }));\r\n                        }\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    draw: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        me.clear();\r\n\r\n                        if (helpers.isNullOrUndef(easingValue)) {\r\n                            easingValue = 1;\r\n                        }\r\n\r\n                        me.transition(easingValue);\r\n\r\n                        if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Draw all the scales\r\n                        helpers.each(me.boxes, function(box) {\r\n                            box.draw(me.chartArea);\r\n                        }, me);\r\n\r\n                        if (me.scale) {\r\n                            me.scale.draw();\r\n                        }\r\n\r\n                        me.drawDatasets(easingValue);\r\n                        me._drawTooltip(easingValue);\r\n\r\n                        plugins.notify(me, 'afterDraw', [easingValue]);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    transition: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\r\n                            if (me.isDatasetVisible(i)) {\r\n                                me.getDatasetMeta(i).controller.transition(easingValue);\r\n                            }\r\n                        }\r\n\r\n                        me.tooltip.transition(easingValue);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\r\n                     * @private\r\n                     */\r\n                    drawDatasets: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Draw datasets reversed to support proper line stacking\r\n                        for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\r\n                            if (me.isDatasetVisible(i)) {\r\n                                me.drawDataset(i, easingValue);\r\n                            }\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\r\n                     * @private\r\n                     */\r\n                    drawDataset: function(index, easingValue) {\r\n                        var me = this;\r\n                        var meta = me.getDatasetMeta(index);\r\n                        var args = {\r\n                            meta: meta,\r\n                            index: index,\r\n                            easingValue: easingValue\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        meta.controller.draw(easingValue);\r\n\r\n                        plugins.notify(me, 'afterDatasetDraw', [args]);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\r\n                     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\r\n                     * @private\r\n                     */\r\n                    _drawTooltip: function(easingValue) {\r\n                        var me = this;\r\n                        var tooltip = me.tooltip;\r\n                        var args = {\r\n                            tooltip: tooltip,\r\n                            easingValue: easingValue\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        tooltip.draw();\r\n\r\n                        plugins.notify(me, 'afterTooltipDraw', [args]);\r\n                    },\r\n\r\n                    // Get the single element that was clicked on\r\n                    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\r\n                    getElementAtEvent: function(e) {\r\n                        return Interaction.modes.single(this, e);\r\n                    },\r\n\r\n                    getElementsAtEvent: function(e) {\r\n                        return Interaction.modes.label(this, e, { intersect: true });\r\n                    },\r\n\r\n                    getElementsAtXAxis: function(e) {\r\n                        return Interaction.modes['x-axis'](this, e, { intersect: true });\r\n                    },\r\n\r\n                    getElementsAtEventForMode: function(e, mode, options) {\r\n                        var method = Interaction.modes[mode];\r\n                        if (typeof method === 'function') {\r\n                            return method(this, e, options);\r\n                        }\r\n\r\n                        return [];\r\n                    },\r\n\r\n                    getDatasetAtEvent: function(e) {\r\n                        return Interaction.modes.dataset(this, e, { intersect: true });\r\n                    },\r\n\r\n                    getDatasetMeta: function(datasetIndex) {\r\n                        var me = this;\r\n                        var dataset = me.data.datasets[datasetIndex];\r\n                        if (!dataset._meta) {\r\n                            dataset._meta = {};\r\n                        }\r\n\r\n                        var meta = dataset._meta[me.id];\r\n                        if (!meta) {\r\n                            meta = dataset._meta[me.id] = {\r\n                                type: null,\r\n                                data: [],\r\n                                dataset: null,\r\n                                controller: null,\r\n                                hidden: null,\t\t\t// See isDatasetVisible() comment\r\n                                xAxisID: null,\r\n                                yAxisID: null\r\n                            };\r\n                        }\r\n\r\n                        return meta;\r\n                    },\r\n\r\n                    getVisibleDatasetCount: function() {\r\n                        var count = 0;\r\n                        for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n                            if (this.isDatasetVisible(i)) {\r\n                                count++;\r\n                            }\r\n                        }\r\n                        return count;\r\n                    },\r\n\r\n                    isDatasetVisible: function(datasetIndex) {\r\n                        var meta = this.getDatasetMeta(datasetIndex);\r\n\r\n                        // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\r\n                        // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\r\n                        return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\r\n                    },\r\n\r\n                    generateLegend: function() {\r\n                        return this.options.legendCallback(this);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    destroyDatasetMeta: function(datasetIndex) {\r\n                        var id = this.id;\r\n                        var dataset = this.data.datasets[datasetIndex];\r\n                        var meta = dataset._meta && dataset._meta[id];\r\n\r\n                        if (meta) {\r\n                            meta.controller.destroy();\r\n                            delete dataset._meta[id];\r\n                        }\r\n                    },\r\n\r\n                    destroy: function() {\r\n                        var me = this;\r\n                        var canvas = me.canvas;\r\n                        var i, ilen;\r\n\r\n                        me.stop();\r\n\r\n                        // dataset controllers need to cleanup associated data\r\n                        for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                            me.destroyDatasetMeta(i);\r\n                        }\r\n\r\n                        if (canvas) {\r\n                            me.unbindEvents();\r\n                            helpers.canvas.clear(me);\r\n                            platform.releaseContext(me.ctx);\r\n                            me.canvas = null;\r\n                            me.ctx = null;\r\n                        }\r\n\r\n                        plugins.notify(me, 'destroy');\r\n\r\n                        delete Chart.instances[me.id];\r\n                    },\r\n\r\n                    toBase64Image: function() {\r\n                        return this.canvas.toDataURL.apply(this.canvas, arguments);\r\n                    },\r\n\r\n                    initToolTip: function() {\r\n                        var me = this;\r\n                        me.tooltip = new Chart.Tooltip({\r\n                            _chart: me,\r\n                            _chartInstance: me, // deprecated, backward compatibility\r\n                            _data: me.data,\r\n                            _options: me.options.tooltips\r\n                        }, me);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    bindEvents: function() {\r\n                        var me = this;\r\n                        var listeners = me._listeners = {};\r\n                        var listener = function() {\r\n                            me.eventHandler.apply(me, arguments);\r\n                        };\r\n\r\n                        helpers.each(me.options.events, function(type) {\r\n                            platform.addEventListener(me, type, listener);\r\n                            listeners[type] = listener;\r\n                        });\r\n\r\n                        // Elements used to detect size change should not be injected for non responsive charts.\r\n                        // See https://github.com/chartjs/Chart.js/issues/2210\r\n                        if (me.options.responsive) {\r\n                            listener = function() {\r\n                                me.resize();\r\n                            };\r\n\r\n                            platform.addEventListener(me, 'resize', listener);\r\n                            listeners.resize = listener;\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    unbindEvents: function() {\r\n                        var me = this;\r\n                        var listeners = me._listeners;\r\n                        if (!listeners) {\r\n                            return;\r\n                        }\r\n\r\n                        delete me._listeners;\r\n                        helpers.each(listeners, function(listener, type) {\r\n                            platform.removeEventListener(me, type, listener);\r\n                        });\r\n                    },\r\n\r\n                    updateHoverStyle: function(elements, mode, enabled) {\r\n                        var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\r\n                        var element, i, ilen;\r\n\r\n                        for (i = 0, ilen = elements.length; i < ilen; ++i) {\r\n                            element = elements[i];\r\n                            if (element) {\r\n                                this.getDatasetMeta(element._datasetIndex).controller[method](element);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    eventHandler: function(e) {\r\n                        var me = this;\r\n                        var tooltip = me.tooltip;\r\n\r\n                        if (plugins.notify(me, 'beforeEvent', [e]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Buffer any update calls so that renders do not occur\r\n                        me._bufferedRender = true;\r\n                        me._bufferedRequest = null;\r\n\r\n                        var changed = me.handleEvent(e);\r\n                        // for smooth tooltip animations issue #4989\r\n                        // the tooltip should be the source of change\r\n                        // Animation check workaround:\r\n                        // tooltip._start will be null when tooltip isn't animating\r\n                        if (tooltip) {\r\n                            changed = tooltip._start\r\n                                ? tooltip.handleEvent(e)\r\n                                : changed | tooltip.handleEvent(e);\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterEvent', [e]);\r\n\r\n                        var bufferedRequest = me._bufferedRequest;\r\n                        if (bufferedRequest) {\r\n                            // If we have an update that was triggered, we need to do a normal render\r\n                            me.render(bufferedRequest);\r\n                        } else if (changed && !me.animating) {\r\n                            // If entering, leaving, or changing elements, animate the change via pivot\r\n                            me.stop();\r\n\r\n                            // We only need to render at this point. Updating will cause scales to be\r\n                            // recomputed generating flicker & using more memory than necessary.\r\n                            me.render(me.options.hover.animationDuration, true);\r\n                        }\r\n\r\n                        me._bufferedRender = false;\r\n                        me._bufferedRequest = null;\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    /**\r\n                     * Handle an event\r\n                     * @private\r\n                     * @param {IEvent} event the event to handle\r\n                     * @return {Boolean} true if the chart needs to re-render\r\n                     */\r\n                    handleEvent: function(e) {\r\n                        var me = this;\r\n                        var options = me.options || {};\r\n                        var hoverOptions = options.hover;\r\n                        var changed = false;\r\n\r\n                        me.lastActive = me.lastActive || [];\r\n\r\n                        // Find Active Elements for hover and tooltips\r\n                        if (e.type === 'mouseout') {\r\n                            me.active = [];\r\n                        } else {\r\n                            me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\r\n                        }\r\n\r\n                        // Invoke onHover hook\r\n                        // Need to call with native event here to not break backwards compatibility\r\n                        helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\r\n\r\n                        if (e.type === 'mouseup' || e.type === 'click') {\r\n                            if (options.onClick) {\r\n                                // Use e.native here for backwards compatibility\r\n                                options.onClick.call(me, e.native, me.active);\r\n                            }\r\n                        }\r\n\r\n                        // Remove styling for last active (even if it may still be active)\r\n                        if (me.lastActive.length) {\r\n                            me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\r\n                        }\r\n\r\n                        // Built in hover styling\r\n                        if (me.active.length && hoverOptions.mode) {\r\n                            me.updateHoverStyle(me.active, hoverOptions.mode, true);\r\n                        }\r\n\r\n                        changed = !helpers.arrayEquals(me.active, me.lastActive);\r\n\r\n                        // Remember Last Actives\r\n                        me.lastActive = me.active;\r\n\r\n                        return changed;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart instead.\r\n                 * @class Chart.Controller\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 * @private\r\n                 */\r\n                Chart.Controller = Chart;\r\n            };\r\n        }, { \"16\": 16, \"19\": 19, \"21\": 21, \"22\": 22, \"36\": 36, \"39\": 39 }], 15: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            module.exports = function(Chart) {\r\n                var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\r\n\r\n                /**\r\n                 * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\r\n                 * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\r\n                 * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\r\n                 */\r\n                function listenArrayEvents(array, listener) {\r\n                    if (array._chartjs) {\r\n                        array._chartjs.listeners.push(listener);\r\n                        return;\r\n                    }\r\n\r\n                    Object.defineProperty(array, '_chartjs', {\r\n                        configurable: true,\r\n                        enumerable: false,\r\n                        value: {\r\n                            listeners: [listener]\r\n                        }\r\n                    });\r\n\r\n                    arrayEvents.forEach(function(key) {\r\n                        var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\r\n                        var base = array[key];\r\n\r\n                        Object.defineProperty(array, key, {\r\n                            configurable: true,\r\n                            enumerable: false,\r\n                            value: function() {\r\n                                var args = Array.prototype.slice.call(arguments);\r\n                                var res = base.apply(this, args);\r\n\r\n                                helpers.each(array._chartjs.listeners, function(object) {\r\n                                    if (typeof object[method] === 'function') {\r\n                                        object[method].apply(object, args);\r\n                                    }\r\n                                });\r\n\r\n                                return res;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Removes the given array event listener and cleanup extra attached properties (such as\r\n                 * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\r\n                 */\r\n                function unlistenArrayEvents(array, listener) {\r\n                    var stub = array._chartjs;\r\n                    if (!stub) {\r\n                        return;\r\n                    }\r\n\r\n                    var listeners = stub.listeners;\r\n                    var index = listeners.indexOf(listener);\r\n                    if (index !== -1) {\r\n                        listeners.splice(index, 1);\r\n                    }\r\n\r\n                    if (listeners.length > 0) {\r\n                        return;\r\n                    }\r\n\r\n                    arrayEvents.forEach(function(key) {\r\n                        delete array[key];\r\n                    });\r\n\r\n                    delete array._chartjs;\r\n                }\r\n\r\n                // Base class for all dataset controllers (line, bar, etc)\r\n                Chart.DatasetController = function(chart, datasetIndex) {\r\n                    this.initialize(chart, datasetIndex);\r\n                };\r\n\r\n                helpers.extend(Chart.DatasetController.prototype, {\r\n                    /**\r\n                     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\r\n                     * @type {Chart.core.element}\r\n                     */\r\n                    datasetElementType: null,\r\n\r\n                    /**\r\n                     * Element type used to generate a meta data (e.g. Chart.element.Point).\r\n                     * @type {Chart.core.element}\r\n                     */\r\n                    dataElementType: null,\r\n\r\n                    initialize: function(chart, datasetIndex) {\r\n                        var me = this;\r\n                        me.chart = chart;\r\n                        me.index = datasetIndex;\r\n                        me.linkScales();\r\n                        me.addElements();\r\n                    },\r\n\r\n                    updateIndex: function(datasetIndex) {\r\n                        this.index = datasetIndex;\r\n                    },\r\n\r\n                    linkScales: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var dataset = me.getDataset();\r\n\r\n                        if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\r\n                            meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\r\n                        }\r\n                        if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\r\n                            meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\r\n                        }\r\n                    },\r\n\r\n                    getDataset: function() {\r\n                        return this.chart.data.datasets[this.index];\r\n                    },\r\n\r\n                    getMeta: function() {\r\n                        return this.chart.getDatasetMeta(this.index);\r\n                    },\r\n\r\n                    getScaleForId: function(scaleID) {\r\n                        return this.chart.scales[scaleID];\r\n                    },\r\n\r\n                    reset: function() {\r\n                        this.update(true);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    destroy: function() {\r\n                        if (this._data) {\r\n                            unlistenArrayEvents(this._data, this);\r\n                        }\r\n                    },\r\n\r\n                    createMetaDataset: function() {\r\n                        var me = this;\r\n                        var type = me.datasetElementType;\r\n                        return type && new type({\r\n                            _chart: me.chart,\r\n                            _datasetIndex: me.index\r\n                        });\r\n                    },\r\n\r\n                    createMetaData: function(index) {\r\n                        var me = this;\r\n                        var type = me.dataElementType;\r\n                        return type && new type({\r\n                            _chart: me.chart,\r\n                            _datasetIndex: me.index,\r\n                            _index: index\r\n                        });\r\n                    },\r\n\r\n                    addElements: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var data = me.getDataset().data || [];\r\n                        var metaData = meta.data;\r\n                        var i, ilen;\r\n\r\n                        for (i = 0, ilen = data.length; i < ilen; ++i) {\r\n                            metaData[i] = metaData[i] || me.createMetaData(i);\r\n                        }\r\n\r\n                        meta.dataset = meta.dataset || me.createMetaDataset();\r\n                    },\r\n\r\n                    addElementAndReset: function(index) {\r\n                        var element = this.createMetaData(index);\r\n                        this.getMeta().data.splice(index, 0, element);\r\n                        this.updateElement(element, index, true);\r\n                    },\r\n\r\n                    buildOrUpdateElements: function() {\r\n                        var me = this;\r\n                        var dataset = me.getDataset();\r\n                        var data = dataset.data || (dataset.data = []);\r\n\r\n                        // In order to correctly handle data addition/deletion animation (an thus simulate\r\n                        // real-time charts), we need to monitor these data modifications and synchronize\r\n                        // the internal meta data accordingly.\r\n                        if (me._data !== data) {\r\n                            if (me._data) {\r\n                                // This case happens when the user replaced the data array instance.\r\n                                unlistenArrayEvents(me._data, me);\r\n                            }\r\n\r\n                            listenArrayEvents(data, me);\r\n                            me._data = data;\r\n                        }\r\n\r\n                        // Re-sync meta data in case the user replaced the data array or if we missed\r\n                        // any updates and so make sure that we handle number of datapoints changing.\r\n                        me.resyncElements();\r\n                    },\r\n\r\n                    update: helpers.noop,\r\n\r\n                    transition: function(easingValue) {\r\n                        var meta = this.getMeta();\r\n                        var elements = meta.data || [];\r\n                        var ilen = elements.length;\r\n                        var i = 0;\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            elements[i].transition(easingValue);\r\n                        }\r\n\r\n                        if (meta.dataset) {\r\n                            meta.dataset.transition(easingValue);\r\n                        }\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var meta = this.getMeta();\r\n                        var elements = meta.data || [];\r\n                        var ilen = elements.length;\r\n                        var i = 0;\r\n\r\n                        if (meta.dataset) {\r\n                            meta.dataset.draw();\r\n                        }\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            elements[i].draw();\r\n                        }\r\n                    },\r\n\r\n                    removeHoverStyle: function(element, elementOpts) {\r\n                        var dataset = this.chart.data.datasets[element._datasetIndex];\r\n                        var index = element._index;\r\n                        var custom = element.custom || {};\r\n                        var valueOrDefault = helpers.valueAtIndexOrDefault;\r\n                        var model = element._model;\r\n\r\n                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\r\n                        model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\r\n                        model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\r\n                    },\r\n\r\n                    setHoverStyle: function(element) {\r\n                        var dataset = this.chart.data.datasets[element._datasetIndex];\r\n                        var index = element._index;\r\n                        var custom = element.custom || {};\r\n                        var valueOrDefault = helpers.valueAtIndexOrDefault;\r\n                        var getHoverColor = helpers.getHoverColor;\r\n                        var model = element._model;\r\n\r\n                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    resyncElements: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var data = me.getDataset().data;\r\n                        var numMeta = meta.data.length;\r\n                        var numData = data.length;\r\n\r\n                        if (numData < numMeta) {\r\n                            meta.data.splice(numData, numMeta - numData);\r\n                        } else if (numData > numMeta) {\r\n                            me.insertElements(numMeta, numData - numMeta);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    insertElements: function(start, count) {\r\n                        for (var i = 0; i < count; ++i) {\r\n                            this.addElementAndReset(start + i);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataPush: function() {\r\n                        this.insertElements(this.getDataset().data.length - 1, arguments.length);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataPop: function() {\r\n                        this.getMeta().data.pop();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataShift: function() {\r\n                        this.getMeta().data.shift();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataSplice: function(start, count) {\r\n                        this.getMeta().data.splice(start, count);\r\n                        this.insertElements(start, arguments.length - 2);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataUnshift: function() {\r\n                        this.insertElements(0, arguments.length);\r\n                    }\r\n                });\r\n\r\n                Chart.DatasetController.extend = helpers.inherits;\r\n            };\r\n        }, { \"36\": 36 }], 16: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            module.exports = {\r\n                /**\r\n                 * @private\r\n                 */\r\n                _set: function(scope, values) {\r\n                    return helpers.merge(this[scope] || (this[scope] = {}), values);\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 17: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var color = require(2);\r\n            var helpers = require(36);\r\n\r\n            function interpolate(start, view, model, ease) {\r\n                var keys = Object.keys(model);\r\n                var i, ilen, key, actual, origin, target, type, c0, c1;\r\n\r\n                for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n                    key = keys[i];\r\n\r\n                    target = model[key];\r\n\r\n                    // if a value is added to the model after pivot() has been called, the view\r\n                    // doesn't contain it, so let's initialize the view to the target value.\r\n                    if (!view.hasOwnProperty(key)) {\r\n                        view[key] = target;\r\n                    }\r\n\r\n                    actual = view[key];\r\n\r\n                    if (actual === target || key[0] === '_') {\r\n                        continue;\r\n                    }\r\n\r\n                    if (!start.hasOwnProperty(key)) {\r\n                        start[key] = actual;\r\n                    }\r\n\r\n                    origin = start[key];\r\n\r\n                    type = typeof target;\r\n\r\n                    if (type === typeof origin) {\r\n                        if (type === 'string') {\r\n                            c0 = color(origin);\r\n                            if (c0.valid) {\r\n                                c1 = color(target);\r\n                                if (c1.valid) {\r\n                                    view[key] = c1.mix(c0, ease).rgbString();\r\n                                    continue;\r\n                                }\r\n                            }\r\n                        } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\r\n                            view[key] = origin + (target - origin) * ease;\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    view[key] = target;\r\n                }\r\n            }\r\n\r\n            var Element = function(configuration) {\r\n                helpers.extend(this, configuration);\r\n                this.initialize.apply(this, arguments);\r\n            };\r\n\r\n            helpers.extend(Element.prototype, {\r\n                initialize: function() {\r\n                    this.hidden = false;\r\n                },\r\n\r\n                pivot: function() {\r\n                    var me = this;\r\n                    if (!me._view) {\r\n                        me._view = helpers.clone(me._model);\r\n                    }\r\n                    me._start = {};\r\n                    return me;\r\n                },\r\n\r\n                transition: function(ease) {\r\n                    var me = this;\r\n                    var model = me._model;\r\n                    var start = me._start;\r\n                    var view = me._view;\r\n\r\n                    // No animation -> No Transition\r\n                    if (!model || ease === 1) {\r\n                        me._view = model;\r\n                        me._start = null;\r\n                        return me;\r\n                    }\r\n\r\n                    if (!view) {\r\n                        view = me._view = {};\r\n                    }\r\n\r\n                    if (!start) {\r\n                        start = me._start = {};\r\n                    }\r\n\r\n                    interpolate(start, view, model, ease);\r\n\r\n                    return me;\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    return {\r\n                        x: this._model.x,\r\n                        y: this._model.y\r\n                    };\r\n                },\r\n\r\n                hasValue: function() {\r\n                    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\r\n                }\r\n            });\r\n\r\n            Element.extend = helpers.inherits;\r\n\r\n            module.exports = Element;\r\n        }, { \"2\": 2, \"36\": 36 }], 18: [function(require, module, exports) {\r\n            /* global window: false */\r\n            /* global document: false */\r\n            'use strict';\r\n\r\n            var color = require(2);\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n\r\n            module.exports = function(Chart) {\r\n                // -- Basic js utility methods\r\n\r\n                helpers.configMerge = function(/* objects ... */) {\r\n                    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\r\n                        merger: function(key, target, source, options) {\r\n                            var tval = target[key] || {};\r\n                            var sval = source[key];\r\n\r\n                            if (key === 'scales') {\r\n                                // scale config merging is complex. Add our own function here for that\r\n                                target[key] = helpers.scaleMerge(tval, sval);\r\n                            } else if (key === 'scale') {\r\n                                // used in polar area & radar charts since there is only one scale\r\n                                target[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\r\n                            } else {\r\n                                helpers._merger(key, target, source, options);\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n\r\n                helpers.scaleMerge = function(/* objects ... */) {\r\n                    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\r\n                        merger: function(key, target, source, options) {\r\n                            if (key === 'xAxes' || key === 'yAxes') {\r\n                                var slen = source[key].length;\r\n                                var i, type, scale;\r\n\r\n                                if (!target[key]) {\r\n                                    target[key] = [];\r\n                                }\r\n\r\n                                for (i = 0; i < slen; ++i) {\r\n                                    scale = source[key][i];\r\n                                    type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\r\n\r\n                                    if (i >= target[key].length) {\r\n                                        target[key].push({});\r\n                                    }\r\n\r\n                                    if (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\r\n                                        // new/untyped scale or type changed: let's apply the new defaults\r\n                                        // then merge source scale to correctly overwrite the defaults.\r\n                                        helpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\r\n                                    } else {\r\n                                        // scales type are the same\r\n                                        helpers.merge(target[key][i], scale);\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                helpers._merger(key, target, source, options);\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n\r\n                helpers.where = function(collection, filterCallback) {\r\n                    if (helpers.isArray(collection) && Array.prototype.filter) {\r\n                        return collection.filter(filterCallback);\r\n                    }\r\n                    var filtered = [];\r\n\r\n                    helpers.each(collection, function(item) {\r\n                        if (filterCallback(item)) {\r\n                            filtered.push(item);\r\n                        }\r\n                    });\r\n\r\n                    return filtered;\r\n                };\r\n                helpers.findIndex = Array.prototype.findIndex ?\r\n                    function(array, callback, scope) {\r\n                        return array.findIndex(callback, scope);\r\n                    } :\r\n                    function(array, callback, scope) {\r\n                        scope = scope === undefined ? array : scope;\r\n                        for (var i = 0, ilen = array.length; i < ilen; ++i) {\r\n                            if (callback.call(scope, array[i], i, array)) {\r\n                                return i;\r\n                            }\r\n                        }\r\n                        return -1;\r\n                    };\r\n                helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n                    // Default to start of the array\r\n                    if (helpers.isNullOrUndef(startIndex)) {\r\n                        startIndex = -1;\r\n                    }\r\n                    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\r\n                        var currentItem = arrayToSearch[i];\r\n                        if (filterCallback(currentItem)) {\r\n                            return currentItem;\r\n                        }\r\n                    }\r\n                };\r\n                helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n                    // Default to end of the array\r\n                    if (helpers.isNullOrUndef(startIndex)) {\r\n                        startIndex = arrayToSearch.length;\r\n                    }\r\n                    for (var i = startIndex - 1; i >= 0; i--) {\r\n                        var currentItem = arrayToSearch[i];\r\n                        if (filterCallback(currentItem)) {\r\n                            return currentItem;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // -- Math methods\r\n                helpers.isNumber = function(n) {\r\n                    return !isNaN(parseFloat(n)) && isFinite(n);\r\n                };\r\n                helpers.almostEquals = function(x, y, epsilon) {\r\n                    return Math.abs(x - y) < epsilon;\r\n                };\r\n                helpers.almostWhole = function(x, epsilon) {\r\n                    var rounded = Math.round(x);\r\n                    return (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\r\n                };\r\n                helpers.max = function(array) {\r\n                    return array.reduce(function(max, value) {\r\n                        if (!isNaN(value)) {\r\n                            return Math.max(max, value);\r\n                        }\r\n                        return max;\r\n                    }, Number.NEGATIVE_INFINITY);\r\n                };\r\n                helpers.min = function(array) {\r\n                    return array.reduce(function(min, value) {\r\n                        if (!isNaN(value)) {\r\n                            return Math.min(min, value);\r\n                        }\r\n                        return min;\r\n                    }, Number.POSITIVE_INFINITY);\r\n                };\r\n                helpers.sign = Math.sign ?\r\n                    function(x) {\r\n                        return Math.sign(x);\r\n                    } :\r\n                    function(x) {\r\n                        x = +x; // convert to a number\r\n                        if (x === 0 || isNaN(x)) {\r\n                            return x;\r\n                        }\r\n                        return x > 0 ? 1 : -1;\r\n                    };\r\n                helpers.log10 = Math.log10 ?\r\n                    function(x) {\r\n                        return Math.log10(x);\r\n                    } :\r\n                    function(x) {\r\n                        var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\r\n                        // Check for whole powers of 10,\r\n                        // which due to floating point rounding error should be corrected.\r\n                        var powerOf10 = Math.round(exponent);\r\n                        var isPowerOf10 = x === Math.pow(10, powerOf10);\r\n\r\n                        return isPowerOf10 ? powerOf10 : exponent;\r\n                    };\r\n                helpers.toRadians = function(degrees) {\r\n                    return degrees * (Math.PI / 180);\r\n                };\r\n                helpers.toDegrees = function(radians) {\r\n                    return radians * (180 / Math.PI);\r\n                };\r\n                // Gets the angle from vertical upright to the point about a centre.\r\n                helpers.getAngleFromPoint = function(centrePoint, anglePoint) {\r\n                    var distanceFromXCenter = anglePoint.x - centrePoint.x;\r\n                    var distanceFromYCenter = anglePoint.y - centrePoint.y;\r\n                    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n\r\n                    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n\r\n                    if (angle < (-0.5 * Math.PI)) {\r\n                        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\r\n                    }\r\n\r\n                    return {\r\n                        angle: angle,\r\n                        distance: radialDistanceFromCenter\r\n                    };\r\n                };\r\n                helpers.distanceBetweenPoints = function(pt1, pt2) {\r\n                    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\r\n                };\r\n                helpers.aliasPixel = function(pixelWidth) {\r\n                    return (pixelWidth % 2 === 0) ? 0 : 0.5;\r\n                };\r\n                helpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\r\n                    // Props to Rob Spencer at scaled innovation for his post on splining between points\r\n                    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\r\n\r\n                    // This function must also respect \"skipped\" points\r\n\r\n                    var previous = firstPoint.skip ? middlePoint : firstPoint;\r\n                    var current = middlePoint;\r\n                    var next = afterPoint.skip ? middlePoint : afterPoint;\r\n\r\n                    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\r\n                    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\r\n\r\n                    var s01 = d01 / (d01 + d12);\r\n                    var s12 = d12 / (d01 + d12);\r\n\r\n                    // If all points are the same, s01 & s02 will be inf\r\n                    s01 = isNaN(s01) ? 0 : s01;\r\n                    s12 = isNaN(s12) ? 0 : s12;\r\n\r\n                    var fa = t * s01; // scaling factor for triangle Ta\r\n                    var fb = t * s12;\r\n\r\n                    return {\r\n                        previous: {\r\n                            x: current.x - fa * (next.x - previous.x),\r\n                            y: current.y - fa * (next.y - previous.y)\r\n                        },\r\n                        next: {\r\n                            x: current.x + fb * (next.x - previous.x),\r\n                            y: current.y + fb * (next.y - previous.y)\r\n                        }\r\n                    };\r\n                };\r\n                helpers.EPSILON = Number.EPSILON || 1e-14;\r\n                helpers.splineCurveMonotone = function(points) {\r\n                    // This function calculates Bézier control points in a similar way than |splineCurve|,\r\n                    // but preserves monotonicity of the provided data and ensures no local extremums are added\r\n                    // between the dataset discrete points due to the interpolation.\r\n                    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\r\n\r\n                    var pointsWithTangents = (points || []).map(function(point) {\r\n                        return {\r\n                            model: point._model,\r\n                            deltaK: 0,\r\n                            mK: 0\r\n                        };\r\n                    });\r\n\r\n                    // Calculate slopes (deltaK) and initialize tangents (mK)\r\n                    var pointsLen = pointsWithTangents.length;\r\n                    var i, pointBefore, pointCurrent, pointAfter;\r\n                    for (i = 0; i < pointsLen; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        if (pointCurrent.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n                        if (pointAfter && !pointAfter.model.skip) {\r\n                            var slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\r\n\r\n                            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\r\n                            pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\r\n                        }\r\n\r\n                        if (!pointBefore || pointBefore.model.skip) {\r\n                            pointCurrent.mK = pointCurrent.deltaK;\r\n                        } else if (!pointAfter || pointAfter.model.skip) {\r\n                            pointCurrent.mK = pointBefore.deltaK;\r\n                        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\r\n                            pointCurrent.mK = 0;\r\n                        } else {\r\n                            pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\r\n                        }\r\n                    }\r\n\r\n                    // Adjust tangents to ensure monotonic properties\r\n                    var alphaK, betaK, tauK, squaredMagnitude;\r\n                    for (i = 0; i < pointsLen - 1; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        pointAfter = pointsWithTangents[i + 1];\r\n                        if (pointCurrent.model.skip || pointAfter.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\r\n                            pointCurrent.mK = pointAfter.mK = 0;\r\n                            continue;\r\n                        }\r\n\r\n                        alphaK = pointCurrent.mK / pointCurrent.deltaK;\r\n                        betaK = pointAfter.mK / pointCurrent.deltaK;\r\n                        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\r\n                        if (squaredMagnitude <= 9) {\r\n                            continue;\r\n                        }\r\n\r\n                        tauK = 3 / Math.sqrt(squaredMagnitude);\r\n                        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\r\n                        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\r\n                    }\r\n\r\n                    // Compute control points\r\n                    var deltaX;\r\n                    for (i = 0; i < pointsLen; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        if (pointCurrent.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n                        if (pointBefore && !pointBefore.model.skip) {\r\n                            deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\r\n                            pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\r\n                            pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\r\n                        }\r\n                        if (pointAfter && !pointAfter.model.skip) {\r\n                            deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\r\n                            pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\r\n                            pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\r\n                        }\r\n                    }\r\n                };\r\n                helpers.nextItem = function(collection, index, loop) {\r\n                    if (loop) {\r\n                        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\r\n                    }\r\n                    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\r\n                };\r\n                helpers.previousItem = function(collection, index, loop) {\r\n                    if (loop) {\r\n                        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\r\n                    }\r\n                    return index <= 0 ? collection[0] : collection[index - 1];\r\n                };\r\n                // Implementation of the nice number algorithm used in determining where axis labels will go\r\n                helpers.niceNum = function(range, round) {\r\n                    var exponent = Math.floor(helpers.log10(range));\r\n                    var fraction = range / Math.pow(10, exponent);\r\n                    var niceFraction;\r\n\r\n                    if (round) {\r\n                        if (fraction < 1.5) {\r\n                            niceFraction = 1;\r\n                        } else if (fraction < 3) {\r\n                            niceFraction = 2;\r\n                        } else if (fraction < 7) {\r\n                            niceFraction = 5;\r\n                        } else {\r\n                            niceFraction = 10;\r\n                        }\r\n                    } else if (fraction <= 1.0) {\r\n                        niceFraction = 1;\r\n                    } else if (fraction <= 2) {\r\n                        niceFraction = 2;\r\n                    } else if (fraction <= 5) {\r\n                        niceFraction = 5;\r\n                    } else {\r\n                        niceFraction = 10;\r\n                    }\r\n\r\n                    return niceFraction * Math.pow(10, exponent);\r\n                };\r\n                // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n                helpers.requestAnimFrame = (function() {\r\n                    if (typeof window === 'undefined') {\r\n                        return function(callback) {\r\n                            callback();\r\n                        };\r\n                    }\r\n                    return window.requestAnimationFrame ||\r\n                        window.webkitRequestAnimationFrame ||\r\n                        window.mozRequestAnimationFrame ||\r\n                        window.oRequestAnimationFrame ||\r\n                        window.msRequestAnimationFrame ||\r\n                        function(callback) {\r\n                            return window.setTimeout(callback, 1000 / 60);\r\n                        };\r\n                }());\r\n                // -- DOM methods\r\n                helpers.getRelativePosition = function(evt, chart) {\r\n                    var mouseX, mouseY;\r\n                    var e = evt.originalEvent || evt;\r\n                    var canvas = evt.currentTarget || evt.srcElement;\r\n                    var boundingRect = canvas.getBoundingClientRect();\r\n\r\n                    var touches = e.touches;\r\n                    if (touches && touches.length > 0) {\r\n                        mouseX = touches[0].clientX;\r\n                        mouseY = touches[0].clientY;\r\n                    } else {\r\n                        mouseX = e.clientX;\r\n                        mouseY = e.clientY;\r\n                    }\r\n\r\n                    // Scale mouse coordinates into canvas coordinates\r\n                    // by following the pattern laid out by 'jerryj' in the comments of\r\n                    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\r\n                    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\r\n                    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\r\n                    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\r\n                    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\r\n                    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\r\n                    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\r\n\r\n                    // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\r\n                    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\r\n                    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\r\n                    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\r\n\r\n                    return {\r\n                        x: mouseX,\r\n                        y: mouseY\r\n                    };\r\n                };\r\n\r\n                // Private helper function to convert max-width/max-height values that may be percentages into a number\r\n                function parseMaxStyle(styleValue, node, parentProperty) {\r\n                    var valueInPixels;\r\n                    if (typeof styleValue === 'string') {\r\n                        valueInPixels = parseInt(styleValue, 10);\r\n\r\n                        if (styleValue.indexOf('%') !== -1) {\r\n                            // percentage * size in dimension\r\n                            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\r\n                        }\r\n                    } else {\r\n                        valueInPixels = styleValue;\r\n                    }\r\n\r\n                    return valueInPixels;\r\n                }\r\n\r\n                /**\r\n                 * Returns if the given value contains an effective constraint.\r\n                 * @private\r\n                 */\r\n                function isConstrainedValue(value) {\r\n                    return value !== undefined && value !== null && value !== 'none';\r\n                }\r\n\r\n                // Private helper to get a constraint dimension\r\n                // @param domNode : the node to check the constraint on\r\n                // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\r\n                // @param percentageProperty : property of parent to use when calculating width as a percentage\r\n                // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\r\n                function getConstraintDimension(domNode, maxStyle, percentageProperty) {\r\n                    var view = document.defaultView;\r\n                    var parentNode = domNode.parentNode;\r\n                    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\r\n                    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\r\n                    var hasCNode = isConstrainedValue(constrainedNode);\r\n                    var hasCContainer = isConstrainedValue(constrainedContainer);\r\n                    var infinity = Number.POSITIVE_INFINITY;\r\n\r\n                    if (hasCNode || hasCContainer) {\r\n                        return Math.min(\r\n                            hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\r\n                            hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\r\n                    }\r\n\r\n                    return 'none';\r\n                }\r\n                // returns Number or undefined if no constraint\r\n                helpers.getConstraintWidth = function(domNode) {\r\n                    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\r\n                };\r\n                // returns Number or undefined if no constraint\r\n                helpers.getConstraintHeight = function(domNode) {\r\n                    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\r\n                };\r\n                helpers.getMaximumWidth = function(domNode) {\r\n                    var container = domNode.parentNode;\r\n                    if (!container) {\r\n                        return domNode.clientWidth;\r\n                    }\r\n\r\n                    var paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\r\n                    var paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\r\n                    var w = container.clientWidth - paddingLeft - paddingRight;\r\n                    var cw = helpers.getConstraintWidth(domNode);\r\n                    return isNaN(cw) ? w : Math.min(w, cw);\r\n                };\r\n                helpers.getMaximumHeight = function(domNode) {\r\n                    var container = domNode.parentNode;\r\n                    if (!container) {\r\n                        return domNode.clientHeight;\r\n                    }\r\n\r\n                    var paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\r\n                    var paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\r\n                    var h = container.clientHeight - paddingTop - paddingBottom;\r\n                    var ch = helpers.getConstraintHeight(domNode);\r\n                    return isNaN(ch) ? h : Math.min(h, ch);\r\n                };\r\n                helpers.getStyle = function(el, property) {\r\n                    return el.currentStyle ?\r\n                        el.currentStyle[property] :\r\n                        document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\r\n                };\r\n                helpers.retinaScale = function(chart, forceRatio) {\r\n                    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\r\n                    if (pixelRatio === 1) {\r\n                        return;\r\n                    }\r\n\r\n                    var canvas = chart.canvas;\r\n                    var height = chart.height;\r\n                    var width = chart.width;\r\n\r\n                    canvas.height = height * pixelRatio;\r\n                    canvas.width = width * pixelRatio;\r\n                    chart.ctx.scale(pixelRatio, pixelRatio);\r\n\r\n                    // If no style has been set on the canvas, the render size is used as display size,\r\n                    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\r\n                    // See https://github.com/chartjs/Chart.js/issues/3575\r\n                    if (!canvas.style.height && !canvas.style.width) {\r\n                        canvas.style.height = height + 'px';\r\n                        canvas.style.width = width + 'px';\r\n                    }\r\n                };\r\n                // -- Canvas methods\r\n                helpers.fontString = function(pixelSize, fontStyle, fontFamily) {\r\n                    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\r\n                };\r\n                helpers.longestText = function(ctx, font, arrayOfThings, cache) {\r\n                    cache = cache || {};\r\n                    var data = cache.data = cache.data || {};\r\n                    var gc = cache.garbageCollect = cache.garbageCollect || [];\r\n\r\n                    if (cache.font !== font) {\r\n                        data = cache.data = {};\r\n                        gc = cache.garbageCollect = [];\r\n                        cache.font = font;\r\n                    }\r\n\r\n                    ctx.font = font;\r\n                    var longest = 0;\r\n                    helpers.each(arrayOfThings, function(thing) {\r\n                        // Undefined strings and arrays should not be measured\r\n                        if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\r\n                            longest = helpers.measureText(ctx, data, gc, longest, thing);\r\n                        } else if (helpers.isArray(thing)) {\r\n                            // if it is an array lets measure each element\r\n                            // to do maybe simplify this function a bit so we can do this more recursively?\r\n                            helpers.each(thing, function(nestedThing) {\r\n                                // Undefined strings and arrays should not be measured\r\n                                if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\r\n                                    longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    var gcLen = gc.length / 2;\r\n                    if (gcLen > arrayOfThings.length) {\r\n                        for (var i = 0; i < gcLen; i++) {\r\n                            delete data[gc[i]];\r\n                        }\r\n                        gc.splice(0, gcLen);\r\n                    }\r\n                    return longest;\r\n                };\r\n                helpers.measureText = function(ctx, data, gc, longest, string) {\r\n                    var textWidth = data[string];\r\n                    if (!textWidth) {\r\n                        textWidth = data[string] = ctx.measureText(string).width;\r\n                        gc.push(string);\r\n                    }\r\n                    if (textWidth > longest) {\r\n                        longest = textWidth;\r\n                    }\r\n                    return longest;\r\n                };\r\n                helpers.numberOfLabelLines = function(arrayOfThings) {\r\n                    var numberOfLines = 1;\r\n                    helpers.each(arrayOfThings, function(thing) {\r\n                        if (helpers.isArray(thing)) {\r\n                            if (thing.length > numberOfLines) {\r\n                                numberOfLines = thing.length;\r\n                            }\r\n                        }\r\n                    });\r\n                    return numberOfLines;\r\n                };\r\n\r\n                helpers.color = !color ?\r\n                    function(value) {\r\n                        console.error('Color.js not found!');\r\n                        return value;\r\n                    } :\r\n                    function(value) {\r\n                        /* global CanvasGradient */\r\n                        if (value instanceof CanvasGradient) {\r\n                            value = defaults.global.defaultColor;\r\n                        }\r\n\r\n                        return color(value);\r\n                    };\r\n\r\n                helpers.getHoverColor = function(colorValue) {\r\n                    /* global CanvasPattern */\r\n                    return (colorValue instanceof CanvasPattern) ?\r\n                        colorValue :\r\n                        helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"2\": 2, \"36\": 36 }], 19: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Helper function to get relative position for an event\r\n             * @param {Event|IEvent} event - The event to get the position for\r\n             * @param {Chart} chart - The chart\r\n             * @returns {Point} the event position\r\n             */\r\n            function getRelativePosition(e, chart) {\r\n                if (e.native) {\r\n                    return {\r\n                        x: e.x,\r\n                        y: e.y\r\n                    };\r\n                }\r\n\r\n                return helpers.getRelativePosition(e, chart);\r\n            }\r\n\r\n            /**\r\n             * Helper function to traverse all of the visible elements in the chart\r\n             * @param chart {chart} the chart\r\n             * @param handler {Function} the callback to execute for each visible item\r\n             */\r\n            function parseVisibleItems(chart, handler) {\r\n                var datasets = chart.data.datasets;\r\n                var meta, i, j, ilen, jlen;\r\n\r\n                for (i = 0, ilen = datasets.length; i < ilen; ++i) {\r\n                    if (!chart.isDatasetVisible(i)) {\r\n                        continue;\r\n                    }\r\n\r\n                    meta = chart.getDatasetMeta(i);\r\n                    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\r\n                        var element = meta.data[j];\r\n                        if (!element._view.skip) {\r\n                            handler(element);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the items that intersect the event position\r\n             * @param items {ChartElement[]} elements to filter\r\n             * @param position {Point} the point to be nearest to\r\n             * @return {ChartElement[]} the nearest items\r\n             */\r\n            function getIntersectItems(chart, position) {\r\n                var elements = [];\r\n\r\n                parseVisibleItems(chart, function(element) {\r\n                    if (element.inRange(position.x, position.y)) {\r\n                        elements.push(element);\r\n                    }\r\n                });\r\n\r\n                return elements;\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the items nearest to the event position considering all visible items in teh chart\r\n             * @param chart {Chart} the chart to look at elements from\r\n             * @param position {Point} the point to be nearest to\r\n             * @param intersect {Boolean} if true, only consider items that intersect the position\r\n             * @param distanceMetric {Function} function to provide the distance between points\r\n             * @return {ChartElement[]} the nearest items\r\n             */\r\n            function getNearestItems(chart, position, intersect, distanceMetric) {\r\n                var minDistance = Number.POSITIVE_INFINITY;\r\n                var nearestItems = [];\r\n\r\n                parseVisibleItems(chart, function(element) {\r\n                    if (intersect && !element.inRange(position.x, position.y)) {\r\n                        return;\r\n                    }\r\n\r\n                    var center = element.getCenterPoint();\r\n                    var distance = distanceMetric(position, center);\r\n\r\n                    if (distance < minDistance) {\r\n                        nearestItems = [element];\r\n                        minDistance = distance;\r\n                    } else if (distance === minDistance) {\r\n                        // Can have multiple items at the same distance in which case we sort by size\r\n                        nearestItems.push(element);\r\n                    }\r\n                });\r\n\r\n                return nearestItems;\r\n            }\r\n\r\n            /**\r\n             * Get a distance metric function for two points based on the\r\n             * axis mode setting\r\n             * @param {String} axis the axis mode. x|y|xy\r\n             */\r\n            function getDistanceMetricForAxis(axis) {\r\n                var useX = axis.indexOf('x') !== -1;\r\n                var useY = axis.indexOf('y') !== -1;\r\n\r\n                return function(pt1, pt2) {\r\n                    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n                    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n                    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n                };\r\n            }\r\n\r\n            function indexMode(chart, e, options) {\r\n                var position = getRelativePosition(e, chart);\r\n                // Default axis for index mode is 'x' to match old behaviour\r\n                options.axis = options.axis || 'x';\r\n                var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\r\n                var elements = [];\r\n\r\n                if (!items.length) {\r\n                    return [];\r\n                }\r\n\r\n                chart.data.datasets.forEach(function(dataset, datasetIndex) {\r\n                    if (chart.isDatasetVisible(datasetIndex)) {\r\n                        var meta = chart.getDatasetMeta(datasetIndex);\r\n                        var element = meta.data[items[0]._index];\r\n\r\n                        // don't count items that are skipped (null data)\r\n                        if (element && !element._view.skip) {\r\n                            elements.push(element);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                return elements;\r\n            }\r\n\r\n            /**\r\n             * @interface IInteractionOptions\r\n             */\r\n            /**\r\n             * If true, only consider items that intersect the point\r\n             * @name IInterfaceOptions#boolean\r\n             * @type Boolean\r\n             */\r\n\r\n            /**\r\n             * Contains interaction related functions\r\n             * @namespace Chart.Interaction\r\n             */\r\n            module.exports = {\r\n                // Helper function for different modes\r\n                modes: {\r\n                    single: function(chart, e) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var elements = [];\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                elements.push(element);\r\n                                return elements;\r\n                            }\r\n                        });\r\n\r\n                        return elements.slice(0, 1);\r\n                    },\r\n\r\n                    /**\r\n                     * @function Chart.Interaction.modes.label\r\n                     * @deprecated since version 2.4.0\r\n                     * @todo remove at version 3\r\n                     * @private\r\n                     */\r\n                    label: indexMode,\r\n\r\n                    /**\r\n                     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\r\n                     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\r\n                     * @function Chart.Interaction.modes.index\r\n                     * @since v2.4.0\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use during interaction\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    index: indexMode,\r\n\r\n                    /**\r\n                     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\r\n                     * If the options.intersect is false, we find the nearest item and return the items in that dataset\r\n                     * @function Chart.Interaction.modes.dataset\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use during interaction\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    dataset: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        options.axis = options.axis || 'xy';\r\n                        var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\r\n\r\n                        if (items.length > 0) {\r\n                            items = chart.getDatasetMeta(items[0]._datasetIndex).data;\r\n                        }\r\n\r\n                        return items;\r\n                    },\r\n\r\n                    /**\r\n                     * @function Chart.Interaction.modes.x-axis\r\n                     * @deprecated since version 2.4.0. Use index mode and intersect == true\r\n                     * @todo remove at version 3\r\n                     * @private\r\n                     */\r\n                    'x-axis': function(chart, e) {\r\n                        return indexMode(chart, e, { intersect: false });\r\n                    },\r\n\r\n                    /**\r\n                     * Point mode returns all elements that hit test based on the event position\r\n                     * of the event\r\n                     * @function Chart.Interaction.modes.intersect\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    point: function(chart, e) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        return getIntersectItems(chart, position);\r\n                    },\r\n\r\n                    /**\r\n                     * nearest mode returns the element closest to the point\r\n                     * @function Chart.Interaction.modes.intersect\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    nearest: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        options.axis = options.axis || 'xy';\r\n                        var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                        var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\r\n\r\n                        // We have multiple items at the same distance from the event. Now sort by smallest\r\n                        if (nearestItems.length > 1) {\r\n                            nearestItems.sort(function(a, b) {\r\n                                var sizeA = a.getArea();\r\n                                var sizeB = b.getArea();\r\n                                var ret = sizeA - sizeB;\r\n\r\n                                if (ret === 0) {\r\n                                    // if equal sort by dataset index\r\n                                    ret = a._datasetIndex - b._datasetIndex;\r\n                                }\r\n\r\n                                return ret;\r\n                            });\r\n                        }\r\n\r\n                        // Return only 1 item\r\n                        return nearestItems.slice(0, 1);\r\n                    },\r\n\r\n                    /**\r\n                     * x mode returns the elements that hit-test at the current x coordinate\r\n                     * @function Chart.Interaction.modes.x\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    x: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var items = [];\r\n                        var intersectsItem = false;\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inXRange(position.x)) {\r\n                                items.push(element);\r\n                            }\r\n\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                intersectsItem = true;\r\n                            }\r\n                        });\r\n\r\n                        // If we want to trigger on an intersect and we don't have any items\r\n                        // that intersect the position, return nothing\r\n                        if (options.intersect && !intersectsItem) {\r\n                            items = [];\r\n                        }\r\n                        return items;\r\n                    },\r\n\r\n                    /**\r\n                     * y mode returns the elements that hit-test at the current y coordinate\r\n                     * @function Chart.Interaction.modes.y\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    y: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var items = [];\r\n                        var intersectsItem = false;\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inYRange(position.y)) {\r\n                                items.push(element);\r\n                            }\r\n\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                intersectsItem = true;\r\n                            }\r\n                        });\r\n\r\n                        // If we want to trigger on an intersect and we don't have any items\r\n                        // that intersect the position, return nothing\r\n                        if (options.intersect && !intersectsItem) {\r\n                            items = [];\r\n                        }\r\n                        return items;\r\n                    }\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 20: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n\r\n            defaults._set('global', {\r\n                responsive: true,\r\n                responsiveAnimationDuration: 0,\r\n                maintainAspectRatio: true,\r\n                events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\r\n                hover: {\r\n                    onHover: null,\r\n                    mode: 'nearest',\r\n                    intersect: true,\r\n                    animationDuration: 400\r\n                },\r\n                onClick: null,\r\n                defaultColor: 'rgba(0,0,0,0.1)',\r\n                defaultFontColor: '#666',\r\n                defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n                defaultFontSize: 12,\r\n                defaultFontStyle: 'normal',\r\n                showLines: true,\r\n\r\n                // Element defaults defined in element extensions\r\n                elements: {},\r\n\r\n                // Layout options such as padding\r\n                layout: {\r\n                    padding: {\r\n                        top: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        left: 0\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = function() {\r\n                // Occupy the global variable of Chart, and create a simple base class\r\n                var Chart = function(item, config) {\r\n                    this.construct(item, config);\r\n                    return this;\r\n                };\r\n\r\n                Chart.Chart = Chart;\r\n\r\n                return Chart;\r\n            };\r\n        }, { \"16\": 16 }], 21: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            function filterByPosition(array, position) {\r\n                return helpers.where(array, function(v) {\r\n                    return v.position === position;\r\n                });\r\n            }\r\n\r\n            function sortByWeight(array, reverse) {\r\n                array.forEach(function(v, i) {\r\n                    v._tmpIndex_ = i;\r\n                    return v;\r\n                });\r\n                array.sort(function(a, b) {\r\n                    var v0 = reverse ? b : a;\r\n                    var v1 = reverse ? a : b;\r\n                    return v0.weight === v1.weight ?\r\n                        v0._tmpIndex_ - v1._tmpIndex_ :\r\n                        v0.weight - v1.weight;\r\n                });\r\n                array.forEach(function(v) {\r\n                    delete v._tmpIndex_;\r\n                });\r\n            }\r\n\r\n            /**\r\n             * @interface ILayoutItem\r\n             * @prop {String} position - The position of the item in the chart layout. Possible values are\r\n             * 'left', 'top', 'right', 'bottom', and 'chartArea'\r\n             * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\r\n             * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\r\n             * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\r\n             * @prop {Function} update - Takes two parameters: width and height. Returns size of item\r\n             * @prop {Function} getPadding -  Returns an object with padding on the edges\r\n             * @prop {Number} width - Width of item. Must be valid after update()\r\n             * @prop {Number} height - Height of item. Must be valid after update()\r\n             * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\r\n             */\r\n\r\n            // The layout service is very self explanatory.  It's responsible for the layout within a chart.\r\n            // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\r\n            // It is this service's responsibility of carrying out that layout.\r\n            module.exports = {\r\n                defaults: {},\r\n\r\n                /**\r\n                 * Register a box to a chart.\r\n                 * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\r\n                 * @param {Chart} chart - the chart to use\r\n                 * @param {ILayoutItem} item - the item to add to be layed out\r\n                 */\r\n                addBox: function(chart, item) {\r\n                    if (!chart.boxes) {\r\n                        chart.boxes = [];\r\n                    }\r\n\r\n                    // initialize item with default values\r\n                    item.fullWidth = item.fullWidth || false;\r\n                    item.position = item.position || 'top';\r\n                    item.weight = item.weight || 0;\r\n\r\n                    chart.boxes.push(item);\r\n                },\r\n\r\n                /**\r\n                 * Remove a layoutItem from a chart\r\n                 * @param {Chart} chart - the chart to remove the box from\r\n                 * @param {Object} layoutItem - the item to remove from the layout\r\n                 */\r\n                removeBox: function(chart, layoutItem) {\r\n                    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n                    if (index !== -1) {\r\n                        chart.boxes.splice(index, 1);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Sets (or updates) options on the given `item`.\r\n                 * @param {Chart} chart - the chart in which the item lives (or will be added to)\r\n                 * @param {Object} item - the item to configure with the given options\r\n                 * @param {Object} options - the new item options.\r\n                 */\r\n                configure: function(chart, item, options) {\r\n                    var props = ['fullWidth', 'position', 'weight'];\r\n                    var ilen = props.length;\r\n                    var i = 0;\r\n                    var prop;\r\n\r\n                    for (; i < ilen; ++i) {\r\n                        prop = props[i];\r\n                        if (options.hasOwnProperty(prop)) {\r\n                            item[prop] = options[prop];\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Fits boxes of the given chart into the given size by having each box measure itself\r\n                 * then running a fitting algorithm\r\n                 * @param {Chart} chart - the chart\r\n                 * @param {Number} width - the width to fit into\r\n                 * @param {Number} height - the height to fit into\r\n                 */\r\n                update: function(chart, width, height) {\r\n                    if (!chart) {\r\n                        return;\r\n                    }\r\n\r\n                    var layoutOptions = chart.options.layout || {};\r\n                    var padding = helpers.options.toPadding(layoutOptions.padding);\r\n                    var leftPadding = padding.left;\r\n                    var rightPadding = padding.right;\r\n                    var topPadding = padding.top;\r\n                    var bottomPadding = padding.bottom;\r\n\r\n                    var leftBoxes = filterByPosition(chart.boxes, 'left');\r\n                    var rightBoxes = filterByPosition(chart.boxes, 'right');\r\n                    var topBoxes = filterByPosition(chart.boxes, 'top');\r\n                    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\r\n                    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\r\n\r\n                    // Sort boxes by weight. A higher weight is further away from the chart area\r\n                    sortByWeight(leftBoxes, true);\r\n                    sortByWeight(rightBoxes, false);\r\n                    sortByWeight(topBoxes, true);\r\n                    sortByWeight(bottomBoxes, false);\r\n\r\n                    // Essentially we now have any number of boxes on each of the 4 sides.\r\n                    // Our canvas looks like the following.\r\n                    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\r\n                    // B1 is the bottom axis\r\n                    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\r\n                    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\r\n                    // an error will be thrown.\r\n                    //\r\n                    // |----------------------------------------------------|\r\n                    // |                  T1 (Full Width)                   |\r\n                    // |----------------------------------------------------|\r\n                    // |    |    |                 T2                  |    |\r\n                    // |    |----|-------------------------------------|----|\r\n                    // |    |    | C1 |                           | C2 |    |\r\n                    // |    |    |----|                           |----|    |\r\n                    // |    |    |                                     |    |\r\n                    // | L1 | L2 |           ChartArea (C0)            | R1 |\r\n                    // |    |    |                                     |    |\r\n                    // |    |    |----|                           |----|    |\r\n                    // |    |    | C3 |                           | C4 |    |\r\n                    // |    |----|-------------------------------------|----|\r\n                    // |    |    |                 B1                  |    |\r\n                    // |----------------------------------------------------|\r\n                    // |                  B2 (Full Width)                   |\r\n                    // |----------------------------------------------------|\r\n                    //\r\n                    // What we do to find the best sizing, we do the following\r\n                    // 1. Determine the minimum size of the chart area.\r\n                    // 2. Split the remaining width equally between each vertical axis\r\n                    // 3. Split the remaining height equally between each horizontal axis\r\n                    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\r\n                    // 5. Adjust the sizes of each axis based on it's minimum reported size.\r\n                    // 6. Refit each axis\r\n                    // 7. Position each axis in the final location\r\n                    // 8. Tell the chart the final location of the chart area\r\n                    // 9. Tell any axes that overlay the chart area the positions of the chart area\r\n\r\n                    // Step 1\r\n                    var chartWidth = width - leftPadding - rightPadding;\r\n                    var chartHeight = height - topPadding - bottomPadding;\r\n                    var chartAreaWidth = chartWidth / 2; // min 50%\r\n                    var chartAreaHeight = chartHeight / 2; // min 50%\r\n\r\n                    // Step 2\r\n                    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\r\n\r\n                    // Step 3\r\n                    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\r\n\r\n                    // Step 4\r\n                    var maxChartAreaWidth = chartWidth;\r\n                    var maxChartAreaHeight = chartHeight;\r\n                    var minBoxSizes = [];\r\n\r\n                    function getMinimumBoxSize(box) {\r\n                        var minSize;\r\n                        var isHorizontal = box.isHorizontal();\r\n\r\n                        if (isHorizontal) {\r\n                            minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\r\n                            maxChartAreaHeight -= minSize.height;\r\n                        } else {\r\n                            minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\r\n                            maxChartAreaWidth -= minSize.width;\r\n                        }\r\n\r\n                        minBoxSizes.push({\r\n                            horizontal: isHorizontal,\r\n                            minSize: minSize,\r\n                            box: box,\r\n                        });\r\n                    }\r\n\r\n                    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\r\n\r\n                    // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\r\n                    var maxHorizontalLeftPadding = 0;\r\n                    var maxHorizontalRightPadding = 0;\r\n                    var maxVerticalTopPadding = 0;\r\n                    var maxVerticalBottomPadding = 0;\r\n\r\n                    helpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\r\n                        if (horizontalBox.getPadding) {\r\n                            var boxPadding = horizontalBox.getPadding();\r\n                            maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\r\n                            maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\r\n                        }\r\n                    });\r\n\r\n                    helpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\r\n                        if (verticalBox.getPadding) {\r\n                            var boxPadding = verticalBox.getPadding();\r\n                            maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\r\n                            maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\r\n                        }\r\n                    });\r\n\r\n                    // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\r\n                    // be if the axes are drawn at their minimum sizes.\r\n                    // Steps 5 & 6\r\n                    var totalLeftBoxesWidth = leftPadding;\r\n                    var totalRightBoxesWidth = rightPadding;\r\n                    var totalTopBoxesHeight = topPadding;\r\n                    var totalBottomBoxesHeight = bottomPadding;\r\n\r\n                    // Function to fit a box\r\n                    function fitBox(box) {\r\n                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\r\n                            return minBox.box === box;\r\n                        });\r\n\r\n                        if (minBoxSize) {\r\n                            if (box.isHorizontal()) {\r\n                                var scaleMargin = {\r\n                                    left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\r\n                                    right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\r\n                                    top: 0,\r\n                                    bottom: 0\r\n                                };\r\n\r\n                                // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\r\n                                // on the margin. Sometimes they need to increase in size slightly\r\n                                box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\r\n                            } else {\r\n                                box.update(minBoxSize.minSize.width, maxChartAreaHeight);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Update, and calculate the left and right margins for the horizontal boxes\r\n                    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\r\n\r\n                    helpers.each(leftBoxes, function(box) {\r\n                        totalLeftBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(rightBoxes, function(box) {\r\n                        totalRightBoxesWidth += box.width;\r\n                    });\r\n\r\n                    // Set the Left and Right margins for the horizontal boxes\r\n                    helpers.each(topBoxes.concat(bottomBoxes), fitBox);\r\n\r\n                    // Figure out how much margin is on the top and bottom of the vertical boxes\r\n                    helpers.each(topBoxes, function(box) {\r\n                        totalTopBoxesHeight += box.height;\r\n                    });\r\n\r\n                    helpers.each(bottomBoxes, function(box) {\r\n                        totalBottomBoxesHeight += box.height;\r\n                    });\r\n\r\n                    function finalFitVerticalBox(box) {\r\n                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\r\n                            return minSize.box === box;\r\n                        });\r\n\r\n                        var scaleMargin = {\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: totalTopBoxesHeight,\r\n                            bottom: totalBottomBoxesHeight\r\n                        };\r\n\r\n                        if (minBoxSize) {\r\n                            box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\r\n                        }\r\n                    }\r\n\r\n                    // Let the left layout know the final margin\r\n                    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\r\n\r\n                    // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\r\n                    totalLeftBoxesWidth = leftPadding;\r\n                    totalRightBoxesWidth = rightPadding;\r\n                    totalTopBoxesHeight = topPadding;\r\n                    totalBottomBoxesHeight = bottomPadding;\r\n\r\n                    helpers.each(leftBoxes, function(box) {\r\n                        totalLeftBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(rightBoxes, function(box) {\r\n                        totalRightBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(topBoxes, function(box) {\r\n                        totalTopBoxesHeight += box.height;\r\n                    });\r\n                    helpers.each(bottomBoxes, function(box) {\r\n                        totalBottomBoxesHeight += box.height;\r\n                    });\r\n\r\n                    // We may be adding some padding to account for rotated x axis labels\r\n                    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\r\n                    totalLeftBoxesWidth += leftPaddingAddition;\r\n                    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\r\n\r\n                    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\r\n                    totalTopBoxesHeight += topPaddingAddition;\r\n                    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\r\n\r\n                    // Figure out if our chart area changed. This would occur if the dataset layout label rotation\r\n                    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\r\n                    // without calling `fit` again\r\n                    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\r\n                    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\r\n\r\n                    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\r\n                        helpers.each(leftBoxes, function(box) {\r\n                            box.height = newMaxChartAreaHeight;\r\n                        });\r\n\r\n                        helpers.each(rightBoxes, function(box) {\r\n                            box.height = newMaxChartAreaHeight;\r\n                        });\r\n\r\n                        helpers.each(topBoxes, function(box) {\r\n                            if (!box.fullWidth) {\r\n                                box.width = newMaxChartAreaWidth;\r\n                            }\r\n                        });\r\n\r\n                        helpers.each(bottomBoxes, function(box) {\r\n                            if (!box.fullWidth) {\r\n                                box.width = newMaxChartAreaWidth;\r\n                            }\r\n                        });\r\n\r\n                        maxChartAreaHeight = newMaxChartAreaHeight;\r\n                        maxChartAreaWidth = newMaxChartAreaWidth;\r\n                    }\r\n\r\n                    // Step 7 - Position the boxes\r\n                    var left = leftPadding + leftPaddingAddition;\r\n                    var top = topPadding + topPaddingAddition;\r\n\r\n                    function placeBox(box) {\r\n                        if (box.isHorizontal()) {\r\n                            box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\r\n                            box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\r\n                            box.top = top;\r\n                            box.bottom = top + box.height;\r\n\r\n                            // Move to next point\r\n                            top = box.bottom;\r\n                        } else {\r\n                            box.left = left;\r\n                            box.right = left + box.width;\r\n                            box.top = totalTopBoxesHeight;\r\n                            box.bottom = totalTopBoxesHeight + maxChartAreaHeight;\r\n\r\n                            // Move to next point\r\n                            left = box.right;\r\n                        }\r\n                    }\r\n\r\n                    helpers.each(leftBoxes.concat(topBoxes), placeBox);\r\n\r\n                    // Account for chart width and height\r\n                    left += maxChartAreaWidth;\r\n                    top += maxChartAreaHeight;\r\n\r\n                    helpers.each(rightBoxes, placeBox);\r\n                    helpers.each(bottomBoxes, placeBox);\r\n\r\n                    // Step 8\r\n                    chart.chartArea = {\r\n                        left: totalLeftBoxesWidth,\r\n                        top: totalTopBoxesHeight,\r\n                        right: totalLeftBoxesWidth + maxChartAreaWidth,\r\n                        bottom: totalTopBoxesHeight + maxChartAreaHeight\r\n                    };\r\n\r\n                    // Step 9\r\n                    helpers.each(chartAreaBoxes, function(box) {\r\n                        box.left = chart.chartArea.left;\r\n                        box.top = chart.chartArea.top;\r\n                        box.right = chart.chartArea.right;\r\n                        box.bottom = chart.chartArea.bottom;\r\n\r\n                        box.update(maxChartAreaWidth, maxChartAreaHeight);\r\n                    });\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 22: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                plugins: {}\r\n            });\r\n\r\n            /**\r\n             * The plugin service singleton\r\n             * @namespace Chart.plugins\r\n             * @since 2.1.0\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Globally registered plugins.\r\n                 * @private\r\n                 */\r\n                _plugins: [],\r\n\r\n                /**\r\n                 * This identifier is used to invalidate the descriptors cache attached to each chart\r\n                 * when a global plugin is registered or unregistered. In this case, the cache ID is\r\n                 * incremented and descriptors are regenerated during following API calls.\r\n                 * @private\r\n                 */\r\n                _cacheId: 0,\r\n\r\n                /**\r\n                 * Registers the given plugin(s) if not already registered.\r\n                 * @param {Array|Object} plugins plugin instance(s).\r\n                 */\r\n                register: function(plugins) {\r\n                    var p = this._plugins;\r\n                    ([]).concat(plugins).forEach(function(plugin) {\r\n                        if (p.indexOf(plugin) === -1) {\r\n                            p.push(plugin);\r\n                        }\r\n                    });\r\n\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Unregisters the given plugin(s) only if registered.\r\n                 * @param {Array|Object} plugins plugin instance(s).\r\n                 */\r\n                unregister: function(plugins) {\r\n                    var p = this._plugins;\r\n                    ([]).concat(plugins).forEach(function(plugin) {\r\n                        var idx = p.indexOf(plugin);\r\n                        if (idx !== -1) {\r\n                            p.splice(idx, 1);\r\n                        }\r\n                    });\r\n\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Remove all registered plugins.\r\n                 * @since 2.1.5\r\n                 */\r\n                clear: function() {\r\n                    this._plugins = [];\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Returns the number of registered plugins?\r\n                 * @returns {Number}\r\n                 * @since 2.1.5\r\n                 */\r\n                count: function() {\r\n                    return this._plugins.length;\r\n                },\r\n\r\n                /**\r\n                 * Returns all registered plugin instances.\r\n                 * @returns {Array} array of plugin objects.\r\n                 * @since 2.1.5\r\n                 */\r\n                getAll: function() {\r\n                    return this._plugins;\r\n                },\r\n\r\n                /**\r\n                 * Calls enabled plugins for `chart` on the specified hook and with the given args.\r\n                 * This method immediately returns as soon as a plugin explicitly returns false. The\r\n                 * returned value can be used, for instance, to interrupt the current action.\r\n                 * @param {Object} chart - The chart instance for which plugins should be called.\r\n                 * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\r\n                 * @param {Array} [args] - Extra arguments to apply to the hook call.\r\n                 * @returns {Boolean} false if any of the plugins return false, else returns true.\r\n                 */\r\n                notify: function(chart, hook, args) {\r\n                    var descriptors = this.descriptors(chart);\r\n                    var ilen = descriptors.length;\r\n                    var i, descriptor, plugin, params, method;\r\n\r\n                    for (i = 0; i < ilen; ++i) {\r\n                        descriptor = descriptors[i];\r\n                        plugin = descriptor.plugin;\r\n                        method = plugin[hook];\r\n                        if (typeof method === 'function') {\r\n                            params = [chart].concat(args || []);\r\n                            params.push(descriptor.options);\r\n                            if (method.apply(plugin, params) === false) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                },\r\n\r\n                /**\r\n                 * Returns descriptors of enabled plugins for the given chart.\r\n                 * @returns {Array} [{ plugin, options }]\r\n                 * @private\r\n                 */\r\n                descriptors: function(chart) {\r\n                    var cache = chart.$plugins || (chart.$plugins = {});\r\n                    if (cache.id === this._cacheId) {\r\n                        return cache.descriptors;\r\n                    }\r\n\r\n                    var plugins = [];\r\n                    var descriptors = [];\r\n                    var config = (chart && chart.config) || {};\r\n                    var options = (config.options && config.options.plugins) || {};\r\n\r\n                    this._plugins.concat(config.plugins || []).forEach(function(plugin) {\r\n                        var idx = plugins.indexOf(plugin);\r\n                        if (idx !== -1) {\r\n                            return;\r\n                        }\r\n\r\n                        var id = plugin.id;\r\n                        var opts = options[id];\r\n                        if (opts === false) {\r\n                            return;\r\n                        }\r\n\r\n                        if (opts === true) {\r\n                            opts = helpers.clone(defaults.global.plugins[id]);\r\n                        }\r\n\r\n                        plugins.push(plugin);\r\n                        descriptors.push({\r\n                            plugin: plugin,\r\n                            options: opts || {}\r\n                        });\r\n                    });\r\n\r\n                    cache.descriptors = descriptors;\r\n                    cache.id = this._cacheId;\r\n                    return descriptors;\r\n                },\r\n\r\n                /**\r\n                 * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\r\n                 * but in some cases, this reference can be changed by the user when updating options.\r\n                 * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\r\n                 * @private\r\n                 */\r\n                _invalidate: function(chart) {\r\n                    delete chart.$plugins;\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Plugin extension hooks.\r\n             * @interface IPlugin\r\n             * @since 2.1.0\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeInit\r\n             * @desc Called before initializing `chart`.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterInit\r\n             * @desc Called after `chart` has been initialized and before the first update.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeUpdate\r\n             * @desc Called before updating `chart`. If any plugin returns `false`, the update\r\n             * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart update.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterUpdate\r\n             * @desc Called after `chart` has been updated and before rendering. Note that this\r\n             * hook will not be called if the chart update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetsUpdate\r\n             * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\r\n             * the datasets update is cancelled until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} false to cancel the datasets update.\r\n             * @since version 2.1.5\r\n            */\r\n            /**\r\n             * @method IPlugin#afterDatasetsUpdate\r\n             * @desc Called after the `chart` datasets have been updated. Note that this hook\r\n             * will not be called if the datasets update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @since version 2.1.5\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetUpdate\r\n             * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\r\n             * returns `false`, the datasets update is cancelled until another `update` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetUpdate\r\n             * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\r\n             * that this hook will not be called if the datasets update has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeLayout\r\n             * @desc Called before laying out `chart`. If any plugin returns `false`,\r\n             * the layout update is cancelled until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart layout.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterLayout\r\n             * @desc Called after the `chart` has been layed out. Note that this hook will not\r\n             * be called if the layout update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeRender\r\n             * @desc Called before rendering `chart`. If any plugin returns `false`,\r\n             * the rendering is cancelled until another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart rendering.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterRender\r\n             * @desc Called after the `chart` has been fully rendered (and animation completed). Note\r\n             * that this hook will not be called if the rendering has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDraw\r\n             * @desc Called before drawing `chart` at every animation frame specified by the given\r\n             * easing value. If any plugin returns `false`, the frame drawing is cancelled until\r\n             * another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDraw\r\n             * @desc Called after the `chart` has been drawn for the specific easing value. Note\r\n             * that this hook will not be called if the drawing has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetsDraw\r\n             * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\r\n             * the datasets drawing is cancelled until another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetsDraw\r\n             * @desc Called after the `chart` datasets have been drawn. Note that this hook\r\n             * will not be called if the datasets drawing has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetDraw\r\n             * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\r\n             * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\r\n             * is cancelled until another `render` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetDraw\r\n             * @desc Called after the `chart` datasets at the given `args.index` have been drawn\r\n             * (datasets are drawn in the reverse order). Note that this hook will not be called\r\n             * if the datasets drawing has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeTooltipDraw\r\n             * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\r\n             * the tooltip drawing is cancelled until another `render` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Object} args.tooltip - The tooltip.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart tooltip drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterTooltipDraw\r\n             * @desc Called after drawing the `tooltip`. Note that this hook will not\r\n             * be called if the tooltip drawing has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Object} args.tooltip - The tooltip.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeEvent\r\n             * @desc Called before processing the specified `event`. If any plugin returns `false`,\r\n             * the event will be discarded.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {IEvent} event - The event object.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterEvent\r\n             * @desc Called after the `event` has been consumed. Note that this hook\r\n             * will not be called if the `event` has been previously discarded.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {IEvent} event - The event object.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#resize\r\n             * @desc Called after the chart as been resized.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#destroy\r\n             * @desc Called after the chart as been destroyed.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n        }, { \"16\": 16, \"36\": 36 }], 23: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var Ticks = require(25);\r\n\r\n            defaults._set('scale', {\r\n                display: true,\r\n                position: 'left',\r\n                offset: false,\r\n\r\n                // grid line settings\r\n                gridLines: {\r\n                    display: true,\r\n                    color: 'rgba(0, 0, 0, 0.1)',\r\n                    lineWidth: 1,\r\n                    drawBorder: true,\r\n                    drawOnChartArea: true,\r\n                    drawTicks: true,\r\n                    tickMarkLength: 10,\r\n                    zeroLineWidth: 1,\r\n                    zeroLineColor: 'rgba(0,0,0,0.25)',\r\n                    zeroLineBorderDash: [],\r\n                    zeroLineBorderDashOffset: 0.0,\r\n                    offsetGridLines: false,\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0\r\n                },\r\n\r\n                // scale label\r\n                scaleLabel: {\r\n                    // display property\r\n                    display: false,\r\n\r\n                    // actual label\r\n                    labelString: '',\r\n\r\n                    // line height\r\n                    lineHeight: 1.2,\r\n\r\n                    // top/bottom padding\r\n                    padding: {\r\n                        top: 4,\r\n                        bottom: 4\r\n                    }\r\n                },\r\n\r\n                // label settings\r\n                ticks: {\r\n                    beginAtZero: false,\r\n                    minRotation: 0,\r\n                    maxRotation: 50,\r\n                    mirror: false,\r\n                    padding: 0,\r\n                    reverse: false,\r\n                    display: true,\r\n                    autoSkip: true,\r\n                    autoSkipPadding: 0,\r\n                    labelOffset: 0,\r\n                    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\r\n                    callback: Ticks.formatters.values,\r\n                    minor: {},\r\n                    major: {}\r\n                }\r\n            });\r\n\r\n            function labelsFromTicks(ticks) {\r\n                var labels = [];\r\n                var i, ilen;\r\n\r\n                for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n                    labels.push(ticks[i].label);\r\n                }\r\n\r\n                return labels;\r\n            }\r\n\r\n            function getLineValue(scale, index, offsetGridLines) {\r\n                var lineValue = scale.getPixelForTick(index);\r\n\r\n                if (offsetGridLines) {\r\n                    if (index === 0) {\r\n                        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\r\n                    } else {\r\n                        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\r\n                    }\r\n                }\r\n                return lineValue;\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                function computeTextSize(context, tick, font) {\r\n                    return helpers.isArray(tick) ?\r\n                        helpers.longestText(context, font, tick) :\r\n                        context.measureText(tick).width;\r\n                }\r\n\r\n                function parseFontOptions(options) {\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var globalDefaults = defaults.global;\r\n                    var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\r\n                    var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\r\n                    var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\r\n\r\n                    return {\r\n                        size: size,\r\n                        style: style,\r\n                        family: family,\r\n                        font: helpers.fontString(size, style, family)\r\n                    };\r\n                }\r\n\r\n                function parseLineHeight(options) {\r\n                    return helpers.options.toLineHeight(\r\n                        helpers.valueOrDefault(options.lineHeight, 1.2),\r\n                        helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\r\n                }\r\n\r\n                Chart.Scale = Element.extend({\r\n                    /**\r\n                     * Get the padding needed for the scale\r\n                     * @method getPadding\r\n                     * @private\r\n                     * @returns {Padding} the necessary padding\r\n                     */\r\n                    getPadding: function() {\r\n                        var me = this;\r\n                        return {\r\n                            left: me.paddingLeft || 0,\r\n                            top: me.paddingTop || 0,\r\n                            right: me.paddingRight || 0,\r\n                            bottom: me.paddingBottom || 0\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the scale tick objects ({label, major})\r\n                     * @since 2.7\r\n                     */\r\n                    getTicks: function() {\r\n                        return this._ticks;\r\n                    },\r\n\r\n                    // These methods are ordered by lifecyle. Utilities then follow.\r\n                    // Any function defined here is inherited by all scale types.\r\n                    // Any function can be extended by the scale type\r\n\r\n                    mergeTicksOptions: function() {\r\n                        var ticks = this.options.ticks;\r\n                        if (ticks.minor === false) {\r\n                            ticks.minor = {\r\n                                display: false\r\n                            };\r\n                        }\r\n                        if (ticks.major === false) {\r\n                            ticks.major = {\r\n                                display: false\r\n                            };\r\n                        }\r\n                        for (var key in ticks) {\r\n                            if (key !== 'major' && key !== 'minor') {\r\n                                if (typeof ticks.minor[key] === 'undefined') {\r\n                                    ticks.minor[key] = ticks[key];\r\n                                }\r\n                                if (typeof ticks.major[key] === 'undefined') {\r\n                                    ticks.major[key] = ticks[key];\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    beforeUpdate: function() {\r\n                        helpers.callback(this.options.beforeUpdate, [this]);\r\n                    },\r\n                    update: function(maxWidth, maxHeight, margins) {\r\n                        var me = this;\r\n                        var i, ilen, labels, label, ticks, tick;\r\n\r\n                        // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                        me.beforeUpdate();\r\n\r\n                        // Absorb the master measurements\r\n                        me.maxWidth = maxWidth;\r\n                        me.maxHeight = maxHeight;\r\n                        me.margins = helpers.extend({\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: 0,\r\n                            bottom: 0\r\n                        }, margins);\r\n                        me.longestTextCache = me.longestTextCache || {};\r\n\r\n                        // Dimensions\r\n                        me.beforeSetDimensions();\r\n                        me.setDimensions();\r\n                        me.afterSetDimensions();\r\n\r\n                        // Data min/max\r\n                        me.beforeDataLimits();\r\n                        me.determineDataLimits();\r\n                        me.afterDataLimits();\r\n\r\n                        // Ticks - `this.ticks` is now DEPRECATED!\r\n                        // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\r\n                        // and must not be accessed directly from outside this class. `this.ticks` being\r\n                        // around for long time and not marked as private, we can't change its structure\r\n                        // without unexpected breaking changes. If you need to access the scale ticks,\r\n                        // use scale.getTicks() instead.\r\n\r\n                        me.beforeBuildTicks();\r\n\r\n                        // New implementations should return an array of objects but for BACKWARD COMPAT,\r\n                        // we still support no return (`this.ticks` internally set by calling this method).\r\n                        ticks = me.buildTicks() || [];\r\n\r\n                        me.afterBuildTicks();\r\n\r\n                        me.beforeTickToLabelConversion();\r\n\r\n                        // New implementations should return the formatted tick labels but for BACKWARD\r\n                        // COMPAT, we still support no return (`this.ticks` internally changed by calling\r\n                        // this method and supposed to contain only string values).\r\n                        labels = me.convertTicksToLabels(ticks) || me.ticks;\r\n\r\n                        me.afterTickToLabelConversion();\r\n\r\n                        me.ticks = labels;   // BACKWARD COMPATIBILITY\r\n\r\n                        // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\r\n\r\n                        // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\r\n                        for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n                            label = labels[i];\r\n                            tick = ticks[i];\r\n                            if (!tick) {\r\n                                ticks.push(tick = {\r\n                                    label: label,\r\n                                    major: false\r\n                                });\r\n                            } else {\r\n                                tick.label = label;\r\n                            }\r\n                        }\r\n\r\n                        me._ticks = ticks;\r\n\r\n                        // Tick Rotation\r\n                        me.beforeCalculateTickRotation();\r\n                        me.calculateTickRotation();\r\n                        me.afterCalculateTickRotation();\r\n                        // Fit\r\n                        me.beforeFit();\r\n                        me.fit();\r\n                        me.afterFit();\r\n                        //\r\n                        me.afterUpdate();\r\n\r\n                        return me.minSize;\r\n                    },\r\n                    afterUpdate: function() {\r\n                        helpers.callback(this.options.afterUpdate, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeSetDimensions: function() {\r\n                        helpers.callback(this.options.beforeSetDimensions, [this]);\r\n                    },\r\n                    setDimensions: function() {\r\n                        var me = this;\r\n                        // Set the unconstrained dimension before label rotation\r\n                        if (me.isHorizontal()) {\r\n                            // Reset position before calculating rotation\r\n                            me.width = me.maxWidth;\r\n                            me.left = 0;\r\n                            me.right = me.width;\r\n                        } else {\r\n                            me.height = me.maxHeight;\r\n\r\n                            // Reset position before calculating rotation\r\n                            me.top = 0;\r\n                            me.bottom = me.height;\r\n                        }\r\n\r\n                        // Reset padding\r\n                        me.paddingLeft = 0;\r\n                        me.paddingTop = 0;\r\n                        me.paddingRight = 0;\r\n                        me.paddingBottom = 0;\r\n                    },\r\n                    afterSetDimensions: function() {\r\n                        helpers.callback(this.options.afterSetDimensions, [this]);\r\n                    },\r\n\r\n                    // Data limits\r\n                    beforeDataLimits: function() {\r\n                        helpers.callback(this.options.beforeDataLimits, [this]);\r\n                    },\r\n                    determineDataLimits: helpers.noop,\r\n                    afterDataLimits: function() {\r\n                        helpers.callback(this.options.afterDataLimits, [this]);\r\n                    },\r\n\r\n                    //\r\n                    beforeBuildTicks: function() {\r\n                        helpers.callback(this.options.beforeBuildTicks, [this]);\r\n                    },\r\n                    buildTicks: helpers.noop,\r\n                    afterBuildTicks: function() {\r\n                        helpers.callback(this.options.afterBuildTicks, [this]);\r\n                    },\r\n\r\n                    beforeTickToLabelConversion: function() {\r\n                        helpers.callback(this.options.beforeTickToLabelConversion, [this]);\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        // Convert ticks to strings\r\n                        var tickOpts = me.options.ticks;\r\n                        me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\r\n                    },\r\n                    afterTickToLabelConversion: function() {\r\n                        helpers.callback(this.options.afterTickToLabelConversion, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeCalculateTickRotation: function() {\r\n                        helpers.callback(this.options.beforeCalculateTickRotation, [this]);\r\n                    },\r\n                    calculateTickRotation: function() {\r\n                        var me = this;\r\n                        var context = me.ctx;\r\n                        var tickOpts = me.options.ticks;\r\n                        var labels = labelsFromTicks(me._ticks);\r\n\r\n                        // Get the width of each grid by calculating the difference\r\n                        // between x offsets between 0 and 1.\r\n                        var tickFont = parseFontOptions(tickOpts);\r\n                        context.font = tickFont.font;\r\n\r\n                        var labelRotation = tickOpts.minRotation || 0;\r\n\r\n                        if (labels.length && me.options.display && me.isHorizontal()) {\r\n                            var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\r\n                            var labelWidth = originalLabelWidth;\r\n                            var cosRotation, sinRotation;\r\n\r\n                            // Allow 3 pixels x2 padding either side for label readability\r\n                            var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\r\n\r\n                            // Max label rotation can be set or default to 90 - also act as a loop counter\r\n                            while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\r\n                                var angleRadians = helpers.toRadians(labelRotation);\r\n                                cosRotation = Math.cos(angleRadians);\r\n                                sinRotation = Math.sin(angleRadians);\r\n\r\n                                if (sinRotation * originalLabelWidth > me.maxHeight) {\r\n                                    // go back one step\r\n                                    labelRotation--;\r\n                                    break;\r\n                                }\r\n\r\n                                labelRotation++;\r\n                                labelWidth = cosRotation * originalLabelWidth;\r\n                            }\r\n                        }\r\n\r\n                        me.labelRotation = labelRotation;\r\n                    },\r\n                    afterCalculateTickRotation: function() {\r\n                        helpers.callback(this.options.afterCalculateTickRotation, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeFit: function() {\r\n                        helpers.callback(this.options.beforeFit, [this]);\r\n                    },\r\n                    fit: function() {\r\n                        var me = this;\r\n                        // Reset\r\n                        var minSize = me.minSize = {\r\n                            width: 0,\r\n                            height: 0\r\n                        };\r\n\r\n                        var labels = labelsFromTicks(me._ticks);\r\n\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n                        var scaleLabelOpts = opts.scaleLabel;\r\n                        var gridLineOpts = opts.gridLines;\r\n                        var display = opts.display;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        var tickFont = parseFontOptions(tickOpts);\r\n                        var tickMarkLength = opts.gridLines.tickMarkLength;\r\n\r\n                        // Width\r\n                        if (isHorizontal) {\r\n                            // subtract the margins to line up with the chartArea if we are a full width scale\r\n                            minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\r\n                        } else {\r\n                            minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n                        }\r\n\r\n                        // height\r\n                        if (isHorizontal) {\r\n                            minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n                        } else {\r\n                            minSize.height = me.maxHeight; // fill all the height\r\n                        }\r\n\r\n                        // Are we showing a title for the scale?\r\n                        if (scaleLabelOpts.display && display) {\r\n                            var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\r\n                            var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\r\n                            var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\r\n\r\n                            if (isHorizontal) {\r\n                                minSize.height += deltaHeight;\r\n                            } else {\r\n                                minSize.width += deltaHeight;\r\n                            }\r\n                        }\r\n\r\n                        // Don't bother fitting the ticks if we are not showing them\r\n                        if (tickOpts.display && display) {\r\n                            var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\r\n                            var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\r\n                            var lineSpace = tickFont.size * 0.5;\r\n                            var tickPadding = me.options.ticks.padding;\r\n\r\n                            if (isHorizontal) {\r\n                                // A horizontal axis is more constrained by the height.\r\n                                me.longestLabelWidth = largestTextWidth;\r\n\r\n                                var angleRadians = helpers.toRadians(me.labelRotation);\r\n                                var cosRotation = Math.cos(angleRadians);\r\n                                var sinRotation = Math.sin(angleRadians);\r\n\r\n                                // TODO - improve this calculation\r\n                                var labelHeight = (sinRotation * largestTextWidth)\r\n                                    + (tickFont.size * tallestLabelHeightInLines)\r\n                                    + (lineSpace * (tallestLabelHeightInLines - 1))\r\n                                    + lineSpace; // padding\r\n\r\n                                minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\r\n\r\n                                me.ctx.font = tickFont.font;\r\n                                var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\r\n                                var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\r\n\r\n                                // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\r\n                                // which means that the right padding is dominated by the font height\r\n                                if (me.labelRotation !== 0) {\r\n                                    me.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\r\n                                    me.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\r\n                                } else {\r\n                                    me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\r\n                                    me.paddingRight = lastLabelWidth / 2 + 3;\r\n                                }\r\n                            } else {\r\n                                // A vertical axis is more constrained by the width. Labels are the\r\n                                // dominant factor here, so get that length first and account for padding\r\n                                if (tickOpts.mirror) {\r\n                                    largestTextWidth = 0;\r\n                                } else {\r\n                                    // use lineSpace for consistency with horizontal axis\r\n                                    // tickPadding is not implemented for horizontal\r\n                                    largestTextWidth += tickPadding + lineSpace;\r\n                                }\r\n\r\n                                minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\r\n\r\n                                me.paddingTop = tickFont.size / 2;\r\n                                me.paddingBottom = tickFont.size / 2;\r\n                            }\r\n                        }\r\n\r\n                        me.handleMargins();\r\n\r\n                        me.width = minSize.width;\r\n                        me.height = minSize.height;\r\n                    },\r\n\r\n                    /**\r\n                     * Handle margins and padding interactions\r\n                     * @private\r\n                     */\r\n                    handleMargins: function() {\r\n                        var me = this;\r\n                        if (me.margins) {\r\n                            me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\r\n                            me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\r\n                            me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\r\n                            me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\r\n                        }\r\n                    },\r\n\r\n                    afterFit: function() {\r\n                        helpers.callback(this.options.afterFit, [this]);\r\n                    },\r\n\r\n                    // Shared Methods\r\n                    isHorizontal: function() {\r\n                        return this.options.position === 'top' || this.options.position === 'bottom';\r\n                    },\r\n                    isFullWidth: function() {\r\n                        return (this.options.fullWidth);\r\n                    },\r\n\r\n                    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\r\n                    getRightValue: function(rawValue) {\r\n                        // Null and undefined values first\r\n                        if (helpers.isNullOrUndef(rawValue)) {\r\n                            return NaN;\r\n                        }\r\n                        // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\r\n                        if (typeof rawValue === 'number' && !isFinite(rawValue)) {\r\n                            return NaN;\r\n                        }\r\n                        // If it is in fact an object, dive in one more level\r\n                        if (rawValue) {\r\n                            if (this.isHorizontal()) {\r\n                                if (rawValue.x !== undefined) {\r\n                                    return this.getRightValue(rawValue.x);\r\n                                }\r\n                            } else if (rawValue.y !== undefined) {\r\n                                return this.getRightValue(rawValue.y);\r\n                            }\r\n                        }\r\n\r\n                        // Value is good, return it\r\n                        return rawValue;\r\n                    },\r\n\r\n                    /**\r\n                     * Used to get the value to display in the tooltip for the data at the given index\r\n                     * @param index\r\n                     * @param datasetIndex\r\n                     */\r\n                    getLabelForIndex: helpers.noop,\r\n\r\n                    /**\r\n                     * Returns the location of the given data point. Value can either be an index or a numerical value\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     * @param value\r\n                     * @param index\r\n                     * @param datasetIndex\r\n                     */\r\n                    getPixelForValue: helpers.noop,\r\n\r\n                    /**\r\n                     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     * @param pixel\r\n                     */\r\n                    getValueForPixel: helpers.noop,\r\n\r\n                    /**\r\n                     * Returns the location of the tick at the given index\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getPixelForTick: function(index) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        if (me.isHorizontal()) {\r\n                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n                            var tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\r\n                            var pixel = (tickWidth * index) + me.paddingLeft;\r\n\r\n                            if (offset) {\r\n                                pixel += tickWidth / 2;\r\n                            }\r\n\r\n                            var finalVal = me.left + Math.round(pixel);\r\n                            finalVal += me.isFullWidth() ? me.margins.left : 0;\r\n                            return finalVal;\r\n                        }\r\n                        var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\r\n                        return me.top + (index * (innerHeight / (me._ticks.length - 1)));\r\n                    },\r\n\r\n                    /**\r\n                     * Utility for getting the pixel location of a percentage of scale\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getPixelForDecimal: function(decimal) {\r\n                        var me = this;\r\n                        if (me.isHorizontal()) {\r\n                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n                            var valueOffset = (innerWidth * decimal) + me.paddingLeft;\r\n\r\n                            var finalVal = me.left + Math.round(valueOffset);\r\n                            finalVal += me.isFullWidth() ? me.margins.left : 0;\r\n                            return finalVal;\r\n                        }\r\n                        return me.top + (decimal * me.height);\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the pixel for the minimum chart value\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getBasePixel: function() {\r\n                        return this.getPixelForValue(this.getBaseValue());\r\n                    },\r\n\r\n                    getBaseValue: function() {\r\n                        var me = this;\r\n                        var min = me.min;\r\n                        var max = me.max;\r\n\r\n                        return me.beginAtZero ? 0 :\r\n                            min < 0 && max < 0 ? max :\r\n                                min > 0 && max > 0 ? min :\r\n                                    0;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns a subset of ticks to be plotted to avoid overlapping labels.\r\n                     * @private\r\n                     */\r\n                    _autoSkip: function(ticks) {\r\n                        var skipRatio;\r\n                        var me = this;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var optionTicks = me.options.ticks.minor;\r\n                        var tickCount = ticks.length;\r\n                        var labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n                        var cosRotation = Math.cos(labelRotationRadians);\r\n                        var longestRotatedLabel = me.longestLabelWidth * cosRotation;\r\n                        var result = [];\r\n                        var i, tick, shouldSkip;\r\n\r\n                        // figure out the maximum number of gridlines to show\r\n                        var maxTicks;\r\n                        if (optionTicks.maxTicksLimit) {\r\n                            maxTicks = optionTicks.maxTicksLimit;\r\n                        }\r\n\r\n                        if (isHorizontal) {\r\n                            skipRatio = false;\r\n\r\n                            if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\r\n                                skipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\r\n                            }\r\n\r\n                            // if they defined a max number of optionTicks,\r\n                            // increase skipRatio until that number is met\r\n                            if (maxTicks && tickCount > maxTicks) {\r\n                                skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\r\n                            }\r\n                        }\r\n\r\n                        for (i = 0; i < tickCount; i++) {\r\n                            tick = ticks[i];\r\n\r\n                            // Since we always show the last tick,we need may need to hide the last shown one before\r\n                            shouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\r\n                            if (shouldSkip && i !== tickCount - 1) {\r\n                                // leave tick in place but make sure it's not displayed (#4635)\r\n                                delete tick.label;\r\n                            }\r\n                            result.push(tick);\r\n                        }\r\n                        return result;\r\n                    },\r\n\r\n                    // Actually draw the scale on the canvas\r\n                    // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\r\n                    draw: function(chartArea) {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        if (!options.display) {\r\n                            return;\r\n                        }\r\n\r\n                        var context = me.ctx;\r\n                        var globalDefaults = defaults.global;\r\n                        var optionTicks = options.ticks.minor;\r\n                        var optionMajorTicks = options.ticks.major || optionTicks;\r\n                        var gridLines = options.gridLines;\r\n                        var scaleLabel = options.scaleLabel;\r\n\r\n                        var isRotated = me.labelRotation !== 0;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\r\n                        var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\r\n                        var tickFont = parseFontOptions(optionTicks);\r\n                        var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\r\n                        var majorTickFont = parseFontOptions(optionMajorTicks);\r\n\r\n                        var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\r\n\r\n                        var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\r\n                        var scaleLabelFont = parseFontOptions(scaleLabel);\r\n                        var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\r\n                        var labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n\r\n                        var itemsToDraw = [];\r\n\r\n                        var axisWidth = me.options.gridLines.lineWidth;\r\n                        var xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\r\n                        var xTickEnd = options.position === 'right' ? me.right + tl : me.right;\r\n                        var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\r\n                        var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\r\n\r\n                        helpers.each(ticks, function(tick, index) {\r\n                            // autoskipper skipped this tick (#4635)\r\n                            if (helpers.isNullOrUndef(tick.label)) {\r\n                                return;\r\n                            }\r\n\r\n                            var label = tick.label;\r\n                            var lineWidth, lineColor, borderDash, borderDashOffset;\r\n                            if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\r\n                                // Draw the first index specially\r\n                                lineWidth = gridLines.zeroLineWidth;\r\n                                lineColor = gridLines.zeroLineColor;\r\n                                borderDash = gridLines.zeroLineBorderDash;\r\n                                borderDashOffset = gridLines.zeroLineBorderDashOffset;\r\n                            } else {\r\n                                lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\r\n                                lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\r\n                                borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\r\n                                borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\r\n                            }\r\n\r\n                            // Common properties\r\n                            var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\r\n                            var textAlign = 'middle';\r\n                            var textBaseline = 'middle';\r\n                            var tickPadding = optionTicks.padding;\r\n\r\n                            if (isHorizontal) {\r\n                                var labelYOffset = tl + tickPadding;\r\n\r\n                                if (options.position === 'bottom') {\r\n                                    // bottom\r\n                                    textBaseline = !isRotated ? 'top' : 'middle';\r\n                                    textAlign = !isRotated ? 'center' : 'right';\r\n                                    labelY = me.top + labelYOffset;\r\n                                } else {\r\n                                    // top\r\n                                    textBaseline = !isRotated ? 'bottom' : 'middle';\r\n                                    textAlign = !isRotated ? 'center' : 'left';\r\n                                    labelY = me.bottom - labelYOffset;\r\n                                }\r\n\r\n                                var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\r\n                                if (xLineValue < me.left) {\r\n                                    lineColor = 'rgba(0,0,0,0)';\r\n                                }\r\n                                xLineValue += helpers.aliasPixel(lineWidth);\r\n\r\n                                labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\r\n\r\n                                tx1 = tx2 = x1 = x2 = xLineValue;\r\n                                ty1 = yTickStart;\r\n                                ty2 = yTickEnd;\r\n                                y1 = chartArea.top;\r\n                                y2 = chartArea.bottom + axisWidth;\r\n                            } else {\r\n                                var isLeft = options.position === 'left';\r\n                                var labelXOffset;\r\n\r\n                                if (optionTicks.mirror) {\r\n                                    textAlign = isLeft ? 'left' : 'right';\r\n                                    labelXOffset = tickPadding;\r\n                                } else {\r\n                                    textAlign = isLeft ? 'right' : 'left';\r\n                                    labelXOffset = tl + tickPadding;\r\n                                }\r\n\r\n                                labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\r\n\r\n                                var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\r\n                                if (yLineValue < me.top) {\r\n                                    lineColor = 'rgba(0,0,0,0)';\r\n                                }\r\n                                yLineValue += helpers.aliasPixel(lineWidth);\r\n\r\n                                labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\r\n\r\n                                tx1 = xTickStart;\r\n                                tx2 = xTickEnd;\r\n                                x1 = chartArea.left;\r\n                                x2 = chartArea.right + axisWidth;\r\n                                ty1 = ty2 = y1 = y2 = yLineValue;\r\n                            }\r\n\r\n                            itemsToDraw.push({\r\n                                tx1: tx1,\r\n                                ty1: ty1,\r\n                                tx2: tx2,\r\n                                ty2: ty2,\r\n                                x1: x1,\r\n                                y1: y1,\r\n                                x2: x2,\r\n                                y2: y2,\r\n                                labelX: labelX,\r\n                                labelY: labelY,\r\n                                glWidth: lineWidth,\r\n                                glColor: lineColor,\r\n                                glBorderDash: borderDash,\r\n                                glBorderDashOffset: borderDashOffset,\r\n                                rotation: -1 * labelRotationRadians,\r\n                                label: label,\r\n                                major: tick.major,\r\n                                textBaseline: textBaseline,\r\n                                textAlign: textAlign\r\n                            });\r\n                        });\r\n\r\n                        // Draw all of the tick labels, tick marks, and grid lines at the correct places\r\n                        helpers.each(itemsToDraw, function(itemToDraw) {\r\n                            if (gridLines.display) {\r\n                                context.save();\r\n                                context.lineWidth = itemToDraw.glWidth;\r\n                                context.strokeStyle = itemToDraw.glColor;\r\n                                if (context.setLineDash) {\r\n                                    context.setLineDash(itemToDraw.glBorderDash);\r\n                                    context.lineDashOffset = itemToDraw.glBorderDashOffset;\r\n                                }\r\n\r\n                                context.beginPath();\r\n\r\n                                if (gridLines.drawTicks) {\r\n                                    context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\r\n                                    context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\r\n                                }\r\n\r\n                                if (gridLines.drawOnChartArea) {\r\n                                    context.moveTo(itemToDraw.x1, itemToDraw.y1);\r\n                                    context.lineTo(itemToDraw.x2, itemToDraw.y2);\r\n                                }\r\n\r\n                                context.stroke();\r\n                                context.restore();\r\n                            }\r\n\r\n                            if (optionTicks.display) {\r\n                                // Make sure we draw text in the correct color and font\r\n                                context.save();\r\n                                context.translate(itemToDraw.labelX, itemToDraw.labelY);\r\n                                context.rotate(itemToDraw.rotation);\r\n                                context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\r\n                                context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\r\n                                context.textBaseline = itemToDraw.textBaseline;\r\n                                context.textAlign = itemToDraw.textAlign;\r\n\r\n                                var label = itemToDraw.label;\r\n                                if (helpers.isArray(label)) {\r\n                                    var lineCount = label.length;\r\n                                    var lineHeight = tickFont.size * 1.5;\r\n                                    var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\r\n\r\n                                    for (var i = 0; i < lineCount; ++i) {\r\n                                        // We just make sure the multiline element is a string here..\r\n                                        context.fillText('' + label[i], 0, y);\r\n                                        // apply same lineSpacing as calculated @ L#320\r\n                                        y += lineHeight;\r\n                                    }\r\n                                } else {\r\n                                    context.fillText(label, 0, 0);\r\n                                }\r\n                                context.restore();\r\n                            }\r\n                        });\r\n\r\n                        if (scaleLabel.display) {\r\n                            // Draw the scale label\r\n                            var scaleLabelX;\r\n                            var scaleLabelY;\r\n                            var rotation = 0;\r\n                            var halfLineHeight = parseLineHeight(scaleLabel) / 2;\r\n\r\n                            if (isHorizontal) {\r\n                                scaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\r\n                                scaleLabelY = options.position === 'bottom'\r\n                                    ? me.bottom - halfLineHeight - scaleLabelPadding.bottom\r\n                                    : me.top + halfLineHeight + scaleLabelPadding.top;\r\n                            } else {\r\n                                var isLeft = options.position === 'left';\r\n                                scaleLabelX = isLeft\r\n                                    ? me.left + halfLineHeight + scaleLabelPadding.top\r\n                                    : me.right - halfLineHeight - scaleLabelPadding.top;\r\n                                scaleLabelY = me.top + ((me.bottom - me.top) / 2);\r\n                                rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\r\n                            }\r\n\r\n                            context.save();\r\n                            context.translate(scaleLabelX, scaleLabelY);\r\n                            context.rotate(rotation);\r\n                            context.textAlign = 'center';\r\n                            context.textBaseline = 'middle';\r\n                            context.fillStyle = scaleLabelFontColor; // render in correct colour\r\n                            context.font = scaleLabelFont.font;\r\n                            context.fillText(scaleLabel.labelString, 0, 0);\r\n                            context.restore();\r\n                        }\r\n\r\n                        if (gridLines.drawBorder) {\r\n                            // Draw the line at the edge of the axis\r\n                            context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\r\n                            context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\r\n                            var x1 = me.left;\r\n                            var x2 = me.right + axisWidth;\r\n                            var y1 = me.top;\r\n                            var y2 = me.bottom + axisWidth;\r\n\r\n                            var aliasPixel = helpers.aliasPixel(context.lineWidth);\r\n                            if (isHorizontal) {\r\n                                y1 = y2 = options.position === 'top' ? me.bottom : me.top;\r\n                                y1 += aliasPixel;\r\n                                y2 += aliasPixel;\r\n                            } else {\r\n                                x1 = x2 = options.position === 'left' ? me.right : me.left;\r\n                                x1 += aliasPixel;\r\n                                x2 += aliasPixel;\r\n                            }\r\n\r\n                            context.beginPath();\r\n                            context.moveTo(x1, y1);\r\n                            context.lineTo(x2, y2);\r\n                            context.stroke();\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"25\": 25, \"36\": 36 }], 24: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.scaleService = {\r\n                    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\r\n                    // use the new chart options to grab the correct scale\r\n                    constructors: {},\r\n                    // Use a registration function so that we can move to an ES6 map when we no longer need to support\r\n                    // old browsers\r\n\r\n                    // Scale config defaults\r\n                    defaults: {},\r\n                    registerScaleType: function(type, scaleConstructor, scaleDefaults) {\r\n                        this.constructors[type] = scaleConstructor;\r\n                        this.defaults[type] = helpers.clone(scaleDefaults);\r\n                    },\r\n                    getScaleConstructor: function(type) {\r\n                        return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\r\n                    },\r\n                    getScaleDefaults: function(type) {\r\n                        // Return the scale defaults merged with the global settings so that we always use the latest ones\r\n                        return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\r\n                    },\r\n                    updateScaleDefaults: function(type, additions) {\r\n                        var me = this;\r\n                        if (me.defaults.hasOwnProperty(type)) {\r\n                            me.defaults[type] = helpers.extend(me.defaults[type], additions);\r\n                        }\r\n                    },\r\n                    addScalesToLayout: function(chart) {\r\n                        // Adds each scale to the chart.boxes array to be sized accordingly\r\n                        helpers.each(chart.scales, function(scale) {\r\n                            // Set ILayoutItem parameters for backwards compatibility\r\n                            scale.fullWidth = scale.options.fullWidth;\r\n                            scale.position = scale.options.position;\r\n                            scale.weight = scale.options.weight;\r\n                            layouts.addBox(chart, scale);\r\n                        });\r\n                    }\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"21\": 21, \"36\": 36 }], 25: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Namespace to hold static tick generation functions\r\n             * @namespace Chart.Ticks\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Namespace to hold formatters for different types of ticks\r\n                 * @namespace Chart.Ticks.formatters\r\n                 */\r\n                formatters: {\r\n                    /**\r\n                     * Formatter for value labels\r\n                     * @method Chart.Ticks.formatters.values\r\n                     * @param value the value to display\r\n                     * @return {String|Array} the label to display\r\n                     */\r\n                    values: function(value) {\r\n                        return helpers.isArray(value) ? value : '' + value;\r\n                    },\r\n\r\n                    /**\r\n                     * Formatter for linear numeric ticks\r\n                     * @method Chart.Ticks.formatters.linear\r\n                     * @param tickValue {Number} the value to be formatted\r\n                     * @param index {Number} the position of the tickValue parameter in the ticks array\r\n                     * @param ticks {Array<Number>} the list of ticks being converted\r\n                     * @return {String} string representation of the tickValue parameter\r\n                     */\r\n                    linear: function(tickValue, index, ticks) {\r\n                        // If we have lots of ticks, don't use the ones\r\n                        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\r\n\r\n                        // If we have a number like 2.5 as the delta, figure out how many decimal places we need\r\n                        if (Math.abs(delta) > 1) {\r\n                            if (tickValue !== Math.floor(tickValue)) {\r\n                                // not an integer\r\n                                delta = tickValue - Math.floor(tickValue);\r\n                            }\r\n                        }\r\n\r\n                        var logDelta = helpers.log10(Math.abs(delta));\r\n                        var tickString = '';\r\n\r\n                        if (tickValue !== 0) {\r\n                            var numDecimal = -1 * Math.floor(logDelta);\r\n                            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\r\n                            tickString = tickValue.toFixed(numDecimal);\r\n                        } else {\r\n                            tickString = '0'; // never show decimal places for 0\r\n                        }\r\n\r\n                        return tickString;\r\n                    },\r\n\r\n                    logarithmic: function(tickValue, index, ticks) {\r\n                        var remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\r\n\r\n                        if (tickValue === 0) {\r\n                            return '0';\r\n                        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\r\n                            return tickValue.toExponential();\r\n                        }\r\n                        return '';\r\n                    }\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 26: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                tooltips: {\r\n                    enabled: true,\r\n                    custom: null,\r\n                    mode: 'nearest',\r\n                    position: 'average',\r\n                    intersect: true,\r\n                    backgroundColor: 'rgba(0,0,0,0.8)',\r\n                    titleFontStyle: 'bold',\r\n                    titleSpacing: 2,\r\n                    titleMarginBottom: 6,\r\n                    titleFontColor: '#fff',\r\n                    titleAlign: 'left',\r\n                    bodySpacing: 2,\r\n                    bodyFontColor: '#fff',\r\n                    bodyAlign: 'left',\r\n                    footerFontStyle: 'bold',\r\n                    footerSpacing: 2,\r\n                    footerMarginTop: 6,\r\n                    footerFontColor: '#fff',\r\n                    footerAlign: 'left',\r\n                    yPadding: 6,\r\n                    xPadding: 6,\r\n                    caretPadding: 2,\r\n                    caretSize: 5,\r\n                    cornerRadius: 6,\r\n                    multiKeyBackground: '#fff',\r\n                    displayColors: true,\r\n                    borderColor: 'rgba(0,0,0,0)',\r\n                    borderWidth: 0,\r\n                    callbacks: {\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeTitle: helpers.noop,\r\n                        title: function(tooltipItems, data) {\r\n                            // Pick first xLabel for now\r\n                            var title = '';\r\n                            var labels = data.labels;\r\n                            var labelCount = labels ? labels.length : 0;\r\n\r\n                            if (tooltipItems.length > 0) {\r\n                                var item = tooltipItems[0];\r\n\r\n                                if (item.xLabel) {\r\n                                    title = item.xLabel;\r\n                                } else if (labelCount > 0 && item.index < labelCount) {\r\n                                    title = labels[item.index];\r\n                                }\r\n                            }\r\n\r\n                            return title;\r\n                        },\r\n                        afterTitle: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeBody: helpers.noop,\r\n\r\n                        // Args are: (tooltipItem, data)\r\n                        beforeLabel: helpers.noop,\r\n                        label: function(tooltipItem, data) {\r\n                            var label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\r\n                            if (label) {\r\n                                label += ': ';\r\n                            }\r\n                            label += tooltipItem.yLabel;\r\n                            return label;\r\n                        },\r\n                        labelColor: function(tooltipItem, chart) {\r\n                            var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n                            var activeElement = meta.data[tooltipItem.index];\r\n                            var view = activeElement._view;\r\n                            return {\r\n                                borderColor: view.borderColor,\r\n                                backgroundColor: view.backgroundColor\r\n                            };\r\n                        },\r\n                        labelTextColor: function() {\r\n                            return this._options.bodyFontColor;\r\n                        },\r\n                        afterLabel: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        afterBody: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeFooter: helpers.noop,\r\n                        footer: helpers.noop,\r\n                        afterFooter: helpers.noop\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                /**\r\n                   * Helper method to merge the opacity into a color\r\n                   */\r\n                function mergeOpacity(colorString, opacity) {\r\n                    var color = helpers.color(colorString);\r\n                    return color.alpha(opacity * color.alpha()).rgbaString();\r\n                }\r\n\r\n                // Helper to push or concat based on if the 2nd parameter is an array or not\r\n                function pushOrConcat(base, toPush) {\r\n                    if (toPush) {\r\n                        if (helpers.isArray(toPush)) {\r\n                            // base = base.concat(toPush);\r\n                            Array.prototype.push.apply(base, toPush);\r\n                        } else {\r\n                            base.push(toPush);\r\n                        }\r\n                    }\r\n\r\n                    return base;\r\n                }\r\n\r\n                // Private helper to create a tooltip item model\r\n                // @param element : the chart element (point, arc, bar) to create the tooltip item for\r\n                // @return : new tooltip item\r\n                function createTooltipItem(element) {\r\n                    var xScale = element._xScale;\r\n                    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\r\n                    var index = element._index;\r\n                    var datasetIndex = element._datasetIndex;\r\n\r\n                    return {\r\n                        xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\r\n                        yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\r\n                        index: index,\r\n                        datasetIndex: datasetIndex,\r\n                        x: element._model.x,\r\n                        y: element._model.y\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Helper to get the reset model for the tooltip\r\n                 * @param tooltipOpts {Object} the tooltip options\r\n                 */\r\n                function getBaseModel(tooltipOpts) {\r\n                    var globalDefaults = defaults.global;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n\r\n                    return {\r\n                        // Positioning\r\n                        xPadding: tooltipOpts.xPadding,\r\n                        yPadding: tooltipOpts.yPadding,\r\n                        xAlign: tooltipOpts.xAlign,\r\n                        yAlign: tooltipOpts.yAlign,\r\n\r\n                        // Body\r\n                        bodyFontColor: tooltipOpts.bodyFontColor,\r\n                        _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\r\n                        _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\r\n                        _bodyAlign: tooltipOpts.bodyAlign,\r\n                        bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\r\n                        bodySpacing: tooltipOpts.bodySpacing,\r\n\r\n                        // Title\r\n                        titleFontColor: tooltipOpts.titleFontColor,\r\n                        _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\r\n                        _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\r\n                        titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\r\n                        _titleAlign: tooltipOpts.titleAlign,\r\n                        titleSpacing: tooltipOpts.titleSpacing,\r\n                        titleMarginBottom: tooltipOpts.titleMarginBottom,\r\n\r\n                        // Footer\r\n                        footerFontColor: tooltipOpts.footerFontColor,\r\n                        _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\r\n                        _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\r\n                        footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\r\n                        _footerAlign: tooltipOpts.footerAlign,\r\n                        footerSpacing: tooltipOpts.footerSpacing,\r\n                        footerMarginTop: tooltipOpts.footerMarginTop,\r\n\r\n                        // Appearance\r\n                        caretSize: tooltipOpts.caretSize,\r\n                        cornerRadius: tooltipOpts.cornerRadius,\r\n                        backgroundColor: tooltipOpts.backgroundColor,\r\n                        opacity: 0,\r\n                        legendColorBackground: tooltipOpts.multiKeyBackground,\r\n                        displayColors: tooltipOpts.displayColors,\r\n                        borderColor: tooltipOpts.borderColor,\r\n                        borderWidth: tooltipOpts.borderWidth\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Get the size of the tooltip\r\n                 */\r\n                function getTooltipSize(tooltip, model) {\r\n                    var ctx = tooltip._chart.ctx;\r\n\r\n                    var height = model.yPadding * 2; // Tooltip Padding\r\n                    var width = 0;\r\n\r\n                    // Count of all lines in the body\r\n                    var body = model.body;\r\n                    var combinedBodyLength = body.reduce(function(count, bodyItem) {\r\n                        return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\r\n                    }, 0);\r\n                    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\r\n\r\n                    var titleLineCount = model.title.length;\r\n                    var footerLineCount = model.footer.length;\r\n                    var titleFontSize = model.titleFontSize;\r\n                    var bodyFontSize = model.bodyFontSize;\r\n                    var footerFontSize = model.footerFontSize;\r\n\r\n                    height += titleLineCount * titleFontSize; // Title Lines\r\n                    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\r\n                    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\r\n                    height += combinedBodyLength * bodyFontSize; // Body Lines\r\n                    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\r\n                    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\r\n                    height += footerLineCount * (footerFontSize); // Footer Lines\r\n                    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\r\n\r\n                    // Title width\r\n                    var widthPadding = 0;\r\n                    var maxLineWidth = function(line) {\r\n                        width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n                    };\r\n\r\n                    ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\r\n                    helpers.each(model.title, maxLineWidth);\r\n\r\n                    // Body width\r\n                    ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\r\n                    helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\r\n\r\n                    // Body lines may include some extra width due to the color box\r\n                    widthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\r\n                    helpers.each(body, function(bodyItem) {\r\n                        helpers.each(bodyItem.before, maxLineWidth);\r\n                        helpers.each(bodyItem.lines, maxLineWidth);\r\n                        helpers.each(bodyItem.after, maxLineWidth);\r\n                    });\r\n\r\n                    // Reset back to 0\r\n                    widthPadding = 0;\r\n\r\n                    // Footer width\r\n                    ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\r\n                    helpers.each(model.footer, maxLineWidth);\r\n\r\n                    // Add padding\r\n                    width += 2 * model.xPadding;\r\n\r\n                    return {\r\n                        width: width,\r\n                        height: height\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Helper to get the alignment of a tooltip given the size\r\n                 */\r\n                function determineAlignment(tooltip, size) {\r\n                    var model = tooltip._model;\r\n                    var chart = tooltip._chart;\r\n                    var chartArea = tooltip._chart.chartArea;\r\n                    var xAlign = 'center';\r\n                    var yAlign = 'center';\r\n\r\n                    if (model.y < size.height) {\r\n                        yAlign = 'top';\r\n                    } else if (model.y > (chart.height - size.height)) {\r\n                        yAlign = 'bottom';\r\n                    }\r\n\r\n                    var lf, rf; // functions to determine left, right alignment\r\n                    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\r\n                    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\r\n                    var midX = (chartArea.left + chartArea.right) / 2;\r\n                    var midY = (chartArea.top + chartArea.bottom) / 2;\r\n\r\n                    if (yAlign === 'center') {\r\n                        lf = function(x) {\r\n                            return x <= midX;\r\n                        };\r\n                        rf = function(x) {\r\n                            return x > midX;\r\n                        };\r\n                    } else {\r\n                        lf = function(x) {\r\n                            return x <= (size.width / 2);\r\n                        };\r\n                        rf = function(x) {\r\n                            return x >= (chart.width - (size.width / 2));\r\n                        };\r\n                    }\r\n\r\n                    olf = function(x) {\r\n                        return x + size.width + model.caretSize + model.caretPadding > chart.width;\r\n                    };\r\n                    orf = function(x) {\r\n                        return x - size.width - model.caretSize - model.caretPadding < 0;\r\n                    };\r\n                    yf = function(y) {\r\n                        return y <= midY ? 'top' : 'bottom';\r\n                    };\r\n\r\n                    if (lf(model.x)) {\r\n                        xAlign = 'left';\r\n\r\n                        // Is tooltip too wide and goes over the right side of the chart.?\r\n                        if (olf(model.x)) {\r\n                            xAlign = 'center';\r\n                            yAlign = yf(model.y);\r\n                        }\r\n                    } else if (rf(model.x)) {\r\n                        xAlign = 'right';\r\n\r\n                        // Is tooltip too wide and goes outside left edge of canvas?\r\n                        if (orf(model.x)) {\r\n                            xAlign = 'center';\r\n                            yAlign = yf(model.y);\r\n                        }\r\n                    }\r\n\r\n                    var opts = tooltip._options;\r\n                    return {\r\n                        xAlign: opts.xAlign ? opts.xAlign : xAlign,\r\n                        yAlign: opts.yAlign ? opts.yAlign : yAlign\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\r\n                 */\r\n                function getBackgroundPoint(vm, size, alignment, chart) {\r\n                    // Background Position\r\n                    var x = vm.x;\r\n                    var y = vm.y;\r\n\r\n                    var caretSize = vm.caretSize;\r\n                    var caretPadding = vm.caretPadding;\r\n                    var cornerRadius = vm.cornerRadius;\r\n                    var xAlign = alignment.xAlign;\r\n                    var yAlign = alignment.yAlign;\r\n                    var paddingAndSize = caretSize + caretPadding;\r\n                    var radiusAndPadding = cornerRadius + caretPadding;\r\n\r\n                    if (xAlign === 'right') {\r\n                        x -= size.width;\r\n                    } else if (xAlign === 'center') {\r\n                        x -= (size.width / 2);\r\n                        if (x + size.width > chart.width) {\r\n                            x = chart.width - size.width;\r\n                        }\r\n                        if (x < 0) {\r\n                            x = 0;\r\n                        }\r\n                    }\r\n\r\n                    if (yAlign === 'top') {\r\n                        y += paddingAndSize;\r\n                    } else if (yAlign === 'bottom') {\r\n                        y -= size.height + paddingAndSize;\r\n                    } else {\r\n                        y -= (size.height / 2);\r\n                    }\r\n\r\n                    if (yAlign === 'center') {\r\n                        if (xAlign === 'left') {\r\n                            x += paddingAndSize;\r\n                        } else if (xAlign === 'right') {\r\n                            x -= paddingAndSize;\r\n                        }\r\n                    } else if (xAlign === 'left') {\r\n                        x -= radiusAndPadding;\r\n                    } else if (xAlign === 'right') {\r\n                        x += radiusAndPadding;\r\n                    }\r\n\r\n                    return {\r\n                        x: x,\r\n                        y: y\r\n                    };\r\n                }\r\n\r\n                Chart.Tooltip = Element.extend({\r\n                    initialize: function() {\r\n                        this._model = getBaseModel(this._options);\r\n                        this._lastActive = [];\r\n                    },\r\n\r\n                    // Get the title\r\n                    // Args are: (tooltipItem, data)\r\n                    getTitle: function() {\r\n                        var me = this;\r\n                        var opts = me._options;\r\n                        var callbacks = opts.callbacks;\r\n\r\n                        var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\r\n                        var title = callbacks.title.apply(me, arguments);\r\n                        var afterTitle = callbacks.afterTitle.apply(me, arguments);\r\n\r\n                        var lines = [];\r\n                        lines = pushOrConcat(lines, beforeTitle);\r\n                        lines = pushOrConcat(lines, title);\r\n                        lines = pushOrConcat(lines, afterTitle);\r\n\r\n                        return lines;\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getBeforeBody: function() {\r\n                        var lines = this._options.callbacks.beforeBody.apply(this, arguments);\r\n                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getBody: function(tooltipItems, data) {\r\n                        var me = this;\r\n                        var callbacks = me._options.callbacks;\r\n                        var bodyItems = [];\r\n\r\n                        helpers.each(tooltipItems, function(tooltipItem) {\r\n                            var bodyItem = {\r\n                                before: [],\r\n                                lines: [],\r\n                                after: []\r\n                            };\r\n                            pushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\r\n                            pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\r\n                            pushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\r\n\r\n                            bodyItems.push(bodyItem);\r\n                        });\r\n\r\n                        return bodyItems;\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getAfterBody: function() {\r\n                        var lines = this._options.callbacks.afterBody.apply(this, arguments);\r\n                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n                    },\r\n\r\n                    // Get the footer and beforeFooter and afterFooter lines\r\n                    // Args are: (tooltipItem, data)\r\n                    getFooter: function() {\r\n                        var me = this;\r\n                        var callbacks = me._options.callbacks;\r\n\r\n                        var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\r\n                        var footer = callbacks.footer.apply(me, arguments);\r\n                        var afterFooter = callbacks.afterFooter.apply(me, arguments);\r\n\r\n                        var lines = [];\r\n                        lines = pushOrConcat(lines, beforeFooter);\r\n                        lines = pushOrConcat(lines, footer);\r\n                        lines = pushOrConcat(lines, afterFooter);\r\n\r\n                        return lines;\r\n                    },\r\n\r\n                    update: function(changed) {\r\n                        var me = this;\r\n                        var opts = me._options;\r\n\r\n                        // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\r\n                        // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\r\n                        // which breaks any animations.\r\n                        var existingModel = me._model;\r\n                        var model = me._model = getBaseModel(opts);\r\n                        var active = me._active;\r\n\r\n                        var data = me._data;\r\n\r\n                        // In the case where active.length === 0 we need to keep these at existing values for good animations\r\n                        var alignment = {\r\n                            xAlign: existingModel.xAlign,\r\n                            yAlign: existingModel.yAlign\r\n                        };\r\n                        var backgroundPoint = {\r\n                            x: existingModel.x,\r\n                            y: existingModel.y\r\n                        };\r\n                        var tooltipSize = {\r\n                            width: existingModel.width,\r\n                            height: existingModel.height\r\n                        };\r\n                        var tooltipPosition = {\r\n                            x: existingModel.caretX,\r\n                            y: existingModel.caretY\r\n                        };\r\n\r\n                        var i, len;\r\n\r\n                        if (active.length) {\r\n                            model.opacity = 1;\r\n\r\n                            var labelColors = [];\r\n                            var labelTextColors = [];\r\n                            tooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\r\n\r\n                            var tooltipItems = [];\r\n                            for (i = 0, len = active.length; i < len; ++i) {\r\n                                tooltipItems.push(createTooltipItem(active[i]));\r\n                            }\r\n\r\n                            // If the user provided a filter function, use it to modify the tooltip items\r\n                            if (opts.filter) {\r\n                                tooltipItems = tooltipItems.filter(function(a) {\r\n                                    return opts.filter(a, data);\r\n                                });\r\n                            }\r\n\r\n                            // If the user provided a sorting function, use it to modify the tooltip items\r\n                            if (opts.itemSort) {\r\n                                tooltipItems = tooltipItems.sort(function(a, b) {\r\n                                    return opts.itemSort(a, b, data);\r\n                                });\r\n                            }\r\n\r\n                            // Determine colors for boxes\r\n                            helpers.each(tooltipItems, function(tooltipItem) {\r\n                                labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\r\n                                labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\r\n                            });\r\n\r\n                            // Build the Text Lines\r\n                            model.title = me.getTitle(tooltipItems, data);\r\n                            model.beforeBody = me.getBeforeBody(tooltipItems, data);\r\n                            model.body = me.getBody(tooltipItems, data);\r\n                            model.afterBody = me.getAfterBody(tooltipItems, data);\r\n                            model.footer = me.getFooter(tooltipItems, data);\r\n\r\n                            // Initial positioning and colors\r\n                            model.x = Math.round(tooltipPosition.x);\r\n                            model.y = Math.round(tooltipPosition.y);\r\n                            model.caretPadding = opts.caretPadding;\r\n                            model.labelColors = labelColors;\r\n                            model.labelTextColors = labelTextColors;\r\n\r\n                            // data points\r\n                            model.dataPoints = tooltipItems;\r\n\r\n                            // We need to determine alignment of the tooltip\r\n                            tooltipSize = getTooltipSize(this, model);\r\n                            alignment = determineAlignment(this, tooltipSize);\r\n                            // Final Size and Position\r\n                            backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\r\n                        } else {\r\n                            model.opacity = 0;\r\n                        }\r\n\r\n                        model.xAlign = alignment.xAlign;\r\n                        model.yAlign = alignment.yAlign;\r\n                        model.x = backgroundPoint.x;\r\n                        model.y = backgroundPoint.y;\r\n                        model.width = tooltipSize.width;\r\n                        model.height = tooltipSize.height;\r\n\r\n                        // Point where the caret on the tooltip points to\r\n                        model.caretX = tooltipPosition.x;\r\n                        model.caretY = tooltipPosition.y;\r\n\r\n                        me._model = model;\r\n\r\n                        if (changed && opts.custom) {\r\n                            opts.custom.call(me, model);\r\n                        }\r\n\r\n                        return me;\r\n                    },\r\n                    drawCaret: function(tooltipPoint, size) {\r\n                        var ctx = this._chart.ctx;\r\n                        var vm = this._view;\r\n                        var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\r\n\r\n                        ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n                        ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n                        ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n                    },\r\n                    getCaretPosition: function(tooltipPoint, size, vm) {\r\n                        var x1, x2, x3, y1, y2, y3;\r\n                        var caretSize = vm.caretSize;\r\n                        var cornerRadius = vm.cornerRadius;\r\n                        var xAlign = vm.xAlign;\r\n                        var yAlign = vm.yAlign;\r\n                        var ptX = tooltipPoint.x;\r\n                        var ptY = tooltipPoint.y;\r\n                        var width = size.width;\r\n                        var height = size.height;\r\n\r\n                        if (yAlign === 'center') {\r\n                            y2 = ptY + (height / 2);\r\n\r\n                            if (xAlign === 'left') {\r\n                                x1 = ptX;\r\n                                x2 = x1 - caretSize;\r\n                                x3 = x1;\r\n\r\n                                y1 = y2 + caretSize;\r\n                                y3 = y2 - caretSize;\r\n                            } else {\r\n                                x1 = ptX + width;\r\n                                x2 = x1 + caretSize;\r\n                                x3 = x1;\r\n\r\n                                y1 = y2 - caretSize;\r\n                                y3 = y2 + caretSize;\r\n                            }\r\n                        } else {\r\n                            if (xAlign === 'left') {\r\n                                x2 = ptX + cornerRadius + (caretSize);\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            } else if (xAlign === 'right') {\r\n                                x2 = ptX + width - cornerRadius - caretSize;\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            } else {\r\n                                x2 = vm.caretX;\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            }\r\n                            if (yAlign === 'top') {\r\n                                y1 = ptY;\r\n                                y2 = y1 - caretSize;\r\n                                y3 = y1;\r\n                            } else {\r\n                                y1 = ptY + height;\r\n                                y2 = y1 + caretSize;\r\n                                y3 = y1;\r\n                                // invert drawing order\r\n                                var tmp = x3;\r\n                                x3 = x1;\r\n                                x1 = tmp;\r\n                            }\r\n                        }\r\n                        return { x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3 };\r\n                    },\r\n                    drawTitle: function(pt, vm, ctx, opacity) {\r\n                        var title = vm.title;\r\n\r\n                        if (title.length) {\r\n                            ctx.textAlign = vm._titleAlign;\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            var titleFontSize = vm.titleFontSize;\r\n                            var titleSpacing = vm.titleSpacing;\r\n\r\n                            ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\r\n                            ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\r\n                            var i, len;\r\n                            for (i = 0, len = title.length; i < len; ++i) {\r\n                                ctx.fillText(title[i], pt.x, pt.y);\r\n                                pt.y += titleFontSize + titleSpacing; // Line Height and spacing\r\n\r\n                                if (i + 1 === title.length) {\r\n                                    pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    drawBody: function(pt, vm, ctx, opacity) {\r\n                        var bodyFontSize = vm.bodyFontSize;\r\n                        var bodySpacing = vm.bodySpacing;\r\n                        var body = vm.body;\r\n\r\n                        ctx.textAlign = vm._bodyAlign;\r\n                        ctx.textBaseline = 'top';\r\n                        ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\r\n                        // Before Body\r\n                        var xLinePadding = 0;\r\n                        var fillLineOfText = function(line) {\r\n                            ctx.fillText(line, pt.x + xLinePadding, pt.y);\r\n                            pt.y += bodyFontSize + bodySpacing;\r\n                        };\r\n\r\n                        // Before body lines\r\n                        ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\r\n                        helpers.each(vm.beforeBody, fillLineOfText);\r\n\r\n                        var drawColorBoxes = vm.displayColors;\r\n                        xLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\r\n\r\n                        // Draw body lines now\r\n                        helpers.each(body, function(bodyItem, i) {\r\n                            var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\r\n                            ctx.fillStyle = textColor;\r\n                            helpers.each(bodyItem.before, fillLineOfText);\r\n\r\n                            helpers.each(bodyItem.lines, function(line) {\r\n                                // Draw Legend-like boxes if needed\r\n                                if (drawColorBoxes) {\r\n                                    // Fill a white rect so that colours merge nicely if the opacity is < 1\r\n                                    ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\r\n                                    ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n                                    // Border\r\n                                    ctx.lineWidth = 1;\r\n                                    ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\r\n                                    ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n                                    // Inner square\r\n                                    ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\r\n                                    ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\r\n                                    ctx.fillStyle = textColor;\r\n                                }\r\n\r\n                                fillLineOfText(line);\r\n                            });\r\n\r\n                            helpers.each(bodyItem.after, fillLineOfText);\r\n                        });\r\n\r\n                        // Reset back to 0 for after body\r\n                        xLinePadding = 0;\r\n\r\n                        // After body lines\r\n                        helpers.each(vm.afterBody, fillLineOfText);\r\n                        pt.y -= bodySpacing; // Remove last body spacing\r\n                    },\r\n                    drawFooter: function(pt, vm, ctx, opacity) {\r\n                        var footer = vm.footer;\r\n\r\n                        if (footer.length) {\r\n                            pt.y += vm.footerMarginTop;\r\n\r\n                            ctx.textAlign = vm._footerAlign;\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\r\n                            ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\r\n                            helpers.each(footer, function(line) {\r\n                                ctx.fillText(line, pt.x, pt.y);\r\n                                pt.y += vm.footerFontSize + vm.footerSpacing;\r\n                            });\r\n                        }\r\n                    },\r\n                    drawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\r\n                        ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\r\n                        ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\r\n                        ctx.lineWidth = vm.borderWidth;\r\n                        var xAlign = vm.xAlign;\r\n                        var yAlign = vm.yAlign;\r\n                        var x = pt.x;\r\n                        var y = pt.y;\r\n                        var width = tooltipSize.width;\r\n                        var height = tooltipSize.height;\r\n                        var radius = vm.cornerRadius;\r\n\r\n                        ctx.beginPath();\r\n                        ctx.moveTo(x + radius, y);\r\n                        if (yAlign === 'top') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + width - radius, y);\r\n                        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n                        if (yAlign === 'center' && xAlign === 'right') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + width, y + height - radius);\r\n                        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n                        if (yAlign === 'bottom') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + radius, y + height);\r\n                        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n                        if (yAlign === 'center' && xAlign === 'left') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x, y + radius);\r\n                        ctx.quadraticCurveTo(x, y, x + radius, y);\r\n                        ctx.closePath();\r\n\r\n                        ctx.fill();\r\n\r\n                        if (vm.borderWidth > 0) {\r\n                            ctx.stroke();\r\n                        }\r\n                    },\r\n                    draw: function() {\r\n                        var ctx = this._chart.ctx;\r\n                        var vm = this._view;\r\n\r\n                        if (vm.opacity === 0) {\r\n                            return;\r\n                        }\r\n\r\n                        var tooltipSize = {\r\n                            width: vm.width,\r\n                            height: vm.height\r\n                        };\r\n                        var pt = {\r\n                            x: vm.x,\r\n                            y: vm.y\r\n                        };\r\n\r\n                        // IE11/Edge does not like very small opacities, so snap to 0\r\n                        var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\r\n\r\n                        // Truthy/falsey value for empty tooltip\r\n                        var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\r\n\r\n                        if (this._options.enabled && hasTooltipContent) {\r\n                            // Draw Background\r\n                            this.drawBackground(pt, vm, ctx, tooltipSize, opacity);\r\n\r\n                            // Draw Title, Body, and Footer\r\n                            pt.x += vm.xPadding;\r\n                            pt.y += vm.yPadding;\r\n\r\n                            // Titles\r\n                            this.drawTitle(pt, vm, ctx, opacity);\r\n\r\n                            // Body\r\n                            this.drawBody(pt, vm, ctx, opacity);\r\n\r\n                            // Footer\r\n                            this.drawFooter(pt, vm, ctx, opacity);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Handle an event\r\n                     * @private\r\n                     * @param {IEvent} event - The event to handle\r\n                     * @returns {Boolean} true if the tooltip changed\r\n                     */\r\n                    handleEvent: function(e) {\r\n                        var me = this;\r\n                        var options = me._options;\r\n                        var changed = false;\r\n\r\n                        me._lastActive = me._lastActive || [];\r\n\r\n                        // Find Active Elements for tooltips\r\n                        if (e.type === 'mouseout') {\r\n                            me._active = [];\r\n                        } else {\r\n                            me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\r\n                        }\r\n\r\n                        // Remember Last Actives\r\n                        changed = !helpers.arrayEquals(me._active, me._lastActive);\r\n\r\n                        // Only handle target event on tooltip change\r\n                        if (changed) {\r\n                            me._lastActive = me._active;\r\n\r\n                            if (options.enabled || options.custom) {\r\n                                me._eventPosition = {\r\n                                    x: e.x,\r\n                                    y: e.y\r\n                                };\r\n\r\n                                me.update(true);\r\n                                me.pivot();\r\n                            }\r\n                        }\r\n\r\n                        return changed;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * @namespace Chart.Tooltip.positioners\r\n                 */\r\n                Chart.Tooltip.positioners = {\r\n                    /**\r\n                     * Average mode places the tooltip at the average position of the elements shown\r\n                     * @function Chart.Tooltip.positioners.average\r\n                     * @param elements {ChartElement[]} the elements being displayed in the tooltip\r\n                     * @returns {Point} tooltip position\r\n                     */\r\n                    average: function(elements) {\r\n                        if (!elements.length) {\r\n                            return false;\r\n                        }\r\n\r\n                        var i, len;\r\n                        var x = 0;\r\n                        var y = 0;\r\n                        var count = 0;\r\n\r\n                        for (i = 0, len = elements.length; i < len; ++i) {\r\n                            var el = elements[i];\r\n                            if (el && el.hasValue()) {\r\n                                var pos = el.tooltipPosition();\r\n                                x += pos.x;\r\n                                y += pos.y;\r\n                                ++count;\r\n                            }\r\n                        }\r\n\r\n                        return {\r\n                            x: Math.round(x / count),\r\n                            y: Math.round(y / count)\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Gets the tooltip position nearest of the item nearest to the event position\r\n                     * @function Chart.Tooltip.positioners.nearest\r\n                     * @param elements {Chart.Element[]} the tooltip elements\r\n                     * @param eventPosition {Point} the position of the event in canvas coordinates\r\n                     * @returns {Point} the tooltip position\r\n                     */\r\n                    nearest: function(elements, eventPosition) {\r\n                        var x = eventPosition.x;\r\n                        var y = eventPosition.y;\r\n                        var minDistance = Number.POSITIVE_INFINITY;\r\n                        var i, len, nearestElement;\r\n\r\n                        for (i = 0, len = elements.length; i < len; ++i) {\r\n                            var el = elements[i];\r\n                            if (el && el.hasValue()) {\r\n                                var center = el.getCenterPoint();\r\n                                var d = helpers.distanceBetweenPoints(eventPosition, center);\r\n\r\n                                if (d < minDistance) {\r\n                                    minDistance = d;\r\n                                    nearestElement = el;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (nearestElement) {\r\n                            var tp = nearestElement.tooltipPosition();\r\n                            x = tp.x;\r\n                            y = tp.y;\r\n                        }\r\n\r\n                        return {\r\n                            x: x,\r\n                            y: y\r\n                        };\r\n                    }\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 27: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    arc: {\r\n                        backgroundColor: defaults.global.defaultColor,\r\n                        borderColor: '#fff',\r\n                        borderWidth: 2\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = Element.extend({\r\n                inLabelRange: function(mouseX) {\r\n                    var vm = this._view;\r\n\r\n                    if (vm) {\r\n                        return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                inRange: function(chartX, chartY) {\r\n                    var vm = this._view;\r\n\r\n                    if (vm) {\r\n                        var pointRelativePosition = helpers.getAngleFromPoint(vm, { x: chartX, y: chartY });\r\n                        var angle = pointRelativePosition.angle;\r\n                        var distance = pointRelativePosition.distance;\r\n\r\n                        // Sanitise angle range\r\n                        var startAngle = vm.startAngle;\r\n                        var endAngle = vm.endAngle;\r\n                        while (endAngle < startAngle) {\r\n                            endAngle += 2.0 * Math.PI;\r\n                        }\r\n                        while (angle > endAngle) {\r\n                            angle -= 2.0 * Math.PI;\r\n                        }\r\n                        while (angle < startAngle) {\r\n                            angle += 2.0 * Math.PI;\r\n                        }\r\n\r\n                        // Check if within the range of the open/close angle\r\n                        var betweenAngles = (angle >= startAngle && angle <= endAngle);\r\n                        var withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\r\n\r\n                        return (betweenAngles && withinRadius);\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\r\n                    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\r\n                    return {\r\n                        x: vm.x + Math.cos(halfAngle) * halfRadius,\r\n                        y: vm.y + Math.sin(halfAngle) * halfRadius\r\n                    };\r\n                },\r\n\r\n                getArea: function() {\r\n                    var vm = this._view;\r\n                    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\r\n                    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\r\n\r\n                    return {\r\n                        x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\r\n                        y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\r\n                    };\r\n                },\r\n\r\n                draw: function() {\r\n                    var ctx = this._chart.ctx;\r\n                    var vm = this._view;\r\n                    var sA = vm.startAngle;\r\n                    var eA = vm.endAngle;\r\n\r\n                    ctx.beginPath();\r\n\r\n                    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\r\n                    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\r\n\r\n                    ctx.closePath();\r\n                    ctx.strokeStyle = vm.borderColor;\r\n                    ctx.lineWidth = vm.borderWidth;\r\n\r\n                    ctx.fillStyle = vm.backgroundColor;\r\n\r\n                    ctx.fill();\r\n                    ctx.lineJoin = 'bevel';\r\n\r\n                    if (vm.borderWidth) {\r\n                        ctx.stroke();\r\n                    }\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 28: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            var globalDefaults = defaults.global;\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    line: {\r\n                        tension: 0.4,\r\n                        backgroundColor: globalDefaults.defaultColor,\r\n                        borderWidth: 3,\r\n                        borderColor: globalDefaults.defaultColor,\r\n                        borderCapStyle: 'butt',\r\n                        borderDash: [],\r\n                        borderDashOffset: 0.0,\r\n                        borderJoinStyle: 'miter',\r\n                        capBezierPoints: true,\r\n                        fill: true, // do we fill in the area between the line and its base axis\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = Element.extend({\r\n                draw: function() {\r\n                    var me = this;\r\n                    var vm = me._view;\r\n                    var ctx = me._chart.ctx;\r\n                    var spanGaps = vm.spanGaps;\r\n                    var points = me._children.slice(); // clone array\r\n                    var globalOptionLineElements = globalDefaults.elements.line;\r\n                    var lastDrawnIndex = -1;\r\n                    var index, current, previous, currentVM;\r\n\r\n                    // If we are looping, adding the first point again\r\n                    if (me._loop && points.length) {\r\n                        points.push(points[0]);\r\n                    }\r\n\r\n                    ctx.save();\r\n\r\n                    // Stroke Line Options\r\n                    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\r\n\r\n                    // IE 9 and 10 do not support line dash\r\n                    if (ctx.setLineDash) {\r\n                        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\r\n                    }\r\n\r\n                    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\r\n                    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\r\n                    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\r\n                    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\r\n\r\n                    // Stroke Line\r\n                    ctx.beginPath();\r\n                    lastDrawnIndex = -1;\r\n\r\n                    for (index = 0; index < points.length; ++index) {\r\n                        current = points[index];\r\n                        previous = helpers.previousItem(points, index);\r\n                        currentVM = current._view;\r\n\r\n                        // First point moves to it's starting position no matter what\r\n                        if (index === 0) {\r\n                            if (!currentVM.skip) {\r\n                                ctx.moveTo(currentVM.x, currentVM.y);\r\n                                lastDrawnIndex = index;\r\n                            }\r\n                        } else {\r\n                            previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\r\n\r\n                            if (!currentVM.skip) {\r\n                                if ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\r\n                                    // There was a gap and this is the first point after the gap\r\n                                    ctx.moveTo(currentVM.x, currentVM.y);\r\n                                } else {\r\n                                    // Line to next point\r\n                                    helpers.canvas.lineTo(ctx, previous._view, current._view);\r\n                                }\r\n                                lastDrawnIndex = index;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    ctx.stroke();\r\n                    ctx.restore();\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 29: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            var defaultColor = defaults.global.defaultColor;\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    point: {\r\n                        radius: 3,\r\n                        pointStyle: 'circle',\r\n                        backgroundColor: defaultColor,\r\n                        borderColor: defaultColor,\r\n                        borderWidth: 1,\r\n                        // Hover\r\n                        hitRadius: 1,\r\n                        hoverRadius: 4,\r\n                        hoverBorderWidth: 1\r\n                    }\r\n                }\r\n            });\r\n\r\n            function xRange(mouseX) {\r\n                var vm = this._view;\r\n                return vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\r\n            }\r\n\r\n            function yRange(mouseY) {\r\n                var vm = this._view;\r\n                return vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\r\n            }\r\n\r\n            module.exports = Element.extend({\r\n                inRange: function(mouseX, mouseY) {\r\n                    var vm = this._view;\r\n                    return vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\r\n                },\r\n\r\n                inLabelRange: xRange,\r\n                inXRange: xRange,\r\n                inYRange: yRange,\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y\r\n                    };\r\n                },\r\n\r\n                getArea: function() {\r\n                    return Math.PI * Math.pow(this._view.radius, 2);\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y,\r\n                        padding: vm.radius + vm.borderWidth\r\n                    };\r\n                },\r\n\r\n                draw: function(chartArea) {\r\n                    var vm = this._view;\r\n                    var model = this._model;\r\n                    var ctx = this._chart.ctx;\r\n                    var pointStyle = vm.pointStyle;\r\n                    var radius = vm.radius;\r\n                    var x = vm.x;\r\n                    var y = vm.y;\r\n                    var color = helpers.color;\r\n                    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\r\n                    var ratio = 0;\r\n\r\n                    if (vm.skip) {\r\n                        return;\r\n                    }\r\n\r\n                    ctx.strokeStyle = vm.borderColor || defaultColor;\r\n                    ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\r\n                    ctx.fillStyle = vm.backgroundColor || defaultColor;\r\n\r\n                    // Cliping for Points.\r\n                    // going out from inner charArea?\r\n                    if ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\r\n                        // Point fade out\r\n                        if (model.x < chartArea.left) {\r\n                            ratio = (x - model.x) / (chartArea.left - model.x);\r\n                        } else if (chartArea.right * errMargin < model.x) {\r\n                            ratio = (model.x - x) / (model.x - chartArea.right);\r\n                        } else if (model.y < chartArea.top) {\r\n                            ratio = (y - model.y) / (chartArea.top - model.y);\r\n                        } else if (chartArea.bottom * errMargin < model.y) {\r\n                            ratio = (model.y - y) / (model.y - chartArea.bottom);\r\n                        }\r\n                        ratio = Math.round(ratio * 100) / 100;\r\n                        ctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\r\n                        ctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\r\n                    }\r\n\r\n                    helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 30: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    rectangle: {\r\n                        backgroundColor: defaults.global.defaultColor,\r\n                        borderColor: defaults.global.defaultColor,\r\n                        borderSkipped: 'bottom',\r\n                        borderWidth: 0\r\n                    }\r\n                }\r\n            });\r\n\r\n            function isVertical(bar) {\r\n                return bar._view.width !== undefined;\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the bounds of the bar regardless of the orientation\r\n             * @param bar {Chart.Element.Rectangle} the bar\r\n             * @return {Bounds} bounds of the bar\r\n             * @private\r\n             */\r\n            function getBarBounds(bar) {\r\n                var vm = bar._view;\r\n                var x1, x2, y1, y2;\r\n\r\n                if (isVertical(bar)) {\r\n                    // vertical\r\n                    var halfWidth = vm.width / 2;\r\n                    x1 = vm.x - halfWidth;\r\n                    x2 = vm.x + halfWidth;\r\n                    y1 = Math.min(vm.y, vm.base);\r\n                    y2 = Math.max(vm.y, vm.base);\r\n                } else {\r\n                    // horizontal bar\r\n                    var halfHeight = vm.height / 2;\r\n                    x1 = Math.min(vm.x, vm.base);\r\n                    x2 = Math.max(vm.x, vm.base);\r\n                    y1 = vm.y - halfHeight;\r\n                    y2 = vm.y + halfHeight;\r\n                }\r\n\r\n                return {\r\n                    left: x1,\r\n                    top: y1,\r\n                    right: x2,\r\n                    bottom: y2\r\n                };\r\n            }\r\n\r\n            module.exports = Element.extend({\r\n                draw: function() {\r\n                    var ctx = this._chart.ctx;\r\n                    var vm = this._view;\r\n                    var left, right, top, bottom, signX, signY, borderSkipped;\r\n                    var borderWidth = vm.borderWidth;\r\n\r\n                    if (!vm.horizontal) {\r\n                        // bar\r\n                        left = vm.x - vm.width / 2;\r\n                        right = vm.x + vm.width / 2;\r\n                        top = vm.y;\r\n                        bottom = vm.base;\r\n                        signX = 1;\r\n                        signY = bottom > top ? 1 : -1;\r\n                        borderSkipped = vm.borderSkipped || 'bottom';\r\n                    } else {\r\n                        // horizontal bar\r\n                        left = vm.base;\r\n                        right = vm.x;\r\n                        top = vm.y - vm.height / 2;\r\n                        bottom = vm.y + vm.height / 2;\r\n                        signX = right > left ? 1 : -1;\r\n                        signY = 1;\r\n                        borderSkipped = vm.borderSkipped || 'left';\r\n                    }\r\n\r\n                    // Canvas doesn't allow us to stroke inside the width so we can\r\n                    // adjust the sizes to fit if we're setting a stroke on the line\r\n                    if (borderWidth) {\r\n                        // borderWidth shold be less than bar width and bar height.\r\n                        var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n                        borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n                        var halfStroke = borderWidth / 2;\r\n                        // Adjust borderWidth when bar top position is near vm.base(zero).\r\n                        var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n                        var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n                        var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n                        var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n                        // not become a vertical line?\r\n                        if (borderLeft !== borderRight) {\r\n                            top = borderTop;\r\n                            bottom = borderBottom;\r\n                        }\r\n                        // not become a horizontal line?\r\n                        if (borderTop !== borderBottom) {\r\n                            left = borderLeft;\r\n                            right = borderRight;\r\n                        }\r\n                    }\r\n\r\n                    ctx.beginPath();\r\n                    ctx.fillStyle = vm.backgroundColor;\r\n                    ctx.strokeStyle = vm.borderColor;\r\n                    ctx.lineWidth = borderWidth;\r\n\r\n                    // Corner points, from bottom-left to bottom-right clockwise\r\n                    // | 1 2 |\r\n                    // | 0 3 |\r\n                    var corners = [\r\n                        [left, bottom],\r\n                        [left, top],\r\n                        [right, top],\r\n                        [right, bottom]\r\n                    ];\r\n\r\n                    // Find first (starting) corner with fallback to 'bottom'\r\n                    var borders = ['bottom', 'left', 'top', 'right'];\r\n                    var startCorner = borders.indexOf(borderSkipped, 0);\r\n                    if (startCorner === -1) {\r\n                        startCorner = 0;\r\n                    }\r\n\r\n                    function cornerAt(index) {\r\n                        return corners[(startCorner + index) % 4];\r\n                    }\r\n\r\n                    // Draw rectangle from 'startCorner'\r\n                    var corner = cornerAt(0);\r\n                    ctx.moveTo(corner[0], corner[1]);\r\n\r\n                    for (var i = 1; i < 4; i++) {\r\n                        corner = cornerAt(i);\r\n                        ctx.lineTo(corner[0], corner[1]);\r\n                    }\r\n\r\n                    ctx.fill();\r\n                    if (borderWidth) {\r\n                        ctx.stroke();\r\n                    }\r\n                },\r\n\r\n                height: function() {\r\n                    var vm = this._view;\r\n                    return vm.base - vm.y;\r\n                },\r\n\r\n                inRange: function(mouseX, mouseY) {\r\n                    var inRange = false;\r\n\r\n                    if (this._view) {\r\n                        var bounds = getBarBounds(this);\r\n                        inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                    }\r\n\r\n                    return inRange;\r\n                },\r\n\r\n                inLabelRange: function(mouseX, mouseY) {\r\n                    var me = this;\r\n                    if (!me._view) {\r\n                        return false;\r\n                    }\r\n\r\n                    var inRange = false;\r\n                    var bounds = getBarBounds(me);\r\n\r\n                    if (isVertical(me)) {\r\n                        inRange = mouseX >= bounds.left && mouseX <= bounds.right;\r\n                    } else {\r\n                        inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                    }\r\n\r\n                    return inRange;\r\n                },\r\n\r\n                inXRange: function(mouseX) {\r\n                    var bounds = getBarBounds(this);\r\n                    return mouseX >= bounds.left && mouseX <= bounds.right;\r\n                },\r\n\r\n                inYRange: function(mouseY) {\r\n                    var bounds = getBarBounds(this);\r\n                    return mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                },\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    var x, y;\r\n                    if (isVertical(this)) {\r\n                        x = vm.x;\r\n                        y = (vm.y + vm.base) / 2;\r\n                    } else {\r\n                        x = (vm.x + vm.base) / 2;\r\n                        y = vm.y;\r\n                    }\r\n\r\n                    return { x: x, y: y };\r\n                },\r\n\r\n                getArea: function() {\r\n                    var vm = this._view;\r\n                    return vm.width * Math.abs(vm.y - vm.base);\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y\r\n                    };\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17 }], 31: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = {};\r\n            module.exports.Arc = require(27);\r\n            module.exports.Line = require(28);\r\n            module.exports.Point = require(29);\r\n            module.exports.Rectangle = require(30);\r\n        }, { \"27\": 27, \"28\": 28, \"29\": 29, \"30\": 30 }], 32: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * @namespace Chart.helpers.canvas\r\n             */\r\n            var exports = module.exports = {\r\n                /**\r\n                 * Clears the entire canvas associated to the given `chart`.\r\n                 * @param {Chart} chart - The chart for which to clear the canvas.\r\n                 */\r\n                clear: function(chart) {\r\n                    chart.ctx.clearRect(0, 0, chart.width, chart.height);\r\n                },\r\n\r\n                /**\r\n                 * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\r\n                 * given size (width, height) and the same `radius` for all corners.\r\n                 * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\r\n                 * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\r\n                 * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\r\n                 * @param {Number} width - The rectangle's width.\r\n                 * @param {Number} height - The rectangle's height.\r\n                 * @param {Number} radius - The rounded amount (in pixels) for the four corners.\r\n                 * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\r\n                 */\r\n                roundedRect: function(ctx, x, y, width, height, radius) {\r\n                    if (radius) {\r\n                        var rx = Math.min(radius, width / 2);\r\n                        var ry = Math.min(radius, height / 2);\r\n\r\n                        ctx.moveTo(x + rx, y);\r\n                        ctx.lineTo(x + width - rx, y);\r\n                        ctx.quadraticCurveTo(x + width, y, x + width, y + ry);\r\n                        ctx.lineTo(x + width, y + height - ry);\r\n                        ctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\r\n                        ctx.lineTo(x + rx, y + height);\r\n                        ctx.quadraticCurveTo(x, y + height, x, y + height - ry);\r\n                        ctx.lineTo(x, y + ry);\r\n                        ctx.quadraticCurveTo(x, y, x + rx, y);\r\n                    } else {\r\n                        ctx.rect(x, y, width, height);\r\n                    }\r\n                },\r\n\r\n                drawPoint: function(ctx, style, radius, x, y) {\r\n                    var type, edgeLength, xOffset, yOffset, height, size;\r\n\r\n                    if (style && typeof style === 'object') {\r\n                        type = style.toString();\r\n                        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n                            ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    if (isNaN(radius) || radius <= 0) {\r\n                        return;\r\n                    }\r\n\r\n                    switch (style) {\r\n                        // Default includes circle\r\n                        default:\r\n                            ctx.beginPath();\r\n                            ctx.arc(x, y, radius, 0, Math.PI * 2);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'triangle':\r\n                            ctx.beginPath();\r\n                            edgeLength = 3 * radius / Math.sqrt(3);\r\n                            height = edgeLength * Math.sqrt(3) / 2;\r\n                            ctx.moveTo(x - edgeLength / 2, y + height / 3);\r\n                            ctx.lineTo(x + edgeLength / 2, y + height / 3);\r\n                            ctx.lineTo(x, y - 2 * height / 3);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'rect':\r\n                            size = 1 / Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            ctx.fillRect(x - size, y - size, 2 * size, 2 * size);\r\n                            ctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\r\n                            break;\r\n                        case 'rectRounded':\r\n                            var offset = radius / Math.SQRT2;\r\n                            var leftX = x - offset;\r\n                            var topY = y - offset;\r\n                            var sideSize = Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'rectRot':\r\n                            size = 1 / Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x - size, y);\r\n                            ctx.lineTo(x, y + size);\r\n                            ctx.lineTo(x + size, y);\r\n                            ctx.lineTo(x, y - size);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'cross':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y + radius);\r\n                            ctx.lineTo(x, y - radius);\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'crossRot':\r\n                            ctx.beginPath();\r\n                            xOffset = Math.cos(Math.PI / 4) * radius;\r\n                            yOffset = Math.sin(Math.PI / 4) * radius;\r\n                            ctx.moveTo(x - xOffset, y - yOffset);\r\n                            ctx.lineTo(x + xOffset, y + yOffset);\r\n                            ctx.moveTo(x - xOffset, y + yOffset);\r\n                            ctx.lineTo(x + xOffset, y - yOffset);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'star':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y + radius);\r\n                            ctx.lineTo(x, y - radius);\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            xOffset = Math.cos(Math.PI / 4) * radius;\r\n                            yOffset = Math.sin(Math.PI / 4) * radius;\r\n                            ctx.moveTo(x - xOffset, y - yOffset);\r\n                            ctx.lineTo(x + xOffset, y + yOffset);\r\n                            ctx.moveTo(x - xOffset, y + yOffset);\r\n                            ctx.lineTo(x + xOffset, y - yOffset);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'line':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'dash':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                    }\r\n\r\n                    ctx.stroke();\r\n                },\r\n\r\n                clipArea: function(ctx, area) {\r\n                    ctx.save();\r\n                    ctx.beginPath();\r\n                    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\r\n                    ctx.clip();\r\n                },\r\n\r\n                unclipArea: function(ctx) {\r\n                    ctx.restore();\r\n                },\r\n\r\n                lineTo: function(ctx, previous, target, flip) {\r\n                    if (target.steppedLine) {\r\n                        if ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\r\n                            ctx.lineTo(previous.x, target.y);\r\n                        } else {\r\n                            ctx.lineTo(target.x, previous.y);\r\n                        }\r\n                        ctx.lineTo(target.x, target.y);\r\n                        return;\r\n                    }\r\n\r\n                    if (!target.tension) {\r\n                        ctx.lineTo(target.x, target.y);\r\n                        return;\r\n                    }\r\n\r\n                    ctx.bezierCurveTo(\r\n                        flip ? previous.controlPointPreviousX : previous.controlPointNextX,\r\n                        flip ? previous.controlPointPreviousY : previous.controlPointNextY,\r\n                        flip ? target.controlPointNextX : target.controlPointPreviousX,\r\n                        flip ? target.controlPointNextY : target.controlPointPreviousY,\r\n                        target.x,\r\n                        target.y);\r\n                }\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\r\n             * @namespace Chart.helpers.clear\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.clear = exports.clear;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\r\n             * @namespace Chart.helpers.drawRoundedRectangle\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.drawRoundedRectangle = function(ctx) {\r\n                ctx.beginPath();\r\n                exports.roundedRect.apply(exports, arguments);\r\n                ctx.closePath();\r\n            };\r\n        }, { \"33\": 33 }], 33: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            /**\r\n             * @namespace Chart.helpers\r\n             */\r\n            var helpers = {\r\n                /**\r\n                 * An empty function that can be used, for example, for optional callback.\r\n                 */\r\n                noop: function() { },\r\n\r\n                /**\r\n                 * Returns a unique id, sequentially generated from a global variable.\r\n                 * @returns {Number}\r\n                 * @function\r\n                 */\r\n                uid: (function() {\r\n                    var id = 0;\r\n                    return function() {\r\n                        return id++;\r\n                    };\r\n                }()),\r\n\r\n                /**\r\n                 * Returns true if `value` is neither null nor undefined, else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @since 2.7.0\r\n                 */\r\n                isNullOrUndef: function(value) {\r\n                    return value === null || typeof value === 'undefined';\r\n                },\r\n\r\n                /**\r\n                 * Returns true if `value` is an array, else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @function\r\n                 */\r\n                isArray: Array.isArray ? Array.isArray : function(value) {\r\n                    return Object.prototype.toString.call(value) === '[object Array]';\r\n                },\r\n\r\n                /**\r\n                 * Returns true if `value` is an object (excluding null), else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @since 2.7.0\r\n                 */\r\n                isObject: function(value) {\r\n                    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\r\n                },\r\n\r\n                /**\r\n                 * Returns `value` if defined, else returns `defaultValue`.\r\n                 * @param {*} value - The value to return if defined.\r\n                 * @param {*} defaultValue - The value to return if `value` is undefined.\r\n                 * @returns {*}\r\n                 */\r\n                valueOrDefault: function(value, defaultValue) {\r\n                    return typeof value === 'undefined' ? defaultValue : value;\r\n                },\r\n\r\n                /**\r\n                 * Returns value at the given `index` in array if defined, else returns `defaultValue`.\r\n                 * @param {Array} value - The array to lookup for value at `index`.\r\n                 * @param {Number} index - The index in `value` to lookup for value.\r\n                 * @param {*} defaultValue - The value to return if `value[index]` is undefined.\r\n                 * @returns {*}\r\n                 */\r\n                valueAtIndexOrDefault: function(value, index, defaultValue) {\r\n                    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\r\n                },\r\n\r\n                /**\r\n                 * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\r\n                 * value returned by `fn`. If `fn` is not a function, this method returns undefined.\r\n                 * @param {Function} fn - The function to call.\r\n                 * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\r\n                 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\r\n                 * @returns {*}\r\n                 */\r\n                callback: function(fn, args, thisArg) {\r\n                    if (fn && typeof fn.call === 'function') {\r\n                        return fn.apply(thisArg, args);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Note(SB) for performance sake, this method should only be used when loopable type\r\n                 * is unknown or in none intensive code (not called often and small loopable). Else\r\n                 * it's preferable to use a regular for() loop and save extra function calls.\r\n                 * @param {Object|Array} loopable - The object or array to be iterated.\r\n                 * @param {Function} fn - The function to call for each item.\r\n                 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\r\n                 * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\r\n                 */\r\n                each: function(loopable, fn, thisArg, reverse) {\r\n                    var i, len, keys;\r\n                    if (helpers.isArray(loopable)) {\r\n                        len = loopable.length;\r\n                        if (reverse) {\r\n                            for (i = len - 1; i >= 0; i--) {\r\n                                fn.call(thisArg, loopable[i], i);\r\n                            }\r\n                        } else {\r\n                            for (i = 0; i < len; i++) {\r\n                                fn.call(thisArg, loopable[i], i);\r\n                            }\r\n                        }\r\n                    } else if (helpers.isObject(loopable)) {\r\n                        keys = Object.keys(loopable);\r\n                        len = keys.length;\r\n                        for (i = 0; i < len; i++) {\r\n                            fn.call(thisArg, loopable[keys[i]], keys[i]);\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\r\n                 * @see http://stackoverflow.com/a/14853974\r\n                 * @param {Array} a0 - The array to compare\r\n                 * @param {Array} a1 - The array to compare\r\n                 * @returns {Boolean}\r\n                 */\r\n                arrayEquals: function(a0, a1) {\r\n                    var i, ilen, v0, v1;\r\n\r\n                    if (!a0 || !a1 || a0.length !== a1.length) {\r\n                        return false;\r\n                    }\r\n\r\n                    for (i = 0, ilen = a0.length; i < ilen; ++i) {\r\n                        v0 = a0[i];\r\n                        v1 = a1[i];\r\n\r\n                        if (v0 instanceof Array && v1 instanceof Array) {\r\n                            if (!helpers.arrayEquals(v0, v1)) {\r\n                                return false;\r\n                            }\r\n                        } else if (v0 !== v1) {\r\n                            // NOTE: two different object instances will never be equal: {x:20} != {x:20}\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                },\r\n\r\n                /**\r\n                 * Returns a deep copy of `source` without keeping references on objects and arrays.\r\n                 * @param {*} source - The value to clone.\r\n                 * @returns {*}\r\n                 */\r\n                clone: function(source) {\r\n                    if (helpers.isArray(source)) {\r\n                        return source.map(helpers.clone);\r\n                    }\r\n\r\n                    if (helpers.isObject(source)) {\r\n                        var target = {};\r\n                        var keys = Object.keys(source);\r\n                        var klen = keys.length;\r\n                        var k = 0;\r\n\r\n                        for (; k < klen; ++k) {\r\n                            target[keys[k]] = helpers.clone(source[keys[k]]);\r\n                        }\r\n\r\n                        return target;\r\n                    }\r\n\r\n                    return source;\r\n                },\r\n\r\n                /**\r\n                 * The default merger when Chart.helpers.merge is called without merger option.\r\n                 * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\r\n                 * @private\r\n                 */\r\n                _merger: function(key, target, source, options) {\r\n                    var tval = target[key];\r\n                    var sval = source[key];\r\n\r\n                    if (helpers.isObject(tval) && helpers.isObject(sval)) {\r\n                        helpers.merge(tval, sval, options);\r\n                    } else {\r\n                        target[key] = helpers.clone(sval);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Merges source[key] in target[key] only if target[key] is undefined.\r\n                 * @private\r\n                 */\r\n                _mergerIf: function(key, target, source) {\r\n                    var tval = target[key];\r\n                    var sval = source[key];\r\n\r\n                    if (helpers.isObject(tval) && helpers.isObject(sval)) {\r\n                        helpers.mergeIf(tval, sval);\r\n                    } else if (!target.hasOwnProperty(key)) {\r\n                        target[key] = helpers.clone(sval);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Recursively deep copies `source` properties into `target` with the given `options`.\r\n                 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n                 * @param {Object} target - The target object in which all sources are merged into.\r\n                 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\r\n                 * @param {Object} [options] - Merging options:\r\n                 * @param {Function} [options.merger] - The merge method (key, target, source, options)\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                merge: function(target, source, options) {\r\n                    var sources = helpers.isArray(source) ? source : [source];\r\n                    var ilen = sources.length;\r\n                    var merge, i, keys, klen, k;\r\n\r\n                    if (!helpers.isObject(target)) {\r\n                        return target;\r\n                    }\r\n\r\n                    options = options || {};\r\n                    merge = options.merger || helpers._merger;\r\n\r\n                    for (i = 0; i < ilen; ++i) {\r\n                        source = sources[i];\r\n                        if (!helpers.isObject(source)) {\r\n                            continue;\r\n                        }\r\n\r\n                        keys = Object.keys(source);\r\n                        for (k = 0, klen = keys.length; k < klen; ++k) {\r\n                            merge(keys[k], target, source, options);\r\n                        }\r\n                    }\r\n\r\n                    return target;\r\n                },\r\n\r\n                /**\r\n                 * Recursively deep copies `source` properties into `target` *only* if not defined in target.\r\n                 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n                 * @param {Object} target - The target object in which all sources are merged into.\r\n                 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                mergeIf: function(target, source) {\r\n                    return helpers.merge(target, source, { merger: helpers._mergerIf });\r\n                },\r\n\r\n                /**\r\n                 * Applies the contents of two or more objects together into the first object.\r\n                 * @param {Object} target - The target object in which all objects are merged into.\r\n                 * @param {Object} arg1 - Object containing additional properties to merge in target.\r\n                 * @param {Object} argN - Additional objects containing properties to merge in target.\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                extend: function(target) {\r\n                    var setFn = function(value, key) {\r\n                        target[key] = value;\r\n                    };\r\n                    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\r\n                        helpers.each(arguments[i], setFn);\r\n                    }\r\n                    return target;\r\n                },\r\n\r\n                /**\r\n                 * Basic javascript inheritance based on the model created in Backbone.js\r\n                 */\r\n                inherits: function(extensions) {\r\n                    var me = this;\r\n                    var ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\r\n                        return me.apply(this, arguments);\r\n                    };\r\n\r\n                    var Surrogate = function() {\r\n                        this.constructor = ChartElement;\r\n                    };\r\n\r\n                    Surrogate.prototype = me.prototype;\r\n                    ChartElement.prototype = new Surrogate();\r\n                    ChartElement.extend = helpers.inherits;\r\n\r\n                    if (extensions) {\r\n                        helpers.extend(ChartElement.prototype, extensions);\r\n                    }\r\n\r\n                    ChartElement.__super__ = me.prototype;\r\n                    return ChartElement;\r\n                }\r\n            };\r\n\r\n            module.exports = helpers;\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.callback instead.\r\n             * @function Chart.helpers.callCallback\r\n             * @deprecated since version 2.6.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.callCallback = helpers.callback;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Array.prototype.indexOf instead.\r\n             * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\r\n             * @function Chart.helpers.indexOf\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.indexOf = function(array, item, fromIndex) {\r\n                return Array.prototype.indexOf.call(array, item, fromIndex);\r\n            };\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\r\n             * @function Chart.helpers.getValueOrDefault\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.getValueOrDefault = helpers.valueOrDefault;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\r\n             * @function Chart.helpers.getValueAtIndexOrDefault\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n        }, {}], 34: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * Easing functions adapted from Robert Penner's easing equations.\r\n             * @namespace Chart.helpers.easingEffects\r\n             * @see http://www.robertpenner.com/easing/\r\n             */\r\n            var effects = {\r\n                linear: function(t) {\r\n                    return t;\r\n                },\r\n\r\n                easeInQuad: function(t) {\r\n                    return t * t;\r\n                },\r\n\r\n                easeOutQuad: function(t) {\r\n                    return -t * (t - 2);\r\n                },\r\n\r\n                easeInOutQuad: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t;\r\n                    }\r\n                    return -0.5 * ((--t) * (t - 2) - 1);\r\n                },\r\n\r\n                easeInCubic: function(t) {\r\n                    return t * t * t;\r\n                },\r\n\r\n                easeOutCubic: function(t) {\r\n                    return (t = t - 1) * t * t + 1;\r\n                },\r\n\r\n                easeInOutCubic: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t;\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * t + 2);\r\n                },\r\n\r\n                easeInQuart: function(t) {\r\n                    return t * t * t * t;\r\n                },\r\n\r\n                easeOutQuart: function(t) {\r\n                    return -((t = t - 1) * t * t * t - 1);\r\n                },\r\n\r\n                easeInOutQuart: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t * t;\r\n                    }\r\n                    return -0.5 * ((t -= 2) * t * t * t - 2);\r\n                },\r\n\r\n                easeInQuint: function(t) {\r\n                    return t * t * t * t * t;\r\n                },\r\n\r\n                easeOutQuint: function(t) {\r\n                    return (t = t - 1) * t * t * t * t + 1;\r\n                },\r\n\r\n                easeInOutQuint: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t * t * t;\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * t * t * t + 2);\r\n                },\r\n\r\n                easeInSine: function(t) {\r\n                    return -Math.cos(t * (Math.PI / 2)) + 1;\r\n                },\r\n\r\n                easeOutSine: function(t) {\r\n                    return Math.sin(t * (Math.PI / 2));\r\n                },\r\n\r\n                easeInOutSine: function(t) {\r\n                    return -0.5 * (Math.cos(Math.PI * t) - 1);\r\n                },\r\n\r\n                easeInExpo: function(t) {\r\n                    return (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\r\n                },\r\n\r\n                easeOutExpo: function(t) {\r\n                    return (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\r\n                },\r\n\r\n                easeInOutExpo: function(t) {\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * Math.pow(2, 10 * (t - 1));\r\n                    }\r\n                    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\r\n                },\r\n\r\n                easeInCirc: function(t) {\r\n                    if (t >= 1) {\r\n                        return t;\r\n                    }\r\n                    return -(Math.sqrt(1 - t * t) - 1);\r\n                },\r\n\r\n                easeOutCirc: function(t) {\r\n                    return Math.sqrt(1 - (t = t - 1) * t);\r\n                },\r\n\r\n                easeInOutCirc: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return -0.5 * (Math.sqrt(1 - t * t) - 1);\r\n                    }\r\n                    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\r\n                },\r\n\r\n                easeInElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.3;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\r\n                },\r\n\r\n                easeOutElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.3;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\r\n                },\r\n\r\n                easeInOutElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if ((t /= 0.5) === 2) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.45;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    if (t < 1) {\r\n                        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\r\n                    }\r\n                    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n                },\r\n                easeInBack: function(t) {\r\n                    var s = 1.70158;\r\n                    return t * t * ((s + 1) * t - s);\r\n                },\r\n\r\n                easeOutBack: function(t) {\r\n                    var s = 1.70158;\r\n                    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\r\n                },\r\n\r\n                easeInOutBack: function(t) {\r\n                    var s = 1.70158;\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n                },\r\n\r\n                easeInBounce: function(t) {\r\n                    return 1 - effects.easeOutBounce(1 - t);\r\n                },\r\n\r\n                easeOutBounce: function(t) {\r\n                    if (t < (1 / 2.75)) {\r\n                        return 7.5625 * t * t;\r\n                    }\r\n                    if (t < (2 / 2.75)) {\r\n                        return 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\r\n                    }\r\n                    if (t < (2.5 / 2.75)) {\r\n                        return 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\r\n                    }\r\n                    return 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\r\n                },\r\n\r\n                easeInOutBounce: function(t) {\r\n                    if (t < 0.5) {\r\n                        return effects.easeInBounce(t * 2) * 0.5;\r\n                    }\r\n                    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\r\n                }\r\n            };\r\n\r\n            module.exports = {\r\n                effects: effects\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\r\n             * @function Chart.helpers.easingEffects\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.easingEffects = effects;\r\n        }, { \"33\": 33 }], 35: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * @alias Chart.helpers.options\r\n             * @namespace\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Converts the given line height `value` in pixels for a specific font `size`.\r\n                 * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\r\n                 * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\r\n                 * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\r\n                 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\r\n                 * @since 2.7.0\r\n                 */\r\n                toLineHeight: function(value, size) {\r\n                    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\r\n                    if (!matches || matches[1] === 'normal') {\r\n                        return size * 1.2;\r\n                    }\r\n\r\n                    value = +matches[2];\r\n\r\n                    switch (matches[3]) {\r\n                        case 'px':\r\n                            return value;\r\n                        case '%':\r\n                            value /= 100;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n\r\n                    return size * value;\r\n                },\r\n\r\n                /**\r\n                 * Converts the given value into a padding object with pre-computed width/height.\r\n                 * @param {Number|Object} value - If a number, set the value to all TRBL component,\r\n                 *  else, if and object, use defined properties and sets undefined ones to 0.\r\n                 * @returns {Object} The padding values (top, right, bottom, left, width, height)\r\n                 * @since 2.7.0\r\n                 */\r\n                toPadding: function(value) {\r\n                    var t, r, b, l;\r\n\r\n                    if (helpers.isObject(value)) {\r\n                        t = +value.top || 0;\r\n                        r = +value.right || 0;\r\n                        b = +value.bottom || 0;\r\n                        l = +value.left || 0;\r\n                    } else {\r\n                        t = r = b = l = +value || 0;\r\n                    }\r\n\r\n                    return {\r\n                        top: t,\r\n                        right: r,\r\n                        bottom: b,\r\n                        left: l,\r\n                        height: t + b,\r\n                        width: l + r\r\n                    };\r\n                },\r\n\r\n                /**\r\n                 * Evaluates the given `inputs` sequentially and returns the first defined value.\r\n                 * @param {Array[]} inputs - An array of values, falling back to the last value.\r\n                 * @param {Object} [context] - If defined and the current value is a function, the value\r\n                 * is called with `context` as first argument and the result becomes the new input.\r\n                 * @param {Number} [index] - If defined and the current value is an array, the value\r\n                 * at `index` become the new input.\r\n                 * @since 2.7.0\r\n                 */\r\n                resolve: function(inputs, context, index) {\r\n                    var i, ilen, value;\r\n\r\n                    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\r\n                        value = inputs[i];\r\n                        if (value === undefined) {\r\n                            continue;\r\n                        }\r\n                        if (context !== undefined && typeof value === 'function') {\r\n                            value = value(context);\r\n                        }\r\n                        if (index !== undefined && helpers.isArray(value)) {\r\n                            value = value[index];\r\n                        }\r\n                        if (value !== undefined) {\r\n                            return value;\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }, { \"33\": 33 }], 36: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = require(33);\r\n            module.exports.easing = require(34);\r\n            module.exports.canvas = require(32);\r\n            module.exports.options = require(35);\r\n        }, { \"32\": 32, \"33\": 33, \"34\": 34, \"35\": 35 }], 37: [function(require, module, exports) {\r\n            /**\r\n             * Platform fallback implementation (minimal).\r\n             * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\r\n             */\r\n\r\n            module.exports = {\r\n                acquireContext: function(item) {\r\n                    if (item && item.canvas) {\r\n                        // Support for any object associated to a canvas (including a context2d)\r\n                        item = item.canvas;\r\n                    }\r\n\r\n                    return item && item.getContext('2d') || null;\r\n                }\r\n            };\r\n        }, {}], 38: [function(require, module, exports) {\r\n            /**\r\n             * Chart.Platform implementation for targeting a web browser\r\n             */\r\n\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            var EXPANDO_KEY = '$chartjs';\r\n            var CSS_PREFIX = 'chartjs-';\r\n            var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\r\n            var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\r\n            var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\r\n\r\n            /**\r\n             * DOM event types -> Chart.js event types.\r\n             * Note: only events with different types are mapped.\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/Events\r\n             */\r\n            var EVENT_TYPES = {\r\n                touchstart: 'mousedown',\r\n                touchmove: 'mousemove',\r\n                touchend: 'mouseup',\r\n                pointerenter: 'mouseenter',\r\n                pointerdown: 'mousedown',\r\n                pointermove: 'mousemove',\r\n                pointerup: 'mouseup',\r\n                pointerleave: 'mouseout',\r\n                pointerout: 'mouseout'\r\n            };\r\n\r\n            /**\r\n             * The \"used\" size is the final value of a dimension property after all calculations have\r\n             * been performed. This method uses the computed style of `element` but returns undefined\r\n             * if the computed style is not expressed in pixels. That can happen in some cases where\r\n             * `element` has a size relative to its parent and this last one is not yet displayed,\r\n             * for example because of `display: none` on a parent node.\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\r\n             * @returns {Number} Size in pixels or undefined if unknown.\r\n             */\r\n            function readUsedSize(element, property) {\r\n                var value = helpers.getStyle(element, property);\r\n                var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\r\n                return matches ? Number(matches[1]) : undefined;\r\n            }\r\n\r\n            /**\r\n             * Initializes the canvas style and render size without modifying the canvas display size,\r\n             * since responsiveness is handled by the controller.resize() method. The config is used\r\n             * to determine the aspect ratio to apply in case no explicit height has been specified.\r\n             */\r\n            function initCanvas(canvas, config) {\r\n                var style = canvas.style;\r\n\r\n                // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\r\n                // returns null or '' if no explicit value has been set to the canvas attribute.\r\n                var renderHeight = canvas.getAttribute('height');\r\n                var renderWidth = canvas.getAttribute('width');\r\n\r\n                // Chart.js modifies some canvas values that we want to restore on destroy\r\n                canvas[EXPANDO_KEY] = {\r\n                    initial: {\r\n                        height: renderHeight,\r\n                        width: renderWidth,\r\n                        style: {\r\n                            display: style.display,\r\n                            height: style.height,\r\n                            width: style.width\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // Force canvas to display as block to avoid extra space caused by inline\r\n                // elements, which would interfere with the responsive resize process.\r\n                // https://github.com/chartjs/Chart.js/issues/2538\r\n                style.display = style.display || 'block';\r\n\r\n                if (renderWidth === null || renderWidth === '') {\r\n                    var displayWidth = readUsedSize(canvas, 'width');\r\n                    if (displayWidth !== undefined) {\r\n                        canvas.width = displayWidth;\r\n                    }\r\n                }\r\n\r\n                if (renderHeight === null || renderHeight === '') {\r\n                    if (canvas.style.height === '') {\r\n                        // If no explicit render height and style height, let's apply the aspect ratio,\r\n                        // which one can be specified by the user but also by charts as default option\r\n                        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\r\n                        canvas.height = canvas.width / (config.options.aspectRatio || 2);\r\n                    } else {\r\n                        var displayHeight = readUsedSize(canvas, 'height');\r\n                        if (displayWidth !== undefined) {\r\n                            canvas.height = displayHeight;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return canvas;\r\n            }\r\n\r\n            /**\r\n             * Detects support for options object argument in addEventListener.\r\n             * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\r\n             * @private\r\n             */\r\n            var supportsEventListenerOptions = (function() {\r\n                var supports = false;\r\n                try {\r\n                    var options = Object.defineProperty({}, 'passive', {\r\n                        get: function() {\r\n                            supports = true;\r\n                        }\r\n                    });\r\n                    window.addEventListener('e', null, options);\r\n                } catch (e) {\r\n                    // continue regardless of error\r\n                }\r\n                return supports;\r\n            }());\r\n\r\n            // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\r\n            // https://github.com/chartjs/Chart.js/issues/4287\r\n            var eventListenerOptions = supportsEventListenerOptions ? { passive: true } : false;\r\n\r\n            function addEventListener(node, type, listener) {\r\n                node.addEventListener(type, listener, eventListenerOptions);\r\n            }\r\n\r\n            function removeEventListener(node, type, listener) {\r\n                node.removeEventListener(type, listener, eventListenerOptions);\r\n            }\r\n\r\n            function createEvent(type, chart, x, y, nativeEvent) {\r\n                return {\r\n                    type: type,\r\n                    chart: chart,\r\n                    native: nativeEvent || null,\r\n                    x: x !== undefined ? x : null,\r\n                    y: y !== undefined ? y : null,\r\n                };\r\n            }\r\n\r\n            function fromNativeEvent(event, chart) {\r\n                var type = EVENT_TYPES[event.type] || event.type;\r\n                var pos = helpers.getRelativePosition(event, chart);\r\n                return createEvent(type, chart, pos.x, pos.y, event);\r\n            }\r\n\r\n            function throttled(fn, thisArg) {\r\n                var ticking = false;\r\n                var args = [];\r\n\r\n                return function() {\r\n                    args = Array.prototype.slice.call(arguments);\r\n                    thisArg = thisArg || this;\r\n\r\n                    if (!ticking) {\r\n                        ticking = true;\r\n                        helpers.requestAnimFrame.call(window, function() {\r\n                            ticking = false;\r\n                            fn.apply(thisArg, args);\r\n                        });\r\n                    }\r\n                };\r\n            }\r\n\r\n            // Implementation based on https://github.com/marcj/css-element-queries\r\n            function createResizer(handler) {\r\n                var resizer = document.createElement('div');\r\n                var cls = CSS_PREFIX + 'size-monitor';\r\n                var maxSize = 1000000;\r\n                var style =\r\n                    'position:absolute;' +\r\n                    'left:0;' +\r\n                    'top:0;' +\r\n                    'right:0;' +\r\n                    'bottom:0;' +\r\n                    'overflow:hidden;' +\r\n                    'pointer-events:none;' +\r\n                    'visibility:hidden;' +\r\n                    'z-index:-1;';\r\n\r\n                resizer.style.cssText = style;\r\n                resizer.className = cls;\r\n                resizer.innerHTML =\r\n                    '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\r\n                    '<div style=\"' +\r\n                    'position:absolute;' +\r\n                    'width:' + maxSize + 'px;' +\r\n                    'height:' + maxSize + 'px;' +\r\n                    'left:0;' +\r\n                    'top:0\">' +\r\n                    '</div>' +\r\n                    '</div>' +\r\n                    '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\r\n                    '<div style=\"' +\r\n                    'position:absolute;' +\r\n                    'width:200%;' +\r\n                    'height:200%;' +\r\n                    'left:0; ' +\r\n                    'top:0\">' +\r\n                    '</div>' +\r\n                    '</div>';\r\n\r\n                var expand = resizer.childNodes[0];\r\n                var shrink = resizer.childNodes[1];\r\n\r\n                resizer._reset = function() {\r\n                    expand.scrollLeft = maxSize;\r\n                    expand.scrollTop = maxSize;\r\n                    shrink.scrollLeft = maxSize;\r\n                    shrink.scrollTop = maxSize;\r\n                };\r\n                var onScroll = function() {\r\n                    resizer._reset();\r\n                    handler();\r\n                };\r\n\r\n                addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\r\n                addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\r\n\r\n                return resizer;\r\n            }\r\n\r\n            // https://davidwalsh.name/detect-node-insertion\r\n            function watchForRender(node, handler) {\r\n                var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\r\n                var proxy = expando.renderProxy = function(e) {\r\n                    if (e.animationName === CSS_RENDER_ANIMATION) {\r\n                        handler();\r\n                    }\r\n                };\r\n\r\n                helpers.each(ANIMATION_START_EVENTS, function(type) {\r\n                    addEventListener(node, type, proxy);\r\n                });\r\n\r\n                // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\r\n                // is removed then added back immediately (same animation frame?). Accessing the\r\n                // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\r\n                // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\r\n                // https://github.com/chartjs/Chart.js/issues/4737\r\n                expando.reflow = !!node.offsetParent;\r\n\r\n                node.classList.add(CSS_RENDER_MONITOR);\r\n            }\r\n\r\n            function unwatchForRender(node) {\r\n                var expando = node[EXPANDO_KEY] || {};\r\n                var proxy = expando.renderProxy;\r\n\r\n                if (proxy) {\r\n                    helpers.each(ANIMATION_START_EVENTS, function(type) {\r\n                        removeEventListener(node, type, proxy);\r\n                    });\r\n\r\n                    delete expando.renderProxy;\r\n                }\r\n\r\n                node.classList.remove(CSS_RENDER_MONITOR);\r\n            }\r\n\r\n            function addResizeListener(node, listener, chart) {\r\n                var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\r\n\r\n                // Let's keep track of this added resizer and thus avoid DOM query when removing it.\r\n                var resizer = expando.resizer = createResizer(throttled(function() {\r\n                    if (expando.resizer) {\r\n                        return listener(createEvent('resize', chart));\r\n                    }\r\n                }));\r\n\r\n                // The resizer needs to be attached to the node parent, so we first need to be\r\n                // sure that `node` is attached to the DOM before injecting the resizer element.\r\n                watchForRender(node, function() {\r\n                    if (expando.resizer) {\r\n                        var container = node.parentNode;\r\n                        if (container && container !== resizer.parentNode) {\r\n                            container.insertBefore(resizer, container.firstChild);\r\n                        }\r\n\r\n                        // The container size might have changed, let's reset the resizer state.\r\n                        resizer._reset();\r\n                    }\r\n                });\r\n            }\r\n\r\n            function removeResizeListener(node) {\r\n                var expando = node[EXPANDO_KEY] || {};\r\n                var resizer = expando.resizer;\r\n\r\n                delete expando.resizer;\r\n                unwatchForRender(node);\r\n\r\n                if (resizer && resizer.parentNode) {\r\n                    resizer.parentNode.removeChild(resizer);\r\n                }\r\n            }\r\n\r\n            //function injectCSS(platform, css) {\r\n            //    // http://stackoverflow.com/q/3922139\r\n            //    var style = platform._style || document.createElement('style');\r\n            //    if (!platform._style) {\r\n            //        platform._style = style;\r\n            //        css = '/* Chart.js */\\n' + css;\r\n            //        style.setAttribute('type', 'text/css');\r\n            //        document.getElementsByTagName('head')[0].appendChild(style);\r\n            //    }\r\n\r\n            //    style.appendChild(document.createTextNode(css));\r\n            //}\r\n\r\n            module.exports = {\r\n                /**\r\n                 * This property holds whether this platform is enabled for the current environment.\r\n                 * Currently used by platform.js to select the proper implementation.\r\n                 * @private\r\n                 */\r\n                _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\r\n\r\n                initialize: function() {\r\n                    var keyframes = 'from{opacity:0.99}to{opacity:1}';\r\n                    //injectCSS(this,\r\n                    //    // DOM rendering detection\r\n                    //    // https://davidwalsh.name/detect-node-insertion\r\n                    //    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\r\n                    //    '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\r\n                    //    '.' + CSS_RENDER_MONITOR + '{' +\r\n                    //    '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\r\n                    //    'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\r\n                    //    '}'\r\n                    //);\r\n                },\r\n\r\n                acquireContext: function(item, config) {\r\n                    if (typeof item === 'string') {\r\n                        item = document.getElementById(item);\r\n                    } else if (item.length) {\r\n                        // Support for array based queries (such as jQuery)\r\n                        item = item[0];\r\n                    }\r\n\r\n                    if (item && item.canvas) {\r\n                        // Support for any object associated to a canvas (including a context2d)\r\n                        item = item.canvas;\r\n                    }\r\n\r\n                    // To prevent canvas fingerprinting, some add-ons undefine the getContext\r\n                    // method, for example: https://github.com/kkapsner/CanvasBlocker\r\n                    // https://github.com/chartjs/Chart.js/issues/2807\r\n                    var context = item && item.getContext && item.getContext('2d');\r\n\r\n                    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\r\n                    // inside an iframe or when running in a protected environment. We could guess the\r\n                    // types from their toString() value but let's keep things flexible and assume it's\r\n                    // a sufficient condition if the item has a context2D which has item as `canvas`.\r\n                    // https://github.com/chartjs/Chart.js/issues/3887\r\n                    // https://github.com/chartjs/Chart.js/issues/4102\r\n                    // https://github.com/chartjs/Chart.js/issues/4152\r\n                    if (context && context.canvas === item) {\r\n                        initCanvas(item, config);\r\n                        return context;\r\n                    }\r\n\r\n                    return null;\r\n                },\r\n\r\n                releaseContext: function(context) {\r\n                    var canvas = context.canvas;\r\n                    if (!canvas[EXPANDO_KEY]) {\r\n                        return;\r\n                    }\r\n\r\n                    var initial = canvas[EXPANDO_KEY].initial;\r\n                    ['height', 'width'].forEach(function(prop) {\r\n                        var value = initial[prop];\r\n                        if (helpers.isNullOrUndef(value)) {\r\n                            canvas.removeAttribute(prop);\r\n                        } else {\r\n                            canvas.setAttribute(prop, value);\r\n                        }\r\n                    });\r\n\r\n                    helpers.each(initial.style || {}, function(value, key) {\r\n                        canvas.style[key] = value;\r\n                    });\r\n\r\n                    // The canvas render size might have been changed (and thus the state stack discarded),\r\n                    // we can't use save() and restore() to restore the initial state. So make sure that at\r\n                    // least the canvas context is reset to the default state by setting the canvas width.\r\n                    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\r\n                    canvas.width = canvas.width;\r\n\r\n                    delete canvas[EXPANDO_KEY];\r\n                },\r\n\r\n                addEventListener: function(chart, type, listener) {\r\n                    var canvas = chart.canvas;\r\n                    if (type === 'resize') {\r\n                        // Note: the resize event is not supported on all browsers.\r\n                        addResizeListener(canvas, listener, chart);\r\n                        return;\r\n                    }\r\n\r\n                    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\r\n                    var proxies = expando.proxies || (expando.proxies = {});\r\n                    var proxy = proxies[chart.id + '_' + type] = function(event) {\r\n                        listener(fromNativeEvent(event, chart));\r\n                    };\r\n\r\n                    addEventListener(canvas, type, proxy);\r\n                },\r\n\r\n                removeEventListener: function(chart, type, listener) {\r\n                    var canvas = chart.canvas;\r\n                    if (type === 'resize') {\r\n                        // Note: the resize event is not supported on all browsers.\r\n                        removeResizeListener(canvas, listener);\r\n                        return;\r\n                    }\r\n\r\n                    var expando = listener[EXPANDO_KEY] || {};\r\n                    var proxies = expando.proxies || {};\r\n                    var proxy = proxies[chart.id + '_' + type];\r\n                    if (!proxy) {\r\n                        return;\r\n                    }\r\n\r\n                    removeEventListener(canvas, type, proxy);\r\n                }\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use EventTarget.addEventListener instead.\r\n             * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\r\n             * @function Chart.helpers.addEvent\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.addEvent = addEventListener;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use EventTarget.removeEventListener instead.\r\n             * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\r\n             * @function Chart.helpers.removeEvent\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.removeEvent = removeEventListener;\r\n        }, { \"36\": 36 }], 39: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n            var basic = require(37);\r\n            var dom = require(38);\r\n\r\n            // @TODO Make possible to select another platform at build time.\r\n            var implementation = dom._enabled ? dom : basic;\r\n\r\n            /**\r\n             * @namespace Chart.platform\r\n             * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\r\n             * @since 2.4.0\r\n             */\r\n            module.exports = helpers.extend({\r\n                /**\r\n                 * @since 2.7.0\r\n                 */\r\n                initialize: function() { },\r\n\r\n                /**\r\n                 * Called at chart construction time, returns a context2d instance implementing\r\n                 * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\r\n                 * @param {*} item - The native item from which to acquire context (platform specific)\r\n                 * @param {Object} options - The chart options\r\n                 * @returns {CanvasRenderingContext2D} context2d instance\r\n                 */\r\n                acquireContext: function() { },\r\n\r\n                /**\r\n                 * Called at chart destruction time, releases any resources associated to the context\r\n                 * previously returned by the acquireContext() method.\r\n                 * @param {CanvasRenderingContext2D} context - The context2d instance\r\n                 * @returns {Boolean} true if the method succeeded, else false\r\n                 */\r\n                releaseContext: function() { },\r\n\r\n                /**\r\n                 * Registers the specified listener on the given chart.\r\n                 * @param {Chart} chart - Chart from which to listen for event\r\n                 * @param {String} type - The ({@link IEvent}) type to listen for\r\n                 * @param {Function} listener - Receives a notification (an object that implements\r\n                 * the {@link IEvent} interface) when an event of the specified type occurs.\r\n                 */\r\n                addEventListener: function() { },\r\n\r\n                /**\r\n                 * Removes the specified listener previously registered with addEventListener.\r\n                 * @param {Chart} chart -Chart from which to remove the listener\r\n                 * @param {String} type - The ({@link IEvent}) type to remove\r\n                 * @param {Function} listener - The listener function to remove from the event target.\r\n                 */\r\n                removeEventListener: function() { }\r\n            }, implementation);\r\n\r\n            /**\r\n             * @interface IPlatform\r\n             * Allows abstracting platform dependencies away from the chart\r\n             * @borrows Chart.platform.acquireContext as acquireContext\r\n             * @borrows Chart.platform.releaseContext as releaseContext\r\n             * @borrows Chart.platform.addEventListener as addEventListener\r\n             * @borrows Chart.platform.removeEventListener as removeEventListener\r\n             */\r\n\r\n            /**\r\n             * @interface IEvent\r\n             * @prop {String} type - The event type name, possible values are:\r\n             * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\r\n             * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\r\n             * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\r\n             * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\r\n             * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\r\n             */\r\n        }, { \"36\": 36, \"37\": 37, \"38\": 38 }], 40: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = {};\r\n            module.exports.filler = require(41);\r\n            module.exports.legend = require(42);\r\n            module.exports.title = require(43);\r\n        }, { \"41\": 41, \"42\": 42, \"43\": 43 }], 41: [function(require, module, exports) {\r\n            /**\r\n             * Plugin based on discussion from the following Chart.js issues:\r\n             * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\r\n             * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\r\n             */\r\n\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                plugins: {\r\n                    filler: {\r\n                        propagate: true\r\n                    }\r\n                }\r\n            });\r\n\r\n            var mappers = {\r\n                dataset: function(source) {\r\n                    var index = source.fill;\r\n                    var chart = source.chart;\r\n                    var meta = chart.getDatasetMeta(index);\r\n                    var visible = meta && chart.isDatasetVisible(index);\r\n                    var points = (visible && meta.dataset._children) || [];\r\n                    var length = points.length || 0;\r\n\r\n                    return !length ? null : function(point, i) {\r\n                        return (i < length && points[i]._view) || null;\r\n                    };\r\n                },\r\n\r\n                boundary: function(source) {\r\n                    var boundary = source.boundary;\r\n                    var x = boundary ? boundary.x : null;\r\n                    var y = boundary ? boundary.y : null;\r\n\r\n                    return function(point) {\r\n                        return {\r\n                            x: x === null ? point.x : x,\r\n                            y: y === null ? point.y : y,\r\n                        };\r\n                    };\r\n                }\r\n            };\r\n\r\n            // @todo if (fill[0] === '#')\r\n            function decodeFill(el, index, count) {\r\n                var model = el._model || {};\r\n                var fill = model.fill;\r\n                var target;\r\n\r\n                if (fill === undefined) {\r\n                    fill = !!model.backgroundColor;\r\n                }\r\n\r\n                if (fill === false || fill === null) {\r\n                    return false;\r\n                }\r\n\r\n                if (fill === true) {\r\n                    return 'origin';\r\n                }\r\n\r\n                target = parseFloat(fill, 10);\r\n                if (isFinite(target) && Math.floor(target) === target) {\r\n                    if (fill[0] === '-' || fill[0] === '+') {\r\n                        target = index + target;\r\n                    }\r\n\r\n                    if (target === index || target < 0 || target >= count) {\r\n                        return false;\r\n                    }\r\n\r\n                    return target;\r\n                }\r\n\r\n                switch (fill) {\r\n                    // compatibility\r\n                    case 'bottom':\r\n                        return 'start';\r\n                    case 'top':\r\n                        return 'end';\r\n                    case 'zero':\r\n                        return 'origin';\r\n                    // supported boundaries\r\n                    case 'origin':\r\n                    case 'start':\r\n                    case 'end':\r\n                        return fill;\r\n                    // invalid fill values\r\n                    default:\r\n                        return false;\r\n                }\r\n            }\r\n\r\n            function computeBoundary(source) {\r\n                var model = source.el._model || {};\r\n                var scale = source.el._scale || {};\r\n                var fill = source.fill;\r\n                var target = null;\r\n                var horizontal;\r\n\r\n                if (isFinite(fill)) {\r\n                    return null;\r\n                }\r\n\r\n                // Backward compatibility: until v3, we still need to support boundary values set on\r\n                // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\r\n                // controllers might still use it (e.g. the Smith chart).\r\n\r\n                if (fill === 'start') {\r\n                    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\r\n                } else if (fill === 'end') {\r\n                    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\r\n                } else if (model.scaleZero !== undefined) {\r\n                    target = model.scaleZero;\r\n                } else if (scale.getBasePosition) {\r\n                    target = scale.getBasePosition();\r\n                } else if (scale.getBasePixel) {\r\n                    target = scale.getBasePixel();\r\n                }\r\n\r\n                if (target !== undefined && target !== null) {\r\n                    if (target.x !== undefined && target.y !== undefined) {\r\n                        return target;\r\n                    }\r\n\r\n                    if (typeof target === 'number' && isFinite(target)) {\r\n                        horizontal = scale.isHorizontal();\r\n                        return {\r\n                            x: horizontal ? target : null,\r\n                            y: horizontal ? null : target\r\n                        };\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n\r\n            function resolveTarget(sources, index, propagate) {\r\n                var source = sources[index];\r\n                var fill = source.fill;\r\n                var visited = [index];\r\n                var target;\r\n\r\n                if (!propagate) {\r\n                    return fill;\r\n                }\r\n\r\n                while (fill !== false && visited.indexOf(fill) === -1) {\r\n                    if (!isFinite(fill)) {\r\n                        return fill;\r\n                    }\r\n\r\n                    target = sources[fill];\r\n                    if (!target) {\r\n                        return false;\r\n                    }\r\n\r\n                    if (target.visible) {\r\n                        return fill;\r\n                    }\r\n\r\n                    visited.push(fill);\r\n                    fill = target.fill;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            function createMapper(source) {\r\n                var fill = source.fill;\r\n                var type = 'dataset';\r\n\r\n                if (fill === false) {\r\n                    return null;\r\n                }\r\n\r\n                if (!isFinite(fill)) {\r\n                    type = 'boundary';\r\n                }\r\n\r\n                return mappers[type](source);\r\n            }\r\n\r\n            function isDrawable(point) {\r\n                return point && !point.skip;\r\n            }\r\n\r\n            function drawArea(ctx, curve0, curve1, len0, len1) {\r\n                var i;\r\n\r\n                if (!len0 || !len1) {\r\n                    return;\r\n                }\r\n\r\n                // building first area curve (normal)\r\n                ctx.moveTo(curve0[0].x, curve0[0].y);\r\n                for (i = 1; i < len0; ++i) {\r\n                    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\r\n                }\r\n\r\n                // joining the two area curves\r\n                ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\r\n\r\n                // building opposite area curve (reverse)\r\n                for (i = len1 - 1; i > 0; --i) {\r\n                    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\r\n                }\r\n            }\r\n\r\n            function doFill(ctx, points, mapper, view, color, loop) {\r\n                var count = points.length;\r\n                var span = view.spanGaps;\r\n                var curve0 = [];\r\n                var curve1 = [];\r\n                var len0 = 0;\r\n                var len1 = 0;\r\n                var i, ilen, index, p0, p1, d0, d1;\r\n\r\n                ctx.beginPath();\r\n\r\n                for (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\r\n                    index = i % count;\r\n                    p0 = points[index]._view;\r\n                    p1 = mapper(p0, index, view);\r\n                    d0 = isDrawable(p0);\r\n                    d1 = isDrawable(p1);\r\n\r\n                    if (d0 && d1) {\r\n                        len0 = curve0.push(p0);\r\n                        len1 = curve1.push(p1);\r\n                    } else if (len0 && len1) {\r\n                        if (!span) {\r\n                            drawArea(ctx, curve0, curve1, len0, len1);\r\n                            len0 = len1 = 0;\r\n                            curve0 = [];\r\n                            curve1 = [];\r\n                        } else {\r\n                            if (d0) {\r\n                                curve0.push(p0);\r\n                            }\r\n                            if (d1) {\r\n                                curve1.push(p1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                drawArea(ctx, curve0, curve1, len0, len1);\r\n\r\n                ctx.closePath();\r\n                ctx.fillStyle = color;\r\n                ctx.fill();\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'filler',\r\n\r\n                afterDatasetsUpdate: function(chart, options) {\r\n                    var count = (chart.data.datasets || []).length;\r\n                    var propagate = options.propagate;\r\n                    var sources = [];\r\n                    var meta, i, el, source;\r\n\r\n                    for (i = 0; i < count; ++i) {\r\n                        meta = chart.getDatasetMeta(i);\r\n                        el = meta.dataset;\r\n                        source = null;\r\n\r\n                        if (el && el._model && el instanceof elements.Line) {\r\n                            source = {\r\n                                visible: chart.isDatasetVisible(i),\r\n                                fill: decodeFill(el, i, count),\r\n                                chart: chart,\r\n                                el: el\r\n                            };\r\n                        }\r\n\r\n                        meta.$filler = source;\r\n                        sources.push(source);\r\n                    }\r\n\r\n                    for (i = 0; i < count; ++i) {\r\n                        source = sources[i];\r\n                        if (!source) {\r\n                            continue;\r\n                        }\r\n\r\n                        source.fill = resolveTarget(sources, i, propagate);\r\n                        source.boundary = computeBoundary(source);\r\n                        source.mapper = createMapper(source);\r\n                    }\r\n                },\r\n\r\n                beforeDatasetDraw: function(chart, args) {\r\n                    var meta = args.meta.$filler;\r\n                    if (!meta) {\r\n                        return;\r\n                    }\r\n\r\n                    var ctx = chart.ctx;\r\n                    var el = meta.el;\r\n                    var view = el._view;\r\n                    var points = el._children || [];\r\n                    var mapper = meta.mapper;\r\n                    var color = view.backgroundColor || defaults.global.defaultColor;\r\n\r\n                    if (mapper && color && points.length) {\r\n                        helpers.canvas.clipArea(ctx, chart.chartArea);\r\n                        doFill(ctx, points, mapper, view, color, el._loop);\r\n                        helpers.canvas.unclipArea(ctx);\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 42: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            var noop = helpers.noop;\r\n\r\n            defaults._set('global', {\r\n                legend: {\r\n                    display: true,\r\n                    position: 'top',\r\n                    fullWidth: true,\r\n                    reverse: false,\r\n                    weight: 1000,\r\n\r\n                    // a callback that will handle\r\n                    onClick: function(e, legendItem) {\r\n                        var index = legendItem.datasetIndex;\r\n                        var ci = this.chart;\r\n                        var meta = ci.getDatasetMeta(index);\r\n\r\n                        // See controller.isDatasetVisible comment\r\n                        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\r\n\r\n                        // We hid a dataset ... rerender the chart\r\n                        ci.update();\r\n                    },\r\n\r\n                    onHover: null,\r\n\r\n                    labels: {\r\n                        boxWidth: 40,\r\n                        padding: 10,\r\n                        // Generates labels shown in the legend\r\n                        // Valid properties to return:\r\n                        // text : text to display\r\n                        // fillStyle : fill of coloured box\r\n                        // strokeStyle: stroke of coloured box\r\n                        // hidden : if this legend item refers to a hidden item\r\n                        // lineCap : cap style for line\r\n                        // lineDash\r\n                        // lineDashOffset :\r\n                        // lineJoin :\r\n                        // lineWidth :\r\n                        generateLabels: function(chart) {\r\n                            var data = chart.data;\r\n                            return helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\r\n                                return {\r\n                                    text: dataset.label,\r\n                                    fillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\r\n                                    hidden: !chart.isDatasetVisible(i),\r\n                                    lineCap: dataset.borderCapStyle,\r\n                                    lineDash: dataset.borderDash,\r\n                                    lineDashOffset: dataset.borderDashOffset,\r\n                                    lineJoin: dataset.borderJoinStyle,\r\n                                    lineWidth: dataset.borderWidth,\r\n                                    strokeStyle: dataset.borderColor,\r\n                                    pointStyle: dataset.pointStyle,\r\n\r\n                                    // Below is extra data used for toggling the datasets\r\n                                    datasetIndex: i\r\n                                };\r\n                            }, this) : [];\r\n                        }\r\n                    }\r\n                },\r\n\r\n                legendCallback: function(chart) {\r\n                    var text = [];\r\n                    text.push('<ul class=\"' + chart.id + '-legend\">');\r\n                    for (var i = 0; i < chart.data.datasets.length; i++) {\r\n                        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\r\n                        if (chart.data.datasets[i].label) {\r\n                            text.push(chart.data.datasets[i].label);\r\n                        }\r\n                        text.push('</li>');\r\n                    }\r\n                    text.push('</ul>');\r\n                    return text.join('');\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Helper function to get the box width based on the usePointStyle option\r\n             * @param labelopts {Object} the label options on the legend\r\n             * @param fontSize {Number} the label font size\r\n             * @return {Number} width of the color box area\r\n             */\r\n            function getBoxWidth(labelOpts, fontSize) {\r\n                return labelOpts.usePointStyle ?\r\n                    fontSize * Math.SQRT2 :\r\n                    labelOpts.boxWidth;\r\n            }\r\n\r\n            /**\r\n             * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\r\n             */\r\n            var Legend = Element.extend({\r\n                initialize: function(config) {\r\n                    helpers.extend(this, config);\r\n\r\n                    // Contains hit boxes for each dataset (in dataset order)\r\n                    this.legendHitBoxes = [];\r\n\r\n                    // Are we in doughnut mode which has a different data type\r\n                    this.doughnutMode = false;\r\n                },\r\n\r\n                // These methods are ordered by lifecycle. Utilities then follow.\r\n                // Any function defined here is inherited by all legend types.\r\n                // Any function can be extended by the legend type\r\n\r\n                beforeUpdate: noop,\r\n                update: function(maxWidth, maxHeight, margins) {\r\n                    var me = this;\r\n\r\n                    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                    me.beforeUpdate();\r\n\r\n                    // Absorb the master measurements\r\n                    me.maxWidth = maxWidth;\r\n                    me.maxHeight = maxHeight;\r\n                    me.margins = margins;\r\n\r\n                    // Dimensions\r\n                    me.beforeSetDimensions();\r\n                    me.setDimensions();\r\n                    me.afterSetDimensions();\r\n                    // Labels\r\n                    me.beforeBuildLabels();\r\n                    me.buildLabels();\r\n                    me.afterBuildLabels();\r\n\r\n                    // Fit\r\n                    me.beforeFit();\r\n                    me.fit();\r\n                    me.afterFit();\r\n                    //\r\n                    me.afterUpdate();\r\n\r\n                    return me.minSize;\r\n                },\r\n                afterUpdate: noop,\r\n\r\n                //\r\n\r\n                beforeSetDimensions: noop,\r\n                setDimensions: function() {\r\n                    var me = this;\r\n                    // Set the unconstrained dimension before label rotation\r\n                    if (me.isHorizontal()) {\r\n                        // Reset position before calculating rotation\r\n                        me.width = me.maxWidth;\r\n                        me.left = 0;\r\n                        me.right = me.width;\r\n                    } else {\r\n                        me.height = me.maxHeight;\r\n\r\n                        // Reset position before calculating rotation\r\n                        me.top = 0;\r\n                        me.bottom = me.height;\r\n                    }\r\n\r\n                    // Reset padding\r\n                    me.paddingLeft = 0;\r\n                    me.paddingTop = 0;\r\n                    me.paddingRight = 0;\r\n                    me.paddingBottom = 0;\r\n\r\n                    // Reset minSize\r\n                    me.minSize = {\r\n                        width: 0,\r\n                        height: 0\r\n                    };\r\n                },\r\n                afterSetDimensions: noop,\r\n\r\n                //\r\n\r\n                beforeBuildLabels: noop,\r\n                buildLabels: function() {\r\n                    var me = this;\r\n                    var labelOpts = me.options.labels || {};\r\n                    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\r\n\r\n                    if (labelOpts.filter) {\r\n                        legendItems = legendItems.filter(function(item) {\r\n                            return labelOpts.filter(item, me.chart.data);\r\n                        });\r\n                    }\r\n\r\n                    if (me.options.reverse) {\r\n                        legendItems.reverse();\r\n                    }\r\n\r\n                    me.legendItems = legendItems;\r\n                },\r\n                afterBuildLabels: noop,\r\n\r\n                //\r\n\r\n                beforeFit: noop,\r\n                fit: function() {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var labelOpts = opts.labels;\r\n                    var display = opts.display;\r\n\r\n                    var ctx = me.ctx;\r\n\r\n                    var globalDefault = defaults.global;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\r\n                    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\r\n                    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\r\n                    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n                    // Reset hit boxes\r\n                    var hitboxes = me.legendHitBoxes = [];\r\n\r\n                    var minSize = me.minSize;\r\n                    var isHorizontal = me.isHorizontal();\r\n\r\n                    if (isHorizontal) {\r\n                        minSize.width = me.maxWidth; // fill all the width\r\n                        minSize.height = display ? 10 : 0;\r\n                    } else {\r\n                        minSize.width = display ? 10 : 0;\r\n                        minSize.height = me.maxHeight; // fill all the height\r\n                    }\r\n\r\n                    // Increase sizes here\r\n                    if (display) {\r\n                        ctx.font = labelFont;\r\n\r\n                        if (isHorizontal) {\r\n                            // Labels\r\n\r\n                            // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\r\n                            var lineWidths = me.lineWidths = [0];\r\n                            var totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\r\n\r\n                            ctx.textAlign = 'left';\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            helpers.each(me.legendItems, function(legendItem, i) {\r\n                                var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                                var width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n                                if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\r\n                                    totalHeight += fontSize + (labelOpts.padding);\r\n                                    lineWidths[lineWidths.length] = me.left;\r\n                                }\r\n\r\n                                // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                                hitboxes[i] = {\r\n                                    left: 0,\r\n                                    top: 0,\r\n                                    width: width,\r\n                                    height: fontSize\r\n                                };\r\n\r\n                                lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\r\n                            });\r\n\r\n                            minSize.height += totalHeight;\r\n                        } else {\r\n                            var vPadding = labelOpts.padding;\r\n                            var columnWidths = me.columnWidths = [];\r\n                            var totalWidth = labelOpts.padding;\r\n                            var currentColWidth = 0;\r\n                            var currentColHeight = 0;\r\n                            var itemHeight = fontSize + vPadding;\r\n\r\n                            helpers.each(me.legendItems, function(legendItem, i) {\r\n                                var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                                var itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n                                // If too tall, go to new column\r\n                                if (currentColHeight + itemHeight > minSize.height) {\r\n                                    totalWidth += currentColWidth + labelOpts.padding;\r\n                                    columnWidths.push(currentColWidth); // previous column width\r\n\r\n                                    currentColWidth = 0;\r\n                                    currentColHeight = 0;\r\n                                }\r\n\r\n                                // Get max width\r\n                                currentColWidth = Math.max(currentColWidth, itemWidth);\r\n                                currentColHeight += itemHeight;\r\n\r\n                                // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                                hitboxes[i] = {\r\n                                    left: 0,\r\n                                    top: 0,\r\n                                    width: itemWidth,\r\n                                    height: fontSize\r\n                                };\r\n                            });\r\n\r\n                            totalWidth += currentColWidth;\r\n                            columnWidths.push(currentColWidth);\r\n                            minSize.width += totalWidth;\r\n                        }\r\n                    }\r\n\r\n                    me.width = minSize.width;\r\n                    me.height = minSize.height;\r\n                },\r\n                afterFit: noop,\r\n\r\n                // Shared Methods\r\n                isHorizontal: function() {\r\n                    return this.options.position === 'top' || this.options.position === 'bottom';\r\n                },\r\n\r\n                // Actually draw the legend on the canvas\r\n                draw: function() {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var labelOpts = opts.labels;\r\n                    var globalDefault = defaults.global;\r\n                    var lineDefault = globalDefault.elements.line;\r\n                    var legendWidth = me.width;\r\n                    var lineWidths = me.lineWidths;\r\n\r\n                    if (opts.display) {\r\n                        var ctx = me.ctx;\r\n                        var valueOrDefault = helpers.valueOrDefault;\r\n                        var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\r\n                        var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\r\n                        var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\r\n                        var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\r\n                        var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n                        var cursor;\r\n\r\n                        // Canvas setup\r\n                        ctx.textAlign = 'left';\r\n                        ctx.textBaseline = 'middle';\r\n                        ctx.lineWidth = 0.5;\r\n                        ctx.strokeStyle = fontColor; // for strikethrough effect\r\n                        ctx.fillStyle = fontColor; // render in correct colour\r\n                        ctx.font = labelFont;\r\n\r\n                        var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                        var hitboxes = me.legendHitBoxes;\r\n\r\n                        // current position\r\n                        var drawLegendBox = function(x, y, legendItem) {\r\n                            if (isNaN(boxWidth) || boxWidth <= 0) {\r\n                                return;\r\n                            }\r\n\r\n                            // Set the ctx for the box\r\n                            ctx.save();\r\n\r\n                            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\r\n                            ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\r\n                            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\r\n                            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\r\n                            ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\r\n                            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\r\n                            var isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\r\n\r\n                            if (ctx.setLineDash) {\r\n                                // IE 9 and 10 do not support line dash\r\n                                ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\r\n                            }\r\n\r\n                            if (opts.labels && opts.labels.usePointStyle) {\r\n                                // Recalculate x and y for drawPoint() because its expecting\r\n                                // x and y to be center of figure (instead of top left)\r\n                                var radius = fontSize * Math.SQRT2 / 2;\r\n                                var offSet = radius / Math.SQRT2;\r\n                                var centerX = x + offSet;\r\n                                var centerY = y + offSet;\r\n\r\n                                // Draw pointStyle as legend symbol\r\n                                helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\r\n                            } else {\r\n                                // Draw box as legend symbol\r\n                                if (!isLineWidthZero) {\r\n                                    ctx.strokeRect(x, y, boxWidth, fontSize);\r\n                                }\r\n                                ctx.fillRect(x, y, boxWidth, fontSize);\r\n                            }\r\n\r\n                            ctx.restore();\r\n                        };\r\n                        var fillText = function(x, y, legendItem, textWidth) {\r\n                            var halfFontSize = fontSize / 2;\r\n                            var xLeft = boxWidth + halfFontSize + x;\r\n                            var yMiddle = y + halfFontSize;\r\n\r\n                            ctx.fillText(legendItem.text, xLeft, yMiddle);\r\n\r\n                            if (legendItem.hidden) {\r\n                                // Strikethrough the text if hidden\r\n                                ctx.beginPath();\r\n                                ctx.lineWidth = 2;\r\n                                ctx.moveTo(xLeft, yMiddle);\r\n                                ctx.lineTo(xLeft + textWidth, yMiddle);\r\n                                ctx.stroke();\r\n                            }\r\n                        };\r\n\r\n                        // Horizontal\r\n                        var isHorizontal = me.isHorizontal();\r\n                        if (isHorizontal) {\r\n                            cursor = {\r\n                                x: me.left + ((legendWidth - lineWidths[0]) / 2),\r\n                                y: me.top + labelOpts.padding,\r\n                                line: 0\r\n                            };\r\n                        } else {\r\n                            cursor = {\r\n                                x: me.left + labelOpts.padding,\r\n                                y: me.top + labelOpts.padding,\r\n                                line: 0\r\n                            };\r\n                        }\r\n\r\n                        var itemHeight = fontSize + labelOpts.padding;\r\n                        helpers.each(me.legendItems, function(legendItem, i) {\r\n                            var textWidth = ctx.measureText(legendItem.text).width;\r\n                            var width = boxWidth + (fontSize / 2) + textWidth;\r\n                            var x = cursor.x;\r\n                            var y = cursor.y;\r\n\r\n                            if (isHorizontal) {\r\n                                if (x + width >= legendWidth) {\r\n                                    y = cursor.y += itemHeight;\r\n                                    cursor.line++;\r\n                                    x = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\r\n                                }\r\n                            } else if (y + itemHeight > me.bottom) {\r\n                                x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\r\n                                y = cursor.y = me.top + labelOpts.padding;\r\n                                cursor.line++;\r\n                            }\r\n\r\n                            drawLegendBox(x, y, legendItem);\r\n\r\n                            hitboxes[i].left = x;\r\n                            hitboxes[i].top = y;\r\n\r\n                            // Fill the actual label\r\n                            fillText(x, y, legendItem, textWidth);\r\n\r\n                            if (isHorizontal) {\r\n                                cursor.x += width + (labelOpts.padding);\r\n                            } else {\r\n                                cursor.y += itemHeight;\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Handle an event\r\n                 * @private\r\n                 * @param {IEvent} event - The event to handle\r\n                 * @return {Boolean} true if a change occured\r\n                 */\r\n                handleEvent: function(e) {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var type = e.type === 'mouseup' ? 'click' : e.type;\r\n                    var changed = false;\r\n\r\n                    if (type === 'mousemove') {\r\n                        if (!opts.onHover) {\r\n                            return;\r\n                        }\r\n                    } else if (type === 'click') {\r\n                        if (!opts.onClick) {\r\n                            return;\r\n                        }\r\n                    } else {\r\n                        return;\r\n                    }\r\n\r\n                    // Chart event already has relative position in it\r\n                    var x = e.x;\r\n                    var y = e.y;\r\n\r\n                    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\r\n                        // See if we are touching one of the dataset boxes\r\n                        var lh = me.legendHitBoxes;\r\n                        for (var i = 0; i < lh.length; ++i) {\r\n                            var hitBox = lh[i];\r\n\r\n                            if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n                                // Touching an element\r\n                                if (type === 'click') {\r\n                                    // use e.native for backwards compatibility\r\n                                    opts.onClick.call(me, e.native, me.legendItems[i]);\r\n                                    changed = true;\r\n                                    break;\r\n                                } else if (type === 'mousemove') {\r\n                                    // use e.native for backwards compatibility\r\n                                    opts.onHover.call(me, e.native, me.legendItems[i]);\r\n                                    changed = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return changed;\r\n                }\r\n            });\r\n\r\n            function createNewLegendAndAttach(chart, legendOpts) {\r\n                var legend = new Legend({\r\n                    ctx: chart.ctx,\r\n                    options: legendOpts,\r\n                    chart: chart\r\n                });\r\n\r\n                layouts.configure(chart, legend, legendOpts);\r\n                layouts.addBox(chart, legend);\r\n                chart.legend = legend;\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'legend',\r\n\r\n                /**\r\n                 * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\r\n                 * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\r\n                 * the plugin, which one will be re-exposed in the chart.js file.\r\n                 * https://github.com/chartjs/Chart.js/pull/2640\r\n                 * @private\r\n                 */\r\n                _element: Legend,\r\n\r\n                beforeInit: function(chart) {\r\n                    var legendOpts = chart.options.legend;\r\n\r\n                    if (legendOpts) {\r\n                        createNewLegendAndAttach(chart, legendOpts);\r\n                    }\r\n                },\r\n\r\n                beforeUpdate: function(chart) {\r\n                    var legendOpts = chart.options.legend;\r\n                    var legend = chart.legend;\r\n\r\n                    if (legendOpts) {\r\n                        helpers.mergeIf(legendOpts, defaults.global.legend);\r\n\r\n                        if (legend) {\r\n                            layouts.configure(chart, legend, legendOpts);\r\n                            legend.options = legendOpts;\r\n                        } else {\r\n                            createNewLegendAndAttach(chart, legendOpts);\r\n                        }\r\n                    } else if (legend) {\r\n                        layouts.removeBox(chart, legend);\r\n                        delete chart.legend;\r\n                    }\r\n                },\r\n\r\n                afterEvent: function(chart, e) {\r\n                    var legend = chart.legend;\r\n                    if (legend) {\r\n                        legend.handleEvent(e);\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"21\": 21, \"36\": 36 }], 43: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            var noop = helpers.noop;\r\n\r\n            defaults._set('global', {\r\n                title: {\r\n                    display: false,\r\n                    fontStyle: 'bold',\r\n                    fullWidth: true,\r\n                    lineHeight: 1.2,\r\n                    padding: 10,\r\n                    position: 'top',\r\n                    text: '',\r\n                    weight: 2000         // by default greater than legend (1000) to be above\r\n                }\r\n            });\r\n\r\n            /**\r\n             * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\r\n             */\r\n            var Title = Element.extend({\r\n                initialize: function(config) {\r\n                    var me = this;\r\n                    helpers.extend(me, config);\r\n\r\n                    // Contains hit boxes for each dataset (in dataset order)\r\n                    me.legendHitBoxes = [];\r\n                },\r\n\r\n                // These methods are ordered by lifecycle. Utilities then follow.\r\n\r\n                beforeUpdate: noop,\r\n                update: function(maxWidth, maxHeight, margins) {\r\n                    var me = this;\r\n\r\n                    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                    me.beforeUpdate();\r\n\r\n                    // Absorb the master measurements\r\n                    me.maxWidth = maxWidth;\r\n                    me.maxHeight = maxHeight;\r\n                    me.margins = margins;\r\n\r\n                    // Dimensions\r\n                    me.beforeSetDimensions();\r\n                    me.setDimensions();\r\n                    me.afterSetDimensions();\r\n                    // Labels\r\n                    me.beforeBuildLabels();\r\n                    me.buildLabels();\r\n                    me.afterBuildLabels();\r\n\r\n                    // Fit\r\n                    me.beforeFit();\r\n                    me.fit();\r\n                    me.afterFit();\r\n                    //\r\n                    me.afterUpdate();\r\n\r\n                    return me.minSize;\r\n                },\r\n                afterUpdate: noop,\r\n\r\n                //\r\n\r\n                beforeSetDimensions: noop,\r\n                setDimensions: function() {\r\n                    var me = this;\r\n                    // Set the unconstrained dimension before label rotation\r\n                    if (me.isHorizontal()) {\r\n                        // Reset position before calculating rotation\r\n                        me.width = me.maxWidth;\r\n                        me.left = 0;\r\n                        me.right = me.width;\r\n                    } else {\r\n                        me.height = me.maxHeight;\r\n\r\n                        // Reset position before calculating rotation\r\n                        me.top = 0;\r\n                        me.bottom = me.height;\r\n                    }\r\n\r\n                    // Reset padding\r\n                    me.paddingLeft = 0;\r\n                    me.paddingTop = 0;\r\n                    me.paddingRight = 0;\r\n                    me.paddingBottom = 0;\r\n\r\n                    // Reset minSize\r\n                    me.minSize = {\r\n                        width: 0,\r\n                        height: 0\r\n                    };\r\n                },\r\n                afterSetDimensions: noop,\r\n\r\n                //\r\n\r\n                beforeBuildLabels: noop,\r\n                buildLabels: noop,\r\n                afterBuildLabels: noop,\r\n\r\n                //\r\n\r\n                beforeFit: noop,\r\n                fit: function() {\r\n                    var me = this;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var opts = me.options;\r\n                    var display = opts.display;\r\n                    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\r\n                    var minSize = me.minSize;\r\n                    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\r\n                    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\r\n                    var textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\r\n\r\n                    if (me.isHorizontal()) {\r\n                        minSize.width = me.maxWidth; // fill all the width\r\n                        minSize.height = textSize;\r\n                    } else {\r\n                        minSize.width = textSize;\r\n                        minSize.height = me.maxHeight; // fill all the height\r\n                    }\r\n\r\n                    me.width = minSize.width;\r\n                    me.height = minSize.height;\r\n                },\r\n                afterFit: noop,\r\n\r\n                // Shared Methods\r\n                isHorizontal: function() {\r\n                    var pos = this.options.position;\r\n                    return pos === 'top' || pos === 'bottom';\r\n                },\r\n\r\n                // Actually draw the title block on the canvas\r\n                draw: function() {\r\n                    var me = this;\r\n                    var ctx = me.ctx;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var opts = me.options;\r\n                    var globalDefaults = defaults.global;\r\n\r\n                    if (opts.display) {\r\n                        var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\r\n                        var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\r\n                        var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\r\n                        var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n                        var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\r\n                        var offset = lineHeight / 2 + opts.padding;\r\n                        var rotation = 0;\r\n                        var top = me.top;\r\n                        var left = me.left;\r\n                        var bottom = me.bottom;\r\n                        var right = me.right;\r\n                        var maxWidth, titleX, titleY;\r\n\r\n                        ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\r\n                        ctx.font = titleFont;\r\n\r\n                        // Horizontal\r\n                        if (me.isHorizontal()) {\r\n                            titleX = left + ((right - left) / 2); // midpoint of the width\r\n                            titleY = top + offset;\r\n                            maxWidth = right - left;\r\n                        } else {\r\n                            titleX = opts.position === 'left' ? left + offset : right - offset;\r\n                            titleY = top + ((bottom - top) / 2);\r\n                            maxWidth = bottom - top;\r\n                            rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\r\n                        }\r\n\r\n                        ctx.save();\r\n                        ctx.translate(titleX, titleY);\r\n                        ctx.rotate(rotation);\r\n                        ctx.textAlign = 'center';\r\n                        ctx.textBaseline = 'middle';\r\n\r\n                        var text = opts.text;\r\n                        if (helpers.isArray(text)) {\r\n                            var y = 0;\r\n                            for (var i = 0; i < text.length; ++i) {\r\n                                ctx.fillText(text[i], 0, y, maxWidth);\r\n                                y += lineHeight;\r\n                            }\r\n                        } else {\r\n                            ctx.fillText(text, 0, 0, maxWidth);\r\n                        }\r\n\r\n                        ctx.restore();\r\n                    }\r\n                }\r\n            });\r\n\r\n            function createNewTitleBlockAndAttach(chart, titleOpts) {\r\n                var title = new Title({\r\n                    ctx: chart.ctx,\r\n                    options: titleOpts,\r\n                    chart: chart\r\n                });\r\n\r\n                layouts.configure(chart, title, titleOpts);\r\n                layouts.addBox(chart, title);\r\n                chart.titleBlock = title;\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'title',\r\n\r\n                /**\r\n                 * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\r\n                 * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\r\n                 * the plugin, which one will be re-exposed in the chart.js file.\r\n                 * https://github.com/chartjs/Chart.js/pull/2640\r\n                 * @private\r\n                 */\r\n                _element: Title,\r\n\r\n                beforeInit: function(chart) {\r\n                    var titleOpts = chart.options.title;\r\n\r\n                    if (titleOpts) {\r\n                        createNewTitleBlockAndAttach(chart, titleOpts);\r\n                    }\r\n                },\r\n\r\n                beforeUpdate: function(chart) {\r\n                    var titleOpts = chart.options.title;\r\n                    var titleBlock = chart.titleBlock;\r\n\r\n                    if (titleOpts) {\r\n                        helpers.mergeIf(titleOpts, defaults.global.title);\r\n\r\n                        if (titleBlock) {\r\n                            layouts.configure(chart, titleBlock, titleOpts);\r\n                            titleBlock.options = titleOpts;\r\n                        } else {\r\n                            createNewTitleBlockAndAttach(chart, titleOpts);\r\n                        }\r\n                    } else if (titleBlock) {\r\n                        layouts.removeBox(chart, titleBlock);\r\n                        delete chart.titleBlock;\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"21\": 21, \"36\": 36 }], 44: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                // Default config for a category scale\r\n                var defaultConfig = {\r\n                    position: 'bottom'\r\n                };\r\n\r\n                var DatasetScale = Chart.Scale.extend({\r\n                    /**\r\n                    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\r\n                    * else fall back to data.labels\r\n                    * @private\r\n                    */\r\n                    getLabels: function() {\r\n                        var data = this.chart.data;\r\n                        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\r\n                    },\r\n\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var labels = me.getLabels();\r\n                        me.minIndex = 0;\r\n                        me.maxIndex = labels.length - 1;\r\n                        var findIndex;\r\n\r\n                        if (me.options.ticks.min !== undefined) {\r\n                            // user specified min value\r\n                            findIndex = labels.indexOf(me.options.ticks.min);\r\n                            me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\r\n                        }\r\n\r\n                        if (me.options.ticks.max !== undefined) {\r\n                            // user specified max value\r\n                            findIndex = labels.indexOf(me.options.ticks.max);\r\n                            me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\r\n                        }\r\n\r\n                        me.min = labels[me.minIndex];\r\n                        me.max = labels[me.maxIndex];\r\n                    },\r\n\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var labels = me.getLabels();\r\n                        // If we are viewing some subset of labels, slice the original array\r\n                        me.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\r\n                    },\r\n\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        var me = this;\r\n                        var data = me.chart.data;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        if (data.yLabels && !isHorizontal) {\r\n                            return me.getRightValue(data.datasets[datasetIndex].data[index]);\r\n                        }\r\n                        return me.ticks[index - me.minIndex];\r\n                    },\r\n\r\n                    // Used to get data value locations.  Value can either be an index or a numerical value\r\n                    getPixelForValue: function(value, index) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        // 1 is added because we need the length but we have the indexes\r\n                        var offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\r\n\r\n                        // If value is a data object, then index is the index in the data array,\r\n                        // not the index of the scale. We need to change that.\r\n                        var valueCategory;\r\n                        if (value !== undefined && value !== null) {\r\n                            valueCategory = me.isHorizontal() ? value.x : value.y;\r\n                        }\r\n                        if (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\r\n                            var labels = me.getLabels();\r\n                            value = valueCategory || value;\r\n                            var idx = labels.indexOf(value);\r\n                            index = idx !== -1 ? idx : index;\r\n                        }\r\n\r\n                        if (me.isHorizontal()) {\r\n                            var valueWidth = me.width / offsetAmt;\r\n                            var widthOffset = (valueWidth * (index - me.minIndex));\r\n\r\n                            if (offset) {\r\n                                widthOffset += (valueWidth / 2);\r\n                            }\r\n\r\n                            return me.left + Math.round(widthOffset);\r\n                        }\r\n                        var valueHeight = me.height / offsetAmt;\r\n                        var heightOffset = (valueHeight * (index - me.minIndex));\r\n\r\n                        if (offset) {\r\n                            heightOffset += (valueHeight / 2);\r\n                        }\r\n\r\n                        return me.top + Math.round(heightOffset);\r\n                    },\r\n                    getPixelForTick: function(index) {\r\n                        return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        var value;\r\n                        var offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\r\n                        var horz = me.isHorizontal();\r\n                        var valueDimension = (horz ? me.width : me.height) / offsetAmt;\r\n\r\n                        pixel -= horz ? me.left : me.top;\r\n\r\n                        if (offset) {\r\n                            pixel -= (valueDimension / 2);\r\n                        }\r\n\r\n                        if (pixel <= 0) {\r\n                            value = 0;\r\n                        } else {\r\n                            value = Math.round(pixel / valueDimension);\r\n                        }\r\n\r\n                        return value + me.minIndex;\r\n                    },\r\n                    getBasePixel: function() {\r\n                        return this.bottom;\r\n                    }\r\n                });\r\n\r\n                Chart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\r\n            };\r\n        }, {}], 45: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var Ticks = require(25);\r\n\r\n            module.exports = function(Chart) {\r\n                var defaultConfig = {\r\n                    position: 'left',\r\n                    ticks: {\r\n                        callback: Ticks.formatters.linear\r\n                    }\r\n                };\r\n\r\n                var LinearScale = Chart.LinearScaleBase.extend({\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var chart = me.chart;\r\n                        var data = chart.data;\r\n                        var datasets = data.datasets;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var DEFAULT_MIN = 0;\r\n                        var DEFAULT_MAX = 1;\r\n\r\n                        function IDMatches(meta) {\r\n                            return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\r\n                        }\r\n\r\n                        // First Calculate the range\r\n                        me.min = null;\r\n                        me.max = null;\r\n\r\n                        var hasStacks = opts.stacked;\r\n                        if (hasStacks === undefined) {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                if (hasStacks) {\r\n                                    return;\r\n                                }\r\n\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\r\n                                    meta.stack !== undefined) {\r\n                                    hasStacks = true;\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        if (opts.stacked || hasStacks) {\r\n                            var valuesPerStack = {};\r\n\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                var key = [\r\n                                    meta.type,\r\n                                    // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\r\n                                    ((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\r\n                                    meta.stack\r\n                                ].join('.');\r\n\r\n                                if (valuesPerStack[key] === undefined) {\r\n                                    valuesPerStack[key] = {\r\n                                        positiveValues: [],\r\n                                        negativeValues: []\r\n                                    };\r\n                                }\r\n\r\n                                // Store these per type\r\n                                var positiveValues = valuesPerStack[key].positiveValues;\r\n                                var negativeValues = valuesPerStack[key].negativeValues;\r\n\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        positiveValues[index] = positiveValues[index] || 0;\r\n                                        negativeValues[index] = negativeValues[index] || 0;\r\n\r\n                                        if (opts.relativePoints) {\r\n                                            positiveValues[index] = 100;\r\n                                        } else if (value < 0) {\r\n                                            negativeValues[index] += value;\r\n                                        } else {\r\n                                            positiveValues[index] += value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n\r\n                            helpers.each(valuesPerStack, function(valuesForType) {\r\n                                var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\r\n                                var minVal = helpers.min(values);\r\n                                var maxVal = helpers.max(values);\r\n                                me.min = me.min === null ? minVal : Math.min(me.min, minVal);\r\n                                me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\r\n                            });\r\n                        } else {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        if (me.min === null) {\r\n                                            me.min = value;\r\n                                        } else if (value < me.min) {\r\n                                            me.min = value;\r\n                                        }\r\n\r\n                                        if (me.max === null) {\r\n                                            me.max = value;\r\n                                        } else if (value > me.max) {\r\n                                            me.max = value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\r\n                        me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\r\n\r\n                        // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\r\n                        this.handleTickRangeOptions();\r\n                    },\r\n                    getTickLimit: function() {\r\n                        var maxTicks;\r\n                        var me = this;\r\n                        var tickOpts = me.options.ticks;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\r\n                        } else {\r\n                            // The factor of 2 used to scale the font size has been experimentally determined.\r\n                            var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\r\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\r\n                        }\r\n\r\n                        return maxTicks;\r\n                    },\r\n                    // Called after the ticks are built. We need\r\n                    handleDirectionalChanges: function() {\r\n                        if (!this.isHorizontal()) {\r\n                            // We are in a vertical orientation. The top value is the highest. So reverse the array\r\n                            this.ticks.reverse();\r\n                        }\r\n                    },\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n                    },\r\n                    // Utils\r\n                    getPixelForValue: function(value) {\r\n                        // This must be called after fit has been run so that\r\n                        // this.left, this.top, this.right, and this.bottom have been defined\r\n                        var me = this;\r\n                        var start = me.start;\r\n\r\n                        var rightValue = +me.getRightValue(value);\r\n                        var pixel;\r\n                        var range = me.end - start;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            pixel = me.left + (me.width / range * (rightValue - start));\r\n                        } else {\r\n                            pixel = me.bottom - (me.height / range * (rightValue - start));\r\n                        }\r\n                        return pixel;\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var innerDimension = isHorizontal ? me.width : me.height;\r\n                        var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\r\n                        return me.start + ((me.end - me.start) * offset);\r\n                    },\r\n                    getPixelForTick: function(index) {\r\n                        return this.getPixelForValue(this.ticksAsNumbers[index]);\r\n                    }\r\n                });\r\n                Chart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\r\n            };\r\n        }, { \"16\": 16, \"25\": 25, \"36\": 36 }], 46: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Generate a set of linear ticks\r\n             * @param generationOptions the options used to generate the ticks\r\n             * @param dataRange the range of the data\r\n             * @returns {Array<Number>} array of tick values\r\n             */\r\n            function generateTicks(generationOptions, dataRange) {\r\n                var ticks = [];\r\n                // To get a \"nice\" value for the tick spacing, we will use the appropriately named\r\n                // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\r\n                // for details.\r\n\r\n                var spacing;\r\n                if (generationOptions.stepSize && generationOptions.stepSize > 0) {\r\n                    spacing = generationOptions.stepSize;\r\n                } else {\r\n                    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\r\n                    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\r\n                }\r\n                var niceMin = Math.floor(dataRange.min / spacing) * spacing;\r\n                var niceMax = Math.ceil(dataRange.max / spacing) * spacing;\r\n\r\n                // If min, max and stepSize is set and they make an evenly spaced scale use it.\r\n                if (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\r\n                    // If very close to our whole number, use it.\r\n                    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\r\n                        niceMin = generationOptions.min;\r\n                        niceMax = generationOptions.max;\r\n                    }\r\n                }\r\n\r\n                var numSpaces = (niceMax - niceMin) / spacing;\r\n                // If very close to our rounded value, use it.\r\n                if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n                    numSpaces = Math.round(numSpaces);\r\n                } else {\r\n                    numSpaces = Math.ceil(numSpaces);\r\n                }\r\n\r\n                var precision = 1;\r\n                if (spacing < 1) {\r\n                    precision = Math.pow(10, spacing.toString().length - 2);\r\n                    niceMin = Math.round(niceMin * precision) / precision;\r\n                    niceMax = Math.round(niceMax * precision) / precision;\r\n                }\r\n                ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\r\n                for (var j = 1; j < numSpaces; ++j) {\r\n                    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\r\n                }\r\n                ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\r\n\r\n                return ticks;\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                var noop = helpers.noop;\r\n\r\n                Chart.LinearScaleBase = Chart.Scale.extend({\r\n                    getRightValue: function(value) {\r\n                        if (typeof value === 'string') {\r\n                            return +value;\r\n                        }\r\n                        return Chart.Scale.prototype.getRightValue.call(this, value);\r\n                    },\r\n\r\n                    handleTickRangeOptions: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\r\n                        // do nothing since that would make the chart weird. If the user really wants a weird chart\r\n                        // axis, they can manually override it\r\n                        if (tickOpts.beginAtZero) {\r\n                            var minSign = helpers.sign(me.min);\r\n                            var maxSign = helpers.sign(me.max);\r\n\r\n                            if (minSign < 0 && maxSign < 0) {\r\n                                // move the top up to 0\r\n                                me.max = 0;\r\n                            } else if (minSign > 0 && maxSign > 0) {\r\n                                // move the bottom down to 0\r\n                                me.min = 0;\r\n                            }\r\n                        }\r\n\r\n                        var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\r\n                        var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\r\n\r\n                        if (tickOpts.min !== undefined) {\r\n                            me.min = tickOpts.min;\r\n                        } else if (tickOpts.suggestedMin !== undefined) {\r\n                            if (me.min === null) {\r\n                                me.min = tickOpts.suggestedMin;\r\n                            } else {\r\n                                me.min = Math.min(me.min, tickOpts.suggestedMin);\r\n                            }\r\n                        }\r\n\r\n                        if (tickOpts.max !== undefined) {\r\n                            me.max = tickOpts.max;\r\n                        } else if (tickOpts.suggestedMax !== undefined) {\r\n                            if (me.max === null) {\r\n                                me.max = tickOpts.suggestedMax;\r\n                            } else {\r\n                                me.max = Math.max(me.max, tickOpts.suggestedMax);\r\n                            }\r\n                        }\r\n\r\n                        if (setMin !== setMax) {\r\n                            // We set the min or the max but not both.\r\n                            // So ensure that our range is good\r\n                            // Inverted or 0 length range can happen when\r\n                            // ticks.min is set, and no datasets are visible\r\n                            if (me.min >= me.max) {\r\n                                if (setMin) {\r\n                                    me.max = me.min + 1;\r\n                                } else {\r\n                                    me.min = me.max - 1;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (me.min === me.max) {\r\n                            me.max++;\r\n\r\n                            if (!tickOpts.beginAtZero) {\r\n                                me.min--;\r\n                            }\r\n                        }\r\n                    },\r\n                    getTickLimit: noop,\r\n                    handleDirectionalChanges: noop,\r\n\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        // Figure out what the max number of ticks we can support it is based on the size of\r\n                        // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n                        // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n                        // the graph. Make sure we always have at least 2 ticks\r\n                        var maxTicks = me.getTickLimit();\r\n                        maxTicks = Math.max(2, maxTicks);\r\n\r\n                        var numericGeneratorOptions = {\r\n                            maxTicks: maxTicks,\r\n                            min: tickOpts.min,\r\n                            max: tickOpts.max,\r\n                            stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\r\n                        };\r\n                        var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\r\n\r\n                        me.handleDirectionalChanges();\r\n\r\n                        // At this point, we need to update our max and min given the tick values since we have expanded the\r\n                        // range of the scale\r\n                        me.max = helpers.max(ticks);\r\n                        me.min = helpers.min(ticks);\r\n\r\n                        if (tickOpts.reverse) {\r\n                            ticks.reverse();\r\n\r\n                            me.start = me.max;\r\n                            me.end = me.min;\r\n                        } else {\r\n                            me.start = me.min;\r\n                            me.end = me.max;\r\n                        }\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        me.ticksAsNumbers = me.ticks.slice();\r\n                        me.zeroLineIndex = me.ticks.indexOf(0);\r\n\r\n                        Chart.Scale.prototype.convertTicksToLabels.call(me);\r\n                    }\r\n                });\r\n            };\r\n        }, { \"36\": 36 }]\r\n    }, {}, [6])(6)\r\n});\r\n","/*!\r\n * Allowing lists to dynamically expand and collapse.\r\n * Created by Stephen Morley - http://code.stephenmorley.org/ - and released under the terms of the CC0 1.0 Universal legal code:\r\n * http://creativecommons.org/publicdomain/zero/1.0/legalcode\r\n *\r\n * Modified to work with bootstrap/fontAwesome and incorporate cascading checkboxes.\r\n */\r\n(function(root, factory) {\r\n    root.CollapsibleList = factory(root.$);\r\n})(this, function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare CollapsibleList class.\r\n     * @param {Node} element - Node to make collapsible.\r\n     */\r\n    var CollapsibleList = function(element) {\r\n        this.container = $.get(element);\r\n        this.init();\r\n    };\r\n\r\n    CollapsibleList.prototype = {\r\n        init: function() {\r\n            var node = this.container;\r\n            // loop over the list items within this node\r\n            var lis = $.getAll('li', node);\r\n            for (var i = 0; i < lis.length; i++) {\r\n                // prevent text from being selected unintentionally\r\n                $.on(lis[i], 'mousedown', function(e) { e.preventDefault(); }, false);\r\n                // add the click listener\r\n                $.on(lis[i], 'click', this.createClickListener(lis[i]), false);\r\n                // close the unordered lists within this list item\r\n                this.toggle(lis[i]);\r\n\r\n                // check any parent items if this item is checked\r\n                node = $.get('input[type=\"checkbox\"]', lis[i]);\r\n                if (node.checked) {\r\n                    var p = node;\r\n                    while (this.container !== (p = p.parentNode)) {\r\n                        if (p.nodeName === 'LI') {\r\n                            var parent = p.parentNode.parentNode;\r\n                            if (parent.nodeName === 'LI') {\r\n                                var pi = $.get('input[type=\"checkbox\"]', parent);\r\n                                if (pi && pi !== node) {\r\n                                    pi.checked = true;\r\n                                }\r\n                                this.toggle(parent, true);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Toggles the display status of any unordered list elements within the specified node.\r\n         * @param {Node} node - Node containing the unordered list elements.\r\n         * @returns {Function} Click handler function.\r\n         */\r\n        createClickListener: function(node) {\r\n            var self = this;\r\n            return function(e) {\r\n                if (!e) {\r\n                    return;\r\n                }\r\n\r\n                // find the list item containing the target of the event\r\n                var elem = $.coalesce(e.target, e.srcElement);\r\n\r\n                // handle checking/unchecking buttons\r\n                if (elem.nodeName === 'INPUT') {\r\n                    var checked = elem.checked;\r\n\r\n                    // first toggle the check for all of the children\r\n                    var inputs = $.getAll('ul input[type=\"checkbox\"]', $.closest('li', elem));\r\n                    i = inputs.length;\r\n                    while (i--) {\r\n                        inputs[i].checked = checked;\r\n                    }\r\n\r\n                    // then check all parents. if any of the children of a checkbox are checked, then it should be checked.\r\n                    var checkedRelative = false;\r\n                    var p = elem;\r\n                    while (self.container !== (p = p.parentNode)) {\r\n                        if (p.nodeName === 'LI') {\r\n                            // see if anybody else on this node level is checked\r\n                            var relatives = $.getAll('input[type=\"checkbox\"]', p.parentNode);\r\n                            var i = relatives.length;\r\n                            checkedRelative = false;\r\n                            while (i--) {\r\n                                if (relatives[i].checked) {\r\n                                    checkedRelative = true;\r\n                                }\r\n                            }\r\n\r\n                            if (p.parentNode.parentNode !== self.container) {\r\n                                var pi = $.get('input[type=\"checkbox\"]', p.parentNode.parentNode);\r\n                                if (pi && pi !== elem) {\r\n                                    pi.checked = checkedRelative || checked;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                if ($.hasClass(elem, 'form-group') || $.hasClass(elem, 'form-icon') || (elem.parentNode && $.hasClass(elem.parentNode, 'form-group'))) {\r\n                    // prevent toggling tree when checking/unchecking an element\r\n                    return;\r\n                }\r\n\r\n                // now handle the tree itself\r\n                while (elem.nodeName !== 'LI') {\r\n                    elem = elem.parentNode;\r\n                }\r\n\r\n                // toggle the state of the node if it was the target of the event\r\n                if (elem === node) {\r\n                    self.toggle(node);\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Opens or closes the unordered list elements directly within the specified node.\r\n         * @param {Node} node - Node containing the unordered list elements.\r\n         * @param {bool} forceOpen - Set to true to force the node to be open regardless of current status.\r\n         */\r\n        toggle: function(node, forceOpen) {\r\n            // determine whether to open or close the unordered lists\r\n            var open = $.coalesce(forceOpen, $.hasClass(node, 'collapsible-list-closed'));\r\n\r\n            // loop over the unordered list elements with the node\r\n            var uls = $.getAll('ul', node);\r\n            for (var i = 0; i < uls.length; i++) {\r\n                // find the parent list item of this unordered list\r\n                var li = uls[i];\r\n                while (li.nodeName !== 'LI') {\r\n                    li = li.parentNode;\r\n                }\r\n\r\n                // style the unordered list if it is directly within this node\r\n                if (li === node) {\r\n                    uls[i].style.display = open ? 'block' : 'none';\r\n                }\r\n            }\r\n\r\n            // remove the current class from the node\r\n            $.removeClass(node, 'collapsible-list-' + (open ? 'closed' : 'open'));\r\n\r\n            // if the node contains unordered lists, set its class\r\n            if (uls.length) {\r\n                $.addClass(node, 'collapsible-list-' + (open ? 'open' : 'closed'));\r\n            }\r\n        }\r\n    };\r\n\r\n    return CollapsibleList;\r\n});\r\n","/*!\r\n * ColorPicker mithril component.\r\n */\r\n(function(root, factory) {\r\n    root.ColorPicker = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    var _keys = { ESC: 27 };\r\n\r\n    var ColorPicker = {\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            this.value = attrs.value;\r\n            if (this.value && this.value.substring(0, 1) !== '#') {\r\n                this.value = '#' + this.value;\r\n            }\r\n            this.color = $.colors.hex2rgb(this.value);\r\n            this.opts = {\r\n                name: attrs.name,\r\n                active: false,\r\n                disabled: attrs.disabled,\r\n                onSelect: attrs.onSelect,\r\n                container: null\r\n            };\r\n        },\r\n\r\n        oncreate: function(vnode) {\r\n            this.opts.container = vnode.dom;\r\n        },\r\n\r\n        onupdate: function(vnode) {\r\n            if (vnode.attrs) {\r\n                this.opts.name = vnode.attrs.name;\r\n            }\r\n        },\r\n\r\n        onKeyDown: function(e) {\r\n            if (this.opts.disabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.opts.active && e.keyCode === _keys.ESC) {\r\n                this.close();\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n        },\r\n\r\n        close: function() {\r\n            this.opts.active = false;\r\n            var trigger = $.get('.colorpicker-trigger', this.opts.container);\r\n            if (trigger) {\r\n                trigger.focus();\r\n            }\r\n        },\r\n\r\n        showEditor: function() {\r\n            if (this.opts.disabled) {\r\n                return;\r\n            }\r\n            this.opts.active = !this.opts.active;\r\n        },\r\n\r\n        setRed: function(value) {\r\n            this.color.r = value * 1;\r\n            this.setColor();\r\n        },\r\n\r\n        setGreen: function(value) {\r\n            this.color.g = value * 1;\r\n            this.setColor();\r\n        },\r\n\r\n        setBlue: function(value) {\r\n            this.color.b = value * 1;\r\n            this.setColor();\r\n        },\r\n\r\n        setColor: function() {\r\n            this.value = $.colors.rgb2hex(this.color);\r\n            if (this.opts.onSelect) {\r\n                this.opts.onSelect(this.value);\r\n            }\r\n        },\r\n\r\n        view: function() {\r\n            return m('.mithril-colorpicker', {\r\n                class: this.opts.active ? 'active' : '', onkeydown: this.onKeyDown.bind(this)\r\n            }, [m('button.btn.btn-secondary.colorpicker-trigger', {\r\n                type: 'button', role: 'button', disabled: this.opts.disabled,\r\n                onclick: this.showEditor.bind(this),\r\n                style: 'background-color: ' + this.value\r\n            }, [m.trust('&nbsp;'), m('i.dash.colorpicker-indicator', { class: this.opts.active ? 'dash-sort-up' : 'dash-sort-down' })]),\r\n            this.opts.active && m('.editor',\r\n                m('div', [\r\n                    m('input.range-red', { type: 'range', min: 0, max: 255, oninput: m.withAttr('value', this.setRed.bind(this)), value: this.color.r }),\r\n                    m('input.range-green', { type: 'range', min: 0, max: 255, oninput: m.withAttr('value', this.setGreen.bind(this)), value: this.color.g }),\r\n                    m('input.range-blue', { type: 'range', min: 0, max: 255, oninput: m.withAttr('value', this.setBlue.bind(this)), value: this.color.b })\r\n                ])\r\n            ),\r\n            m('input', { type: 'hidden', name: this.opts.name, value: this.value })]);\r\n        }\r\n    };\r\n\r\n    return ColorPicker;\r\n});\r\n","/*!\r\n * Wraps functionality needed for creating charts using Chart.js.\r\n */\r\n(function(root, factory) {\r\n    root.DashChart = factory(root.$, root.Alertify, root.Chart);\r\n})(this, function($, Alertify, Chart) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare DashChart class.\r\n     * @param {Node} content - DOM node that contains the chart.\r\n     * @param {bool} showLegend - Show or hide the chart legend.\r\n     * @param {Function} dataFn - Function to call if after loading data. Runs before other functions.\r\n     * @param {Function} errorFn - Function to call if an error occurs loading data.\r\n     * @param {Function} toggleExportFn - Function to enable/disable export.\r\n     */\r\n    var DashChart = function(content, showLegend, dataFn, errorFn, toggleExportFn) {\r\n        this.content = content;\r\n        this.url = content.getAttribute('data-url');\r\n        this.canvas = $.get('.chart-canvas', content);\r\n        this.showLegend = $.coalesce(showLegend, true);\r\n        this.dataFn = dataFn;\r\n        this.errorFn = errorFn;\r\n        this.toggleExportFn = toggleExportFn;\r\n        this.chart = null;\r\n        this.events = { resize: $.debounce(this.resize.bind(this), 50) };\r\n        $.on(window, 'resize', this.events.resize);\r\n        this.run();\r\n    };\r\n\r\n    DashChart.prototype = {\r\n        /**\r\n         * Generate a random number within range.\r\n         * @param {number[]} range - Min and max value.\r\n         * @returns {number} Random number.\r\n         */\r\n        randomWithin: function(range) {\r\n            return Math.floor(range[0] + Math.random() * (range[1] + 1 - range[0]));\r\n        },\r\n\r\n        /**\r\n         * Generates a random color and a lighter partner color.\r\n         * @returns {string[]} Color codes.\r\n         */\r\n        randomColor: function() {\r\n            var hsl = [this.randomWithin([0, 360]), this.randomWithin([50, 100]), this.randomWithin([30, 80])];\r\n            return [\r\n                'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%, 1)',\r\n                'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%, .2)'\r\n            ];\r\n        },\r\n\r\n        /**\r\n         * Generates an array of random colors.\r\n         * @param {number} cnt - Number of colors to generate.\r\n         * @returns {string[]} Array of color codes.\r\n         */\r\n        randomColors: function(cnt) {\r\n            var result = new Array(cnt);\r\n            for (var i = 0; i < cnt; i++) {\r\n                result[i] = this.randomColor()[0];\r\n            }\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Parse a hex color into a hsla color and a lighter partner color.\r\n         * @param {string} hex - Hex color code with leading '#'.\r\n         * @returns {string[]} Color codes.\r\n         */\r\n        parseColor: function(hex) {\r\n            if (!hex) {\r\n                return this.randomColor();\r\n            }\r\n            var hsl = $.colors.rgb2hsl($.colors.hex2rgb(hex));\r\n            return [\r\n                'hsla(' + (hsl[0] * 360).toFixed(0) + ',' + (hsl[1] * 100).toFixed(0) + '%,' + (hsl[2] * 100).toFixed(0) + '%, 1)',\r\n                'hsla(' + (hsl[0] * 360).toFixed(0) + ',' + (hsl[1] * 100).toFixed(0) + '%,' + (hsl[2] * 100).toFixed(0) + '%, .2)'\r\n            ];\r\n        },\r\n\r\n        run: function() {\r\n            var self = this;\r\n\r\n            $.show($.get('.chart-spinner', self.content));\r\n            $.hide($.get('.chart-error', self.content));\r\n            $.hide(self.canvas.parentNode);\r\n            if (self.toggleExportFn) {\r\n                self.toggleExportFn(false);\r\n            }\r\n\r\n            $.ajax({\r\n                method: 'POST',\r\n                url: self.url,\r\n                block: false,\r\n                headers: {\r\n                    'Content-Type': 'application/jil; charset=utf-8',\r\n                    'Accept': 'application/jil'\r\n                }\r\n            }, function(data) {\r\n                if ($.isFunction(self.dataFn)) {\r\n                    if (!self.dataFn(data)) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                var ranges = $.isArray(data.ranges) ? data.ranges : [data];\r\n                if (!ranges.some(function(x) { return x.rows && x.rows.length; })) {\r\n                    $.hide($.get('.chart-spinner', self.content));\r\n                    Alertify.error($.resx('chart.noData'));\r\n                    return;\r\n                }\r\n\r\n                $.hide($.get('.chart-spinner', self.content));\r\n                $.hide($.get('.chart-error', self.content));\r\n                $.show(self.canvas.parentNode);\r\n                if (self.toggleExportFn) {\r\n                    self.toggleExportFn(true);\r\n                }\r\n\r\n                if (self.chart) {\r\n                    // this code is used for refreshing dashboard chart data, but won't be used on the chart dialog\r\n                    ranges.forEach(function(x, i) {\r\n                        self.chart.data.datasets[i].data = ranges[i].rows;\r\n                        self.chart.data.datasets[i].label = ranges[i].yTitle;\r\n                    });\r\n                    self.chart.data.labels = ranges[0].labels;\r\n                    self.chart.update();\r\n                } else {\r\n                    var scales = {};\r\n                    var tooltips = { callbacks: {} };\r\n                    if (ranges[0].xType === 'currency') {\r\n                        var currencyFormat = $.accounting.parseFormat(ranges[0].currencyFormat);\r\n                        scales.xAxes = [{\r\n                            ticks: {\r\n                                callback: function(value) {\r\n                                    return $.accounting.formatMoney(value, currencyFormat);\r\n                                }\r\n                            }\r\n                        }];\r\n                        tooltips.callbacks.title = function(tooltipItems, data) {\r\n                            var title = '';\r\n                            if (tooltipItems.length > 0) {\r\n                                if (tooltipItems[0].xLabel) {\r\n                                    title = tooltipItems[0].xLabel;\r\n                                } else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n                                    title = data.labels[tooltipItems[0].index];\r\n                                }\r\n                                title = $.accounting.formatMoney(title, currencyFormat);\r\n                            }\r\n                            return title;\r\n                        };\r\n                    } else if (ranges[0].xType === 'date') {\r\n                        var dateFormat = ranges[0].dateFormat;\r\n                        scales.xAxes = [{\r\n                            ticks: {\r\n                                callback: function(value) {\r\n                                    return $.fecha.format(new Date(value), dateFormat);\r\n                                }\r\n                            }\r\n                        }];\r\n                        tooltips.callbacks.title = function(tooltipItems, data) {\r\n                            var title = '';\r\n                            if (tooltipItems.length > 0) {\r\n                                if (tooltipItems[0].xLabel) {\r\n                                    title = tooltipItems[0].xLabel;\r\n                                } else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n                                    title = data.labels[tooltipItems[0].index];\r\n                                }\r\n                                title = $.fecha.format(new Date(title), dateFormat);\r\n                            }\r\n                            return title;\r\n                        };\r\n                    }\r\n\r\n                    var chartType = data.type.toLowerCase();\r\n                    var isRadial = chartType === 'pie' || chartType === 'doughnut';\r\n                    var datasets = [];\r\n                    scales.yAxes = [];\r\n                    ranges.forEach(function(x, i) {\r\n                        var color = self.parseColor(x.color);\r\n                        datasets.push({\r\n                            backgroundColor: color[0],\r\n                            borderColor: 'rgb(255, 255, 255)',\r\n                            borderWidth: 2,\r\n                            data: x.rows,\r\n                            label: x.yTitle,\r\n                            yAxisID: 'y-axis-' + i\r\n                        });\r\n\r\n                        var ticks = {};\r\n                        if (x.yType === 'currency') {\r\n                            var currencyFormat = $.accounting.parseFormat(x.currencyFormat);\r\n                            ticks.callback = function(value) {\r\n                                return $.accounting.formatMoney(value, currencyFormat);\r\n                            };\r\n                            tooltips.callbacks.label = function(item) {\r\n                                return $.accounting.formatMoney(item.yLabel, currencyFormat);\r\n                            };\r\n                        } else if (x.yType === 'date') {\r\n                            var dateFormat = x.dateFormat;\r\n                            ticks.callback = function(value) {\r\n                                return $.fecha.format(new Date(value), dateFormat);\r\n                            };\r\n                            tooltips.callbacks.label = function(item) {\r\n                                return $.fecha.format(new Date(item.yLabel), dateFormat);\r\n                            };\r\n                        }\r\n\r\n                        if (!isRadial) {\r\n                            scales.yAxes.push({\r\n                                id: 'y-axis-' + i,\r\n                                position: i === 0 ? 'left' : 'right',\r\n                                ticks: ticks,\r\n                                gridLines: {\r\n                                    color: color[1]\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    var chartData = {\r\n                        type: chartType === 'horizontalbar' ? 'horizontalBar' : chartType,\r\n                        options: {\r\n                            scales: isRadial ? null : scales,\r\n                            tooltips: tooltips,\r\n                            legend: { display: self.showLegend }\r\n                        },\r\n                        data: {\r\n                            labels: ranges[0].labels,\r\n                            datasets: datasets\r\n                        }\r\n                    };\r\n\r\n                    if (isRadial) {\r\n                        chartData.data.datasets[0].backgroundColor = self.randomColors(ranges[0].rows.length);\r\n                    }\r\n\r\n                    self.chart = new Chart(self.canvas.getContext('2d'), chartData);\r\n                }\r\n            }, function() {\r\n                if ($.isFunction(self.errorFn)) {\r\n                    if (!self.errorFn()) {\r\n                        return;\r\n                    }\r\n                }\r\n                $.hide($.get('.chart-spinner', self.content));\r\n                $.show($.get('.chart-error', self.content));\r\n                if (self.toggleExportFn) {\r\n                    self.toggleExportFn(false);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Eventually this may not be necessary, but responsive functionality for Chart.js does not seem to work correctly.\r\n         */\r\n        resize: function() {\r\n            if (this.chart) {\r\n                this.chart.resize();\r\n            }\r\n        },\r\n\r\n        destroy: function() {\r\n            $.destroy(this.chart);\r\n            if (this.events) {\r\n                $.off(window, 'resize', this.events.resize);\r\n            }\r\n        }\r\n    };\r\n\r\n    return DashChart;\r\n});\r\n","/*!\r\n * Draggabilly PACKAGED v2.1.1\r\n * Make that shiz draggable\r\n * http://draggabilly.desandro.com\r\n * MIT license\r\n *\r\n * Modified to remove jQuery completely.\r\n */\r\n\r\n/*!\r\n * getSize v2.0.2\r\n * measure size of elements\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    root.getSize = factory(root.$);\r\n})(this, function factory($) {\r\n    /**\r\n     * Get a number from a string, not a percentage.\r\n     * @param {string} value - String to parse.\r\n     * @returns {Number} Returns the number.\r\n     */\r\n    function getStyleSize(value) {\r\n        var num = parseFloat(value);\r\n        // not a percent like '100%', and a number\r\n        return value.indexOf('%') === -1 && !isNaN(num) && num;\r\n    }\r\n\r\n    var measurements = [\r\n        'paddingLeft',\r\n        'paddingRight',\r\n        'paddingTop',\r\n        'paddingBottom',\r\n        'marginLeft',\r\n        'marginRight',\r\n        'marginTop',\r\n        'marginBottom',\r\n        'borderLeftWidth',\r\n        'borderRightWidth',\r\n        'borderTopWidth',\r\n        'borderBottomWidth'\r\n    ];\r\n\r\n    var measurementsLength = measurements.length;\r\n\r\n    /**\r\n     * Build the size measurements for a hidden element.\r\n     * @returns {Object} Measurements for the element.\r\n     */\r\n    function getZeroSize() {\r\n        var size = {\r\n            width: 0,\r\n            height: 0,\r\n            innerWidth: 0,\r\n            innerHeight: 0,\r\n            outerWidth: 0,\r\n            outerHeight: 0\r\n        };\r\n        for (var i = 0; i < measurementsLength; i++) {\r\n            size[measurements[i]] = 0;\r\n        }\r\n        return size;\r\n    }\r\n\r\n    var isSetup = false;\r\n    var isBoxSizeOuter;\r\n\r\n    /**\r\n     * Setup the instance.\r\n     */\r\n    function setup() {\r\n        // setup once\r\n        if (isSetup) {\r\n            return;\r\n        }\r\n        isSetup = true;\r\n\r\n        /**\r\n         * WebKit measures the outer-width on style.width on border-box elems\r\n         * IE & Firefox<29 measures the inner-width\r\n         */\r\n        var div = document.createElement('div');\r\n        $.style(div, { width: '200px', padding: '1px 2px 3px 4px', borderStyle: 'solid', borderWidth: '1px 2px 3px 4px', boxSizing: 'border-box' });\r\n\r\n        var body = document.body || document.documentElement;\r\n        body.appendChild(div);\r\n        var style = getComputedStyle(div);\r\n\r\n        getSize.isBoxSizeOuter = isBoxSizeOuter = getStyleSize(style.width) === 200;\r\n        body.removeChild(div);\r\n    }\r\n\r\n    /**\r\n     * Get the dimensions of a node.\r\n     * @param {Node|string} elem - Node object or query selector.\r\n     * @returns {Object} Dimensions for node.\r\n     */\r\n    function getSize(elem) {\r\n        setup();\r\n\r\n        elem = $.get(elem);\r\n        if (!$.isNode(elem)) {\r\n            return;\r\n        }\r\n\r\n        var style = getComputedStyle(elem);\r\n\r\n        // if hidden, everything is 0\r\n        if (style.display === 'none') {\r\n            return getZeroSize();\r\n        }\r\n\r\n        var size = { width: elem.offsetWidth, height: elem.offsetHeight };\r\n        var isBorderBox = size.isBorderBox = style.boxSizing === 'border-box';\r\n\r\n        // get all measurements\r\n        for (var i = 0; i < measurementsLength; i++) {\r\n            var measurement = measurements[i];\r\n            var value = style[measurement];\r\n            var num = parseFloat(value);\r\n            // any 'auto', 'medium' value will be 0\r\n            size[measurement] = !isNaN(num) ? num : 0;\r\n        }\r\n\r\n        var paddingWidth = size.paddingLeft + size.paddingRight;\r\n        var paddingHeight = size.paddingTop + size.paddingBottom;\r\n        var marginWidth = size.marginLeft + size.marginRight;\r\n        var marginHeight = size.marginTop + size.marginBottom;\r\n        var borderWidth = size.borderLeftWidth + size.borderRightWidth;\r\n        var borderHeight = size.borderTopWidth + size.borderBottomWidth;\r\n        var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\r\n\r\n        // overwrite width and height if we can get it from style\r\n        var styleWidth = getStyleSize(style.width);\r\n        if (styleWidth !== false) {\r\n            // add padding and border unless it's already including it\r\n            size.width = styleWidth + (isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth);\r\n        }\r\n\r\n        var styleHeight = getStyleSize(style.height);\r\n        if (styleHeight !== false) {\r\n            // add padding and border unless it's already including it\r\n            size.height = styleHeight + (isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight);\r\n        }\r\n\r\n        size.innerWidth = size.width - (paddingWidth + borderWidth);\r\n        size.innerHeight = size.height - (paddingHeight + borderHeight);\r\n        size.outerWidth = size.width + marginWidth;\r\n        size.outerHeight = size.height + marginHeight;\r\n\r\n        return size;\r\n    }\r\n\r\n    return getSize;\r\n});\r\n\r\n/**\r\n * EvEmitter v1.0.3\r\n * Lil' event emitter\r\n * MIT License\r\n */\r\n\r\n/* jshint unused: true, undef: true, strict: true */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.EvEmitter = factory();\r\n}(this, function() {\r\n    /**\r\n     * Constructor for the event emitter.\r\n     */\r\n    function EvEmitter() { }\r\n\r\n    EvEmitter.prototype = {\r\n        /**\r\n         * Add an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Function} listener - Callback function\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        on: function(eventName, listener) {\r\n            if (!eventName || !listener) {\r\n                return;\r\n            }\r\n            // set events hash\r\n            var events = this._events = this._events || {};\r\n            // set listeners array\r\n            var listeners = events[eventName] = events[eventName] || [];\r\n            // only add once\r\n            if (listeners.indexOf(listener) === -1) {\r\n                listeners.push(listener);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Remove an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Function} listener - Callback function\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        off: function(eventName, listener) {\r\n            var listeners = this._events && this._events[eventName];\r\n            if (!listeners || !listeners.length) {\r\n                return;\r\n            }\r\n            var index = listeners.indexOf(listener);\r\n            if (index !== -1) {\r\n                listeners.splice(index, 1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Dispatch an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Array} args - Arguments for the callback.\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        emitEvent: function(eventName, args) {\r\n            var listeners = this._events && this._events[eventName];\r\n            if (!listeners || !listeners.length) {\r\n                return;\r\n            }\r\n            args = args || [];\r\n            listeners.forEach(function(x) {\r\n                x.apply(this, args);\r\n            });\r\n            return this;\r\n        }\r\n    };\r\n\r\n    return EvEmitter;\r\n}));\r\n\r\n/*!\r\n * Unipointer v2.1.0\r\n * base class for doing one thing with pointer event\r\n * MIT license\r\n */\r\n\r\n/*jshint browser: true, undef: true, unused: true, strict: true */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Unipointer = factory(root.$, root, root.EvEmitter);\r\n}(this, function factory($, root, EvEmitter) {\r\n    /**\r\n     * Constructor for the Unipointer\r\n     */\r\n    function Unipointer() { }\r\n\r\n    // inherit EvEmitter\r\n    var proto = Unipointer.prototype = Object.create(EvEmitter.prototype);\r\n\r\n    /**\r\n     * Add an event to start dragging.\r\n     * @param {Node} elem - Node to add the event to.\r\n     */\r\n    proto.bindStartEvent = function(elem) {\r\n        this._bindStartEvent(elem, true);\r\n    };\r\n\r\n    /**\r\n     * Remove an event to start dragging.\r\n     * @param {Node} elem - Node to remove the event from.\r\n     */\r\n    proto.unbindStartEvent = function(elem) {\r\n        this._bindStartEvent(elem, false);\r\n    };\r\n\r\n    /**\r\n     * Add/remove the event to start dragging.\r\n     * @param {Node} elem - Node to add/remove the event to.\r\n     * @param {Boolean} isBind - will unbind if falsey.\r\n     * @private\r\n     */\r\n    proto._bindStartEvent = function(elem, isBind) {\r\n        var bindMethod = $.coalesce(isBind, true) ? 'addEventListener' : 'removeEventListener';\r\n\r\n        if (window.navigator.pointerEnabled) {\r\n            // W3C Pointer Events, IE11. See https://coderwall.com/p/mfreca\r\n            elem[bindMethod]('pointerdown', this);\r\n        } else if (window.navigator.msPointerEnabled) {\r\n            // IE10 Pointer Events\r\n            elem[bindMethod]('MSPointerDown', this);\r\n        } else {\r\n            // listen for both, for devices like Chrome Pixel\r\n            elem[bindMethod]('mousedown', this);\r\n            elem[bindMethod]('touchstart', this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Trigger handler methods for events\r\n     * @param {Event} event - Event to trigger.\r\n     */\r\n    proto.handleEvent = function(event) {\r\n        var method = 'on' + event.type;\r\n        if (this[method]) {\r\n            this[method](event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns the touch that we're keeping track of.\r\n     * @param {Touch[]} touches - Touch history\r\n     * @returns {Touch} Touch event.\r\n     */\r\n    proto.getTouch = function(touches) {\r\n        return $.findByKey(touches, 'identifier', this.pointerIdentifier);\r\n    };\r\n\r\n    /**\r\n     * Handle a mouse click.\r\n     * @param {Event} event - Click event.\r\n     */\r\n    proto.onmousedown = function(event) {\r\n        // dismiss clicks from right or middle buttons\r\n        var button = event.button;\r\n        if (button && (button !== 0 && button !== 1)) {\r\n            return;\r\n        }\r\n        this._pointerDown(event, event);\r\n    };\r\n\r\n    /**\r\n     * Handle a touch.\r\n     * @param {Touch} event - Touch event.\r\n     */\r\n    proto.ontouchstart = function(event) {\r\n        this._pointerDown(event, event.changedTouches[0]);\r\n    };\r\n\r\n    /**\r\n     * Handle a mouse click for IE.\r\n     * @param {Event} event - Click event.\r\n     */\r\n    proto.onMSPointerDown = proto.onpointerdown = function(event) {\r\n        this._pointerDown(event, event);\r\n    };\r\n\r\n    /**\r\n     * Start a click/touch event.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerDown = function(event, pointer) {\r\n        // dismiss other pointers\r\n        if (this.isPointerDown) {\r\n            return;\r\n        }\r\n\r\n        this.isPointerDown = true;\r\n        // save pointer identifier to match up touch events\r\n        // pointerId for pointer events, touch.indentifier for touch events\r\n        this.pointerIdentifier = pointer.pointerId !== undefined ? pointer.pointerId : pointer.identifier;\r\n        this.pointerDown(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Bind events after the start of a click/touch event.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        this._bindPostStartEvents(event);\r\n        this.emitEvent('pointerDown', [event, pointer]);\r\n    };\r\n\r\n    // hash of events to be bound after start event\r\n    var postStartEvents = {\r\n        mousedown: ['mousemove', 'mouseup'],\r\n        touchstart: ['touchmove', 'touchend', 'touchcancel'],\r\n        pointerdown: ['pointermove', 'pointerup', 'pointercancel'],\r\n        MSPointerDown: ['MSPointerMove', 'MSPointerUp', 'MSPointerCancel']\r\n    };\r\n\r\n    /**\r\n     * Add all of the events that are needed after start dragging.\r\n     * @param {Event} event - Original click/touch event.\r\n     * @private\r\n     */\r\n    proto._bindPostStartEvents = function(event) {\r\n        if (!event) {\r\n            return;\r\n        }\r\n        // get proper events to match start event\r\n        var events = postStartEvents[event.type];\r\n        // bind events to node\r\n        events.forEach(function(eventName) {\r\n            window.addEventListener(eventName, this);\r\n        }, this);\r\n        // save these arguments\r\n        this._boundPointerEvents = events;\r\n    };\r\n\r\n    /**\r\n     * Remove all of the events that are needed after start dragging.\r\n     * @param {Event} event - Original click/touch event.\r\n     * @private\r\n     */\r\n    proto._unbindPostStartEvents = function() {\r\n        // check for _boundEvents, in case dragEnd triggered twice (old IE8 bug)\r\n        if (!this._boundPointerEvents) {\r\n            return;\r\n        }\r\n        this._boundPointerEvents.forEach(function(eventName) {\r\n            window.removeEventListener(eventName, this);\r\n        }, this);\r\n\r\n        delete this._boundPointerEvents;\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse moves.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onmousemove = function(event) {\r\n        this._pointerMove(event, event);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse moves for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerMove = proto.onpointermove = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerMove(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch moves.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchmove = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerMove(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer move from all the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerMove = function(event, pointer) {\r\n        this.pointerMove(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer move event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        this.emitEvent('pointerMove', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse button is released.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onmouseup = function(event) {\r\n        this._pointerUp(event, event);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse button is released for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerUp = proto.onpointerup = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerUp(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch is released.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchend = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerUp(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer up from all the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerUp = function(event, pointer) {\r\n        this._pointerDone();\r\n        this.pointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer up event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        this.emitEvent('pointerUp', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Event handler for when the dragging stops.\r\n     * @private\r\n     */\r\n    proto._pointerDone = function() {\r\n        // reset properties\r\n        this.isPointerDown = false;\r\n        delete this.pointerIdentifier;\r\n        // remove events\r\n        this._unbindPostStartEvents();\r\n        this.pointerDone();\r\n    };\r\n\r\n    proto.pointerDone = $.noop;\r\n\r\n    /**\r\n     * Event handler when the mouse click is canceled for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerCancel = proto.onpointercancel = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerCancel(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch is canceled.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchcancel = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerCancel(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer cancel from all of the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerCancel = function(event, pointer) {\r\n        this._pointerDone();\r\n        this.pointerCancel(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer cancel event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerCancel = function(event, pointer) {\r\n        this.emitEvent('pointerCancel', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Utility function for getting x/y coords from event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @returns {Object} Object with x & y coordinates.\r\n     */\r\n    Unipointer.getPointerPoint = function(pointer) {\r\n        return {\r\n            x: pointer.pageX,\r\n            y: pointer.pageY\r\n        };\r\n    };\r\n\r\n    return Unipointer;\r\n}));\r\n\r\n/*!\r\n * Unidragger v2.1.0\r\n * Draggable base class\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Unidragger = factory(root.$, root, root.Unipointer);\r\n}(this, function factory($, root, Unipointer) {\r\n    /**\r\n     * Unidragger constructor.\r\n     */\r\n    function Unidragger() { }\r\n\r\n    /**\r\n     * Inherit Unipointer & EvEmitter\r\n     */\r\n    var proto = Unidragger.prototype = Object.create(Unipointer.prototype);\r\n\r\n    /**\r\n     * Add events for drag handle.\r\n     */\r\n    proto.bindHandles = function() {\r\n        this._bindHandles(true);\r\n    };\r\n\r\n    /**\r\n     * Remove events for drag handle.\r\n     */\r\n    proto.unbindHandles = function() {\r\n        this._bindHandles(false);\r\n    };\r\n\r\n    /**\r\n     * Handle adding/removing events for the drag handle.\r\n     * @param {Bool} isBind - Unbind if falsey.\r\n     */\r\n    proto._bindHandles = function(isBind) {\r\n        isBind = $.coalesce(isBind, true);\r\n        // extra bind logic\r\n        var binderExtra;\r\n        var navigator = window.navigator;\r\n        if (navigator.pointerEnabled || navigator.msPointerEnabled) {\r\n            var prop = navigator.pointerEnabled ? 'touchAction' : 'msTouchAction';\r\n            binderExtra = function(handle) {\r\n                // disable scrolling on the element\r\n                handle.style[prop] = isBind ? 'none' : '';\r\n            };\r\n        } else {\r\n            binderExtra = $.noop;\r\n        }\r\n        // bind each handle\r\n        var bindMethod = isBind ? 'addEventListener' : 'removeEventListener';\r\n        for (var i = 0; i < this.handles.length; i++) {\r\n            var handle = this.handles[i];\r\n            this._bindStartEvent(handle, isBind);\r\n            binderExtra(handle);\r\n            handle[bindMethod]('click', this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Pointer start\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        // dismiss range sliders\r\n        if (event.target.nodeName === 'INPUT' && event.target.type === 'range') {\r\n            // reset pointerDown logic\r\n            this.isPointerDown = false;\r\n            delete this.pointerIdentifier;\r\n            return;\r\n        }\r\n\r\n        this._dragPointerDown(event, pointer);\r\n        // kludge to blur focused inputs in dragger\r\n        var focused = document.activeElement;\r\n        if (focused && focused.blur) {\r\n            focused.blur();\r\n        }\r\n        // bind move and end events\r\n        this._bindPostStartEvents(event);\r\n        this.emitEvent('pointerDown', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Base pointer down logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragPointerDown = function(event, pointer) {\r\n        // track to see when dragging starts\r\n        this.pointerDownPoint = Unipointer.getPointerPoint(pointer);\r\n        if (this.canPreventDefaultOnPointerDown(event, pointer)) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Overwriteable method so Flickity can prevent for scrolling\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @returns {Bool} True if allowed to prevent default event, else false.\r\n     */\r\n    proto.canPreventDefaultOnPointerDown = function(event) {\r\n        // prevent default, unless touchstart or <select>\r\n        return event.target.nodeName !== 'SELECT';\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        var moveVector = this._dragPointerMove(event, pointer);\r\n        this.emitEvent('pointerMove', [event, pointer, moveVector]);\r\n        this._dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Base pointer move logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @returns {Object} Object with x & y coordinates.\r\n     */\r\n    proto._dragPointerMove = function(event, pointer) {\r\n        var movePoint = Unipointer.getPointerPoint(pointer);\r\n        var moveVector = {\r\n            x: movePoint.x - this.pointerDownPoint.x,\r\n            y: movePoint.y - this.pointerDownPoint.y\r\n        };\r\n        // start drag if pointer has moved far enough to start drag\r\n        if (!this.isDragging && this.hasDragStarted(moveVector)) {\r\n            this._dragStart(event, pointer);\r\n        }\r\n        return moveVector;\r\n    };\r\n\r\n    /**\r\n     * Check if pointer has moved far enough to start drag.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     * @returns {Bool} True if moved far enough to count as move.\r\n     */\r\n    proto.hasDragStarted = function(moveVector) {\r\n        return Math.abs(moveVector.x) > 3 || Math.abs(moveVector.y) > 3;\r\n    };\r\n\r\n    /**\r\n     * Pointer up.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        this.emitEvent('pointerUp', [event, pointer]);\r\n        this._dragPointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Handle mouse/touch up.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragPointerUp = function(event, pointer) {\r\n        if (this.isDragging) {\r\n            this._dragEnd(event, pointer);\r\n        } else {\r\n            // pointer didn't move enough for drag to start\r\n            this._staticClick(event, pointer);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Base drag start logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._dragStart = function(event, pointer) {\r\n        this.isDragging = true;\r\n        this.dragStartPoint = Unipointer.getPointerPoint(pointer);\r\n        this.isPreventingClicks = true;\r\n        this.dragStart(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag start event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragStart = function(event, pointer) {\r\n        this.emitEvent('dragStart', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Base drag move logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     * @private\r\n     */\r\n    proto._dragMove = function(event, pointer, moveVector) {\r\n        // do not drag if not dragging yet\r\n        if (!this.isDragging) {\r\n            return;\r\n        }\r\n        this.dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag move event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     */\r\n    proto.dragMove = function(event, pointer, moveVector) {\r\n        event.preventDefault();\r\n        this.emitEvent('dragMove', [event, pointer, moveVector]);\r\n    };\r\n\r\n    /**\r\n     * Base logic for drag end.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragEnd = function(event, pointer) {\r\n        this.isDragging = false;\r\n        // re-enable clicking async\r\n        setTimeout(function() {\r\n            delete this.isPreventingClicks;\r\n        }.bind(this));\r\n        this.dragEnd(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag end event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragEnd = function(event, pointer) {\r\n        this.emitEvent('dragEnd', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Handle all clicks and prevent clicks when dragging\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     */\r\n    proto.onclick = function(event) {\r\n        if (this.isPreventingClicks) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Triggered after pointer down & up with no/tiny movement.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._staticClick = function(event, pointer) {\r\n        // ignore emulated mouse up clicks\r\n        if (this.isIgnoringMouseUp && event.type === 'mouseup') {\r\n            return;\r\n        }\r\n\r\n        // allow click in <input>s and <textarea>s\r\n        var nodeName = event.target.nodeName;\r\n        if (nodeName === 'INPUT' || nodeName === 'TEXTAREA') {\r\n            event.target.focus();\r\n        }\r\n        this.staticClick(event, pointer);\r\n\r\n        // set flag for emulated clicks 300ms after touchend\r\n        if (event.type !== 'mouseup') {\r\n            this.isIgnoringMouseUp = true;\r\n            // reset flag after 300ms\r\n            setTimeout(function() {\r\n                delete this.isIgnoringMouseUp;\r\n            }.bind(this), 400);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Dispatch event for staticClick for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.staticClick = function(event, pointer) {\r\n        this.emitEvent('staticClick', [event, pointer]);\r\n    };\r\n\r\n    return Unidragger;\r\n}));\r\n\r\n/*!\r\n * Draggabilly v2.1.1\r\n * Make that shiz draggable\r\n * http://draggabilly.desandro.com\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Draggabilly = factory(root.$, root, root.getSize, root.Unidragger);\r\n}(this, function factory($, root, getSize, Unidragger) {\r\n    var lastTime = 0;\r\n    // get rAF, prefixed, if present. fallback to setTimeout\r\n    var requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(callback) {\r\n        var currTime = new Date().getTime();\r\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n        var id = setTimeout(callback, timeToCall);\r\n        lastTime = currTime + timeToCall;\r\n        return id;\r\n    };\r\n    var transformProperty = $.isString(document.documentElement.style.transform) ? 'transform' : 'WebkitTransform';\r\n\r\n    /**\r\n     * Draggabilly constructor.\r\n     * @param {Node|string} element - Node, or querySelector string of node, to make draggable.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    function Draggabilly(element, options) {\r\n        this.element = $.get(element);\r\n        this.options = options || {};\r\n        this._create();\r\n    }\r\n\r\n    /**\r\n     * Inherit Unidragger methods.\r\n     */\r\n    var proto = Draggabilly.prototype = Object.create(Unidragger.prototype);\r\n\r\n    /**\r\n     * CSS position values that don't need to be set.\r\n     */\r\n    var positionValues = { relative: true, absolute: true, fixed: true };\r\n\r\n    /**\r\n     * Initialize draggabilly.\r\n     */\r\n    proto._create = function() {\r\n        // properties\r\n        this.position = {};\r\n        this._getPosition();\r\n\r\n        this.startPoint = { x: 0, y: 0 };\r\n        this.dragPoint = { x: 0, y: 0 };\r\n        this.startPosition = {};\r\n\r\n        // set relative positioning\r\n        var style = getComputedStyle(this.element);\r\n        if (!positionValues[style.position]) {\r\n            this.element.style.position = 'relative';\r\n        }\r\n\r\n        this.enable();\r\n        this.setHandles();\r\n    };\r\n\r\n    /**\r\n     * Set this.handles and bind start events to the handles.\r\n     */\r\n    proto.setHandles = function() {\r\n        this.handles = this.options.handle ? $.getAll(this.options.handle, this.element) : [this.element];\r\n        this.bindHandles();\r\n    };\r\n\r\n    /**\r\n     * Emits events via EvEmitter.\r\n     * @param {String} type - Name of event.\r\n     * @param {Event} event - Original event.\r\n     * @param {Array} args - Extra arguments.\r\n     */\r\n    proto.dispatchEvent = function(type, event, args) {\r\n        this.emitEvent(type, [event].concat(args));\r\n    };\r\n\r\n    /**\r\n     * Get x/y position from style.\r\n     */\r\n    proto._getPosition = function() {\r\n        var style = getComputedStyle(this.element);\r\n        var x = this._getPositionCoord(style.left, 'width');\r\n        var y = this._getPositionCoord(style.top, 'height');\r\n        // clean up 'auto' or other non-integer values\r\n        this.position.x = isNaN(x) ? 0 : x;\r\n        this.position.y = isNaN(y) ? 0 : y;\r\n\r\n        this._addTransformPosition(style);\r\n    };\r\n\r\n    /**\r\n     * Get a numeric coordinate from a style.\r\n     * @param {String} styleSide - CSS style to parse.\r\n     * @param {String} measure - Property name to get the size for.\r\n     * @returns {Number} Resulting size in pixels.\r\n     */\r\n    proto._getPositionCoord = function(styleSide, measure) {\r\n        if (styleSide.indexOf('%') !== -1) {\r\n            // convert percent into pixel for Safari, #75\r\n            var parentSize = getSize(this.element.parentNode);\r\n            // prevent not-in-DOM element throwing bug, #131\r\n            return !parentSize ? 0 : (parseFloat(styleSide) / 100) * parentSize[measure];\r\n        }\r\n        return parseInt(styleSide, 10);\r\n    };\r\n\r\n    /**\r\n     * Add `transform: translate( x, y )` to position.\r\n     * @param {CSSStyleDeclaration} style - Element styles to add to.\r\n     */\r\n    proto._addTransformPosition = function(style) {\r\n        var transform = style[transformProperty];\r\n        // bail out if value is 'none'\r\n        if (transform.indexOf('matrix') !== 0) {\r\n            return;\r\n        }\r\n        // split matrix(1, 0, 0, 1, x, y)\r\n        var matrixValues = transform.split(',');\r\n        // translate X value is in 12th or 4th position\r\n        var xIndex = transform.indexOf('matrix3d') === 0 ? 12 : 4;\r\n        var translateX = parseInt(matrixValues[xIndex], 10);\r\n        // translate Y value is in 13th or 5th position\r\n        var translateY = parseInt(matrixValues[xIndex + 1], 10);\r\n        this.position.x += translateX;\r\n        this.position.y += translateY;\r\n    };\r\n\r\n    /**\r\n     * Pointer start.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        this._dragPointerDown(event, pointer);\r\n        // kludge to blur focused inputs in dragger\r\n        var focused = document.activeElement;\r\n        // do not blur body for IE10, metafizzy/flickity#117\r\n        if (focused && focused.blur && focused !== document.body) {\r\n            focused.blur();\r\n        }\r\n        // bind move and end events\r\n        this._bindPostStartEvents(event);\r\n        $.addClass(this.element, 'is-pointer-down');\r\n        this.dispatchEvent('pointerDown', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        var moveVector = this._dragPointerMove(event, pointer);\r\n        this.dispatchEvent('pointerMove', event, [pointer, moveVector]);\r\n        this._dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Drag start.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragStart = function(event, pointer) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n        this._getPosition();\r\n        this.measureContainment();\r\n        // position _when_ drag began\r\n        this.startPosition.x = this.position.x;\r\n        this.startPosition.y = this.position.y;\r\n        // reset left/top style\r\n        this.setLeftTop();\r\n\r\n        this.dragPoint.x = 0;\r\n        this.dragPoint.y = 0;\r\n\r\n        $.addClass(this.element, 'is-dragging');\r\n        this.dispatchEvent('dragStart', event, [pointer]);\r\n        // start animation\r\n        this.animate();\r\n    };\r\n\r\n    /**\r\n     * Calculate the correct position of the element within its container.\r\n     */\r\n    proto.measureContainment = function() {\r\n        var containment = this.options.containment;\r\n        if (!containment) {\r\n            return;\r\n        }\r\n\r\n        // use element if element, otherwise just `true`, use the parent\r\n        var container = $.isNode(containment) ? containment : $.isString(containment) ? $.get(containment) : this.element.parentNode;\r\n        var elemSize = getSize(this.element);\r\n        var containerSize = getSize(container);\r\n        var elemRect = this.element.getBoundingClientRect();\r\n        var containerRect = container.getBoundingClientRect();\r\n        var borderSizeX = containerSize.borderLeftWidth + containerSize.borderRightWidth;\r\n        var borderSizeY = containerSize.borderTopWidth + containerSize.borderBottomWidth;\r\n\r\n        var position = this.relativeStartPosition = {\r\n            x: elemRect.left - (containerRect.left + containerSize.borderLeftWidth),\r\n            y: elemRect.top - (containerRect.top + containerSize.borderTopWidth)\r\n        };\r\n\r\n        this.containSize = {\r\n            width: (containerSize.width - borderSizeX) - position.x - elemSize.width,\r\n            height: (containerSize.height - borderSizeY) - position.y - elemSize.height\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x and y coordinates of current position.\r\n     */\r\n    proto.dragMove = function(event, pointer, moveVector) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n\r\n        var dragX = moveVector.x;\r\n        var dragY = moveVector.y;\r\n        var grid = this.options.grid;\r\n        var gridX = grid && grid[0];\r\n        var gridY = grid && grid[1];\r\n\r\n        dragX = applyGrid(dragX, gridX);\r\n        dragY = applyGrid(dragY, gridY);\r\n\r\n        dragX = this.containDrag('x', dragX, gridX);\r\n        dragY = this.containDrag('y', dragY, gridY);\r\n\r\n        // constrain to axis\r\n        dragX = this.options.axis === 'y' ? 0 : dragX;\r\n        dragY = this.options.axis === 'x' ? 0 : dragY;\r\n\r\n        if (this.options.minZero) {\r\n            dragX = applyMinZero(this.startPosition.x, dragX);\r\n            dragY = applyMinZero(this.startPosition.y, dragY);\r\n        }\r\n\r\n        this.position.x = this.startPosition.x + dragX;\r\n        this.position.y = this.startPosition.y + dragY;\r\n        // set dragPoint properties\r\n        this.dragPoint.x = dragX;\r\n        this.dragPoint.y = dragY;\r\n\r\n        this.dispatchEvent('dragMove', event, [pointer, moveVector]);\r\n    };\r\n\r\n    /**\r\n     * Adjust a coordinate to snap to the grid.\r\n     * @param {Number} value - Coordinate to snap to grid.\r\n     * @param {Number} grid - Grid width/height.\r\n     * @param {String} method - Math method to apply.\r\n     * @returns {Number} Closes number that snaps to grid.\r\n     */\r\n    function applyGrid(value, grid, method) {\r\n        return grid ? Math[method || 'round'](value / grid) * grid : value;\r\n    }\r\n\r\n    /**\r\n     * Adjust the drag position to prevent the item from moving out of the container to the left or top.\r\n     * @param {Number} start - Element starting coordinate.\r\n     * @param {Number} drag - Distance element was dragged.\r\n     * @returns {Number} Corrected drag coordinate.\r\n     */\r\n    function applyMinZero(start, drag) {\r\n        return start + drag < 0 ? -start : drag;\r\n    }\r\n\r\n    /**\r\n     * Limit dragging within boundaries.\r\n     * @param {string} axis - X or Y Axis\r\n     * @param {number} drag - Position coordinate on axis\r\n     * @param {number} grid - Boundary coordinate on axis.\r\n     * @returns {number} Coordinate contained with drag.\r\n     */\r\n    proto.containDrag = function(axis, drag, grid) {\r\n        if (!this.options.containment) {\r\n            return drag;\r\n        }\r\n        var measure = axis === 'x' ? 'width' : 'height';\r\n\r\n        var rel = this.relativeStartPosition[axis];\r\n        var min = applyGrid(-rel, grid, 'ceil');\r\n        var max = this.containSize[measure];\r\n        max = applyGrid(max, grid, 'floor');\r\n        return Math.min(max, Math.max(min, drag));\r\n    };\r\n\r\n    /**\r\n     * pointer up\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        $.removeClass(this.element, 'is-pointer-down');\r\n        this.dispatchEvent('pointerUp', event, [pointer]);\r\n        this._dragPointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Drag end.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragEnd = function(event, pointer) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n        // use top left position when complete\r\n        if (transformProperty) {\r\n            this.element.style[transformProperty] = '';\r\n            this.setLeftTop();\r\n        }\r\n        $.removeClass(this.element, 'is-dragging');\r\n        this.dispatchEvent('dragEnd', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Animate while dragging.\r\n     */\r\n    proto.animate = function() {\r\n        if (!this.isDragging) {\r\n            return;\r\n        }\r\n        this.positionDrag();\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    };\r\n\r\n    /**\r\n     * Set left/top positioning.\r\n     */\r\n    proto.setLeftTop = function() {\r\n        $.style(this.element, { left: this.position.x + 'px', top: this.position.y + 'px' });\r\n    };\r\n\r\n    /**\r\n     * Set position transform based on drag.\r\n     */\r\n    proto.positionDrag = function() {\r\n        this.element.style[transformProperty] = 'translate3d( ' + this.dragPoint.x + 'px, ' + this.dragPoint.y + 'px, 0)';\r\n    };\r\n\r\n    /**\r\n     * Dispatch the event for static click callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.staticClick = function(event, pointer) {\r\n        this.dispatchEvent('staticClick', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Enable dragging.\r\n     */\r\n    proto.enable = function() {\r\n        this.isEnabled = true;\r\n    };\r\n\r\n    /**\r\n     * Disable dragging.\r\n     */\r\n    proto.disable = function() {\r\n        this.isEnabled = false;\r\n        if (this.isDragging) {\r\n            this.dragEnd();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy this instance.\r\n     */\r\n    proto.destroy = function() {\r\n        this.disable();\r\n        this.element.removeAttribute('style');\r\n        this.unbindHandles();\r\n    };\r\n\r\n    return Draggabilly;\r\n}));\r\n","/*!\r\n * Help mithril component. Shows input groups with help button.\r\n */\r\n(function(root, factory) {\r\n    root.Help = factory(root.m, root.$, root.Alertify);\r\n})(this, function(m, $, Alertify) {\r\n    'use strict';\r\n\r\n    var Help = {\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            this.opts = {\r\n                enabled: attrs.enabled,\r\n                message: attrs.message\r\n            };\r\n        },\r\n\r\n        showHelp: function(e) {\r\n            var f = $.content.focusOnClose.bind(e);\r\n            Alertify.alert(this.opts.message, f, f);\r\n        },\r\n\r\n        view: function(vnode) {\r\n            if (!this.opts.enabled) {\r\n                return $.isArray(vnode.children) ? m('.input-group', vnode.children) : vnode.children;\r\n            }\r\n            if (!(vnode.children && vnode.children.length)) {\r\n                return m('span', m('button.btn.btn-secondary', {\r\n                    type: 'button', role: 'button', onclick: this.showHelp.bind(this)\r\n                }, m('i.dash.dash-help')));\r\n            }\r\n            return m('.input-group',\r\n                vnode.children.concat(m('span.input-group-addon.input-group-custom', m('button.btn.btn-secondary', {\r\n                    type: 'button', role: 'button', onclick: this.showHelp.bind(this)\r\n                }, m('i.dash.dash-help'))))\r\n            );\r\n        }\r\n    };\r\n\r\n    return Help;\r\n});\r\n","/*!\r\n * Library for storing widget positions and detecting collisions.\r\n */\r\n(function(root, factory) {\r\n    root.Rect = factory(root.$);\r\n})(this, function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Constructor for a rect.\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     */\r\n    function Rect(width, height, x, y) {\r\n        this.x = $.coalesce(x, 0);\r\n        this.y = $.coalesce(y, 0);\r\n        this.width = $.coalesce(width, 0);\r\n        this.height = $.coalesce(height, 0);\r\n        this.updated = false;\r\n    }\r\n\r\n    Rect.prototype = {\r\n        /**\r\n         * Check if rect intersects with this rect.\r\n         * @param {Rect} rect - Rect to check for intersection with.\r\n         * @returns {bool} True if the rectangles collide, else false.\r\n         */\r\n        overlaps: function(rect) {\r\n            var thisRight = this.x + this.width;\r\n            var thisBottom = this.y + this.height;\r\n            var rectRight = rect.x + rect.width;\r\n            var rectBottom = rect.y + rect.height;\r\n\r\n            // http://stackoverflow.com/a/306332\r\n            return this.x < rectRight && thisRight > rect.x && this.y < rectBottom && thisBottom > rect.y;\r\n        }\r\n    };\r\n\r\n    return Rect;\r\n});\r\n","/*!\r\n * Spectre tab component.\r\n */\r\n(function(root, factory) {\r\n    root.Tab = factory(root.$);\r\n})(this, function($) {\r\n    var Tab = function(element) {\r\n        var tab = $.get(element);\r\n        if (tab) {\r\n            $.on($.get(element), 'click', this.action.bind(this), false);\r\n            this.container = tab.parentNode.parentNode;\r\n        }\r\n    };\r\n\r\n    Tab.prototype = {\r\n        action: function(e) {\r\n            if (!e) {\r\n                return;\r\n            }\r\n\r\n            e.preventDefault();\r\n            var target = e.target;\r\n            if (!$.hasClass(target.parentNode, 'active')) {\r\n                var content = this.getContent();\r\n                $.removeClass($.getAll('a', this.getTab())[0], 'active');\r\n                $.addClass(target, 'active');\r\n                setTimeout(function() {\r\n                    $.removeClass(content, 'active');\r\n                    $.addClass($.get(target.getAttribute('href')), 'active');\r\n                }, 100);\r\n            }\r\n        },\r\n\r\n        getTab: function() {\r\n            var activeTabs = $.getAll('.active', this.container);\r\n            return activeTabs[activeTabs.length - 1].parentNode;\r\n        },\r\n\r\n        getContent: function() {\r\n            var tab = this.getTab();\r\n            var links = tab && $.getAll('a', tab);\r\n            return links.length && $.get(links[0].getAttribute('href'));\r\n        }\r\n    };\r\n\r\n    return Tab;\r\n});\r\n","/*!\r\n * Mithril based table component. Supports ajax data, searching, sorting, paging, & resizing columns.\r\n */\r\n(function(root, factory) {\r\n    root.Table = factory(root.m, root.$, root.pjax, root.Alertify);\r\n})(this, function(m, $, pjax, Alertify) {\r\n    'use strict';\r\n\r\n    var Table = {\r\n        pageOptions: [m('option', { value: '10' }, '10'), m('option', { value: '20' }, '20'), m('option', { value: '50' }, '50'), m('option', { value: '100' }, '100')],\r\n\r\n        /**\r\n         * Get/set persistent values.\r\n         * @param {string} key - Key name of the value to get/set.\r\n         * @param {*} value - Value to set.\r\n         * @returns {string|undefined} Value if getting, else undefined.\r\n         */\r\n        store: function(key, value) {\r\n            if (!this.opts.storeSettings) {\r\n                return;\r\n            }\r\n            var myKey = this.opts.id + '.' + key;\r\n            // getter\r\n            if ($.isUndefined(value)) {\r\n                return $.isNull(this.opts.storeUrl) ? localStorage[myKey] : $.coalesce(this.opts[key], null);\r\n            }\r\n\r\n            // setter\r\n            if ($.isNull(this.storeFunction)) {\r\n                localStorage[myKey] = value;\r\n            } else {\r\n                var data;\r\n                if (this.opts.requestUsePascalCase) {\r\n                    data = $.extend($.toPascalKeys(this.opts.requestParams), {\r\n                        ItemsPerPage: this.itemsPerPage,\r\n                        CurrentStartItem: this.currentStartItem,\r\n                        SearchQuery: this.searchQuery,\r\n                        Width: this.width,\r\n                        Sorting: this.sorting,\r\n                        Columns: $.toPascalKeys($.map(this.opts.columns, function(c) { return { field: c.field, width: c.width * 1.0 }; }))\r\n                    });\r\n                } else {\r\n                    data = $.extend(this.opts.requestParams, {\r\n                        itemsPerPage: this.itemsPerPage,\r\n                        currentStartItem: this.currentStartItem,\r\n                        searchQuery: this.searchQuery,\r\n                        width: this.width,\r\n                        sorting: this.sorting,\r\n                        columns: $.map(this.opts.columns, function(c) { return { field: c.field, width: c.width * 1.0 }; })\r\n                    });\r\n                }\r\n\r\n                this.storeFunction.call(null, data);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Process the data array result from the ajax request.\r\n         * @param {Object[]} data - Array of records to display.\r\n         */\r\n        processData: function(data) {\r\n            if (this.opts.dataCallback) {\r\n                this.opts.dataCallback(data);\r\n            }\r\n\r\n            var i = 0, len = data.rows.length, j = 0;\r\n            for (; i < len; i++) {\r\n                // add an index to the data so we can reset to the default sort order later if the user wants\r\n                data.rows[i]._index = i;\r\n\r\n                var x;\r\n                // convert input to appropriate types\r\n                for (j = 0; j < this.intColumns.length; j++) {\r\n                    x = this.intColumns[j];\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : data.rows[i][x] * 1;\r\n                }\r\n                for (j = 0; j < this.dateColumns.length; j++) {\r\n                    x = this.dateColumns[j];\r\n                    // @todo switch to using flatpickr.parseDate and flatpickr.formatDate\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : $.fecha.parse(data.rows[i][x], this.opts.dataDateFormat);\r\n                }\r\n                for (j = 0; j < this.currencyColumns.length; j++) {\r\n                    x = this.currencyColumns[j];\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : $.accounting.unformat(data.rows[i][x]);\r\n                }\r\n            }\r\n            this.data = data.rows;\r\n            this.filteredTotal = data.filteredTotal;\r\n\r\n            this.loading = false;\r\n            this.sort(false);\r\n            this.filterResults();\r\n            // redraw is needed because $.ajax uses fetch which is async\r\n            m.redraw();\r\n        },\r\n\r\n        /**\r\n         * Load the data to populate the table.\r\n         */\r\n        loadData: function() {\r\n            this.loading = true;\r\n            this.loadingError = false;\r\n\r\n            var self = this;\r\n            $.ajax({\r\n                method: this.opts.requestMethod,\r\n                url: this.opts.url,\r\n                data: this.buildParams(),\r\n                block: false,\r\n                headers: {\r\n                    'Content-Type': 'application/jil; charset=utf-8',\r\n                    'Accept': 'application/jil'\r\n                }\r\n            }, this.processData.bind(this), function(data) {\r\n                self.loading = false;\r\n                self.loadingError = true;\r\n                if (self.opts.errorCallback) {\r\n                    self.opts.errorCallback(data);\r\n                }\r\n                // redraw is needed because $.ajax uses fetch which is async\r\n                m.redraw();\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Force the table to refresh its data.\r\n         */\r\n        refresh: function() {\r\n            this.loading = true;\r\n            this.loadingError = false;\r\n            this.loadData();\r\n        },\r\n\r\n        /**\r\n         * Build querystring params to fetch data from the server.\r\n         * @returns {Object} Request parameters.\r\n         */\r\n        buildParams: function() {\r\n            var sort = this.sorting.length > 0 ? $.map(this.sorting, function(obj, i) { return { field: obj.field, dir: obj.dir, index: i }; }) : null;\r\n            if (this.opts.requestUsePascalCase) {\r\n                return $.extend($.toPascalKeys(this.opts.requestParams), {\r\n                    StartItem: this.currentStartItem,\r\n                    Items: this.itemsPerPage,\r\n                    Query: this.searchQuery,\r\n                    Sort: $.toPascalKeys(sort)\r\n                });\r\n            }\r\n            return $.extend(this.opts.requestParams, {\r\n                startItem: this.currentStartItem,\r\n                items: this.itemsPerPage,\r\n                query: this.searchQuery,\r\n                sort: sort\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Set the first item index to display.\r\n         * @param {type} index - Record index to start on.\r\n         */\r\n        setCurrentStartItem: function(index) {\r\n            this.currentStartItem = index;\r\n            this.store('currentStartItem', index);\r\n            this.filterResults(true);\r\n        },\r\n\r\n        /**\r\n         * Set the number of items to display per page.\r\n         * @param {number|Event} e - Number or items per page, or an event that triggered the change.\r\n         */\r\n        setItemsPerPage: function(e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var items = (isNaN(e) ? e.target.value : e) * 1;\r\n            if (this.itemsPerPage !== items) {\r\n                this.itemsPerPage = items;\r\n                this.store('itemsPerPage', items);\r\n                this.setCurrentStartItem(0);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set the search query for filtering table data.\r\n         * @param {string} val - New search text.\r\n         */\r\n        setSearchQuery: function(val) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var query = val.target ? val.target.value : val;\r\n            if (this.searchQuery !== query) {\r\n                this.searchQuery = query;\r\n                this.runSearch(query);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change search query and filter results.\r\n         * @param {string} query - New search text.\r\n         */\r\n        runSearch: function(query) {\r\n            this.store('searchQuery', query);\r\n            this.requestTimer = null;\r\n            this.currentStartItem = 0;\r\n            this.filterResults(true);\r\n        },\r\n\r\n        /**\r\n         * Filter the data based on the search query, current page, and items per page.\r\n         * @param {bool} refresh - Force it to refresh its data.\r\n         */\r\n        filterResults: function(refresh) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            if (refresh && !this.opts.loadAllData) {\r\n                // force the data to reload. filterResults will get called again after the data loads\r\n                this.loadData();\r\n            } else if (!this.opts.loadAllData) {\r\n                // we're not loading all the data to begin with. so whatever data we have should be displayed.\r\n                this.results = this.data;\r\n                this.pageTotal = Math.ceil(this.filteredTotal / this.itemsPerPage);\r\n            } else {\r\n                // we're loading all the data to begin with. so figure out what data to display.\r\n                var filteredTotal = 0;\r\n                if (this.data.constructor !== Array) {\r\n                    this.loading = true;\r\n                    this.results = [];\r\n                } else {\r\n                    var startItem = this.currentStartItem;\r\n                    var res = this.searchQuery ? this.data.filter(this.filterArray.bind(this.searchQuery.toLowerCase())) : this.data;\r\n                    filteredTotal = res.length;\r\n                    this.results = res.slice(startItem, startItem + this.itemsPerPage);\r\n                }\r\n\r\n                this.filteredTotal = filteredTotal;\r\n                this.pageTotal = Math.ceil(filteredTotal / this.itemsPerPage);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Page forward or backward.\r\n         * @param {number} d - Direction to move, 1 is forward, -1 is backward.\r\n         * @param {number} m - Move to end (first or last page) if true.\r\n         */\r\n        moveToPage: function(d, m) {\r\n            this.changePage(d === 1 ? m ? this.pageTotal : this.currentStartItem / this.itemsPerPage + 2 : m ? 1 : this.currentStartItem / this.itemsPerPage);\r\n        },\r\n\r\n        /**\r\n         * Move to the specified page number.\r\n         * @param {number|Event} e - New page number, or an event that triggered the change.\r\n         */\r\n        changePage: function(e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var page = (isNaN(e) ? e.target.value : e) * 1;\r\n            if (page <= this.pageTotal && page > 0) {\r\n                this.setCurrentStartItem((page - 1) * this.itemsPerPage);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change the sorting order.\r\n         * @param {string} fieldName - Name of the field to sort on.\r\n         * @param {string} dataType - Data type of the field.\r\n         * @param {Event} e - Event that triggered the change.\r\n         */\r\n        changeSort: function(fieldName, dataType, e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var val = $.findByKey(this.sorting, 'field', fieldName);\r\n            if (e.shiftKey) {\r\n                document.getSelection().removeAllRanges();\r\n            } else {\r\n                this.sorting = [];\r\n            }\r\n\r\n            if (val === null) {\r\n                this.sorting.push({ field: fieldName, dir: 'ASC', dataType: dataType || 'string' });\r\n            } else if (e.shiftKey) {\r\n                if (val.dir === 'DESC') {\r\n                    this.sorting.splice(val._i, 1);\r\n                } else {\r\n                    val.dir = 'DESC';\r\n                    this.sorting[val._i] = val;\r\n                }\r\n            } else {\r\n                val.dir = val.dir === 'ASC' ? 'DESC' : 'ASC';\r\n                this.sorting.push(val);\r\n            }\r\n\r\n            this.sort();\r\n            this.setCurrentStartItem(0);\r\n        },\r\n\r\n        /**\r\n         * Sort the underlying data.\r\n         * @param {bool} refresh - Refresh the data from the server.\r\n         */\r\n        sort: function(refresh) {\r\n            refresh = $.coalesce(refresh, true);\r\n            this.data.sort(this.sorting.length > 0 ? this.compare.bind(this) : this.defaultCompare);\r\n            this.filterResults(refresh);\r\n            this.store('sorting', JSON.stringify(this.sorting));\r\n        },\r\n\r\n        /**\r\n         * Set up the table and column styles and events.\r\n         */\r\n        setLayout: function() {\r\n            if (this.layoutSet) {\r\n                return;\r\n            }\r\n\r\n            this.layoutSet = true;\r\n            this.table = $.get('.table-data', this.content);\r\n            this.table.style.tableLayout = 'fixed';\r\n            this.tableHeaderRow = this.table.tHead.rows[0];\r\n\r\n            if (this.table !== null) {\r\n                this.clientWidth = this.content.clientWidth;\r\n                this.table.tHead.style.width = this.table.style.width = (this.width / 100 * this.table.offsetWidth) + 'px';\r\n\r\n                var hWidth = this.table.tHead.offsetWidth;\r\n                var tWidth = this.table.offsetWidth;\r\n                var i = 0;\r\n                var cells = this.tableHeaderRow.cells;\r\n                $.forEach(this.opts.columns, function(x) {\r\n                    if (!x.width) {\r\n                        x.width = cells[i].offsetWidth / hWidth * 100;\r\n                    }\r\n                    cells[i].style.width = x.width / 100 * tWidth + 'px';\r\n                    ++i;\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update the table and column widths based on a window resize.\r\n         */\r\n        onResize: function() {\r\n            var cWidth = this.content.clientWidth;\r\n            if (cWidth === 0) {\r\n                return;\r\n            }\r\n            var scale = cWidth / this.clientWidth;\r\n            this.clientWidth = cWidth;\r\n            this.table.tHead.style.width = this.table.style.width = (this.pixelToFloat(this.table.style.width) * scale) + 'px';\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                this.tableHeaderRow.cells[i].style.width = (this.pixelToFloat(this.tableHeaderRow.cells[i].style.width) * scale) + 'px';\r\n            }\r\n            this.updateLayout();\r\n        },\r\n\r\n        /**\r\n         * Update the table header style.\r\n         */\r\n        updateLayout: function() {\r\n            if (!$.isVisible(this.table)) {\r\n                return;\r\n            }\r\n            $.get('.table-scrollable', this.content).style.paddingTop = this.table.tHead.offsetHeight + 'px';\r\n            var colGroup = $.get('.table-column-group', this.content);\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                colGroup.children[i].style.width = this.tableHeaderRow.cells[i].style.width;\r\n            }\r\n            if (this.clientWidth > 0 && this.content.clientWidth / this.clientWidth !== 1) {\r\n                this.onResize();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Make the table header scroll horizontally with the table\r\n         * @param {Event} e - Event that triggered the scroll.\r\n         */\r\n        onScroll: function(e) {\r\n            var head = this.table.tHead;\r\n            var scroll = e.target;\r\n            if (-head.offsetLeft !== scroll.scrollLeft) {\r\n                head.style.left = '-' + scroll.scrollLeft + 'px';\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handle dragging to change column widths.\r\n         * @param {type} e - Event that triggered the change.\r\n         */\r\n        onHeaderMouseDown: function(e) {\r\n            if (e.button !== 0) {\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            var callbackFunc = function(cellEl) {\r\n                e.stopImmediatePropagation();\r\n                e.preventDefault();\r\n\r\n                self.resizeContext = {\r\n                    colIndex: cellEl.cellIndex,\r\n                    initX: e.clientX,\r\n                    scrWidth: $.get('.table-scrollable', self.content).offsetWidth,\r\n                    initTblWidth: self.table.offsetWidth,\r\n                    initColWidth: self.pixelToFloat($.get('.table-column-group', self.content).children[cellEl.cellIndex].style.width),\r\n                    layoutTimer: null\r\n                };\r\n            };\r\n            self.inResizeArea(e, callbackFunc);\r\n        },\r\n\r\n        /**\r\n         * Handle resizing columns.\r\n         * @param {Event} e - Event that triggered the change.\r\n         */\r\n        onMouseMove: function(e) {\r\n            var newStyle = '';\r\n            var cursorFunc = function() {\r\n                newStyle = 'col-resize';\r\n            };\r\n            this.inResizeArea(e, cursorFunc);\r\n            if (this.table.tHead.style.cursor !== newStyle) {\r\n                this.table.tHead.style.cursor = newStyle;\r\n            }\r\n\r\n            var ctx = this.resizeContext;\r\n            if ($.isNull(ctx)) {\r\n                return;\r\n            }\r\n\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n\r\n            var newColWidth = Math.max(ctx.initColWidth + e.clientX - ctx.initX, this.opts.columnMinWidth);\r\n            this.table.tHead.style.width = this.table.style.width = (ctx.initTblWidth + (newColWidth - ctx.initColWidth)) + 'px';\r\n            $.get('.table-column-group', this.content).children[ctx.colIndex].style.width = this.tableHeaderRow.cells[ctx.colIndex].style.width = newColWidth + 'px';\r\n\r\n            if (ctx.layoutTimer === null) {\r\n                var self = this;\r\n                var timerFunc = function() {\r\n                    self.resizeContext.layoutTimer = null;\r\n                    self.updateLayout();\r\n                };\r\n                ctx.layoutTimer = setTimeout(timerFunc, 25);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update column widths and save them.\r\n         */\r\n        onMouseUp: function() {\r\n            var ctx = this.resizeContext;\r\n            if ($.isNull(ctx)) {\r\n                return;\r\n            }\r\n\r\n            if (ctx.layoutTimer !== null) {\r\n                clearTimeout(ctx.layoutTimer);\r\n            }\r\n            this.resizeContext = null;\r\n\r\n            var newTblWidth = this.table.offsetWidth;\r\n            this.width = (newTblWidth / ctx.scrWidth * 100).toFixed(2);\r\n            this.store('width', this.width);\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                this.opts.columns[i].width = (this.pixelToFloat(this.tableHeaderRow.cells[i].style.width) / newTblWidth * 100).toFixed(2);\r\n                this.store(this.opts.columns[i].field + '.width', this.opts.columns[i].width);\r\n            }\r\n\r\n            this.updateLayout();\r\n        },\r\n\r\n        /**\r\n         * Check if the cursor is in the area where the user can click to drag a column.\r\n         * @param {Event} e - Event that triggered the check.\r\n         * @param {Function} callback - Function to run if in the resize area.\r\n         */\r\n        inResizeArea: function(e, callback) {\r\n            var tblX = e.clientX;\r\n            var el;\r\n            for (el = this.table.tHead; el !== null; el = el.offsetParent) {\r\n                tblX -= el.offsetLeft + el.clientLeft - el.scrollLeft;\r\n            }\r\n\r\n            var cellEl = e.target;\r\n            while (cellEl !== this.table.tHead && cellEl !== null) {\r\n                if (cellEl.nodeName === 'TH') {\r\n                    break;\r\n                }\r\n                cellEl = cellEl.parentNode;\r\n            }\r\n\r\n            if (cellEl === this.table.tHead) {\r\n                for (var i = this.tableHeaderRow.cells.length - 1; i >= 0; i--) {\r\n                    cellEl = this.tableHeaderRow.cells[i];\r\n                    if (cellEl.offsetLeft <= tblX) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (cellEl !== null) {\r\n                var x = tblX;\r\n                for (el = cellEl; el !== this.table.tHead; el = el.offsetParent) {\r\n                    if (el === null) {\r\n                        break;\r\n                    }\r\n                    x -= el.offsetLeft - el.scrollLeft + el.clientLeft;\r\n                }\r\n                if (x < 10 && cellEl.cellIndex !== 0) {\r\n                    callback.call(this, cellEl.previousElementSibling);\r\n                } else if (x > cellEl.clientWidth - 10) {\r\n                    callback.call(this, cellEl);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Make column resizing play nice with touch. \r\n         * http://stackoverflow.com/questions/28218888/touch-event-handler-overrides-click-handlers\r\n         * @param {Event} e Event that triggered the handler.\r\n         */\r\n        touchHandler: function(e) {\r\n            var mouseEvent = null;\r\n            var simulatedEvent = document.createEvent('MouseEvent');\r\n            var touch = e.changedTouches[0];\r\n\r\n            switch (e.type) {\r\n                case 'touchstart':\r\n                    mouseEvent = 'mousedown';\r\n                    this.totalDistance = 0;\r\n                    this.lastSeenAt.x = touch.clientX;\r\n                    this.lastSeenAt.y = touch.clientY;\r\n                    break;\r\n                case 'touchmove':\r\n                    mouseEvent = 'mousemove';\r\n                    break;\r\n                case 'touchend':\r\n                    if (this.lastSeenAt.x) {\r\n                        this.totalDistance += Math.sqrt(Math.pow(this.lastSeenAt.y - touch.clientY, 2) + Math.pow(this.lastSeenAt.x - touch.clientX, 2));\r\n                    }\r\n                    mouseEvent = this.totalDistance > 5 ? 'mouseup' : 'click';\r\n                    this.lastSeenAt = { x: null, y: null };\r\n                    break;\r\n            }\r\n\r\n            simulatedEvent.initMouseEvent(mouseEvent, true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);\r\n            $.dispatch(touch.target, simulatedEvent);\r\n            e.preventDefault();\r\n        },\r\n\r\n        /**\r\n         * Get the value for the field coverted to the correct data type.\r\n         * @param {string} value - Value to convert.\r\n         * @returns {*} Converted value.\r\n         */\r\n        getFieldValue: function(value) {\r\n            if ($.isNull(value)) {\r\n                return null;\r\n            }\r\n            return value.getMonth ? value : value.toLowerCase ? value.toLowerCase() : value;\r\n        },\r\n\r\n        /**\r\n         * Get the formatted value to display for the field.\r\n         * @param {string} value - Value to format.\r\n         * @param {string} dataType - Data type to format to.\r\n         * @returns {*} Converted value.\r\n         */\r\n        getDisplayValue: function(value, dataType) {\r\n            if (!dataType || $.isNull(value)) {\r\n                return value;\r\n            }\r\n\r\n            var val = value;\r\n            if (dataType === 'currency') {\r\n                val = $.accounting.formatMoney(val, this.opts.displayCurrencyFormat);\r\n            } else if (dataType === 'date') {\r\n                val = $.fecha.format(val, this.opts.displayDateFormat);\r\n            }\r\n            return val;\r\n        },\r\n\r\n        /**\r\n         * Default sorting function for the data - resets to order when data was loaded.\r\n         * @param {Object} a - First object to compare.\r\n         * @param {Object} b - Object to compare to.\r\n         * @returns {number} 1 if a comes first, -1 if b comes first, else 0.\r\n         */\r\n        defaultCompare: function(a, b) {\r\n            return a._index > b._index ? 1 : a._index < b._index ? -1 : 0;\r\n        },\r\n\r\n        /**\r\n         * Multi-sorting function for the data.\r\n         * @param {Object} a - First object to compare.\r\n         * @param {Object} b - Object to compare to.\r\n         * @returns {number} 1 if a comes first, -1 if b comes first, else 0.\r\n         */\r\n        compare: function(a, b) {\r\n            var sorting = this.sorting;\r\n            var i = 0, len = sorting.length;\r\n            for (; i < len; i++) {\r\n                var sort = sorting[i];\r\n                var aa = this.getFieldValue(a[sort.field]);\r\n                var bb = this.getFieldValue(b[sort.field]);\r\n\r\n                if (aa === null) {\r\n                    return 1;\r\n                }\r\n                if (bb === null) {\r\n                    return -1;\r\n                }\r\n                if (aa < bb) {\r\n                    return sort.dir === 'ASC' ? -1 : 1;\r\n                }\r\n                if (aa > bb) {\r\n                    return sort.dir === 'ASC' ? 1 : -1;\r\n                }\r\n            }\r\n            return 0;\r\n        },\r\n\r\n        /**\r\n         * Filter an array of objects to find objects where value contains the value of `this`\r\n         * @param {Object} obj - Object to search in.\r\n         * @returns {bool} True if object contains `this`.\r\n         */\r\n        filterArray: function(obj) {\r\n            for (var key in obj) {\r\n                if (key.indexOf('_') < 0 && obj.hasOwnProperty(key) && (obj[key] + '').toLowerCase().indexOf(this) > -1) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Convert a style with 'px' to a float.\r\n         * @param {string} val - CSS style to convert.\r\n         * @returns {number} Numeric value.\r\n         */\r\n        pixelToFloat: function(val) {\r\n            return val.replace('px', '').replace('%', '') * 1.0;\r\n        },\r\n\r\n        /**\r\n         * Build the table header tags.\r\n         * @param {Object} obj - Column to build the tag for.\r\n         * @returns {Object} Mithril TH node.\r\n         */\r\n        tableHeaders: function(obj) {\r\n            var field = obj.field;\r\n            var attrs = { class: obj.classes || '' };\r\n\r\n            var content = [obj.label || field];\r\n            if ($.isUndefined(obj.sortable) || obj.sortable === true) {\r\n                var val = $.findByKey(this.sorting, 'field', field);\r\n                var arrowAttrs = {\r\n                    class: val ? (val.dir === 'ASC' ? 'dash-sort-up' : 'dash-sort-down') : this.opts.editable ? 'dash-sort' : ''\r\n                };\r\n                if (this.opts.editable) {\r\n                    arrowAttrs.onclick = this.changeSort.bind(this, field, obj.dataType.toLowerCase());\r\n                }\r\n                content.push(m('i.float-right.dash.data-table-arrow', arrowAttrs));\r\n            } else {\r\n                attrs.class += ' disabled';\r\n            }\r\n            if (this.opts.editable) {\r\n                attrs.onmousedown = this.onHeaderMouseDown.bind(this);\r\n            }\r\n            return m('th.text-no-select', attrs, content);\r\n        },\r\n\r\n        /**\r\n         * Build the view that actually shows the table.\r\n         * @returns {Object}  Mithril DIV node.\r\n         */\r\n        view: function() {\r\n            return m('.dash-table',\r\n                {\r\n                    ontableRefresh: this.refresh.bind(this),\r\n                    ontableDestroy: this.destroy.bind(this),\r\n                    onlayoutUpdate: this.updateLayout.bind(this),\r\n                    'data-unload-event': 'tableUnload',\r\n                    'data-toggle': 'table'\r\n                }, [\r\n                    !this.opts.editable ? m('span#table-items-per-page') :\r\n                        m('.container',\r\n                            m('.columns.form-horizontal.m-2', [\r\n                                m('.col-6',\r\n                                    this.opts.searchable ? m('.input-group.col-8.col-mr-auto', [\r\n                                        m('span.input-group-addon.text-no-select', m('i.dash.dash-search')),\r\n                                        m('input.form-input', { type: 'text', oninput: this.setSearchQuery.bind(this), value: this.searchQuery, disabled: this.loading })\r\n                                    ]) : null\r\n                                ),\r\n                                m('.col-6',\r\n                                    m('.input-group.col-8.col-ml-auto', [\r\n                                        m('span.input-group-addon.text-no-select', this.opts.resources.perPage),\r\n                                        m('select.form-select', {\r\n                                            id: 'table-items-per-page', onchange: this.setItemsPerPage.bind(this),\r\n                                            value: this.itemsPerPage, disabled: this.loading\r\n                                        }, this.pageOptions)\r\n                                    ])\r\n                                )\r\n                            ])\r\n                        ),\r\n                    m('.table-scrollable', { class: this.opts.editable ? '' : ' table-no-edit' }, [\r\n                        m('.table-area', { onscroll: this.onScroll.bind(this) }, [\r\n                            m('table.table.table-hover.table-sm.table-striped.table-data', [\r\n                                m('colgroup.table-column-group', this.colGroups),\r\n                                m('thead', {\r\n                                    ontouchstart: this.touchHandler.bind(this),\r\n                                    ontouchend: this.touchHandler.bind(this),\r\n                                    ontouchmove: this.touchHandler.bind(this),\r\n                                    ontouchcancel: this.touchHandler.bind(this)\r\n                                }, [m('tr', $.map(this.opts.columns, this.tableHeaders, this))]),\r\n                                m('tbody', this.tableBodyView())\r\n                            ])\r\n                        ])\r\n                    ]),\r\n                    this.tableFooterView()\r\n                ]);\r\n        },\r\n\r\n        /**\r\n         * Build a single table cell.\r\n         * @param {Object} obj - Table record to build cell for.\r\n         * @param {number} index - Row index of this row.\r\n         * @param {Object} column - Column to build cell for.\r\n         * @returns {Object} Mithril TD node.\r\n         */\r\n        tableCellView: function(obj, index, column) {\r\n            return m('td', this.columnRenderer[column.field](obj, column, index));\r\n        },\r\n\r\n        /**\r\n         * Build the table footer nodes\r\n         * @returns {Object} Mithril TR node(s).\r\n         */\r\n        tableBodyView: function() {\r\n            if (this.loading) {\r\n                return m('tr', m('td', { colspan: this.opts.columns.length }, m('.loading.loading-lg')));\r\n            }\r\n            if (this.loadingError) {\r\n                return m('tr.table-loading-error', m('td', { colspan: this.opts.columns.length }, [\r\n                    m('.table-loading-error-message', this.opts.resources.loadingError),\r\n                    m('.btn.btn-info', { onclick: this.refresh.bind(this) }, this.opts.resources.tryAgain)\r\n                ]));\r\n            }\r\n            if (this.filteredTotal === 0) {\r\n                return m('tr', [m('td', { colspan: this.opts.columns.length }, this.opts.resources.noData)]);\r\n            }\r\n            var self = this;\r\n            return $.map(self.results, function(row, index) {\r\n                return m('tr', { key: row._index }, $.map(self.opts.columns, function(column) {\r\n                    return m('td', self.columnRenderer[column.field](row, column, index));\r\n                }));\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Build the table footer nodes.\r\n         * @returns {Object} Mithril DIV node.\r\n         */\r\n        tableFooterView: function() {\r\n            if (this.loading || this.loadingError) {\r\n                return null;\r\n            }\r\n\r\n            var currentPage = (this.currentStartItem + this.itemsPerPage) / this.itemsPerPage;\r\n            if (this.opts.pageDropdown) {\r\n                // limit page dropdown to 10000 options\r\n                var max = Math.min(this.pageTotal, 10000);\r\n                var optionList = [max], i = max;\r\n                while (i > 0) {\r\n                    optionList[i] = m('option', { value: i }, i);\r\n                    --i;\r\n                }\r\n            }\r\n\r\n            var res = this.opts.resources;\r\n            return m('.container', m('.columns.m-2', [\r\n                m('.col-4.btn-toolbar', { class: this.filteredTotal > this.itemsPerPage ? '' : ' invisible' }, [\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.firstPage, onclick: this.moveToPage.bind(this, -1, true)\r\n                    }, m('i.dash.dash-to-start-alt.text-primary')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.previousPage, onclick: this.moveToPage.bind(this, -1, false)\r\n                    }, m('i.dash.dash-to-start.text-primary')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.nextPage, onclick: this.moveToPage.bind(this, 1, false)\r\n                    }, m('i.dash.dash-to-end.text-primary')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.lastPage, onclick: this.moveToPage.bind(this, 1, true)\r\n                    }, m('i.dash.dash-to-end-alt.text-primary'))\r\n                ]),\r\n                m('.col-4', { class: this.filteredTotal > this.itemsPerPage ? '' : ' invisible' },\r\n                    !this.opts.pageDropdown ? null : m('.input-group.col-8.col-mx-auto', [\r\n                        m('span.input-group-addon.text-no-select', res.page),\r\n                        m('select.form-select', { onchange: this.changePage.bind(this), value: currentPage, disabled: this.pageTotal === 0 }, optionList)\r\n                    ])\r\n                ),\r\n                m('.col-4.text-right.my-auto', res.showing\r\n                    .replace('{0}', Math.min(this.currentStartItem + 1, this.filteredTotal))\r\n                    .replace('{1}', Math.min(this.currentStartItem + this.itemsPerPage, this.filteredTotal))\r\n                    .replace('{2}', this.filteredTotal)\r\n                )\r\n            ]));\r\n        },\r\n\r\n        destroy: function() {\r\n            if (this.opts.editable) {\r\n                $.off(window, 'resize', this.events.resize);\r\n                $.off(window, 'mousemove', this.events.move);\r\n                $.off(window, 'mouseup', this.events.up);\r\n            }\r\n        },\r\n\r\n        oninit: function(vnode) {\r\n            var opts = vnode.attrs || {};\r\n\r\n            var data = null;\r\n            if (opts.data) {\r\n                data = opts.data;\r\n                delete opts.data;\r\n            }\r\n\r\n            this.opts = $.extend({\r\n                content: null,\r\n                id: null,\r\n                columns: [],\r\n                url: '',\r\n                requestMethod: 'GET',\r\n                requestUsePascalCase: true,\r\n                requestParams: {},\r\n                searchable: true,\r\n                loadAllData: true,\r\n                columnMinWidth: 50,\r\n                width: 100,\r\n                editable: true,\r\n                pageDropdown: true,\r\n                storeSettings: true,\r\n                storeUrl: null,\r\n                storeRequestMethod: 'PUT',\r\n                itemsPerPage: null,\r\n                searchQuery: null,\r\n                currentStartItem: null,\r\n                sorting: null,\r\n                dataCallback: null,\r\n                errorCallback: null,\r\n                dataDateFormat: 'YYYY-MM-DD HH:mm:ss',\r\n                displayDateFormat: 'YYYY-MM-DD HH:mm',\r\n                displayCurrencyFormat: '{s:$} {[t:,][d:.][p:2]}',\r\n                resources: {\r\n                    firstPage: $.resx('firstPage'),\r\n                    previousPage: $.resx('previousPage'),\r\n                    nextPage: $.resx('nextPage'),\r\n                    lastPage: $.resx('lastPage'),\r\n                    noData: $.resx('noData'),\r\n                    showing: $.resx('showing'),\r\n                    page: $.resx('page') || 'Page',\r\n                    perPage: $.resx('perPage'),\r\n                    loadingError: $.resx('loadingError'),\r\n                    tryAgain: $.resx('tryAgain')\r\n                }\r\n            }, opts);\r\n\r\n            this.layoutSet = false;\r\n            this.data = null;\r\n            this.loading = true;\r\n            this.loadingError = false;\r\n            this.filteredTotal = 0;\r\n            this.results = [];\r\n            this.pageTotal = 0;\r\n            this.totalDistance = 0;\r\n            this.lastSeenAt = { x: null, y: null };\r\n            this.columnRenderer = {};\r\n            this.colGroups = [];\r\n            this.intColumns = [];\r\n            this.dateColumns = [];\r\n            this.currencyColumns = [];\r\n\r\n\r\n            this.storeFunction = null;\r\n            if (this.opts.storeUrl) {\r\n                var storeUrl = this.opts.storeUrl;\r\n                var storeRequestMethod = this.opts.storeRequestMethod;\r\n                this.storeFunction = $.debounce(function(data) {\r\n                    $.ajax({\r\n                        url: storeUrl,\r\n                        method: storeRequestMethod,\r\n                        data: data\r\n                    });\r\n                }, 250);\r\n            }\r\n\r\n            var self = this;\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                var column = this.opts.columns[i];\r\n                column.width = $.hasPositiveValue(column.width) ? column.width : this.store(column.field + '.width');\r\n                if (!($.isNull(column.links) || column.links.length === 0)) {\r\n                    column.links = column.links.filter(function(link) {\r\n                        return !$.isNull(link);\r\n                    });\r\n                }\r\n\r\n                this.columnRenderer[column.field] = $.isNull(column.links) || column.links.length === 0 ?\r\n                    function(obj, column) { return self.getDisplayValue(obj[column.field], column.dataType.toLowerCase()); } :\r\n                    function(obj, column) {\r\n                        return $.map(column.links, function(link) {\r\n                            if (link.jsonLogic && !$.jsonLogic.apply(link.jsonLogic, obj)) {\r\n                                return null;\r\n                            }\r\n                            var label = $.coalesce(link.label, self.getDisplayValue(obj[column.field], column.dataType.toLowerCase()));\r\n                            var attr = $.clone(link.attributes) || {};\r\n                            var href = link.href || null;\r\n                            if (href) {\r\n                                for (var prop in obj) {\r\n                                    if (href.indexOf('{' + prop + '}') > -1 && obj.hasOwnProperty(prop)) {\r\n                                        href = href.replace(new RegExp('{' + prop + '}', 'g'), obj[prop]);\r\n                                    }\r\n                                }\r\n                            }\r\n                            var classes = (attr['class'] || '').split(' ');\r\n                            var isBtn = classes.indexOf('btn') !== -1;\r\n                            if (isBtn) {\r\n                                attr['type'] = attr['role'] = 'button';\r\n                            } else {\r\n                                classes.push('btn');\r\n                                classes.push('btn-link');\r\n                            }\r\n                            attr['class'] = classes.filter(function(x) { return x && x.length; }).join(' ');\r\n                            attr['title'] = label;\r\n                            if (attr['target']) {\r\n                                attr['href'] = href;\r\n                            } else {\r\n                                attr['data-method'] = link.method ? link.method.toUpperCase() : 'GET';\r\n                                attr['data-href'] = href;\r\n                                attr['onclick'] = function() {\r\n                                    var node = this.getAttribute('data-href') ? this : this.parentNode;\r\n                                    var options = {\r\n                                        url: node.getAttribute('data-href'), method: node.getAttribute('data-method')\r\n                                    };\r\n                                    if (node.getAttribute('data-confirm')) {\r\n                                        options.history = false;\r\n                                        Alertify.dismissAll();\r\n                                        Alertify.confirm(node.getAttribute('data-confirm'), pjax.invoke.bind(null, options));\r\n                                    } else if (node.getAttribute('data-prompt')) {\r\n                                        options.history = false;\r\n                                        Alertify.dismissAll();\r\n                                        Alertify.prompt(node.getAttribute('data-prompt'), function(promptValue) {\r\n                                            if (!$.hasValue(promptValue)) {\r\n                                                Alertify.error($.resx('errorNameRequired'));\r\n                                                return false;\r\n                                            }\r\n                                            options.url += ((!/[?&]/.test(options.url)) ? '?prompt' : '&prompt') + '=' + encodeURIComponent(promptValue);\r\n                                            pjax.invoke(options);\r\n                                        });\r\n                                    } else {\r\n                                        options.history = node.getAttribute('data-method') === 'GET';\r\n                                        pjax.invoke(options);\r\n                                    }\r\n                                };\r\n                            }\r\n                            return m(isBtn ? 'button' : 'a', attr, $.isNull(link.icon) ? label : m('i', { class: 'dash dash-' + link.icon.toLowerCase() }));\r\n                        });\r\n                    };\r\n\r\n                this.colGroups.push(m('col'));\r\n\r\n                var type = column.dataType.toLowerCase();\r\n                if (type === 'int') {\r\n                    this.intColumns.push(column.field);\r\n                } else if (type === 'date') {\r\n                    this.dateColumns.push(column.field);\r\n                } else if (type === 'currency') {\r\n                    this.currencyColumns.push(column.field);\r\n                }\r\n            }\r\n\r\n            this.itemsPerPage = this.store('itemsPerPage') * 1 || 10;\r\n            this.currentStartItem = this.store('currentStartItem') * 1 || 0;\r\n            this.searchQuery = this.store('searchQuery') || '';\r\n            this.width = this.store('width') * 1 || 100;\r\n            var sorting = this.store('sorting');\r\n            this.sorting = (typeof sorting === 'string' ? JSON.parse(sorting) : sorting) || [];\r\n\r\n            if (data) {\r\n                this.processData({ rows: data });\r\n            } else {\r\n                this.loadData();\r\n            }\r\n        },\r\n\r\n        oncreate: function(vnode) {\r\n            this.content = vnode.dom;\r\n            if (this.opts.editable) {\r\n                this.events = {\r\n                    resize: $.debounce(this.onResize.bind(this), 50),\r\n                    move: this.onMouseMove.bind(this),\r\n                    up: this.onMouseUp.bind(this)\r\n                };\r\n                $.on(window, 'resize', this.events.resize);\r\n                $.on(window, 'mousemove', this.events.move);\r\n                $.on(window, 'mouseup', this.events.up);\r\n            }\r\n\r\n            this.setLayout();\r\n            this.updateLayout();\r\n        },\r\n\r\n        onupdate: function() {\r\n            this.updateLayout();\r\n        }\r\n    };\r\n\r\n    return Table;\r\n});\r\n","/*!\r\n * Wraps functionality needed to display a dashboard widget.\r\n */\r\n(function(root, factory) {\r\n    root.Widget = factory(root.m, root.$, root.Alertify, root.Table, root.DashChart, root.Draggabilly, root.Rect);\r\n})(this, function(m, $, Alertify, Table, DashChart, Draggabilly, Rect) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Use object properties to make class list for a widget container.\r\n     * @param {Object} obj - Widget properties.\r\n     * @returns {string} CSS class list.\r\n     */\r\n    var buildClassList = function(obj) {\r\n        return 'grid-item grid-item-width-' + obj.width + ' grid-item-height-' + obj.height +\r\n            ' grid-item-x-' + obj.x + ' grid-item-y-' + obj.y;\r\n    };\r\n\r\n    /**\r\n     * Declare Widget class.\r\n     * @param {Object} opts - Widget settings\r\n     */\r\n    var Widget = function(opts) {\r\n        this.init(opts);\r\n\r\n        // attach this to the container for reference in the dashboard\r\n        var container = this.getContainer();\r\n        container.widget = this;\r\n    };\r\n\r\n    Widget.prototype = {\r\n        /**\r\n         * Initialize the widget.\r\n         * @param {Object} opts - Widget settings\r\n         */\r\n        init: function(opts) {\r\n            opts.isData = $.coalesce(opts.isData, true);\r\n            opts.refreshSeconds = $.coalesce(opts.refreshSeconds, 0);\r\n            opts.baseUrl = $.get('body').getAttribute('data-base-url');\r\n            this.opts = opts;\r\n\r\n            this.id = opts.id;\r\n            this.chart = null;\r\n            this.interval = null;\r\n            this.isFullscreen = false;\r\n            this.initDate = new Date();\r\n            this.dragMargin = 0;\r\n\r\n            if (opts.isData) {\r\n                this.tableOpts = {\r\n                    id: 'widgetTable_' + opts.id,\r\n                    url: opts.url,\r\n                    requestMethod: 'POST',\r\n                    requestParams: { Id: opts.reportId },\r\n                    loadAllData: false,\r\n                    editable: false,\r\n                    itemsPerPage: opts.reportRowLimit || 10,\r\n                    currentStartItem: 0,\r\n                    sorting: opts.sortColumns,\r\n                    storageFunction: $.noop,\r\n                    width: Math.max(opts.reportWidth || 100, 100),\r\n                    columns: opts.columns,\r\n                    dataCallback: this.processJson.bind(this),\r\n                    errorCallback: this.onError.bind(this),\r\n                    displayDateFormat: opts.displayDateFormat,\r\n                    displayCurrencyFormat: opts.displayCurrencyFormat\r\n                };\r\n            }\r\n\r\n            this.render();\r\n\r\n            var container = this.getContainer();\r\n            this.rect = new Rect(opts.width, opts.height, opts.x, opts.y);\r\n            this.setupDraggie(container);\r\n\r\n            if (!opts.isData) {\r\n                this.chart = new DashChart($.get('.widget-chart', container), false, this.processJson.bind(this), this.onError.bind(this));\r\n            }\r\n            if (opts.refreshSeconds > 0) {\r\n                this.interval = setInterval(this.refresh.bind(this), opts.refreshSeconds * 1000);\r\n            }\r\n\r\n            if (opts.title) {\r\n                $.setText($.get('.grid-title', container), opts.title);\r\n            }\r\n        },\r\n\r\n        render: function() {\r\n            var parentNode = $.get('#widget_' + this.opts.id);\r\n\r\n            var self = this;\r\n            if (this.opts.isData) {\r\n                var tableNode = $.get('.widget-data', parentNode);\r\n                if (tableNode) {\r\n                    m.mount(tableNode, {\r\n                        view: function() {\r\n                            return m(Table, self.tableOpts);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            // add our system wide events\r\n            //$.content.processContent($.get('#widget_' + this.opts.id));\r\n\r\n            // maybe simpler?\r\n            // $.on(parentNode, 'dashboardUnload', self.destroy.bind(self));\r\n\r\n            $.on($.get('.btn-refresh', parentNode), 'click', self.forceRefresh.bind(self));\r\n            $.on($.get('.btn-fullscreen', parentNode), 'click', self.toggleFullScreen.bind(self));\r\n        },\r\n\r\n        /**\r\n         * Get the container element for the widget.\r\n         * @returns {Node} DOM node that contains the widget content.\r\n         */\r\n        getContainer: function() {\r\n            return $.get('#widget_' + this.opts.id);\r\n        },\r\n\r\n        /**\r\n         * Add the draggabilly handlers.\r\n         * @param {Node} container - DOM node that contains the widget content.\r\n         * @param {Object} grid - Object that contains the grid columnWidth and rowHeight.\r\n         */\r\n        setupDraggie: function(container, grid) {\r\n            container = $.coalesce(container, this.getContainer());\r\n            var g = this.opts.grid = $.coalesce(grid, this.opts.grid);\r\n\r\n            $.destroy(this.moveDraggie);\r\n            this.moveDraggie = new Draggabilly(container, { handle: '.drag-handle', grid: [g.columnWidth, g.rowHeight], minZero: true }).on('dragEnd', this.stopDrag.bind(this));\r\n\r\n            $.destroy(this.resizeDraggie);\r\n            var handle = $.get('.resizable-handle', container);\r\n            this.resizeDraggie = new Draggabilly(handle, { grid: [g.columnWidth, g.rowHeight] }).on('dragStart', this.initResize.bind(this)).on('dragEnd', this.stopResize.bind(this));\r\n\r\n            var style = handle.currentStyle || window.getComputedStyle(handle);\r\n            this.dragMargin = style.marginRight.replace('px', '') * 1;\r\n        },\r\n\r\n        /**\r\n         * Stop dragging the widget and updates its location.\r\n         */\r\n        stopDrag: function() {\r\n            var x = Math.max(Math.round(this.moveDraggie.position.x / this.opts.grid.columnWidth), 0);\r\n            var y = Math.max(Math.round(this.moveDraggie.position.y / this.opts.grid.rowHeight), 0);\r\n            if (x + this.rect.width > this.opts.grid.columns) {\r\n                x = this.opts.grid.columns - this.rect.width;\r\n            }\r\n            if (y + this.rect.height > this.opts.grid.rows) {\r\n                y = this.opts.grid.rows - this.rect.height;\r\n            }\r\n            this.setLocation(x, y);\r\n            this.rect.updated = true;\r\n            this.opts.layoutCallback();\r\n        },\r\n\r\n        /**\r\n         * Start resizing a widget\r\n         * @param {Event} event - Original mousedown or touchstart event\r\n         */\r\n        initResize: function(event) {\r\n            // clear any selection so browser doesn't think we are dragging the selection\r\n            window.getSelection().removeAllRanges();\r\n\r\n            var container = this.getContainer();\r\n            container.style['z-index'] = 9999;\r\n            var pos = event.changedTouches ? event.changedTouches[0] : event;\r\n            this.x = pos.clientX;\r\n            this.y = pos.clientY;\r\n\r\n            var styles = document.defaultView.getComputedStyle(container);\r\n            this.width = styles.width.replace('px', '') * 1;\r\n            this.height = styles.height.replace('px', '') * 1;\r\n\r\n            if (event.target !== event.currentTarget) {\r\n                event.stopPropagation();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update the widget after the user finishes resizing.\r\n         */\r\n        stopResize: function() {\r\n            var container = this.getContainer();\r\n            var w = Math.max(this.width + this.resizeDraggie.position.x + this.dragMargin, this.opts.grid.columnWidth * 4);\r\n            var h = Math.max(this.height + this.resizeDraggie.position.y, this.opts.grid.rowHeight * 4);\r\n\r\n            this.setSize(Math.min(Math.round(w / this.opts.grid.columnWidth), this.opts.grid.columns), Math.min(Math.round(h / this.opts.grid.rowHeight), this.opts.grid.rows));\r\n\r\n            var handle = $.get('.resizable-handle', container);\r\n            if (handle) {\r\n                handle.removeAttribute('style');\r\n            }\r\n\r\n            this.opts.layoutCallback();\r\n            this.updateLayout();\r\n            this.rect.updated = true;\r\n        },\r\n\r\n        /**\r\n         * Handle the result of a query for report data.\r\n         * @param {Object} json - Data to display in the widget.\r\n         * @returns {bool} True if the json data is valid\r\n         */\r\n        processJson: function(json) {\r\n            if (json.updatedDate && this.initDate) {\r\n                var updateDate = new Date(json.updatedDate);\r\n                if (updateDate && updateDate > this.initDate) {\r\n                    this.reload();\r\n                    return false;\r\n                }\r\n            }\r\n            if ((this.opts.isData && $.isNull(json.rows)) || (!this.opts.isData && ($.isNull(json.ranges) || json.ranges.length === 0))) {\r\n                Alertify.error($.resx('errorConnectingToDataSource'));\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Reload the widget options and reinitialize.\r\n         * @param {bool} showMsg - If true show the widget reloaded message to the user.\r\n         * @param {Object} options - Options to use to reload the widget instead of requesting from the server.\r\n         */\r\n        reload: function(showMsg, options) {\r\n            var callback = function(opts) {\r\n                this.destroy(false);\r\n                this.init($.extend(this.opts, opts));\r\n                if ($.coalesce(showMsg, true)) {\r\n                    Alertify.success($.resx('widgetReloaded').replace('{0}', this.opts.title));\r\n                }\r\n                return;\r\n            };\r\n\r\n            if (!$.isNull(options)) {\r\n                callback.call(this, options);\r\n            } else {\r\n                $.ajax({\r\n                    method: 'GET', url: this.opts.baseUrl + 'Dashboard/WidgetOptions/' + this.opts.id,\r\n                    headers: {\r\n                        'Content-Type': 'application/jil; charset=utf-8',\r\n                        'Accept': 'application/jil'\r\n                    }\r\n                }, callback.bind(this));\r\n            }\r\n        },\r\n\r\n        refresh: function() {\r\n            if (this.opts.isData) {\r\n                $.dispatch($.get('[data-toggle=\"table\"]', this.getContainer()), $.events.tableRefresh);\r\n            } else {\r\n                this.chart.run();\r\n            }\r\n            $.setText($.get('.grid-updated-time', this.getContainer()), new Date().toLocaleTimeString());\r\n        },\r\n\r\n        updateLayout: function() {\r\n            if (this.opts.isData) {\r\n                $.dispatch($.get('[data-toggle=\"table\"]', this.getContainer()), $.events.layoutUpdate);\r\n            } else {\r\n                this.chart.resize();\r\n            }\r\n        },\r\n\r\n        forceRefresh: function() {\r\n            if (this.opts.refreshSeconds > 0) {\r\n                clearInterval(this.interval);\r\n                this.interval = setInterval(this.refresh.bind(this), this.opts.refreshSeconds * 1000);\r\n            }\r\n            this.refresh();\r\n        },\r\n\r\n        /**\r\n         * Refresh the style based on the dimensions.\r\n         * @param {number} width - New width of the widget.\r\n         * @param {number} height - New height of the widget.\r\n         */\r\n        setSize: function(width, height) {\r\n            this.rect.width = width;\r\n            this.rect.height = height;\r\n            this.updateStyle();\r\n        },\r\n\r\n        /**\r\n         * Refresh the style based on the dimensions.\r\n         * @param {number} x - New x coordinate of the widget.\r\n         * @param {number} y - New y coordinate of the widget.\r\n         */\r\n        setLocation: function(x, y) {\r\n            this.rect.x = x;\r\n            this.rect.y = y;\r\n            this.updateStyle();\r\n        },\r\n\r\n        /**\r\n        * Refresh the style based on the dimensions.\r\n        */\r\n        updateStyle: function() {\r\n            var container = this.getContainer();\r\n            container.className = buildClassList(this.rect);\r\n            container.removeAttribute('style');\r\n        },\r\n\r\n        /**\r\n         * Handle an error.\r\n         * @returns {bool} Always returns true.\r\n         */\r\n        onError: function() {\r\n            if (this.interval) {\r\n                clearInterval(this.interval);\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Destroy the widget.\r\n         * @param {bool} totalDestruction - Remove the container node and null out the widget object if true.\r\n         */\r\n        destroy: function(totalDestruction) {\r\n            if (this.opts.isData) {\r\n                $.dispatch($.get('[data-toggle=\"table\"]', this.getContainer()), $.events.tableDestroy);\r\n            } else {\r\n                $.destroy(this.chart);\r\n            }\r\n\r\n            $.destroy(this.moveDraggie);\r\n            $.destroy(this.resizeDraggie);\r\n\r\n            if (this.interval) {\r\n                clearInterval(this.interval);\r\n                this.interval = null;\r\n            }\r\n\r\n            if ($.coalesce(totalDestruction, true)) {\r\n                var container = this.getContainer();\r\n                container.widget = null;\r\n                container.parentNode.removeChild(container);\r\n            }\r\n        },\r\n\r\n        toggleFullScreen: function() {\r\n            var container = this.getContainer();\r\n            var fullScreenIcon = $.get('.btn-fullscreen i', container);\r\n            $.toggleClass(container, 'full-screen', !this.isFullscreen);\r\n            $.toggleClass(fullScreenIcon, 'dash-min', !this.isFullscreen);\r\n            $.toggleClass(fullScreenIcon, 'dash-max', this.isFullscreen);\r\n            var isFullscreen = this.isFullscreen;\r\n            $.getAll('.fs-disabled', container).forEach(function(x) { $.toggleClass(x, 'disabled', !isFullscreen); });\r\n            this.isFullscreen = !this.isFullscreen;\r\n            this.updateLayout();\r\n        }\r\n    };\r\n\r\n    return Widget;\r\n});\r\n","/*!\r\n * Mithril based form component. For repetitive form elements.\r\n */\r\n(function(root, factory) {\r\n    root.Form = factory(root.m, root.$, root.Alertify, root.Help);\r\n})(this, function(m, $, Alertify, Help) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare form class.\r\n     * @param {Object} opts - Form settings\r\n     * @param {Object[]} records - Array of objects the form will display/update.\r\n     */\r\n    function Form(opts, records) {\r\n        opts = opts || {};\r\n        this.opts = $.extend({\r\n            container: null,\r\n            id: null,\r\n            columns: null,\r\n            wantsHelp: false,\r\n            appendRecord: false,\r\n            resx: {\r\n                deleteRecord: $.resx('delete'),\r\n                confirmDelete: $.resx('confirmDelete'),\r\n                confirmDeleteAll: $.resx('confirmDeleteAll'),\r\n                areYouSure: $.resx('areYouSure'),\r\n                moveUp: $.resx('moveUp'),\r\n                moveDown: $.resx('moveDown'),\r\n                help: $.resx('help')\r\n            }\r\n        }, opts);\r\n\r\n        this.container = $.get(this.opts.container);\r\n        this.records = $.isArray(records) ? records.map(function(x, i) { x._index = i; return x; }) : [];\r\n        this.addedCount = 0;\r\n        this.changed = false;\r\n    }\r\n\r\n    Form.prototype = {\r\n        /**\r\n         * Get the value of an element.\r\n         * @param {*} e - Event that triggered the value change, or the new value.\r\n         * @returns {string} Value of the element.\r\n         */\r\n        targetVal: function(e) {\r\n            return e && e.target ? e.target.value : e;\r\n        },\r\n\r\n        /**\r\n         * Set the value of a field on a record.\r\n         * @param {number} index - Record index.\r\n         * @param {string} field - Name of field to set.\r\n         * @param {Event} e - Event that triggered the change.\r\n         * @returns {bool} True if value changed, else false.\r\n         */\r\n        set: function(index, field, e) {\r\n            var val = this.targetVal(e);\r\n            if (this.opts.columns[field].type === 'int') {\r\n                val = $.isNull(val) ? null : val * 1;\r\n            }\r\n\r\n            if ($.isFunction(this.opts.columns[field].setter)) {\r\n                this.opts.columns[field].setter.call(this, index, field, e);\r\n            } else {\r\n                if (this.records[index][field] !== val) {\r\n                    this.records[index][field] = val;\r\n                    this.changed = true;\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        addRecord: function() {\r\n            --this.addedCount;\r\n            var obj = $.clone(this.opts.newRecord);\r\n            obj._index = this.addedCount;\r\n            if (this.opts.appendRecord) {\r\n                this.records.push(obj);\r\n            } else {\r\n                this.records.unshift(obj);\r\n            }\r\n            this.changed = true;\r\n        },\r\n\r\n        /**\r\n         * Delete a record.\r\n         * @param {number} index - Record index to delete.\r\n         * @param {Event} e - Event that triggered the delete.\r\n         */\r\n        deleteRecord: function(index, e) {\r\n            var self = this;\r\n            if ($.isFunction(this.opts.deleteFn)) {\r\n                this.opts.deleteFn.call(this, index, e);\r\n            } else {\r\n                // timeout prevents hitting enter on the button to trigger this confirmation from confirming it immediately\r\n                setTimeout(function() {\r\n                    Alertify.confirm(self.opts.resx.areYouSure, function(e) {\r\n                        self.records.splice(index, 1);\r\n                        if ($.isFunction(self.opts.afterDeleteFn)) {\r\n                            self.opts.afterDeleteFn.call(self, index, e);\r\n                        }\r\n                        self.changed = true;\r\n                        self.run();\r\n                    });\r\n                }, 100);\r\n            }\r\n        },\r\n\r\n        deleteAllRecords: function() {\r\n            var self = this;\r\n            setTimeout(function() {\r\n                Alertify.confirm(self.opts.resx.areYouSure, function() {\r\n                    self.records = [];\r\n                    self.changed = true;\r\n                    self.run();\r\n                });\r\n            }, 100);\r\n        },\r\n\r\n        /**\r\n         * Move a record up in the record list.\r\n         * @param {number} index - Index of record to move up.\r\n         */\r\n        moveUp: function(index) {\r\n            var t = this.records[index - 1];\r\n            if (t) {\r\n                this.records[index - 1] = this.records[index];\r\n                this.records[index] = t;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Move a record down in the record list.\r\n         * @param {number} index - Index of record to move down.\r\n         */\r\n        moveDown: function(index) {\r\n            var t = this.records[index + 1];\r\n            if (t) {\r\n                this.records[index + 1] = this.records[index];\r\n                this.records[index] = t;\r\n            }\r\n        },\r\n\r\n        hasRecords: function() {\r\n            return this.records && this.records.length > 0;\r\n        },\r\n\r\n        /**\r\n         * Trigger the click event if the enter or space key is hit.\r\n         * @param {Event} e - Event that triggered this.\r\n         */\r\n        keyInput: function(e) {\r\n            if (e && e.keyCode && (e.keyCode === 13 || e.keyCode === 32)) {\r\n                e.target.onclick.call(this, e);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Create the mithril node to show help wrapped around the provided content.\r\n         * @param {string} helpBody - Content of the help dialog.\r\n         * @param {Object} innerContent - Mithril node for the input that help is for.\r\n         * @returns {Object} Mithril node for input-group if help is enabled, else innerContent.\r\n         */\r\n        withHelp: function(helpBody, innerContent) {\r\n            return m(Help, { message: helpBody, enabled: this.opts.wantsHelp }, innerContent);\r\n        },\r\n\r\n        /**\r\n         * Return the error class if the value isn't valid.\r\n         * @param {string|number} value - Value to check against.\r\n         * @param {bool} requirePositive - Require the value be a positive number.\r\n         * @param {bool} isDate - Check if the value is a valid date.\r\n         * @returns {string}  Error class name if value isn't set, else empty string.\r\n         */\r\n        withError: function(value, requirePositive, isDate) {\r\n            requirePositive = $.coalesce(requirePositive, false);\r\n            isDate = $.coalesce(isDate, false);\r\n            var result = isDate ? $.fecha.parse(value, this.opts.dateFormat) : $.hasValue(value) && (!requirePositive || $.hasPositiveValue(value));\r\n            return result ? '' : ' mform-control-error';\r\n        },\r\n\r\n        /**\r\n         * Add a disabled attribute to the input attributes if isDisabled=true.\r\n         * @param {Object} attrs - Attribute object to update.\r\n         * @param {bool} isDisabled - Is the input diabled or not.\r\n         * @returns {Object} Updated attribute object.\r\n         */\r\n        withDisabled: function(attrs, isDisabled) {\r\n            if (isDisabled) {\r\n                attrs.disabled = true;\r\n            }\r\n            return attrs;\r\n        },\r\n\r\n        /**\r\n         * Add a checked attribute to the input attributes if isChecked=true.\r\n         * @param {Object} attrs - Attribute object to update.\r\n         * @param {bool} isChecked - Is the input checked or not.\r\n         * @returns {Object} Updated attribute object.\r\n         */\r\n        withChecked: function(attrs, isChecked) {\r\n            if (isChecked) {\r\n                attrs.checked = true;\r\n            }\r\n            return attrs;\r\n        },\r\n\r\n        /**\r\n         * Build list of options nodes.\r\n         * @param {Object[]} arr - Array of objects to build options for.\r\n         * @param {*} selectedValue - Value of the selected option. Can be a string, number, or array of either.\r\n         * @param {string} valueKey - Object key that stores the value of the option.\r\n         * @param {string} textKey - Object key that stores the text for the option.\r\n         * @returns {Object[]} Array of mithril option nodes.\r\n         */\r\n        withOptions: function(arr, selectedValue, valueKey, textKey) {\r\n            if (!$.isArray(arr)) {\r\n                return null;\r\n            }\r\n            return arr.map(function(x) {\r\n                var attr = { value: x[valueKey] === 0 ? '' : x[valueKey] };\r\n                if (x[valueKey] === 0) {\r\n                    attr.disabled = true;\r\n                }\r\n                if (x[valueKey] === selectedValue || ($.isArray(selectedValue) && selectedValue.indexOf(x[valueKey]) > -1)) {\r\n                    attr.selected = true;\r\n                }\r\n                return m('option', attr, x[textKey]);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Create the mithril node for the record buttons (move up/move down/delete).\r\n         * @param {number} index - Index of the record to create buttons for.\r\n         * @param {bool} includeMove - Optionally include the move up/down buttons.\r\n         * @returns {Object} Mithril node with buttons.\r\n         */\r\n        buttonView: function(index, includeMove) {\r\n            var btns = [];\r\n            if ($.coalesce(includeMove, false)) {\r\n                btns.push(m('button.btn.btn-sm.btn-secondary', {\r\n                    type: 'button', role: 'button', disabled: index < 1,\r\n                    onclick: this.moveUp.bind(this, index), title: this.opts.resx.moveUp\r\n                }, m('i.dash.dash-up-big.dash-lg.dash-fw'))\r\n                );\r\n                btns.push(m('button.btn.btn-sm.btn-secondary', {\r\n                    type: 'button', role: 'button', disabled: index === this.records.length - 1,\r\n                    onclick: this.moveDown.bind(this, index), title: this.opts.resx.moveDown\r\n                }, m('i.dash.dash-down-big.dash-lg.dash-fw'))\r\n                );\r\n            }\r\n            btns.push(m('button.btn.btn-sm.btn-secondary.confirm-delete-row-button', {\r\n                type: 'button', role: 'button', onclick: this.deleteRecord.bind(this, index), title: this.opts.resx.deleteRecord\r\n            }, m('i.dash.dash-trash.dash-lg.text-error')));\r\n            return m('.btn-toolbar.float-right', btns);\r\n        },\r\n\r\n        destroy: function() {\r\n            m.mount(this.container, null);\r\n        },\r\n\r\n        /**\r\n         * Build the view that actually shows the form. This is meant to be overridden.\r\n         * @returns {Object}  Mithril DIV node.\r\n         */\r\n        view: function() {\r\n            return m('div');\r\n        },\r\n\r\n        /**\r\n         * Render the view.\r\n         */\r\n        run: function() {\r\n            var self = this;\r\n            m.mount(self.container, {\r\n                view: self.view.bind(self)\r\n            });\r\n        }\r\n    };\r\n\r\n    return Form;\r\n});\r\n","/*!\r\n * Wraps shared functionality for report and chart detail pages.\r\n */\r\n(function(root, factory) {\r\n    root.BaseDetails = factory(root.$, root.Alertify);\r\n})(this, function($, Alertify) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare base details class.\r\n     * @param {Object} opts - Form settings\r\n     */\r\n    function BaseDetails(opts) {\r\n        opts = opts || {};\r\n        this.content = opts.content;\r\n        this.columnList = opts.columns || [];\r\n\r\n        if (!opts.allowEdit) {\r\n            this.initDate = new Date();\r\n        }\r\n    }\r\n\r\n    BaseDetails.prototype = {\r\n        /**\r\n         * Handle the result of a query for report data.\r\n         * @param {Object} json - Query result.\r\n         * @returns {bool}  True if data is valid.\r\n         */\r\n        processJson: function(json) {\r\n            if (json.updatedDate && this.initDate) {\r\n                var updateDate = new Date(json.updatedDate);\r\n                if (updateDate && updateDate > this.initDate) {\r\n                    // report has been modified - warn the user to refresh\r\n                    Alertify.error($.resx('reportModified'));\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if (json.dataSql) {\r\n                this.setSql($.get('.sql-data-content', this.content), json.dataSql, json.dataError);\r\n            }\r\n            if (json.countSql) {\r\n                this.setSql($.get('.sql-count-content', this.content), json.countSql, json.countError);\r\n            }\r\n\r\n            if ($.isNull(json.rows)) {\r\n                Alertify.error($.resx('errorConnectingToDataSource'));\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Show sql and error message in the correct place.\r\n         * @param {Node} node - DOM node to update.\r\n         * @param {string} sql - SQL statement to display.\r\n         * @param {string} error - Error to display if any.\r\n         */\r\n        setSql: function(node, sql, error) {\r\n            if (node) {\r\n                var elem = $.get('.sql-text', node);\r\n                if (elem) {\r\n                    elem.textContent = sql;\r\n                }\r\n                elem = $.get('.sql-error', node);\r\n                if (elem) {\r\n                    elem.textContent = error || '';\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the list of columns for the autocomplete.\r\n         * @returns {string[]} Returns array of columns.\r\n         */\r\n        getColumnList: function() {\r\n            return this.columnList;\r\n        }\r\n    };\r\n\r\n    return BaseDetails;\r\n});\r\n\r\n/*!\r\n * Wraps share form functionality. Used for report and chart.\r\n */\r\n(function(root, factory) {\r\n    root.ShareForm = factory(root.m, root.$, root.Form);\r\n})(this, function(m, $, Form) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the share form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function ShareForm(opts) {\r\n        var container = $.get('.share-table-wrapper', opts.content);\r\n        var formOpts = JSON.parse(container.getAttribute('data-json'));\r\n        container.removeAttribute('data-json');\r\n\r\n        Form.call(this, {\r\n            container: container,\r\n            columns: {\r\n                id: { type: 'int' },\r\n                userId: { type: 'int' },\r\n                roleId: { type: 'int' }\r\n            },\r\n            appendRecord: true,\r\n            wantsHelp: formOpts.wantsHelp,\r\n            newRecord: { id: 0, userId: 0, roleId: 0 }\r\n        }, formOpts.shares || []);\r\n\r\n        this.users = formOpts.userList || [];\r\n        this.roles = formOpts.roleList || [];\r\n        this.formName = opts.formName;\r\n    }\r\n\r\n    ShareForm.prototype = Object.create(Form.prototype);\r\n    ShareForm.prototype.constructor = ShareForm;\r\n\r\n    /**\r\n     * Build the user dropdown attributes.\r\n     * @param {Object} share - Share to build the dropdown for.\r\n     * @param {number} index - Index of the share record.\r\n     * @returns {Object} Dropdown attribute object.\r\n     */\r\n    ShareForm.prototype.userSelectAttr = function(share, index) {\r\n        var res = {\r\n            name: this.formName + '[' + index + '].UserId', class: 'form-select' + ($.hasPositiveValue(share.userId) || $.hasPositiveValue(share.roleId) ? '' : ' mform-control-error'),\r\n            placeholder: $.resx('selectUser'), onchange: this.set.bind(this, index, 'userId'), value: share.userId\r\n        };\r\n        if ($.hasPositiveValue(share.roleId)) {\r\n            res['disabled'] = true;\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Build the role dropdown attributes.\r\n     * @param {Object} share - Share to build the dropdown for.\r\n     * @param {number} index - Index of the share record.\r\n     * @returns {Object} Dropdown attribute object.\r\n     */\r\n    ShareForm.prototype.roleSelectAttr = function(share, index) {\r\n        var res = {\r\n            name: this.formName + '[' + index + '].RoleId', class: 'form-select' + ($.hasPositiveValue(share.userId) || $.hasPositiveValue(share.roleId) ? '' : ' mform-control-error'),\r\n            placeholder: $.resx('selectRole'), onchange: this.set.bind(this, index, 'roleId'), value: share.roleId\r\n        };\r\n        if ($.hasPositiveValue(share.userId)) {\r\n            res['disabled'] = true;\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Create the view for the share form.\r\n     * @returns {Object} Mithril node containing the share form.\r\n     */\r\n    ShareForm.prototype.view = function() {\r\n        var self = this;\r\n        return m('.table-wrapper', [\r\n            m('.columns', [\r\n                m('.col-5', m('h5', $.resx('user'))),\r\n                m('.col-5', m('h5', $.resx('role'))),\r\n                m('.col-2')\r\n            ]),\r\n            self.records.map(function(share, index) {\r\n                return m('.columns.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: share._index }, [\r\n                    m('input', { type: 'hidden', name: self.formName + '[' + index + '].Id', value: share.id }),\r\n                    m('.col-5.pr-2',\r\n                        m('select', self.userSelectAttr(share, index), self.withOptions(self.users, share.userId, 'id', 'fullName'))\r\n                    ),\r\n                    m('.col-5',\r\n                        m('select', self.roleSelectAttr(share, index), self.withOptions(self.roles, share.roleId, 'id', 'name'))\r\n                    ),\r\n                    m('.col-2', self.buttonView(index, false))\r\n                ]);\r\n            }),\r\n            m('.columns.pt-1', [\r\n                m('.col-12', [\r\n                    m('.text-right', [\r\n                        m('button.btn.btn-info.mr-2', { type: 'button', role: 'button', onclick: self.addRecord.bind(self) }, $.resx('add')),\r\n                        m('button.btn.btn-warning', {\r\n                            type: 'button', role: 'button', disabled: !self.hasRecords(),\r\n                            onclick: self.hasRecords() ? self.deleteAllRecords.bind(self) : $.noop\r\n                        }, $.resx('deleteAll'))\r\n                    ])\r\n                ])\r\n            ])\r\n        ]);\r\n    };\r\n\r\n    return ShareForm;\r\n});\r\n","/*!\r\n * Wraps content processing functionality.\r\n */\r\n(function(m, $, Alertify, pjax, Table, Tab, CollapsibleList, Autocomplete, Draggabilly, flatpickr) {\r\n    'use strict';\r\n\r\n    var autocompletes = [];\r\n    var draggabillies = [];\r\n\r\n    /**\r\n     * Display context help.\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var contextHelp = function() {\r\n        $.on(this, 'click', Alertify.alert.bind(null, this.getAttribute('data-message').replace(/&quot;/g, '\"'), focusOnClose, focusOnClose));\r\n    };\r\n\r\n    /**\r\n     * Hide content.\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var hide = function() {\r\n        var node = $.get(this.getAttribute('data-target'));\r\n        if (node) {\r\n            $.on(this, 'click', $.hide.bind(null, node, false));\r\n        }\r\n    };\r\n\r\n    var conditionallyDisable = function() {\r\n        var n = $.get(this.getAttribute('data-target'));\r\n        if (this.value == this.getAttribute('data-match')) {\r\n            n.removeAttribute('disabled');\r\n        } else {\r\n            n.value = '';\r\n            n.setAttribute('disabled', true);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Conditionally disable content.\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var disable = function() {\r\n        $.onChange(this, conditionallyDisable, true);\r\n    };\r\n\r\n    /**\r\n     * Initialize autocomplete.\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var autocompleteLoad = function() {\r\n        // @todo maybe add a way to include source list in original html response instead of requiring another request\r\n\r\n        var preload = ['true', 'True'].indexOf(this.getAttribute('data-preload')) > -1;\r\n        var self = this;\r\n        if (preload) {\r\n            $.ajax({\r\n                method: self.getAttribute('data-method') || 'GET',\r\n                url: self.getAttribute('data-url')\r\n            }, function(data) {\r\n                if (data && data.length) {\r\n                    autocompletes.push(new Autocomplete({ selector: self, sourceData: data }));\r\n                } else {\r\n                    // error - @todo what do i do here?\r\n                    autocompletes.push(new Autocomplete({ selector: self, sourceData: null }));\r\n                }\r\n            });\r\n        } else {\r\n            autocompletes.push(new Autocomplete({\r\n                selector: self, source: function(search, response) {\r\n                    var params = { search: search };\r\n                    if (self.hasAttribute('data-params')) {\r\n                        self.getAttribute('data-params').split(',').forEach(function(x) {\r\n                            var node = $.get(x);\r\n                            if (node) {\r\n                                params[node.id] = node.value;\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    $.ajax({\r\n                        method: self.getAttribute('data-method') || 'GET',\r\n                        url: self.getAttribute('data-url'),\r\n                        data: params\r\n                    }, function(data) {\r\n                        if (data && data.length) {\r\n                            response(data);\r\n                        } else {\r\n                            // error - @todo what do i do here?\r\n                        }\r\n                    });\r\n                }\r\n            }));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy autocompletes on this page.\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var autocompleteUnload = function() {\r\n        autocompletes.forEach(function(x) {\r\n            x.destroy();\r\n        });\r\n        autocompletes = [];\r\n    };\r\n\r\n    /**\r\n     * Set focus on an element after a dialog closes.\r\n     * @param {Event} e - Event that originally triggered this.\r\n     */\r\n    var focusOnClose = function(e) {\r\n        if (e && e.target) {\r\n            e.target.focus();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initialize a table instance\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var tableLoad = function() {\r\n        var node = $.isNode(this) ? this : this.target;\r\n        if (node) {\r\n            var json = node.getAttribute('data-json');\r\n            if (json) {\r\n                var opts = JSON.parse(json);\r\n                m.mount(node.parentElement, {\r\n                    view: function() {\r\n                        return m(Table, opts);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy a table instance\r\n     * @this {Node} Node for the table to destroy.\r\n     */\r\n    var tableUnload = function() {\r\n        var node = $.isNode(this) ? this : this.target;\r\n        if (node) {\r\n            $.dispatch(node, $.events.tableDestroy);\r\n            m.mount(node, null);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Update zIndex of column being dragged so it is on top.\r\n     * @param {Event} event - Original mousedown or touchstart event\r\n     */\r\n    var startColumnDrag = function(event) {\r\n        var target = $.hasClass(event.target, 'column-item') ? event.target : event.target.parentNode;\r\n        target.style['z-index'] = 9999;\r\n    };\r\n\r\n    /**\r\n     * Update column lists when the user stops dragging a column.\r\n     * @param {Event} event - Original mouseup or touchend event\r\n     * @param {MouseEvent|Touch} pointer - Event object that has .pageX and .pageY\r\n     */\r\n    var stopColumnDrag = function(event, pointer) {\r\n        var target = $.hasClass(event.target, 'column-item') ? event.target : event.target.parentNode;\r\n        var isLeft = (pointer.x || pointer.clientX) + target.offsetWidth / 2 < document.documentElement.clientWidth / 2;\r\n        var newPos = Math.max(Math.round(target.offsetTop / target.offsetHeight), 0);\r\n\r\n        $.removeClass(target, 'column-item-right');\r\n        $.removeClass(target, 'column-item-left');\r\n        target.removeAttribute('style');\r\n\r\n        var leftItems = $.getAll('.column-item-left');\r\n        leftItems.sort(columnSort);\r\n        var rightItems = $.getAll('.column-item-right');\r\n        rightItems.sort(columnSort);\r\n        newPos = Math.min(newPos, isLeft ? leftItems.length : rightItems.length);\r\n\r\n        if (isLeft) {\r\n            $.addClass(target, 'column-item-left');\r\n            leftItems.splice(newPos, 0, target);\r\n        } else {\r\n            $.addClass(target, 'column-item-right');\r\n            rightItems.splice(newPos, 0, target);\r\n        }\r\n\r\n        updateColumnList(leftItems, true);\r\n        updateColumnList(rightItems, false);\r\n        $.addClass($.closest('form', target), 'has-changes');\r\n    };\r\n\r\n    /**\r\n     * Sort columns by their vertical position.\r\n     * @param {Object} a - Object for first column.\r\n     * @param {Object} b - Object for second column.\r\n     * @returns {bool} True if first column should be after second column, else false;\r\n     */\r\n    var columnSort = function(a, b) {\r\n        return a.offsetTop > b.offsetTop;\r\n    };\r\n\r\n    /**\r\n     * Update the position and displayOrder of columns in a list.\r\n     * @param {Node[]} items - Array of column nodes.\r\n     * @param {bool} isLeft - True if the left column list, else false.\r\n     */\r\n    var updateColumnList = function(items, isLeft) {\r\n        $.forEach(items, function(x, i) {\r\n            updateColumn(x, i, isLeft);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Update the class list and displayOrder for a column item.\r\n     * @param {Node} element - DOM node for the column.\r\n     * @param {number} index - New index of the column in the list.\r\n     * @param {bool} isLeft - True if the column is in the left list, else false.\r\n     */\r\n    var updateColumn = function(element, index, isLeft) {\r\n        element.className = element.className.replace(/column-item-y-([0-9]*)/i, '').trim() + ' column-item-y-' + index;\r\n        var input = $.get('.column-grid-display-order', element);\r\n        if (input) {\r\n            if (isLeft) {\r\n                input.value = 0;\r\n            } else {\r\n                input.value = index + 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initialize the column selector.\r\n     */\r\n    var columnSelectorLoad = function() {\r\n        var node = $.isNode(this) ? this : this.target;\r\n        if (node) {\r\n            $.forEach($.getAll('.column-item', node), function(x) {\r\n                draggabillies.push(new Draggabilly(x).on('dragStart', startColumnDrag).on('dragEnd', stopColumnDrag));\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy the column selector.\r\n     */\r\n    var columnSelectorUnload = function() {\r\n        $.forEach(draggabillies, function(x) {\r\n            x.destroy();\r\n        });\r\n        draggabillies = [];\r\n    };\r\n\r\n    /**\r\n     * Initialize datepicker.\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var datepickerLoad = function() {\r\n        var node = $.isNode(this) ? this : this.target;\r\n        if (node) {\r\n            var opts = {\r\n                altInput: true,\r\n                defaultDate: node.value,\r\n                enableTime: true,\r\n                enableSeconds: true,\r\n                time_24hr: true\r\n            };\r\n            var lang = $.get('body').getAttribute('data-lang');\r\n            if (lang !== 'en') {\r\n                // @todo update this to be able to handle languages more gracefully\r\n                opts.locale = 'Spanish';\r\n            }\r\n            flatpickr(node, opts);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy datepickers on this page.\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var datepickerUnload = function() {\r\n        if (this._flatpickr) {\r\n            this._flatpickr.destroy();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initialize content replacer.\r\n     * @this {Node} Node the event is being bound to.\r\n     */\r\n    var contentReplaceLoad = function() {\r\n        $.onChange(this, function() {\r\n            var params = {};\r\n            if (this.hasAttribute('data-params')) {\r\n                this.getAttribute('data-params').split(',').forEach(function(x) {\r\n                    var node = $.get(x);\r\n                    if (node) {\r\n                        params[node.id] = node.value;\r\n                    }\r\n                });\r\n            }\r\n\r\n            loading();\r\n            $.ajax({\r\n                method: this.getAttribute('data-method') || 'GET',\r\n                url: this.getAttribute('data-url'),\r\n                data: params\r\n            }, function(html) {\r\n                var node = $.createNode(html);\r\n                if (node.id) {\r\n                    var existingNode = $.get('#' + node.id);\r\n                    if (existingNode) {\r\n                        processToggles(existingNode, true);\r\n                        processToggles(node);\r\n                        existingNode.parentNode.replaceChild(node, existingNode);\r\n                    }\r\n                }\r\n                done();\r\n            }, function() {\r\n                done();\r\n            });\r\n        }, false);\r\n    };\r\n\r\n    /**\r\n     * Focus on the first error or input.\r\n     * @param {Node} node - Parent node to search in.\r\n     */\r\n    var autofocus = function(node) {\r\n        if (!node) {\r\n            return null;\r\n        }\r\n        var elems = $.getAll('input[autofocus]', node).filter($.isVisible);\r\n        if (!elems.length) {\r\n            elems = $.getAll('.form-control-error:not([type=\"hidden\"]):not([disabled]):not([readonly]), .mform-control-error:not([type=\"hidden\"]):not([disabled]):not([readonly])', node).filter($.isVisible);\r\n        }\r\n        if (!elems.length) {\r\n            elems = $.getAll('input:not([type=\"hidden\"]):not([disabled]):not([readonly]), select:not([disabled]):not([readonly])', node).filter($.isVisible);\r\n        }\r\n        if (!elems.length) {\r\n            elems = $.getAll('button:not([disabled]), a:not([disabled]), [tabindex]:not([disabled]):not([tabindex=\"-1\"])', node).filter($.isVisible);\r\n        }\r\n        if (!elems.length) {\r\n            var dlg = $.closest('.rd-dialog', node);\r\n            if (dlg) {\r\n                elems = $.getAll('.rd-close', dlg).filter($.isVisible);\r\n            }\r\n        }\r\n        if (elems.length) {\r\n            elems[0].focus();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Replace the value of the data-target node with the data-value from this. Used for providing defaults via a dropdown.\r\n     */\r\n    var inputReplace = function() {\r\n        if (this.hasAttribute('data-target') && this.hasAttribute('data-value')) {\r\n            var target = $.get(this.getAttribute('data-target'));\r\n            if (target && !$.isNull(target.value)) {\r\n                target.value = this.getAttribute('data-value');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set up click event for nav menu.\r\n     */\r\n    var menuLoad = function() {\r\n        $.on(this, 'click', function() {\r\n            $.toggleClass('body', 'toggled', null);\r\n            $.dispatch(window, new Event('resize'));\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Selectors and callback function to create events.\r\n     */\r\n    var _toggles = {\r\n        'nav-menu': {\r\n            onLoad: menuLoad,\r\n            onUnload: null\r\n        },\r\n        'tab': {\r\n            onLoad: function() { new Tab(this); },\r\n            onUnload: null\r\n        },\r\n        'table': {\r\n            onLoad: tableLoad,\r\n            onUnload: tableUnload\r\n        },\r\n        'context-help': {\r\n            onLoad: contextHelp,\r\n            onUnload: null\r\n        },\r\n        'collapsible-list': {\r\n            onLoad: function() { new CollapsibleList(this); },\r\n            onUnload: null\r\n        },\r\n        'input-replace': {\r\n            onLoad: function() { $.on(this, 'click', inputReplace); },\r\n            onUnload: null\r\n        },\r\n        'hide': {\r\n            onLoad: hide,\r\n            onUnload: null\r\n        },\r\n        'disable': {\r\n            onLoad: disable,\r\n            onUnload: null\r\n        },\r\n        'autocomplete': {\r\n            onLoad: autocompleteLoad,\r\n            onUnload: autocompleteUnload\r\n        },\r\n        'column-selector': {\r\n            onLoad: columnSelectorLoad,\r\n            onUnload: columnSelectorUnload\r\n        },\r\n        'content-replace': {\r\n            onLoad: contentReplaceLoad\r\n        },\r\n        'datepicker': {\r\n            onLoad: datepickerLoad,\r\n            onUnload: datepickerUnload\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Process data-toggles for a node.\r\n     * @param {Node} node - Node to add events to.\r\n     * @param {bool} isUnload - True if unloading, false if loading\r\n     */\r\n    var processToggles = function(node, isUnload) {\r\n        // process all the toggles\r\n        var elems = $.getAll('[data-toggle]', node);\r\n        if ($.matches(node, '[data-toggle]')) {\r\n            elems.push(node);\r\n        }\r\n        $.forEach(elems, function(x) {\r\n            var toggle = x.getAttribute('data-toggle');\r\n            if (_toggles[toggle]) {\r\n                var func = isUnload ? _toggles[toggle].onUnload : _toggles[toggle].onLoad;\r\n                if (func) {\r\n                    func.call(x);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Process node content adding events.\r\n     * @param {Node} node - Node to add events to.\r\n     * @param {bool} isUnload - True if unloading, false if loading\r\n     */\r\n    var processContent = function(node, isUnload) {\r\n        node = $.isEvent(node) ? null : node;\r\n        if (!node) {\r\n            return;\r\n        }\r\n        processToggles(node, isUnload);\r\n        autofocus(node);\r\n    };\r\n\r\n    /**\r\n     * Process node content handling load events.\r\n     * @param {Node} node - Node to add events to.\r\n     */\r\n    var load = function(node) {\r\n        processContent(node, false);\r\n    };\r\n\r\n    /**\r\n     * Process node content handling unload events.\r\n     * @param {Node} node - Node to remove events from.\r\n     */\r\n    var unload = function(node) {\r\n        processContent(node, true);\r\n    };\r\n\r\n    /**\r\n     * Set up content after page has loaded.\r\n     */\r\n    var pageLoaded = function() {\r\n        pjax.init();\r\n    };\r\n\r\n    /**\r\n     * Closure to set up the loading splash screen and return the node for it.\r\n     */\r\n    var _loadingDiv = (function() {\r\n        var div = $.get('#loader');\r\n        $.on(div, 'keydown', function(e) {\r\n            if ($.hasClass('#loader', 'd-none')) {\r\n                return;\r\n            }\r\n            // @todo maybe add a way to cancel a pending request using escape?\r\n\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            return false;\r\n        });\r\n        return div;\r\n    })();\r\n\r\n    /**\r\n     * Show loading indicator.\r\n     */\r\n    var loading = function() {\r\n        $.show(_loadingDiv);\r\n    };\r\n\r\n    /**\r\n     * Hide loading indicator.\r\n     */\r\n    var done = function() {\r\n        $.hide(_loadingDiv);\r\n    };\r\n\r\n    $.content = {\r\n        done: done,\r\n        focusOnClose: focusOnClose,\r\n        load: load,\r\n        loading: loading,\r\n        unload: unload\r\n    };\r\n\r\n    /**\r\n     * Run events needed for the inital page load.\r\n     */\r\n    if ($.resxLoaded) {\r\n        pageLoaded();\r\n    } else {\r\n        $.on(document, 'resxLoaded', pageLoaded);\r\n    }\r\n\r\n})(this.m, this.$, this.Alertify, this.pjax, this.Table, this.Tab, this.CollapsibleList, this.Autocomplete, this.Draggabilly, this.flatpickr);\r\n","/*!\r\n * Chart range form component.\r\n */\r\n(function(root, factory) {\r\n    root.RangeForm = factory(root.m, root.$, root.Form, root.Help, root.Alertify, root.DashChart, root.ColorPicker);\r\n})(this, function(m, $, Form, Help, Alertify, DashChart, ColorPicker) {\r\n    'use strict';\r\n\r\n    function RangeForm(opts) {\r\n        var ranges = opts.ranges || [];\r\n        ranges = opts.ranges.map(function(x) { x.isExpanded = false; return x; });\r\n\r\n        Form.call(this, {\r\n            container: $.get('.range-table-wrapper', opts.content),\r\n            columns: {\r\n                id: { type: 'int' },\r\n                reportId: { type: 'int' },\r\n                xAxisColumnId: { type: 'int' },\r\n                yAxisColumnId: { type: 'int' },\r\n                aggregatorId: { type: 'int' },\r\n                dateIntervalId: { type: 'int' },\r\n                color: { type: 'string' },\r\n                displayOrder: { type: 'int' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, reportId: 0, xAxisColumnId: 0, yAxisColumnId: 0, aggregatorId: 0, dateIntervalId: 0, color: '', displayOrder: 0 }\r\n        }, ranges || []);\r\n\r\n        this.content = opts.content;\r\n        this.chartId = opts.chartId;\r\n        this.filterTypes = opts.filterTypes || {};\r\n        this.saveRangesUrl = opts.saveRangesUrl;\r\n        this.dateIntervals = opts.dateIntervals || [];\r\n        this.aggregators = opts.aggregators || [];\r\n        this.reports = opts.reports || [];\r\n        this.columns = opts.columns || [];\r\n        this.processJsonFn = opts.processJsonFn;\r\n        this.canExportFn = opts.canExportFn;\r\n        this.toggleExportFn = opts.toggleExportFn;\r\n    }\r\n\r\n    RangeForm.prototype = Object.create(Form.prototype);\r\n    RangeForm.prototype.constructor = RangeForm;\r\n\r\n    /**\r\n     * Save ranges to the server then rebuild the chart.\r\n     */\r\n    RangeForm.prototype.saveRanges = function() {\r\n        if ($.getAll('.mform-control-error', this.container).length > 0) {\r\n            Alertify.error($.resx('fixIt'));\r\n            return;\r\n        }\r\n\r\n        this.records.forEach(function(x, i) { x.displayOrder = i; });\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: self.saveRangesUrl,\r\n            data: {\r\n                Id: self.chartId,\r\n                Ranges: $.toPascalKeys(self.records)\r\n            },\r\n            headers: {\r\n                'Content-Type': 'application/jil; charset=utf-8',\r\n                'Accept': 'application/jil'\r\n            }\r\n        }, function(data) {\r\n            if (data) {\r\n                self.changed = false;\r\n                if ($.isArray(data.ranges)) {\r\n                    data.ranges.forEach(function(x, i) { self.records[i].id = x.id; });\r\n                }\r\n                Alertify.success($.resx('chart.saveSuccessful'));\r\n                self.makeChart();\r\n            }\r\n        });\r\n    };\r\n\r\n    RangeForm.prototype.makeChart = function() {\r\n        var chartContent = $.get('.chart-container', this.content);\r\n        if (!(chartContent && chartContent.hasAttribute('data-url'))) {\r\n            return;\r\n        }\r\n        if (!(this.records && this.records.length > 0)) {\r\n            Alertify.error($.resx('chart.rangesRequired'));\r\n            return;\r\n        }\r\n\r\n        if (this.dashChart) {\r\n            this.dashChart.destroy();\r\n        }\r\n\r\n        this.dashChart = new DashChart(chartContent, true, this.processJsonFn, null, this.toggleExportFn);\r\n    };\r\n\r\n    RangeForm.prototype.exportChart = function() {\r\n        if (!this.canExportFn()) {\r\n            return;\r\n        }\r\n        var chartContainer = $.get('.chart-container', this.content);\r\n        if (chartContainer) {\r\n            $.get('.export-width', this.content).value = chartContainer.offsetWidth;\r\n            $.get('.export-data', this.content).value = this.dashChart.chart.toBase64Image();\r\n            $.get('.export-form', this.content).submit();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the operatorId for a filter and unset the criteria.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered.\r\n     */\r\n    RangeForm.prototype.setReport = function(index, e) {\r\n        if (this.set(index, 'reportId', e)) {\r\n            this.records[index].xAxisColumnId = 0;\r\n            this.records[index].yAxisColumnId = 0;\r\n            this.records[index].aggregatorId = 0;\r\n            this.records[index].dateIntervalId = 0;\r\n            this.run();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Expand/collapse the inputs for a range.\r\n     * @param {Object} record - Range object.\r\n     */\r\n    RangeForm.prototype.toggleExpanded = function(record) {\r\n        record.isExpanded = !record.isExpanded;\r\n    };\r\n\r\n    /**\r\n     * Build the ranges.\r\n     * @returns {Object[]} Array of Mithril nodes containing the ranges.\r\n     */\r\n    RangeForm.prototype.rangeView = function() {\r\n        if (!this.reports) {\r\n            return null;\r\n        }\r\n\r\n        var self = this;\r\n        return this.records.map(function(record, index) {\r\n            var report = record.reportId ? $.findByKey(self.columns, 'reportId', record.reportId) : null;\r\n            if (report && !report.xColumns) {\r\n                report.xColumns = $.clone(report.columns);\r\n                report.xColumns.unshift({ columnId: 0, title: $.resx('chart.xAxisColumn') });\r\n                report.yColumns = $.clone(report.columns);\r\n                report.yColumns.unshift({ columnId: 0, title: $.resx('chart.yAxisColumn') });\r\n            }\r\n\r\n            var dateIntervalDisabled = true;\r\n            var inputsDisabled = !(self.opts.allowEdit && report);\r\n            if (!inputsDisabled && self.filterTypes) {\r\n                var col = $.findByKey(report.columns, 'columnId', record.xAxisColumnId * 1);\r\n                if (col && col.filterTypeId === self.filterTypes.date) {\r\n                    // show for date\r\n                    dateIntervalDisabled = false;\r\n                }\r\n            }\r\n\r\n            return m('.container.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: record._index }, [\r\n                m('.columns', [\r\n                    m('input', { type: 'hidden', name: 'ChartRange[' + index + '].Id', value: record.id }),\r\n                    m('.col-4',\r\n                        self.withHelp($.resx('chart.reportText'), [\r\n                            m('span.input-group-addon.input-group-custom', m('button.btn.btn-secondary', { onclick: self.toggleExpanded.bind(self, record) },\r\n                                m('i.dash.text-primary', { class: record.isExpanded ? 'dash-minus' : 'dash-plus' })\r\n                            )),\r\n                            m('select.form-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].ReportId', class: self.withError(record.reportId, true),\r\n                                placeholder: $.resx('chart.report'), onchange: self.setReport.bind(self, index), value: record.reportId\r\n                            }, !self.opts.allowEdit), self.withOptions(self.reports, record.reportId, 'id', 'name'))\r\n                        ])\r\n                    ),\r\n                    m('.col-3',\r\n                        self.withHelp($.resx('chart.xAxisColumnText'),\r\n                            m('select.form-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].XAxisColumnId', id: 'xAxisColumnId' + index, class: report ? self.withError(record.xAxisColumnId, true) : null,\r\n                                placeholder: $.resx('chart.xAxisColumn'), onchange: self.set.bind(self, index, 'xAxisColumnId'), value: record.xAxisColumnId\r\n                            }, inputsDisabled), self.withOptions(report ? report.xColumns : [{ columnId: 0, title: $.resx('chart.xAxisColumn') }], record.xAxisColumnId, 'columnId', 'title'))\r\n                        )\r\n                    ),\r\n                    m('.col-3',\r\n                        self.withHelp($.resx('chart.yAxisColumnText'),\r\n                            m('select.form-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].YAxisColumnId', id: 'yAxisColumnId' + index, class: report ? self.withError(record.yAxisColumnId, true) : null,\r\n                                placeholder: $.resx('chart.yAxisColumn'), onchange: self.set.bind(self, index, 'yAxisColumnId'), value: record.yAxisColumnId\r\n                            }, inputsDisabled), self.withOptions(report ? report.yColumns : [{ columnId: 0, title: $.resx('chart.yAxisColumn') }], record.yAxisColumnId, 'columnId', 'title'))\r\n                        )\r\n                    ),\r\n                    m('.col-2', self.opts.allowEdit ? self.buttonView.call(self, index, true) : null)\r\n                ]),\r\n                m('.columns', { class: record.isExpanded ? '' : ' d-none' }, [\r\n                    m('.col-4.col-ml-auto',\r\n                        self.withHelp($.resx('chart.aggregatorText'),\r\n                            m('select.form-select', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].AggregatorId', id: 'aggregatorId' + index,\r\n                                placeholder: $.resx('chart.aggregator'), onchange: self.set.bind(self, index, 'aggregatorId'), value: record.aggregatorId\r\n                            }, inputsDisabled), self.withOptions(self.aggregators, record.aggregatorId, 'id', 'name'))\r\n                        )\r\n                    ),\r\n                    m('.col-4',\r\n                        self.withHelp($.resx('chart.dateIntervalText'),\r\n                            m('select.form-select', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].DateIntervalId', id: 'dateIntervalId' + index,\r\n                                placeholder: $.resx('chart.dateInterval'), onchange: self.set.bind(self, index, 'dateIntervalId'), value: record.dateIntervalId\r\n                            }, dateIntervalDisabled), self.withOptions(self.dateIntervals, record.dateIntervalId, 'id', 'name'))\r\n                        )\r\n                    ),\r\n                    m('.col-2', [\r\n                        self.withHelp($.resx('chart.colorText'),\r\n                            m(ColorPicker, {\r\n                                name: 'ChartRange[' + index + '].Color', value: record.color, disabled: inputsDisabled,\r\n                                onSelect: self.set.bind(self, index, 'color')\r\n                            })\r\n                        ),\r\n                    ]),\r\n                    m('.col-1')\r\n                ])\r\n            ]);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Build the range form.\r\n     * @returns {Object} Mithril node containing the form.\r\n     */\r\n    RangeForm.prototype.view = function() {\r\n        return [\r\n            this.rangeView(),\r\n            m('.container.pt-1', m('.columns', [\r\n                m('.col-6', [\r\n                    m('.btn-toolbar', [\r\n                        this.opts.allowEdit ? m('button.btn.btn-primary.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.saveRanges.bind(this)\r\n                        }, $.resx('save')) : null,\r\n                        m('button.btn.btn-info', {\r\n                            type: 'button', role: 'button', onclick: this.exportChart.bind(this), disabled: !this.canExportFn()\r\n                        }, $.resx('export'))\r\n                    ])\r\n                ]),\r\n                this.opts.allowEdit ? m('.col-6.text-right', [\r\n                    m('.text-right', [\r\n                        m('button.btn.btn-info.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.addRecord.bind(this)\r\n                        }, $.resx('add')),\r\n                        m('button.btn.btn-warning.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.deleteAllRecords.bind(this), disabled: !this.hasRecords()\r\n                        }, $.resx('deleteAll')),\r\n                        m(Help, { enabled: this.opts.wantsHelp, message: $.resx('chart.rangeText') })\r\n                    ])\r\n                ]) : null\r\n            ]))\r\n        ];\r\n    };\r\n\r\n    return RangeForm;\r\n});\r\n\r\n/*!\r\n * Chart form component.\r\n */\r\n(function(root, factory) {\r\n    root.ChartDetails = factory(root.$, root.Alertify, root.BaseDetails, root.RangeForm);\r\n})(this, function($, Alertify, BaseDetails, RangeForm) {\r\n    'use strict';\r\n\r\n    function ChartDetails(opts) {\r\n        opts = opts || {};\r\n\r\n        BaseDetails.call(this, opts);\r\n\r\n        this.enableExport = false;\r\n\r\n        this.rangeForm = new RangeForm({\r\n            chartId: opts.chartId,\r\n            content: opts.content,\r\n            ranges: opts.ranges,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            filterTypes: opts.filterTypes || {},\r\n            saveRangesUrl: opts.saveRangesUrl,\r\n            dateIntervals: opts.dateIntervals,\r\n            aggregators: opts.aggregators,\r\n            reports: opts.reports,\r\n            columns: opts.columns,\r\n            processJsonFn: this.processJson.bind(this),\r\n            canExportFn: this.canExport.bind(this),\r\n            toggleExportFn: this.toggleExport.bind(this)\r\n        });\r\n        this.rangeForm.run();\r\n\r\n        if (this.rangeForm.records && this.rangeForm.records.length) {\r\n            this.rangeForm.makeChart();\r\n        }\r\n    }\r\n\r\n    ChartDetails.prototype = Object.create(BaseDetails.prototype);\r\n    ChartDetails.prototype.constructor = BaseDetails;\r\n\r\n    /**\r\n     * Handle the result of a query for report data.\r\n     * @param {Object} json - Query result.\r\n     * @returns {bool}  True if data is valid.\r\n     */\r\n    ChartDetails.prototype.processJson = function(json) {\r\n        if (json.updatedDate && this.initDate) {\r\n            var updateDate = new Date(json.updatedDate);\r\n            if (updateDate && updateDate > this.initDate) {\r\n                // chart has been modified - warn the user to refresh\r\n                $.dispatch(document, $.events.chartLoad);\r\n                Alertify.success($.resx('chartModified'));\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if ($.isNull(json.ranges) || json.ranges.length === 0) {\r\n            Alertify.error($.resx('errorConnectingToDataSource'));\r\n            this.enableExport = false;\r\n            $.show($.get('.chart-error', this));\r\n            return false;\r\n        }\r\n\r\n        this.enableExport = true;\r\n        $.get('.export-filename', this.content).value = json.title;\r\n\r\n        var elem = $.get('.sql-content', this.content);\r\n        var ranges = json.ranges.map(function(x) { return { title: x.title, sql: x.sql, error: x.error }; });\r\n        this.setSql(elem, ranges.filter(function(x) { return x.sql; }).map(function(x) { return '-- ' + x.title + '\\n' + x.sql + '\\n'; }).join('\\n'),\r\n            ranges.filter(function(x) { return x.error; }).map(function(x) { return x.title + ':<br>' + x.error + '<br>'; }).join('<br>'));\r\n\r\n        return true;\r\n    };\r\n\r\n    ChartDetails.prototype.canExport = function() {\r\n        return this.enableExport;\r\n    };\r\n\r\n    ChartDetails.prototype.toggleExport = function(val) {\r\n        this.enableExport = val;\r\n    };\r\n\r\n    ChartDetails.prototype.destroy = function() {\r\n        $.destroy(this.rangeForm);\r\n        $.destroy(this.chart);\r\n    };\r\n\r\n    return ChartDetails;\r\n});\r\n\r\n/*!\r\n * Functionality for displaying chart forms.\r\n */\r\n(function($, Alertify, Chart, ChartDetails, ShareForm) {\r\n    'use strict';\r\n\r\n    // Change chart settings.\r\n    Chart.defaults.global.responsive = true;\r\n    Chart.defaults.global.maintainAspectRatio = false;\r\n    Chart.defaults.global.title.display = false;\r\n    Chart.defaults.global.legend.position = 'bottom';\r\n    Chart.defaults.global.legend.labels.fontSize = 16;\r\n    Chart.defaults.global.legend.labels.fontFamily = 'Calibri';\r\n    Chart.defaults.global.layout = { padding: 10 };\r\n    Chart.defaults.scale.ticks.fontFamily = 'Calibri';\r\n    Chart.defaults.scale.ticks.fontSize = 12;\r\n\r\n    var _charts = {};\r\n    var _shares = {};\r\n\r\n    /**\r\n     * Request settings to display a chart and call the method to initialize it.\r\n     */\r\n    $.on(document, 'chartLoad', function(e) {\r\n        var form = $.isNode(e) ? e : e.target;\r\n        if (!$.hasClass(form, 'chart-form')) {\r\n            return;\r\n        }\r\n\r\n        var id = form.getAttribute('data-id');\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-url'),\r\n            headers: {\r\n                'Content-Type': 'application/jil; charset=utf-8',\r\n                'Accept': 'application/jil'\r\n            }\r\n        }, function(data) {\r\n            data.content = form;\r\n            _charts[id] = new ChartDetails(data);\r\n        });\r\n    }, true);\r\n\r\n    /**\r\n     * Clean up when closing the chart dialog.\r\n     */\r\n    $.on(document, 'chartUnload', function(e) {\r\n        var form = $.isNode(e) ? e : e.target;\r\n        var id = form.getAttribute('data-id');\r\n        var chart = _charts[id];\r\n        if (chart) {\r\n            chart.destroy();\r\n        }\r\n        delete _charts[id];\r\n    }, true);\r\n\r\n    /**\r\n     * Load the settings to display the chart share form.\r\n     */\r\n    $.on(document, 'chartShareLoad', function(e) {\r\n        var form = $.isNode(e) ? e : e.target;\r\n        if (!$.hasClass(form, 'chart-share-form')) {\r\n            return;\r\n        }\r\n\r\n        var id = form.getAttribute('data-id');\r\n        _shares[id] = new ShareForm({ content: form, formName: 'Shares' });\r\n        _shares[id].run();\r\n    }, true);\r\n\r\n    /**\r\n     * Clean up when the chart share dialog closes.\r\n     */\r\n    $.on(document, 'chartShareUnload', function(e) {\r\n        var form = $.isNode(e) ? e : e.target;\r\n        var id = form.getAttribute('data-id');\r\n        var share = _shares[id];\r\n        if (share) {\r\n            share.destroy();\r\n        }\r\n        delete _shares[id];\r\n    }, true);\r\n})(this.$, this.Alertify, this.Chart, this.ChartDetails, this.ShareForm);\r\n","/*!\r\n * Wraps functionality for displaying/moving/resizing widgets and their contents.\r\n */\r\n(function($, Widget) {\r\n    'use strict';\r\n\r\n    var _columns = 20;\r\n    var _rows = 20;\r\n    var _currentPositions = null;\r\n    var _windowEvents = null;\r\n\r\n    /**\r\n     * Make the extra options needed to create a widget.\r\n     * @param {Node} dashboard - Dashboard node.\r\n     * @returns {Object} Object with grid and layoutCallback.\r\n     */\r\n    var makeWidgetOpts = function(dashboard) {\r\n        dashboard = $.coalesce(dashboard, $.get('#bodyContent'));\r\n        return {\r\n            grid: { columns: _columns, rows: _rows, columnWidth: dashboard.parentNode.offsetWidth / _columns, rowHeight: dashboard.parentNode.offsetHeight / _rows },\r\n            layoutCallback: $.debounce(updatePosition, 100)\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Get the config for the dashboard from the server.\r\n     */\r\n    $.on(document, 'dashboardLoad', function() {\r\n        var dash = $.get('#bodyContent');\r\n        if (!dash) {\r\n            return;\r\n        }\r\n        var json = dash.getAttribute('data-json');\r\n        if (json) {\r\n            dash.removeAttribute('data-json');\r\n\r\n            var widgets = $.coalesce(JSON.parse(json), []);\r\n            var opts = makeWidgetOpts(dash);\r\n            if (widgets.length) {\r\n                widgets.forEach(function(x) { new Widget($.extend(x, opts)); });\r\n                _windowEvents = {\r\n                    keydown: checkKeyPress,\r\n                    resize: $.debounce(resizeLayout, 100)\r\n                };\r\n                $.on(window, 'keydown', _windowEvents.keydown);\r\n                $.on(window, 'resize', _windowEvents.resize);\r\n            }\r\n        }\r\n    }, true);\r\n\r\n    /**\r\n     * Destory dashboard.\r\n     */\r\n    $.on(document, 'dashboardUnload', function() {\r\n        var dash = $.get('#bodyContent.dashboard');\r\n        if (!(dash)) {\r\n            return;\r\n        }\r\n\r\n        var widgets = getWidgets();\r\n        if (widgets.length) {\r\n            // any widgets still left need to be deleted\r\n            widgets.forEach(function(x) { x.destroy(true); });\r\n        }\r\n        if (_windowEvents) {\r\n            $.off(window, 'keydown', _windowEvents.keydown);\r\n            $.off(window, 'resize', _windowEvents.resize);\r\n        }\r\n        _windowEvents = null;\r\n    }, true);\r\n\r\n    /**\r\n     * Get the widget objects for the dashboard.\r\n     * @returns {Widget[]} Array of widgets.\r\n     */\r\n    var getWidgets = function() {\r\n        return $.getAll('.grid-item').map(function(x) { return x.widget; });\r\n    };\r\n\r\n    /**\r\n     * Update widget tables on window resize.\r\n     */\r\n    var resizeLayout = function() {\r\n        var grid = makeWidgetOpts().grid;\r\n        getWidgets().forEach(function(x) {\r\n            x.updateLayout();\r\n            x.setupDraggie(null, grid);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Update widget position to avoid collisions after a resize or drag.\r\n     */\r\n    var updatePosition = function() {\r\n        var sorted = getWidgets();\r\n        sorted.sort(rectSort);\r\n\r\n        var l = sorted.length, aWidget, bWidget;\r\n        for (var i = 0; i < l; i++) {\r\n            aWidget = sorted[i];\r\n            aWidget.rect.updated = false;\r\n\r\n            for (var j = 0; j < l; j++) {\r\n                if (i === j) {\r\n                    continue;\r\n                }\r\n\r\n                bWidget = sorted[j];\r\n                if (bWidget.rect.overlaps(aWidget.rect)) {\r\n                    if (bWidget.rect.y > aWidget.rect.y) {\r\n                        // need to move down\r\n                        bWidget.setLocation(bWidget.rect.x, aWidget.rect.y + aWidget.rect.height);\r\n                    } else if (aWidget.rect.x + aWidget.rect.width + bWidget.rect.width > _columns) {\r\n                        // need to move down\r\n                        bWidget.setLocation(bWidget.rect.x, aWidget.rect.y + aWidget.rect.height);\r\n                    } else {\r\n                        // safe to move right\r\n                        bWidget.setLocation(aWidget.rect.x + aWidget.rect.width, bWidget.rect.y);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        saveDashboard();\r\n    };\r\n\r\n    /**\r\n     * Sort widgets from top left to bottom right.\r\n     * @param {Widget} a - First widget to compare.\r\n     * @param {Widget} b - Second widget to compare.\r\n     * @returns {number} Negative number if a comes first, positive number if b, zero if equal.\r\n     */\r\n    var rectSort = function(a, b) {\r\n        if (a.rect.y === b.rect.y && a.rect.x === b.rect.x) {\r\n            return a.rect.updated ? -1 : b.rect.updated ? 1 : 0;\r\n        }\r\n        if (a.rect.x === b.rect.x) {\r\n            return a.rect.y - b.rect.y;\r\n        }\r\n        return a.rect.x - b.rect.x;\r\n    };\r\n\r\n    /**\r\n     * Save dashboard settings back to server.\r\n     */\r\n    var saveDashboard = function() {\r\n        var positions = getWidgets().map(function(w) {\r\n            return {\r\n                Id: w.opts.id || 0,\r\n                Width: w.rect.width || 1,\r\n                Height: w.rect.height || 1,\r\n                X: w.rect.x || 0,\r\n                Y: w.rect.y || 0\r\n            };\r\n        });\r\n\r\n        if (_currentPositions && $.equals(_currentPositions, positions)) {\r\n            return;\r\n        }\r\n        _currentPositions = positions;\r\n\r\n        var dash = $.get('#bodyContent');\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: dash.getAttribute('data-save-url'),\r\n            data: { Widgets: positions },\r\n            block: false,\r\n            headers: {\r\n                'Content-Type': 'application/jil; charset=utf-8',\r\n                'Accept': 'application/jil'\r\n            }\r\n        }, null);\r\n    };\r\n\r\n    /**\r\n     * Toggle full screen on escape key.\r\n     * @param {Event} evt - Key press event.\r\n     */\r\n    var checkKeyPress = function(evt) {\r\n        evt = evt || window.event;\r\n        if (evt.keyCode === 27) {\r\n            getWidgets().filter(function(x) { return x.isFullscreen; }).forEach(function(x) { x.toggleFullScreen(); });\r\n        }\r\n    };\r\n})(this.$, this.Widget);\r\n"]}