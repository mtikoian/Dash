{"version":3,"sources":["native.bootstrap.js","fecha.js","accounting.js","Help.js","Dialog.js","Autocomplete.js","DatePicker.js","Rect.js","Draggabilly.js","Chart.js","Prism.js","CollapsibleList.js","Validator.js","colors.js","ColorPicker.js","Table.js","DashChart.js","Form.js","JoinForm.js","ColumnForm.js","ShareForm.js","FilterForm.js","GroupForm.js","RangeForm.js","Dataset.js","BaseDetails.js","ReportDetails.js","ChartDetails.js","Widget.js","dialogs.js","datasets.js","reports.js","charts.js","dashboard.js"],"names":["root","factory","Tab","$","element","this","tab","get","tabs","parentNode","duration","init","prototype","actions","on","action","self","e","window","preventDefault","next","target","nextContent","getAttribute","activeTab","getActiveTab","activeContent","getActiveContent","hasClass","removeClass","getAll","addClass","setTimeout","activeTabs","length","a","b","shorten","arr","sLen","newArr","i","len","push","substr","monthUpdate","arrName","d","v","i18n","index","indexOf","charAt","toUpperCase","toLowerCase","month","pad","val","String","fecha","token","twoDigits","word","literal","noop","dayNames","monthNames","monthNamesShort","dayNamesShort","amPm","DoFn","D","formatFlags","dateObj","getDate","DD","Do","getDay","dd","ddd","dddd","M","getMonth","MM","MMM","MMMM","YY","getFullYear","YYYY","h","getHours","hh","H","HH","m","getMinutes","mm","s","getSeconds","ss","S","Math","round","getMilliseconds","SS","SSS","A","ZZ","o","getTimezoneOffset","floor","abs","l","onejan","Date","ceil","ll","q","parseFlags","day","RegExp","source","parseInt","cent","year","hour","minute","second","millisecond","isPm","minutes","parts","match","timezoneOffset","masks","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","format","mask","i18nSettings","isNaN","getTime","literals","replace","$0","$1","slice","shift","parse","dateStr","Error","isValid","dateInfo","isUtc","info","search","result","today","date","UTC","lib","version","settings","currency","symbol","decimal","thousand","precision","grouping","number","tokens","value","checkPrecision","parseFormat","isString","x","res","newFormat","exec","unformat","regex","unformatted","parseFloat","toFixed","power","pow","formatNumber","opts","extend","usePrecision","negative","base","mod","split","accounting","formatMoney","formats","isFunction","pos","neg","zero","checkCurrencyFormat","Help","Alertify","oninit","vnode","attrs","enabled","message","showHelp","alert","dialogs","focusOnClose","bind","view","children","concat","type","role","onclick","isArray","Dialog","Table","id","title","basic","buttons","_buttons","content","onOkay","onCancel","onShow","parent","elements","container","changed","run","ok","cancel","close","_keys","ENTER","ESC","tryGetValue","field","fieldName","name","pop","substring","isNull","trySetValue","obj","hasOwnProperty","onkeydown","checkKey","tabindex","class","contentView","component","data","trust","oncreate","node","dom","firstElementChild","hasAttribute","redraw","document","createElement","body","appendChild","mount","processContent","checkEvent","getId","getContainer","getContent","getTarget","findForm","matches","call","focusNode","form","validateForm","formData","serializeForm","ajax","method","url","__RequestVerificationToken","responseData","parentDlg","findDialogById","parentTarget","destroy","closeParent","dialogUrl","sendAjaxRequest","confirm","resx","focus","keyCode","attrName","ev","events","dispatchEvent","bracketRegEx","disabled","Array","apply","options","filter","selected","map","checked","pieces","setTabStatus","el","closest","toggleClass","forEach","formValidate","mErrors","error","tableNode","table","removeChild","removeDialog","refreshTable","Autocomplete","DOWN","TAB","UP","valueChanged","placeholder","active","required","onSelect","list","filteredList","selectedIndex","onupdate","autocomplete","setList","onKeyDown","selectItem","stopPropagation","selectIndex","min","max","onInput","onBlur","ul","scrollIntoView","item","input","highlightItem","text","regExpEscape","trim","hasValue","aria-autocomplete","oninput","onblur","aria-selected","onmousedown","DatePicker","chooseDate","props","box","selectedDate","textContent","setFullYear","setDate","dismissAndCommit","relatedTarget","onchange","prevNext","delta","newDate","setMonth","pushToLastDay","lastDateInMonth","over","under","adjustedProps","oldDate","stringsForLocale","locale","_months","_days","toLocaleDateString","weekday","days","months","classForBox","SPACE","hours","prevNextTitles","weekStart","formatOptions","Header","theseMonths","MonthView","prevDates","firstDay","array","lastDate","daysFromLastMonth","theseDates","daysFromThisMonth","nextDates","prev","these","n","daysFromNextMonth","theseWeekdays","_","idx","wrapAround","setHours","setMinutes","YearView","DecadeView","decade","start","yearsForDecade","Editor","requestAnimationFrame","classList","add","onbeforeremove","remove","Promise","done","localize","loc","isNumber","strings","now","defaultDate","prop","state","onbeforeupdate","chosen","showEditor","KeyboardEvent","readonly","Rect","width","height","y","coalesce","updated","overlaps","rect","thisRight","thisBottom","rectRight","rectBottom","getSize","getStyleSize","num","elem","isSetup","div","style","padding","borderStyle","borderWidth","boxSizing","documentElement","getComputedStyle","isBoxSizeOuter","setup","isNode","display","size","innerWidth","innerHeight","outerWidth","outerHeight","measurementsLength","measurements","getZeroSize","offsetWidth","offsetHeight","isBorderBox","measurement","paddingWidth","paddingLeft","paddingRight","paddingHeight","paddingTop","paddingBottom","marginWidth","marginLeft","marginRight","marginHeight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderHeight","borderTopWidth","borderBottomWidth","isBorderBoxSizeOuter","styleWidth","styleHeight","EvEmitter","eventName","listener","_events","listeners","off","splice","emitEvent","args","Unipointer","proto","Object","create","bindStartEvent","_bindStartEvent","unbindStartEvent","isBind","bindMethod","navigator","pointerEnabled","msPointerEnabled","handleEvent","event","getTouch","touches","findByKey","pointerIdentifier","button","_pointerDown","ontouchstart","changedTouches","onMSPointerDown","onpointerdown","pointer","isPointerDown","undefined","pointerId","identifier","pointerDown","_bindPostStartEvents","postStartEvents","mousedown","touchstart","pointerdown","MSPointerDown","addEventListener","_boundPointerEvents","_unbindPostStartEvents","removeEventListener","onmousemove","_pointerMove","onMSPointerMove","onpointermove","ontouchmove","touch","pointerMove","onmouseup","_pointerUp","onMSPointerUp","onpointerup","ontouchend","_pointerDone","pointerUp","pointerDone","onMSPointerCancel","onpointercancel","_pointerCancel","ontouchcancel","pointerCancel","getPointerPoint","pageX","pageY","Unidragger","bindHandles","_bindHandles","unbindHandles","binderExtra","handle","handles","nodeName","_dragPointerDown","focused","activeElement","blur","pointerDownPoint","canPreventDefaultOnPointerDown","moveVector","_dragPointerMove","_dragMove","movePoint","isDragging","hasDragStarted","_dragStart","_dragPointerUp","_dragEnd","_staticClick","dragStartPoint","isPreventingClicks","dragStart","dragMove","dragEnd","isIgnoringMouseUp","staticClick","Draggabilly","_create","applyGrid","grid","applyMinZero","drag","lastTime","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","currTime","timeToCall","transformProperty","transform","positionValues","relative","absolute","fixed","position","_getPosition","startPoint","dragPoint","startPosition","enable","setHandles","_getPositionCoord","left","top","_addTransformPosition","styleSide","measure","parentSize","matrixValues","xIndex","translateX","translateY","isEnabled","measureContainment","setLeftTop","animate","containment","elemSize","containerSize","elemRect","getBoundingClientRect","containerRect","borderSizeX","borderSizeY","relativeStartPosition","containSize","dragX","dragY","gridX","gridY","containDrag","axis","minZero","positionDrag","disable","removeAttribute","f","exports","module","define","amd","global","Chart","t","r","u","require","code","1","getRgba","string","rgb","colorNames","scale","getHsla","alpha","getHwb","rgbaString","rgba","percentaString","hslaString","hsla","hexDouble","str","toString","getRgb","getHsl","getAlpha","vals","hexString","rgbString","percentString","hslString","hwbString","hwb","keyword","reverseNames","5","2","convert","Color","valid","values","hsl","hsv","cmyk","setValues","red","lightness","w","whiteness","c","cyan","setSpace","arguments","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","p","w1","w2","toJSON","clone","console","spaces","maxes","getValues","space","chans","capped","sname","svalues","4","3","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","k","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","hwb2rgb","wh","bl","cmyk2rgb","xyz2rgb","xyz2lab","lab2xyz","lab","y2","lab2lch","hr","atan2","PI","sqrt","lab2rgb","lch2lab","lch","cos","sin","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","key","conversions","Converter","func","arg","pair","from","to","convs","routeSpace","fspace","6","helpers","defaults","Element","Interaction","layouts","platform","plugins","Ticks","register","initialize","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","31","36","39","40","44","45","46","7","8","9","Bar","context","config","Doughnut","Line","_set","hover","mode","scales","xAxes","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","yAxes","rectangle","borderSkipped","tooltips","callbacks","yLabel","labels","label","datasets","datasetIndex","xLabel","controllers","bar","DatasetController","dataElementType","Rectangle","meta","getMeta","stack","getDataset","update","reset","ilen","rects","_ruler","getRuler","updateElement","chart","dataset","custom","rectangleOptions","_xScale","getScaleForId","xAxisID","_yScale","yAxisID","_datasetIndex","_index","_model","datasetLabel","backgroundColor","valueAtIndexOrDefault","borderColor","updateElementGeometry","pivot","model","vscale","getValueScale","getBasePixel","horizontal","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","last","stacked","stacks","getDatasetMeta","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","isNullOrUndef","barThickness","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","count","computeFitCategoryTraits","stackIndex","valueOrDefault","maxBarThickness","Infinity","draw","canvas","clipArea","ctx","chartArea","unclipArea","setHoverStyle","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","rectangleElementOptions","horizontalBar","animation","animateRotate","animateScale","legendCallback","join","legend","generateLabels","ds","arc","arcOpts","fillStyle","strokeStyle","lineWidth","hidden","onClick","legendItem","cutoutPercentage","rotation","circumference","tooltipItem","dataLabel","doughnut","pie","Arc","linkScales","getRingIndex","ringIndex","j","me","availableWidth","right","availableHeight","bottom","minSize","startAngle","endAngle","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","each","animationOpts","centerX","centerY","calculateCircumference","arcs","hoverWidth","_chart","showLines","spanGaps","lineEnabled","showLine","line","datasetElementType","Point","points","lineElementOptions","tension","lineTension","_scale","_children","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","fill","steppedLine","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","point","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","yScale","xScale","pointOptions","radius","pointRadius","hitRadius","pointHitRadius","NaN","calculatePointY","skip","pointStyle","dsMeta","sumPos","sumNeg","stackedRightValue","Number","rightValue","capControlPoint","pt","controlPoints","area","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","controlPointNextY","capBezierPoints","hoverRadius","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","easing","onProgress","onComplete","Animation","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","framesToDrop","advance","endTime","defineProperty","set","positionIsHorizontal","types","instances","construct","configMerge","initConfig","acquireContext","uid","aspectRatio","_bufferedRender","notify","retinaScale","devicePixelRatio","bindEvents","responsive","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","clear","stop","silent","maintainAspectRatio","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","responsiveAnimationDuration","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","items","keys","reduce","dtype","dposition","isDefault","scaleType","scaleClass","scaleService","getScaleConstructor","mergeTicksOptions","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","ControllerClass","resetElements","tooltip","newOptions","removeBox","_options","updateConfig","_invalidate","_data","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","effects","stepDecimal","easingValue","transition","boxes","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","modes","single","getElementsAtEvent","intersect","getElementsAtXAxis","getElementsAtEventForMode","getDatasetAtEvent","_meta","generateLegend","unbindEvents","releaseContext","toBase64Image","toDataURL","Tooltip","_chartInstance","_listeners","eventHandler","updateHoverStyle","_start","bufferedRequest","animationDuration","hoverOptions","onHover","native","arrayEquals","Controller","unlistenArrayEvents","stub","_chartjs","arrayEvents","addElements","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","configurable","enumerable","object","listenArrayEvents","resyncElements","elementOpts","numMeta","numData","insertElements","onDataPush","onDataPop","onDataShift","onDataSplice","onDataUnshift","inherits","scope","merge","color","configuration","_view","ease","actual","origin","c0","c1","isFinite","interpolate","tooltipPosition","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","constrainedNode","constrainedContainer","hasCNode","hasCContainer","infinity","POSITIVE_INFINITY","merger","tval","sval","scaleMerge","getScaleDefaults","_merger","slen","where","collection","filterCallback","filtered","findNextWhere","arrayToSearch","startIndex","currentItem","findPreviousWhere","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","log10","exponent","log","LOG10E","powerOf10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distance","distanceBetweenPoints","pt1","pt2","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","current","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","alphaK","betaK","tauK","squaredMagnitude","deltaX","loop","niceNum","fraction","oRequestAnimationFrame","msRequestAnimationFrame","getRelativePosition","evt","mouseX","mouseY","originalEvent","currentTarget","srcElement","boundingRect","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","clientWidth","cw","clientHeight","ch","property","currentStyle","getPropertyValue","forceRatio","pixelRatio","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","cache","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","defaultColor","colorValue","CanvasPattern","parseVisibleItems","handler","jlen","getIntersectItems","inRange","getNearestItems","distanceMetric","minDistance","nearestItems","getCenterPoint","getDistanceMetricForAxis","useX","useY","deltaY","indexMode","x-axis","nearest","sort","ret","getArea","intersectsItem","inXRange","inYRange","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","layout","filterByPosition","sortByWeight","reverse","_tmpIndex_","v0","v1","addBox","fullWidth","layoutItem","configure","fitBox","minBoxSize","minBoxSizes","minBox","scaleMargin","totalLeftBoxesWidth","maxHorizontalLeftPadding","totalRightBoxesWidth","maxHorizontalRightPadding","chartWidth","maxChartAreaWidth","chartHeight","maxChartAreaHeight","placeBox","leftPadding","rightPadding","totalTopBoxesHeight","layoutOptions","toPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","totalBottomBoxesHeight","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","_plugins","_cacheId","plugin","unregister","hook","descriptor","params","descriptors","$plugins","labelsFromTicks","getLineValue","lineValue","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","formatters","minor","major","computeTextSize","tick","parseFontOptions","globalDefaults","fontSize","family","parseLineHeight","toLineHeight","Scale","_ticks","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","rawValue","getLabelForIndex","getValueForPixel","pixel","finalVal","getPixelForDecimal","valueOffset","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","optionMajorTicks","isRotated","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","zeroLineIndex","tx1","ty1","tx2","ty2","x1","y1","x2","labelX","labelY","textAlign","textBaseline","labelYOffset","xLineValue","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","save","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","constructors","registerScaleType","scaleConstructor","scaleDefaults","updateScaleDefaults","additions","linear","tickValue","logDelta","tickString","numDecimal","logarithmic","remain","toExponential","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","createTooltipItem","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","dataPoints","vm","paddingAndSize","radiusAndPadding","getBackgroundPoint","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","quadraticCurveTo","closePath","hasTooltipContent","average","eventPosition","nearestElement","tp","27","inLabelRange","chartX","chartY","pointRelativePosition","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","28","currentVM","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","29","xRange","drawPoint","30","isVertical","getBarBounds","halfWidth","halfHeight","cornerAt","corners","startCorner","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corner","bounds","32","clearRect","roundedRect","rx","ry","edgeLength","xOffset","yOffset","SQRT2","leftX","topY","sideSize","drawImage","clip","flip","bezierCurveTo","drawRoundedRectangle","33","isObject","defaultValue","fn","thisArg","loopable","a0","a1","klen","_mergerIf","mergeIf","sources","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","34","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","35","resolve","inputs","37","getContext","38","readUsedSize","eventListenerOptions","createEvent","nativeEvent","addResizeListener","expando","EXPANDO_KEY","resizer","cls","CSS_PREFIX","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","createResizer","ticking","throttled","proxy","renderProxy","animationName","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","reflow","offsetParent","CSS_RENDER_MONITOR","watchForRender","insertBefore","firstChild","removeResizeListener","unwatchForRender","EVENT_TYPES","touchmove","touchend","pointerenter","pointermove","pointerup","pointerleave","pointerout","supports","passive","_enabled","getElementById","renderHeight","renderWidth","initial","displayWidth","displayHeight","initCanvas","setAttribute","proxies","fromNativeEvent","addEvent","removeEvent","implementation","filler","41","42","43","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","getBasePosition","resolveTarget","propagate","visited","visible","createMapper","mappers","isDrawable","drawArea","curve0","curve1","len0","len1","boundary","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","span","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","createNewLegendAndAttach","legendOpts","Legend","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","_element","beforeInit","afterEvent","createNewTitleBlockAndAttach","titleOpts","Title","titleBlock","textSize","titleX","titleY","titleFont","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","LinearScaleBase","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","tickFontSize","handleDirectionalChanges","innerDimension","ticksAsNumbers","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","stepSize","fixedStepSize","generationOptions","dataRange","spacing","niceRange","niceMin","niceMax","numSpaces","generateTicks","lang","prism","util","encode","Token","alias","languages","redef","inside","insert","grammar","newToken","DFS","highlightAll","async","querySelectorAll","highlightElement","language","test","env","hooks","Worker","worker","filename","onmessage","highlightedCode","postMessage","immediateClose","highlight","tokenize","strarr","rest","tokenloop","patterns","pattern","lookbehind","lookbehindLength","lastIndex","wrapped","all","tag","classes","attributes","aliases","Prism","sql","comment","variable","function","boolean","operator","punctuation","CollapsibleList","lis","createClickListener","toggle","pi","checkedRelative","relatives","forceOpen","open","uls","li","Validator","errorMsgs","_errors","targetElement","resetAll","validateInput","onSubmit","validate","minlength","VALIDATORS","checkValidity","setCustomValidity","isValidatableInput","defaultPrevented","errors","runValidators","showErrors","clearErrors","inputSelector","results","visibility","tagName","validator","attr","validationMessage","group","block","errorElement","errHtml","hasErrors","colors","hex2rgb","hex","ColorPicker","LEFT","RIGHT","selectColor","swatches","trigger","data-value","pageOptions","store","myKey","isUndefined","storageFunction","localStorage","itemsPerPage","currentStartItem","searchQuery","sorting","columns","processData","dataCallback","rows","intColumns","dateColumns","dataDateFormat","currencyColumns","filteredTotal","loading","filterResults","loadData","loadingError","requestMethod","buildParams","errorCallback","refresh","dir","requestUsePascalCase","requestParams","StartItem","Items","Query","Sort","toPascalKeys","startItem","query","setCurrentStartItem","setItemsPerPage","setSearchQuery","clearTimeout","requestTimer","runSearch","inputTimeout","loadAllData","filterArray","pageTotal","moveToPage","changePage","page","changeSort","dataType","shiftKey","getSelection","removeAllRanges","_i","compare","defaultCompare","setLayout","layoutSet","tableLayout","tableHeaderRow","tHead","hWidth","tWidth","cells","cWidth","pixelToFloat","isVisible","colGroup","scroll","offsetLeft","onHeaderMouseDown","inResizeArea","cellEl","stopImmediatePropagation","resizeContext","colIndex","cellIndex","initX","scrWidth","initTblWidth","initColWidth","layoutTimer","onMouseMove","newStyle","newColWidth","columnMinWidth","onMouseUp","newTblWidth","tblX","clientLeft","previousElementSibling","touchHandler","mouseEvent","simulatedEvent","totalDistance","lastSeenAt","initMouseEvent","screenX","screenY","getFieldValue","getDisplayValue","displayCurrencyFormat","displayDateFormat","aa","bb","tableHeaders","sortable","arrowAttrs","editable","searchable","headerButtons","resources","perPage","onscroll","colGroups","tableBodyView","tableFooterView","tableCellView","column","columnRenderer","tableRowView","colspan","tryAgain","noData","currentPage","pageDropdown","optionList","firstPage","previousPage","nextPage","lastPage","showing","hasPositiveValue","links","link","href","isBtn","icon","debounce","move","up","header","tableRefresh","layoutUpdate","onremove","DashChart","showLegend","dataFn","errorFn","toggleExportFn","randomWithin","random","randomColor","randomColors","cnt","parseColor","show","hide","ranges","some","yTitle","xType","currencyFormat","dateFormat","chartType","isRadial","yType","chartData","Form","records","wantsHelp","appendRecord","deleteRecord","confirmDelete","confirmDeleteAll","areYouSure","moveUp","moveDown","help","addedCount","targetVal","setter","addRecord","newRecord","unshift","deleteFn","afterDeleteFn","deleteAllRecords","hasRecords","keyInput","withHelp","helpBody","innerContent","withError","requirePositive","isDate","withDisabled","isDisabled","withChecked","isChecked","withOptions","selectedValue","valueKey","textKey","buttonView","includeMove","btns","JoinForm","joinTypeId","tableName","columnUpdateFn","joins","joinTypes","sourceFn","setJoinTable","isProc","record","ColumnForm","columnName","dataTypeId","derived","filterTypeId","filterQuery","isParam","isExpanded","dataTypes","filterTypes","columnFn","selectedSourceFn","columnTitleSort","aTitle","bTitle","toggleExpanded","checkStatus","database","primarySource","importColumns","databaseId","newColumns","newRecords","existingColumns","colName","success","import","readOnly","for","ShareForm","formOpts","userId","roleId","shares","users","userList","roles","roleList","formName","userSelectAttr","share","roleSelectAttr","FilterForm","columnId","operatorId","criteria","criteria2","allowEdit","filters","reportId","saveFiltersUrl","filterOperators","filterOperatorIds","dateOperators","lookups","dataTable","boolOptions","setColumnId","setOperator","setCriteria","criteriaJson","saveFilters","Id","Filters","criteriaView","select","isRange","dateInterval","equal","multiple","lookup","numeric","isDatePicker","attrs2","criteriaArr","operatorView","filterView","filterColumns","GroupForm","displayOrder","groups","saveGroupsUrl","aggregator","aggregatorId","aggregators","saveGroups","GroupAggregator","Groups","setAggregator","groupView","RangeForm","xAxisColumnId","yAxisColumnId","dateIntervalId","chartId","saveRangesUrl","dateIntervals","reports","processJsonFn","canExportFn","saveRanges","Ranges","makeChart","chartContent","dashChart","exportChart","chartContainer","submit","setReport","rangeView","report","xColumns","yColumns","dateIntervalDisabled","inputsDisabled","col","Dataset","sourceList","columnList","formChanged","selectedSourceList","checkType","loadSourceList","loadColumnList","joinForm","getSourceList","columnForm","getColumnList","getSelectedSourceList","onChange","primary","updateColumnList","updateSelectedSources","equals","updateList","DatabaseId","Tables","typeId","tables","BaseDetails","openDialog","outerHTML","initDate","processJson","json","updatedDate","updateDate","dataSql","setSql","dataError","countSql","countError","ReportDetails","reportColumns","saveUrl","saveColumnsUrl","saveStorageFunc","previousColumnWidths","Columns","ReportWidth","dataUrl","Save","exportUrl","rowLimit","sortColumns","filterForm","groupForm","ChartDetails","enableExport","rangeForm","canExport","toggleExport","chartLoad","Widget","buildClassList","widget","isData","refreshSeconds","baseUrl","interval","isFullscreen","dragMargin","tableOpts","reportRowLimit","reportWidth","onError","setupDraggie","setInterval","setText","firstRender","createNode","forceRefresh","toggleFullScreen","deleteWidget","toLocaleTimeString","moveDraggie","columnWidth","rowHeight","stopDrag","resizeDraggie","initResize","stopResize","setLocation","layoutCallback","styles","setSize","reload","showMsg","hasOpenDialog","updatedAt","innerText","clearInterval","updateStyle","totalDestruction","fullScreenIcon","_contentActions","selector","tableLoad","handleAjaxRequest","inputReplace","_dialogs","dlgs","getActiveDialog","dlg","dismissAll","prompt","checkPrompt","promptValue","encodeURIComponent","updateObj","targetSelector","dialog","html","activeDlg","elems","isEvent","act","activeDialog","dashboard","_datasets","_reports","_shares","startDrag","newPos","offsetTop","leftItems","columnSort","rightItems","updateColumn","dashboardReload","_charts","_currentPositions","widgets","makeWidgetOpts","checkKeyPress","resizeLayout","updatePosition","dash","widgetOpts","getWidgets","widgetDate","widgetDateUpdated","oldWidget","sorted","rectSort","aWidget","bWidget","saveDashboard","positions","Width","Height","X","Y","Widgets","pageLoaded","dashboardLoad","resxLoaded"],"mappings":"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","file":"modules.js","sourcesContent":["/*!\r\n * Native Javascript for Bootstrap 3\r\n * by dnp_theme\r\n * https://github.com/thednp/bootstrap.native\r\n *\r\n * Modified to use Dash's core library, and remove unneeded functionality.\r\n */\r\n(function(root, factory) {\r\n    root.Tab = factory(root.$);\r\n})(this, function($) {\r\n    /**\r\n     * Declare Tab class.\r\n     * @param {Node} element - Node to trigger the tab.\r\n     */\r\n    var Tab = function(element) {\r\n        this.tab = $.get(element);\r\n        this.tabs = this.tab.parentNode.parentNode;\r\n        this.duration = 100;\r\n        this.init();\r\n    };\r\n\r\n    Tab.prototype = {\r\n        init: function() {\r\n            this.actions();\r\n            $.on(this.tab, 'click', this.action, false);\r\n        },\r\n\r\n        actions: function() {\r\n            var self = this;\r\n\r\n            /**\r\n             * Display content of a tab.\r\n             * @param {Event} e - Event that triggered the tab change.\r\n             */\r\n            this.action = function(e) {\r\n                e = e || window.e; e.preventDefault();\r\n                var next = e.target; //the tab we clicked is now the next tab\r\n                var nextContent = $.get(next.getAttribute('href')); //this is the actual object, the next tab content to activate\r\n\r\n                // get current active tab and content\r\n                var activeTab = self.getActiveTab();\r\n                var activeContent = self.getActiveContent();\r\n\r\n                if (!$.hasClass(next.parentNode, 'active')) {\r\n                    // toggle \"active\" class name\r\n                    $.removeClass($.getAll('a', activeTab)[0], 'active');\r\n                    $.addClass(next, 'active');\r\n\r\n                    //1. hide current active content first\r\n                    $.removeClass(activeContent, 'show');\r\n\r\n                    setTimeout(function() {\r\n                        //2. toggle current active content from view\r\n                        $.removeClass(activeContent, 'active');\r\n                        $.addClass(nextContent, 'active');\r\n                    }, self.duration);\r\n                    setTimeout(function() {\r\n                        //3. show next active content\r\n                        $.addClass(nextContent, 'show');\r\n                    }, self.duration * 2);\r\n                }\r\n            };\r\n\r\n            /**\r\n            * Gets the currently active tab.\r\n            * @returns {Node} Active tab element.\r\n            */\r\n            this.getActiveTab = function() {\r\n                var activeTabs = $.getAll('.active', this.tabs);\r\n                if (activeTabs.length === 1) {\r\n                    return activeTabs[0].parentNode;\r\n                } else if (activeTabs.length > 1) {\r\n                    return activeTabs[activeTabs.length - 1].parentNode;\r\n                }\r\n            };\r\n\r\n            /**\r\n            * Get the currently active tab content.\r\n            * @returns {Node} Active content element\r\n            */\r\n            this.getActiveContent = function() {\r\n                var a = this.getActiveTab();\r\n                var b = a && $.getAll('a', a);\r\n                return b.length && $.get(b[0].getAttribute('href'));\r\n            };\r\n        }\r\n    };\r\n\r\n    return Tab;\r\n});\r\n","/*!\r\n * Lightweight date library\r\n * https://github.com/taylorhakes/fecha\r\n *\r\n * Modified to add date manipulation methods similar to moment.js.\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Parse or format dates\r\n     * @class fecha\r\n     */\r\n    var fecha = {};\r\n    var token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\r\n    var twoDigits = /\\d\\d?/;\r\n    var threeDigits = /\\d{3}/;\r\n    var fourDigits = /\\d{4}/;\r\n    var word = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\r\n    var literal = /\\[([^]*?)\\]/gm;\r\n    var noop = function() { };\r\n\r\n    /**\r\n     * Abbreviate a string.\r\n     * @param {string[]} arr - Array of strings to shorten.\r\n     * @param {number} sLen - Max length of new strings.\r\n     * @returns {string[]} New array of strings.\r\n     */\r\n    function shorten(arr, sLen) {\r\n        var newArr = [];\r\n        for (var i = 0, len = arr.length; i < len; i++) {\r\n            newArr.push(arr[i].substr(0, sLen));\r\n        }\r\n        return newArr;\r\n    }\r\n\r\n    /**\r\n     * Update months names based on i18n resource.\r\n     * @param {string[]} arrName - Array of month names.\r\n     * @returns {string[]} Updated array of month names.\r\n     */\r\n    function monthUpdate(arrName) {\r\n        return function(d, v, i18n) {\r\n            var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());\r\n            if (~index) {\r\n                d.month = index;\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Left pad a number to length len using zeros.\r\n     * @param {number|string} val - Value to pad.\r\n     * @param {number} len - Length to pad number to.\r\n     * @returns {string} Zero padded string.\r\n     */\r\n    function pad(val, len) {\r\n        val = String(val);\r\n        len = len || 2;\r\n        while (val.length < len) {\r\n            val = '0' + val;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    var monthNamesShort = shorten(monthNames, 3);\r\n    var dayNamesShort = shorten(dayNames, 3);\r\n    fecha.i18n = {\r\n        dayNamesShort: dayNamesShort,\r\n        dayNames: dayNames,\r\n        monthNamesShort: monthNamesShort,\r\n        monthNames: monthNames,\r\n        amPm: ['am', 'pm'],\r\n        DoFn: function DoFn(D) {\r\n            return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];\r\n        }\r\n    };\r\n\r\n    var formatFlags = {\r\n        D: function(dateObj) {\r\n            return dateObj.getDate();\r\n        },\r\n        DD: function(dateObj) {\r\n            return pad(dateObj.getDate());\r\n        },\r\n        Do: function(dateObj, i18n) {\r\n            return i18n.DoFn(dateObj.getDate());\r\n        },\r\n        d: function(dateObj) {\r\n            return dateObj.getDay();\r\n        },\r\n        dd: function(dateObj) {\r\n            return pad(dateObj.getDay());\r\n        },\r\n        ddd: function(dateObj, i18n) {\r\n            return i18n.dayNamesShort[dateObj.getDay()];\r\n        },\r\n        dddd: function(dateObj, i18n) {\r\n            return i18n.dayNames[dateObj.getDay()];\r\n        },\r\n        M: function(dateObj) {\r\n            return dateObj.getMonth() + 1;\r\n        },\r\n        MM: function(dateObj) {\r\n            return pad(dateObj.getMonth() + 1);\r\n        },\r\n        MMM: function(dateObj, i18n) {\r\n            return i18n.monthNamesShort[dateObj.getMonth()];\r\n        },\r\n        MMMM: function(dateObj, i18n) {\r\n            return i18n.monthNames[dateObj.getMonth()];\r\n        },\r\n        YY: function(dateObj) {\r\n            return String(dateObj.getFullYear()).substr(2);\r\n        },\r\n        YYYY: function(dateObj) {\r\n            return dateObj.getFullYear();\r\n        },\r\n        h: function(dateObj) {\r\n            return dateObj.getHours() % 12 || 12;\r\n        },\r\n        hh: function(dateObj) {\r\n            return pad(dateObj.getHours() % 12 || 12);\r\n        },\r\n        H: function(dateObj) {\r\n            return dateObj.getHours();\r\n        },\r\n        HH: function(dateObj) {\r\n            return pad(dateObj.getHours());\r\n        },\r\n        m: function(dateObj) {\r\n            return dateObj.getMinutes();\r\n        },\r\n        mm: function(dateObj) {\r\n            return pad(dateObj.getMinutes());\r\n        },\r\n        s: function(dateObj) {\r\n            return dateObj.getSeconds();\r\n        },\r\n        ss: function(dateObj) {\r\n            return pad(dateObj.getSeconds());\r\n        },\r\n        S: function(dateObj) {\r\n            return Math.round(dateObj.getMilliseconds() / 100);\r\n        },\r\n        SS: function(dateObj) {\r\n            return pad(Math.round(dateObj.getMilliseconds() / 10), 2);\r\n        },\r\n        SSS: function(dateObj) {\r\n            return pad(dateObj.getMilliseconds(), 3);\r\n        },\r\n        a: function(dateObj, i18n) {\r\n            return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];\r\n        },\r\n        A: function(dateObj, i18n) {\r\n            return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();\r\n        },\r\n        ZZ: function(dateObj) {\r\n            var o = dateObj.getTimezoneOffset();\r\n            return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);\r\n        },\r\n        l: function(dateObj) {\r\n            var onejan = new Date(dateObj.getFullYear(), 0, 1);\r\n            return Math.ceil((((dateObj - onejan) / 86400000) + onejan.getDay() + 1) / 7);\r\n        },\r\n        ll: function(dateObj) {\r\n            var onejan = new Date(dateObj.getFullYear(), 0, 1);\r\n            return pad(Math.ceil((((dateObj - onejan) / 86400000) + onejan.getDay() + 1) / 7), 2);\r\n        },\r\n        q: function(dateObj) {\r\n            return (Math.ceil(dateObj.getMonth() + 1 / 3));\r\n        }\r\n    };\r\n\r\n    var parseFlags = {\r\n        D: [twoDigits, function(d, v) {\r\n            d.day = v;\r\n        }],\r\n        Do: [new RegExp(twoDigits.source + word.source), function(d, v) {\r\n            d.day = parseInt(v, 10);\r\n        }],\r\n        M: [twoDigits, function(d, v) {\r\n            d.month = v - 1;\r\n        }],\r\n        YY: [twoDigits, function(d, v) {\r\n            var da = new Date(), cent = +('' + da.getFullYear()).substr(0, 2);\r\n            d.year = '' + (v > 68 ? cent - 1 : cent) + v;\r\n        }],\r\n        h: [twoDigits, function(d, v) {\r\n            d.hour = v;\r\n        }],\r\n        m: [twoDigits, function(d, v) {\r\n            d.minute = v;\r\n        }],\r\n        s: [twoDigits, function(d, v) {\r\n            d.second = v;\r\n        }],\r\n        YYYY: [fourDigits, function(d, v) {\r\n            d.year = v;\r\n        }],\r\n        S: [/\\d/, function(d, v) {\r\n            d.millisecond = v * 100;\r\n        }],\r\n        SS: [/\\d{2}/, function(d, v) {\r\n            d.millisecond = v * 10;\r\n        }],\r\n        SSS: [threeDigits, function(d, v) {\r\n            d.millisecond = v;\r\n        }],\r\n        d: [twoDigits, noop],\r\n        ddd: [word, noop],\r\n        MMM: [word, monthUpdate('monthNamesShort')],\r\n        MMMM: [word, monthUpdate('monthNames')],\r\n        a: [word, function(d, v, i18n) {\r\n            var val = v.toLowerCase();\r\n            if (val === i18n.amPm[0]) {\r\n                d.isPm = false;\r\n            } else if (val === i18n.amPm[1]) {\r\n                d.isPm = true;\r\n            }\r\n        }],\r\n        ZZ: [/[+-]\\d\\d:?\\d\\d/, function(d, v) {\r\n            var parts = (v + '').match(/([+-]|\\d\\d)/gi), minutes;\r\n\r\n            if (parts) {\r\n                minutes = +(parts[1] * 60) + parseInt(parts[2], 10);\r\n                d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;\r\n            }\r\n        }]\r\n    };\r\n    parseFlags.dd = parseFlags.d;\r\n    parseFlags.dddd = parseFlags.ddd;\r\n    parseFlags.DD = parseFlags.D;\r\n    parseFlags.mm = parseFlags.m;\r\n    parseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;\r\n    parseFlags.MM = parseFlags.M;\r\n    parseFlags.ss = parseFlags.s;\r\n    parseFlags.A = parseFlags.a;\r\n\r\n    // Some common format strings\r\n    fecha.masks = {\r\n        'default': 'ddd MMM DD YYYY HH:mm:ss',\r\n        shortDate: 'M/D/YY',\r\n        mediumDate: 'MMM D, YYYY',\r\n        longDate: 'MMMM D, YYYY',\r\n        fullDate: 'dddd, MMMM D, YYYY',\r\n        shortTime: 'HH:mm',\r\n        mediumTime: 'HH:mm:ss',\r\n        longTime: 'HH:mm:ss.SSS'\r\n    };\r\n\r\n    /***\r\n     * Format a date.\r\n     * @method format\r\n     * @param {Date|number} dateObj - JS date to format.\r\n     * @param {string} mask - New format for the date, i.e. 'mm-dd-yy' or 'shortDate'.\r\n     * @param {Object} i18nSettings - i18n resources.\r\n     * @return {string} Formatted date string.\r\n     */\r\n    fecha.format = function(dateObj, mask, i18nSettings) {\r\n        var i18n = i18nSettings || fecha.i18n;\r\n\r\n        if (typeof dateObj === 'number') {\r\n            dateObj = new Date(dateObj);\r\n        }\r\n\r\n        if (!dateObj.getMonth || isNaN(dateObj.getTime())) {\r\n            return '';\r\n            // throw new Error('Invalid Date in fecha.format');\r\n        }\r\n\r\n        mask = fecha.masks[mask] || mask || fecha.masks['default'];\r\n\r\n        var literals = [];\r\n\r\n        // Make literals inactive by replacing them with ??\r\n        mask = mask.replace(literal, function($0, $1) {\r\n            literals.push($1);\r\n            return '??';\r\n        });\r\n        // Apply formatting rules\r\n        mask = mask.replace(token, function($0) {\r\n            return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);\r\n        });\r\n        // Inline literal values back into the formatted value\r\n        return mask.replace(/\\?\\?/g, function() {\r\n            return literals.shift();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Parse a date string into an object.\r\n     * @method parse\r\n     * @param {string} dateStr - Date string\r\n     * @param {string} format - Date parse format\r\n     * @param {Object} i18nSettings - i18n resources.\r\n     * @returns {Date|boolean} JS date object or false.\r\n     */\r\n    fecha.parse = function(dateStr, format, i18nSettings) {\r\n        var i18n = i18nSettings || fecha.i18n;\r\n\r\n        if (typeof format !== 'string') {\r\n            throw new Error('Invalid format in fecha.parse');\r\n        }\r\n\r\n        format = fecha.masks[format] || format;\r\n\r\n        // Avoid regular expression denial of service, fail early for really long strings\r\n        // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\r\n        if (!dateStr || dateStr.length > 1000) {\r\n            return false;\r\n        }\r\n\r\n        var isValid = true;\r\n        var dateInfo = {};\r\n        var isUtc = false;\r\n\r\n        // Special handler for UTC. String will end in a Z but with no offset specified (ie '-0400')\r\n        if (dateStr.indexOf('Z') === dateStr.length - 1 && dateStr.indexOf('ZZ') === -1) {\r\n            dateStr = dateStr.substr(0, dateStr.length - 2);\r\n            dateInfo.timezoneOffset = new Date().getTimezoneOffset();\r\n            isUtc = true;\r\n        }\r\n\r\n        format.replace(token, function($0) {\r\n            if (parseFlags[$0]) {\r\n                var info = parseFlags[$0];\r\n                var index = dateStr.search(info[0]);\r\n                if (!~index) {\r\n                    isValid = false;\r\n                } else {\r\n                    dateStr.replace(info[0], function(result) {\r\n                        info[1](dateInfo, result, i18n);\r\n                        dateStr = dateStr.substr(index + result.length);\r\n                        return result;\r\n                    });\r\n                }\r\n            }\r\n\r\n            return parseFlags[$0] ? '' : $0.slice(1, $0.length - 1);\r\n        });\r\n\r\n        if (!isValid) {\r\n            return false;\r\n        }\r\n\r\n        var today = new Date();\r\n        if (dateInfo.isPm === true && typeof dateInfo.hour !== 'undefined' && +dateInfo.hour !== 12) {\r\n            dateInfo.hour = +dateInfo.hour + 12;\r\n        } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {\r\n            dateInfo.hour = 0;\r\n        }\r\n\r\n        var date;\r\n        if (typeof dateInfo.timezoneOffset !== 'undefined') {\r\n            if (!isUtc) {\r\n                dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;\r\n            }\r\n            date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\r\n                dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));\r\n        } else {\r\n            date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\r\n                dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);\r\n        }\r\n        return date;\r\n    };\r\n\r\n    $.fecha = fecha;\r\n})(this.$);\r\n","/*!\r\n * accounting.js v0.4.2\r\n * Copyright 2014 Open Exchange Rates\r\n *\r\n * Freely distributable under the MIT license.\r\n * Portions of accounting.js are inspired or borrowed from underscore.js\r\n *\r\n * Full details and documentation:\r\n * http://openexchangerates.github.io/accounting.js/\r\n */\r\n\r\n(function($) {\r\n    /**\r\n     * Create the local library object, to be exported or referenced globally later\r\n     */\r\n    var lib = {\r\n        version: '0.4.2',\r\n        settings: {\r\n            currency: {\r\n                symbol: '$',\t\t// default currency symbol is '$'\r\n                format: '%s%v',\t    // controls output: %s = symbol, %v = value (can be object, see docs)\r\n                decimal: '.',\t\t// decimal point separator\r\n                thousand: ',',\t\t// thousands separator\r\n                precision: 2,\t\t// decimal places\r\n                grouping: 3\t\t    // digit grouping (not implemented yet)\r\n            },\r\n            number: {\r\n                precision: 0,\t\t// default precision on numbers is 0\r\n                grouping: 3,\t\t// digit grouping (not implemented yet)\r\n                thousand: ',',\r\n                decimal: '.'\r\n            }\r\n        }\r\n    };\r\n\r\n    var tokens = {\r\n        symbol: /\\{s:(.?)\\}/i,\r\n        decimal: /\\[d:(.?)\\]/i,\r\n        thousand: /\\[t:(.?)\\]/i,\r\n        precision: /\\[p:(.?)\\]/i,\r\n        value: /\\{#+\\}/i\r\n    };\r\n\r\n    /**\r\n     * Check and normalise the value of precision (must be positive integer).\r\n     * @param {number} val - Value of precision to validate\r\n     * @returns {number} Positive integer value.\r\n     */\r\n    var checkPrecision = function(val) {\r\n        val = Math.round(Math.abs(val));\r\n        return isNaN(val) ? lib.settings.number.precision : val;\r\n    };\r\n\r\n    /**\r\n     * Parses a format string or object and returns format obj for use in rendering.\r\n     * @param {string|Object} format - Default (positive) format, or object containing `pos` (required), `neg` and `zero` values (or a function returning either a string or object)\r\n     * @returns {Object} Format object with pos, neg, and zero properties.\r\n     */\r\n    var checkCurrencyFormat = function(format) {\r\n        // Allow function as format parameter (should return string or object):\r\n        if ($.isFunction(format)) {\r\n            format = format();\r\n        }\r\n\r\n        // Format can be a string, in which case `value` (\"%v\") must be present:\r\n        if ($.isString(format) && format.match('%v')) {\r\n            // Create and return positive, negative and zero formats:\r\n            return {\r\n                pos: format,\r\n                neg: format.replace('-', '').replace('%v', '-%v'),\r\n                zero: format\r\n            };\r\n        }\r\n        if (!format || !format.pos || !format.pos.match('%v')) {\r\n            // If no format, or object is missing valid positive value, use default.\r\n            // If default is a string, casts it to an object for faster checking next time.\r\n            var x = lib.settings.currency.format;\r\n            if ($.isString(x)) {\r\n                lib.settings.currency.format = x = { pos: x, neg: x.replace('%v', '-%v'), zero: x };\r\n            }\r\n            return x;\r\n        }\r\n        return format;\r\n    };\r\n\r\n    /**\r\n     * Takes a format string and parses it into an object.\r\n     * @param {string} format - Format string`\r\n     * @returns {Object} Object with format settings.\r\n     */\r\n    var parseFormat = function(format) {\r\n        if (!$.isString(format)) {\r\n            return format || {};\r\n        }\r\n\r\n        var res = {}, x;\r\n        var newFormat = format;\r\n        if ((x = tokens.symbol.exec(newFormat)) !== null && x.length > 1) {\r\n            res.symbol = x[1];\r\n            newFormat = newFormat.replace(x[0], '%s');\r\n        }\r\n        if ((x = tokens.decimal.exec(newFormat)) !== null && x.length > 1) {\r\n            res.decimal = x[1];\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.thousand.exec(newFormat)) !== null && x.length > 1) {\r\n            res.thousand = x[1];\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.precision.exec(newFormat)) !== null && x.length > 1) {\r\n            res.precision = x[1] * 1;\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.value.exec(newFormat)) !== null) {\r\n            res.format = newFormat.replace(x[0], '%v');\r\n        } else {\r\n            res.format = newFormat + ' %v';\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Takes a string/array of strings, removes all formatting/cruft and returns the raw float value.\r\n     * @param {string|number} value - Value to remove formatting from.\r\n     * @returns {number} Number with no formatting.\r\n     */\r\n    var unformat = function(value) {\r\n        // Fails silently (need decent errors):\r\n        value = value || 0;\r\n\r\n        // Return the value as-is if it's already a number:\r\n        if (typeof value === 'number') {\r\n            return value;\r\n        }\r\n\r\n        // Build regex to strip out everything except digits, decimal point and minus sign:\r\n        var regex = new RegExp('[^0-9-' + lib.settings.number.decimal + ']', ['g']),\r\n            unformatted = parseFloat(\r\n                ('' + value)\r\n                    .replace(/\\((.*)\\)/, '-$1') // replace bracketed values with negatives\r\n                    .replace(regex, '')         // strip out any cruft\r\n                    .replace(lib.settings.number.decimal, '.')      // make sure decimal point is standard\r\n            );\r\n\r\n        // This will fail silently which may cause trouble, let's wait and see:\r\n        return !isNaN(unformatted) ? unformatted : 0;\r\n    };\r\n\r\n    /**\r\n     * Implementation of toFixed() that treats floats more like decimals.\r\n     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === \"0.61\") that present problems for accounting- and finance-related software.\r\n     * @param {number|string} value - Number to convert\r\n     * @param {number} precision - Number of digits after the decimal.\r\n     * @returns {number} Formatted value.\r\n     */\r\n    var toFixed = function(value, precision) {\r\n        precision = checkPrecision(precision);\r\n        var power = Math.pow(10, precision);\r\n\r\n        // Multiply up by precision, round accurately, then divide and use native toFixed():\r\n        return (Math.round(unformat(value) * power) / power).toFixed(precision);\r\n    };\r\n\r\n    /**\r\n     * Format a number, with comma-separated thousands and custom precision/decimal places.\r\n     * @param {number} number - Number to format.\r\n     * @param {string} format - Tokenized string format.\r\n     * @returns {string} Formatted number.\r\n     */\r\n    var formatNumber = function(number, format) {\r\n        // Clean up number:\r\n        number = unformat(number);\r\n\r\n        // Build options object from second param (if object) or all params, extending defaults:\r\n        var opts = $.extend({}, lib.settings.number, parseFormat(format));\r\n\r\n        // Clean up precision\r\n        var usePrecision = checkPrecision(opts.precision);\r\n\r\n        // Do some calc:\r\n        var negative = number < 0 ? '-' : '';\r\n        var base = parseInt(toFixed(Math.abs(number || 0), usePrecision), 10) + '';\r\n        var mod = base.length > 3 ? base.length % 3 : 0;\r\n\r\n        // Format the number:\r\n        return negative + (mod ? base.substr(0, mod) + opts.thousand : '') + base.substr(mod).replace(/(\\d{3})(?=\\d)/g, '$1' + opts.thousand) +\r\n            (usePrecision ? opts.decimal + toFixed(Math.abs(number), usePrecision).split('.')[1] : '');\r\n    };\r\n\r\n    /**\r\n     * Format a number as currency, with comma-separated thousands and custom precision/decimal places.\r\n     * @param {number} number - Number to format.\r\n     * @param {string} format - Tokenized string format.\r\n     * @returns {string} Formatted currency.\r\n     */\r\n    var formatMoney = function(number, format) {\r\n        // Clean up number:\r\n        number = unformat(number);\r\n\r\n        // Build options object from second param (if object) or all params, extending defaults:\r\n        var opts = $.extend({}, lib.settings.currency, parseFormat(format));\r\n\r\n        // Check format (returns object with pos, neg and zero):\r\n        var formats = checkCurrencyFormat(opts.format);\r\n\r\n        // Choose which format to use for this value:\r\n        var useFormat = number > 0 ? formats.pos : number < 0 ? formats.neg : formats.zero;\r\n\r\n        // Return with currency symbol added:\r\n        return useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(number), format));\r\n    };\r\n\r\n    $.accounting = {\r\n        formatMoney: formatMoney,\r\n        formatNumber: formatNumber,\r\n        parseFormat: parseFormat,\r\n        unformat: unformat\r\n    };\r\n}(this.$));\r\n","/*!\r\n * Help mithril component. Shows input groups with help button.\r\n */\r\n(function(root, factory) {\r\n    root.Help = factory(root.m, root.$, root.Alertify);\r\n})(this, function(m, $, Alertify) {\r\n    'use strict';\r\n\r\n    var Help = {\r\n        /**\r\n         * Initialize the component.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            this.opts = {\r\n                enabled: attrs.enabled,\r\n                message: attrs.message\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Show help dialog.\r\n         * @param {Event} e - Event that triggered the dialog to open.\r\n         */\r\n        showHelp: function(e) {\r\n            Alertify.alert(this.opts.message, $.dialogs.focusOnClose.bind(e), $.dialogs.focusOnClose.bind(e));\r\n        },\r\n\r\n        /**\r\n         * Create HTML to display content with help add on.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         * @returns {Object} Mithril vnode\r\n         */\r\n        view: function(vnode) {\r\n            if (!this.opts.enabled) {\r\n                return $.isArray(vnode.children) ? m('.input-group', vnode.children) : vnode.children;\r\n            }\r\n            if (!(vnode.children && vnode.children.length)) {\r\n                return m('span', m('button.btn.btn-secondary.dash-context-help', {\r\n                    type: 'button', role: 'button', onclick: this.showHelp.bind(this)\r\n                }, m('i.dash.dash-help')));\r\n            }\r\n            return m('.input-group',\r\n                vnode.children.concat(m('span.input-group-addon.input-group-custom', m('button.btn.btn-secondary.dash-context-help', {\r\n                    type: 'button', role: 'button', onclick: this.showHelp.bind(this)\r\n                }, m('i.dash.dash-help'))))\r\n            );\r\n        }\r\n    };\r\n\r\n    return Help;\r\n});\r\n","/*!\r\n * Dialog mithril component.\r\n */\r\n(function(root, factory) {\r\n    root.Dialog = factory(root.m, root.$, root.Alertify, root.Table);\r\n})(this, function(m, $, Alertify, Table) {\r\n    'use strict';\r\n\r\n    var _buttons = {\r\n        'ok': 'Okay',\r\n        'cancel': 'Cancel',\r\n        'close': 'Close'\r\n    };\r\n\r\n    var _keys = {\r\n        ENTER: 13,\r\n        ESC: 27\r\n    };\r\n\r\n    /**\r\n     * Convert a value for a field to the correct data type.\r\n     * @param {Node} field - Input that we are converting value for.\r\n     * @param {string} val - Value to convert.\r\n     * @returns {string|number|bool} Returns correctly casted value.\r\n     */\r\n    var tryGetValue = function(field, val) {\r\n        var fieldName = field.name.split('.').pop();\r\n        if ((fieldName.substring(0, 2) === 'Is' || fieldName.substring(0, 5) === 'Allow') && (field.value.toLowerCase() === 'true' || field.value.toLowerCase() === 'false')) {\r\n            return field.value.toLowerCase() === 'true';\r\n        } else if (field.type.toLowerCase() === 'number' || field.name.slice(-2) === 'Id' || !($.isNull(val) || val.length == 0 || isNaN(val))) {\r\n            return val.length ? parseInt(val) : null;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    /**\r\n     * Try to set a value in an object.\r\n     * @param {Object} obj - Object to add value to.\r\n     * @param {Node} field - Input that we are converting value for.\r\n     * @param {string} name - Name of property.\r\n     * @param {string} val - Value to set.\r\n     * @returns {Object} Returns correctly updated object.\r\n     */\r\n    var trySetValue = function(obj, field, name, val) {\r\n        if (obj.hasOwnProperty(name) || $.hasClass(field, 'custom-control-input-multiple')) {\r\n            if (!$.isArray(obj[name])) {\r\n                obj[name] = $.isNull(obj[name]) ? [] : [obj[name]];\r\n            }\r\n            if (!$.isNull(val)) {\r\n                obj[name].push(val);\r\n            }\r\n        } else if (!$.isNull(val)) {\r\n            obj[name] = val;\r\n        }\r\n        return obj;\r\n    };\r\n\r\n    /**\r\n     * Declare Dialog class.\r\n     * @param {Object} opts - Dialog settings\r\n     */\r\n    function Dialog(opts) {\r\n        this.opts = $.extend({\r\n            id: null,\r\n            title: null,\r\n            basic: true,\r\n            buttons: _buttons,\r\n            content: null,\r\n            target: null,\r\n            onOkay: null,\r\n            onCancel: null,\r\n            onShow: null,\r\n            parent: null\r\n        }, opts || {});\r\n        this.elements = {\r\n            container: null,\r\n            content: null\r\n        };\r\n        this.changed = false;\r\n        this.run();\r\n    }\r\n\r\n    Dialog.prototype = {\r\n        /**\r\n         * Generates the components HTML.\r\n         * @returns {Object} Mithril virtual node\r\n         */\r\n        view: function() {\r\n            return m('.rd-dialog', { onkeydown: this.checkKey.bind(this), tabindex: 0 }, [\r\n                m('.rd-header.columns', [\r\n                    m('.col-8.mt-1.text-no-select.dialog-header', this.opts.title),\r\n                    m('.col-4.text-right', m('button.btn.btn-secondary.rd-close', { type: 'button', role: 'button', onclick: this.onCancel.bind(this) },\r\n                        m('i.dash.dash-cancel.text-error', { title: this.opts.buttons.close })\r\n                    ))\r\n                ]),\r\n                m('.rd-content', { class: this.opts.basic ? 'rd-no-footer' : '' }, this.contentView()),\r\n                this.opts.basic ? null : m('.rd-footer', [\r\n                    m('button.btn.btn-primary', {\r\n                        type: 'button', role: 'button', onclick: this.onOkay.bind(this)\r\n                    }, this.opts.buttons.ok),\r\n                    m('button.btn.btn-warning', {\r\n                        type: 'button', role: 'button', onclick: this.onCancel.bind(this)\r\n                    }, this.opts.buttons.cancel)\r\n                ])\r\n            ]);\r\n        },\r\n\r\n        contentView: function() {\r\n            if (!this.opts.content.component) {\r\n                return m.trust(this.opts.content);\r\n            }\r\n\r\n            this.opts.title = this.opts.content.title;\r\n            this.opts.basic = this.opts.content.basic;\r\n            if (this.opts.content.component.toLowerCase() === 'table') {\r\n                return m('.col-12.dash-table', m(Table, this.opts.content.data));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Runs after the dialog is first created by mithril.\r\n         * @param {Object} vnode - Mithril virtual node.\r\n         */\r\n        oncreate: function(vnode) {\r\n            if (this.elements.content) {\r\n                return;\r\n            }\r\n            var node = $.get('.rd-content', vnode.dom);\r\n            if (!(node && node.firstElementChild)) {\r\n                return;\r\n            }\r\n            node = node.firstElementChild;\r\n            if ($.isNull(this.opts.title)) {\r\n                this.opts.title = node.getAttribute('data-title');\r\n                this.opts.basic = node.hasAttribute('data-basic-dialog');\r\n                m.redraw();\r\n            }\r\n            var self = this;\r\n            $.on(node, 'change', function() {\r\n                self.changed = true;\r\n            });\r\n            this.elements.content = node;\r\n            setTimeout(this.onShow.bind(this), 25);\r\n        },\r\n\r\n        run: function() {\r\n            this.elements.container = document.createElement('div');\r\n            this.elements.container.id = 'dialog' + this.opts.id;\r\n            $.addClass(this.elements.container, 'rd-dialog-container');\r\n            document.body.appendChild(this.elements.container);\r\n            m.mount(this.elements.container, {\r\n                view: this.view.bind(this),\r\n                oncreate: this.oncreate.bind(this),\r\n            });\r\n\r\n            $.dialogs.processContent(this.elements.content);\r\n            setTimeout(this.checkEvent.bind(this, this.elements.content, 'data-event'), 25);\r\n        },\r\n\r\n        /**\r\n         * Get the dialog id.\r\n         * @returns {number} ID of dialog.\r\n         */\r\n        getId: function() {\r\n            return this.opts.id;\r\n        },\r\n\r\n        /**\r\n         * Get the dialog container node.\r\n         * @returns {Node} DOM node of dialog container.\r\n         */\r\n        getContainer: function() {\r\n            return this.elements.container;\r\n        },\r\n\r\n        /**\r\n         * Get the dialog content node.\r\n         * @returns {Node} DOM node of dialog content.\r\n         */\r\n        getContent: function() {\r\n            return this.elements.content;\r\n        },\r\n\r\n        /**\r\n         * Get the dialog target node.\r\n         * @returns {Node} DOM node to target on close.\r\n         */\r\n        getTarget: function() {\r\n            return this.opts.target;\r\n        },\r\n\r\n        /**\r\n         * Find a form node inside the dialog.\r\n         * @returns {Node} Form node if exists else null.\r\n         */\r\n        findForm: function() {\r\n            return $.matches(this.elements.content, 'form.dash-form') ? this.elements.content : $.get('form.dash-form', this.elements.content);\r\n        },\r\n\r\n        /**\r\n         * Find element to focus on when dialog is displayed.\r\n         */\r\n        onShow: function() {\r\n            if ($.isFunction(this.opts.onShow)) {\r\n                if (!this.opts.onShow.call(this)) {\r\n                    return;\r\n                }\r\n            }\r\n            document.title = this.opts.title;\r\n            $.dialogs.focusNode(this.elements.content);\r\n        },\r\n\r\n        /**\r\n         * User okayed dialog. Save changes; close dialog.\r\n         */\r\n        onOkay: function() {\r\n            if ($.isFunction(this.opts.onOkay)) {\r\n                if (!this.opts.onOkay.call(this)) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            var form = this.findForm();\r\n            if (!form) {\r\n                this.destroy();\r\n                return;\r\n            }\r\n            if (!this.validateForm()) {\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            var formData = this.serializeForm();\r\n            $.ajax({\r\n                method: form.hasAttribute('data-method') ? form.getAttribute('data-method') : 'POST',\r\n                url: form.getAttribute('action'),\r\n                data: formData,\r\n                token: formData.__RequestVerificationToken\r\n            }, function(responseData) {\r\n                var target = self.opts.target;\r\n                var parentDlg = $.dialogs.findDialogById(self.opts.parent);\r\n                if (responseData.parentTarget && parentDlg) {\r\n                    target = parentDlg.getTarget();\r\n                }\r\n\r\n                self.destroy();\r\n                if (responseData.closeParent && parentDlg) {\r\n                    parentDlg.destroy();\r\n                }\r\n                if (responseData.dialogUrl) {\r\n                    $.dialogs.sendAjaxRequest(responseData.dialogUrl, 'GET', target);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * User canceled dialog. Check for changes; close dialog.\r\n         * @param {Event} e - Event that triggered the cancel.\r\n         */\r\n        onCancel: function(e) {\r\n            if ($.isFunction(this.opts.onCancel)) {\r\n                if (!this.opts.onCancel.call(this)) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (!this.changed || !this.findForm()) {\r\n                this.destroy();\r\n                return;\r\n            }\r\n\r\n            Alertify.confirm($.resx('discardChanges'), this.destroy.bind(this), function() {\r\n                if (e.target) {\r\n                    e.target.focus();\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Trigger okay or cancel action based on keydown.\r\n         * @param {KeyboardEvent} e - Keydown event that triggered this.\r\n         */\r\n        checkKey: function(e) {\r\n            if (e.keyCode === _keys.ESC) {\r\n                this.onCancel(e);\r\n            }\r\n            if (e.keyCode === _keys.ENTER && !this.opts.basic) {\r\n                this.onOkay(e);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Dispatch event named in attribute `attrName` if it exists.\r\n         * @param {Node} node - Node to look for an event attribute in.\r\n         * @param {string} attrName - Name of the attribute to check for the event in.\r\n         */\r\n        checkEvent: function(node, attrName) {\r\n            if (!node || !node.hasAttribute(attrName)) {\r\n                return;\r\n            }\r\n            var ev = node.getAttribute(attrName);\r\n            if ($.events.hasOwnProperty(ev)) {\r\n                document.dispatchEvent($.events[ev]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Convert form data into an object.\r\n         * @returns {Object} Form data.\r\n         */\r\n        serializeForm: function() {\r\n            var form = this.findForm();\r\n            if (!form) {\r\n                return {};\r\n            }\r\n\r\n            var field, data = {};\r\n            var len = form.elements.length;\r\n            var bracketRegEx = /\\[([^\\]]+)\\]/;\r\n            for (var i = 0; i < len; i++) {\r\n                field = form.elements[i];\r\n                if (!field.name || field.disabled || ['file', 'reset', 'submit', 'button'].indexOf(field.type) > -1) {\r\n                    continue;\r\n                }\r\n\r\n                var value = null;\r\n                if (field.type === 'select' && field.hasAttribute('multiple')) {\r\n                    value = Array.apply(null, form.elements[i].options).filter(function(x) {\r\n                        return x.selected;\r\n                    }).map(function(x) {\r\n                        return tryGetValue(field, x.value);\r\n                    });\r\n                } else if (field.type === 'checkbox') {\r\n                    if (field.checked) {\r\n                        value = tryGetValue(field, field.value);\r\n                    }\r\n                } else if (field.type !== 'radio' || field.checked) {\r\n                    value = tryGetValue(field, field.value);\r\n                }\r\n\r\n                var pieces = field.name.split('.');\r\n                var name = field.name;\r\n                if (pieces.length > 1) {\r\n                    var matches = bracketRegEx.exec(pieces[0]);\r\n                    name = matches.length > 1 ? pieces[0].replace(matches[0], '') : pieces[0];\r\n                    if (!data.hasOwnProperty(name)) {\r\n                        data[name] = [];\r\n                    }\r\n                    if (matches.length > 1) {\r\n                        if (!data[name].hasOwnProperty(matches[1])) {\r\n                            data[name][matches[1]] = {};\r\n                        }\r\n                        data[name][matches[1]] = trySetValue(data[name][matches[1]], field, pieces[1], value);\r\n                    } else {\r\n                        data[name][matches[0]] = trySetValue(data[name][matches[0]], field, pieces[1], value);\r\n                    }\r\n                } else {\r\n                    data = trySetValue(data, field, name, value);\r\n                }\r\n            }\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Set tab status when validating form.\r\n         * @param {Node} el - Node that has a validation error.\r\n         */\r\n        setTabStatus: function(el) {\r\n            var tab = $.closest('.tab-pane', el);\r\n            if (tab) {\r\n                // add error class to tab\r\n                var id = tab.getAttribute('aria-labelledby');\r\n                if (id) {\r\n                    $.toggleClass($.get('#' + id), 'tab-validation-error', $.hasClass(el, 'mform-control-error'));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Run the form validator and display an error if needed.\r\n         * @returns {bool} Return true if form is valid, else false.\r\n         */\r\n        validateForm: function() {\r\n            var form = this.findForm();\r\n            $.getAll('.tab-validation-error', form).forEach(function(x) {\r\n                $.removeClass(x, 'tab-validation-error');\r\n            });\r\n\r\n            form.dispatchEvent($.events.formValidate);\r\n\r\n            var mErrors = $.getAll('.mform-control-error', form);\r\n            if (mErrors.length) {\r\n                mErrors.forEach(this.setTabStatus);\r\n            }\r\n\r\n            if (mErrors.length || $.getAll('.form-control-error', form).length) {\r\n                Alertify.error($.resx('fixIt'));\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        destroy: function() {\r\n            this.checkEvent(this.elements.content, 'data-close-event');\r\n\r\n            var tableNode = $.get('.dash-table', this.elements.content);\r\n            if (tableNode) {\r\n                tableNode.table.destroy();\r\n            }\r\n\r\n            m.mount(this.elements.container, null);\r\n            document.body.removeChild(this.elements.container);\r\n            $.dialogs.removeDialog(this.opts.id);\r\n            $.dialogs.refreshTable();\r\n        }\r\n    };\r\n\r\n    return Dialog;\r\n});\r\n","/*!\r\n * Autocomplete mithril component.\r\n */\r\n(function(root, factory) {\r\n    root.Autocomplete = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    var _keys = {\r\n        DOWN: 40,\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        TAB: 9,\r\n        UP: 38\r\n    };\r\n\r\n    /**\r\n     * Escape a string for use with a regex.\r\n     * @param {string} s - String to escape.\r\n     * @returns Escaped string.\r\n     */\r\n    var regExpEscape = function(s) {\r\n        return s.replace(/[-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n    };\r\n\r\n    var Autocomplete = {\r\n        /**\r\n         * Initialize the component.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            this.opts = {\r\n                value: attrs.value,\r\n                valueChanged: false,\r\n                name: attrs.name,\r\n                placeholder: attrs.placeholder,\r\n                active: false,\r\n                required: attrs.required,\r\n                disabled: attrs.disabled,\r\n                onSelect: attrs.onSelect,\r\n                onCancel: attrs.onCancel,\r\n                class: attrs.class,\r\n                list: attrs.list || [],\r\n                filteredList: [],\r\n                container: null,\r\n                selectedIndex: -1\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Update the opts in case the component name is changed.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         * @param vnode\r\n         */\r\n        onupdate: function(vnode) {\r\n            if (vnode.attrs) {\r\n                this.opts.name = vnode.attrs.name;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Grab the DOM containing node after it is created.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oncreate: function(vnode) {\r\n            this.opts.container = vnode.dom;\r\n            this.opts.container.autocomplete = this;\r\n        },\r\n\r\n        /**\r\n         * Update the list of items.\r\n         * @param {string[]} list - Array of strings to show.\r\n         */\r\n        setList: function(list) {\r\n            this.close();\r\n            this.opts.list = list;\r\n            this.opts.filteredList = [];\r\n        },\r\n\r\n        /**\r\n         * Check special keys and respond accordingly.\r\n         * @param {Event} e - Keypress event.\r\n         */\r\n        onKeyDown: function(e) {\r\n            if (this.opts.disabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.opts.active) {\r\n                if (e.keyCode === _keys.ENTER) {\r\n                    var selected = this.opts.filteredList[this.opts.selectedIndex];\r\n                    if (selected) {\r\n                        this.selectItem(selected);\r\n                    } else {\r\n                        this.cancel(true);\r\n                    }\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                } else if (e.keyCode === _keys.ESC) {\r\n                    this.cancel(true);\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                } else if (e.keyCode === _keys.DOWN) {\r\n                    this.selectIndex(Math.min(this.opts.selectedIndex + 1, this.opts.filteredList.length - 1));\r\n                } else if (e.keyCode === _keys.UP) {\r\n                    this.selectIndex(Math.max(this.opts.selectedIndex - 1, 0));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handle the input's value changing and show the list.\r\n         * @param {Event} e - Event that triggered the change.\r\n         */\r\n        onInput: function(e) {\r\n            if (this.opts.value !== e.target.value) {\r\n                this.opts.valueChanged = true;\r\n                this.opts.value = e.target.value;\r\n            }\r\n            if (this.opts.value.length > 1) {\r\n                this.opts.active = true;\r\n                this.opts.selectedIndex = 0;\r\n                var val = this.opts.value.toLowerCase();\r\n                this.opts.filteredList = ($.isFunction(this.opts.list) ? this.opts.list() : this.opts.list).filter(function(x) {\r\n                    return x.toLowerCase().indexOf(val) > -1;\r\n                });\r\n            } else {\r\n                this.opts.filteredList = [];\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Close autocomplete dropdown on lost focus.\r\n         */\r\n        onBlur: function() {\r\n            if (this.opts.active || this.opts.valueChanged) {\r\n                this.cancel(false);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select an item from the list by index.\r\n         * @param {number} index - Filtered list item index.\r\n         */\r\n        selectIndex: function(index) {\r\n            this.opts.selectedIndex = index;\r\n            var ul = $.get('ul', this.opts.container);\r\n            if (ul && ul.children[index]) {\r\n                ul.children[index].scrollIntoView();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select an item by text value.\r\n         * @param {string} item - Text to select.\r\n         * @param {Event} e - Event that triggered this.\r\n         */\r\n        selectItem: function(item, e, focus) {\r\n            if ($.isFunction(this.opts.onSelect)) {\r\n                this.opts.onSelect.call(null, item);\r\n            }\r\n            this.opts.value = item;\r\n            this.close($.isNull(focus) ? true : focus);\r\n            if (e && e.preventDefault) {\r\n                e.preventDefault();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Discard value and close the autocomplete.\r\n         * @param {bool} focus - Focus on the original control after closing if true.\r\n         */\r\n        cancel: function(focus) {\r\n            if (this.opts.valueChanged) {\r\n                this.opts.value = '';\r\n            }\r\n            if ($.isFunction(this.opts.onCancel)) {\r\n                this.opts.onCancel();\r\n            }\r\n            this.close(focus);\r\n        },\r\n\r\n        /**\r\n         * Set value and close the autocomplete.\r\n         * @param {bool} focus - Focus on the original control after closing if true.\r\n         */\r\n        close: function(focus) {\r\n            this.opts.active = false;\r\n            this.opts.selectedIndex = -1;\r\n            this.opts.valueChanged = false;\r\n            if (focus) {\r\n                var input = $.get('input', this.opts.container);\r\n                if (input) {\r\n                    input.focus();\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Highlight val inside item.\r\n         * @param {string} text - Text to highlight in.\r\n         * @param {string} val - Substring to highlight.\r\n         * @returns Marked up string.\r\n         */\r\n        highlightItem: function(text, val) {\r\n            return val === '' ? text : text.replace(RegExp(regExpEscape(val.trim()), 'gi'), '<mark>$&</mark>');\r\n        },\r\n\r\n        /**\r\n         * Create HTML to display component.\r\n         * @returns {Object} Mithril vnode\r\n         */\r\n        view: function() {\r\n            var self = this;\r\n            return m('.mithril-autocomplete-container.autocomplete', { class: self.opts.active ? 'autocomplete-active' : '' },\r\n                m('input.form-input', {\r\n                    type: 'text',\r\n                    name: self.opts.name,\r\n                    placeholder: self.opts.placeholder,\r\n                    class: (self.opts.class || '') + (self.opts.required && !$.hasValue(self.opts.value) ? ' mform-control-error' : ''),\r\n                    autocomplete: 'off',\r\n                    'aria-autocomplete': 'list',\r\n                    onkeydown: self.onKeyDown.bind(self),\r\n                    oninput: self.onInput.bind(self),\r\n                    value: self.opts.value,\r\n                    onblur: self.onBlur.bind(self)\r\n                }),\r\n                self.opts.active && m('ul', self.opts.filteredList.map(function(x, index) {\r\n                    return m('li', {\r\n                        'aria-selected': self.opts.selectedIndex == index,\r\n                        onmousedown: self.selectItem.bind(self, x)\r\n                    }, m.trust(self.highlightItem(x, self.opts.value)));\r\n                }))\r\n            );\r\n        }\r\n    };\r\n\r\n    return Autocomplete;\r\n});\r\n","/*!\r\n * DatePicker mithril component.\r\n * Modified from https://github.com/CreaturesInUnitards/mithril-datepicker\r\n */\r\n(function(root, factory) {\r\n    root.DatePicker = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    var _keys = {\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        SPACE: 32\r\n    };\r\n\r\n    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    var hours = [];\r\n    var minutes = [];\r\n    var i = 0;\r\n    while (hours.push(i++) < 24) { /* nothing to do here */ }\r\n    i = 0;\r\n    while (minutes.push(i++) < 60) { /* nothing to do here */ }\r\n    var prevNextTitles = ['1 Mo', '1 Yr', '10 Yr'];\r\n    var weekStart = 0;\r\n    var locale = 'en-us';\r\n    var formatOptions = null;\r\n    var defaultFormat = 'YYYY-MM-DD HH:mm';\r\n\r\n    function chooseDate(props, e) {\r\n        var box = e.target;\r\n        var selectedDate = parseInt(box.textContent);\r\n        var dateObj = props.date;\r\n        if ($.hasClass(box, 'other-scope')) {\r\n            dateObj.setFullYear(dateObj.getFullYear(), dateObj.getMonth() + (selectedDate > 6 ? -1 : 1), selectedDate);\r\n        } else {\r\n            dateObj.setDate(selectedDate);\r\n        }\r\n    }\r\n\r\n    function dismissAndCommit(props, e) {\r\n        if (e) {\r\n            if (e.target && $.hasClass('number', e.target)) {\r\n                e.preventDefault();\r\n                chooseDate(props, e);\r\n            } else {\r\n                var parent = e.relatedTarget && $.closest('.mithril-date-picker-container', e.relatedTarget);\r\n                if (!parent) {\r\n                    e.preventDefault();\r\n                    props.view = 0;\r\n                    props.active = false;\r\n                }\r\n            }\r\n        }\r\n        // @todo this probably needs more testing to make sure it triggers correctly\r\n        if (props.onchange) {\r\n            props.onchange(props.date);\r\n        }\r\n    }\r\n\r\n    function checkKey(props, e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (e.keyCode === _keys.ESC) {\r\n            dismissAndCommit(props, e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function prevNext(props, delta) {\r\n        var newDate = new Date(props.date);\r\n        switch (props.view) {\r\n            case 0:\r\n                newDate.setMonth(newDate.getMonth() + delta);\r\n                break;\r\n            case 1:\r\n                newDate.setFullYear(newDate.getFullYear() + delta);\r\n                break;\r\n            default:\r\n                newDate.setFullYear(newDate.getFullYear() + (delta * 10));\r\n        }\r\n        props.date = pushToLastDay(props.date, newDate);\r\n    }\r\n\r\n    function adjustedProps(date, delta) {\r\n        var month = date.getMonth() + delta, year = date.getFullYear();\r\n        var over = month > 11, under = month < 0;\r\n        return {\r\n            month: over ? 0 : under ? 11 : month,\r\n            year: over ? year + 1 : under ? year - 1 : year\r\n        };\r\n    }\r\n\r\n    function lastDateInMonth(date, delta) {\r\n        var obj = adjustedProps(date, delta);\r\n        if ([0, 2, 4, 6, 7, 9, 11].indexOf(obj.month) > -1) {\r\n            return 31; // array of 31-day props.months\r\n        }\r\n        if (obj.month === 1) { // February\r\n            if (!(obj.year % 400)) {\r\n                return 29;\r\n            }\r\n            if (!(obj.year % 100)) {\r\n                return 28;\r\n            }\r\n            return (obj.year % 4) ? 28 : 29;\r\n        }\r\n        return 30;\r\n    }\r\n\r\n    function pushToLastDay(oldDate, newDate) {\r\n        if (oldDate.getDate() !== newDate.getDate()) {\r\n            newDate.setMonth(newDate.getMonth() - 1, lastDateInMonth(newDate, -1));\r\n        }\r\n        return newDate;\r\n    }\r\n\r\n    function stringsForLocale(locale) {\r\n        var date = new Date('jan 1 2017'), _months = [], _days = []; // 1/1/2017 was month:0 and weekday:0, so perfect\r\n        while (_days.length < 7) {\r\n            _days.push(date.toLocaleDateString(locale, { weekday: 'long' }));\r\n            date.setDate(date.getDate() + 1);\r\n        }\r\n        while (_months.length < 12) {\r\n            _months.push(date.toLocaleDateString(locale, { month: 'long' }));\r\n            date.setMonth(date.getMonth() + 1);\r\n        }\r\n        return { days: _days, months: _months };\r\n    }\r\n\r\n    function wrapAround(idx, array) {\r\n        var len = array.length;\r\n        var n = idx >= len ? idx - len : idx;\r\n        return array[n];\r\n    }\r\n\r\n    function daysFromLastMonth(props) {\r\n        var month = props.date.getMonth(), year = props.date.getFullYear();\r\n        var firstDay = (new Date(year, month, 1)).getDay() - props.weekStart;\r\n        if (firstDay < 0) firstDay += 7;\r\n        var array = [];\r\n        var lastDate = lastDateInMonth(props.date, -1);\r\n        var offsetStart = lastDate - firstDay + 1;\r\n        for (var i = offsetStart; i <= lastDate; i++) {\r\n            array.push(i);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function daysFromThisMonth(props) {\r\n        var max = lastDateInMonth(props.date, 0);\r\n        var array = [];\r\n        for (var i = 1; i <= max; i++) {\r\n            array.push(i);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function daysFromNextMonth(prev, these) {\r\n        var soFar = prev.concat(these);\r\n        var mod = soFar.length % 7;\r\n        var array = [];\r\n        if (mod > 0) {\r\n            var n = 7 - mod;\r\n            for (var i = 1; i <= n; i++) {\r\n                array.push(i);\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function defaultDate() {\r\n        var now = new Date();\r\n        now.setHours(0, 0, 0, 0);\r\n        return now;\r\n    }\r\n\r\n    function yearsForDecade(date) {\r\n        var year = date.getFullYear();\r\n        var start = year - (year % 10);\r\n        var array = [];\r\n        for (var i = start; i < start + 10; i++) {\r\n            array.push(i);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function classForBox(a, b) {\r\n        return a === b ? 'chosen' : '';\r\n    }\r\n\r\n    var Header = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var date = props.date;\r\n            var theseMonths = props.months || months;\r\n            return m('.header',\r\n                m('button.header-button.prev', { onclick: prevNext.bind(null, props, -1) }, [\r\n                    m('i.dash.dash-to-start'),\r\n                    prevNextTitles[props.view]\r\n                ]),\r\n                m('button.header-button.segment', { onclick: function() { props.view = 0; } }, date.getDate()),\r\n                m('button.header-button.segment', { onclick: function() { props.view = 1; } }, theseMonths[date.getMonth()].substr(0, 3)),\r\n                m('button.header-button.segment', { onclick: function() { props.view = 2; } }, date.getFullYear()),\r\n                m('button.header-button.next', { onclick: prevNext.bind(null, props, 1) }, [\r\n                    prevNextTitles[props.view],\r\n                    m('i.dash.dash-to-end')\r\n                ]),\r\n                m('button.btn.btn-secondary.btn-sm', { onclick: dismissAndCommit.bind(null, props) }, m('i.dash.dash-cancel'))\r\n            );\r\n        }\r\n    };\r\n\r\n    var MonthView = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var prevDates = daysFromLastMonth(props);\r\n            var theseDates = daysFromThisMonth(props);\r\n            var nextDates = daysFromNextMonth(prevDates, theseDates);\r\n            var theseWeekdays = props.days || days;\r\n            return m('.calendar',\r\n                m('.weekdays', theseWeekdays.map(function(_, idx) {\r\n                    var day = wrapAround(idx + props.weekStart, theseWeekdays);\r\n                    return m('.day.dummy', day.substring(0, 2));\r\n                })),\r\n                m('.weekdays', {\r\n                    onclick: function(e) {\r\n                        chooseDate(props, e);\r\n                    }\r\n                }, prevDates.map(function(date) {\r\n                    return m('button.day.other-scope', date);\r\n                }), theseDates.map(function(date) {\r\n                    return m('button.day', { class: classForBox(props.date.getDate(), date) }, m('.number', date));\r\n                }), nextDates.map(function(date) {\r\n                    return m('button.day.other-scope', date);\r\n                })),\r\n                m('.time',\r\n                    m('select.form-select', {\r\n                        value: props.date.getHours(), onchange: function(e) {\r\n                            props.date.setHours(e.target.value);\r\n                            props.date.setHours(e.target.value);\r\n                            if (props.onchange) {\r\n                                props.onchange(props.date);\r\n                            }\r\n                        }\r\n                    }, hours.map(function(x) {\r\n                        return m('option', { value: x }, ('00' + x).slice(-2));\r\n                    })),\r\n                    m('select.form-select', {\r\n                        value: props.date.getMinutes(), onchange: function(e) {\r\n                            props.date.setMinutes(e.target.value);\r\n                            props.date.setMinutes(e.target.value);\r\n                            if (props.onchange) {\r\n                                props.onchange(props.date);\r\n                            }\r\n                        }\r\n                    }, minutes.map(function(x) {\r\n                        return m('option', { value: x }, ('00' + x).slice(-2));\r\n                    }))\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var YearView = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var theseMonths = props.months || months;\r\n            return m('.calendar',\r\n                m('.months',\r\n                    theseMonths.map(function(month, idx) {\r\n                        return m('button.month', {\r\n                            class: classForBox(props.date.getMonth(), idx), onclick: function() {\r\n                                var newDate = new Date(props.date);\r\n                                newDate.setMonth(idx);\r\n                                props.date = pushToLastDay(props.date, newDate);\r\n                                props.view = 0;\r\n                            }\r\n                        }, m('.number', month.substring(0, 3)));\r\n                    })\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var DecadeView = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var decade = yearsForDecade(props.date);\r\n            return m('.calendar',\r\n                m('.years',\r\n                    decade.map(function(year) {\r\n                        return m('button.year', {\r\n                            class: classForBox(props.date.getFullYear(), year), onclick: function() {\r\n                                var newDate = new Date(props.date);\r\n                                newDate.setFullYear(year);\r\n                                props.date = pushToLastDay(props.date, newDate);\r\n                                props.view = 1;\r\n                            }\r\n                        }, m('.number', year));\r\n                    })\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var Editor = {\r\n        oncreate: function(vnode) {\r\n            requestAnimationFrame(function() {\r\n                vnode.dom.classList.add('active');\r\n            });\r\n        },\r\n        onbeforeremove: function(vnode) {\r\n            vnode.dom.classList.remove('active');\r\n            return new Promise(function(done) {\r\n                setTimeout(done, 200);\r\n            });\r\n        },\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            return m('.editor', { onkeydown: checkKey.bind(null, props) },\r\n                m(Header, { props: props }),\r\n                m('.sled', { class: 'p' + props.view },\r\n                    m(MonthView, { props: props }),\r\n                    m(YearView, { props: props }),\r\n                    m(DecadeView, { props: props })\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var DatePicker = {\r\n        localize: function(loc) {\r\n            if (loc) {\r\n                prevNextTitles = loc.prevNextTitles || prevNextTitles;\r\n                locale = loc.locale || locale;\r\n                formatOptions = loc.formatOptions || formatOptions;\r\n                weekStart = $.isNumber(loc.weekStart) ? loc.weekStart : weekStart;\r\n                var strings = stringsForLocale(locale);\r\n                days = strings.days;\r\n                months = strings.months;\r\n            }\r\n        },\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            var date = new Date(attrs.date || defaultDate());\r\n            if (!attrs.date) {\r\n                attrs.onchange(date);\r\n            }\r\n            var props = {\r\n                date: date,\r\n                format: attrs.format || defaultFormat,\r\n                name: attrs.name,\r\n                active: false,\r\n                view: 0,\r\n                required: attrs.required,\r\n                disabled: attrs.disabled,\r\n                onchange: attrs.onchange,\r\n                class: attrs.class\r\n            };\r\n\r\n            ['prevNextTitles', 'locale', 'formatOptions'].forEach(function(prop) {\r\n                props[prop] = attrs[prop] || prop;\r\n            });\r\n            props.weekStart = $.isNumber(attrs.weekStart) ? attrs.weekStart : weekStart;\r\n\r\n            if (attrs.locale && attrs.locale !== locale) {\r\n                var strings = stringsForLocale(props.locale);\r\n                props.days = strings.days;\r\n                props.months = strings.months;\r\n            }\r\n\r\n            vnode.state.props = props;\r\n        },\r\n        onbeforeupdate: function(vnode) {\r\n            vnode.state.props.class = vnode.attrs.class;\r\n        },\r\n        onupdate: function(vnode) {\r\n            var chosen = $.get('.chosen', vnode.dom);\r\n            if (chosen) {\r\n                chosen.focus();\r\n            }\r\n        },\r\n        showEditor: function(props, e) {\r\n            if (e && e instanceof KeyboardEvent) {\r\n                if (e.keyCode !== _keys.SPACE && e.keyCode !== _keys.ENTER) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (props.disabled) {\r\n                return;\r\n            }\r\n            if (props.active) {\r\n                props.view = 0;\r\n            }\r\n            props.active = !props.active;\r\n        },\r\n        view: function(vnode) {\r\n            var props = vnode.state.props;\r\n            return m('.mithril-date-picker-container', { class: ((props.active ? 'active' : '') + ' ' + props.class).trim() },\r\n                m('input.current-date.form-input', {\r\n                    name: props.name,\r\n                    class: props.required ? 'required' : null,\r\n                    format: props.format,\r\n                    readonly: true,\r\n                    onclick: this.showEditor.bind(null, props),\r\n                    onkeydown: this.showEditor.bind(null, props),\r\n                    value: $.fecha.format(props.date, props.format || defaultFormat)\r\n                }),\r\n                m('i.dash.current-date-indicator', { class: props.active ? 'dash-sort-up' : 'dash-sort-down' }),\r\n                props.active && m(Editor, { props: props })\r\n            );\r\n        }\r\n    };\r\n\r\n    return DatePicker;\r\n});\r\n","/*!\r\n * Library for storing widget positions and detecting collisions.\r\n */\r\n(function(root, factory) {\r\n    root.Rect = factory(root.$);\r\n})(this, function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Constructor for a rect.\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     */\r\n    function Rect(width, height, x, y) {\r\n        this.x = $.coalesce(x, 0);\r\n        this.y = $.coalesce(y, 0);\r\n        this.width = $.coalesce(width, 0);\r\n        this.height = $.coalesce(height, 0);\r\n        this.updated = false;\r\n    }\r\n\r\n    Rect.prototype = {\r\n        /**\r\n         * Check if rect intersects with this rect.\r\n         * @param {Rect} rect - Rect to check for intersection with.\r\n         * @returns {bool} True if the rectangles collide, else false.\r\n         */\r\n        overlaps: function(rect) {\r\n            var thisRight = this.x + this.width;\r\n            var thisBottom = this.y + this.height;\r\n            var rectRight = rect.x + rect.width;\r\n            var rectBottom = rect.y + rect.height;\r\n\r\n            // http://stackoverflow.com/a/306332\r\n            return this.x < rectRight && thisRight > rect.x && this.y < rectBottom && thisBottom > rect.y;\r\n        }\r\n    };\r\n\r\n    return Rect;\r\n});\r\n","/*!\r\n * Draggabilly PACKAGED v2.1.1\r\n * Make that shiz draggable\r\n * http://draggabilly.desandro.com\r\n * MIT license\r\n *\r\n * Modified to remove jQuery completely.\r\n */\r\n\r\n/*!\r\n * getSize v2.0.2\r\n * measure size of elements\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    root.getSize = factory(root.$);\r\n})(this, function factory($) {\r\n    /**\r\n     * Get a number from a string, not a percentage.\r\n     * @param {string} value - String to parse.\r\n     * @returns {Number} Returns the number.\r\n     */\r\n    function getStyleSize(value) {\r\n        var num = parseFloat(value);\r\n        // not a percent like '100%', and a number\r\n        return value.indexOf('%') === -1 && !isNaN(num) && num;\r\n    }\r\n\r\n    var measurements = [\r\n        'paddingLeft',\r\n        'paddingRight',\r\n        'paddingTop',\r\n        'paddingBottom',\r\n        'marginLeft',\r\n        'marginRight',\r\n        'marginTop',\r\n        'marginBottom',\r\n        'borderLeftWidth',\r\n        'borderRightWidth',\r\n        'borderTopWidth',\r\n        'borderBottomWidth'\r\n    ];\r\n\r\n    var measurementsLength = measurements.length;\r\n\r\n    /**\r\n     * Build the size measurements for a hidden element.\r\n     * @returns {Object} Measurements for the element.\r\n     */\r\n    function getZeroSize() {\r\n        var size = {\r\n            width: 0,\r\n            height: 0,\r\n            innerWidth: 0,\r\n            innerHeight: 0,\r\n            outerWidth: 0,\r\n            outerHeight: 0\r\n        };\r\n        for (var i = 0; i < measurementsLength; i++) {\r\n            size[measurements[i]] = 0;\r\n        }\r\n        return size;\r\n    }\r\n\r\n    var isSetup = false;\r\n    var isBoxSizeOuter;\r\n\r\n    /**\r\n     * Setup the instance.\r\n     */\r\n    function setup() {\r\n        // setup once\r\n        if (isSetup) {\r\n            return;\r\n        }\r\n        isSetup = true;\r\n\r\n        /**\r\n         * WebKit measures the outer-width on style.width on border-box elems\r\n         * IE & Firefox<29 measures the inner-width\r\n         */\r\n        var div = document.createElement('div');\r\n        $.style(div, { width: '200px', padding: '1px 2px 3px 4px', borderStyle: 'solid', borderWidth: '1px 2px 3px 4px', boxSizing: 'border-box' });\r\n\r\n        var body = document.body || document.documentElement;\r\n        body.appendChild(div);\r\n        var style = getComputedStyle(div);\r\n\r\n        getSize.isBoxSizeOuter = isBoxSizeOuter = getStyleSize(style.width) === 200;\r\n        body.removeChild(div);\r\n    }\r\n\r\n    /**\r\n     * Get the dimensions of a node.\r\n     * @param {Node|string} elem - Node object or query selector.\r\n     * @returns {Object} Dimensions for node.\r\n     */\r\n    function getSize(elem) {\r\n        setup();\r\n\r\n        elem = $.get(elem);\r\n        if (!$.isNode(elem)) {\r\n            return;\r\n        }\r\n\r\n        var style = getComputedStyle(elem);\r\n\r\n        // if hidden, everything is 0\r\n        if (style.display === 'none') {\r\n            return getZeroSize();\r\n        }\r\n\r\n        var size = { width: elem.offsetWidth, height: elem.offsetHeight };\r\n        var isBorderBox = size.isBorderBox = style.boxSizing === 'border-box';\r\n\r\n        // get all measurements\r\n        for (var i = 0; i < measurementsLength; i++) {\r\n            var measurement = measurements[i];\r\n            var value = style[measurement];\r\n            var num = parseFloat(value);\r\n            // any 'auto', 'medium' value will be 0\r\n            size[measurement] = !isNaN(num) ? num : 0;\r\n        }\r\n\r\n        var paddingWidth = size.paddingLeft + size.paddingRight;\r\n        var paddingHeight = size.paddingTop + size.paddingBottom;\r\n        var marginWidth = size.marginLeft + size.marginRight;\r\n        var marginHeight = size.marginTop + size.marginBottom;\r\n        var borderWidth = size.borderLeftWidth + size.borderRightWidth;\r\n        var borderHeight = size.borderTopWidth + size.borderBottomWidth;\r\n        var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\r\n\r\n        // overwrite width and height if we can get it from style\r\n        var styleWidth = getStyleSize(style.width);\r\n        if (styleWidth !== false) {\r\n            // add padding and border unless it's already including it\r\n            size.width = styleWidth + (isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth);\r\n        }\r\n\r\n        var styleHeight = getStyleSize(style.height);\r\n        if (styleHeight !== false) {\r\n            // add padding and border unless it's already including it\r\n            size.height = styleHeight + (isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight);\r\n        }\r\n\r\n        size.innerWidth = size.width - (paddingWidth + borderWidth);\r\n        size.innerHeight = size.height - (paddingHeight + borderHeight);\r\n        size.outerWidth = size.width + marginWidth;\r\n        size.outerHeight = size.height + marginHeight;\r\n\r\n        return size;\r\n    }\r\n\r\n    return getSize;\r\n});\r\n\r\n/**\r\n * EvEmitter v1.0.3\r\n * Lil' event emitter\r\n * MIT License\r\n */\r\n\r\n/* jshint unused: true, undef: true, strict: true */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.EvEmitter = factory();\r\n}(this, function() {\r\n    /**\r\n     * Constructor for the event emitter.\r\n     */\r\n    function EvEmitter() { }\r\n\r\n    EvEmitter.prototype = {\r\n        /**\r\n         * Add an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Function} listener - Callback function\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        on: function(eventName, listener) {\r\n            if (!eventName || !listener) {\r\n                return;\r\n            }\r\n            // set events hash\r\n            var events = this._events = this._events || {};\r\n            // set listeners array\r\n            var listeners = events[eventName] = events[eventName] || [];\r\n            // only add once\r\n            if (listeners.indexOf(listener) === -1) {\r\n                listeners.push(listener);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Remove an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Function} listener - Callback function\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        off: function(eventName, listener) {\r\n            var listeners = this._events && this._events[eventName];\r\n            if (!listeners || !listeners.length) {\r\n                return;\r\n            }\r\n            var index = listeners.indexOf(listener);\r\n            if (index !== -1) {\r\n                listeners.splice(index, 1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Dispatch an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Array} args - Arguments for the callback.\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        emitEvent: function(eventName, args) {\r\n            var listeners = this._events && this._events[eventName];\r\n            if (!listeners || !listeners.length) {\r\n                return;\r\n            }\r\n            args = args || [];\r\n            listeners.forEach(function(x) {\r\n                x.apply(this, args);\r\n            });\r\n            return this;\r\n        }\r\n    };\r\n\r\n    return EvEmitter;\r\n}));\r\n\r\n/*!\r\n * Unipointer v2.1.0\r\n * base class for doing one thing with pointer event\r\n * MIT license\r\n */\r\n\r\n/*jshint browser: true, undef: true, unused: true, strict: true */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Unipointer = factory(root.$, root, root.EvEmitter);\r\n}(this, function factory($, root, EvEmitter) {\r\n    /**\r\n     * Constructor for the Unipointer\r\n     */\r\n    function Unipointer() { }\r\n\r\n    // inherit EvEmitter\r\n    var proto = Unipointer.prototype = Object.create(EvEmitter.prototype);\r\n\r\n    /**\r\n     * Add an event to start dragging.\r\n     * @param {Node} elem - Node to add the event to.\r\n     */\r\n    proto.bindStartEvent = function(elem) {\r\n        this._bindStartEvent(elem, true);\r\n    };\r\n\r\n    /**\r\n     * Remove an event to start dragging.\r\n     * @param {Node} elem - Node to remove the event from.\r\n     */\r\n    proto.unbindStartEvent = function(elem) {\r\n        this._bindStartEvent(elem, false);\r\n    };\r\n\r\n    /**\r\n     * Add/remove the event to start dragging.\r\n     * @param {Node} elem - Node to add/remove the event to.\r\n     * @param {Boolean} isBind - will unbind if falsey.\r\n     * @private\r\n     */\r\n    proto._bindStartEvent = function(elem, isBind) {\r\n        var bindMethod = $.coalesce(isBind, true) ? 'addEventListener' : 'removeEventListener';\r\n\r\n        if (window.navigator.pointerEnabled) {\r\n            // W3C Pointer Events, IE11. See https://coderwall.com/p/mfreca\r\n            elem[bindMethod]('pointerdown', this);\r\n        } else if (window.navigator.msPointerEnabled) {\r\n            // IE10 Pointer Events\r\n            elem[bindMethod]('MSPointerDown', this);\r\n        } else {\r\n            // listen for both, for devices like Chrome Pixel\r\n            elem[bindMethod]('mousedown', this);\r\n            elem[bindMethod]('touchstart', this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Trigger handler methods for events\r\n     * @param {Event} event - Event to trigger.\r\n     */\r\n    proto.handleEvent = function(event) {\r\n        var method = 'on' + event.type;\r\n        if (this[method]) {\r\n            this[method](event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns the touch that we're keeping track of.\r\n     * @param {Touch[]} touches - Touch history\r\n     * @returns {Touch} Touch event.\r\n     */\r\n    proto.getTouch = function(touches) {\r\n        return $.findByKey(touches, 'identifier', this.pointerIdentifier);\r\n    };\r\n\r\n    /**\r\n     * Handle a mouse click.\r\n     * @param {Event} event - Click event.\r\n     */\r\n    proto.onmousedown = function(event) {\r\n        // dismiss clicks from right or middle buttons\r\n        var button = event.button;\r\n        if (button && (button !== 0 && button !== 1)) {\r\n            return;\r\n        }\r\n        this._pointerDown(event, event);\r\n    };\r\n\r\n    /**\r\n     * Handle a touch.\r\n     * @param {Touch} event - Touch event.\r\n     */\r\n    proto.ontouchstart = function(event) {\r\n        this._pointerDown(event, event.changedTouches[0]);\r\n    };\r\n\r\n    /**\r\n     * Handle a mouse click for IE.\r\n     * @param {Event} event - Click event.\r\n     */\r\n    proto.onMSPointerDown = proto.onpointerdown = function(event) {\r\n        this._pointerDown(event, event);\r\n    };\r\n\r\n    /**\r\n     * Start a click/touch event.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerDown = function(event, pointer) {\r\n        // dismiss other pointers\r\n        if (this.isPointerDown) {\r\n            return;\r\n        }\r\n\r\n        this.isPointerDown = true;\r\n        // save pointer identifier to match up touch events\r\n        // pointerId for pointer events, touch.indentifier for touch events\r\n        this.pointerIdentifier = pointer.pointerId !== undefined ? pointer.pointerId : pointer.identifier;\r\n        this.pointerDown(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Bind events after the start of a click/touch event.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        this._bindPostStartEvents(event);\r\n        this.emitEvent('pointerDown', [event, pointer]);\r\n    };\r\n\r\n    // hash of events to be bound after start event\r\n    var postStartEvents = {\r\n        mousedown: ['mousemove', 'mouseup'],\r\n        touchstart: ['touchmove', 'touchend', 'touchcancel'],\r\n        pointerdown: ['pointermove', 'pointerup', 'pointercancel'],\r\n        MSPointerDown: ['MSPointerMove', 'MSPointerUp', 'MSPointerCancel']\r\n    };\r\n\r\n    /**\r\n     * Add all of the events that are needed after start dragging.\r\n     * @param {Event} event - Original click/touch event.\r\n     * @private\r\n     */\r\n    proto._bindPostStartEvents = function(event) {\r\n        if (!event) {\r\n            return;\r\n        }\r\n        // get proper events to match start event\r\n        var events = postStartEvents[event.type];\r\n        // bind events to node\r\n        events.forEach(function(eventName) {\r\n            window.addEventListener(eventName, this);\r\n        }, this);\r\n        // save these arguments\r\n        this._boundPointerEvents = events;\r\n    };\r\n\r\n    /**\r\n     * Remove all of the events that are needed after start dragging.\r\n     * @param {Event} event - Original click/touch event.\r\n     * @private\r\n     */\r\n    proto._unbindPostStartEvents = function() {\r\n        // check for _boundEvents, in case dragEnd triggered twice (old IE8 bug)\r\n        if (!this._boundPointerEvents) {\r\n            return;\r\n        }\r\n        this._boundPointerEvents.forEach(function(eventName) {\r\n            window.removeEventListener(eventName, this);\r\n        }, this);\r\n\r\n        delete this._boundPointerEvents;\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse moves.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onmousemove = function(event) {\r\n        this._pointerMove(event, event);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse moves for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerMove = proto.onpointermove = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerMove(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch moves.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchmove = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerMove(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer move from all the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerMove = function(event, pointer) {\r\n        this.pointerMove(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer move event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        this.emitEvent('pointerMove', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse button is released.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onmouseup = function(event) {\r\n        this._pointerUp(event, event);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse button is released for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerUp = proto.onpointerup = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerUp(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch is released.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchend = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerUp(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer up from all the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerUp = function(event, pointer) {\r\n        this._pointerDone();\r\n        this.pointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer up event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        this.emitEvent('pointerUp', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Event handler for when the dragging stops.\r\n     * @private\r\n     */\r\n    proto._pointerDone = function() {\r\n        // reset properties\r\n        this.isPointerDown = false;\r\n        delete this.pointerIdentifier;\r\n        // remove events\r\n        this._unbindPostStartEvents();\r\n        this.pointerDone();\r\n    };\r\n\r\n    proto.pointerDone = $.noop;\r\n\r\n    /**\r\n     * Event handler when the mouse click is canceled for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerCancel = proto.onpointercancel = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerCancel(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch is canceled.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchcancel = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerCancel(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer cancel from all of the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerCancel = function(event, pointer) {\r\n        this._pointerDone();\r\n        this.pointerCancel(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer cancel event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerCancel = function(event, pointer) {\r\n        this.emitEvent('pointerCancel', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Utility function for getting x/y coords from event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @returns {Object} Object with x & y coordinates.\r\n     */\r\n    Unipointer.getPointerPoint = function(pointer) {\r\n        return {\r\n            x: pointer.pageX,\r\n            y: pointer.pageY\r\n        };\r\n    };\r\n\r\n    return Unipointer;\r\n}));\r\n\r\n/*!\r\n * Unidragger v2.1.0\r\n * Draggable base class\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Unidragger = factory(root.$, root, root.Unipointer);\r\n}(this, function factory($, root, Unipointer) {\r\n    /**\r\n     * Unidragger constructor.\r\n     */\r\n    function Unidragger() { }\r\n\r\n    /**\r\n     * Inherit Unipointer & EvEmitter\r\n     */\r\n    var proto = Unidragger.prototype = Object.create(Unipointer.prototype);\r\n\r\n    /**\r\n     * Add events for drag handle.\r\n     */\r\n    proto.bindHandles = function() {\r\n        this._bindHandles(true);\r\n    };\r\n\r\n    /**\r\n     * Remove events for drag handle.\r\n     */\r\n    proto.unbindHandles = function() {\r\n        this._bindHandles(false);\r\n    };\r\n\r\n    /**\r\n     * Handle adding/removing events for the drag handle.\r\n     * @param {Bool} isBind - Unbind if falsey.\r\n     */\r\n    proto._bindHandles = function(isBind) {\r\n        isBind = $.coalesce(isBind, true);\r\n        // extra bind logic\r\n        var binderExtra;\r\n        var navigator = window.navigator;\r\n        if (navigator.pointerEnabled || navigator.msPointerEnabled) {\r\n            var prop = navigator.pointerEnabled ? 'touchAction' : 'msTouchAction';\r\n            binderExtra = function(handle) {\r\n                // disable scrolling on the element\r\n                handle.style[prop] = isBind ? 'none' : '';\r\n            };\r\n        } else {\r\n            binderExtra = $.noop;\r\n        }\r\n        // bind each handle\r\n        var bindMethod = isBind ? 'addEventListener' : 'removeEventListener';\r\n        for (var i = 0; i < this.handles.length; i++) {\r\n            var handle = this.handles[i];\r\n            this._bindStartEvent(handle, isBind);\r\n            binderExtra(handle);\r\n            handle[bindMethod]('click', this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Pointer start\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        // dismiss range sliders\r\n        if (event.target.nodeName === 'INPUT' && event.target.type === 'range') {\r\n            // reset pointerDown logic\r\n            this.isPointerDown = false;\r\n            delete this.pointerIdentifier;\r\n            return;\r\n        }\r\n\r\n        this._dragPointerDown(event, pointer);\r\n        // kludge to blur focused inputs in dragger\r\n        var focused = document.activeElement;\r\n        if (focused && focused.blur) {\r\n            focused.blur();\r\n        }\r\n        // bind move and end events\r\n        this._bindPostStartEvents(event);\r\n        this.emitEvent('pointerDown', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Base pointer down logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragPointerDown = function(event, pointer) {\r\n        // track to see when dragging starts\r\n        this.pointerDownPoint = Unipointer.getPointerPoint(pointer);\r\n        if (this.canPreventDefaultOnPointerDown(event, pointer)) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Overwriteable method so Flickity can prevent for scrolling\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @returns {Bool} True if allowed to prevent default event, else false.\r\n     */\r\n    proto.canPreventDefaultOnPointerDown = function(event) {\r\n        // prevent default, unless touchstart or <select>\r\n        return event.target.nodeName !== 'SELECT';\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        var moveVector = this._dragPointerMove(event, pointer);\r\n        this.emitEvent('pointerMove', [event, pointer, moveVector]);\r\n        this._dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Base pointer move logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @returns {Object} Object with x & y coordinates.\r\n     */\r\n    proto._dragPointerMove = function(event, pointer) {\r\n        var movePoint = Unipointer.getPointerPoint(pointer);\r\n        var moveVector = {\r\n            x: movePoint.x - this.pointerDownPoint.x,\r\n            y: movePoint.y - this.pointerDownPoint.y\r\n        };\r\n        // start drag if pointer has moved far enough to start drag\r\n        if (!this.isDragging && this.hasDragStarted(moveVector)) {\r\n            this._dragStart(event, pointer);\r\n        }\r\n        return moveVector;\r\n    };\r\n\r\n    /**\r\n     * Check if pointer has moved far enough to start drag.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     * @returns {Bool} True if moved far enough to count as move.\r\n     */\r\n    proto.hasDragStarted = function(moveVector) {\r\n        return Math.abs(moveVector.x) > 3 || Math.abs(moveVector.y) > 3;\r\n    };\r\n\r\n    /**\r\n     * Pointer up.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        this.emitEvent('pointerUp', [event, pointer]);\r\n        this._dragPointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Handle mouse/touch up.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragPointerUp = function(event, pointer) {\r\n        if (this.isDragging) {\r\n            this._dragEnd(event, pointer);\r\n        } else {\r\n            // pointer didn't move enough for drag to start\r\n            this._staticClick(event, pointer);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Base drag start logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._dragStart = function(event, pointer) {\r\n        this.isDragging = true;\r\n        this.dragStartPoint = Unipointer.getPointerPoint(pointer);\r\n        this.isPreventingClicks = true;\r\n        this.dragStart(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag start event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragStart = function(event, pointer) {\r\n        this.emitEvent('dragStart', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Base drag move logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     * @private\r\n     */\r\n    proto._dragMove = function(event, pointer, moveVector) {\r\n        // do not drag if not dragging yet\r\n        if (!this.isDragging) {\r\n            return;\r\n        }\r\n        this.dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag move event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     */\r\n    proto.dragMove = function(event, pointer, moveVector) {\r\n        event.preventDefault();\r\n        this.emitEvent('dragMove', [event, pointer, moveVector]);\r\n    };\r\n\r\n    /**\r\n     * Base logic for drag end.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragEnd = function(event, pointer) {\r\n        this.isDragging = false;\r\n        // re-enable clicking async\r\n        setTimeout(function() {\r\n            delete this.isPreventingClicks;\r\n        }.bind(this));\r\n        this.dragEnd(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag end event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragEnd = function(event, pointer) {\r\n        this.emitEvent('dragEnd', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Handle all clicks and prevent clicks when dragging\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     */\r\n    proto.onclick = function(event) {\r\n        if (this.isPreventingClicks) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Triggered after pointer down & up with no/tiny movement.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._staticClick = function(event, pointer) {\r\n        // ignore emulated mouse up clicks\r\n        if (this.isIgnoringMouseUp && event.type === 'mouseup') {\r\n            return;\r\n        }\r\n\r\n        // allow click in <input>s and <textarea>s\r\n        var nodeName = event.target.nodeName;\r\n        if (nodeName === 'INPUT' || nodeName === 'TEXTAREA') {\r\n            event.target.focus();\r\n        }\r\n        this.staticClick(event, pointer);\r\n\r\n        // set flag for emulated clicks 300ms after touchend\r\n        if (event.type !== 'mouseup') {\r\n            this.isIgnoringMouseUp = true;\r\n            // reset flag after 300ms\r\n            setTimeout(function() {\r\n                delete this.isIgnoringMouseUp;\r\n            }.bind(this), 400);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Dispatch event for staticClick for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.staticClick = function(event, pointer) {\r\n        this.emitEvent('staticClick', [event, pointer]);\r\n    };\r\n\r\n    return Unidragger;\r\n}));\r\n\r\n/*!\r\n * Draggabilly v2.1.1\r\n * Make that shiz draggable\r\n * http://draggabilly.desandro.com\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Draggabilly = factory(root.$, root, root.getSize, root.Unidragger);\r\n}(this, function factory($, root, getSize, Unidragger) {\r\n    var lastTime = 0;\r\n    // get rAF, prefixed, if present. fallback to setTimeout\r\n    var requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(callback) {\r\n        var currTime = new Date().getTime();\r\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n        var id = setTimeout(callback, timeToCall);\r\n        lastTime = currTime + timeToCall;\r\n        return id;\r\n    };\r\n    var transformProperty = $.isString(document.documentElement.style.transform) ? 'transform' : 'WebkitTransform';\r\n\r\n    /**\r\n     * Draggabilly constructor.\r\n     * @param {Node|string} element - Node, or querySelector string of node, to make draggable.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    function Draggabilly(element, options) {\r\n        this.element = $.get(element);\r\n        this.options = options || {};\r\n        this._create();\r\n    }\r\n\r\n    /**\r\n     * Inherit Unidragger methods.\r\n     */\r\n    var proto = Draggabilly.prototype = Object.create(Unidragger.prototype);\r\n\r\n    /**\r\n     * CSS position values that don't need to be set.\r\n     */\r\n    var positionValues = { relative: true, absolute: true, fixed: true };\r\n\r\n    /**\r\n     * Initialize draggabilly.\r\n     */\r\n    proto._create = function() {\r\n        // properties\r\n        this.position = {};\r\n        this._getPosition();\r\n\r\n        this.startPoint = { x: 0, y: 0 };\r\n        this.dragPoint = { x: 0, y: 0 };\r\n        this.startPosition = {};\r\n\r\n        // set relative positioning\r\n        var style = getComputedStyle(this.element);\r\n        if (!positionValues[style.position]) {\r\n            this.element.style.position = 'relative';\r\n        }\r\n\r\n        this.enable();\r\n        this.setHandles();\r\n    };\r\n\r\n    /**\r\n     * Set this.handles and bind start events to the handles.\r\n     */\r\n    proto.setHandles = function() {\r\n        this.handles = this.options.handle ? $.getAll(this.options.handle, this.element) : [this.element];\r\n        this.bindHandles();\r\n    };\r\n\r\n    /**\r\n     * Emits events via EvEmitter.\r\n     * @param {String} type - Name of event.\r\n     * @param {Event} event - Original event.\r\n     * @param {Array} args - Extra arguments.\r\n     */\r\n    proto.dispatchEvent = function(type, event, args) {\r\n        this.emitEvent(type, [event].concat(args));\r\n    };\r\n\r\n    /**\r\n     * Get x/y position from style.\r\n     */\r\n    proto._getPosition = function() {\r\n        var style = getComputedStyle(this.element);\r\n        var x = this._getPositionCoord(style.left, 'width');\r\n        var y = this._getPositionCoord(style.top, 'height');\r\n        // clean up 'auto' or other non-integer values\r\n        this.position.x = isNaN(x) ? 0 : x;\r\n        this.position.y = isNaN(y) ? 0 : y;\r\n\r\n        this._addTransformPosition(style);\r\n    };\r\n\r\n    /**\r\n     * Get a numeric coordinate from a style.\r\n     * @param {String} styleSide - CSS style to parse.\r\n     * @param {String} measure - Property name to get the size for.\r\n     * @returns {Number} Resulting size in pixels.\r\n     */\r\n    proto._getPositionCoord = function(styleSide, measure) {\r\n        if (styleSide.indexOf('%') !== -1) {\r\n            // convert percent into pixel for Safari, #75\r\n            var parentSize = getSize(this.element.parentNode);\r\n            // prevent not-in-DOM element throwing bug, #131\r\n            return !parentSize ? 0 : (parseFloat(styleSide) / 100) * parentSize[measure];\r\n        }\r\n        return parseInt(styleSide, 10);\r\n    };\r\n\r\n    /**\r\n     * Add `transform: translate( x, y )` to position.\r\n     * @param {CSSStyleDeclaration} style - Element styles to add to.\r\n     */\r\n    proto._addTransformPosition = function(style) {\r\n        var transform = style[transformProperty];\r\n        // bail out if value is 'none'\r\n        if (transform.indexOf('matrix') !== 0) {\r\n            return;\r\n        }\r\n        // split matrix(1, 0, 0, 1, x, y)\r\n        var matrixValues = transform.split(',');\r\n        // translate X value is in 12th or 4th position\r\n        var xIndex = transform.indexOf('matrix3d') === 0 ? 12 : 4;\r\n        var translateX = parseInt(matrixValues[xIndex], 10);\r\n        // translate Y value is in 13th or 5th position\r\n        var translateY = parseInt(matrixValues[xIndex + 1], 10);\r\n        this.position.x += translateX;\r\n        this.position.y += translateY;\r\n    };\r\n\r\n    /**\r\n     * Pointer start.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        this._dragPointerDown(event, pointer);\r\n        // kludge to blur focused inputs in dragger\r\n        var focused = document.activeElement;\r\n        // do not blur body for IE10, metafizzy/flickity#117\r\n        if (focused && focused.blur && focused !== document.body) {\r\n            focused.blur();\r\n        }\r\n        // bind move and end events\r\n        this._bindPostStartEvents(event);\r\n        $.addClass(this.element, 'is-pointer-down');\r\n        this.dispatchEvent('pointerDown', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        var moveVector = this._dragPointerMove(event, pointer);\r\n        this.dispatchEvent('pointerMove', event, [pointer, moveVector]);\r\n        this._dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Drag start.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragStart = function(event, pointer) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n        this._getPosition();\r\n        this.measureContainment();\r\n        // position _when_ drag began\r\n        this.startPosition.x = this.position.x;\r\n        this.startPosition.y = this.position.y;\r\n        // reset left/top style\r\n        this.setLeftTop();\r\n\r\n        this.dragPoint.x = 0;\r\n        this.dragPoint.y = 0;\r\n\r\n        $.addClass(this.element, 'is-dragging');\r\n        this.dispatchEvent('dragStart', event, [pointer]);\r\n        // start animation\r\n        this.animate();\r\n    };\r\n\r\n    /**\r\n     * Calculate the correct position of the element within its container.\r\n     */\r\n    proto.measureContainment = function() {\r\n        var containment = this.options.containment;\r\n        if (!containment) {\r\n            return;\r\n        }\r\n\r\n        // use element if element, otherwise just `true`, use the parent\r\n        var container = $.isNode(containment) ? containment : $.isString(containment) ? $.get(containment) : this.element.parentNode;\r\n        var elemSize = getSize(this.element);\r\n        var containerSize = getSize(container);\r\n        var elemRect = this.element.getBoundingClientRect();\r\n        var containerRect = container.getBoundingClientRect();\r\n        var borderSizeX = containerSize.borderLeftWidth + containerSize.borderRightWidth;\r\n        var borderSizeY = containerSize.borderTopWidth + containerSize.borderBottomWidth;\r\n\r\n        var position = this.relativeStartPosition = {\r\n            x: elemRect.left - (containerRect.left + containerSize.borderLeftWidth),\r\n            y: elemRect.top - (containerRect.top + containerSize.borderTopWidth)\r\n        };\r\n\r\n        this.containSize = {\r\n            width: (containerSize.width - borderSizeX) - position.x - elemSize.width,\r\n            height: (containerSize.height - borderSizeY) - position.y - elemSize.height\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x and y coordinates of current position.\r\n     */\r\n    proto.dragMove = function(event, pointer, moveVector) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n\r\n        var dragX = moveVector.x;\r\n        var dragY = moveVector.y;\r\n        var grid = this.options.grid;\r\n        var gridX = grid && grid[0];\r\n        var gridY = grid && grid[1];\r\n\r\n        dragX = applyGrid(dragX, gridX);\r\n        dragY = applyGrid(dragY, gridY);\r\n\r\n        dragX = this.containDrag('x', dragX, gridX);\r\n        dragY = this.containDrag('y', dragY, gridY);\r\n\r\n        // constrain to axis\r\n        dragX = this.options.axis === 'y' ? 0 : dragX;\r\n        dragY = this.options.axis === 'x' ? 0 : dragY;\r\n\r\n        if (this.options.minZero) {\r\n            dragX = applyMinZero(this.startPosition.x, dragX);\r\n            dragY = applyMinZero(this.startPosition.y, dragY);\r\n        }\r\n\r\n        this.position.x = this.startPosition.x + dragX;\r\n        this.position.y = this.startPosition.y + dragY;\r\n        // set dragPoint properties\r\n        this.dragPoint.x = dragX;\r\n        this.dragPoint.y = dragY;\r\n\r\n        this.dispatchEvent('dragMove', event, [pointer, moveVector]);\r\n    };\r\n\r\n    /**\r\n     * Adjust a coordinate to snap to the grid.\r\n     * @param {Number} value - Coordinate to snap to grid.\r\n     * @param {Number} grid - Grid width/height.\r\n     * @param {String} method - Math method to apply.\r\n     * @returns {Number} Closes number that snaps to grid.\r\n     */\r\n    function applyGrid(value, grid, method) {\r\n        return grid ? Math[method || 'round'](value / grid) * grid : value;\r\n    }\r\n\r\n    /**\r\n     * Adjust the drag position to prevent the item from moving out of the container to the left or top.\r\n     * @param {Number} start - Element starting coordinate.\r\n     * @param {Number} drag - Distance element was dragged.\r\n     * @returns {Number} Corrected drag coordinate.\r\n     */\r\n    function applyMinZero(start, drag) {\r\n        return start + drag < 0 ? -start : drag;\r\n    }\r\n\r\n    /**\r\n     * Limit dragging within boundaries.\r\n     * @param {string} axis - X or Y Axis\r\n     * @param {number} drag - Position coordinate on axis\r\n     * @param {number} grid - Boundary coordinate on axis.\r\n     * @returns {number} Coordinate contained with drag.\r\n     */\r\n    proto.containDrag = function(axis, drag, grid) {\r\n        if (!this.options.containment) {\r\n            return drag;\r\n        }\r\n        var measure = axis === 'x' ? 'width' : 'height';\r\n\r\n        var rel = this.relativeStartPosition[axis];\r\n        var min = applyGrid(-rel, grid, 'ceil');\r\n        var max = this.containSize[measure];\r\n        max = applyGrid(max, grid, 'floor');\r\n        return Math.min(max, Math.max(min, drag));\r\n    };\r\n\r\n    /**\r\n     * pointer up\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        $.removeClass(this.element, 'is-pointer-down');\r\n        this.dispatchEvent('pointerUp', event, [pointer]);\r\n        this._dragPointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Drag end.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragEnd = function(event, pointer) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n        // use top left position when complete\r\n        if (transformProperty) {\r\n            this.element.style[transformProperty] = '';\r\n            this.setLeftTop();\r\n        }\r\n        $.removeClass(this.element, 'is-dragging');\r\n        this.dispatchEvent('dragEnd', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Animate while dragging.\r\n     */\r\n    proto.animate = function() {\r\n        if (!this.isDragging) {\r\n            return;\r\n        }\r\n        this.positionDrag();\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    };\r\n\r\n    /**\r\n     * Set left/top positioning.\r\n     */\r\n    proto.setLeftTop = function() {\r\n        $.style(this.element, { left: this.position.x + 'px', top: this.position.y + 'px' });\r\n    };\r\n\r\n    /**\r\n     * Set position transform based on drag.\r\n     */\r\n    proto.positionDrag = function() {\r\n        this.element.style[transformProperty] = 'translate3d( ' + this.dragPoint.x + 'px, ' + this.dragPoint.y + 'px, 0)';\r\n    };\r\n\r\n    /**\r\n     * Dispatch the event for static click callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.staticClick = function(event, pointer) {\r\n        this.dispatchEvent('staticClick', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Enable dragging.\r\n     */\r\n    proto.enable = function() {\r\n        this.isEnabled = true;\r\n    };\r\n\r\n    /**\r\n     * Disable dragging.\r\n     */\r\n    proto.disable = function() {\r\n        this.isEnabled = false;\r\n        if (this.isDragging) {\r\n            this.dragEnd();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy this instance.\r\n     */\r\n    proto.destroy = function() {\r\n        this.disable();\r\n        this.element.removeAttribute('style');\r\n        this.unbindHandles();\r\n    };\r\n\r\n    return Draggabilly;\r\n}));\r\n","/*!\r\n * Chart.js\r\n * http://chartjs.org/\r\n * Version: 2.7.1\r\n *\r\n * Copyright 2018 Chart.js Contributors\r\n * Released under the MIT license\r\n * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md\r\n */\r\n(function(f) { if (typeof exports === \"object\" && typeof module !== \"undefined\") { module.exports = f() } else if (typeof define === \"function\" && define.amd) { define([], f) } else { var g; if (typeof window !== \"undefined\") { g = window } else if (typeof global !== \"undefined\") { g = global } else if (typeof self !== \"undefined\") { g = self } else { g = this } g.Chart = f() } })(function() {\r\n    var define, module, exports; return (function e(t, n, r) { function s(o, u) { if (!n[o]) { if (!t[o]) { var a = typeof require == \"function\" && require; if (!u && a) return a(o, !0); if (i) return i(o, !0); var f = new Error(\"Cannot find module '\" + o + \"'\"); throw f.code = \"MODULE_NOT_FOUND\", f } var l = n[o] = { exports: {} }; t[o][0].call(l.exports, function(e) { var n = t[o][1][e]; return s(n ? n : e) }, l, l.exports, e, t, n, r) } return n[o].exports } var i = typeof require == \"function\" && require; for (var o = 0; o < r.length; o++)s(r[o]); return s })({\r\n        1: [function(require, module, exports) {\r\n            /* MIT license */\r\n            var colorNames = require(5);\r\n\r\n            module.exports = {\r\n                getRgba: getRgba,\r\n                getHsla: getHsla,\r\n                getRgb: getRgb,\r\n                getHsl: getHsl,\r\n                getHwb: getHwb,\r\n                getAlpha: getAlpha,\r\n\r\n                hexString: hexString,\r\n                rgbString: rgbString,\r\n                rgbaString: rgbaString,\r\n                percentString: percentString,\r\n                percentaString: percentaString,\r\n                hslString: hslString,\r\n                hslaString: hslaString,\r\n                hwbString: hwbString,\r\n                keyword: keyword\r\n            }\r\n\r\n            function getRgba(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var abbr = /^#([a-fA-F0-9]{3})$/i,\r\n                    hex = /^#([a-fA-F0-9]{6})$/i,\r\n                    rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n                    per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n                    keyword = /(\\w+)/;\r\n\r\n                var rgb = [0, 0, 0],\r\n                    a = 1,\r\n                    match = string.match(abbr);\r\n                if (match) {\r\n                    match = match[1];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match[i] + match[i], 16);\r\n                    }\r\n                }\r\n                else if (match = string.match(hex)) {\r\n                    match = match[1];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n                    }\r\n                }\r\n                else if (match = string.match(rgba)) {\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match[i + 1]);\r\n                    }\r\n                    a = parseFloat(match[4]);\r\n                }\r\n                else if (match = string.match(per)) {\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n                    }\r\n                    a = parseFloat(match[4]);\r\n                }\r\n                else if (match = string.match(keyword)) {\r\n                    if (match[1] == \"transparent\") {\r\n                        return [0, 0, 0, 0];\r\n                    }\r\n                    rgb = colorNames[match[1]];\r\n                    if (!rgb) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                for (var i = 0; i < rgb.length; i++) {\r\n                    rgb[i] = scale(rgb[i], 0, 255);\r\n                }\r\n                if (!a && a != 0) {\r\n                    a = 1;\r\n                }\r\n                else {\r\n                    a = scale(a, 0, 1);\r\n                }\r\n                rgb[3] = a;\r\n                return rgb;\r\n            }\r\n\r\n            function getHsla(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n                var match = string.match(hsl);\r\n                if (match) {\r\n                    var alpha = parseFloat(match[4]);\r\n                    var h = scale(parseInt(match[1]), 0, 360),\r\n                        s = scale(parseFloat(match[2]), 0, 100),\r\n                        l = scale(parseFloat(match[3]), 0, 100),\r\n                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n                    return [h, s, l, a];\r\n                }\r\n            }\r\n\r\n            function getHwb(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n                var match = string.match(hwb);\r\n                if (match) {\r\n                    var alpha = parseFloat(match[4]);\r\n                    var h = scale(parseInt(match[1]), 0, 360),\r\n                        w = scale(parseFloat(match[2]), 0, 100),\r\n                        b = scale(parseFloat(match[3]), 0, 100),\r\n                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n                    return [h, w, b, a];\r\n                }\r\n            }\r\n\r\n            function getRgb(string) {\r\n                var rgba = getRgba(string);\r\n                return rgba && rgba.slice(0, 3);\r\n            }\r\n\r\n            function getHsl(string) {\r\n                var hsla = getHsla(string);\r\n                return hsla && hsla.slice(0, 3);\r\n            }\r\n\r\n            function getAlpha(string) {\r\n                var vals = getRgba(string);\r\n                if (vals) {\r\n                    return vals[3];\r\n                }\r\n                else if (vals = getHsla(string)) {\r\n                    return vals[3];\r\n                }\r\n                else if (vals = getHwb(string)) {\r\n                    return vals[3];\r\n                }\r\n            }\r\n\r\n            // generators\r\n            function hexString(rgb) {\r\n                return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n                    + hexDouble(rgb[2]);\r\n            }\r\n\r\n            function rgbString(rgba, alpha) {\r\n                if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n                    return rgbaString(rgba, alpha);\r\n                }\r\n                return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n            }\r\n\r\n            function rgbaString(rgba, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n                }\r\n                return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n                    + \", \" + alpha + \")\";\r\n            }\r\n\r\n            function percentString(rgba, alpha) {\r\n                if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n                    return percentaString(rgba, alpha);\r\n                }\r\n                var r = Math.round(rgba[0] / 255 * 100),\r\n                    g = Math.round(rgba[1] / 255 * 100),\r\n                    b = Math.round(rgba[2] / 255 * 100);\r\n\r\n                return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n            }\r\n\r\n            function percentaString(rgba, alpha) {\r\n                var r = Math.round(rgba[0] / 255 * 100),\r\n                    g = Math.round(rgba[1] / 255 * 100),\r\n                    b = Math.round(rgba[2] / 255 * 100);\r\n                return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n            }\r\n\r\n            function hslString(hsla, alpha) {\r\n                if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n                    return hslaString(hsla, alpha);\r\n                }\r\n                return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n            }\r\n\r\n            function hslaString(hsla, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n                }\r\n                return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n                    + alpha + \")\";\r\n            }\r\n\r\n            // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n            // (hwb have alpha optional & 1 is default value)\r\n            function hwbString(hwb, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n                }\r\n                return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n                    + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n            }\r\n\r\n            function keyword(rgb) {\r\n                return reverseNames[rgb.slice(0, 3)];\r\n            }\r\n\r\n            // helpers\r\n            function scale(num, min, max) {\r\n                return Math.min(Math.max(min, num), max);\r\n            }\r\n\r\n            function hexDouble(num) {\r\n                var str = num.toString(16).toUpperCase();\r\n                return (str.length < 2) ? \"0\" + str : str;\r\n            }\r\n\r\n            //create a list of reverse color names\r\n            var reverseNames = {};\r\n            for (var name in colorNames) {\r\n                reverseNames[colorNames[name]] = name;\r\n            }\r\n        }, { \"5\": 5 }], 2: [function(require, module, exports) {\r\n            /* MIT license */\r\n            var convert = require(4);\r\n            var string = require(1);\r\n\r\n            var Color = function(obj) {\r\n                if (obj instanceof Color) {\r\n                    return obj;\r\n                }\r\n                if (!(this instanceof Color)) {\r\n                    return new Color(obj);\r\n                }\r\n\r\n                this.valid = false;\r\n                this.values = {\r\n                    rgb: [0, 0, 0],\r\n                    hsl: [0, 0, 0],\r\n                    hsv: [0, 0, 0],\r\n                    hwb: [0, 0, 0],\r\n                    cmyk: [0, 0, 0, 0],\r\n                    alpha: 1\r\n                };\r\n\r\n                // parse Color() argument\r\n                var vals;\r\n                if (typeof obj === 'string') {\r\n                    vals = string.getRgba(obj);\r\n                    if (vals) {\r\n                        this.setValues('rgb', vals);\r\n                    } else if (vals = string.getHsla(obj)) {\r\n                        this.setValues('hsl', vals);\r\n                    } else if (vals = string.getHwb(obj)) {\r\n                        this.setValues('hwb', vals);\r\n                    }\r\n                } else if (typeof obj === 'object') {\r\n                    vals = obj;\r\n                    if (vals.r !== undefined || vals.red !== undefined) {\r\n                        this.setValues('rgb', vals);\r\n                    } else if (vals.l !== undefined || vals.lightness !== undefined) {\r\n                        this.setValues('hsl', vals);\r\n                    } else if (vals.v !== undefined || vals.value !== undefined) {\r\n                        this.setValues('hsv', vals);\r\n                    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\r\n                        this.setValues('hwb', vals);\r\n                    } else if (vals.c !== undefined || vals.cyan !== undefined) {\r\n                        this.setValues('cmyk', vals);\r\n                    }\r\n                }\r\n            };\r\n\r\n            Color.prototype = {\r\n                isValid: function() {\r\n                    return this.valid;\r\n                },\r\n                rgb: function() {\r\n                    return this.setSpace('rgb', arguments);\r\n                },\r\n                hsl: function() {\r\n                    return this.setSpace('hsl', arguments);\r\n                },\r\n                hsv: function() {\r\n                    return this.setSpace('hsv', arguments);\r\n                },\r\n                hwb: function() {\r\n                    return this.setSpace('hwb', arguments);\r\n                },\r\n                cmyk: function() {\r\n                    return this.setSpace('cmyk', arguments);\r\n                },\r\n\r\n                rgbArray: function() {\r\n                    return this.values.rgb;\r\n                },\r\n                hslArray: function() {\r\n                    return this.values.hsl;\r\n                },\r\n                hsvArray: function() {\r\n                    return this.values.hsv;\r\n                },\r\n                hwbArray: function() {\r\n                    var values = this.values;\r\n                    if (values.alpha !== 1) {\r\n                        return values.hwb.concat([values.alpha]);\r\n                    }\r\n                    return values.hwb;\r\n                },\r\n                cmykArray: function() {\r\n                    return this.values.cmyk;\r\n                },\r\n                rgbaArray: function() {\r\n                    var values = this.values;\r\n                    return values.rgb.concat([values.alpha]);\r\n                },\r\n                hslaArray: function() {\r\n                    var values = this.values;\r\n                    return values.hsl.concat([values.alpha]);\r\n                },\r\n                alpha: function(val) {\r\n                    if (val === undefined) {\r\n                        return this.values.alpha;\r\n                    }\r\n                    this.setValues('alpha', val);\r\n                    return this;\r\n                },\r\n\r\n                red: function(val) {\r\n                    return this.setChannel('rgb', 0, val);\r\n                },\r\n                green: function(val) {\r\n                    return this.setChannel('rgb', 1, val);\r\n                },\r\n                blue: function(val) {\r\n                    return this.setChannel('rgb', 2, val);\r\n                },\r\n                hue: function(val) {\r\n                    if (val) {\r\n                        val %= 360;\r\n                        val = val < 0 ? 360 + val : val;\r\n                    }\r\n                    return this.setChannel('hsl', 0, val);\r\n                },\r\n                saturation: function(val) {\r\n                    return this.setChannel('hsl', 1, val);\r\n                },\r\n                lightness: function(val) {\r\n                    return this.setChannel('hsl', 2, val);\r\n                },\r\n                saturationv: function(val) {\r\n                    return this.setChannel('hsv', 1, val);\r\n                },\r\n                whiteness: function(val) {\r\n                    return this.setChannel('hwb', 1, val);\r\n                },\r\n                blackness: function(val) {\r\n                    return this.setChannel('hwb', 2, val);\r\n                },\r\n                value: function(val) {\r\n                    return this.setChannel('hsv', 2, val);\r\n                },\r\n                cyan: function(val) {\r\n                    return this.setChannel('cmyk', 0, val);\r\n                },\r\n                magenta: function(val) {\r\n                    return this.setChannel('cmyk', 1, val);\r\n                },\r\n                yellow: function(val) {\r\n                    return this.setChannel('cmyk', 2, val);\r\n                },\r\n                black: function(val) {\r\n                    return this.setChannel('cmyk', 3, val);\r\n                },\r\n\r\n                hexString: function() {\r\n                    return string.hexString(this.values.rgb);\r\n                },\r\n                rgbString: function() {\r\n                    return string.rgbString(this.values.rgb, this.values.alpha);\r\n                },\r\n                rgbaString: function() {\r\n                    return string.rgbaString(this.values.rgb, this.values.alpha);\r\n                },\r\n                percentString: function() {\r\n                    return string.percentString(this.values.rgb, this.values.alpha);\r\n                },\r\n                hslString: function() {\r\n                    return string.hslString(this.values.hsl, this.values.alpha);\r\n                },\r\n                hslaString: function() {\r\n                    return string.hslaString(this.values.hsl, this.values.alpha);\r\n                },\r\n                hwbString: function() {\r\n                    return string.hwbString(this.values.hwb, this.values.alpha);\r\n                },\r\n                keyword: function() {\r\n                    return string.keyword(this.values.rgb, this.values.alpha);\r\n                },\r\n\r\n                rgbNumber: function() {\r\n                    var rgb = this.values.rgb;\r\n                    return (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\r\n                },\r\n\r\n                luminosity: function() {\r\n                    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n                    var rgb = this.values.rgb;\r\n                    var lum = [];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        var chan = rgb[i] / 255;\r\n                        lum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\r\n                    }\r\n                    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n                },\r\n\r\n                contrast: function(color2) {\r\n                    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n                    var lum1 = this.luminosity();\r\n                    var lum2 = color2.luminosity();\r\n                    if (lum1 > lum2) {\r\n                        return (lum1 + 0.05) / (lum2 + 0.05);\r\n                    }\r\n                    return (lum2 + 0.05) / (lum1 + 0.05);\r\n                },\r\n\r\n                level: function(color2) {\r\n                    var contrastRatio = this.contrast(color2);\r\n                    if (contrastRatio >= 7.1) {\r\n                        return 'AAA';\r\n                    }\r\n\r\n                    return (contrastRatio >= 4.5) ? 'AA' : '';\r\n                },\r\n\r\n                dark: function() {\r\n                    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\r\n                    var rgb = this.values.rgb;\r\n                    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\r\n                    return yiq < 128;\r\n                },\r\n\r\n                light: function() {\r\n                    return !this.dark();\r\n                },\r\n\r\n                negate: function() {\r\n                    var rgb = [];\r\n                    for (var i = 0; i < 3; i++) {\r\n                        rgb[i] = 255 - this.values.rgb[i];\r\n                    }\r\n                    this.setValues('rgb', rgb);\r\n                    return this;\r\n                },\r\n\r\n                lighten: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[2] += hsl[2] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                darken: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[2] -= hsl[2] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                saturate: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[1] += hsl[1] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                desaturate: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[1] -= hsl[1] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                whiten: function(ratio) {\r\n                    var hwb = this.values.hwb;\r\n                    hwb[1] += hwb[1] * ratio;\r\n                    this.setValues('hwb', hwb);\r\n                    return this;\r\n                },\r\n\r\n                blacken: function(ratio) {\r\n                    var hwb = this.values.hwb;\r\n                    hwb[2] += hwb[2] * ratio;\r\n                    this.setValues('hwb', hwb);\r\n                    return this;\r\n                },\r\n\r\n                greyscale: function() {\r\n                    var rgb = this.values.rgb;\r\n                    // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\r\n                    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\r\n                    this.setValues('rgb', [val, val, val]);\r\n                    return this;\r\n                },\r\n\r\n                clearer: function(ratio) {\r\n                    var alpha = this.values.alpha;\r\n                    this.setValues('alpha', alpha - (alpha * ratio));\r\n                    return this;\r\n                },\r\n\r\n                opaquer: function(ratio) {\r\n                    var alpha = this.values.alpha;\r\n                    this.setValues('alpha', alpha + (alpha * ratio));\r\n                    return this;\r\n                },\r\n\r\n                rotate: function(degrees) {\r\n                    var hsl = this.values.hsl;\r\n                    var hue = (hsl[0] + degrees) % 360;\r\n                    hsl[0] = hue < 0 ? 360 + hue : hue;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                /**\r\n                 * Ported from sass implementation in C\r\n                 * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\r\n                 */\r\n                mix: function(mixinColor, weight) {\r\n                    var color1 = this;\r\n                    var color2 = mixinColor;\r\n                    var p = weight === undefined ? 0.5 : weight;\r\n\r\n                    var w = 2 * p - 1;\r\n                    var a = color1.alpha() - color2.alpha();\r\n\r\n                    var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n                    var w2 = 1 - w1;\r\n\r\n                    return this\r\n                        .rgb(\r\n                        w1 * color1.red() + w2 * color2.red(),\r\n                        w1 * color1.green() + w2 * color2.green(),\r\n                        w1 * color1.blue() + w2 * color2.blue()\r\n                        )\r\n                        .alpha(color1.alpha() * p + color2.alpha() * (1 - p));\r\n                },\r\n\r\n                toJSON: function() {\r\n                    return this.rgb();\r\n                },\r\n\r\n                clone: function() {\r\n                    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\r\n                    // making the final build way to big to embed in Chart.js. So let's do it manually,\r\n                    // assuming that values to clone are 1 dimension arrays containing only numbers,\r\n                    // except 'alpha' which is a number.\r\n                    var result = new Color();\r\n                    var source = this.values;\r\n                    var target = result.values;\r\n                    var value, type;\r\n\r\n                    for (var prop in source) {\r\n                        if (source.hasOwnProperty(prop)) {\r\n                            value = source[prop];\r\n                            type = ({}).toString.call(value);\r\n                            if (type === '[object Array]') {\r\n                                target[prop] = value.slice(0);\r\n                            } else if (type === '[object Number]') {\r\n                                target[prop] = value;\r\n                            } else {\r\n                                console.error('unexpected color value:', value);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return result;\r\n                }\r\n            };\r\n\r\n            Color.prototype.spaces = {\r\n                rgb: ['red', 'green', 'blue'],\r\n                hsl: ['hue', 'saturation', 'lightness'],\r\n                hsv: ['hue', 'saturation', 'value'],\r\n                hwb: ['hue', 'whiteness', 'blackness'],\r\n                cmyk: ['cyan', 'magenta', 'yellow', 'black']\r\n            };\r\n\r\n            Color.prototype.maxes = {\r\n                rgb: [255, 255, 255],\r\n                hsl: [360, 100, 100],\r\n                hsv: [360, 100, 100],\r\n                hwb: [360, 100, 100],\r\n                cmyk: [100, 100, 100, 100]\r\n            };\r\n\r\n            Color.prototype.getValues = function(space) {\r\n                var values = this.values;\r\n                var vals = {};\r\n\r\n                for (var i = 0; i < space.length; i++) {\r\n                    vals[space.charAt(i)] = values[space][i];\r\n                }\r\n\r\n                if (values.alpha !== 1) {\r\n                    vals.a = values.alpha;\r\n                }\r\n\r\n                // {r: 255, g: 255, b: 255, a: 0.4}\r\n                return vals;\r\n            };\r\n\r\n            Color.prototype.setValues = function(space, vals) {\r\n                var values = this.values;\r\n                var spaces = this.spaces;\r\n                var maxes = this.maxes;\r\n                var alpha = 1;\r\n                var i;\r\n\r\n                this.valid = true;\r\n\r\n                if (space === 'alpha') {\r\n                    alpha = vals;\r\n                } else if (vals.length) {\r\n                    // [10, 10, 10]\r\n                    values[space] = vals.slice(0, space.length);\r\n                    alpha = vals[space.length];\r\n                } else if (vals[space.charAt(0)] !== undefined) {\r\n                    // {r: 10, g: 10, b: 10}\r\n                    for (i = 0; i < space.length; i++) {\r\n                        values[space][i] = vals[space.charAt(i)];\r\n                    }\r\n\r\n                    alpha = vals.a;\r\n                } else if (vals[spaces[space][0]] !== undefined) {\r\n                    // {red: 10, green: 10, blue: 10}\r\n                    var chans = spaces[space];\r\n\r\n                    for (i = 0; i < space.length; i++) {\r\n                        values[space][i] = vals[chans[i]];\r\n                    }\r\n\r\n                    alpha = vals.alpha;\r\n                }\r\n\r\n                values.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\r\n\r\n                if (space === 'alpha') {\r\n                    return false;\r\n                }\r\n\r\n                var capped;\r\n\r\n                // cap values of the space prior converting all values\r\n                for (i = 0; i < space.length; i++) {\r\n                    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\r\n                    values[space][i] = Math.round(capped);\r\n                }\r\n\r\n                // convert to all the other color spaces\r\n                for (var sname in spaces) {\r\n                    if (sname !== space) {\r\n                        values[sname] = convert[space][sname](values[space]);\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            };\r\n\r\n            Color.prototype.setSpace = function(space, args) {\r\n                var vals = args[0];\r\n\r\n                if (vals === undefined) {\r\n                    // color.rgb()\r\n                    return this.getValues(space);\r\n                }\r\n\r\n                // color.rgb(10, 10, 10)\r\n                if (typeof vals === 'number') {\r\n                    vals = Array.prototype.slice.call(args);\r\n                }\r\n\r\n                this.setValues(space, vals);\r\n                return this;\r\n            };\r\n\r\n            Color.prototype.setChannel = function(space, index, val) {\r\n                var svalues = this.values[space];\r\n                if (val === undefined) {\r\n                    // color.red()\r\n                    return svalues[index];\r\n                } else if (val === svalues[index]) {\r\n                    // color.red(color.red())\r\n                    return this;\r\n                }\r\n\r\n                // color.red(100)\r\n                svalues[index] = val;\r\n                this.setValues(space, svalues);\r\n\r\n                return this;\r\n            };\r\n\r\n            if (typeof window !== 'undefined') {\r\n                window.Color = Color;\r\n            }\r\n\r\n            module.exports = Color;\r\n        }, { \"1\": 1, \"4\": 4 }], 3: [function(require, module, exports) {\r\n            /* MIT license */\r\n\r\n            module.exports = {\r\n                rgb2hsl: rgb2hsl,\r\n                rgb2hsv: rgb2hsv,\r\n                rgb2hwb: rgb2hwb,\r\n                rgb2cmyk: rgb2cmyk,\r\n                rgb2keyword: rgb2keyword,\r\n                rgb2xyz: rgb2xyz,\r\n                rgb2lab: rgb2lab,\r\n                rgb2lch: rgb2lch,\r\n\r\n                hsl2rgb: hsl2rgb,\r\n                hsl2hsv: hsl2hsv,\r\n                hsl2hwb: hsl2hwb,\r\n                hsl2cmyk: hsl2cmyk,\r\n                hsl2keyword: hsl2keyword,\r\n\r\n                hsv2rgb: hsv2rgb,\r\n                hsv2hsl: hsv2hsl,\r\n                hsv2hwb: hsv2hwb,\r\n                hsv2cmyk: hsv2cmyk,\r\n                hsv2keyword: hsv2keyword,\r\n\r\n                hwb2rgb: hwb2rgb,\r\n                hwb2hsl: hwb2hsl,\r\n                hwb2hsv: hwb2hsv,\r\n                hwb2cmyk: hwb2cmyk,\r\n                hwb2keyword: hwb2keyword,\r\n\r\n                cmyk2rgb: cmyk2rgb,\r\n                cmyk2hsl: cmyk2hsl,\r\n                cmyk2hsv: cmyk2hsv,\r\n                cmyk2hwb: cmyk2hwb,\r\n                cmyk2keyword: cmyk2keyword,\r\n\r\n                keyword2rgb: keyword2rgb,\r\n                keyword2hsl: keyword2hsl,\r\n                keyword2hsv: keyword2hsv,\r\n                keyword2hwb: keyword2hwb,\r\n                keyword2cmyk: keyword2cmyk,\r\n                keyword2lab: keyword2lab,\r\n                keyword2xyz: keyword2xyz,\r\n\r\n                xyz2rgb: xyz2rgb,\r\n                xyz2lab: xyz2lab,\r\n                xyz2lch: xyz2lch,\r\n\r\n                lab2xyz: lab2xyz,\r\n                lab2rgb: lab2rgb,\r\n                lab2lch: lab2lch,\r\n\r\n                lch2lab: lch2lab,\r\n                lch2xyz: lch2xyz,\r\n                lch2rgb: lch2rgb\r\n            }\r\n\r\n            function rgb2hsl(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255,\r\n                    min = Math.min(r, g, b),\r\n                    max = Math.max(r, g, b),\r\n                    delta = max - min,\r\n                    h, s, l;\r\n\r\n                if (max == min)\r\n                    h = 0;\r\n                else if (r == max)\r\n                    h = (g - b) / delta;\r\n                else if (g == max)\r\n                    h = 2 + (b - r) / delta;\r\n                else if (b == max)\r\n                    h = 4 + (r - g) / delta;\r\n\r\n                h = Math.min(h * 60, 360);\r\n\r\n                if (h < 0)\r\n                    h += 360;\r\n\r\n                l = (min + max) / 2;\r\n\r\n                if (max == min)\r\n                    s = 0;\r\n                else if (l <= 0.5)\r\n                    s = delta / (max + min);\r\n                else\r\n                    s = delta / (2 - max - min);\r\n\r\n                return [h, s * 100, l * 100];\r\n            }\r\n\r\n            function rgb2hsv(rgb) {\r\n                var r = rgb[0],\r\n                    g = rgb[1],\r\n                    b = rgb[2],\r\n                    min = Math.min(r, g, b),\r\n                    max = Math.max(r, g, b),\r\n                    delta = max - min,\r\n                    h, s, v;\r\n\r\n                if (max == 0)\r\n                    s = 0;\r\n                else\r\n                    s = (delta / max * 1000) / 10;\r\n\r\n                if (max == min)\r\n                    h = 0;\r\n                else if (r == max)\r\n                    h = (g - b) / delta;\r\n                else if (g == max)\r\n                    h = 2 + (b - r) / delta;\r\n                else if (b == max)\r\n                    h = 4 + (r - g) / delta;\r\n\r\n                h = Math.min(h * 60, 360);\r\n\r\n                if (h < 0)\r\n                    h += 360;\r\n\r\n                v = ((max / 255) * 1000) / 10;\r\n\r\n                return [h, s, v];\r\n            }\r\n\r\n            function rgb2hwb(rgb) {\r\n                var r = rgb[0],\r\n                    g = rgb[1],\r\n                    b = rgb[2],\r\n                    h = rgb2hsl(rgb)[0],\r\n                    w = 1 / 255 * Math.min(r, Math.min(g, b)),\r\n                    b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\r\n\r\n                return [h, w * 100, b * 100];\r\n            }\r\n\r\n            function rgb2cmyk(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255,\r\n                    c, m, y, k;\r\n\r\n                k = Math.min(1 - r, 1 - g, 1 - b);\r\n                c = (1 - r - k) / (1 - k) || 0;\r\n                m = (1 - g - k) / (1 - k) || 0;\r\n                y = (1 - b - k) / (1 - k) || 0;\r\n                return [c * 100, m * 100, y * 100, k * 100];\r\n            }\r\n\r\n            function rgb2keyword(rgb) {\r\n                return reverseKeywords[JSON.stringify(rgb)];\r\n            }\r\n\r\n            function rgb2xyz(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255;\r\n\r\n                // assume sRGB\r\n                r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\r\n                g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\r\n                b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\r\n\r\n                var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\r\n                var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\r\n                var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\r\n\r\n                return [x * 100, y * 100, z * 100];\r\n            }\r\n\r\n            function rgb2lab(rgb) {\r\n                var xyz = rgb2xyz(rgb),\r\n                    x = xyz[0],\r\n                    y = xyz[1],\r\n                    z = xyz[2],\r\n                    l, a, b;\r\n\r\n                x /= 95.047;\r\n                y /= 100;\r\n                z /= 108.883;\r\n\r\n                x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\r\n                y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\r\n                z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\r\n\r\n                l = (116 * y) - 16;\r\n                a = 500 * (x - y);\r\n                b = 200 * (y - z);\r\n\r\n                return [l, a, b];\r\n            }\r\n\r\n            function rgb2lch(args) {\r\n                return lab2lch(rgb2lab(args));\r\n            }\r\n\r\n            function hsl2rgb(hsl) {\r\n                var h = hsl[0] / 360,\r\n                    s = hsl[1] / 100,\r\n                    l = hsl[2] / 100,\r\n                    t1, t2, t3, rgb, val;\r\n\r\n                if (s == 0) {\r\n                    val = l * 255;\r\n                    return [val, val, val];\r\n                }\r\n\r\n                if (l < 0.5)\r\n                    t2 = l * (1 + s);\r\n                else\r\n                    t2 = l + s - l * s;\r\n                t1 = 2 * l - t2;\r\n\r\n                rgb = [0, 0, 0];\r\n                for (var i = 0; i < 3; i++) {\r\n                    t3 = h + 1 / 3 * - (i - 1);\r\n                    t3 < 0 && t3++;\r\n                    t3 > 1 && t3--;\r\n\r\n                    if (6 * t3 < 1)\r\n                        val = t1 + (t2 - t1) * 6 * t3;\r\n                    else if (2 * t3 < 1)\r\n                        val = t2;\r\n                    else if (3 * t3 < 2)\r\n                        val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\r\n                    else\r\n                        val = t1;\r\n\r\n                    rgb[i] = val * 255;\r\n                }\r\n\r\n                return rgb;\r\n            }\r\n\r\n            function hsl2hsv(hsl) {\r\n                var h = hsl[0],\r\n                    s = hsl[1] / 100,\r\n                    l = hsl[2] / 100,\r\n                    sv, v;\r\n\r\n                if (l === 0) {\r\n                    // no need to do calc on black\r\n                    // also avoids divide by 0 error\r\n                    return [0, 0, 0];\r\n                }\r\n\r\n                l *= 2;\r\n                s *= (l <= 1) ? l : 2 - l;\r\n                v = (l + s) / 2;\r\n                sv = (2 * s) / (l + s);\r\n                return [h, sv * 100, v * 100];\r\n            }\r\n\r\n            function hsl2hwb(args) {\r\n                return rgb2hwb(hsl2rgb(args));\r\n            }\r\n\r\n            function hsl2cmyk(args) {\r\n                return rgb2cmyk(hsl2rgb(args));\r\n            }\r\n\r\n            function hsl2keyword(args) {\r\n                return rgb2keyword(hsl2rgb(args));\r\n            }\r\n\r\n            function hsv2rgb(hsv) {\r\n                var h = hsv[0] / 60,\r\n                    s = hsv[1] / 100,\r\n                    v = hsv[2] / 100,\r\n                    hi = Math.floor(h) % 6;\r\n\r\n                var f = h - Math.floor(h),\r\n                    p = 255 * v * (1 - s),\r\n                    q = 255 * v * (1 - (s * f)),\r\n                    t = 255 * v * (1 - (s * (1 - f))),\r\n                    v = 255 * v;\r\n\r\n                switch (hi) {\r\n                    case 0:\r\n                        return [v, t, p];\r\n                    case 1:\r\n                        return [q, v, p];\r\n                    case 2:\r\n                        return [p, v, t];\r\n                    case 3:\r\n                        return [p, q, v];\r\n                    case 4:\r\n                        return [t, p, v];\r\n                    case 5:\r\n                        return [v, p, q];\r\n                }\r\n            }\r\n\r\n            function hsv2hsl(hsv) {\r\n                var h = hsv[0],\r\n                    s = hsv[1] / 100,\r\n                    v = hsv[2] / 100,\r\n                    sl, l;\r\n\r\n                l = (2 - s) * v;\r\n                sl = s * v;\r\n                sl /= (l <= 1) ? l : 2 - l;\r\n                sl = sl || 0;\r\n                l /= 2;\r\n                return [h, sl * 100, l * 100];\r\n            }\r\n\r\n            function hsv2hwb(args) {\r\n                return rgb2hwb(hsv2rgb(args))\r\n            }\r\n\r\n            function hsv2cmyk(args) {\r\n                return rgb2cmyk(hsv2rgb(args));\r\n            }\r\n\r\n            function hsv2keyword(args) {\r\n                return rgb2keyword(hsv2rgb(args));\r\n            }\r\n\r\n            // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\r\n            function hwb2rgb(hwb) {\r\n                var h = hwb[0] / 360,\r\n                    wh = hwb[1] / 100,\r\n                    bl = hwb[2] / 100,\r\n                    ratio = wh + bl,\r\n                    i, v, f, n;\r\n\r\n                // wh + bl cant be > 1\r\n                if (ratio > 1) {\r\n                    wh /= ratio;\r\n                    bl /= ratio;\r\n                }\r\n\r\n                i = Math.floor(6 * h);\r\n                v = 1 - bl;\r\n                f = 6 * h - i;\r\n                if ((i & 0x01) != 0) {\r\n                    f = 1 - f;\r\n                }\r\n                n = wh + f * (v - wh);  // linear interpolation\r\n\r\n                switch (i) {\r\n                    default:\r\n                    case 6:\r\n                    case 0: r = v; g = n; b = wh; break;\r\n                    case 1: r = n; g = v; b = wh; break;\r\n                    case 2: r = wh; g = v; b = n; break;\r\n                    case 3: r = wh; g = n; b = v; break;\r\n                    case 4: r = n; g = wh; b = v; break;\r\n                    case 5: r = v; g = wh; b = n; break;\r\n                }\r\n\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function hwb2hsl(args) {\r\n                return rgb2hsl(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2hsv(args) {\r\n                return rgb2hsv(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2cmyk(args) {\r\n                return rgb2cmyk(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2keyword(args) {\r\n                return rgb2keyword(hwb2rgb(args));\r\n            }\r\n\r\n            function cmyk2rgb(cmyk) {\r\n                var c = cmyk[0] / 100,\r\n                    m = cmyk[1] / 100,\r\n                    y = cmyk[2] / 100,\r\n                    k = cmyk[3] / 100,\r\n                    r, g, b;\r\n\r\n                r = 1 - Math.min(1, c * (1 - k) + k);\r\n                g = 1 - Math.min(1, m * (1 - k) + k);\r\n                b = 1 - Math.min(1, y * (1 - k) + k);\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function cmyk2hsl(args) {\r\n                return rgb2hsl(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2hsv(args) {\r\n                return rgb2hsv(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2hwb(args) {\r\n                return rgb2hwb(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2keyword(args) {\r\n                return rgb2keyword(cmyk2rgb(args));\r\n            }\r\n\r\n            function xyz2rgb(xyz) {\r\n                var x = xyz[0] / 100,\r\n                    y = xyz[1] / 100,\r\n                    z = xyz[2] / 100,\r\n                    r, g, b;\r\n\r\n                r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\r\n                g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\r\n                b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\r\n\r\n                // assume sRGB\r\n                r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\r\n                    : r = (r * 12.92);\r\n\r\n                g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\r\n                    : g = (g * 12.92);\r\n\r\n                b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\r\n                    : b = (b * 12.92);\r\n\r\n                r = Math.min(Math.max(0, r), 1);\r\n                g = Math.min(Math.max(0, g), 1);\r\n                b = Math.min(Math.max(0, b), 1);\r\n\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function xyz2lab(xyz) {\r\n                var x = xyz[0],\r\n                    y = xyz[1],\r\n                    z = xyz[2],\r\n                    l, a, b;\r\n\r\n                x /= 95.047;\r\n                y /= 100;\r\n                z /= 108.883;\r\n\r\n                x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\r\n                y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\r\n                z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\r\n\r\n                l = (116 * y) - 16;\r\n                a = 500 * (x - y);\r\n                b = 200 * (y - z);\r\n\r\n                return [l, a, b];\r\n            }\r\n\r\n            function xyz2lch(args) {\r\n                return lab2lch(xyz2lab(args));\r\n            }\r\n\r\n            function lab2xyz(lab) {\r\n                var l = lab[0],\r\n                    a = lab[1],\r\n                    b = lab[2],\r\n                    x, y, z, y2;\r\n\r\n                if (l <= 8) {\r\n                    y = (l * 100) / 903.3;\r\n                    y2 = (7.787 * (y / 100)) + (16 / 116);\r\n                } else {\r\n                    y = 100 * Math.pow((l + 16) / 116, 3);\r\n                    y2 = Math.pow(y / 100, 1 / 3);\r\n                }\r\n\r\n                x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\r\n\r\n                z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\r\n\r\n                return [x, y, z];\r\n            }\r\n\r\n            function lab2lch(lab) {\r\n                var l = lab[0],\r\n                    a = lab[1],\r\n                    b = lab[2],\r\n                    hr, h, c;\r\n\r\n                hr = Math.atan2(b, a);\r\n                h = hr * 360 / 2 / Math.PI;\r\n                if (h < 0) {\r\n                    h += 360;\r\n                }\r\n                c = Math.sqrt(a * a + b * b);\r\n                return [l, c, h];\r\n            }\r\n\r\n            function lab2rgb(args) {\r\n                return xyz2rgb(lab2xyz(args));\r\n            }\r\n\r\n            function lch2lab(lch) {\r\n                var l = lch[0],\r\n                    c = lch[1],\r\n                    h = lch[2],\r\n                    a, b, hr;\r\n\r\n                hr = h / 360 * 2 * Math.PI;\r\n                a = c * Math.cos(hr);\r\n                b = c * Math.sin(hr);\r\n                return [l, a, b];\r\n            }\r\n\r\n            function lch2xyz(args) {\r\n                return lab2xyz(lch2lab(args));\r\n            }\r\n\r\n            function lch2rgb(args) {\r\n                return lab2rgb(lch2lab(args));\r\n            }\r\n\r\n            function keyword2rgb(keyword) {\r\n                return cssKeywords[keyword];\r\n            }\r\n\r\n            function keyword2hsl(args) {\r\n                return rgb2hsl(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2hsv(args) {\r\n                return rgb2hsv(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2hwb(args) {\r\n                return rgb2hwb(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2cmyk(args) {\r\n                return rgb2cmyk(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2lab(args) {\r\n                return rgb2lab(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2xyz(args) {\r\n                return rgb2xyz(keyword2rgb(args));\r\n            }\r\n\r\n            var cssKeywords = {\r\n                aliceblue: [240, 248, 255],\r\n                antiquewhite: [250, 235, 215],\r\n                aqua: [0, 255, 255],\r\n                aquamarine: [127, 255, 212],\r\n                azure: [240, 255, 255],\r\n                beige: [245, 245, 220],\r\n                bisque: [255, 228, 196],\r\n                black: [0, 0, 0],\r\n                blanchedalmond: [255, 235, 205],\r\n                blue: [0, 0, 255],\r\n                blueviolet: [138, 43, 226],\r\n                brown: [165, 42, 42],\r\n                burlywood: [222, 184, 135],\r\n                cadetblue: [95, 158, 160],\r\n                chartreuse: [127, 255, 0],\r\n                chocolate: [210, 105, 30],\r\n                coral: [255, 127, 80],\r\n                cornflowerblue: [100, 149, 237],\r\n                cornsilk: [255, 248, 220],\r\n                crimson: [220, 20, 60],\r\n                cyan: [0, 255, 255],\r\n                darkblue: [0, 0, 139],\r\n                darkcyan: [0, 139, 139],\r\n                darkgoldenrod: [184, 134, 11],\r\n                darkgray: [169, 169, 169],\r\n                darkgreen: [0, 100, 0],\r\n                darkgrey: [169, 169, 169],\r\n                darkkhaki: [189, 183, 107],\r\n                darkmagenta: [139, 0, 139],\r\n                darkolivegreen: [85, 107, 47],\r\n                darkorange: [255, 140, 0],\r\n                darkorchid: [153, 50, 204],\r\n                darkred: [139, 0, 0],\r\n                darksalmon: [233, 150, 122],\r\n                darkseagreen: [143, 188, 143],\r\n                darkslateblue: [72, 61, 139],\r\n                darkslategray: [47, 79, 79],\r\n                darkslategrey: [47, 79, 79],\r\n                darkturquoise: [0, 206, 209],\r\n                darkviolet: [148, 0, 211],\r\n                deeppink: [255, 20, 147],\r\n                deepskyblue: [0, 191, 255],\r\n                dimgray: [105, 105, 105],\r\n                dimgrey: [105, 105, 105],\r\n                dodgerblue: [30, 144, 255],\r\n                firebrick: [178, 34, 34],\r\n                floralwhite: [255, 250, 240],\r\n                forestgreen: [34, 139, 34],\r\n                fuchsia: [255, 0, 255],\r\n                gainsboro: [220, 220, 220],\r\n                ghostwhite: [248, 248, 255],\r\n                gold: [255, 215, 0],\r\n                goldenrod: [218, 165, 32],\r\n                gray: [128, 128, 128],\r\n                green: [0, 128, 0],\r\n                greenyellow: [173, 255, 47],\r\n                grey: [128, 128, 128],\r\n                honeydew: [240, 255, 240],\r\n                hotpink: [255, 105, 180],\r\n                indianred: [205, 92, 92],\r\n                indigo: [75, 0, 130],\r\n                ivory: [255, 255, 240],\r\n                khaki: [240, 230, 140],\r\n                lavender: [230, 230, 250],\r\n                lavenderblush: [255, 240, 245],\r\n                lawngreen: [124, 252, 0],\r\n                lemonchiffon: [255, 250, 205],\r\n                lightblue: [173, 216, 230],\r\n                lightcoral: [240, 128, 128],\r\n                lightcyan: [224, 255, 255],\r\n                lightgoldenrodyellow: [250, 250, 210],\r\n                lightgray: [211, 211, 211],\r\n                lightgreen: [144, 238, 144],\r\n                lightgrey: [211, 211, 211],\r\n                lightpink: [255, 182, 193],\r\n                lightsalmon: [255, 160, 122],\r\n                lightseagreen: [32, 178, 170],\r\n                lightskyblue: [135, 206, 250],\r\n                lightslategray: [119, 136, 153],\r\n                lightslategrey: [119, 136, 153],\r\n                lightsteelblue: [176, 196, 222],\r\n                lightyellow: [255, 255, 224],\r\n                lime: [0, 255, 0],\r\n                limegreen: [50, 205, 50],\r\n                linen: [250, 240, 230],\r\n                magenta: [255, 0, 255],\r\n                maroon: [128, 0, 0],\r\n                mediumaquamarine: [102, 205, 170],\r\n                mediumblue: [0, 0, 205],\r\n                mediumorchid: [186, 85, 211],\r\n                mediumpurple: [147, 112, 219],\r\n                mediumseagreen: [60, 179, 113],\r\n                mediumslateblue: [123, 104, 238],\r\n                mediumspringgreen: [0, 250, 154],\r\n                mediumturquoise: [72, 209, 204],\r\n                mediumvioletred: [199, 21, 133],\r\n                midnightblue: [25, 25, 112],\r\n                mintcream: [245, 255, 250],\r\n                mistyrose: [255, 228, 225],\r\n                moccasin: [255, 228, 181],\r\n                navajowhite: [255, 222, 173],\r\n                navy: [0, 0, 128],\r\n                oldlace: [253, 245, 230],\r\n                olive: [128, 128, 0],\r\n                olivedrab: [107, 142, 35],\r\n                orange: [255, 165, 0],\r\n                orangered: [255, 69, 0],\r\n                orchid: [218, 112, 214],\r\n                palegoldenrod: [238, 232, 170],\r\n                palegreen: [152, 251, 152],\r\n                paleturquoise: [175, 238, 238],\r\n                palevioletred: [219, 112, 147],\r\n                papayawhip: [255, 239, 213],\r\n                peachpuff: [255, 218, 185],\r\n                peru: [205, 133, 63],\r\n                pink: [255, 192, 203],\r\n                plum: [221, 160, 221],\r\n                powderblue: [176, 224, 230],\r\n                purple: [128, 0, 128],\r\n                rebeccapurple: [102, 51, 153],\r\n                red: [255, 0, 0],\r\n                rosybrown: [188, 143, 143],\r\n                royalblue: [65, 105, 225],\r\n                saddlebrown: [139, 69, 19],\r\n                salmon: [250, 128, 114],\r\n                sandybrown: [244, 164, 96],\r\n                seagreen: [46, 139, 87],\r\n                seashell: [255, 245, 238],\r\n                sienna: [160, 82, 45],\r\n                silver: [192, 192, 192],\r\n                skyblue: [135, 206, 235],\r\n                slateblue: [106, 90, 205],\r\n                slategray: [112, 128, 144],\r\n                slategrey: [112, 128, 144],\r\n                snow: [255, 250, 250],\r\n                springgreen: [0, 255, 127],\r\n                steelblue: [70, 130, 180],\r\n                tan: [210, 180, 140],\r\n                teal: [0, 128, 128],\r\n                thistle: [216, 191, 216],\r\n                tomato: [255, 99, 71],\r\n                turquoise: [64, 224, 208],\r\n                violet: [238, 130, 238],\r\n                wheat: [245, 222, 179],\r\n                white: [255, 255, 255],\r\n                whitesmoke: [245, 245, 245],\r\n                yellow: [255, 255, 0],\r\n                yellowgreen: [154, 205, 50]\r\n            };\r\n\r\n            var reverseKeywords = {};\r\n            for (var key in cssKeywords) {\r\n                reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\r\n            }\r\n        }, {}], 4: [function(require, module, exports) {\r\n            var conversions = require(3);\r\n\r\n            var convert = function() {\r\n                return new Converter();\r\n            }\r\n\r\n            for (var func in conversions) {\r\n                // export Raw versions\r\n                convert[func + \"Raw\"] = (function(func) {\r\n                    // accept array or plain args\r\n                    return function(arg) {\r\n                        if (typeof arg == \"number\")\r\n                            arg = Array.prototype.slice.call(arguments);\r\n                        return conversions[func](arg);\r\n                    }\r\n                })(func);\r\n\r\n                var pair = /(\\w+)2(\\w+)/.exec(func),\r\n                    from = pair[1],\r\n                    to = pair[2];\r\n\r\n                // export rgb2hsl and [\"rgb\"][\"hsl\"]\r\n                convert[from] = convert[from] || {};\r\n\r\n                convert[from][to] = convert[func] = (function(func) {\r\n                    return function(arg) {\r\n                        if (typeof arg == \"number\")\r\n                            arg = Array.prototype.slice.call(arguments);\r\n\r\n                        var val = conversions[func](arg);\r\n                        if (typeof val == \"string\" || val === undefined)\r\n                            return val; // keyword\r\n\r\n                        for (var i = 0; i < val.length; i++)\r\n                            val[i] = Math.round(val[i]);\r\n                        return val;\r\n                    }\r\n                })(func);\r\n            }\r\n\r\n            /* Converter does lazy conversion and caching */\r\n            var Converter = function() {\r\n                this.convs = {};\r\n            };\r\n\r\n            /* Either get the values for a space or\r\n              set the values for a space, depending on args */\r\n            Converter.prototype.routeSpace = function(space, args) {\r\n                var values = args[0];\r\n                if (values === undefined) {\r\n                    // color.rgb()\r\n                    return this.getValues(space);\r\n                }\r\n                // color.rgb(10, 10, 10)\r\n                if (typeof values == \"number\") {\r\n                    values = Array.prototype.slice.call(args);\r\n                }\r\n\r\n                return this.setValues(space, values);\r\n            };\r\n\r\n            /* Set the values for a space, invalidating cache */\r\n            Converter.prototype.setValues = function(space, values) {\r\n                this.space = space;\r\n                this.convs = {};\r\n                this.convs[space] = values;\r\n                return this;\r\n            };\r\n\r\n            /* Get the values for a space. If there's already\r\n              a conversion for the space, fetch it, otherwise\r\n              compute it */\r\n            Converter.prototype.getValues = function(space) {\r\n                var vals = this.convs[space];\r\n                if (!vals) {\r\n                    var fspace = this.space,\r\n                        from = this.convs[fspace];\r\n                    vals = convert[fspace][space](from);\r\n\r\n                    this.convs[space] = vals;\r\n                }\r\n                return vals;\r\n            };\r\n\r\n            [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\r\n                Converter.prototype[space] = function(vals) {\r\n                    return this.routeSpace(space, arguments);\r\n                }\r\n            });\r\n\r\n            module.exports = convert;\r\n        }, { \"3\": 3 }], 5: [function(require, module, exports) {\r\n            'use strict'\r\n\r\n            module.exports = {\r\n                \"aliceblue\": [240, 248, 255],\r\n                \"antiquewhite\": [250, 235, 215],\r\n                \"aqua\": [0, 255, 255],\r\n                \"aquamarine\": [127, 255, 212],\r\n                \"azure\": [240, 255, 255],\r\n                \"beige\": [245, 245, 220],\r\n                \"bisque\": [255, 228, 196],\r\n                \"black\": [0, 0, 0],\r\n                \"blanchedalmond\": [255, 235, 205],\r\n                \"blue\": [0, 0, 255],\r\n                \"blueviolet\": [138, 43, 226],\r\n                \"brown\": [165, 42, 42],\r\n                \"burlywood\": [222, 184, 135],\r\n                \"cadetblue\": [95, 158, 160],\r\n                \"chartreuse\": [127, 255, 0],\r\n                \"chocolate\": [210, 105, 30],\r\n                \"coral\": [255, 127, 80],\r\n                \"cornflowerblue\": [100, 149, 237],\r\n                \"cornsilk\": [255, 248, 220],\r\n                \"crimson\": [220, 20, 60],\r\n                \"cyan\": [0, 255, 255],\r\n                \"darkblue\": [0, 0, 139],\r\n                \"darkcyan\": [0, 139, 139],\r\n                \"darkgoldenrod\": [184, 134, 11],\r\n                \"darkgray\": [169, 169, 169],\r\n                \"darkgreen\": [0, 100, 0],\r\n                \"darkgrey\": [169, 169, 169],\r\n                \"darkkhaki\": [189, 183, 107],\r\n                \"darkmagenta\": [139, 0, 139],\r\n                \"darkolivegreen\": [85, 107, 47],\r\n                \"darkorange\": [255, 140, 0],\r\n                \"darkorchid\": [153, 50, 204],\r\n                \"darkred\": [139, 0, 0],\r\n                \"darksalmon\": [233, 150, 122],\r\n                \"darkseagreen\": [143, 188, 143],\r\n                \"darkslateblue\": [72, 61, 139],\r\n                \"darkslategray\": [47, 79, 79],\r\n                \"darkslategrey\": [47, 79, 79],\r\n                \"darkturquoise\": [0, 206, 209],\r\n                \"darkviolet\": [148, 0, 211],\r\n                \"deeppink\": [255, 20, 147],\r\n                \"deepskyblue\": [0, 191, 255],\r\n                \"dimgray\": [105, 105, 105],\r\n                \"dimgrey\": [105, 105, 105],\r\n                \"dodgerblue\": [30, 144, 255],\r\n                \"firebrick\": [178, 34, 34],\r\n                \"floralwhite\": [255, 250, 240],\r\n                \"forestgreen\": [34, 139, 34],\r\n                \"fuchsia\": [255, 0, 255],\r\n                \"gainsboro\": [220, 220, 220],\r\n                \"ghostwhite\": [248, 248, 255],\r\n                \"gold\": [255, 215, 0],\r\n                \"goldenrod\": [218, 165, 32],\r\n                \"gray\": [128, 128, 128],\r\n                \"green\": [0, 128, 0],\r\n                \"greenyellow\": [173, 255, 47],\r\n                \"grey\": [128, 128, 128],\r\n                \"honeydew\": [240, 255, 240],\r\n                \"hotpink\": [255, 105, 180],\r\n                \"indianred\": [205, 92, 92],\r\n                \"indigo\": [75, 0, 130],\r\n                \"ivory\": [255, 255, 240],\r\n                \"khaki\": [240, 230, 140],\r\n                \"lavender\": [230, 230, 250],\r\n                \"lavenderblush\": [255, 240, 245],\r\n                \"lawngreen\": [124, 252, 0],\r\n                \"lemonchiffon\": [255, 250, 205],\r\n                \"lightblue\": [173, 216, 230],\r\n                \"lightcoral\": [240, 128, 128],\r\n                \"lightcyan\": [224, 255, 255],\r\n                \"lightgoldenrodyellow\": [250, 250, 210],\r\n                \"lightgray\": [211, 211, 211],\r\n                \"lightgreen\": [144, 238, 144],\r\n                \"lightgrey\": [211, 211, 211],\r\n                \"lightpink\": [255, 182, 193],\r\n                \"lightsalmon\": [255, 160, 122],\r\n                \"lightseagreen\": [32, 178, 170],\r\n                \"lightskyblue\": [135, 206, 250],\r\n                \"lightslategray\": [119, 136, 153],\r\n                \"lightslategrey\": [119, 136, 153],\r\n                \"lightsteelblue\": [176, 196, 222],\r\n                \"lightyellow\": [255, 255, 224],\r\n                \"lime\": [0, 255, 0],\r\n                \"limegreen\": [50, 205, 50],\r\n                \"linen\": [250, 240, 230],\r\n                \"magenta\": [255, 0, 255],\r\n                \"maroon\": [128, 0, 0],\r\n                \"mediumaquamarine\": [102, 205, 170],\r\n                \"mediumblue\": [0, 0, 205],\r\n                \"mediumorchid\": [186, 85, 211],\r\n                \"mediumpurple\": [147, 112, 219],\r\n                \"mediumseagreen\": [60, 179, 113],\r\n                \"mediumslateblue\": [123, 104, 238],\r\n                \"mediumspringgreen\": [0, 250, 154],\r\n                \"mediumturquoise\": [72, 209, 204],\r\n                \"mediumvioletred\": [199, 21, 133],\r\n                \"midnightblue\": [25, 25, 112],\r\n                \"mintcream\": [245, 255, 250],\r\n                \"mistyrose\": [255, 228, 225],\r\n                \"moccasin\": [255, 228, 181],\r\n                \"navajowhite\": [255, 222, 173],\r\n                \"navy\": [0, 0, 128],\r\n                \"oldlace\": [253, 245, 230],\r\n                \"olive\": [128, 128, 0],\r\n                \"olivedrab\": [107, 142, 35],\r\n                \"orange\": [255, 165, 0],\r\n                \"orangered\": [255, 69, 0],\r\n                \"orchid\": [218, 112, 214],\r\n                \"palegoldenrod\": [238, 232, 170],\r\n                \"palegreen\": [152, 251, 152],\r\n                \"paleturquoise\": [175, 238, 238],\r\n                \"palevioletred\": [219, 112, 147],\r\n                \"papayawhip\": [255, 239, 213],\r\n                \"peachpuff\": [255, 218, 185],\r\n                \"peru\": [205, 133, 63],\r\n                \"pink\": [255, 192, 203],\r\n                \"plum\": [221, 160, 221],\r\n                \"powderblue\": [176, 224, 230],\r\n                \"purple\": [128, 0, 128],\r\n                \"rebeccapurple\": [102, 51, 153],\r\n                \"red\": [255, 0, 0],\r\n                \"rosybrown\": [188, 143, 143],\r\n                \"royalblue\": [65, 105, 225],\r\n                \"saddlebrown\": [139, 69, 19],\r\n                \"salmon\": [250, 128, 114],\r\n                \"sandybrown\": [244, 164, 96],\r\n                \"seagreen\": [46, 139, 87],\r\n                \"seashell\": [255, 245, 238],\r\n                \"sienna\": [160, 82, 45],\r\n                \"silver\": [192, 192, 192],\r\n                \"skyblue\": [135, 206, 235],\r\n                \"slateblue\": [106, 90, 205],\r\n                \"slategray\": [112, 128, 144],\r\n                \"slategrey\": [112, 128, 144],\r\n                \"snow\": [255, 250, 250],\r\n                \"springgreen\": [0, 255, 127],\r\n                \"steelblue\": [70, 130, 180],\r\n                \"tan\": [210, 180, 140],\r\n                \"teal\": [0, 128, 128],\r\n                \"thistle\": [216, 191, 216],\r\n                \"tomato\": [255, 99, 71],\r\n                \"turquoise\": [64, 224, 208],\r\n                \"violet\": [238, 130, 238],\r\n                \"wheat\": [245, 222, 179],\r\n                \"white\": [255, 255, 255],\r\n                \"whitesmoke\": [245, 245, 245],\r\n                \"yellow\": [255, 255, 0],\r\n                \"yellowgreen\": [154, 205, 50]\r\n            };\r\n        }, {}], 6: [function(require, module, exports) {\r\n            /**\r\n             * @namespace Chart\r\n             */\r\n            var Chart = require(20)();\r\n\r\n            Chart.helpers = require(36);\r\n\r\n            // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\r\n            require(18)(Chart);\r\n\r\n            Chart.defaults = require(16);\r\n            Chart.Element = require(17);\r\n            Chart.elements = require(31);\r\n            Chart.Interaction = require(19);\r\n            Chart.layouts = require(21);\r\n            Chart.platform = require(39);\r\n            Chart.plugins = require(22);\r\n            Chart.Ticks = require(25);\r\n\r\n            require(13)(Chart);\r\n            require(14)(Chart);\r\n            require(15)(Chart);\r\n            require(24)(Chart);\r\n            require(23)(Chart);\r\n            require(26)(Chart);\r\n\r\n            require(46)(Chart);\r\n            require(44)(Chart);\r\n            require(45)(Chart);\r\n            // require('./scales/scale.logarithmic')(Chart);\r\n            // require('./scales/scale.radialLinear')(Chart);\r\n            // require('./scales/scale.time')(Chart);\r\n\r\n            // Controllers must be loaded after elements\r\n            // See Chart.core.datasetController.dataElementType\r\n            require(10)(Chart);\r\n            // require('./controllers/controller.bubble')(Chart);\r\n            require(11)(Chart);\r\n            require(12)(Chart);\r\n            // require('./controllers/controller.polarArea')(Chart);\r\n            // require('./controllers/controller.radar')(Chart);\r\n            // require('./controllers/controller.scatter')(Chart);\r\n\r\n            require(7)(Chart);\r\n            // require('./charts/Chart.Bubble')(Chart);\r\n            require(8)(Chart);\r\n            require(9)(Chart);\r\n            // require('./charts/Chart.PolarArea')(Chart);\r\n            // require('./charts/Chart.Radar')(Chart);\r\n            // require('./charts/Chart.Scatter')(Chart);\r\n\r\n            // Loading built-it plugins\r\n            var plugins = require(40);\r\n            for (var k in plugins) {\r\n                if (plugins.hasOwnProperty(k)) {\r\n                    Chart.plugins.register(plugins[k]);\r\n                }\r\n            }\r\n\r\n            Chart.platform.initialize();\r\n\r\n            module.exports = Chart;\r\n            if (typeof window !== 'undefined') {\r\n                window.Chart = Chart;\r\n            }\r\n        }, { \"10\": 10, \"11\": 11, \"12\": 12, \"13\": 13, \"14\": 14, \"15\": 15, \"16\": 16, \"17\": 17, \"18\": 18, \"19\": 19, \"20\": 20, \"21\": 21, \"22\": 22, \"23\": 23, \"24\": 24, \"25\": 25, \"26\": 26, \"31\": 31, \"36\": 36, \"39\": 39, \"40\": 40, \"44\": 44, \"45\": 45, \"46\": 46, \"7\": 7, \"8\": 8, \"9\": 9 }], 7: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Bar = function(context, config) {\r\n                    config.type = 'bar';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 8: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Doughnut = function(context, config) {\r\n                    config.type = 'doughnut';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 9: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Line = function(context, config) {\r\n                    config.type = 'line';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 10: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('bar', {\r\n                hover: {\r\n                    mode: 'label'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'category',\r\n\r\n                        // Specific to Bar Controller\r\n                        categoryPercentage: 0.8,\r\n                        barPercentage: 0.9,\r\n\r\n                        // offset settings\r\n                        offset: true,\r\n\r\n                        // grid line settings\r\n                        gridLines: {\r\n                            offsetGridLines: true\r\n                        }\r\n                    }],\r\n\r\n                    yAxes: [{\r\n                        type: 'linear'\r\n                    }]\r\n                }\r\n            });\r\n\r\n            defaults._set('horizontalBar', {\r\n                hover: {\r\n                    mode: 'index',\r\n                    axis: 'y'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'linear',\r\n                        position: 'bottom'\r\n                    }],\r\n\r\n                    yAxes: [{\r\n                        position: 'left',\r\n                        type: 'category',\r\n\r\n                        // Specific to Horizontal Bar Controller\r\n                        categoryPercentage: 0.8,\r\n                        barPercentage: 0.9,\r\n\r\n                        // offset settings\r\n                        offset: true,\r\n\r\n                        // grid line settings\r\n                        gridLines: {\r\n                            offsetGridLines: true\r\n                        }\r\n                    }]\r\n                },\r\n\r\n                elements: {\r\n                    rectangle: {\r\n                        borderSkipped: 'left'\r\n                    }\r\n                },\r\n\r\n                tooltips: {\r\n                    callbacks: {\r\n                        title: function(item, data) {\r\n                            // Pick first xLabel for now\r\n                            var title = '';\r\n\r\n                            if (item.length > 0) {\r\n                                if (item[0].yLabel) {\r\n                                    title = item[0].yLabel;\r\n                                } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\r\n                                    title = data.labels[item[0].index];\r\n                                }\r\n                            }\r\n\r\n                            return title;\r\n                        },\r\n\r\n                        label: function(item, data) {\r\n                            var datasetLabel = data.datasets[item.datasetIndex].label || '';\r\n                            return datasetLabel + ': ' + item.xLabel;\r\n                        }\r\n                    },\r\n                    mode: 'index',\r\n                    axis: 'y'\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\r\n             * @private\r\n             */\r\n            function computeMinSampleSize(scale, pixels) {\r\n                var min = scale.isHorizontal() ? scale.width : scale.height;\r\n                var ticks = scale.getTicks();\r\n                var prev, curr, i, ilen;\r\n\r\n                for (i = 1, ilen = pixels.length; i < ilen; ++i) {\r\n                    min = Math.min(min, pixels[i] - pixels[i - 1]);\r\n                }\r\n\r\n                for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n                    curr = scale.getPixelForTick(i);\r\n                    min = i > 0 ? Math.min(min, curr - prev) : min;\r\n                    prev = curr;\r\n                }\r\n\r\n                return min;\r\n            }\r\n\r\n            /**\r\n             * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\r\n             * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\r\n             * mode currently always generates bars equally sized (until we introduce scriptable options?).\r\n             * @private\r\n             */\r\n            function computeFitCategoryTraits(index, ruler, options) {\r\n                var thickness = options.barThickness;\r\n                var count = ruler.stackCount;\r\n                var curr = ruler.pixels[index];\r\n                var size, ratio;\r\n\r\n                if (helpers.isNullOrUndef(thickness)) {\r\n                    size = ruler.min * options.categoryPercentage;\r\n                    ratio = options.barPercentage;\r\n                } else {\r\n                    // When bar thickness is enforced, category and bar percentages are ignored.\r\n                    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\r\n                    // and deprecate barPercentage since this value is ignored when thickness is absolute.\r\n                    size = thickness * count;\r\n                    ratio = 1;\r\n                }\r\n\r\n                return {\r\n                    chunk: size / count,\r\n                    ratio: ratio,\r\n                    start: curr - (size / 2)\r\n                };\r\n            }\r\n\r\n            /**\r\n             * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\r\n             * percentage options are 1), based on the previous and following categories. This mode\r\n             * generates bars with different widths when data are not evenly spaced.\r\n             * @private\r\n             */\r\n            function computeFlexCategoryTraits(index, ruler, options) {\r\n                var pixels = ruler.pixels;\r\n                var curr = pixels[index];\r\n                var prev = index > 0 ? pixels[index - 1] : null;\r\n                var next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n                var percent = options.categoryPercentage;\r\n                var start, size;\r\n\r\n                if (prev === null) {\r\n                    // first data: its size is double based on the next point or,\r\n                    // if it's also the last data, we use the scale end extremity.\r\n                    prev = curr - (next === null ? ruler.end - curr : next - curr);\r\n                }\r\n\r\n                if (next === null) {\r\n                    // last data: its size is also double based on the previous point.\r\n                    next = curr + curr - prev;\r\n                }\r\n\r\n                start = curr - ((curr - prev) / 2) * percent;\r\n                size = ((next - prev) / 2) * percent;\r\n\r\n                return {\r\n                    chunk: size / ruler.stackCount,\r\n                    ratio: options.barPercentage,\r\n                    start: start\r\n                };\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.controllers.bar = Chart.DatasetController.extend({\r\n                    dataElementType: elements.Rectangle,\r\n\r\n                    initialize: function() {\r\n                        var me = this;\r\n                        var meta;\r\n\r\n                        Chart.DatasetController.prototype.initialize.apply(me, arguments);\r\n\r\n                        meta = me.getMeta();\r\n                        meta.stack = me.getDataset().stack;\r\n                        meta.bar = true;\r\n                    },\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var rects = me.getMeta().data;\r\n                        var i, ilen;\r\n\r\n                        me._ruler = me.getRuler();\r\n\r\n                        for (i = 0, ilen = rects.length; i < ilen; ++i) {\r\n                            me.updateElement(rects[i], i, reset);\r\n                        }\r\n                    },\r\n\r\n                    updateElement: function(rectangle, index, reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var dataset = me.getDataset();\r\n                        var custom = rectangle.custom || {};\r\n                        var rectangleOptions = chart.options.elements.rectangle;\r\n\r\n                        rectangle._xScale = me.getScaleForId(meta.xAxisID);\r\n                        rectangle._yScale = me.getScaleForId(meta.yAxisID);\r\n                        rectangle._datasetIndex = me.index;\r\n                        rectangle._index = index;\r\n\r\n                        rectangle._model = {\r\n                            datasetLabel: dataset.label,\r\n                            label: chart.data.labels[index],\r\n                            borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\r\n                            backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\r\n                            borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\r\n                            borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\r\n                        };\r\n\r\n                        me.updateElementGeometry(rectangle, index, reset);\r\n\r\n                        rectangle.pivot();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    updateElementGeometry: function(rectangle, index, reset) {\r\n                        var me = this;\r\n                        var model = rectangle._model;\r\n                        var vscale = me.getValueScale();\r\n                        var base = vscale.getBasePixel();\r\n                        var horizontal = vscale.isHorizontal();\r\n                        var ruler = me._ruler || me.getRuler();\r\n                        var vpixels = me.calculateBarValuePixels(me.index, index);\r\n                        var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\r\n\r\n                        model.horizontal = horizontal;\r\n                        model.base = reset ? base : vpixels.base;\r\n                        model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\r\n                        model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\r\n                        model.height = horizontal ? ipixels.size : undefined;\r\n                        model.width = horizontal ? undefined : ipixels.size;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScaleId: function() {\r\n                        return this.getMeta().yAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScaleId: function() {\r\n                        return this.getMeta().xAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScale: function() {\r\n                        return this.getScaleForId(this.getValueScaleId());\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScale: function() {\r\n                        return this.getScaleForId(this.getIndexScaleId());\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the stacks based on groups and bar visibility.\r\n                     * @param {Number} [last] - The dataset index\r\n                     * @returns {Array} The stack list\r\n                     * @private\r\n                     */\r\n                    _getStacks: function(last) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var scale = me.getIndexScale();\r\n                        var stacked = scale.options.stacked;\r\n                        var ilen = last === undefined ? chart.data.datasets.length : last + 1;\r\n                        var stacks = [];\r\n                        var i, meta;\r\n\r\n                        for (i = 0; i < ilen; ++i) {\r\n                            meta = chart.getDatasetMeta(i);\r\n                            if (meta.bar && chart.isDatasetVisible(i) &&\r\n                                (stacked === false ||\r\n                                    (stacked === true && stacks.indexOf(meta.stack) === -1) ||\r\n                                    (stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\r\n                                stacks.push(meta.stack);\r\n                            }\r\n                        }\r\n\r\n                        return stacks;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the effective number of stacks based on groups and bar visibility.\r\n                     * @private\r\n                     */\r\n                    getStackCount: function() {\r\n                        return this._getStacks().length;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the stack index for the given dataset based on groups and bar visibility.\r\n                     * @param {Number} [datasetIndex] - The dataset index\r\n                     * @param {String} [name] - The stack name to find\r\n                     * @returns {Number} The stack index\r\n                     * @private\r\n                     */\r\n                    getStackIndex: function(datasetIndex, name) {\r\n                        var stacks = this._getStacks(datasetIndex);\r\n                        var index = (name !== undefined)\r\n                            ? stacks.indexOf(name)\r\n                            : -1; // indexOf returns -1 if element is not present\r\n\r\n                        return (index === -1)\r\n                            ? stacks.length - 1\r\n                            : index;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getRuler: function() {\r\n                        var me = this;\r\n                        var scale = me.getIndexScale();\r\n                        var stackCount = me.getStackCount();\r\n                        var datasetIndex = me.index;\r\n                        var isHorizontal = scale.isHorizontal();\r\n                        var start = isHorizontal ? scale.left : scale.top;\r\n                        var end = start + (isHorizontal ? scale.width : scale.height);\r\n                        var pixels = [];\r\n                        var i, ilen, min;\r\n\r\n                        for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\r\n                            pixels.push(scale.getPixelForValue(null, i, datasetIndex));\r\n                        }\r\n\r\n                        min = helpers.isNullOrUndef(scale.options.barThickness)\r\n                            ? computeMinSampleSize(scale, pixels)\r\n                            : -1;\r\n\r\n                        return {\r\n                            min: min,\r\n                            pixels: pixels,\r\n                            start: start,\r\n                            end: end,\r\n                            stackCount: stackCount,\r\n                            scale: scale\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Note: pixel values are not clamped to the scale area.\r\n                     * @private\r\n                     */\r\n                    calculateBarValuePixels: function(datasetIndex, index) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var scale = me.getValueScale();\r\n                        var datasets = chart.data.datasets;\r\n                        var value = scale.getRightValue(datasets[datasetIndex].data[index]);\r\n                        var stacked = scale.options.stacked;\r\n                        var stack = meta.stack;\r\n                        var start = 0;\r\n                        var i, imeta, ivalue, base, head, size;\r\n\r\n                        if (stacked || (stacked === undefined && stack !== undefined)) {\r\n                            for (i = 0; i < datasetIndex; ++i) {\r\n                                imeta = chart.getDatasetMeta(i);\r\n\r\n                                if (imeta.bar &&\r\n                                    imeta.stack === stack &&\r\n                                    imeta.controller.getValueScaleId() === scale.id &&\r\n                                    chart.isDatasetVisible(i)) {\r\n                                    ivalue = scale.getRightValue(datasets[i].data[index]);\r\n                                    if ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\r\n                                        start += ivalue;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        base = scale.getPixelForValue(start);\r\n                        head = scale.getPixelForValue(start + value);\r\n                        size = (head - base) / 2;\r\n\r\n                        return {\r\n                            size: size,\r\n                            base: base,\r\n                            head: head,\r\n                            center: head + size / 2\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    calculateBarIndexPixels: function(datasetIndex, index, ruler) {\r\n                        var me = this;\r\n                        var options = ruler.scale.options;\r\n                        var range = options.barThickness === 'flex'\r\n                            ? computeFlexCategoryTraits(index, ruler, options)\r\n                            : computeFitCategoryTraits(index, ruler, options);\r\n\r\n                        var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\r\n                        var center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\r\n                        var size = Math.min(\r\n                            helpers.valueOrDefault(options.maxBarThickness, Infinity),\r\n                            range.chunk * range.ratio);\r\n\r\n                        return {\r\n                            base: center - size / 2,\r\n                            head: center + size / 2,\r\n                            center: center,\r\n                            size: size\r\n                        };\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var scale = me.getValueScale();\r\n                        var rects = me.getMeta().data;\r\n                        var dataset = me.getDataset();\r\n                        var ilen = rects.length;\r\n                        var i = 0;\r\n\r\n                        helpers.canvas.clipArea(chart.ctx, chart.chartArea);\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            if (!isNaN(scale.getRightValue(dataset.data[i]))) {\r\n                                rects[i].draw();\r\n                            }\r\n                        }\r\n\r\n                        helpers.canvas.unclipArea(chart.ctx);\r\n                    },\r\n\r\n                    setHoverStyle: function(rectangle) {\r\n                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n                        var index = rectangle._index;\r\n                        var custom = rectangle.custom || {};\r\n                        var model = rectangle._model;\r\n\r\n                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    removeHoverStyle: function(rectangle) {\r\n                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n                        var index = rectangle._index;\r\n                        var custom = rectangle.custom || {};\r\n                        var model = rectangle._model;\r\n                        var rectangleElementOptions = this.chart.options.elements.rectangle;\r\n\r\n                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\r\n                        model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\r\n                        model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\r\n                    }\r\n                });\r\n\r\n                Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScaleId: function() {\r\n                        return this.getMeta().xAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScaleId: function() {\r\n                        return this.getMeta().yAxisID;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 11: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('doughnut', {\r\n                animation: {\r\n                    // Boolean - Whether we animate the rotation of the Doughnut\r\n                    animateRotate: true,\r\n                    // Boolean - Whether we animate scaling the Doughnut from the centre\r\n                    animateScale: false\r\n                },\r\n                hover: {\r\n                    mode: 'single'\r\n                },\r\n                legendCallback: function(chart) {\r\n                    var text = [];\r\n                    text.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n                    var data = chart.data;\r\n                    var datasets = data.datasets;\r\n                    var labels = data.labels;\r\n\r\n                    if (datasets.length) {\r\n                        for (var i = 0; i < datasets[0].data.length; ++i) {\r\n                            text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\r\n                            if (labels[i]) {\r\n                                text.push(labels[i]);\r\n                            }\r\n                            text.push('</li>');\r\n                        }\r\n                    }\r\n\r\n                    text.push('</ul>');\r\n                    return text.join('');\r\n                },\r\n                legend: {\r\n                    labels: {\r\n                        generateLabels: function(chart) {\r\n                            var data = chart.data;\r\n                            if (data.labels.length && data.datasets.length) {\r\n                                return data.labels.map(function(label, i) {\r\n                                    var meta = chart.getDatasetMeta(0);\r\n                                    var ds = data.datasets[0];\r\n                                    var arc = meta.data[i];\r\n                                    var custom = arc && arc.custom || {};\r\n                                    var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n                                    var arcOpts = chart.options.elements.arc;\r\n                                    var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n                                    var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n                                    var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\r\n                                    return {\r\n                                        text: label,\r\n                                        fillStyle: fill,\r\n                                        strokeStyle: stroke,\r\n                                        lineWidth: bw,\r\n                                        hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n                                        // Extra data used for toggling the correct item\r\n                                        index: i\r\n                                    };\r\n                                });\r\n                            }\r\n                            return [];\r\n                        }\r\n                    },\r\n\r\n                    onClick: function(e, legendItem) {\r\n                        var index = legendItem.index;\r\n                        var chart = this.chart;\r\n                        var i, ilen, meta;\r\n\r\n                        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n                            meta = chart.getDatasetMeta(i);\r\n                            // toggle visibility of index if exists\r\n                            if (meta.data[index]) {\r\n                                meta.data[index].hidden = !meta.data[index].hidden;\r\n                            }\r\n                        }\r\n\r\n                        chart.update();\r\n                    }\r\n                },\r\n\r\n                // The percentage of the chart that we cut out of the middle.\r\n                cutoutPercentage: 50,\r\n\r\n                // The rotation of the chart, where the first data arc begins.\r\n                rotation: Math.PI * -0.5,\r\n\r\n                // The total circumference of the chart.\r\n                circumference: Math.PI * 2.0,\r\n\r\n                // Need to override these to give a nice default\r\n                tooltips: {\r\n                    callbacks: {\r\n                        title: function() {\r\n                            return '';\r\n                        },\r\n                        label: function(tooltipItem, data) {\r\n                            var dataLabel = data.labels[tooltipItem.index];\r\n                            var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\r\n                            if (helpers.isArray(dataLabel)) {\r\n                                // show value on first line of multiline label\r\n                                // need to clone because we are changing the value\r\n                                dataLabel = dataLabel.slice();\r\n                                dataLabel[0] += value;\r\n                            } else {\r\n                                dataLabel += value;\r\n                            }\r\n\r\n                            return dataLabel;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            defaults._set('pie', helpers.clone(defaults.doughnut));\r\n            defaults._set('pie', {\r\n                cutoutPercentage: 0\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\r\n                    dataElementType: elements.Arc,\r\n\r\n                    linkScales: helpers.noop,\r\n\r\n                    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\r\n                    getRingIndex: function(datasetIndex) {\r\n                        var ringIndex = 0;\r\n\r\n                        for (var j = 0; j < datasetIndex; ++j) {\r\n                            if (this.chart.isDatasetVisible(j)) {\r\n                                ++ringIndex;\r\n                            }\r\n                        }\r\n\r\n                        return ringIndex;\r\n                    },\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var chartArea = chart.chartArea;\r\n                        var opts = chart.options;\r\n                        var arcOpts = opts.elements.arc;\r\n                        var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\r\n                        var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\r\n                        var minSize = Math.min(availableWidth, availableHeight);\r\n                        var offset = { x: 0, y: 0 };\r\n                        var meta = me.getMeta();\r\n                        var cutoutPercentage = opts.cutoutPercentage;\r\n                        var circumference = opts.circumference;\r\n\r\n                        // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\r\n                        if (circumference < Math.PI * 2.0) {\r\n                            var startAngle = opts.rotation % (Math.PI * 2.0);\r\n                            startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\r\n                            var endAngle = startAngle + circumference;\r\n                            var start = { x: Math.cos(startAngle), y: Math.sin(startAngle) };\r\n                            var end = { x: Math.cos(endAngle), y: Math.sin(endAngle) };\r\n                            var contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\r\n                            var contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\r\n                            var contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\r\n                            var contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\r\n                            var cutout = cutoutPercentage / 100.0;\r\n                            var min = { x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout)) };\r\n                            var max = { x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout)) };\r\n                            var size = { width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5 };\r\n                            minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\r\n                            offset = { x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5 };\r\n                        }\r\n\r\n                        chart.borderWidth = me.getMaxBorderWidth(meta.data);\r\n                        chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\r\n                        chart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\r\n                        chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n                        chart.offsetX = offset.x * chart.outerRadius;\r\n                        chart.offsetY = offset.y * chart.outerRadius;\r\n\r\n                        meta.total = me.calculateTotal();\r\n\r\n                        me.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\r\n                        me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\r\n\r\n                        helpers.each(meta.data, function(arc, index) {\r\n                            me.updateElement(arc, index, reset);\r\n                        });\r\n                    },\r\n\r\n                    updateElement: function(arc, index, reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var chartArea = chart.chartArea;\r\n                        var opts = chart.options;\r\n                        var animationOpts = opts.animation;\r\n                        var centerX = (chartArea.left + chartArea.right) / 2;\r\n                        var centerY = (chartArea.top + chartArea.bottom) / 2;\r\n                        var startAngle = opts.rotation; // non reset case handled later\r\n                        var endAngle = opts.rotation; // non reset case handled later\r\n                        var dataset = me.getDataset();\r\n                        var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\r\n                        var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\r\n                        var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\r\n                        var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n\r\n                        helpers.extend(arc, {\r\n                            // Utility\r\n                            _datasetIndex: me.index,\r\n                            _index: index,\r\n\r\n                            // Desired view properties\r\n                            _model: {\r\n                                x: centerX + chart.offsetX,\r\n                                y: centerY + chart.offsetY,\r\n                                startAngle: startAngle,\r\n                                endAngle: endAngle,\r\n                                circumference: circumference,\r\n                                outerRadius: outerRadius,\r\n                                innerRadius: innerRadius,\r\n                                label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\r\n                            }\r\n                        });\r\n\r\n                        var model = arc._model;\r\n                        // Resets the visual styles\r\n                        this.removeHoverStyle(arc);\r\n\r\n                        // Set correct angles if not resetting\r\n                        if (!reset || !animationOpts.animateRotate) {\r\n                            if (index === 0) {\r\n                                model.startAngle = opts.rotation;\r\n                            } else {\r\n                                model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\r\n                            }\r\n\r\n                            model.endAngle = model.startAngle + model.circumference;\r\n                        }\r\n\r\n                        arc.pivot();\r\n                    },\r\n\r\n                    removeHoverStyle: function(arc) {\r\n                        Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n                    },\r\n\r\n                    calculateTotal: function() {\r\n                        var dataset = this.getDataset();\r\n                        var meta = this.getMeta();\r\n                        var total = 0;\r\n                        var value;\r\n\r\n                        helpers.each(meta.data, function(element, index) {\r\n                            value = dataset.data[index];\r\n                            if (!isNaN(value) && !element.hidden) {\r\n                                total += Math.abs(value);\r\n                            }\r\n                        });\r\n\r\n                        /* if (total === 0) {\r\n                            total = NaN;\r\n                        }*/\r\n\r\n                        return total;\r\n                    },\r\n\r\n                    calculateCircumference: function(value) {\r\n                        var total = this.getMeta().total;\r\n                        if (total > 0 && !isNaN(value)) {\r\n                            return (Math.PI * 2.0) * (Math.abs(value) / total);\r\n                        }\r\n                        return 0;\r\n                    },\r\n\r\n                    // gets the max border or hover width to properly scale pie charts\r\n                    getMaxBorderWidth: function(arcs) {\r\n                        var max = 0;\r\n                        var index = this.index;\r\n                        var length = arcs.length;\r\n                        var borderWidth;\r\n                        var hoverWidth;\r\n\r\n                        for (var i = 0; i < length; i++) {\r\n                            borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\r\n                            hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\r\n\r\n                            max = borderWidth > max ? borderWidth : max;\r\n                            max = hoverWidth > max ? hoverWidth : max;\r\n                        }\r\n                        return max;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 12: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('line', {\r\n                showLines: true,\r\n                spanGaps: false,\r\n\r\n                hover: {\r\n                    mode: 'label'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'category',\r\n                        id: 'x-axis-0'\r\n                    }],\r\n                    yAxes: [{\r\n                        type: 'linear',\r\n                        id: 'y-axis-0'\r\n                    }]\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                function lineEnabled(dataset, options) {\r\n                    return helpers.valueOrDefault(dataset.showLine, options.showLines);\r\n                }\r\n\r\n                Chart.controllers.line = Chart.DatasetController.extend({\r\n                    datasetElementType: elements.Line,\r\n\r\n                    dataElementType: elements.Point,\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var line = meta.dataset;\r\n                        var points = meta.data || [];\r\n                        var options = me.chart.options;\r\n                        var lineElementOptions = options.elements.line;\r\n                        var scale = me.getScaleForId(meta.yAxisID);\r\n                        var i, ilen, custom;\r\n                        var dataset = me.getDataset();\r\n                        var showLine = lineEnabled(dataset, options);\r\n\r\n                        // Update Line\r\n                        if (showLine) {\r\n                            custom = line.custom || {};\r\n\r\n                            // Compatibility: If the properties are defined with only the old name, use those values\r\n                            if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n                                dataset.lineTension = dataset.tension;\r\n                            }\r\n\r\n                            // Utility\r\n                            line._scale = scale;\r\n                            line._datasetIndex = me.index;\r\n                            // Data\r\n                            line._children = points;\r\n                            // Model\r\n                            line._model = {\r\n                                // Appearance\r\n                                // The default behavior of lines is to break at null values, according\r\n                                // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\r\n                                // This option gives lines the ability to span gaps\r\n                                spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\r\n                                tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n                                backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n                                borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n                                borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n                                borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n                                borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n                                borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n                                borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n                                fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n                                steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\r\n                                cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\r\n                            };\r\n\r\n                            line.pivot();\r\n                        }\r\n\r\n                        // Update Points\r\n                        for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                            me.updateElement(points[i], i, reset);\r\n                        }\r\n\r\n                        if (showLine && line._model.tension !== 0) {\r\n                            me.updateBezierControlPoints();\r\n                        }\r\n\r\n                        // Now pivot the point for animation\r\n                        for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                            points[i].pivot();\r\n                        }\r\n                    },\r\n\r\n                    getPointBackgroundColor: function(point, index) {\r\n                        var backgroundColor = this.chart.options.elements.point.backgroundColor;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (custom.backgroundColor) {\r\n                            backgroundColor = custom.backgroundColor;\r\n                        } else if (dataset.pointBackgroundColor) {\r\n                            backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\r\n                        } else if (dataset.backgroundColor) {\r\n                            backgroundColor = dataset.backgroundColor;\r\n                        }\r\n\r\n                        return backgroundColor;\r\n                    },\r\n\r\n                    getPointBorderColor: function(point, index) {\r\n                        var borderColor = this.chart.options.elements.point.borderColor;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (custom.borderColor) {\r\n                            borderColor = custom.borderColor;\r\n                        } else if (dataset.pointBorderColor) {\r\n                            borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\r\n                        } else if (dataset.borderColor) {\r\n                            borderColor = dataset.borderColor;\r\n                        }\r\n\r\n                        return borderColor;\r\n                    },\r\n\r\n                    getPointBorderWidth: function(point, index) {\r\n                        var borderWidth = this.chart.options.elements.point.borderWidth;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (!isNaN(custom.borderWidth)) {\r\n                            borderWidth = custom.borderWidth;\r\n                        } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\r\n                            borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\r\n                        } else if (!isNaN(dataset.borderWidth)) {\r\n                            borderWidth = dataset.borderWidth;\r\n                        }\r\n\r\n                        return borderWidth;\r\n                    },\r\n\r\n                    updateElement: function(point, index, reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var custom = point.custom || {};\r\n                        var dataset = me.getDataset();\r\n                        var datasetIndex = me.index;\r\n                        var value = dataset.data[index];\r\n                        var yScale = me.getScaleForId(meta.yAxisID);\r\n                        var xScale = me.getScaleForId(meta.xAxisID);\r\n                        var pointOptions = me.chart.options.elements.point;\r\n                        var x, y;\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n                            dataset.pointRadius = dataset.radius;\r\n                        }\r\n                        if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\r\n                            dataset.pointHitRadius = dataset.hitRadius;\r\n                        }\r\n\r\n                        x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\r\n                        y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\r\n\r\n                        // Utility\r\n                        point._xScale = xScale;\r\n                        point._yScale = yScale;\r\n                        point._datasetIndex = datasetIndex;\r\n                        point._index = index;\r\n\r\n                        // Desired view properties\r\n                        point._model = {\r\n                            x: x,\r\n                            y: y,\r\n                            skip: custom.skip || isNaN(x) || isNaN(y),\r\n                            // Appearance\r\n                            radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\r\n                            pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\r\n                            backgroundColor: me.getPointBackgroundColor(point, index),\r\n                            borderColor: me.getPointBorderColor(point, index),\r\n                            borderWidth: me.getPointBorderWidth(point, index),\r\n                            tension: meta.dataset._model ? meta.dataset._model.tension : 0,\r\n                            steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\r\n                            // Tooltip\r\n                            hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\r\n                        };\r\n                    },\r\n\r\n                    calculatePointY: function(value, index, datasetIndex) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var yScale = me.getScaleForId(meta.yAxisID);\r\n                        var sumPos = 0;\r\n                        var sumNeg = 0;\r\n                        var i, ds, dsMeta;\r\n\r\n                        if (yScale.options.stacked) {\r\n                            for (i = 0; i < datasetIndex; i++) {\r\n                                ds = chart.data.datasets[i];\r\n                                dsMeta = chart.getDatasetMeta(i);\r\n                                if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\r\n                                    var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\r\n                                    if (stackedRightValue < 0) {\r\n                                        sumNeg += stackedRightValue || 0;\r\n                                    } else {\r\n                                        sumPos += stackedRightValue || 0;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            var rightValue = Number(yScale.getRightValue(value));\r\n                            if (rightValue < 0) {\r\n                                return yScale.getPixelForValue(sumNeg + rightValue);\r\n                            }\r\n                            return yScale.getPixelForValue(sumPos + rightValue);\r\n                        }\r\n\r\n                        return yScale.getPixelForValue(value);\r\n                    },\r\n\r\n                    updateBezierControlPoints: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var area = me.chart.chartArea;\r\n                        var points = (meta.data || []);\r\n                        var i, ilen, point, model, controlPoints;\r\n\r\n                        // Only consider points that are drawn in case the spanGaps option is used\r\n                        if (meta.dataset._model.spanGaps) {\r\n                            points = points.filter(function(pt) {\r\n                                return !pt._model.skip;\r\n                            });\r\n                        }\r\n\r\n                        function capControlPoint(pt, min, max) {\r\n                            return Math.max(Math.min(pt, max), min);\r\n                        }\r\n\r\n                        if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\r\n                            helpers.splineCurveMonotone(points);\r\n                        } else {\r\n                            for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                                point = points[i];\r\n                                model = point._model;\r\n                                controlPoints = helpers.splineCurve(\r\n                                    helpers.previousItem(points, i)._model,\r\n                                    model,\r\n                                    helpers.nextItem(points, i)._model,\r\n                                    meta.dataset._model.tension\r\n                                );\r\n                                model.controlPointPreviousX = controlPoints.previous.x;\r\n                                model.controlPointPreviousY = controlPoints.previous.y;\r\n                                model.controlPointNextX = controlPoints.next.x;\r\n                                model.controlPointNextY = controlPoints.next.y;\r\n                            }\r\n                        }\r\n\r\n                        if (me.chart.options.elements.line.capBezierPoints) {\r\n                            for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                                model = points[i]._model;\r\n                                model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\r\n                                model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\r\n                                model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\r\n                                model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var points = meta.data || [];\r\n                        var area = chart.chartArea;\r\n                        var ilen = points.length;\r\n                        var i = 0;\r\n\r\n                        helpers.canvas.clipArea(chart.ctx, area);\r\n\r\n                        if (lineEnabled(me.getDataset(), chart.options)) {\r\n                            meta.dataset.draw();\r\n                        }\r\n\r\n                        helpers.canvas.unclipArea(chart.ctx);\r\n\r\n                        // Draw the points\r\n                        for (; i < ilen; ++i) {\r\n                            points[i].draw(area);\r\n                        }\r\n                    },\r\n\r\n                    setHoverStyle: function(point) {\r\n                        // Point\r\n                        var dataset = this.chart.data.datasets[point._datasetIndex];\r\n                        var index = point._index;\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n\r\n                        model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n                        model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    removeHoverStyle: function(point) {\r\n                        var me = this;\r\n                        var dataset = me.chart.data.datasets[point._datasetIndex];\r\n                        var index = point._index;\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n                            dataset.pointRadius = dataset.radius;\r\n                        }\r\n\r\n                        model.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\r\n                        model.backgroundColor = me.getPointBackgroundColor(point, index);\r\n                        model.borderColor = me.getPointBorderColor(point, index);\r\n                        model.borderWidth = me.getPointBorderWidth(point, index);\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 13: [function(require, module, exports) {\r\n            /* global window: false */\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                animation: {\r\n                    duration: 1000,\r\n                    easing: 'easeOutQuart',\r\n                    onProgress: helpers.noop,\r\n                    onComplete: helpers.noop\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Animation = Element.extend({\r\n                    chart: null, // the animation associated chart instance\r\n                    currentStep: 0, // the current animation step\r\n                    numSteps: 60, // default number of steps\r\n                    easing: '', // the easing to use for this animation\r\n                    render: null, // render function used by the animation service\r\n\r\n                    onAnimationProgress: null, // user specified callback to fire on each step of the animation\r\n                    onAnimationComplete: null, // user specified callback to fire when the animation finishes\r\n                });\r\n\r\n                Chart.animationService = {\r\n                    frameDuration: 17,\r\n                    animations: [],\r\n                    dropFrames: 0,\r\n                    request: null,\r\n\r\n                    /**\r\n                     * @param {Chart} chart - The chart to animate.\r\n                     * @param {Chart.Animation} animation - The animation that we will animate.\r\n                     * @param {Number} duration - The animation duration in ms.\r\n                     * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\r\n                     */\r\n                    addAnimation: function(chart, animation, duration, lazy) {\r\n                        var animations = this.animations;\r\n                        var i, ilen;\r\n\r\n                        animation.chart = chart;\r\n\r\n                        if (!lazy) {\r\n                            chart.animating = true;\r\n                        }\r\n\r\n                        for (i = 0, ilen = animations.length; i < ilen; ++i) {\r\n                            if (animations[i].chart === chart) {\r\n                                animations[i] = animation;\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        animations.push(animation);\r\n\r\n                        // If there are no animations queued, manually kickstart a digest, for lack of a better word\r\n                        if (animations.length === 1) {\r\n                            this.requestAnimationFrame();\r\n                        }\r\n                    },\r\n\r\n                    cancelAnimation: function(chart) {\r\n                        var index = helpers.findIndex(this.animations, function(animation) {\r\n                            return animation.chart === chart;\r\n                        });\r\n\r\n                        if (index !== -1) {\r\n                            this.animations.splice(index, 1);\r\n                            chart.animating = false;\r\n                        }\r\n                    },\r\n\r\n                    requestAnimationFrame: function() {\r\n                        var me = this;\r\n                        if (me.request === null) {\r\n                            // Skip animation frame requests until the active one is executed.\r\n                            // This can happen when processing mouse events, e.g. 'mousemove'\r\n                            // and 'mouseout' events will trigger multiple renders.\r\n                            me.request = helpers.requestAnimFrame.call(window, function() {\r\n                                me.request = null;\r\n                                me.startDigest();\r\n                            });\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    startDigest: function() {\r\n                        var me = this;\r\n                        var startTime = Date.now();\r\n                        var framesToDrop = 0;\r\n\r\n                        if (me.dropFrames > 1) {\r\n                            framesToDrop = Math.floor(me.dropFrames);\r\n                            me.dropFrames = me.dropFrames % 1;\r\n                        }\r\n\r\n                        me.advance(1 + framesToDrop);\r\n\r\n                        var endTime = Date.now();\r\n\r\n                        me.dropFrames += (endTime - startTime) / me.frameDuration;\r\n\r\n                        // Do we have more stuff to animate?\r\n                        if (me.animations.length > 0) {\r\n                            me.requestAnimationFrame();\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    advance: function(count) {\r\n                        var animations = this.animations;\r\n                        var animation, chart;\r\n                        var i = 0;\r\n\r\n                        while (i < animations.length) {\r\n                            animation = animations[i];\r\n                            chart = animation.chart;\r\n\r\n                            animation.currentStep = (animation.currentStep || 0) + count;\r\n                            animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\r\n\r\n                            helpers.callback(animation.render, [chart, animation], chart);\r\n                            helpers.callback(animation.onAnimationProgress, [animation], chart);\r\n\r\n                            if (animation.currentStep >= animation.numSteps) {\r\n                                helpers.callback(animation.onAnimationComplete, [animation], chart);\r\n                                chart.animating = false;\r\n                                animations.splice(i, 1);\r\n                            } else {\r\n                                ++i;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.Animation instead\r\n                 * @prop Chart.Animation#animationObject\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 */\r\n                Object.defineProperty(Chart.Animation.prototype, 'animationObject', {\r\n                    get: function() {\r\n                        return this;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.Animation#chart instead\r\n                 * @prop Chart.Animation#chartInstance\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 */\r\n                Object.defineProperty(Chart.Animation.prototype, 'chartInstance', {\r\n                    get: function() {\r\n                        return this.chart;\r\n                    },\r\n                    set: function(value) {\r\n                        this.chart = value;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 14: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var Interaction = require(19);\r\n            var layouts = require(21);\r\n            var platform = require(39);\r\n            var plugins = require(22);\r\n\r\n            module.exports = function(Chart) {\r\n                // Create a dictionary of chart types, to allow for extension of existing types\r\n                Chart.types = {};\r\n\r\n                // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\r\n                // Destroy method on the chart will remove the instance of the chart from this reference.\r\n                Chart.instances = {};\r\n\r\n                // Controllers available for dataset visualization eg. bar, line, slice, etc.\r\n                Chart.controllers = {};\r\n\r\n                /**\r\n                 * Initializes the given config with global and chart default values.\r\n                 */\r\n                function initConfig(config) {\r\n                    config = config || {};\r\n\r\n                    // Do NOT use configMerge() for the data object because this method merges arrays\r\n                    // and so would change references to labels and datasets, preventing data updates.\r\n                    var data = config.data = config.data || {};\r\n                    data.datasets = data.datasets || [];\r\n                    data.labels = data.labels || [];\r\n\r\n                    config.options = helpers.configMerge(\r\n                        defaults.global,\r\n                        defaults[config.type],\r\n                        config.options || {});\r\n\r\n                    return config;\r\n                }\r\n\r\n                /**\r\n                 * Updates the config of the chart\r\n                 * @param chart {Chart} chart to update the options for\r\n                 */\r\n                function updateConfig(chart) {\r\n                    var newOptions = chart.options;\r\n\r\n                    helpers.each(chart.scales, function(scale) {\r\n                        layouts.removeBox(chart, scale);\r\n                    });\r\n\r\n                    newOptions = helpers.configMerge(\r\n                        Chart.defaults.global,\r\n                        Chart.defaults[chart.config.type],\r\n                        newOptions);\r\n\r\n                    chart.options = chart.config.options = newOptions;\r\n                    chart.ensureScalesHaveIDs();\r\n                    chart.buildOrUpdateScales();\r\n                    // Tooltip\r\n                    chart.tooltip._options = newOptions.tooltips;\r\n                    chart.tooltip.initialize();\r\n                }\r\n\r\n                function positionIsHorizontal(position) {\r\n                    return position === 'top' || position === 'bottom';\r\n                }\r\n\r\n                helpers.extend(Chart.prototype, /** @lends Chart */ {\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    construct: function(item, config) {\r\n                        var me = this;\r\n\r\n                        config = initConfig(config);\r\n\r\n                        var context = platform.acquireContext(item, config);\r\n                        var canvas = context && context.canvas;\r\n                        var height = canvas && canvas.height;\r\n                        var width = canvas && canvas.width;\r\n\r\n                        me.id = helpers.uid();\r\n                        me.ctx = context;\r\n                        me.canvas = canvas;\r\n                        me.config = config;\r\n                        me.width = width;\r\n                        me.height = height;\r\n                        me.aspectRatio = height ? width / height : null;\r\n                        me.options = config.options;\r\n                        me._bufferedRender = false;\r\n\r\n                        /**\r\n                         * Provided for backward compatibility, Chart and Chart.Controller have been merged,\r\n                         * the \"instance\" still need to be defined since it might be called from plugins.\r\n                         * @prop Chart#chart\r\n                         * @deprecated since version 2.6.0\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        me.chart = me;\r\n                        me.controller = me; // chart.chart.controller #inception\r\n\r\n                        // Add the chart instance to the global namespace\r\n                        Chart.instances[me.id] = me;\r\n\r\n                        // Define alias to the config data: `chart.data === chart.config.data`\r\n                        Object.defineProperty(me, 'data', {\r\n                            get: function() {\r\n                                return me.config.data;\r\n                            },\r\n                            set: function(value) {\r\n                                me.config.data = value;\r\n                            }\r\n                        });\r\n\r\n                        if (!context || !canvas) {\r\n                            // The given item is not a compatible context2d element, let's return before finalizing\r\n                            // the chart initialization but after setting basic chart / controller properties that\r\n                            // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\r\n                            // https://github.com/chartjs/Chart.js/issues/2807\r\n                            console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n                            return;\r\n                        }\r\n\r\n                        me.initialize();\r\n                        me.update();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    initialize: function() {\r\n                        var me = this;\r\n\r\n                        // Before init plugin notification\r\n                        plugins.notify(me, 'beforeInit');\r\n\r\n                        helpers.retinaScale(me, me.options.devicePixelRatio);\r\n\r\n                        me.bindEvents();\r\n\r\n                        if (me.options.responsive) {\r\n                            // Initial resize before chart draws (must be silent to preserve initial animations).\r\n                            me.resize(true);\r\n                        }\r\n\r\n                        // Make sure scales have IDs and are built before we build any controllers.\r\n                        me.ensureScalesHaveIDs();\r\n                        me.buildOrUpdateScales();\r\n                        me.initToolTip();\r\n\r\n                        // After init plugin notification\r\n                        plugins.notify(me, 'afterInit');\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    clear: function() {\r\n                        helpers.canvas.clear(this);\r\n                        return this;\r\n                    },\r\n\r\n                    stop: function() {\r\n                        // Stops any current animation loop occurring\r\n                        Chart.animationService.cancelAnimation(this);\r\n                        return this;\r\n                    },\r\n\r\n                    resize: function(silent) {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        var canvas = me.canvas;\r\n                        var aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\r\n\r\n                        // the canvas render width and height will be casted to integers so make sure that\r\n                        // the canvas display style uses the same integer values to avoid blurring effect.\r\n\r\n                        // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\r\n                        var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\r\n                        var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\r\n\r\n                        if (me.width === newWidth && me.height === newHeight) {\r\n                            return;\r\n                        }\r\n\r\n                        canvas.width = me.width = newWidth;\r\n                        canvas.height = me.height = newHeight;\r\n                        canvas.style.width = newWidth + 'px';\r\n                        canvas.style.height = newHeight + 'px';\r\n\r\n                        helpers.retinaScale(me, options.devicePixelRatio);\r\n\r\n                        if (!silent) {\r\n                            // Notify any plugins about the resize\r\n                            var newSize = { width: newWidth, height: newHeight };\r\n                            plugins.notify(me, 'resize', [newSize]);\r\n\r\n                            // Notify of resize\r\n                            if (me.options.onResize) {\r\n                                me.options.onResize(me, newSize);\r\n                            }\r\n\r\n                            me.stop();\r\n                            me.update(me.options.responsiveAnimationDuration);\r\n                        }\r\n                    },\r\n\r\n                    ensureScalesHaveIDs: function() {\r\n                        var options = this.options;\r\n                        var scalesOptions = options.scales || {};\r\n                        var scaleOptions = options.scale;\r\n\r\n                        helpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\r\n                            xAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\r\n                        });\r\n\r\n                        helpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\r\n                            yAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\r\n                        });\r\n\r\n                        if (scaleOptions) {\r\n                            scaleOptions.id = scaleOptions.id || 'scale';\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Builds a map of scale ID to scale object for future lookup.\r\n                     */\r\n                    buildOrUpdateScales: function() {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        var scales = me.scales || {};\r\n                        var items = [];\r\n                        var updated = Object.keys(scales).reduce(function(obj, id) {\r\n                            obj[id] = false;\r\n                            return obj;\r\n                        }, {});\r\n\r\n                        if (options.scales) {\r\n                            items = items.concat(\r\n                                (options.scales.xAxes || []).map(function(xAxisOptions) {\r\n                                    return { options: xAxisOptions, dtype: 'category', dposition: 'bottom' };\r\n                                }),\r\n                                (options.scales.yAxes || []).map(function(yAxisOptions) {\r\n                                    return { options: yAxisOptions, dtype: 'linear', dposition: 'left' };\r\n                                })\r\n                            );\r\n                        }\r\n\r\n                        if (options.scale) {\r\n                            items.push({\r\n                                options: options.scale,\r\n                                dtype: 'radialLinear',\r\n                                isDefault: true,\r\n                                dposition: 'chartArea'\r\n                            });\r\n                        }\r\n\r\n                        helpers.each(items, function(item) {\r\n                            var scaleOptions = item.options;\r\n                            var id = scaleOptions.id;\r\n                            var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\r\n\r\n                            if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\r\n                                scaleOptions.position = item.dposition;\r\n                            }\r\n\r\n                            updated[id] = true;\r\n                            var scale = null;\r\n                            if (id in scales && scales[id].type === scaleType) {\r\n                                scale = scales[id];\r\n                                scale.options = scaleOptions;\r\n                                scale.ctx = me.ctx;\r\n                                scale.chart = me;\r\n                            } else {\r\n                                var scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\r\n                                if (!scaleClass) {\r\n                                    return;\r\n                                }\r\n                                scale = new scaleClass({\r\n                                    id: id,\r\n                                    type: scaleType,\r\n                                    options: scaleOptions,\r\n                                    ctx: me.ctx,\r\n                                    chart: me\r\n                                });\r\n                                scales[scale.id] = scale;\r\n                            }\r\n\r\n                            scale.mergeTicksOptions();\r\n\r\n                            // TODO(SB): I think we should be able to remove this custom case (options.scale)\r\n                            // and consider it as a regular scale part of the \"scales\"\" map only! This would\r\n                            // make the logic easier and remove some useless? custom code.\r\n                            if (item.isDefault) {\r\n                                me.scale = scale;\r\n                            }\r\n                        });\r\n                        // clear up discarded scales\r\n                        helpers.each(updated, function(hasUpdated, id) {\r\n                            if (!hasUpdated) {\r\n                                delete scales[id];\r\n                            }\r\n                        });\r\n\r\n                        me.scales = scales;\r\n\r\n                        Chart.scaleService.addScalesToLayout(this);\r\n                    },\r\n\r\n                    buildOrUpdateControllers: function() {\r\n                        var me = this;\r\n                        var types = [];\r\n                        var newControllers = [];\r\n\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            var meta = me.getDatasetMeta(datasetIndex);\r\n                            var type = dataset.type || me.config.type;\r\n\r\n                            if (meta.type && meta.type !== type) {\r\n                                me.destroyDatasetMeta(datasetIndex);\r\n                                meta = me.getDatasetMeta(datasetIndex);\r\n                            }\r\n                            meta.type = type;\r\n\r\n                            types.push(meta.type);\r\n\r\n                            if (meta.controller) {\r\n                                meta.controller.updateIndex(datasetIndex);\r\n                                meta.controller.linkScales();\r\n                            } else {\r\n                                var ControllerClass = Chart.controllers[meta.type];\r\n                                if (ControllerClass === undefined) {\r\n                                    throw new Error('\"' + meta.type + '\" is not a chart type.');\r\n                                }\r\n\r\n                                meta.controller = new ControllerClass(me, datasetIndex);\r\n                                newControllers.push(meta.controller);\r\n                            }\r\n                        }, me);\r\n\r\n                        return newControllers;\r\n                    },\r\n\r\n                    /**\r\n                     * Reset the elements of all datasets\r\n                     * @private\r\n                     */\r\n                    resetElements: function() {\r\n                        var me = this;\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            me.getDatasetMeta(datasetIndex).controller.reset();\r\n                        }, me);\r\n                    },\r\n\r\n                    /**\r\n                    * Resets the chart back to it's state before the initial animation\r\n                    */\r\n                    reset: function() {\r\n                        this.resetElements();\r\n                        this.tooltip.initialize();\r\n                    },\r\n\r\n                    update: function(config) {\r\n                        var me = this;\r\n\r\n                        if (!config || typeof config !== 'object') {\r\n                            // backwards compatibility\r\n                            config = {\r\n                                duration: config,\r\n                                lazy: arguments[1]\r\n                            };\r\n                        }\r\n\r\n                        updateConfig(me);\r\n\r\n                        // plugins options references might have change, let's invalidate the cache\r\n                        // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\r\n                        plugins._invalidate(me);\r\n\r\n                        if (plugins.notify(me, 'beforeUpdate') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // In case the entire data object changed\r\n                        me.tooltip._data = me.data;\r\n\r\n                        // Make sure dataset controllers are updated and new controllers are reset\r\n                        var newControllers = me.buildOrUpdateControllers();\r\n\r\n                        // Make sure all dataset controllers have correct meta data counts\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\r\n                        }, me);\r\n\r\n                        me.updateLayout();\r\n\r\n                        // Can only reset the new controllers after the scales have been updated\r\n                        if (me.options.animation && me.options.animation.duration) {\r\n                            helpers.each(newControllers, function(controller) {\r\n                                controller.reset();\r\n                            });\r\n                        }\r\n\r\n                        me.updateDatasets();\r\n\r\n                        // Need to reset tooltip in case it is displayed with elements that are removed\r\n                        // after update.\r\n                        me.tooltip.initialize();\r\n\r\n                        // Last active contains items that were previously in the tooltip.\r\n                        // When we reset the tooltip, we need to clear it\r\n                        me.lastActive = [];\r\n\r\n                        // Do this before render so that any plugins that need final scale updates can use it\r\n                        plugins.notify(me, 'afterUpdate');\r\n\r\n                        if (me._bufferedRender) {\r\n                            me._bufferedRequest = {\r\n                                duration: config.duration,\r\n                                easing: config.easing,\r\n                                lazy: config.lazy\r\n                            };\r\n                        } else {\r\n                            me.render(config);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\r\n                     * hook, in which case, plugins will not be called on `afterLayout`.\r\n                     * @private\r\n                     */\r\n                    updateLayout: function() {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeLayout') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        layouts.update(this, this.width, this.height);\r\n\r\n                        /**\r\n                         * Provided for backward compatibility, use `afterLayout` instead.\r\n                         * @method IPlugin#afterScaleUpdate\r\n                         * @deprecated since version 2.5.0\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        plugins.notify(me, 'afterScaleUpdate');\r\n                        plugins.notify(me, 'afterLayout');\r\n                    },\r\n\r\n                    /**\r\n                     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\r\n                     * @private\r\n                     */\r\n                    updateDatasets: function() {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                            me.updateDataset(i);\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterDatasetsUpdate');\r\n                    },\r\n\r\n                    /**\r\n                     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\r\n                     * @private\r\n                     */\r\n                    updateDataset: function(index) {\r\n                        var me = this;\r\n                        var meta = me.getDatasetMeta(index);\r\n                        var args = {\r\n                            meta: meta,\r\n                            index: index\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        meta.controller.update();\r\n\r\n                        plugins.notify(me, 'afterDatasetUpdate', [args]);\r\n                    },\r\n\r\n                    render: function(config) {\r\n                        var me = this;\r\n\r\n                        if (!config || typeof config !== 'object') {\r\n                            // backwards compatibility\r\n                            config = {\r\n                                duration: config,\r\n                                lazy: arguments[1]\r\n                            };\r\n                        }\r\n\r\n                        var duration = config.duration;\r\n                        var lazy = config.lazy;\r\n\r\n                        if (plugins.notify(me, 'beforeRender') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        var animationOptions = me.options.animation;\r\n                        var onComplete = function(animation) {\r\n                            plugins.notify(me, 'afterRender');\r\n                            helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\r\n                        };\r\n\r\n                        if (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\r\n                            var animation = new Chart.Animation({\r\n                                numSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\r\n                                easing: config.easing || animationOptions.easing,\r\n\r\n                                render: function(chart, animationObject) {\r\n                                    var easingFunction = helpers.easing.effects[animationObject.easing];\r\n                                    var currentStep = animationObject.currentStep;\r\n                                    var stepDecimal = currentStep / animationObject.numSteps;\r\n\r\n                                    chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\r\n                                },\r\n\r\n                                onAnimationProgress: animationOptions.onProgress,\r\n                                onAnimationComplete: onComplete\r\n                            });\r\n\r\n                            Chart.animationService.addAnimation(me, animation, duration, lazy);\r\n                        } else {\r\n                            me.draw();\r\n\r\n                            // See https://github.com/chartjs/Chart.js/issues/3781\r\n                            onComplete(new Chart.Animation({ numSteps: 0, chart: me }));\r\n                        }\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    draw: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        me.clear();\r\n\r\n                        if (helpers.isNullOrUndef(easingValue)) {\r\n                            easingValue = 1;\r\n                        }\r\n\r\n                        me.transition(easingValue);\r\n\r\n                        if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Draw all the scales\r\n                        helpers.each(me.boxes, function(box) {\r\n                            box.draw(me.chartArea);\r\n                        }, me);\r\n\r\n                        if (me.scale) {\r\n                            me.scale.draw();\r\n                        }\r\n\r\n                        me.drawDatasets(easingValue);\r\n                        me._drawTooltip(easingValue);\r\n\r\n                        plugins.notify(me, 'afterDraw', [easingValue]);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    transition: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\r\n                            if (me.isDatasetVisible(i)) {\r\n                                me.getDatasetMeta(i).controller.transition(easingValue);\r\n                            }\r\n                        }\r\n\r\n                        me.tooltip.transition(easingValue);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\r\n                     * @private\r\n                     */\r\n                    drawDatasets: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Draw datasets reversed to support proper line stacking\r\n                        for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\r\n                            if (me.isDatasetVisible(i)) {\r\n                                me.drawDataset(i, easingValue);\r\n                            }\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\r\n                     * @private\r\n                     */\r\n                    drawDataset: function(index, easingValue) {\r\n                        var me = this;\r\n                        var meta = me.getDatasetMeta(index);\r\n                        var args = {\r\n                            meta: meta,\r\n                            index: index,\r\n                            easingValue: easingValue\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        meta.controller.draw(easingValue);\r\n\r\n                        plugins.notify(me, 'afterDatasetDraw', [args]);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\r\n                     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\r\n                     * @private\r\n                     */\r\n                    _drawTooltip: function(easingValue) {\r\n                        var me = this;\r\n                        var tooltip = me.tooltip;\r\n                        var args = {\r\n                            tooltip: tooltip,\r\n                            easingValue: easingValue\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        tooltip.draw();\r\n\r\n                        plugins.notify(me, 'afterTooltipDraw', [args]);\r\n                    },\r\n\r\n                    // Get the single element that was clicked on\r\n                    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\r\n                    getElementAtEvent: function(e) {\r\n                        return Interaction.modes.single(this, e);\r\n                    },\r\n\r\n                    getElementsAtEvent: function(e) {\r\n                        return Interaction.modes.label(this, e, { intersect: true });\r\n                    },\r\n\r\n                    getElementsAtXAxis: function(e) {\r\n                        return Interaction.modes['x-axis'](this, e, { intersect: true });\r\n                    },\r\n\r\n                    getElementsAtEventForMode: function(e, mode, options) {\r\n                        var method = Interaction.modes[mode];\r\n                        if (typeof method === 'function') {\r\n                            return method(this, e, options);\r\n                        }\r\n\r\n                        return [];\r\n                    },\r\n\r\n                    getDatasetAtEvent: function(e) {\r\n                        return Interaction.modes.dataset(this, e, { intersect: true });\r\n                    },\r\n\r\n                    getDatasetMeta: function(datasetIndex) {\r\n                        var me = this;\r\n                        var dataset = me.data.datasets[datasetIndex];\r\n                        if (!dataset._meta) {\r\n                            dataset._meta = {};\r\n                        }\r\n\r\n                        var meta = dataset._meta[me.id];\r\n                        if (!meta) {\r\n                            meta = dataset._meta[me.id] = {\r\n                                type: null,\r\n                                data: [],\r\n                                dataset: null,\r\n                                controller: null,\r\n                                hidden: null,\t\t\t// See isDatasetVisible() comment\r\n                                xAxisID: null,\r\n                                yAxisID: null\r\n                            };\r\n                        }\r\n\r\n                        return meta;\r\n                    },\r\n\r\n                    getVisibleDatasetCount: function() {\r\n                        var count = 0;\r\n                        for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n                            if (this.isDatasetVisible(i)) {\r\n                                count++;\r\n                            }\r\n                        }\r\n                        return count;\r\n                    },\r\n\r\n                    isDatasetVisible: function(datasetIndex) {\r\n                        var meta = this.getDatasetMeta(datasetIndex);\r\n\r\n                        // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\r\n                        // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\r\n                        return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\r\n                    },\r\n\r\n                    generateLegend: function() {\r\n                        return this.options.legendCallback(this);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    destroyDatasetMeta: function(datasetIndex) {\r\n                        var id = this.id;\r\n                        var dataset = this.data.datasets[datasetIndex];\r\n                        var meta = dataset._meta && dataset._meta[id];\r\n\r\n                        if (meta) {\r\n                            meta.controller.destroy();\r\n                            delete dataset._meta[id];\r\n                        }\r\n                    },\r\n\r\n                    destroy: function() {\r\n                        var me = this;\r\n                        var canvas = me.canvas;\r\n                        var i, ilen;\r\n\r\n                        me.stop();\r\n\r\n                        // dataset controllers need to cleanup associated data\r\n                        for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                            me.destroyDatasetMeta(i);\r\n                        }\r\n\r\n                        if (canvas) {\r\n                            me.unbindEvents();\r\n                            helpers.canvas.clear(me);\r\n                            platform.releaseContext(me.ctx);\r\n                            me.canvas = null;\r\n                            me.ctx = null;\r\n                        }\r\n\r\n                        plugins.notify(me, 'destroy');\r\n\r\n                        delete Chart.instances[me.id];\r\n                    },\r\n\r\n                    toBase64Image: function() {\r\n                        return this.canvas.toDataURL.apply(this.canvas, arguments);\r\n                    },\r\n\r\n                    initToolTip: function() {\r\n                        var me = this;\r\n                        me.tooltip = new Chart.Tooltip({\r\n                            _chart: me,\r\n                            _chartInstance: me, // deprecated, backward compatibility\r\n                            _data: me.data,\r\n                            _options: me.options.tooltips\r\n                        }, me);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    bindEvents: function() {\r\n                        var me = this;\r\n                        var listeners = me._listeners = {};\r\n                        var listener = function() {\r\n                            me.eventHandler.apply(me, arguments);\r\n                        };\r\n\r\n                        helpers.each(me.options.events, function(type) {\r\n                            platform.addEventListener(me, type, listener);\r\n                            listeners[type] = listener;\r\n                        });\r\n\r\n                        // Elements used to detect size change should not be injected for non responsive charts.\r\n                        // See https://github.com/chartjs/Chart.js/issues/2210\r\n                        if (me.options.responsive) {\r\n                            listener = function() {\r\n                                me.resize();\r\n                            };\r\n\r\n                            platform.addEventListener(me, 'resize', listener);\r\n                            listeners.resize = listener;\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    unbindEvents: function() {\r\n                        var me = this;\r\n                        var listeners = me._listeners;\r\n                        if (!listeners) {\r\n                            return;\r\n                        }\r\n\r\n                        delete me._listeners;\r\n                        helpers.each(listeners, function(listener, type) {\r\n                            platform.removeEventListener(me, type, listener);\r\n                        });\r\n                    },\r\n\r\n                    updateHoverStyle: function(elements, mode, enabled) {\r\n                        var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\r\n                        var element, i, ilen;\r\n\r\n                        for (i = 0, ilen = elements.length; i < ilen; ++i) {\r\n                            element = elements[i];\r\n                            if (element) {\r\n                                this.getDatasetMeta(element._datasetIndex).controller[method](element);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    eventHandler: function(e) {\r\n                        var me = this;\r\n                        var tooltip = me.tooltip;\r\n\r\n                        if (plugins.notify(me, 'beforeEvent', [e]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Buffer any update calls so that renders do not occur\r\n                        me._bufferedRender = true;\r\n                        me._bufferedRequest = null;\r\n\r\n                        var changed = me.handleEvent(e);\r\n                        // for smooth tooltip animations issue #4989\r\n                        // the tooltip should be the source of change\r\n                        // Animation check workaround:\r\n                        // tooltip._start will be null when tooltip isn't animating\r\n                        if (tooltip) {\r\n                            changed = tooltip._start\r\n                                ? tooltip.handleEvent(e)\r\n                                : changed | tooltip.handleEvent(e);\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterEvent', [e]);\r\n\r\n                        var bufferedRequest = me._bufferedRequest;\r\n                        if (bufferedRequest) {\r\n                            // If we have an update that was triggered, we need to do a normal render\r\n                            me.render(bufferedRequest);\r\n                        } else if (changed && !me.animating) {\r\n                            // If entering, leaving, or changing elements, animate the change via pivot\r\n                            me.stop();\r\n\r\n                            // We only need to render at this point. Updating will cause scales to be\r\n                            // recomputed generating flicker & using more memory than necessary.\r\n                            me.render(me.options.hover.animationDuration, true);\r\n                        }\r\n\r\n                        me._bufferedRender = false;\r\n                        me._bufferedRequest = null;\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    /**\r\n                     * Handle an event\r\n                     * @private\r\n                     * @param {IEvent} event the event to handle\r\n                     * @return {Boolean} true if the chart needs to re-render\r\n                     */\r\n                    handleEvent: function(e) {\r\n                        var me = this;\r\n                        var options = me.options || {};\r\n                        var hoverOptions = options.hover;\r\n                        var changed = false;\r\n\r\n                        me.lastActive = me.lastActive || [];\r\n\r\n                        // Find Active Elements for hover and tooltips\r\n                        if (e.type === 'mouseout') {\r\n                            me.active = [];\r\n                        } else {\r\n                            me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\r\n                        }\r\n\r\n                        // Invoke onHover hook\r\n                        // Need to call with native event here to not break backwards compatibility\r\n                        helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\r\n\r\n                        if (e.type === 'mouseup' || e.type === 'click') {\r\n                            if (options.onClick) {\r\n                                // Use e.native here for backwards compatibility\r\n                                options.onClick.call(me, e.native, me.active);\r\n                            }\r\n                        }\r\n\r\n                        // Remove styling for last active (even if it may still be active)\r\n                        if (me.lastActive.length) {\r\n                            me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\r\n                        }\r\n\r\n                        // Built in hover styling\r\n                        if (me.active.length && hoverOptions.mode) {\r\n                            me.updateHoverStyle(me.active, hoverOptions.mode, true);\r\n                        }\r\n\r\n                        changed = !helpers.arrayEquals(me.active, me.lastActive);\r\n\r\n                        // Remember Last Actives\r\n                        me.lastActive = me.active;\r\n\r\n                        return changed;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart instead.\r\n                 * @class Chart.Controller\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 * @private\r\n                 */\r\n                Chart.Controller = Chart;\r\n            };\r\n        }, { \"16\": 16, \"19\": 19, \"21\": 21, \"22\": 22, \"36\": 36, \"39\": 39 }], 15: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            module.exports = function(Chart) {\r\n                var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\r\n\r\n                /**\r\n                 * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\r\n                 * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\r\n                 * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\r\n                 */\r\n                function listenArrayEvents(array, listener) {\r\n                    if (array._chartjs) {\r\n                        array._chartjs.listeners.push(listener);\r\n                        return;\r\n                    }\r\n\r\n                    Object.defineProperty(array, '_chartjs', {\r\n                        configurable: true,\r\n                        enumerable: false,\r\n                        value: {\r\n                            listeners: [listener]\r\n                        }\r\n                    });\r\n\r\n                    arrayEvents.forEach(function(key) {\r\n                        var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\r\n                        var base = array[key];\r\n\r\n                        Object.defineProperty(array, key, {\r\n                            configurable: true,\r\n                            enumerable: false,\r\n                            value: function() {\r\n                                var args = Array.prototype.slice.call(arguments);\r\n                                var res = base.apply(this, args);\r\n\r\n                                helpers.each(array._chartjs.listeners, function(object) {\r\n                                    if (typeof object[method] === 'function') {\r\n                                        object[method].apply(object, args);\r\n                                    }\r\n                                });\r\n\r\n                                return res;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Removes the given array event listener and cleanup extra attached properties (such as\r\n                 * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\r\n                 */\r\n                function unlistenArrayEvents(array, listener) {\r\n                    var stub = array._chartjs;\r\n                    if (!stub) {\r\n                        return;\r\n                    }\r\n\r\n                    var listeners = stub.listeners;\r\n                    var index = listeners.indexOf(listener);\r\n                    if (index !== -1) {\r\n                        listeners.splice(index, 1);\r\n                    }\r\n\r\n                    if (listeners.length > 0) {\r\n                        return;\r\n                    }\r\n\r\n                    arrayEvents.forEach(function(key) {\r\n                        delete array[key];\r\n                    });\r\n\r\n                    delete array._chartjs;\r\n                }\r\n\r\n                // Base class for all dataset controllers (line, bar, etc)\r\n                Chart.DatasetController = function(chart, datasetIndex) {\r\n                    this.initialize(chart, datasetIndex);\r\n                };\r\n\r\n                helpers.extend(Chart.DatasetController.prototype, {\r\n                    /**\r\n                     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\r\n                     * @type {Chart.core.element}\r\n                     */\r\n                    datasetElementType: null,\r\n\r\n                    /**\r\n                     * Element type used to generate a meta data (e.g. Chart.element.Point).\r\n                     * @type {Chart.core.element}\r\n                     */\r\n                    dataElementType: null,\r\n\r\n                    initialize: function(chart, datasetIndex) {\r\n                        var me = this;\r\n                        me.chart = chart;\r\n                        me.index = datasetIndex;\r\n                        me.linkScales();\r\n                        me.addElements();\r\n                    },\r\n\r\n                    updateIndex: function(datasetIndex) {\r\n                        this.index = datasetIndex;\r\n                    },\r\n\r\n                    linkScales: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var dataset = me.getDataset();\r\n\r\n                        if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\r\n                            meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\r\n                        }\r\n                        if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\r\n                            meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\r\n                        }\r\n                    },\r\n\r\n                    getDataset: function() {\r\n                        return this.chart.data.datasets[this.index];\r\n                    },\r\n\r\n                    getMeta: function() {\r\n                        return this.chart.getDatasetMeta(this.index);\r\n                    },\r\n\r\n                    getScaleForId: function(scaleID) {\r\n                        return this.chart.scales[scaleID];\r\n                    },\r\n\r\n                    reset: function() {\r\n                        this.update(true);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    destroy: function() {\r\n                        if (this._data) {\r\n                            unlistenArrayEvents(this._data, this);\r\n                        }\r\n                    },\r\n\r\n                    createMetaDataset: function() {\r\n                        var me = this;\r\n                        var type = me.datasetElementType;\r\n                        return type && new type({\r\n                            _chart: me.chart,\r\n                            _datasetIndex: me.index\r\n                        });\r\n                    },\r\n\r\n                    createMetaData: function(index) {\r\n                        var me = this;\r\n                        var type = me.dataElementType;\r\n                        return type && new type({\r\n                            _chart: me.chart,\r\n                            _datasetIndex: me.index,\r\n                            _index: index\r\n                        });\r\n                    },\r\n\r\n                    addElements: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var data = me.getDataset().data || [];\r\n                        var metaData = meta.data;\r\n                        var i, ilen;\r\n\r\n                        for (i = 0, ilen = data.length; i < ilen; ++i) {\r\n                            metaData[i] = metaData[i] || me.createMetaData(i);\r\n                        }\r\n\r\n                        meta.dataset = meta.dataset || me.createMetaDataset();\r\n                    },\r\n\r\n                    addElementAndReset: function(index) {\r\n                        var element = this.createMetaData(index);\r\n                        this.getMeta().data.splice(index, 0, element);\r\n                        this.updateElement(element, index, true);\r\n                    },\r\n\r\n                    buildOrUpdateElements: function() {\r\n                        var me = this;\r\n                        var dataset = me.getDataset();\r\n                        var data = dataset.data || (dataset.data = []);\r\n\r\n                        // In order to correctly handle data addition/deletion animation (an thus simulate\r\n                        // real-time charts), we need to monitor these data modifications and synchronize\r\n                        // the internal meta data accordingly.\r\n                        if (me._data !== data) {\r\n                            if (me._data) {\r\n                                // This case happens when the user replaced the data array instance.\r\n                                unlistenArrayEvents(me._data, me);\r\n                            }\r\n\r\n                            listenArrayEvents(data, me);\r\n                            me._data = data;\r\n                        }\r\n\r\n                        // Re-sync meta data in case the user replaced the data array or if we missed\r\n                        // any updates and so make sure that we handle number of datapoints changing.\r\n                        me.resyncElements();\r\n                    },\r\n\r\n                    update: helpers.noop,\r\n\r\n                    transition: function(easingValue) {\r\n                        var meta = this.getMeta();\r\n                        var elements = meta.data || [];\r\n                        var ilen = elements.length;\r\n                        var i = 0;\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            elements[i].transition(easingValue);\r\n                        }\r\n\r\n                        if (meta.dataset) {\r\n                            meta.dataset.transition(easingValue);\r\n                        }\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var meta = this.getMeta();\r\n                        var elements = meta.data || [];\r\n                        var ilen = elements.length;\r\n                        var i = 0;\r\n\r\n                        if (meta.dataset) {\r\n                            meta.dataset.draw();\r\n                        }\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            elements[i].draw();\r\n                        }\r\n                    },\r\n\r\n                    removeHoverStyle: function(element, elementOpts) {\r\n                        var dataset = this.chart.data.datasets[element._datasetIndex];\r\n                        var index = element._index;\r\n                        var custom = element.custom || {};\r\n                        var valueOrDefault = helpers.valueAtIndexOrDefault;\r\n                        var model = element._model;\r\n\r\n                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\r\n                        model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\r\n                        model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\r\n                    },\r\n\r\n                    setHoverStyle: function(element) {\r\n                        var dataset = this.chart.data.datasets[element._datasetIndex];\r\n                        var index = element._index;\r\n                        var custom = element.custom || {};\r\n                        var valueOrDefault = helpers.valueAtIndexOrDefault;\r\n                        var getHoverColor = helpers.getHoverColor;\r\n                        var model = element._model;\r\n\r\n                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    resyncElements: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var data = me.getDataset().data;\r\n                        var numMeta = meta.data.length;\r\n                        var numData = data.length;\r\n\r\n                        if (numData < numMeta) {\r\n                            meta.data.splice(numData, numMeta - numData);\r\n                        } else if (numData > numMeta) {\r\n                            me.insertElements(numMeta, numData - numMeta);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    insertElements: function(start, count) {\r\n                        for (var i = 0; i < count; ++i) {\r\n                            this.addElementAndReset(start + i);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataPush: function() {\r\n                        this.insertElements(this.getDataset().data.length - 1, arguments.length);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataPop: function() {\r\n                        this.getMeta().data.pop();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataShift: function() {\r\n                        this.getMeta().data.shift();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataSplice: function(start, count) {\r\n                        this.getMeta().data.splice(start, count);\r\n                        this.insertElements(start, arguments.length - 2);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataUnshift: function() {\r\n                        this.insertElements(0, arguments.length);\r\n                    }\r\n                });\r\n\r\n                Chart.DatasetController.extend = helpers.inherits;\r\n            };\r\n        }, { \"36\": 36 }], 16: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            module.exports = {\r\n                /**\r\n                 * @private\r\n                 */\r\n                _set: function(scope, values) {\r\n                    return helpers.merge(this[scope] || (this[scope] = {}), values);\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 17: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var color = require(2);\r\n            var helpers = require(36);\r\n\r\n            function interpolate(start, view, model, ease) {\r\n                var keys = Object.keys(model);\r\n                var i, ilen, key, actual, origin, target, type, c0, c1;\r\n\r\n                for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n                    key = keys[i];\r\n\r\n                    target = model[key];\r\n\r\n                    // if a value is added to the model after pivot() has been called, the view\r\n                    // doesn't contain it, so let's initialize the view to the target value.\r\n                    if (!view.hasOwnProperty(key)) {\r\n                        view[key] = target;\r\n                    }\r\n\r\n                    actual = view[key];\r\n\r\n                    if (actual === target || key[0] === '_') {\r\n                        continue;\r\n                    }\r\n\r\n                    if (!start.hasOwnProperty(key)) {\r\n                        start[key] = actual;\r\n                    }\r\n\r\n                    origin = start[key];\r\n\r\n                    type = typeof target;\r\n\r\n                    if (type === typeof origin) {\r\n                        if (type === 'string') {\r\n                            c0 = color(origin);\r\n                            if (c0.valid) {\r\n                                c1 = color(target);\r\n                                if (c1.valid) {\r\n                                    view[key] = c1.mix(c0, ease).rgbString();\r\n                                    continue;\r\n                                }\r\n                            }\r\n                        } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\r\n                            view[key] = origin + (target - origin) * ease;\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    view[key] = target;\r\n                }\r\n            }\r\n\r\n            var Element = function(configuration) {\r\n                helpers.extend(this, configuration);\r\n                this.initialize.apply(this, arguments);\r\n            };\r\n\r\n            helpers.extend(Element.prototype, {\r\n                initialize: function() {\r\n                    this.hidden = false;\r\n                },\r\n\r\n                pivot: function() {\r\n                    var me = this;\r\n                    if (!me._view) {\r\n                        me._view = helpers.clone(me._model);\r\n                    }\r\n                    me._start = {};\r\n                    return me;\r\n                },\r\n\r\n                transition: function(ease) {\r\n                    var me = this;\r\n                    var model = me._model;\r\n                    var start = me._start;\r\n                    var view = me._view;\r\n\r\n                    // No animation -> No Transition\r\n                    if (!model || ease === 1) {\r\n                        me._view = model;\r\n                        me._start = null;\r\n                        return me;\r\n                    }\r\n\r\n                    if (!view) {\r\n                        view = me._view = {};\r\n                    }\r\n\r\n                    if (!start) {\r\n                        start = me._start = {};\r\n                    }\r\n\r\n                    interpolate(start, view, model, ease);\r\n\r\n                    return me;\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    return {\r\n                        x: this._model.x,\r\n                        y: this._model.y\r\n                    };\r\n                },\r\n\r\n                hasValue: function() {\r\n                    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\r\n                }\r\n            });\r\n\r\n            Element.extend = helpers.inherits;\r\n\r\n            module.exports = Element;\r\n        }, { \"2\": 2, \"36\": 36 }], 18: [function(require, module, exports) {\r\n            /* global window: false */\r\n            /* global document: false */\r\n            'use strict';\r\n\r\n            var color = require(2);\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n\r\n            module.exports = function(Chart) {\r\n                // -- Basic js utility methods\r\n\r\n                helpers.configMerge = function(/* objects ... */) {\r\n                    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\r\n                        merger: function(key, target, source, options) {\r\n                            var tval = target[key] || {};\r\n                            var sval = source[key];\r\n\r\n                            if (key === 'scales') {\r\n                                // scale config merging is complex. Add our own function here for that\r\n                                target[key] = helpers.scaleMerge(tval, sval);\r\n                            } else if (key === 'scale') {\r\n                                // used in polar area & radar charts since there is only one scale\r\n                                target[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\r\n                            } else {\r\n                                helpers._merger(key, target, source, options);\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n\r\n                helpers.scaleMerge = function(/* objects ... */) {\r\n                    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\r\n                        merger: function(key, target, source, options) {\r\n                            if (key === 'xAxes' || key === 'yAxes') {\r\n                                var slen = source[key].length;\r\n                                var i, type, scale;\r\n\r\n                                if (!target[key]) {\r\n                                    target[key] = [];\r\n                                }\r\n\r\n                                for (i = 0; i < slen; ++i) {\r\n                                    scale = source[key][i];\r\n                                    type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\r\n\r\n                                    if (i >= target[key].length) {\r\n                                        target[key].push({});\r\n                                    }\r\n\r\n                                    if (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\r\n                                        // new/untyped scale or type changed: let's apply the new defaults\r\n                                        // then merge source scale to correctly overwrite the defaults.\r\n                                        helpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\r\n                                    } else {\r\n                                        // scales type are the same\r\n                                        helpers.merge(target[key][i], scale);\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                helpers._merger(key, target, source, options);\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n\r\n                helpers.where = function(collection, filterCallback) {\r\n                    if (helpers.isArray(collection) && Array.prototype.filter) {\r\n                        return collection.filter(filterCallback);\r\n                    }\r\n                    var filtered = [];\r\n\r\n                    helpers.each(collection, function(item) {\r\n                        if (filterCallback(item)) {\r\n                            filtered.push(item);\r\n                        }\r\n                    });\r\n\r\n                    return filtered;\r\n                };\r\n                helpers.findIndex = Array.prototype.findIndex ?\r\n                    function(array, callback, scope) {\r\n                        return array.findIndex(callback, scope);\r\n                    } :\r\n                    function(array, callback, scope) {\r\n                        scope = scope === undefined ? array : scope;\r\n                        for (var i = 0, ilen = array.length; i < ilen; ++i) {\r\n                            if (callback.call(scope, array[i], i, array)) {\r\n                                return i;\r\n                            }\r\n                        }\r\n                        return -1;\r\n                    };\r\n                helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n                    // Default to start of the array\r\n                    if (helpers.isNullOrUndef(startIndex)) {\r\n                        startIndex = -1;\r\n                    }\r\n                    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\r\n                        var currentItem = arrayToSearch[i];\r\n                        if (filterCallback(currentItem)) {\r\n                            return currentItem;\r\n                        }\r\n                    }\r\n                };\r\n                helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n                    // Default to end of the array\r\n                    if (helpers.isNullOrUndef(startIndex)) {\r\n                        startIndex = arrayToSearch.length;\r\n                    }\r\n                    for (var i = startIndex - 1; i >= 0; i--) {\r\n                        var currentItem = arrayToSearch[i];\r\n                        if (filterCallback(currentItem)) {\r\n                            return currentItem;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // -- Math methods\r\n                helpers.isNumber = function(n) {\r\n                    return !isNaN(parseFloat(n)) && isFinite(n);\r\n                };\r\n                helpers.almostEquals = function(x, y, epsilon) {\r\n                    return Math.abs(x - y) < epsilon;\r\n                };\r\n                helpers.almostWhole = function(x, epsilon) {\r\n                    var rounded = Math.round(x);\r\n                    return (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\r\n                };\r\n                helpers.max = function(array) {\r\n                    return array.reduce(function(max, value) {\r\n                        if (!isNaN(value)) {\r\n                            return Math.max(max, value);\r\n                        }\r\n                        return max;\r\n                    }, Number.NEGATIVE_INFINITY);\r\n                };\r\n                helpers.min = function(array) {\r\n                    return array.reduce(function(min, value) {\r\n                        if (!isNaN(value)) {\r\n                            return Math.min(min, value);\r\n                        }\r\n                        return min;\r\n                    }, Number.POSITIVE_INFINITY);\r\n                };\r\n                helpers.sign = Math.sign ?\r\n                    function(x) {\r\n                        return Math.sign(x);\r\n                    } :\r\n                    function(x) {\r\n                        x = +x; // convert to a number\r\n                        if (x === 0 || isNaN(x)) {\r\n                            return x;\r\n                        }\r\n                        return x > 0 ? 1 : -1;\r\n                    };\r\n                helpers.log10 = Math.log10 ?\r\n                    function(x) {\r\n                        return Math.log10(x);\r\n                    } :\r\n                    function(x) {\r\n                        var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\r\n                        // Check for whole powers of 10,\r\n                        // which due to floating point rounding error should be corrected.\r\n                        var powerOf10 = Math.round(exponent);\r\n                        var isPowerOf10 = x === Math.pow(10, powerOf10);\r\n\r\n                        return isPowerOf10 ? powerOf10 : exponent;\r\n                    };\r\n                helpers.toRadians = function(degrees) {\r\n                    return degrees * (Math.PI / 180);\r\n                };\r\n                helpers.toDegrees = function(radians) {\r\n                    return radians * (180 / Math.PI);\r\n                };\r\n                // Gets the angle from vertical upright to the point about a centre.\r\n                helpers.getAngleFromPoint = function(centrePoint, anglePoint) {\r\n                    var distanceFromXCenter = anglePoint.x - centrePoint.x;\r\n                    var distanceFromYCenter = anglePoint.y - centrePoint.y;\r\n                    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n\r\n                    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n\r\n                    if (angle < (-0.5 * Math.PI)) {\r\n                        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\r\n                    }\r\n\r\n                    return {\r\n                        angle: angle,\r\n                        distance: radialDistanceFromCenter\r\n                    };\r\n                };\r\n                helpers.distanceBetweenPoints = function(pt1, pt2) {\r\n                    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\r\n                };\r\n                helpers.aliasPixel = function(pixelWidth) {\r\n                    return (pixelWidth % 2 === 0) ? 0 : 0.5;\r\n                };\r\n                helpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\r\n                    // Props to Rob Spencer at scaled innovation for his post on splining between points\r\n                    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\r\n\r\n                    // This function must also respect \"skipped\" points\r\n\r\n                    var previous = firstPoint.skip ? middlePoint : firstPoint;\r\n                    var current = middlePoint;\r\n                    var next = afterPoint.skip ? middlePoint : afterPoint;\r\n\r\n                    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\r\n                    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\r\n\r\n                    var s01 = d01 / (d01 + d12);\r\n                    var s12 = d12 / (d01 + d12);\r\n\r\n                    // If all points are the same, s01 & s02 will be inf\r\n                    s01 = isNaN(s01) ? 0 : s01;\r\n                    s12 = isNaN(s12) ? 0 : s12;\r\n\r\n                    var fa = t * s01; // scaling factor for triangle Ta\r\n                    var fb = t * s12;\r\n\r\n                    return {\r\n                        previous: {\r\n                            x: current.x - fa * (next.x - previous.x),\r\n                            y: current.y - fa * (next.y - previous.y)\r\n                        },\r\n                        next: {\r\n                            x: current.x + fb * (next.x - previous.x),\r\n                            y: current.y + fb * (next.y - previous.y)\r\n                        }\r\n                    };\r\n                };\r\n                helpers.EPSILON = Number.EPSILON || 1e-14;\r\n                helpers.splineCurveMonotone = function(points) {\r\n                    // This function calculates Bézier control points in a similar way than |splineCurve|,\r\n                    // but preserves monotonicity of the provided data and ensures no local extremums are added\r\n                    // between the dataset discrete points due to the interpolation.\r\n                    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\r\n\r\n                    var pointsWithTangents = (points || []).map(function(point) {\r\n                        return {\r\n                            model: point._model,\r\n                            deltaK: 0,\r\n                            mK: 0\r\n                        };\r\n                    });\r\n\r\n                    // Calculate slopes (deltaK) and initialize tangents (mK)\r\n                    var pointsLen = pointsWithTangents.length;\r\n                    var i, pointBefore, pointCurrent, pointAfter;\r\n                    for (i = 0; i < pointsLen; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        if (pointCurrent.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n                        if (pointAfter && !pointAfter.model.skip) {\r\n                            var slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\r\n\r\n                            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\r\n                            pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\r\n                        }\r\n\r\n                        if (!pointBefore || pointBefore.model.skip) {\r\n                            pointCurrent.mK = pointCurrent.deltaK;\r\n                        } else if (!pointAfter || pointAfter.model.skip) {\r\n                            pointCurrent.mK = pointBefore.deltaK;\r\n                        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\r\n                            pointCurrent.mK = 0;\r\n                        } else {\r\n                            pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\r\n                        }\r\n                    }\r\n\r\n                    // Adjust tangents to ensure monotonic properties\r\n                    var alphaK, betaK, tauK, squaredMagnitude;\r\n                    for (i = 0; i < pointsLen - 1; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        pointAfter = pointsWithTangents[i + 1];\r\n                        if (pointCurrent.model.skip || pointAfter.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\r\n                            pointCurrent.mK = pointAfter.mK = 0;\r\n                            continue;\r\n                        }\r\n\r\n                        alphaK = pointCurrent.mK / pointCurrent.deltaK;\r\n                        betaK = pointAfter.mK / pointCurrent.deltaK;\r\n                        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\r\n                        if (squaredMagnitude <= 9) {\r\n                            continue;\r\n                        }\r\n\r\n                        tauK = 3 / Math.sqrt(squaredMagnitude);\r\n                        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\r\n                        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\r\n                    }\r\n\r\n                    // Compute control points\r\n                    var deltaX;\r\n                    for (i = 0; i < pointsLen; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        if (pointCurrent.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n                        if (pointBefore && !pointBefore.model.skip) {\r\n                            deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\r\n                            pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\r\n                            pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\r\n                        }\r\n                        if (pointAfter && !pointAfter.model.skip) {\r\n                            deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\r\n                            pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\r\n                            pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\r\n                        }\r\n                    }\r\n                };\r\n                helpers.nextItem = function(collection, index, loop) {\r\n                    if (loop) {\r\n                        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\r\n                    }\r\n                    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\r\n                };\r\n                helpers.previousItem = function(collection, index, loop) {\r\n                    if (loop) {\r\n                        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\r\n                    }\r\n                    return index <= 0 ? collection[0] : collection[index - 1];\r\n                };\r\n                // Implementation of the nice number algorithm used in determining where axis labels will go\r\n                helpers.niceNum = function(range, round) {\r\n                    var exponent = Math.floor(helpers.log10(range));\r\n                    var fraction = range / Math.pow(10, exponent);\r\n                    var niceFraction;\r\n\r\n                    if (round) {\r\n                        if (fraction < 1.5) {\r\n                            niceFraction = 1;\r\n                        } else if (fraction < 3) {\r\n                            niceFraction = 2;\r\n                        } else if (fraction < 7) {\r\n                            niceFraction = 5;\r\n                        } else {\r\n                            niceFraction = 10;\r\n                        }\r\n                    } else if (fraction <= 1.0) {\r\n                        niceFraction = 1;\r\n                    } else if (fraction <= 2) {\r\n                        niceFraction = 2;\r\n                    } else if (fraction <= 5) {\r\n                        niceFraction = 5;\r\n                    } else {\r\n                        niceFraction = 10;\r\n                    }\r\n\r\n                    return niceFraction * Math.pow(10, exponent);\r\n                };\r\n                // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n                helpers.requestAnimFrame = (function() {\r\n                    if (typeof window === 'undefined') {\r\n                        return function(callback) {\r\n                            callback();\r\n                        };\r\n                    }\r\n                    return window.requestAnimationFrame ||\r\n                        window.webkitRequestAnimationFrame ||\r\n                        window.mozRequestAnimationFrame ||\r\n                        window.oRequestAnimationFrame ||\r\n                        window.msRequestAnimationFrame ||\r\n                        function(callback) {\r\n                            return window.setTimeout(callback, 1000 / 60);\r\n                        };\r\n                }());\r\n                // -- DOM methods\r\n                helpers.getRelativePosition = function(evt, chart) {\r\n                    var mouseX, mouseY;\r\n                    var e = evt.originalEvent || evt;\r\n                    var canvas = evt.currentTarget || evt.srcElement;\r\n                    var boundingRect = canvas.getBoundingClientRect();\r\n\r\n                    var touches = e.touches;\r\n                    if (touches && touches.length > 0) {\r\n                        mouseX = touches[0].clientX;\r\n                        mouseY = touches[0].clientY;\r\n                    } else {\r\n                        mouseX = e.clientX;\r\n                        mouseY = e.clientY;\r\n                    }\r\n\r\n                    // Scale mouse coordinates into canvas coordinates\r\n                    // by following the pattern laid out by 'jerryj' in the comments of\r\n                    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\r\n                    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\r\n                    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\r\n                    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\r\n                    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\r\n                    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\r\n                    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\r\n\r\n                    // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\r\n                    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\r\n                    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\r\n                    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\r\n\r\n                    return {\r\n                        x: mouseX,\r\n                        y: mouseY\r\n                    };\r\n                };\r\n\r\n                // Private helper function to convert max-width/max-height values that may be percentages into a number\r\n                function parseMaxStyle(styleValue, node, parentProperty) {\r\n                    var valueInPixels;\r\n                    if (typeof styleValue === 'string') {\r\n                        valueInPixels = parseInt(styleValue, 10);\r\n\r\n                        if (styleValue.indexOf('%') !== -1) {\r\n                            // percentage * size in dimension\r\n                            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\r\n                        }\r\n                    } else {\r\n                        valueInPixels = styleValue;\r\n                    }\r\n\r\n                    return valueInPixels;\r\n                }\r\n\r\n                /**\r\n                 * Returns if the given value contains an effective constraint.\r\n                 * @private\r\n                 */\r\n                function isConstrainedValue(value) {\r\n                    return value !== undefined && value !== null && value !== 'none';\r\n                }\r\n\r\n                // Private helper to get a constraint dimension\r\n                // @param domNode : the node to check the constraint on\r\n                // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\r\n                // @param percentageProperty : property of parent to use when calculating width as a percentage\r\n                // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\r\n                function getConstraintDimension(domNode, maxStyle, percentageProperty) {\r\n                    var view = document.defaultView;\r\n                    var parentNode = domNode.parentNode;\r\n                    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\r\n                    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\r\n                    var hasCNode = isConstrainedValue(constrainedNode);\r\n                    var hasCContainer = isConstrainedValue(constrainedContainer);\r\n                    var infinity = Number.POSITIVE_INFINITY;\r\n\r\n                    if (hasCNode || hasCContainer) {\r\n                        return Math.min(\r\n                            hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\r\n                            hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\r\n                    }\r\n\r\n                    return 'none';\r\n                }\r\n                // returns Number or undefined if no constraint\r\n                helpers.getConstraintWidth = function(domNode) {\r\n                    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\r\n                };\r\n                // returns Number or undefined if no constraint\r\n                helpers.getConstraintHeight = function(domNode) {\r\n                    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\r\n                };\r\n                helpers.getMaximumWidth = function(domNode) {\r\n                    var container = domNode.parentNode;\r\n                    if (!container) {\r\n                        return domNode.clientWidth;\r\n                    }\r\n\r\n                    var paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\r\n                    var paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\r\n                    var w = container.clientWidth - paddingLeft - paddingRight;\r\n                    var cw = helpers.getConstraintWidth(domNode);\r\n                    return isNaN(cw) ? w : Math.min(w, cw);\r\n                };\r\n                helpers.getMaximumHeight = function(domNode) {\r\n                    var container = domNode.parentNode;\r\n                    if (!container) {\r\n                        return domNode.clientHeight;\r\n                    }\r\n\r\n                    var paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\r\n                    var paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\r\n                    var h = container.clientHeight - paddingTop - paddingBottom;\r\n                    var ch = helpers.getConstraintHeight(domNode);\r\n                    return isNaN(ch) ? h : Math.min(h, ch);\r\n                };\r\n                helpers.getStyle = function(el, property) {\r\n                    return el.currentStyle ?\r\n                        el.currentStyle[property] :\r\n                        document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\r\n                };\r\n                helpers.retinaScale = function(chart, forceRatio) {\r\n                    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\r\n                    if (pixelRatio === 1) {\r\n                        return;\r\n                    }\r\n\r\n                    var canvas = chart.canvas;\r\n                    var height = chart.height;\r\n                    var width = chart.width;\r\n\r\n                    canvas.height = height * pixelRatio;\r\n                    canvas.width = width * pixelRatio;\r\n                    chart.ctx.scale(pixelRatio, pixelRatio);\r\n\r\n                    // If no style has been set on the canvas, the render size is used as display size,\r\n                    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\r\n                    // See https://github.com/chartjs/Chart.js/issues/3575\r\n                    if (!canvas.style.height && !canvas.style.width) {\r\n                        canvas.style.height = height + 'px';\r\n                        canvas.style.width = width + 'px';\r\n                    }\r\n                };\r\n                // -- Canvas methods\r\n                helpers.fontString = function(pixelSize, fontStyle, fontFamily) {\r\n                    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\r\n                };\r\n                helpers.longestText = function(ctx, font, arrayOfThings, cache) {\r\n                    cache = cache || {};\r\n                    var data = cache.data = cache.data || {};\r\n                    var gc = cache.garbageCollect = cache.garbageCollect || [];\r\n\r\n                    if (cache.font !== font) {\r\n                        data = cache.data = {};\r\n                        gc = cache.garbageCollect = [];\r\n                        cache.font = font;\r\n                    }\r\n\r\n                    ctx.font = font;\r\n                    var longest = 0;\r\n                    helpers.each(arrayOfThings, function(thing) {\r\n                        // Undefined strings and arrays should not be measured\r\n                        if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\r\n                            longest = helpers.measureText(ctx, data, gc, longest, thing);\r\n                        } else if (helpers.isArray(thing)) {\r\n                            // if it is an array lets measure each element\r\n                            // to do maybe simplify this function a bit so we can do this more recursively?\r\n                            helpers.each(thing, function(nestedThing) {\r\n                                // Undefined strings and arrays should not be measured\r\n                                if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\r\n                                    longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    var gcLen = gc.length / 2;\r\n                    if (gcLen > arrayOfThings.length) {\r\n                        for (var i = 0; i < gcLen; i++) {\r\n                            delete data[gc[i]];\r\n                        }\r\n                        gc.splice(0, gcLen);\r\n                    }\r\n                    return longest;\r\n                };\r\n                helpers.measureText = function(ctx, data, gc, longest, string) {\r\n                    var textWidth = data[string];\r\n                    if (!textWidth) {\r\n                        textWidth = data[string] = ctx.measureText(string).width;\r\n                        gc.push(string);\r\n                    }\r\n                    if (textWidth > longest) {\r\n                        longest = textWidth;\r\n                    }\r\n                    return longest;\r\n                };\r\n                helpers.numberOfLabelLines = function(arrayOfThings) {\r\n                    var numberOfLines = 1;\r\n                    helpers.each(arrayOfThings, function(thing) {\r\n                        if (helpers.isArray(thing)) {\r\n                            if (thing.length > numberOfLines) {\r\n                                numberOfLines = thing.length;\r\n                            }\r\n                        }\r\n                    });\r\n                    return numberOfLines;\r\n                };\r\n\r\n                helpers.color = !color ?\r\n                    function(value) {\r\n                        console.error('Color.js not found!');\r\n                        return value;\r\n                    } :\r\n                    function(value) {\r\n                        /* global CanvasGradient */\r\n                        if (value instanceof CanvasGradient) {\r\n                            value = defaults.global.defaultColor;\r\n                        }\r\n\r\n                        return color(value);\r\n                    };\r\n\r\n                helpers.getHoverColor = function(colorValue) {\r\n                    /* global CanvasPattern */\r\n                    return (colorValue instanceof CanvasPattern) ?\r\n                        colorValue :\r\n                        helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"2\": 2, \"36\": 36 }], 19: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Helper function to get relative position for an event\r\n             * @param {Event|IEvent} event - The event to get the position for\r\n             * @param {Chart} chart - The chart\r\n             * @returns {Point} the event position\r\n             */\r\n            function getRelativePosition(e, chart) {\r\n                if (e.native) {\r\n                    return {\r\n                        x: e.x,\r\n                        y: e.y\r\n                    };\r\n                }\r\n\r\n                return helpers.getRelativePosition(e, chart);\r\n            }\r\n\r\n            /**\r\n             * Helper function to traverse all of the visible elements in the chart\r\n             * @param chart {chart} the chart\r\n             * @param handler {Function} the callback to execute for each visible item\r\n             */\r\n            function parseVisibleItems(chart, handler) {\r\n                var datasets = chart.data.datasets;\r\n                var meta, i, j, ilen, jlen;\r\n\r\n                for (i = 0, ilen = datasets.length; i < ilen; ++i) {\r\n                    if (!chart.isDatasetVisible(i)) {\r\n                        continue;\r\n                    }\r\n\r\n                    meta = chart.getDatasetMeta(i);\r\n                    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\r\n                        var element = meta.data[j];\r\n                        if (!element._view.skip) {\r\n                            handler(element);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the items that intersect the event position\r\n             * @param items {ChartElement[]} elements to filter\r\n             * @param position {Point} the point to be nearest to\r\n             * @return {ChartElement[]} the nearest items\r\n             */\r\n            function getIntersectItems(chart, position) {\r\n                var elements = [];\r\n\r\n                parseVisibleItems(chart, function(element) {\r\n                    if (element.inRange(position.x, position.y)) {\r\n                        elements.push(element);\r\n                    }\r\n                });\r\n\r\n                return elements;\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the items nearest to the event position considering all visible items in teh chart\r\n             * @param chart {Chart} the chart to look at elements from\r\n             * @param position {Point} the point to be nearest to\r\n             * @param intersect {Boolean} if true, only consider items that intersect the position\r\n             * @param distanceMetric {Function} function to provide the distance between points\r\n             * @return {ChartElement[]} the nearest items\r\n             */\r\n            function getNearestItems(chart, position, intersect, distanceMetric) {\r\n                var minDistance = Number.POSITIVE_INFINITY;\r\n                var nearestItems = [];\r\n\r\n                parseVisibleItems(chart, function(element) {\r\n                    if (intersect && !element.inRange(position.x, position.y)) {\r\n                        return;\r\n                    }\r\n\r\n                    var center = element.getCenterPoint();\r\n                    var distance = distanceMetric(position, center);\r\n\r\n                    if (distance < minDistance) {\r\n                        nearestItems = [element];\r\n                        minDistance = distance;\r\n                    } else if (distance === minDistance) {\r\n                        // Can have multiple items at the same distance in which case we sort by size\r\n                        nearestItems.push(element);\r\n                    }\r\n                });\r\n\r\n                return nearestItems;\r\n            }\r\n\r\n            /**\r\n             * Get a distance metric function for two points based on the\r\n             * axis mode setting\r\n             * @param {String} axis the axis mode. x|y|xy\r\n             */\r\n            function getDistanceMetricForAxis(axis) {\r\n                var useX = axis.indexOf('x') !== -1;\r\n                var useY = axis.indexOf('y') !== -1;\r\n\r\n                return function(pt1, pt2) {\r\n                    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n                    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n                    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n                };\r\n            }\r\n\r\n            function indexMode(chart, e, options) {\r\n                var position = getRelativePosition(e, chart);\r\n                // Default axis for index mode is 'x' to match old behaviour\r\n                options.axis = options.axis || 'x';\r\n                var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\r\n                var elements = [];\r\n\r\n                if (!items.length) {\r\n                    return [];\r\n                }\r\n\r\n                chart.data.datasets.forEach(function(dataset, datasetIndex) {\r\n                    if (chart.isDatasetVisible(datasetIndex)) {\r\n                        var meta = chart.getDatasetMeta(datasetIndex);\r\n                        var element = meta.data[items[0]._index];\r\n\r\n                        // don't count items that are skipped (null data)\r\n                        if (element && !element._view.skip) {\r\n                            elements.push(element);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                return elements;\r\n            }\r\n\r\n            /**\r\n             * @interface IInteractionOptions\r\n             */\r\n            /**\r\n             * If true, only consider items that intersect the point\r\n             * @name IInterfaceOptions#boolean\r\n             * @type Boolean\r\n             */\r\n\r\n            /**\r\n             * Contains interaction related functions\r\n             * @namespace Chart.Interaction\r\n             */\r\n            module.exports = {\r\n                // Helper function for different modes\r\n                modes: {\r\n                    single: function(chart, e) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var elements = [];\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                elements.push(element);\r\n                                return elements;\r\n                            }\r\n                        });\r\n\r\n                        return elements.slice(0, 1);\r\n                    },\r\n\r\n                    /**\r\n                     * @function Chart.Interaction.modes.label\r\n                     * @deprecated since version 2.4.0\r\n                     * @todo remove at version 3\r\n                     * @private\r\n                     */\r\n                    label: indexMode,\r\n\r\n                    /**\r\n                     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\r\n                     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\r\n                     * @function Chart.Interaction.modes.index\r\n                     * @since v2.4.0\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use during interaction\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    index: indexMode,\r\n\r\n                    /**\r\n                     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\r\n                     * If the options.intersect is false, we find the nearest item and return the items in that dataset\r\n                     * @function Chart.Interaction.modes.dataset\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use during interaction\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    dataset: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        options.axis = options.axis || 'xy';\r\n                        var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\r\n\r\n                        if (items.length > 0) {\r\n                            items = chart.getDatasetMeta(items[0]._datasetIndex).data;\r\n                        }\r\n\r\n                        return items;\r\n                    },\r\n\r\n                    /**\r\n                     * @function Chart.Interaction.modes.x-axis\r\n                     * @deprecated since version 2.4.0. Use index mode and intersect == true\r\n                     * @todo remove at version 3\r\n                     * @private\r\n                     */\r\n                    'x-axis': function(chart, e) {\r\n                        return indexMode(chart, e, { intersect: false });\r\n                    },\r\n\r\n                    /**\r\n                     * Point mode returns all elements that hit test based on the event position\r\n                     * of the event\r\n                     * @function Chart.Interaction.modes.intersect\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    point: function(chart, e) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        return getIntersectItems(chart, position);\r\n                    },\r\n\r\n                    /**\r\n                     * nearest mode returns the element closest to the point\r\n                     * @function Chart.Interaction.modes.intersect\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    nearest: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        options.axis = options.axis || 'xy';\r\n                        var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                        var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\r\n\r\n                        // We have multiple items at the same distance from the event. Now sort by smallest\r\n                        if (nearestItems.length > 1) {\r\n                            nearestItems.sort(function(a, b) {\r\n                                var sizeA = a.getArea();\r\n                                var sizeB = b.getArea();\r\n                                var ret = sizeA - sizeB;\r\n\r\n                                if (ret === 0) {\r\n                                    // if equal sort by dataset index\r\n                                    ret = a._datasetIndex - b._datasetIndex;\r\n                                }\r\n\r\n                                return ret;\r\n                            });\r\n                        }\r\n\r\n                        // Return only 1 item\r\n                        return nearestItems.slice(0, 1);\r\n                    },\r\n\r\n                    /**\r\n                     * x mode returns the elements that hit-test at the current x coordinate\r\n                     * @function Chart.Interaction.modes.x\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    x: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var items = [];\r\n                        var intersectsItem = false;\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inXRange(position.x)) {\r\n                                items.push(element);\r\n                            }\r\n\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                intersectsItem = true;\r\n                            }\r\n                        });\r\n\r\n                        // If we want to trigger on an intersect and we don't have any items\r\n                        // that intersect the position, return nothing\r\n                        if (options.intersect && !intersectsItem) {\r\n                            items = [];\r\n                        }\r\n                        return items;\r\n                    },\r\n\r\n                    /**\r\n                     * y mode returns the elements that hit-test at the current y coordinate\r\n                     * @function Chart.Interaction.modes.y\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    y: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var items = [];\r\n                        var intersectsItem = false;\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inYRange(position.y)) {\r\n                                items.push(element);\r\n                            }\r\n\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                intersectsItem = true;\r\n                            }\r\n                        });\r\n\r\n                        // If we want to trigger on an intersect and we don't have any items\r\n                        // that intersect the position, return nothing\r\n                        if (options.intersect && !intersectsItem) {\r\n                            items = [];\r\n                        }\r\n                        return items;\r\n                    }\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 20: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n\r\n            defaults._set('global', {\r\n                responsive: true,\r\n                responsiveAnimationDuration: 0,\r\n                maintainAspectRatio: true,\r\n                events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\r\n                hover: {\r\n                    onHover: null,\r\n                    mode: 'nearest',\r\n                    intersect: true,\r\n                    animationDuration: 400\r\n                },\r\n                onClick: null,\r\n                defaultColor: 'rgba(0,0,0,0.1)',\r\n                defaultFontColor: '#666',\r\n                defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n                defaultFontSize: 12,\r\n                defaultFontStyle: 'normal',\r\n                showLines: true,\r\n\r\n                // Element defaults defined in element extensions\r\n                elements: {},\r\n\r\n                // Layout options such as padding\r\n                layout: {\r\n                    padding: {\r\n                        top: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        left: 0\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = function() {\r\n                // Occupy the global variable of Chart, and create a simple base class\r\n                var Chart = function(item, config) {\r\n                    this.construct(item, config);\r\n                    return this;\r\n                };\r\n\r\n                Chart.Chart = Chart;\r\n\r\n                return Chart;\r\n            };\r\n        }, { \"16\": 16 }], 21: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            function filterByPosition(array, position) {\r\n                return helpers.where(array, function(v) {\r\n                    return v.position === position;\r\n                });\r\n            }\r\n\r\n            function sortByWeight(array, reverse) {\r\n                array.forEach(function(v, i) {\r\n                    v._tmpIndex_ = i;\r\n                    return v;\r\n                });\r\n                array.sort(function(a, b) {\r\n                    var v0 = reverse ? b : a;\r\n                    var v1 = reverse ? a : b;\r\n                    return v0.weight === v1.weight ?\r\n                        v0._tmpIndex_ - v1._tmpIndex_ :\r\n                        v0.weight - v1.weight;\r\n                });\r\n                array.forEach(function(v) {\r\n                    delete v._tmpIndex_;\r\n                });\r\n            }\r\n\r\n            /**\r\n             * @interface ILayoutItem\r\n             * @prop {String} position - The position of the item in the chart layout. Possible values are\r\n             * 'left', 'top', 'right', 'bottom', and 'chartArea'\r\n             * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\r\n             * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\r\n             * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\r\n             * @prop {Function} update - Takes two parameters: width and height. Returns size of item\r\n             * @prop {Function} getPadding -  Returns an object with padding on the edges\r\n             * @prop {Number} width - Width of item. Must be valid after update()\r\n             * @prop {Number} height - Height of item. Must be valid after update()\r\n             * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\r\n             */\r\n\r\n            // The layout service is very self explanatory.  It's responsible for the layout within a chart.\r\n            // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\r\n            // It is this service's responsibility of carrying out that layout.\r\n            module.exports = {\r\n                defaults: {},\r\n\r\n                /**\r\n                 * Register a box to a chart.\r\n                 * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\r\n                 * @param {Chart} chart - the chart to use\r\n                 * @param {ILayoutItem} item - the item to add to be layed out\r\n                 */\r\n                addBox: function(chart, item) {\r\n                    if (!chart.boxes) {\r\n                        chart.boxes = [];\r\n                    }\r\n\r\n                    // initialize item with default values\r\n                    item.fullWidth = item.fullWidth || false;\r\n                    item.position = item.position || 'top';\r\n                    item.weight = item.weight || 0;\r\n\r\n                    chart.boxes.push(item);\r\n                },\r\n\r\n                /**\r\n                 * Remove a layoutItem from a chart\r\n                 * @param {Chart} chart - the chart to remove the box from\r\n                 * @param {Object} layoutItem - the item to remove from the layout\r\n                 */\r\n                removeBox: function(chart, layoutItem) {\r\n                    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n                    if (index !== -1) {\r\n                        chart.boxes.splice(index, 1);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Sets (or updates) options on the given `item`.\r\n                 * @param {Chart} chart - the chart in which the item lives (or will be added to)\r\n                 * @param {Object} item - the item to configure with the given options\r\n                 * @param {Object} options - the new item options.\r\n                 */\r\n                configure: function(chart, item, options) {\r\n                    var props = ['fullWidth', 'position', 'weight'];\r\n                    var ilen = props.length;\r\n                    var i = 0;\r\n                    var prop;\r\n\r\n                    for (; i < ilen; ++i) {\r\n                        prop = props[i];\r\n                        if (options.hasOwnProperty(prop)) {\r\n                            item[prop] = options[prop];\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Fits boxes of the given chart into the given size by having each box measure itself\r\n                 * then running a fitting algorithm\r\n                 * @param {Chart} chart - the chart\r\n                 * @param {Number} width - the width to fit into\r\n                 * @param {Number} height - the height to fit into\r\n                 */\r\n                update: function(chart, width, height) {\r\n                    if (!chart) {\r\n                        return;\r\n                    }\r\n\r\n                    var layoutOptions = chart.options.layout || {};\r\n                    var padding = helpers.options.toPadding(layoutOptions.padding);\r\n                    var leftPadding = padding.left;\r\n                    var rightPadding = padding.right;\r\n                    var topPadding = padding.top;\r\n                    var bottomPadding = padding.bottom;\r\n\r\n                    var leftBoxes = filterByPosition(chart.boxes, 'left');\r\n                    var rightBoxes = filterByPosition(chart.boxes, 'right');\r\n                    var topBoxes = filterByPosition(chart.boxes, 'top');\r\n                    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\r\n                    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\r\n\r\n                    // Sort boxes by weight. A higher weight is further away from the chart area\r\n                    sortByWeight(leftBoxes, true);\r\n                    sortByWeight(rightBoxes, false);\r\n                    sortByWeight(topBoxes, true);\r\n                    sortByWeight(bottomBoxes, false);\r\n\r\n                    // Essentially we now have any number of boxes on each of the 4 sides.\r\n                    // Our canvas looks like the following.\r\n                    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\r\n                    // B1 is the bottom axis\r\n                    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\r\n                    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\r\n                    // an error will be thrown.\r\n                    //\r\n                    // |----------------------------------------------------|\r\n                    // |                  T1 (Full Width)                   |\r\n                    // |----------------------------------------------------|\r\n                    // |    |    |                 T2                  |    |\r\n                    // |    |----|-------------------------------------|----|\r\n                    // |    |    | C1 |                           | C2 |    |\r\n                    // |    |    |----|                           |----|    |\r\n                    // |    |    |                                     |    |\r\n                    // | L1 | L2 |           ChartArea (C0)            | R1 |\r\n                    // |    |    |                                     |    |\r\n                    // |    |    |----|                           |----|    |\r\n                    // |    |    | C3 |                           | C4 |    |\r\n                    // |    |----|-------------------------------------|----|\r\n                    // |    |    |                 B1                  |    |\r\n                    // |----------------------------------------------------|\r\n                    // |                  B2 (Full Width)                   |\r\n                    // |----------------------------------------------------|\r\n                    //\r\n                    // What we do to find the best sizing, we do the following\r\n                    // 1. Determine the minimum size of the chart area.\r\n                    // 2. Split the remaining width equally between each vertical axis\r\n                    // 3. Split the remaining height equally between each horizontal axis\r\n                    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\r\n                    // 5. Adjust the sizes of each axis based on it's minimum reported size.\r\n                    // 6. Refit each axis\r\n                    // 7. Position each axis in the final location\r\n                    // 8. Tell the chart the final location of the chart area\r\n                    // 9. Tell any axes that overlay the chart area the positions of the chart area\r\n\r\n                    // Step 1\r\n                    var chartWidth = width - leftPadding - rightPadding;\r\n                    var chartHeight = height - topPadding - bottomPadding;\r\n                    var chartAreaWidth = chartWidth / 2; // min 50%\r\n                    var chartAreaHeight = chartHeight / 2; // min 50%\r\n\r\n                    // Step 2\r\n                    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\r\n\r\n                    // Step 3\r\n                    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\r\n\r\n                    // Step 4\r\n                    var maxChartAreaWidth = chartWidth;\r\n                    var maxChartAreaHeight = chartHeight;\r\n                    var minBoxSizes = [];\r\n\r\n                    function getMinimumBoxSize(box) {\r\n                        var minSize;\r\n                        var isHorizontal = box.isHorizontal();\r\n\r\n                        if (isHorizontal) {\r\n                            minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\r\n                            maxChartAreaHeight -= minSize.height;\r\n                        } else {\r\n                            minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\r\n                            maxChartAreaWidth -= minSize.width;\r\n                        }\r\n\r\n                        minBoxSizes.push({\r\n                            horizontal: isHorizontal,\r\n                            minSize: minSize,\r\n                            box: box,\r\n                        });\r\n                    }\r\n\r\n                    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\r\n\r\n                    // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\r\n                    var maxHorizontalLeftPadding = 0;\r\n                    var maxHorizontalRightPadding = 0;\r\n                    var maxVerticalTopPadding = 0;\r\n                    var maxVerticalBottomPadding = 0;\r\n\r\n                    helpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\r\n                        if (horizontalBox.getPadding) {\r\n                            var boxPadding = horizontalBox.getPadding();\r\n                            maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\r\n                            maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\r\n                        }\r\n                    });\r\n\r\n                    helpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\r\n                        if (verticalBox.getPadding) {\r\n                            var boxPadding = verticalBox.getPadding();\r\n                            maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\r\n                            maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\r\n                        }\r\n                    });\r\n\r\n                    // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\r\n                    // be if the axes are drawn at their minimum sizes.\r\n                    // Steps 5 & 6\r\n                    var totalLeftBoxesWidth = leftPadding;\r\n                    var totalRightBoxesWidth = rightPadding;\r\n                    var totalTopBoxesHeight = topPadding;\r\n                    var totalBottomBoxesHeight = bottomPadding;\r\n\r\n                    // Function to fit a box\r\n                    function fitBox(box) {\r\n                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\r\n                            return minBox.box === box;\r\n                        });\r\n\r\n                        if (minBoxSize) {\r\n                            if (box.isHorizontal()) {\r\n                                var scaleMargin = {\r\n                                    left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\r\n                                    right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\r\n                                    top: 0,\r\n                                    bottom: 0\r\n                                };\r\n\r\n                                // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\r\n                                // on the margin. Sometimes they need to increase in size slightly\r\n                                box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\r\n                            } else {\r\n                                box.update(minBoxSize.minSize.width, maxChartAreaHeight);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Update, and calculate the left and right margins for the horizontal boxes\r\n                    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\r\n\r\n                    helpers.each(leftBoxes, function(box) {\r\n                        totalLeftBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(rightBoxes, function(box) {\r\n                        totalRightBoxesWidth += box.width;\r\n                    });\r\n\r\n                    // Set the Left and Right margins for the horizontal boxes\r\n                    helpers.each(topBoxes.concat(bottomBoxes), fitBox);\r\n\r\n                    // Figure out how much margin is on the top and bottom of the vertical boxes\r\n                    helpers.each(topBoxes, function(box) {\r\n                        totalTopBoxesHeight += box.height;\r\n                    });\r\n\r\n                    helpers.each(bottomBoxes, function(box) {\r\n                        totalBottomBoxesHeight += box.height;\r\n                    });\r\n\r\n                    function finalFitVerticalBox(box) {\r\n                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\r\n                            return minSize.box === box;\r\n                        });\r\n\r\n                        var scaleMargin = {\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: totalTopBoxesHeight,\r\n                            bottom: totalBottomBoxesHeight\r\n                        };\r\n\r\n                        if (minBoxSize) {\r\n                            box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\r\n                        }\r\n                    }\r\n\r\n                    // Let the left layout know the final margin\r\n                    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\r\n\r\n                    // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\r\n                    totalLeftBoxesWidth = leftPadding;\r\n                    totalRightBoxesWidth = rightPadding;\r\n                    totalTopBoxesHeight = topPadding;\r\n                    totalBottomBoxesHeight = bottomPadding;\r\n\r\n                    helpers.each(leftBoxes, function(box) {\r\n                        totalLeftBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(rightBoxes, function(box) {\r\n                        totalRightBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(topBoxes, function(box) {\r\n                        totalTopBoxesHeight += box.height;\r\n                    });\r\n                    helpers.each(bottomBoxes, function(box) {\r\n                        totalBottomBoxesHeight += box.height;\r\n                    });\r\n\r\n                    // We may be adding some padding to account for rotated x axis labels\r\n                    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\r\n                    totalLeftBoxesWidth += leftPaddingAddition;\r\n                    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\r\n\r\n                    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\r\n                    totalTopBoxesHeight += topPaddingAddition;\r\n                    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\r\n\r\n                    // Figure out if our chart area changed. This would occur if the dataset layout label rotation\r\n                    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\r\n                    // without calling `fit` again\r\n                    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\r\n                    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\r\n\r\n                    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\r\n                        helpers.each(leftBoxes, function(box) {\r\n                            box.height = newMaxChartAreaHeight;\r\n                        });\r\n\r\n                        helpers.each(rightBoxes, function(box) {\r\n                            box.height = newMaxChartAreaHeight;\r\n                        });\r\n\r\n                        helpers.each(topBoxes, function(box) {\r\n                            if (!box.fullWidth) {\r\n                                box.width = newMaxChartAreaWidth;\r\n                            }\r\n                        });\r\n\r\n                        helpers.each(bottomBoxes, function(box) {\r\n                            if (!box.fullWidth) {\r\n                                box.width = newMaxChartAreaWidth;\r\n                            }\r\n                        });\r\n\r\n                        maxChartAreaHeight = newMaxChartAreaHeight;\r\n                        maxChartAreaWidth = newMaxChartAreaWidth;\r\n                    }\r\n\r\n                    // Step 7 - Position the boxes\r\n                    var left = leftPadding + leftPaddingAddition;\r\n                    var top = topPadding + topPaddingAddition;\r\n\r\n                    function placeBox(box) {\r\n                        if (box.isHorizontal()) {\r\n                            box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\r\n                            box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\r\n                            box.top = top;\r\n                            box.bottom = top + box.height;\r\n\r\n                            // Move to next point\r\n                            top = box.bottom;\r\n                        } else {\r\n                            box.left = left;\r\n                            box.right = left + box.width;\r\n                            box.top = totalTopBoxesHeight;\r\n                            box.bottom = totalTopBoxesHeight + maxChartAreaHeight;\r\n\r\n                            // Move to next point\r\n                            left = box.right;\r\n                        }\r\n                    }\r\n\r\n                    helpers.each(leftBoxes.concat(topBoxes), placeBox);\r\n\r\n                    // Account for chart width and height\r\n                    left += maxChartAreaWidth;\r\n                    top += maxChartAreaHeight;\r\n\r\n                    helpers.each(rightBoxes, placeBox);\r\n                    helpers.each(bottomBoxes, placeBox);\r\n\r\n                    // Step 8\r\n                    chart.chartArea = {\r\n                        left: totalLeftBoxesWidth,\r\n                        top: totalTopBoxesHeight,\r\n                        right: totalLeftBoxesWidth + maxChartAreaWidth,\r\n                        bottom: totalTopBoxesHeight + maxChartAreaHeight\r\n                    };\r\n\r\n                    // Step 9\r\n                    helpers.each(chartAreaBoxes, function(box) {\r\n                        box.left = chart.chartArea.left;\r\n                        box.top = chart.chartArea.top;\r\n                        box.right = chart.chartArea.right;\r\n                        box.bottom = chart.chartArea.bottom;\r\n\r\n                        box.update(maxChartAreaWidth, maxChartAreaHeight);\r\n                    });\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 22: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                plugins: {}\r\n            });\r\n\r\n            /**\r\n             * The plugin service singleton\r\n             * @namespace Chart.plugins\r\n             * @since 2.1.0\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Globally registered plugins.\r\n                 * @private\r\n                 */\r\n                _plugins: [],\r\n\r\n                /**\r\n                 * This identifier is used to invalidate the descriptors cache attached to each chart\r\n                 * when a global plugin is registered or unregistered. In this case, the cache ID is\r\n                 * incremented and descriptors are regenerated during following API calls.\r\n                 * @private\r\n                 */\r\n                _cacheId: 0,\r\n\r\n                /**\r\n                 * Registers the given plugin(s) if not already registered.\r\n                 * @param {Array|Object} plugins plugin instance(s).\r\n                 */\r\n                register: function(plugins) {\r\n                    var p = this._plugins;\r\n                    ([]).concat(plugins).forEach(function(plugin) {\r\n                        if (p.indexOf(plugin) === -1) {\r\n                            p.push(plugin);\r\n                        }\r\n                    });\r\n\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Unregisters the given plugin(s) only if registered.\r\n                 * @param {Array|Object} plugins plugin instance(s).\r\n                 */\r\n                unregister: function(plugins) {\r\n                    var p = this._plugins;\r\n                    ([]).concat(plugins).forEach(function(plugin) {\r\n                        var idx = p.indexOf(plugin);\r\n                        if (idx !== -1) {\r\n                            p.splice(idx, 1);\r\n                        }\r\n                    });\r\n\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Remove all registered plugins.\r\n                 * @since 2.1.5\r\n                 */\r\n                clear: function() {\r\n                    this._plugins = [];\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Returns the number of registered plugins?\r\n                 * @returns {Number}\r\n                 * @since 2.1.5\r\n                 */\r\n                count: function() {\r\n                    return this._plugins.length;\r\n                },\r\n\r\n                /**\r\n                 * Returns all registered plugin instances.\r\n                 * @returns {Array} array of plugin objects.\r\n                 * @since 2.1.5\r\n                 */\r\n                getAll: function() {\r\n                    return this._plugins;\r\n                },\r\n\r\n                /**\r\n                 * Calls enabled plugins for `chart` on the specified hook and with the given args.\r\n                 * This method immediately returns as soon as a plugin explicitly returns false. The\r\n                 * returned value can be used, for instance, to interrupt the current action.\r\n                 * @param {Object} chart - The chart instance for which plugins should be called.\r\n                 * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\r\n                 * @param {Array} [args] - Extra arguments to apply to the hook call.\r\n                 * @returns {Boolean} false if any of the plugins return false, else returns true.\r\n                 */\r\n                notify: function(chart, hook, args) {\r\n                    var descriptors = this.descriptors(chart);\r\n                    var ilen = descriptors.length;\r\n                    var i, descriptor, plugin, params, method;\r\n\r\n                    for (i = 0; i < ilen; ++i) {\r\n                        descriptor = descriptors[i];\r\n                        plugin = descriptor.plugin;\r\n                        method = plugin[hook];\r\n                        if (typeof method === 'function') {\r\n                            params = [chart].concat(args || []);\r\n                            params.push(descriptor.options);\r\n                            if (method.apply(plugin, params) === false) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                },\r\n\r\n                /**\r\n                 * Returns descriptors of enabled plugins for the given chart.\r\n                 * @returns {Array} [{ plugin, options }]\r\n                 * @private\r\n                 */\r\n                descriptors: function(chart) {\r\n                    var cache = chart.$plugins || (chart.$plugins = {});\r\n                    if (cache.id === this._cacheId) {\r\n                        return cache.descriptors;\r\n                    }\r\n\r\n                    var plugins = [];\r\n                    var descriptors = [];\r\n                    var config = (chart && chart.config) || {};\r\n                    var options = (config.options && config.options.plugins) || {};\r\n\r\n                    this._plugins.concat(config.plugins || []).forEach(function(plugin) {\r\n                        var idx = plugins.indexOf(plugin);\r\n                        if (idx !== -1) {\r\n                            return;\r\n                        }\r\n\r\n                        var id = plugin.id;\r\n                        var opts = options[id];\r\n                        if (opts === false) {\r\n                            return;\r\n                        }\r\n\r\n                        if (opts === true) {\r\n                            opts = helpers.clone(defaults.global.plugins[id]);\r\n                        }\r\n\r\n                        plugins.push(plugin);\r\n                        descriptors.push({\r\n                            plugin: plugin,\r\n                            options: opts || {}\r\n                        });\r\n                    });\r\n\r\n                    cache.descriptors = descriptors;\r\n                    cache.id = this._cacheId;\r\n                    return descriptors;\r\n                },\r\n\r\n                /**\r\n                 * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\r\n                 * but in some cases, this reference can be changed by the user when updating options.\r\n                 * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\r\n                 * @private\r\n                 */\r\n                _invalidate: function(chart) {\r\n                    delete chart.$plugins;\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Plugin extension hooks.\r\n             * @interface IPlugin\r\n             * @since 2.1.0\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeInit\r\n             * @desc Called before initializing `chart`.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterInit\r\n             * @desc Called after `chart` has been initialized and before the first update.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeUpdate\r\n             * @desc Called before updating `chart`. If any plugin returns `false`, the update\r\n             * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart update.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterUpdate\r\n             * @desc Called after `chart` has been updated and before rendering. Note that this\r\n             * hook will not be called if the chart update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetsUpdate\r\n             * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\r\n             * the datasets update is cancelled until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} false to cancel the datasets update.\r\n             * @since version 2.1.5\r\n            */\r\n            /**\r\n             * @method IPlugin#afterDatasetsUpdate\r\n             * @desc Called after the `chart` datasets have been updated. Note that this hook\r\n             * will not be called if the datasets update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @since version 2.1.5\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetUpdate\r\n             * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\r\n             * returns `false`, the datasets update is cancelled until another `update` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetUpdate\r\n             * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\r\n             * that this hook will not be called if the datasets update has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeLayout\r\n             * @desc Called before laying out `chart`. If any plugin returns `false`,\r\n             * the layout update is cancelled until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart layout.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterLayout\r\n             * @desc Called after the `chart` has been layed out. Note that this hook will not\r\n             * be called if the layout update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeRender\r\n             * @desc Called before rendering `chart`. If any plugin returns `false`,\r\n             * the rendering is cancelled until another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart rendering.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterRender\r\n             * @desc Called after the `chart` has been fully rendered (and animation completed). Note\r\n             * that this hook will not be called if the rendering has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDraw\r\n             * @desc Called before drawing `chart` at every animation frame specified by the given\r\n             * easing value. If any plugin returns `false`, the frame drawing is cancelled until\r\n             * another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDraw\r\n             * @desc Called after the `chart` has been drawn for the specific easing value. Note\r\n             * that this hook will not be called if the drawing has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetsDraw\r\n             * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\r\n             * the datasets drawing is cancelled until another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetsDraw\r\n             * @desc Called after the `chart` datasets have been drawn. Note that this hook\r\n             * will not be called if the datasets drawing has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetDraw\r\n             * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\r\n             * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\r\n             * is cancelled until another `render` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetDraw\r\n             * @desc Called after the `chart` datasets at the given `args.index` have been drawn\r\n             * (datasets are drawn in the reverse order). Note that this hook will not be called\r\n             * if the datasets drawing has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeTooltipDraw\r\n             * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\r\n             * the tooltip drawing is cancelled until another `render` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Object} args.tooltip - The tooltip.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart tooltip drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterTooltipDraw\r\n             * @desc Called after drawing the `tooltip`. Note that this hook will not\r\n             * be called if the tooltip drawing has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Object} args.tooltip - The tooltip.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeEvent\r\n             * @desc Called before processing the specified `event`. If any plugin returns `false`,\r\n             * the event will be discarded.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {IEvent} event - The event object.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterEvent\r\n             * @desc Called after the `event` has been consumed. Note that this hook\r\n             * will not be called if the `event` has been previously discarded.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {IEvent} event - The event object.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#resize\r\n             * @desc Called after the chart as been resized.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#destroy\r\n             * @desc Called after the chart as been destroyed.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n        }, { \"16\": 16, \"36\": 36 }], 23: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var Ticks = require(25);\r\n\r\n            defaults._set('scale', {\r\n                display: true,\r\n                position: 'left',\r\n                offset: false,\r\n\r\n                // grid line settings\r\n                gridLines: {\r\n                    display: true,\r\n                    color: 'rgba(0, 0, 0, 0.1)',\r\n                    lineWidth: 1,\r\n                    drawBorder: true,\r\n                    drawOnChartArea: true,\r\n                    drawTicks: true,\r\n                    tickMarkLength: 10,\r\n                    zeroLineWidth: 1,\r\n                    zeroLineColor: 'rgba(0,0,0,0.25)',\r\n                    zeroLineBorderDash: [],\r\n                    zeroLineBorderDashOffset: 0.0,\r\n                    offsetGridLines: false,\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0\r\n                },\r\n\r\n                // scale label\r\n                scaleLabel: {\r\n                    // display property\r\n                    display: false,\r\n\r\n                    // actual label\r\n                    labelString: '',\r\n\r\n                    // line height\r\n                    lineHeight: 1.2,\r\n\r\n                    // top/bottom padding\r\n                    padding: {\r\n                        top: 4,\r\n                        bottom: 4\r\n                    }\r\n                },\r\n\r\n                // label settings\r\n                ticks: {\r\n                    beginAtZero: false,\r\n                    minRotation: 0,\r\n                    maxRotation: 50,\r\n                    mirror: false,\r\n                    padding: 0,\r\n                    reverse: false,\r\n                    display: true,\r\n                    autoSkip: true,\r\n                    autoSkipPadding: 0,\r\n                    labelOffset: 0,\r\n                    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\r\n                    callback: Ticks.formatters.values,\r\n                    minor: {},\r\n                    major: {}\r\n                }\r\n            });\r\n\r\n            function labelsFromTicks(ticks) {\r\n                var labels = [];\r\n                var i, ilen;\r\n\r\n                for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n                    labels.push(ticks[i].label);\r\n                }\r\n\r\n                return labels;\r\n            }\r\n\r\n            function getLineValue(scale, index, offsetGridLines) {\r\n                var lineValue = scale.getPixelForTick(index);\r\n\r\n                if (offsetGridLines) {\r\n                    if (index === 0) {\r\n                        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\r\n                    } else {\r\n                        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\r\n                    }\r\n                }\r\n                return lineValue;\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                function computeTextSize(context, tick, font) {\r\n                    return helpers.isArray(tick) ?\r\n                        helpers.longestText(context, font, tick) :\r\n                        context.measureText(tick).width;\r\n                }\r\n\r\n                function parseFontOptions(options) {\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var globalDefaults = defaults.global;\r\n                    var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\r\n                    var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\r\n                    var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\r\n\r\n                    return {\r\n                        size: size,\r\n                        style: style,\r\n                        family: family,\r\n                        font: helpers.fontString(size, style, family)\r\n                    };\r\n                }\r\n\r\n                function parseLineHeight(options) {\r\n                    return helpers.options.toLineHeight(\r\n                        helpers.valueOrDefault(options.lineHeight, 1.2),\r\n                        helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\r\n                }\r\n\r\n                Chart.Scale = Element.extend({\r\n                    /**\r\n                     * Get the padding needed for the scale\r\n                     * @method getPadding\r\n                     * @private\r\n                     * @returns {Padding} the necessary padding\r\n                     */\r\n                    getPadding: function() {\r\n                        var me = this;\r\n                        return {\r\n                            left: me.paddingLeft || 0,\r\n                            top: me.paddingTop || 0,\r\n                            right: me.paddingRight || 0,\r\n                            bottom: me.paddingBottom || 0\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the scale tick objects ({label, major})\r\n                     * @since 2.7\r\n                     */\r\n                    getTicks: function() {\r\n                        return this._ticks;\r\n                    },\r\n\r\n                    // These methods are ordered by lifecyle. Utilities then follow.\r\n                    // Any function defined here is inherited by all scale types.\r\n                    // Any function can be extended by the scale type\r\n\r\n                    mergeTicksOptions: function() {\r\n                        var ticks = this.options.ticks;\r\n                        if (ticks.minor === false) {\r\n                            ticks.minor = {\r\n                                display: false\r\n                            };\r\n                        }\r\n                        if (ticks.major === false) {\r\n                            ticks.major = {\r\n                                display: false\r\n                            };\r\n                        }\r\n                        for (var key in ticks) {\r\n                            if (key !== 'major' && key !== 'minor') {\r\n                                if (typeof ticks.minor[key] === 'undefined') {\r\n                                    ticks.minor[key] = ticks[key];\r\n                                }\r\n                                if (typeof ticks.major[key] === 'undefined') {\r\n                                    ticks.major[key] = ticks[key];\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    beforeUpdate: function() {\r\n                        helpers.callback(this.options.beforeUpdate, [this]);\r\n                    },\r\n                    update: function(maxWidth, maxHeight, margins) {\r\n                        var me = this;\r\n                        var i, ilen, labels, label, ticks, tick;\r\n\r\n                        // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                        me.beforeUpdate();\r\n\r\n                        // Absorb the master measurements\r\n                        me.maxWidth = maxWidth;\r\n                        me.maxHeight = maxHeight;\r\n                        me.margins = helpers.extend({\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: 0,\r\n                            bottom: 0\r\n                        }, margins);\r\n                        me.longestTextCache = me.longestTextCache || {};\r\n\r\n                        // Dimensions\r\n                        me.beforeSetDimensions();\r\n                        me.setDimensions();\r\n                        me.afterSetDimensions();\r\n\r\n                        // Data min/max\r\n                        me.beforeDataLimits();\r\n                        me.determineDataLimits();\r\n                        me.afterDataLimits();\r\n\r\n                        // Ticks - `this.ticks` is now DEPRECATED!\r\n                        // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\r\n                        // and must not be accessed directly from outside this class. `this.ticks` being\r\n                        // around for long time and not marked as private, we can't change its structure\r\n                        // without unexpected breaking changes. If you need to access the scale ticks,\r\n                        // use scale.getTicks() instead.\r\n\r\n                        me.beforeBuildTicks();\r\n\r\n                        // New implementations should return an array of objects but for BACKWARD COMPAT,\r\n                        // we still support no return (`this.ticks` internally set by calling this method).\r\n                        ticks = me.buildTicks() || [];\r\n\r\n                        me.afterBuildTicks();\r\n\r\n                        me.beforeTickToLabelConversion();\r\n\r\n                        // New implementations should return the formatted tick labels but for BACKWARD\r\n                        // COMPAT, we still support no return (`this.ticks` internally changed by calling\r\n                        // this method and supposed to contain only string values).\r\n                        labels = me.convertTicksToLabels(ticks) || me.ticks;\r\n\r\n                        me.afterTickToLabelConversion();\r\n\r\n                        me.ticks = labels;   // BACKWARD COMPATIBILITY\r\n\r\n                        // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\r\n\r\n                        // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\r\n                        for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n                            label = labels[i];\r\n                            tick = ticks[i];\r\n                            if (!tick) {\r\n                                ticks.push(tick = {\r\n                                    label: label,\r\n                                    major: false\r\n                                });\r\n                            } else {\r\n                                tick.label = label;\r\n                            }\r\n                        }\r\n\r\n                        me._ticks = ticks;\r\n\r\n                        // Tick Rotation\r\n                        me.beforeCalculateTickRotation();\r\n                        me.calculateTickRotation();\r\n                        me.afterCalculateTickRotation();\r\n                        // Fit\r\n                        me.beforeFit();\r\n                        me.fit();\r\n                        me.afterFit();\r\n                        //\r\n                        me.afterUpdate();\r\n\r\n                        return me.minSize;\r\n                    },\r\n                    afterUpdate: function() {\r\n                        helpers.callback(this.options.afterUpdate, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeSetDimensions: function() {\r\n                        helpers.callback(this.options.beforeSetDimensions, [this]);\r\n                    },\r\n                    setDimensions: function() {\r\n                        var me = this;\r\n                        // Set the unconstrained dimension before label rotation\r\n                        if (me.isHorizontal()) {\r\n                            // Reset position before calculating rotation\r\n                            me.width = me.maxWidth;\r\n                            me.left = 0;\r\n                            me.right = me.width;\r\n                        } else {\r\n                            me.height = me.maxHeight;\r\n\r\n                            // Reset position before calculating rotation\r\n                            me.top = 0;\r\n                            me.bottom = me.height;\r\n                        }\r\n\r\n                        // Reset padding\r\n                        me.paddingLeft = 0;\r\n                        me.paddingTop = 0;\r\n                        me.paddingRight = 0;\r\n                        me.paddingBottom = 0;\r\n                    },\r\n                    afterSetDimensions: function() {\r\n                        helpers.callback(this.options.afterSetDimensions, [this]);\r\n                    },\r\n\r\n                    // Data limits\r\n                    beforeDataLimits: function() {\r\n                        helpers.callback(this.options.beforeDataLimits, [this]);\r\n                    },\r\n                    determineDataLimits: helpers.noop,\r\n                    afterDataLimits: function() {\r\n                        helpers.callback(this.options.afterDataLimits, [this]);\r\n                    },\r\n\r\n                    //\r\n                    beforeBuildTicks: function() {\r\n                        helpers.callback(this.options.beforeBuildTicks, [this]);\r\n                    },\r\n                    buildTicks: helpers.noop,\r\n                    afterBuildTicks: function() {\r\n                        helpers.callback(this.options.afterBuildTicks, [this]);\r\n                    },\r\n\r\n                    beforeTickToLabelConversion: function() {\r\n                        helpers.callback(this.options.beforeTickToLabelConversion, [this]);\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        // Convert ticks to strings\r\n                        var tickOpts = me.options.ticks;\r\n                        me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\r\n                    },\r\n                    afterTickToLabelConversion: function() {\r\n                        helpers.callback(this.options.afterTickToLabelConversion, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeCalculateTickRotation: function() {\r\n                        helpers.callback(this.options.beforeCalculateTickRotation, [this]);\r\n                    },\r\n                    calculateTickRotation: function() {\r\n                        var me = this;\r\n                        var context = me.ctx;\r\n                        var tickOpts = me.options.ticks;\r\n                        var labels = labelsFromTicks(me._ticks);\r\n\r\n                        // Get the width of each grid by calculating the difference\r\n                        // between x offsets between 0 and 1.\r\n                        var tickFont = parseFontOptions(tickOpts);\r\n                        context.font = tickFont.font;\r\n\r\n                        var labelRotation = tickOpts.minRotation || 0;\r\n\r\n                        if (labels.length && me.options.display && me.isHorizontal()) {\r\n                            var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\r\n                            var labelWidth = originalLabelWidth;\r\n                            var cosRotation, sinRotation;\r\n\r\n                            // Allow 3 pixels x2 padding either side for label readability\r\n                            var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\r\n\r\n                            // Max label rotation can be set or default to 90 - also act as a loop counter\r\n                            while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\r\n                                var angleRadians = helpers.toRadians(labelRotation);\r\n                                cosRotation = Math.cos(angleRadians);\r\n                                sinRotation = Math.sin(angleRadians);\r\n\r\n                                if (sinRotation * originalLabelWidth > me.maxHeight) {\r\n                                    // go back one step\r\n                                    labelRotation--;\r\n                                    break;\r\n                                }\r\n\r\n                                labelRotation++;\r\n                                labelWidth = cosRotation * originalLabelWidth;\r\n                            }\r\n                        }\r\n\r\n                        me.labelRotation = labelRotation;\r\n                    },\r\n                    afterCalculateTickRotation: function() {\r\n                        helpers.callback(this.options.afterCalculateTickRotation, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeFit: function() {\r\n                        helpers.callback(this.options.beforeFit, [this]);\r\n                    },\r\n                    fit: function() {\r\n                        var me = this;\r\n                        // Reset\r\n                        var minSize = me.minSize = {\r\n                            width: 0,\r\n                            height: 0\r\n                        };\r\n\r\n                        var labels = labelsFromTicks(me._ticks);\r\n\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n                        var scaleLabelOpts = opts.scaleLabel;\r\n                        var gridLineOpts = opts.gridLines;\r\n                        var display = opts.display;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        var tickFont = parseFontOptions(tickOpts);\r\n                        var tickMarkLength = opts.gridLines.tickMarkLength;\r\n\r\n                        // Width\r\n                        if (isHorizontal) {\r\n                            // subtract the margins to line up with the chartArea if we are a full width scale\r\n                            minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\r\n                        } else {\r\n                            minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n                        }\r\n\r\n                        // height\r\n                        if (isHorizontal) {\r\n                            minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n                        } else {\r\n                            minSize.height = me.maxHeight; // fill all the height\r\n                        }\r\n\r\n                        // Are we showing a title for the scale?\r\n                        if (scaleLabelOpts.display && display) {\r\n                            var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\r\n                            var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\r\n                            var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\r\n\r\n                            if (isHorizontal) {\r\n                                minSize.height += deltaHeight;\r\n                            } else {\r\n                                minSize.width += deltaHeight;\r\n                            }\r\n                        }\r\n\r\n                        // Don't bother fitting the ticks if we are not showing them\r\n                        if (tickOpts.display && display) {\r\n                            var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\r\n                            var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\r\n                            var lineSpace = tickFont.size * 0.5;\r\n                            var tickPadding = me.options.ticks.padding;\r\n\r\n                            if (isHorizontal) {\r\n                                // A horizontal axis is more constrained by the height.\r\n                                me.longestLabelWidth = largestTextWidth;\r\n\r\n                                var angleRadians = helpers.toRadians(me.labelRotation);\r\n                                var cosRotation = Math.cos(angleRadians);\r\n                                var sinRotation = Math.sin(angleRadians);\r\n\r\n                                // TODO - improve this calculation\r\n                                var labelHeight = (sinRotation * largestTextWidth)\r\n                                    + (tickFont.size * tallestLabelHeightInLines)\r\n                                    + (lineSpace * (tallestLabelHeightInLines - 1))\r\n                                    + lineSpace; // padding\r\n\r\n                                minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\r\n\r\n                                me.ctx.font = tickFont.font;\r\n                                var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\r\n                                var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\r\n\r\n                                // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\r\n                                // which means that the right padding is dominated by the font height\r\n                                if (me.labelRotation !== 0) {\r\n                                    me.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\r\n                                    me.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\r\n                                } else {\r\n                                    me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\r\n                                    me.paddingRight = lastLabelWidth / 2 + 3;\r\n                                }\r\n                            } else {\r\n                                // A vertical axis is more constrained by the width. Labels are the\r\n                                // dominant factor here, so get that length first and account for padding\r\n                                if (tickOpts.mirror) {\r\n                                    largestTextWidth = 0;\r\n                                } else {\r\n                                    // use lineSpace for consistency with horizontal axis\r\n                                    // tickPadding is not implemented for horizontal\r\n                                    largestTextWidth += tickPadding + lineSpace;\r\n                                }\r\n\r\n                                minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\r\n\r\n                                me.paddingTop = tickFont.size / 2;\r\n                                me.paddingBottom = tickFont.size / 2;\r\n                            }\r\n                        }\r\n\r\n                        me.handleMargins();\r\n\r\n                        me.width = minSize.width;\r\n                        me.height = minSize.height;\r\n                    },\r\n\r\n                    /**\r\n                     * Handle margins and padding interactions\r\n                     * @private\r\n                     */\r\n                    handleMargins: function() {\r\n                        var me = this;\r\n                        if (me.margins) {\r\n                            me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\r\n                            me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\r\n                            me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\r\n                            me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\r\n                        }\r\n                    },\r\n\r\n                    afterFit: function() {\r\n                        helpers.callback(this.options.afterFit, [this]);\r\n                    },\r\n\r\n                    // Shared Methods\r\n                    isHorizontal: function() {\r\n                        return this.options.position === 'top' || this.options.position === 'bottom';\r\n                    },\r\n                    isFullWidth: function() {\r\n                        return (this.options.fullWidth);\r\n                    },\r\n\r\n                    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\r\n                    getRightValue: function(rawValue) {\r\n                        // Null and undefined values first\r\n                        if (helpers.isNullOrUndef(rawValue)) {\r\n                            return NaN;\r\n                        }\r\n                        // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\r\n                        if (typeof rawValue === 'number' && !isFinite(rawValue)) {\r\n                            return NaN;\r\n                        }\r\n                        // If it is in fact an object, dive in one more level\r\n                        if (rawValue) {\r\n                            if (this.isHorizontal()) {\r\n                                if (rawValue.x !== undefined) {\r\n                                    return this.getRightValue(rawValue.x);\r\n                                }\r\n                            } else if (rawValue.y !== undefined) {\r\n                                return this.getRightValue(rawValue.y);\r\n                            }\r\n                        }\r\n\r\n                        // Value is good, return it\r\n                        return rawValue;\r\n                    },\r\n\r\n                    /**\r\n                     * Used to get the value to display in the tooltip for the data at the given index\r\n                     * @param index\r\n                     * @param datasetIndex\r\n                     */\r\n                    getLabelForIndex: helpers.noop,\r\n\r\n                    /**\r\n                     * Returns the location of the given data point. Value can either be an index or a numerical value\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     * @param value\r\n                     * @param index\r\n                     * @param datasetIndex\r\n                     */\r\n                    getPixelForValue: helpers.noop,\r\n\r\n                    /**\r\n                     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     * @param pixel\r\n                     */\r\n                    getValueForPixel: helpers.noop,\r\n\r\n                    /**\r\n                     * Returns the location of the tick at the given index\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getPixelForTick: function(index) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        if (me.isHorizontal()) {\r\n                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n                            var tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\r\n                            var pixel = (tickWidth * index) + me.paddingLeft;\r\n\r\n                            if (offset) {\r\n                                pixel += tickWidth / 2;\r\n                            }\r\n\r\n                            var finalVal = me.left + Math.round(pixel);\r\n                            finalVal += me.isFullWidth() ? me.margins.left : 0;\r\n                            return finalVal;\r\n                        }\r\n                        var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\r\n                        return me.top + (index * (innerHeight / (me._ticks.length - 1)));\r\n                    },\r\n\r\n                    /**\r\n                     * Utility for getting the pixel location of a percentage of scale\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getPixelForDecimal: function(decimal) {\r\n                        var me = this;\r\n                        if (me.isHorizontal()) {\r\n                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n                            var valueOffset = (innerWidth * decimal) + me.paddingLeft;\r\n\r\n                            var finalVal = me.left + Math.round(valueOffset);\r\n                            finalVal += me.isFullWidth() ? me.margins.left : 0;\r\n                            return finalVal;\r\n                        }\r\n                        return me.top + (decimal * me.height);\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the pixel for the minimum chart value\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getBasePixel: function() {\r\n                        return this.getPixelForValue(this.getBaseValue());\r\n                    },\r\n\r\n                    getBaseValue: function() {\r\n                        var me = this;\r\n                        var min = me.min;\r\n                        var max = me.max;\r\n\r\n                        return me.beginAtZero ? 0 :\r\n                            min < 0 && max < 0 ? max :\r\n                                min > 0 && max > 0 ? min :\r\n                                    0;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns a subset of ticks to be plotted to avoid overlapping labels.\r\n                     * @private\r\n                     */\r\n                    _autoSkip: function(ticks) {\r\n                        var skipRatio;\r\n                        var me = this;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var optionTicks = me.options.ticks.minor;\r\n                        var tickCount = ticks.length;\r\n                        var labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n                        var cosRotation = Math.cos(labelRotationRadians);\r\n                        var longestRotatedLabel = me.longestLabelWidth * cosRotation;\r\n                        var result = [];\r\n                        var i, tick, shouldSkip;\r\n\r\n                        // figure out the maximum number of gridlines to show\r\n                        var maxTicks;\r\n                        if (optionTicks.maxTicksLimit) {\r\n                            maxTicks = optionTicks.maxTicksLimit;\r\n                        }\r\n\r\n                        if (isHorizontal) {\r\n                            skipRatio = false;\r\n\r\n                            if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\r\n                                skipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\r\n                            }\r\n\r\n                            // if they defined a max number of optionTicks,\r\n                            // increase skipRatio until that number is met\r\n                            if (maxTicks && tickCount > maxTicks) {\r\n                                skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\r\n                            }\r\n                        }\r\n\r\n                        for (i = 0; i < tickCount; i++) {\r\n                            tick = ticks[i];\r\n\r\n                            // Since we always show the last tick,we need may need to hide the last shown one before\r\n                            shouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\r\n                            if (shouldSkip && i !== tickCount - 1) {\r\n                                // leave tick in place but make sure it's not displayed (#4635)\r\n                                delete tick.label;\r\n                            }\r\n                            result.push(tick);\r\n                        }\r\n                        return result;\r\n                    },\r\n\r\n                    // Actually draw the scale on the canvas\r\n                    // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\r\n                    draw: function(chartArea) {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        if (!options.display) {\r\n                            return;\r\n                        }\r\n\r\n                        var context = me.ctx;\r\n                        var globalDefaults = defaults.global;\r\n                        var optionTicks = options.ticks.minor;\r\n                        var optionMajorTicks = options.ticks.major || optionTicks;\r\n                        var gridLines = options.gridLines;\r\n                        var scaleLabel = options.scaleLabel;\r\n\r\n                        var isRotated = me.labelRotation !== 0;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\r\n                        var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\r\n                        var tickFont = parseFontOptions(optionTicks);\r\n                        var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\r\n                        var majorTickFont = parseFontOptions(optionMajorTicks);\r\n\r\n                        var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\r\n\r\n                        var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\r\n                        var scaleLabelFont = parseFontOptions(scaleLabel);\r\n                        var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\r\n                        var labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n\r\n                        var itemsToDraw = [];\r\n\r\n                        var axisWidth = me.options.gridLines.lineWidth;\r\n                        var xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\r\n                        var xTickEnd = options.position === 'right' ? me.right + tl : me.right;\r\n                        var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\r\n                        var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\r\n\r\n                        helpers.each(ticks, function(tick, index) {\r\n                            // autoskipper skipped this tick (#4635)\r\n                            if (helpers.isNullOrUndef(tick.label)) {\r\n                                return;\r\n                            }\r\n\r\n                            var label = tick.label;\r\n                            var lineWidth, lineColor, borderDash, borderDashOffset;\r\n                            if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\r\n                                // Draw the first index specially\r\n                                lineWidth = gridLines.zeroLineWidth;\r\n                                lineColor = gridLines.zeroLineColor;\r\n                                borderDash = gridLines.zeroLineBorderDash;\r\n                                borderDashOffset = gridLines.zeroLineBorderDashOffset;\r\n                            } else {\r\n                                lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\r\n                                lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\r\n                                borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\r\n                                borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\r\n                            }\r\n\r\n                            // Common properties\r\n                            var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\r\n                            var textAlign = 'middle';\r\n                            var textBaseline = 'middle';\r\n                            var tickPadding = optionTicks.padding;\r\n\r\n                            if (isHorizontal) {\r\n                                var labelYOffset = tl + tickPadding;\r\n\r\n                                if (options.position === 'bottom') {\r\n                                    // bottom\r\n                                    textBaseline = !isRotated ? 'top' : 'middle';\r\n                                    textAlign = !isRotated ? 'center' : 'right';\r\n                                    labelY = me.top + labelYOffset;\r\n                                } else {\r\n                                    // top\r\n                                    textBaseline = !isRotated ? 'bottom' : 'middle';\r\n                                    textAlign = !isRotated ? 'center' : 'left';\r\n                                    labelY = me.bottom - labelYOffset;\r\n                                }\r\n\r\n                                var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\r\n                                if (xLineValue < me.left) {\r\n                                    lineColor = 'rgba(0,0,0,0)';\r\n                                }\r\n                                xLineValue += helpers.aliasPixel(lineWidth);\r\n\r\n                                labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\r\n\r\n                                tx1 = tx2 = x1 = x2 = xLineValue;\r\n                                ty1 = yTickStart;\r\n                                ty2 = yTickEnd;\r\n                                y1 = chartArea.top;\r\n                                y2 = chartArea.bottom + axisWidth;\r\n                            } else {\r\n                                var isLeft = options.position === 'left';\r\n                                var labelXOffset;\r\n\r\n                                if (optionTicks.mirror) {\r\n                                    textAlign = isLeft ? 'left' : 'right';\r\n                                    labelXOffset = tickPadding;\r\n                                } else {\r\n                                    textAlign = isLeft ? 'right' : 'left';\r\n                                    labelXOffset = tl + tickPadding;\r\n                                }\r\n\r\n                                labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\r\n\r\n                                var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\r\n                                if (yLineValue < me.top) {\r\n                                    lineColor = 'rgba(0,0,0,0)';\r\n                                }\r\n                                yLineValue += helpers.aliasPixel(lineWidth);\r\n\r\n                                labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\r\n\r\n                                tx1 = xTickStart;\r\n                                tx2 = xTickEnd;\r\n                                x1 = chartArea.left;\r\n                                x2 = chartArea.right + axisWidth;\r\n                                ty1 = ty2 = y1 = y2 = yLineValue;\r\n                            }\r\n\r\n                            itemsToDraw.push({\r\n                                tx1: tx1,\r\n                                ty1: ty1,\r\n                                tx2: tx2,\r\n                                ty2: ty2,\r\n                                x1: x1,\r\n                                y1: y1,\r\n                                x2: x2,\r\n                                y2: y2,\r\n                                labelX: labelX,\r\n                                labelY: labelY,\r\n                                glWidth: lineWidth,\r\n                                glColor: lineColor,\r\n                                glBorderDash: borderDash,\r\n                                glBorderDashOffset: borderDashOffset,\r\n                                rotation: -1 * labelRotationRadians,\r\n                                label: label,\r\n                                major: tick.major,\r\n                                textBaseline: textBaseline,\r\n                                textAlign: textAlign\r\n                            });\r\n                        });\r\n\r\n                        // Draw all of the tick labels, tick marks, and grid lines at the correct places\r\n                        helpers.each(itemsToDraw, function(itemToDraw) {\r\n                            if (gridLines.display) {\r\n                                context.save();\r\n                                context.lineWidth = itemToDraw.glWidth;\r\n                                context.strokeStyle = itemToDraw.glColor;\r\n                                if (context.setLineDash) {\r\n                                    context.setLineDash(itemToDraw.glBorderDash);\r\n                                    context.lineDashOffset = itemToDraw.glBorderDashOffset;\r\n                                }\r\n\r\n                                context.beginPath();\r\n\r\n                                if (gridLines.drawTicks) {\r\n                                    context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\r\n                                    context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\r\n                                }\r\n\r\n                                if (gridLines.drawOnChartArea) {\r\n                                    context.moveTo(itemToDraw.x1, itemToDraw.y1);\r\n                                    context.lineTo(itemToDraw.x2, itemToDraw.y2);\r\n                                }\r\n\r\n                                context.stroke();\r\n                                context.restore();\r\n                            }\r\n\r\n                            if (optionTicks.display) {\r\n                                // Make sure we draw text in the correct color and font\r\n                                context.save();\r\n                                context.translate(itemToDraw.labelX, itemToDraw.labelY);\r\n                                context.rotate(itemToDraw.rotation);\r\n                                context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\r\n                                context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\r\n                                context.textBaseline = itemToDraw.textBaseline;\r\n                                context.textAlign = itemToDraw.textAlign;\r\n\r\n                                var label = itemToDraw.label;\r\n                                if (helpers.isArray(label)) {\r\n                                    var lineCount = label.length;\r\n                                    var lineHeight = tickFont.size * 1.5;\r\n                                    var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\r\n\r\n                                    for (var i = 0; i < lineCount; ++i) {\r\n                                        // We just make sure the multiline element is a string here..\r\n                                        context.fillText('' + label[i], 0, y);\r\n                                        // apply same lineSpacing as calculated @ L#320\r\n                                        y += lineHeight;\r\n                                    }\r\n                                } else {\r\n                                    context.fillText(label, 0, 0);\r\n                                }\r\n                                context.restore();\r\n                            }\r\n                        });\r\n\r\n                        if (scaleLabel.display) {\r\n                            // Draw the scale label\r\n                            var scaleLabelX;\r\n                            var scaleLabelY;\r\n                            var rotation = 0;\r\n                            var halfLineHeight = parseLineHeight(scaleLabel) / 2;\r\n\r\n                            if (isHorizontal) {\r\n                                scaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\r\n                                scaleLabelY = options.position === 'bottom'\r\n                                    ? me.bottom - halfLineHeight - scaleLabelPadding.bottom\r\n                                    : me.top + halfLineHeight + scaleLabelPadding.top;\r\n                            } else {\r\n                                var isLeft = options.position === 'left';\r\n                                scaleLabelX = isLeft\r\n                                    ? me.left + halfLineHeight + scaleLabelPadding.top\r\n                                    : me.right - halfLineHeight - scaleLabelPadding.top;\r\n                                scaleLabelY = me.top + ((me.bottom - me.top) / 2);\r\n                                rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\r\n                            }\r\n\r\n                            context.save();\r\n                            context.translate(scaleLabelX, scaleLabelY);\r\n                            context.rotate(rotation);\r\n                            context.textAlign = 'center';\r\n                            context.textBaseline = 'middle';\r\n                            context.fillStyle = scaleLabelFontColor; // render in correct colour\r\n                            context.font = scaleLabelFont.font;\r\n                            context.fillText(scaleLabel.labelString, 0, 0);\r\n                            context.restore();\r\n                        }\r\n\r\n                        if (gridLines.drawBorder) {\r\n                            // Draw the line at the edge of the axis\r\n                            context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\r\n                            context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\r\n                            var x1 = me.left;\r\n                            var x2 = me.right + axisWidth;\r\n                            var y1 = me.top;\r\n                            var y2 = me.bottom + axisWidth;\r\n\r\n                            var aliasPixel = helpers.aliasPixel(context.lineWidth);\r\n                            if (isHorizontal) {\r\n                                y1 = y2 = options.position === 'top' ? me.bottom : me.top;\r\n                                y1 += aliasPixel;\r\n                                y2 += aliasPixel;\r\n                            } else {\r\n                                x1 = x2 = options.position === 'left' ? me.right : me.left;\r\n                                x1 += aliasPixel;\r\n                                x2 += aliasPixel;\r\n                            }\r\n\r\n                            context.beginPath();\r\n                            context.moveTo(x1, y1);\r\n                            context.lineTo(x2, y2);\r\n                            context.stroke();\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"25\": 25, \"36\": 36 }], 24: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.scaleService = {\r\n                    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\r\n                    // use the new chart options to grab the correct scale\r\n                    constructors: {},\r\n                    // Use a registration function so that we can move to an ES6 map when we no longer need to support\r\n                    // old browsers\r\n\r\n                    // Scale config defaults\r\n                    defaults: {},\r\n                    registerScaleType: function(type, scaleConstructor, scaleDefaults) {\r\n                        this.constructors[type] = scaleConstructor;\r\n                        this.defaults[type] = helpers.clone(scaleDefaults);\r\n                    },\r\n                    getScaleConstructor: function(type) {\r\n                        return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\r\n                    },\r\n                    getScaleDefaults: function(type) {\r\n                        // Return the scale defaults merged with the global settings so that we always use the latest ones\r\n                        return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\r\n                    },\r\n                    updateScaleDefaults: function(type, additions) {\r\n                        var me = this;\r\n                        if (me.defaults.hasOwnProperty(type)) {\r\n                            me.defaults[type] = helpers.extend(me.defaults[type], additions);\r\n                        }\r\n                    },\r\n                    addScalesToLayout: function(chart) {\r\n                        // Adds each scale to the chart.boxes array to be sized accordingly\r\n                        helpers.each(chart.scales, function(scale) {\r\n                            // Set ILayoutItem parameters for backwards compatibility\r\n                            scale.fullWidth = scale.options.fullWidth;\r\n                            scale.position = scale.options.position;\r\n                            scale.weight = scale.options.weight;\r\n                            layouts.addBox(chart, scale);\r\n                        });\r\n                    }\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"21\": 21, \"36\": 36 }], 25: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Namespace to hold static tick generation functions\r\n             * @namespace Chart.Ticks\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Namespace to hold formatters for different types of ticks\r\n                 * @namespace Chart.Ticks.formatters\r\n                 */\r\n                formatters: {\r\n                    /**\r\n                     * Formatter for value labels\r\n                     * @method Chart.Ticks.formatters.values\r\n                     * @param value the value to display\r\n                     * @return {String|Array} the label to display\r\n                     */\r\n                    values: function(value) {\r\n                        return helpers.isArray(value) ? value : '' + value;\r\n                    },\r\n\r\n                    /**\r\n                     * Formatter for linear numeric ticks\r\n                     * @method Chart.Ticks.formatters.linear\r\n                     * @param tickValue {Number} the value to be formatted\r\n                     * @param index {Number} the position of the tickValue parameter in the ticks array\r\n                     * @param ticks {Array<Number>} the list of ticks being converted\r\n                     * @return {String} string representation of the tickValue parameter\r\n                     */\r\n                    linear: function(tickValue, index, ticks) {\r\n                        // If we have lots of ticks, don't use the ones\r\n                        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\r\n\r\n                        // If we have a number like 2.5 as the delta, figure out how many decimal places we need\r\n                        if (Math.abs(delta) > 1) {\r\n                            if (tickValue !== Math.floor(tickValue)) {\r\n                                // not an integer\r\n                                delta = tickValue - Math.floor(tickValue);\r\n                            }\r\n                        }\r\n\r\n                        var logDelta = helpers.log10(Math.abs(delta));\r\n                        var tickString = '';\r\n\r\n                        if (tickValue !== 0) {\r\n                            var numDecimal = -1 * Math.floor(logDelta);\r\n                            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\r\n                            tickString = tickValue.toFixed(numDecimal);\r\n                        } else {\r\n                            tickString = '0'; // never show decimal places for 0\r\n                        }\r\n\r\n                        return tickString;\r\n                    },\r\n\r\n                    logarithmic: function(tickValue, index, ticks) {\r\n                        var remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\r\n\r\n                        if (tickValue === 0) {\r\n                            return '0';\r\n                        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\r\n                            return tickValue.toExponential();\r\n                        }\r\n                        return '';\r\n                    }\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 26: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                tooltips: {\r\n                    enabled: true,\r\n                    custom: null,\r\n                    mode: 'nearest',\r\n                    position: 'average',\r\n                    intersect: true,\r\n                    backgroundColor: 'rgba(0,0,0,0.8)',\r\n                    titleFontStyle: 'bold',\r\n                    titleSpacing: 2,\r\n                    titleMarginBottom: 6,\r\n                    titleFontColor: '#fff',\r\n                    titleAlign: 'left',\r\n                    bodySpacing: 2,\r\n                    bodyFontColor: '#fff',\r\n                    bodyAlign: 'left',\r\n                    footerFontStyle: 'bold',\r\n                    footerSpacing: 2,\r\n                    footerMarginTop: 6,\r\n                    footerFontColor: '#fff',\r\n                    footerAlign: 'left',\r\n                    yPadding: 6,\r\n                    xPadding: 6,\r\n                    caretPadding: 2,\r\n                    caretSize: 5,\r\n                    cornerRadius: 6,\r\n                    multiKeyBackground: '#fff',\r\n                    displayColors: true,\r\n                    borderColor: 'rgba(0,0,0,0)',\r\n                    borderWidth: 0,\r\n                    callbacks: {\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeTitle: helpers.noop,\r\n                        title: function(tooltipItems, data) {\r\n                            // Pick first xLabel for now\r\n                            var title = '';\r\n                            var labels = data.labels;\r\n                            var labelCount = labels ? labels.length : 0;\r\n\r\n                            if (tooltipItems.length > 0) {\r\n                                var item = tooltipItems[0];\r\n\r\n                                if (item.xLabel) {\r\n                                    title = item.xLabel;\r\n                                } else if (labelCount > 0 && item.index < labelCount) {\r\n                                    title = labels[item.index];\r\n                                }\r\n                            }\r\n\r\n                            return title;\r\n                        },\r\n                        afterTitle: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeBody: helpers.noop,\r\n\r\n                        // Args are: (tooltipItem, data)\r\n                        beforeLabel: helpers.noop,\r\n                        label: function(tooltipItem, data) {\r\n                            var label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\r\n                            if (label) {\r\n                                label += ': ';\r\n                            }\r\n                            label += tooltipItem.yLabel;\r\n                            return label;\r\n                        },\r\n                        labelColor: function(tooltipItem, chart) {\r\n                            var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n                            var activeElement = meta.data[tooltipItem.index];\r\n                            var view = activeElement._view;\r\n                            return {\r\n                                borderColor: view.borderColor,\r\n                                backgroundColor: view.backgroundColor\r\n                            };\r\n                        },\r\n                        labelTextColor: function() {\r\n                            return this._options.bodyFontColor;\r\n                        },\r\n                        afterLabel: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        afterBody: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeFooter: helpers.noop,\r\n                        footer: helpers.noop,\r\n                        afterFooter: helpers.noop\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                /**\r\n                   * Helper method to merge the opacity into a color\r\n                   */\r\n                function mergeOpacity(colorString, opacity) {\r\n                    var color = helpers.color(colorString);\r\n                    return color.alpha(opacity * color.alpha()).rgbaString();\r\n                }\r\n\r\n                // Helper to push or concat based on if the 2nd parameter is an array or not\r\n                function pushOrConcat(base, toPush) {\r\n                    if (toPush) {\r\n                        if (helpers.isArray(toPush)) {\r\n                            // base = base.concat(toPush);\r\n                            Array.prototype.push.apply(base, toPush);\r\n                        } else {\r\n                            base.push(toPush);\r\n                        }\r\n                    }\r\n\r\n                    return base;\r\n                }\r\n\r\n                // Private helper to create a tooltip item model\r\n                // @param element : the chart element (point, arc, bar) to create the tooltip item for\r\n                // @return : new tooltip item\r\n                function createTooltipItem(element) {\r\n                    var xScale = element._xScale;\r\n                    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\r\n                    var index = element._index;\r\n                    var datasetIndex = element._datasetIndex;\r\n\r\n                    return {\r\n                        xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\r\n                        yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\r\n                        index: index,\r\n                        datasetIndex: datasetIndex,\r\n                        x: element._model.x,\r\n                        y: element._model.y\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Helper to get the reset model for the tooltip\r\n                 * @param tooltipOpts {Object} the tooltip options\r\n                 */\r\n                function getBaseModel(tooltipOpts) {\r\n                    var globalDefaults = defaults.global;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n\r\n                    return {\r\n                        // Positioning\r\n                        xPadding: tooltipOpts.xPadding,\r\n                        yPadding: tooltipOpts.yPadding,\r\n                        xAlign: tooltipOpts.xAlign,\r\n                        yAlign: tooltipOpts.yAlign,\r\n\r\n                        // Body\r\n                        bodyFontColor: tooltipOpts.bodyFontColor,\r\n                        _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\r\n                        _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\r\n                        _bodyAlign: tooltipOpts.bodyAlign,\r\n                        bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\r\n                        bodySpacing: tooltipOpts.bodySpacing,\r\n\r\n                        // Title\r\n                        titleFontColor: tooltipOpts.titleFontColor,\r\n                        _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\r\n                        _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\r\n                        titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\r\n                        _titleAlign: tooltipOpts.titleAlign,\r\n                        titleSpacing: tooltipOpts.titleSpacing,\r\n                        titleMarginBottom: tooltipOpts.titleMarginBottom,\r\n\r\n                        // Footer\r\n                        footerFontColor: tooltipOpts.footerFontColor,\r\n                        _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\r\n                        _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\r\n                        footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\r\n                        _footerAlign: tooltipOpts.footerAlign,\r\n                        footerSpacing: tooltipOpts.footerSpacing,\r\n                        footerMarginTop: tooltipOpts.footerMarginTop,\r\n\r\n                        // Appearance\r\n                        caretSize: tooltipOpts.caretSize,\r\n                        cornerRadius: tooltipOpts.cornerRadius,\r\n                        backgroundColor: tooltipOpts.backgroundColor,\r\n                        opacity: 0,\r\n                        legendColorBackground: tooltipOpts.multiKeyBackground,\r\n                        displayColors: tooltipOpts.displayColors,\r\n                        borderColor: tooltipOpts.borderColor,\r\n                        borderWidth: tooltipOpts.borderWidth\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Get the size of the tooltip\r\n                 */\r\n                function getTooltipSize(tooltip, model) {\r\n                    var ctx = tooltip._chart.ctx;\r\n\r\n                    var height = model.yPadding * 2; // Tooltip Padding\r\n                    var width = 0;\r\n\r\n                    // Count of all lines in the body\r\n                    var body = model.body;\r\n                    var combinedBodyLength = body.reduce(function(count, bodyItem) {\r\n                        return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\r\n                    }, 0);\r\n                    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\r\n\r\n                    var titleLineCount = model.title.length;\r\n                    var footerLineCount = model.footer.length;\r\n                    var titleFontSize = model.titleFontSize;\r\n                    var bodyFontSize = model.bodyFontSize;\r\n                    var footerFontSize = model.footerFontSize;\r\n\r\n                    height += titleLineCount * titleFontSize; // Title Lines\r\n                    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\r\n                    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\r\n                    height += combinedBodyLength * bodyFontSize; // Body Lines\r\n                    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\r\n                    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\r\n                    height += footerLineCount * (footerFontSize); // Footer Lines\r\n                    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\r\n\r\n                    // Title width\r\n                    var widthPadding = 0;\r\n                    var maxLineWidth = function(line) {\r\n                        width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n                    };\r\n\r\n                    ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\r\n                    helpers.each(model.title, maxLineWidth);\r\n\r\n                    // Body width\r\n                    ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\r\n                    helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\r\n\r\n                    // Body lines may include some extra width due to the color box\r\n                    widthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\r\n                    helpers.each(body, function(bodyItem) {\r\n                        helpers.each(bodyItem.before, maxLineWidth);\r\n                        helpers.each(bodyItem.lines, maxLineWidth);\r\n                        helpers.each(bodyItem.after, maxLineWidth);\r\n                    });\r\n\r\n                    // Reset back to 0\r\n                    widthPadding = 0;\r\n\r\n                    // Footer width\r\n                    ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\r\n                    helpers.each(model.footer, maxLineWidth);\r\n\r\n                    // Add padding\r\n                    width += 2 * model.xPadding;\r\n\r\n                    return {\r\n                        width: width,\r\n                        height: height\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Helper to get the alignment of a tooltip given the size\r\n                 */\r\n                function determineAlignment(tooltip, size) {\r\n                    var model = tooltip._model;\r\n                    var chart = tooltip._chart;\r\n                    var chartArea = tooltip._chart.chartArea;\r\n                    var xAlign = 'center';\r\n                    var yAlign = 'center';\r\n\r\n                    if (model.y < size.height) {\r\n                        yAlign = 'top';\r\n                    } else if (model.y > (chart.height - size.height)) {\r\n                        yAlign = 'bottom';\r\n                    }\r\n\r\n                    var lf, rf; // functions to determine left, right alignment\r\n                    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\r\n                    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\r\n                    var midX = (chartArea.left + chartArea.right) / 2;\r\n                    var midY = (chartArea.top + chartArea.bottom) / 2;\r\n\r\n                    if (yAlign === 'center') {\r\n                        lf = function(x) {\r\n                            return x <= midX;\r\n                        };\r\n                        rf = function(x) {\r\n                            return x > midX;\r\n                        };\r\n                    } else {\r\n                        lf = function(x) {\r\n                            return x <= (size.width / 2);\r\n                        };\r\n                        rf = function(x) {\r\n                            return x >= (chart.width - (size.width / 2));\r\n                        };\r\n                    }\r\n\r\n                    olf = function(x) {\r\n                        return x + size.width + model.caretSize + model.caretPadding > chart.width;\r\n                    };\r\n                    orf = function(x) {\r\n                        return x - size.width - model.caretSize - model.caretPadding < 0;\r\n                    };\r\n                    yf = function(y) {\r\n                        return y <= midY ? 'top' : 'bottom';\r\n                    };\r\n\r\n                    if (lf(model.x)) {\r\n                        xAlign = 'left';\r\n\r\n                        // Is tooltip too wide and goes over the right side of the chart.?\r\n                        if (olf(model.x)) {\r\n                            xAlign = 'center';\r\n                            yAlign = yf(model.y);\r\n                        }\r\n                    } else if (rf(model.x)) {\r\n                        xAlign = 'right';\r\n\r\n                        // Is tooltip too wide and goes outside left edge of canvas?\r\n                        if (orf(model.x)) {\r\n                            xAlign = 'center';\r\n                            yAlign = yf(model.y);\r\n                        }\r\n                    }\r\n\r\n                    var opts = tooltip._options;\r\n                    return {\r\n                        xAlign: opts.xAlign ? opts.xAlign : xAlign,\r\n                        yAlign: opts.yAlign ? opts.yAlign : yAlign\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\r\n                 */\r\n                function getBackgroundPoint(vm, size, alignment, chart) {\r\n                    // Background Position\r\n                    var x = vm.x;\r\n                    var y = vm.y;\r\n\r\n                    var caretSize = vm.caretSize;\r\n                    var caretPadding = vm.caretPadding;\r\n                    var cornerRadius = vm.cornerRadius;\r\n                    var xAlign = alignment.xAlign;\r\n                    var yAlign = alignment.yAlign;\r\n                    var paddingAndSize = caretSize + caretPadding;\r\n                    var radiusAndPadding = cornerRadius + caretPadding;\r\n\r\n                    if (xAlign === 'right') {\r\n                        x -= size.width;\r\n                    } else if (xAlign === 'center') {\r\n                        x -= (size.width / 2);\r\n                        if (x + size.width > chart.width) {\r\n                            x = chart.width - size.width;\r\n                        }\r\n                        if (x < 0) {\r\n                            x = 0;\r\n                        }\r\n                    }\r\n\r\n                    if (yAlign === 'top') {\r\n                        y += paddingAndSize;\r\n                    } else if (yAlign === 'bottom') {\r\n                        y -= size.height + paddingAndSize;\r\n                    } else {\r\n                        y -= (size.height / 2);\r\n                    }\r\n\r\n                    if (yAlign === 'center') {\r\n                        if (xAlign === 'left') {\r\n                            x += paddingAndSize;\r\n                        } else if (xAlign === 'right') {\r\n                            x -= paddingAndSize;\r\n                        }\r\n                    } else if (xAlign === 'left') {\r\n                        x -= radiusAndPadding;\r\n                    } else if (xAlign === 'right') {\r\n                        x += radiusAndPadding;\r\n                    }\r\n\r\n                    return {\r\n                        x: x,\r\n                        y: y\r\n                    };\r\n                }\r\n\r\n                Chart.Tooltip = Element.extend({\r\n                    initialize: function() {\r\n                        this._model = getBaseModel(this._options);\r\n                        this._lastActive = [];\r\n                    },\r\n\r\n                    // Get the title\r\n                    // Args are: (tooltipItem, data)\r\n                    getTitle: function() {\r\n                        var me = this;\r\n                        var opts = me._options;\r\n                        var callbacks = opts.callbacks;\r\n\r\n                        var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\r\n                        var title = callbacks.title.apply(me, arguments);\r\n                        var afterTitle = callbacks.afterTitle.apply(me, arguments);\r\n\r\n                        var lines = [];\r\n                        lines = pushOrConcat(lines, beforeTitle);\r\n                        lines = pushOrConcat(lines, title);\r\n                        lines = pushOrConcat(lines, afterTitle);\r\n\r\n                        return lines;\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getBeforeBody: function() {\r\n                        var lines = this._options.callbacks.beforeBody.apply(this, arguments);\r\n                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getBody: function(tooltipItems, data) {\r\n                        var me = this;\r\n                        var callbacks = me._options.callbacks;\r\n                        var bodyItems = [];\r\n\r\n                        helpers.each(tooltipItems, function(tooltipItem) {\r\n                            var bodyItem = {\r\n                                before: [],\r\n                                lines: [],\r\n                                after: []\r\n                            };\r\n                            pushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\r\n                            pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\r\n                            pushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\r\n\r\n                            bodyItems.push(bodyItem);\r\n                        });\r\n\r\n                        return bodyItems;\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getAfterBody: function() {\r\n                        var lines = this._options.callbacks.afterBody.apply(this, arguments);\r\n                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n                    },\r\n\r\n                    // Get the footer and beforeFooter and afterFooter lines\r\n                    // Args are: (tooltipItem, data)\r\n                    getFooter: function() {\r\n                        var me = this;\r\n                        var callbacks = me._options.callbacks;\r\n\r\n                        var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\r\n                        var footer = callbacks.footer.apply(me, arguments);\r\n                        var afterFooter = callbacks.afterFooter.apply(me, arguments);\r\n\r\n                        var lines = [];\r\n                        lines = pushOrConcat(lines, beforeFooter);\r\n                        lines = pushOrConcat(lines, footer);\r\n                        lines = pushOrConcat(lines, afterFooter);\r\n\r\n                        return lines;\r\n                    },\r\n\r\n                    update: function(changed) {\r\n                        var me = this;\r\n                        var opts = me._options;\r\n\r\n                        // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\r\n                        // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\r\n                        // which breaks any animations.\r\n                        var existingModel = me._model;\r\n                        var model = me._model = getBaseModel(opts);\r\n                        var active = me._active;\r\n\r\n                        var data = me._data;\r\n\r\n                        // In the case where active.length === 0 we need to keep these at existing values for good animations\r\n                        var alignment = {\r\n                            xAlign: existingModel.xAlign,\r\n                            yAlign: existingModel.yAlign\r\n                        };\r\n                        var backgroundPoint = {\r\n                            x: existingModel.x,\r\n                            y: existingModel.y\r\n                        };\r\n                        var tooltipSize = {\r\n                            width: existingModel.width,\r\n                            height: existingModel.height\r\n                        };\r\n                        var tooltipPosition = {\r\n                            x: existingModel.caretX,\r\n                            y: existingModel.caretY\r\n                        };\r\n\r\n                        var i, len;\r\n\r\n                        if (active.length) {\r\n                            model.opacity = 1;\r\n\r\n                            var labelColors = [];\r\n                            var labelTextColors = [];\r\n                            tooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\r\n\r\n                            var tooltipItems = [];\r\n                            for (i = 0, len = active.length; i < len; ++i) {\r\n                                tooltipItems.push(createTooltipItem(active[i]));\r\n                            }\r\n\r\n                            // If the user provided a filter function, use it to modify the tooltip items\r\n                            if (opts.filter) {\r\n                                tooltipItems = tooltipItems.filter(function(a) {\r\n                                    return opts.filter(a, data);\r\n                                });\r\n                            }\r\n\r\n                            // If the user provided a sorting function, use it to modify the tooltip items\r\n                            if (opts.itemSort) {\r\n                                tooltipItems = tooltipItems.sort(function(a, b) {\r\n                                    return opts.itemSort(a, b, data);\r\n                                });\r\n                            }\r\n\r\n                            // Determine colors for boxes\r\n                            helpers.each(tooltipItems, function(tooltipItem) {\r\n                                labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\r\n                                labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\r\n                            });\r\n\r\n                            // Build the Text Lines\r\n                            model.title = me.getTitle(tooltipItems, data);\r\n                            model.beforeBody = me.getBeforeBody(tooltipItems, data);\r\n                            model.body = me.getBody(tooltipItems, data);\r\n                            model.afterBody = me.getAfterBody(tooltipItems, data);\r\n                            model.footer = me.getFooter(tooltipItems, data);\r\n\r\n                            // Initial positioning and colors\r\n                            model.x = Math.round(tooltipPosition.x);\r\n                            model.y = Math.round(tooltipPosition.y);\r\n                            model.caretPadding = opts.caretPadding;\r\n                            model.labelColors = labelColors;\r\n                            model.labelTextColors = labelTextColors;\r\n\r\n                            // data points\r\n                            model.dataPoints = tooltipItems;\r\n\r\n                            // We need to determine alignment of the tooltip\r\n                            tooltipSize = getTooltipSize(this, model);\r\n                            alignment = determineAlignment(this, tooltipSize);\r\n                            // Final Size and Position\r\n                            backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\r\n                        } else {\r\n                            model.opacity = 0;\r\n                        }\r\n\r\n                        model.xAlign = alignment.xAlign;\r\n                        model.yAlign = alignment.yAlign;\r\n                        model.x = backgroundPoint.x;\r\n                        model.y = backgroundPoint.y;\r\n                        model.width = tooltipSize.width;\r\n                        model.height = tooltipSize.height;\r\n\r\n                        // Point where the caret on the tooltip points to\r\n                        model.caretX = tooltipPosition.x;\r\n                        model.caretY = tooltipPosition.y;\r\n\r\n                        me._model = model;\r\n\r\n                        if (changed && opts.custom) {\r\n                            opts.custom.call(me, model);\r\n                        }\r\n\r\n                        return me;\r\n                    },\r\n                    drawCaret: function(tooltipPoint, size) {\r\n                        var ctx = this._chart.ctx;\r\n                        var vm = this._view;\r\n                        var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\r\n\r\n                        ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n                        ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n                        ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n                    },\r\n                    getCaretPosition: function(tooltipPoint, size, vm) {\r\n                        var x1, x2, x3, y1, y2, y3;\r\n                        var caretSize = vm.caretSize;\r\n                        var cornerRadius = vm.cornerRadius;\r\n                        var xAlign = vm.xAlign;\r\n                        var yAlign = vm.yAlign;\r\n                        var ptX = tooltipPoint.x;\r\n                        var ptY = tooltipPoint.y;\r\n                        var width = size.width;\r\n                        var height = size.height;\r\n\r\n                        if (yAlign === 'center') {\r\n                            y2 = ptY + (height / 2);\r\n\r\n                            if (xAlign === 'left') {\r\n                                x1 = ptX;\r\n                                x2 = x1 - caretSize;\r\n                                x3 = x1;\r\n\r\n                                y1 = y2 + caretSize;\r\n                                y3 = y2 - caretSize;\r\n                            } else {\r\n                                x1 = ptX + width;\r\n                                x2 = x1 + caretSize;\r\n                                x3 = x1;\r\n\r\n                                y1 = y2 - caretSize;\r\n                                y3 = y2 + caretSize;\r\n                            }\r\n                        } else {\r\n                            if (xAlign === 'left') {\r\n                                x2 = ptX + cornerRadius + (caretSize);\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            } else if (xAlign === 'right') {\r\n                                x2 = ptX + width - cornerRadius - caretSize;\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            } else {\r\n                                x2 = vm.caretX;\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            }\r\n                            if (yAlign === 'top') {\r\n                                y1 = ptY;\r\n                                y2 = y1 - caretSize;\r\n                                y3 = y1;\r\n                            } else {\r\n                                y1 = ptY + height;\r\n                                y2 = y1 + caretSize;\r\n                                y3 = y1;\r\n                                // invert drawing order\r\n                                var tmp = x3;\r\n                                x3 = x1;\r\n                                x1 = tmp;\r\n                            }\r\n                        }\r\n                        return { x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3 };\r\n                    },\r\n                    drawTitle: function(pt, vm, ctx, opacity) {\r\n                        var title = vm.title;\r\n\r\n                        if (title.length) {\r\n                            ctx.textAlign = vm._titleAlign;\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            var titleFontSize = vm.titleFontSize;\r\n                            var titleSpacing = vm.titleSpacing;\r\n\r\n                            ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\r\n                            ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\r\n                            var i, len;\r\n                            for (i = 0, len = title.length; i < len; ++i) {\r\n                                ctx.fillText(title[i], pt.x, pt.y);\r\n                                pt.y += titleFontSize + titleSpacing; // Line Height and spacing\r\n\r\n                                if (i + 1 === title.length) {\r\n                                    pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    drawBody: function(pt, vm, ctx, opacity) {\r\n                        var bodyFontSize = vm.bodyFontSize;\r\n                        var bodySpacing = vm.bodySpacing;\r\n                        var body = vm.body;\r\n\r\n                        ctx.textAlign = vm._bodyAlign;\r\n                        ctx.textBaseline = 'top';\r\n                        ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\r\n                        // Before Body\r\n                        var xLinePadding = 0;\r\n                        var fillLineOfText = function(line) {\r\n                            ctx.fillText(line, pt.x + xLinePadding, pt.y);\r\n                            pt.y += bodyFontSize + bodySpacing;\r\n                        };\r\n\r\n                        // Before body lines\r\n                        ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\r\n                        helpers.each(vm.beforeBody, fillLineOfText);\r\n\r\n                        var drawColorBoxes = vm.displayColors;\r\n                        xLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\r\n\r\n                        // Draw body lines now\r\n                        helpers.each(body, function(bodyItem, i) {\r\n                            var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\r\n                            ctx.fillStyle = textColor;\r\n                            helpers.each(bodyItem.before, fillLineOfText);\r\n\r\n                            helpers.each(bodyItem.lines, function(line) {\r\n                                // Draw Legend-like boxes if needed\r\n                                if (drawColorBoxes) {\r\n                                    // Fill a white rect so that colours merge nicely if the opacity is < 1\r\n                                    ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\r\n                                    ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n                                    // Border\r\n                                    ctx.lineWidth = 1;\r\n                                    ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\r\n                                    ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n                                    // Inner square\r\n                                    ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\r\n                                    ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\r\n                                    ctx.fillStyle = textColor;\r\n                                }\r\n\r\n                                fillLineOfText(line);\r\n                            });\r\n\r\n                            helpers.each(bodyItem.after, fillLineOfText);\r\n                        });\r\n\r\n                        // Reset back to 0 for after body\r\n                        xLinePadding = 0;\r\n\r\n                        // After body lines\r\n                        helpers.each(vm.afterBody, fillLineOfText);\r\n                        pt.y -= bodySpacing; // Remove last body spacing\r\n                    },\r\n                    drawFooter: function(pt, vm, ctx, opacity) {\r\n                        var footer = vm.footer;\r\n\r\n                        if (footer.length) {\r\n                            pt.y += vm.footerMarginTop;\r\n\r\n                            ctx.textAlign = vm._footerAlign;\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\r\n                            ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\r\n                            helpers.each(footer, function(line) {\r\n                                ctx.fillText(line, pt.x, pt.y);\r\n                                pt.y += vm.footerFontSize + vm.footerSpacing;\r\n                            });\r\n                        }\r\n                    },\r\n                    drawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\r\n                        ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\r\n                        ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\r\n                        ctx.lineWidth = vm.borderWidth;\r\n                        var xAlign = vm.xAlign;\r\n                        var yAlign = vm.yAlign;\r\n                        var x = pt.x;\r\n                        var y = pt.y;\r\n                        var width = tooltipSize.width;\r\n                        var height = tooltipSize.height;\r\n                        var radius = vm.cornerRadius;\r\n\r\n                        ctx.beginPath();\r\n                        ctx.moveTo(x + radius, y);\r\n                        if (yAlign === 'top') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + width - radius, y);\r\n                        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n                        if (yAlign === 'center' && xAlign === 'right') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + width, y + height - radius);\r\n                        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n                        if (yAlign === 'bottom') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + radius, y + height);\r\n                        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n                        if (yAlign === 'center' && xAlign === 'left') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x, y + radius);\r\n                        ctx.quadraticCurveTo(x, y, x + radius, y);\r\n                        ctx.closePath();\r\n\r\n                        ctx.fill();\r\n\r\n                        if (vm.borderWidth > 0) {\r\n                            ctx.stroke();\r\n                        }\r\n                    },\r\n                    draw: function() {\r\n                        var ctx = this._chart.ctx;\r\n                        var vm = this._view;\r\n\r\n                        if (vm.opacity === 0) {\r\n                            return;\r\n                        }\r\n\r\n                        var tooltipSize = {\r\n                            width: vm.width,\r\n                            height: vm.height\r\n                        };\r\n                        var pt = {\r\n                            x: vm.x,\r\n                            y: vm.y\r\n                        };\r\n\r\n                        // IE11/Edge does not like very small opacities, so snap to 0\r\n                        var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\r\n\r\n                        // Truthy/falsey value for empty tooltip\r\n                        var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\r\n\r\n                        if (this._options.enabled && hasTooltipContent) {\r\n                            // Draw Background\r\n                            this.drawBackground(pt, vm, ctx, tooltipSize, opacity);\r\n\r\n                            // Draw Title, Body, and Footer\r\n                            pt.x += vm.xPadding;\r\n                            pt.y += vm.yPadding;\r\n\r\n                            // Titles\r\n                            this.drawTitle(pt, vm, ctx, opacity);\r\n\r\n                            // Body\r\n                            this.drawBody(pt, vm, ctx, opacity);\r\n\r\n                            // Footer\r\n                            this.drawFooter(pt, vm, ctx, opacity);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Handle an event\r\n                     * @private\r\n                     * @param {IEvent} event - The event to handle\r\n                     * @returns {Boolean} true if the tooltip changed\r\n                     */\r\n                    handleEvent: function(e) {\r\n                        var me = this;\r\n                        var options = me._options;\r\n                        var changed = false;\r\n\r\n                        me._lastActive = me._lastActive || [];\r\n\r\n                        // Find Active Elements for tooltips\r\n                        if (e.type === 'mouseout') {\r\n                            me._active = [];\r\n                        } else {\r\n                            me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\r\n                        }\r\n\r\n                        // Remember Last Actives\r\n                        changed = !helpers.arrayEquals(me._active, me._lastActive);\r\n\r\n                        // Only handle target event on tooltip change\r\n                        if (changed) {\r\n                            me._lastActive = me._active;\r\n\r\n                            if (options.enabled || options.custom) {\r\n                                me._eventPosition = {\r\n                                    x: e.x,\r\n                                    y: e.y\r\n                                };\r\n\r\n                                me.update(true);\r\n                                me.pivot();\r\n                            }\r\n                        }\r\n\r\n                        return changed;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * @namespace Chart.Tooltip.positioners\r\n                 */\r\n                Chart.Tooltip.positioners = {\r\n                    /**\r\n                     * Average mode places the tooltip at the average position of the elements shown\r\n                     * @function Chart.Tooltip.positioners.average\r\n                     * @param elements {ChartElement[]} the elements being displayed in the tooltip\r\n                     * @returns {Point} tooltip position\r\n                     */\r\n                    average: function(elements) {\r\n                        if (!elements.length) {\r\n                            return false;\r\n                        }\r\n\r\n                        var i, len;\r\n                        var x = 0;\r\n                        var y = 0;\r\n                        var count = 0;\r\n\r\n                        for (i = 0, len = elements.length; i < len; ++i) {\r\n                            var el = elements[i];\r\n                            if (el && el.hasValue()) {\r\n                                var pos = el.tooltipPosition();\r\n                                x += pos.x;\r\n                                y += pos.y;\r\n                                ++count;\r\n                            }\r\n                        }\r\n\r\n                        return {\r\n                            x: Math.round(x / count),\r\n                            y: Math.round(y / count)\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Gets the tooltip position nearest of the item nearest to the event position\r\n                     * @function Chart.Tooltip.positioners.nearest\r\n                     * @param elements {Chart.Element[]} the tooltip elements\r\n                     * @param eventPosition {Point} the position of the event in canvas coordinates\r\n                     * @returns {Point} the tooltip position\r\n                     */\r\n                    nearest: function(elements, eventPosition) {\r\n                        var x = eventPosition.x;\r\n                        var y = eventPosition.y;\r\n                        var minDistance = Number.POSITIVE_INFINITY;\r\n                        var i, len, nearestElement;\r\n\r\n                        for (i = 0, len = elements.length; i < len; ++i) {\r\n                            var el = elements[i];\r\n                            if (el && el.hasValue()) {\r\n                                var center = el.getCenterPoint();\r\n                                var d = helpers.distanceBetweenPoints(eventPosition, center);\r\n\r\n                                if (d < minDistance) {\r\n                                    minDistance = d;\r\n                                    nearestElement = el;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (nearestElement) {\r\n                            var tp = nearestElement.tooltipPosition();\r\n                            x = tp.x;\r\n                            y = tp.y;\r\n                        }\r\n\r\n                        return {\r\n                            x: x,\r\n                            y: y\r\n                        };\r\n                    }\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 27: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    arc: {\r\n                        backgroundColor: defaults.global.defaultColor,\r\n                        borderColor: '#fff',\r\n                        borderWidth: 2\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = Element.extend({\r\n                inLabelRange: function(mouseX) {\r\n                    var vm = this._view;\r\n\r\n                    if (vm) {\r\n                        return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                inRange: function(chartX, chartY) {\r\n                    var vm = this._view;\r\n\r\n                    if (vm) {\r\n                        var pointRelativePosition = helpers.getAngleFromPoint(vm, { x: chartX, y: chartY });\r\n                        var angle = pointRelativePosition.angle;\r\n                        var distance = pointRelativePosition.distance;\r\n\r\n                        // Sanitise angle range\r\n                        var startAngle = vm.startAngle;\r\n                        var endAngle = vm.endAngle;\r\n                        while (endAngle < startAngle) {\r\n                            endAngle += 2.0 * Math.PI;\r\n                        }\r\n                        while (angle > endAngle) {\r\n                            angle -= 2.0 * Math.PI;\r\n                        }\r\n                        while (angle < startAngle) {\r\n                            angle += 2.0 * Math.PI;\r\n                        }\r\n\r\n                        // Check if within the range of the open/close angle\r\n                        var betweenAngles = (angle >= startAngle && angle <= endAngle);\r\n                        var withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\r\n\r\n                        return (betweenAngles && withinRadius);\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\r\n                    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\r\n                    return {\r\n                        x: vm.x + Math.cos(halfAngle) * halfRadius,\r\n                        y: vm.y + Math.sin(halfAngle) * halfRadius\r\n                    };\r\n                },\r\n\r\n                getArea: function() {\r\n                    var vm = this._view;\r\n                    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\r\n                    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\r\n\r\n                    return {\r\n                        x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\r\n                        y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\r\n                    };\r\n                },\r\n\r\n                draw: function() {\r\n                    var ctx = this._chart.ctx;\r\n                    var vm = this._view;\r\n                    var sA = vm.startAngle;\r\n                    var eA = vm.endAngle;\r\n\r\n                    ctx.beginPath();\r\n\r\n                    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\r\n                    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\r\n\r\n                    ctx.closePath();\r\n                    ctx.strokeStyle = vm.borderColor;\r\n                    ctx.lineWidth = vm.borderWidth;\r\n\r\n                    ctx.fillStyle = vm.backgroundColor;\r\n\r\n                    ctx.fill();\r\n                    ctx.lineJoin = 'bevel';\r\n\r\n                    if (vm.borderWidth) {\r\n                        ctx.stroke();\r\n                    }\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 28: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            var globalDefaults = defaults.global;\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    line: {\r\n                        tension: 0.4,\r\n                        backgroundColor: globalDefaults.defaultColor,\r\n                        borderWidth: 3,\r\n                        borderColor: globalDefaults.defaultColor,\r\n                        borderCapStyle: 'butt',\r\n                        borderDash: [],\r\n                        borderDashOffset: 0.0,\r\n                        borderJoinStyle: 'miter',\r\n                        capBezierPoints: true,\r\n                        fill: true, // do we fill in the area between the line and its base axis\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = Element.extend({\r\n                draw: function() {\r\n                    var me = this;\r\n                    var vm = me._view;\r\n                    var ctx = me._chart.ctx;\r\n                    var spanGaps = vm.spanGaps;\r\n                    var points = me._children.slice(); // clone array\r\n                    var globalOptionLineElements = globalDefaults.elements.line;\r\n                    var lastDrawnIndex = -1;\r\n                    var index, current, previous, currentVM;\r\n\r\n                    // If we are looping, adding the first point again\r\n                    if (me._loop && points.length) {\r\n                        points.push(points[0]);\r\n                    }\r\n\r\n                    ctx.save();\r\n\r\n                    // Stroke Line Options\r\n                    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\r\n\r\n                    // IE 9 and 10 do not support line dash\r\n                    if (ctx.setLineDash) {\r\n                        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\r\n                    }\r\n\r\n                    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\r\n                    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\r\n                    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\r\n                    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\r\n\r\n                    // Stroke Line\r\n                    ctx.beginPath();\r\n                    lastDrawnIndex = -1;\r\n\r\n                    for (index = 0; index < points.length; ++index) {\r\n                        current = points[index];\r\n                        previous = helpers.previousItem(points, index);\r\n                        currentVM = current._view;\r\n\r\n                        // First point moves to it's starting position no matter what\r\n                        if (index === 0) {\r\n                            if (!currentVM.skip) {\r\n                                ctx.moveTo(currentVM.x, currentVM.y);\r\n                                lastDrawnIndex = index;\r\n                            }\r\n                        } else {\r\n                            previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\r\n\r\n                            if (!currentVM.skip) {\r\n                                if ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\r\n                                    // There was a gap and this is the first point after the gap\r\n                                    ctx.moveTo(currentVM.x, currentVM.y);\r\n                                } else {\r\n                                    // Line to next point\r\n                                    helpers.canvas.lineTo(ctx, previous._view, current._view);\r\n                                }\r\n                                lastDrawnIndex = index;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    ctx.stroke();\r\n                    ctx.restore();\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 29: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            var defaultColor = defaults.global.defaultColor;\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    point: {\r\n                        radius: 3,\r\n                        pointStyle: 'circle',\r\n                        backgroundColor: defaultColor,\r\n                        borderColor: defaultColor,\r\n                        borderWidth: 1,\r\n                        // Hover\r\n                        hitRadius: 1,\r\n                        hoverRadius: 4,\r\n                        hoverBorderWidth: 1\r\n                    }\r\n                }\r\n            });\r\n\r\n            function xRange(mouseX) {\r\n                var vm = this._view;\r\n                return vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\r\n            }\r\n\r\n            function yRange(mouseY) {\r\n                var vm = this._view;\r\n                return vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\r\n            }\r\n\r\n            module.exports = Element.extend({\r\n                inRange: function(mouseX, mouseY) {\r\n                    var vm = this._view;\r\n                    return vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\r\n                },\r\n\r\n                inLabelRange: xRange,\r\n                inXRange: xRange,\r\n                inYRange: yRange,\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y\r\n                    };\r\n                },\r\n\r\n                getArea: function() {\r\n                    return Math.PI * Math.pow(this._view.radius, 2);\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y,\r\n                        padding: vm.radius + vm.borderWidth\r\n                    };\r\n                },\r\n\r\n                draw: function(chartArea) {\r\n                    var vm = this._view;\r\n                    var model = this._model;\r\n                    var ctx = this._chart.ctx;\r\n                    var pointStyle = vm.pointStyle;\r\n                    var radius = vm.radius;\r\n                    var x = vm.x;\r\n                    var y = vm.y;\r\n                    var color = helpers.color;\r\n                    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\r\n                    var ratio = 0;\r\n\r\n                    if (vm.skip) {\r\n                        return;\r\n                    }\r\n\r\n                    ctx.strokeStyle = vm.borderColor || defaultColor;\r\n                    ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\r\n                    ctx.fillStyle = vm.backgroundColor || defaultColor;\r\n\r\n                    // Cliping for Points.\r\n                    // going out from inner charArea?\r\n                    if ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\r\n                        // Point fade out\r\n                        if (model.x < chartArea.left) {\r\n                            ratio = (x - model.x) / (chartArea.left - model.x);\r\n                        } else if (chartArea.right * errMargin < model.x) {\r\n                            ratio = (model.x - x) / (model.x - chartArea.right);\r\n                        } else if (model.y < chartArea.top) {\r\n                            ratio = (y - model.y) / (chartArea.top - model.y);\r\n                        } else if (chartArea.bottom * errMargin < model.y) {\r\n                            ratio = (model.y - y) / (model.y - chartArea.bottom);\r\n                        }\r\n                        ratio = Math.round(ratio * 100) / 100;\r\n                        ctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\r\n                        ctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\r\n                    }\r\n\r\n                    helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 30: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    rectangle: {\r\n                        backgroundColor: defaults.global.defaultColor,\r\n                        borderColor: defaults.global.defaultColor,\r\n                        borderSkipped: 'bottom',\r\n                        borderWidth: 0\r\n                    }\r\n                }\r\n            });\r\n\r\n            function isVertical(bar) {\r\n                return bar._view.width !== undefined;\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the bounds of the bar regardless of the orientation\r\n             * @param bar {Chart.Element.Rectangle} the bar\r\n             * @return {Bounds} bounds of the bar\r\n             * @private\r\n             */\r\n            function getBarBounds(bar) {\r\n                var vm = bar._view;\r\n                var x1, x2, y1, y2;\r\n\r\n                if (isVertical(bar)) {\r\n                    // vertical\r\n                    var halfWidth = vm.width / 2;\r\n                    x1 = vm.x - halfWidth;\r\n                    x2 = vm.x + halfWidth;\r\n                    y1 = Math.min(vm.y, vm.base);\r\n                    y2 = Math.max(vm.y, vm.base);\r\n                } else {\r\n                    // horizontal bar\r\n                    var halfHeight = vm.height / 2;\r\n                    x1 = Math.min(vm.x, vm.base);\r\n                    x2 = Math.max(vm.x, vm.base);\r\n                    y1 = vm.y - halfHeight;\r\n                    y2 = vm.y + halfHeight;\r\n                }\r\n\r\n                return {\r\n                    left: x1,\r\n                    top: y1,\r\n                    right: x2,\r\n                    bottom: y2\r\n                };\r\n            }\r\n\r\n            module.exports = Element.extend({\r\n                draw: function() {\r\n                    var ctx = this._chart.ctx;\r\n                    var vm = this._view;\r\n                    var left, right, top, bottom, signX, signY, borderSkipped;\r\n                    var borderWidth = vm.borderWidth;\r\n\r\n                    if (!vm.horizontal) {\r\n                        // bar\r\n                        left = vm.x - vm.width / 2;\r\n                        right = vm.x + vm.width / 2;\r\n                        top = vm.y;\r\n                        bottom = vm.base;\r\n                        signX = 1;\r\n                        signY = bottom > top ? 1 : -1;\r\n                        borderSkipped = vm.borderSkipped || 'bottom';\r\n                    } else {\r\n                        // horizontal bar\r\n                        left = vm.base;\r\n                        right = vm.x;\r\n                        top = vm.y - vm.height / 2;\r\n                        bottom = vm.y + vm.height / 2;\r\n                        signX = right > left ? 1 : -1;\r\n                        signY = 1;\r\n                        borderSkipped = vm.borderSkipped || 'left';\r\n                    }\r\n\r\n                    // Canvas doesn't allow us to stroke inside the width so we can\r\n                    // adjust the sizes to fit if we're setting a stroke on the line\r\n                    if (borderWidth) {\r\n                        // borderWidth shold be less than bar width and bar height.\r\n                        var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n                        borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n                        var halfStroke = borderWidth / 2;\r\n                        // Adjust borderWidth when bar top position is near vm.base(zero).\r\n                        var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n                        var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n                        var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n                        var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n                        // not become a vertical line?\r\n                        if (borderLeft !== borderRight) {\r\n                            top = borderTop;\r\n                            bottom = borderBottom;\r\n                        }\r\n                        // not become a horizontal line?\r\n                        if (borderTop !== borderBottom) {\r\n                            left = borderLeft;\r\n                            right = borderRight;\r\n                        }\r\n                    }\r\n\r\n                    ctx.beginPath();\r\n                    ctx.fillStyle = vm.backgroundColor;\r\n                    ctx.strokeStyle = vm.borderColor;\r\n                    ctx.lineWidth = borderWidth;\r\n\r\n                    // Corner points, from bottom-left to bottom-right clockwise\r\n                    // | 1 2 |\r\n                    // | 0 3 |\r\n                    var corners = [\r\n                        [left, bottom],\r\n                        [left, top],\r\n                        [right, top],\r\n                        [right, bottom]\r\n                    ];\r\n\r\n                    // Find first (starting) corner with fallback to 'bottom'\r\n                    var borders = ['bottom', 'left', 'top', 'right'];\r\n                    var startCorner = borders.indexOf(borderSkipped, 0);\r\n                    if (startCorner === -1) {\r\n                        startCorner = 0;\r\n                    }\r\n\r\n                    function cornerAt(index) {\r\n                        return corners[(startCorner + index) % 4];\r\n                    }\r\n\r\n                    // Draw rectangle from 'startCorner'\r\n                    var corner = cornerAt(0);\r\n                    ctx.moveTo(corner[0], corner[1]);\r\n\r\n                    for (var i = 1; i < 4; i++) {\r\n                        corner = cornerAt(i);\r\n                        ctx.lineTo(corner[0], corner[1]);\r\n                    }\r\n\r\n                    ctx.fill();\r\n                    if (borderWidth) {\r\n                        ctx.stroke();\r\n                    }\r\n                },\r\n\r\n                height: function() {\r\n                    var vm = this._view;\r\n                    return vm.base - vm.y;\r\n                },\r\n\r\n                inRange: function(mouseX, mouseY) {\r\n                    var inRange = false;\r\n\r\n                    if (this._view) {\r\n                        var bounds = getBarBounds(this);\r\n                        inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                    }\r\n\r\n                    return inRange;\r\n                },\r\n\r\n                inLabelRange: function(mouseX, mouseY) {\r\n                    var me = this;\r\n                    if (!me._view) {\r\n                        return false;\r\n                    }\r\n\r\n                    var inRange = false;\r\n                    var bounds = getBarBounds(me);\r\n\r\n                    if (isVertical(me)) {\r\n                        inRange = mouseX >= bounds.left && mouseX <= bounds.right;\r\n                    } else {\r\n                        inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                    }\r\n\r\n                    return inRange;\r\n                },\r\n\r\n                inXRange: function(mouseX) {\r\n                    var bounds = getBarBounds(this);\r\n                    return mouseX >= bounds.left && mouseX <= bounds.right;\r\n                },\r\n\r\n                inYRange: function(mouseY) {\r\n                    var bounds = getBarBounds(this);\r\n                    return mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                },\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    var x, y;\r\n                    if (isVertical(this)) {\r\n                        x = vm.x;\r\n                        y = (vm.y + vm.base) / 2;\r\n                    } else {\r\n                        x = (vm.x + vm.base) / 2;\r\n                        y = vm.y;\r\n                    }\r\n\r\n                    return { x: x, y: y };\r\n                },\r\n\r\n                getArea: function() {\r\n                    var vm = this._view;\r\n                    return vm.width * Math.abs(vm.y - vm.base);\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y\r\n                    };\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17 }], 31: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = {};\r\n            module.exports.Arc = require(27);\r\n            module.exports.Line = require(28);\r\n            module.exports.Point = require(29);\r\n            module.exports.Rectangle = require(30);\r\n        }, { \"27\": 27, \"28\": 28, \"29\": 29, \"30\": 30 }], 32: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * @namespace Chart.helpers.canvas\r\n             */\r\n            var exports = module.exports = {\r\n                /**\r\n                 * Clears the entire canvas associated to the given `chart`.\r\n                 * @param {Chart} chart - The chart for which to clear the canvas.\r\n                 */\r\n                clear: function(chart) {\r\n                    chart.ctx.clearRect(0, 0, chart.width, chart.height);\r\n                },\r\n\r\n                /**\r\n                 * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\r\n                 * given size (width, height) and the same `radius` for all corners.\r\n                 * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\r\n                 * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\r\n                 * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\r\n                 * @param {Number} width - The rectangle's width.\r\n                 * @param {Number} height - The rectangle's height.\r\n                 * @param {Number} radius - The rounded amount (in pixels) for the four corners.\r\n                 * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\r\n                 */\r\n                roundedRect: function(ctx, x, y, width, height, radius) {\r\n                    if (radius) {\r\n                        var rx = Math.min(radius, width / 2);\r\n                        var ry = Math.min(radius, height / 2);\r\n\r\n                        ctx.moveTo(x + rx, y);\r\n                        ctx.lineTo(x + width - rx, y);\r\n                        ctx.quadraticCurveTo(x + width, y, x + width, y + ry);\r\n                        ctx.lineTo(x + width, y + height - ry);\r\n                        ctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\r\n                        ctx.lineTo(x + rx, y + height);\r\n                        ctx.quadraticCurveTo(x, y + height, x, y + height - ry);\r\n                        ctx.lineTo(x, y + ry);\r\n                        ctx.quadraticCurveTo(x, y, x + rx, y);\r\n                    } else {\r\n                        ctx.rect(x, y, width, height);\r\n                    }\r\n                },\r\n\r\n                drawPoint: function(ctx, style, radius, x, y) {\r\n                    var type, edgeLength, xOffset, yOffset, height, size;\r\n\r\n                    if (style && typeof style === 'object') {\r\n                        type = style.toString();\r\n                        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n                            ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    if (isNaN(radius) || radius <= 0) {\r\n                        return;\r\n                    }\r\n\r\n                    switch (style) {\r\n                        // Default includes circle\r\n                        default:\r\n                            ctx.beginPath();\r\n                            ctx.arc(x, y, radius, 0, Math.PI * 2);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'triangle':\r\n                            ctx.beginPath();\r\n                            edgeLength = 3 * radius / Math.sqrt(3);\r\n                            height = edgeLength * Math.sqrt(3) / 2;\r\n                            ctx.moveTo(x - edgeLength / 2, y + height / 3);\r\n                            ctx.lineTo(x + edgeLength / 2, y + height / 3);\r\n                            ctx.lineTo(x, y - 2 * height / 3);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'rect':\r\n                            size = 1 / Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            ctx.fillRect(x - size, y - size, 2 * size, 2 * size);\r\n                            ctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\r\n                            break;\r\n                        case 'rectRounded':\r\n                            var offset = radius / Math.SQRT2;\r\n                            var leftX = x - offset;\r\n                            var topY = y - offset;\r\n                            var sideSize = Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'rectRot':\r\n                            size = 1 / Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x - size, y);\r\n                            ctx.lineTo(x, y + size);\r\n                            ctx.lineTo(x + size, y);\r\n                            ctx.lineTo(x, y - size);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'cross':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y + radius);\r\n                            ctx.lineTo(x, y - radius);\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'crossRot':\r\n                            ctx.beginPath();\r\n                            xOffset = Math.cos(Math.PI / 4) * radius;\r\n                            yOffset = Math.sin(Math.PI / 4) * radius;\r\n                            ctx.moveTo(x - xOffset, y - yOffset);\r\n                            ctx.lineTo(x + xOffset, y + yOffset);\r\n                            ctx.moveTo(x - xOffset, y + yOffset);\r\n                            ctx.lineTo(x + xOffset, y - yOffset);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'star':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y + radius);\r\n                            ctx.lineTo(x, y - radius);\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            xOffset = Math.cos(Math.PI / 4) * radius;\r\n                            yOffset = Math.sin(Math.PI / 4) * radius;\r\n                            ctx.moveTo(x - xOffset, y - yOffset);\r\n                            ctx.lineTo(x + xOffset, y + yOffset);\r\n                            ctx.moveTo(x - xOffset, y + yOffset);\r\n                            ctx.lineTo(x + xOffset, y - yOffset);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'line':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'dash':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                    }\r\n\r\n                    ctx.stroke();\r\n                },\r\n\r\n                clipArea: function(ctx, area) {\r\n                    ctx.save();\r\n                    ctx.beginPath();\r\n                    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\r\n                    ctx.clip();\r\n                },\r\n\r\n                unclipArea: function(ctx) {\r\n                    ctx.restore();\r\n                },\r\n\r\n                lineTo: function(ctx, previous, target, flip) {\r\n                    if (target.steppedLine) {\r\n                        if ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\r\n                            ctx.lineTo(previous.x, target.y);\r\n                        } else {\r\n                            ctx.lineTo(target.x, previous.y);\r\n                        }\r\n                        ctx.lineTo(target.x, target.y);\r\n                        return;\r\n                    }\r\n\r\n                    if (!target.tension) {\r\n                        ctx.lineTo(target.x, target.y);\r\n                        return;\r\n                    }\r\n\r\n                    ctx.bezierCurveTo(\r\n                        flip ? previous.controlPointPreviousX : previous.controlPointNextX,\r\n                        flip ? previous.controlPointPreviousY : previous.controlPointNextY,\r\n                        flip ? target.controlPointNextX : target.controlPointPreviousX,\r\n                        flip ? target.controlPointNextY : target.controlPointPreviousY,\r\n                        target.x,\r\n                        target.y);\r\n                }\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\r\n             * @namespace Chart.helpers.clear\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.clear = exports.clear;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\r\n             * @namespace Chart.helpers.drawRoundedRectangle\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.drawRoundedRectangle = function(ctx) {\r\n                ctx.beginPath();\r\n                exports.roundedRect.apply(exports, arguments);\r\n                ctx.closePath();\r\n            };\r\n        }, { \"33\": 33 }], 33: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            /**\r\n             * @namespace Chart.helpers\r\n             */\r\n            var helpers = {\r\n                /**\r\n                 * An empty function that can be used, for example, for optional callback.\r\n                 */\r\n                noop: function() { },\r\n\r\n                /**\r\n                 * Returns a unique id, sequentially generated from a global variable.\r\n                 * @returns {Number}\r\n                 * @function\r\n                 */\r\n                uid: (function() {\r\n                    var id = 0;\r\n                    return function() {\r\n                        return id++;\r\n                    };\r\n                }()),\r\n\r\n                /**\r\n                 * Returns true if `value` is neither null nor undefined, else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @since 2.7.0\r\n                 */\r\n                isNullOrUndef: function(value) {\r\n                    return value === null || typeof value === 'undefined';\r\n                },\r\n\r\n                /**\r\n                 * Returns true if `value` is an array, else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @function\r\n                 */\r\n                isArray: Array.isArray ? Array.isArray : function(value) {\r\n                    return Object.prototype.toString.call(value) === '[object Array]';\r\n                },\r\n\r\n                /**\r\n                 * Returns true if `value` is an object (excluding null), else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @since 2.7.0\r\n                 */\r\n                isObject: function(value) {\r\n                    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\r\n                },\r\n\r\n                /**\r\n                 * Returns `value` if defined, else returns `defaultValue`.\r\n                 * @param {*} value - The value to return if defined.\r\n                 * @param {*} defaultValue - The value to return if `value` is undefined.\r\n                 * @returns {*}\r\n                 */\r\n                valueOrDefault: function(value, defaultValue) {\r\n                    return typeof value === 'undefined' ? defaultValue : value;\r\n                },\r\n\r\n                /**\r\n                 * Returns value at the given `index` in array if defined, else returns `defaultValue`.\r\n                 * @param {Array} value - The array to lookup for value at `index`.\r\n                 * @param {Number} index - The index in `value` to lookup for value.\r\n                 * @param {*} defaultValue - The value to return if `value[index]` is undefined.\r\n                 * @returns {*}\r\n                 */\r\n                valueAtIndexOrDefault: function(value, index, defaultValue) {\r\n                    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\r\n                },\r\n\r\n                /**\r\n                 * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\r\n                 * value returned by `fn`. If `fn` is not a function, this method returns undefined.\r\n                 * @param {Function} fn - The function to call.\r\n                 * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\r\n                 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\r\n                 * @returns {*}\r\n                 */\r\n                callback: function(fn, args, thisArg) {\r\n                    if (fn && typeof fn.call === 'function') {\r\n                        return fn.apply(thisArg, args);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Note(SB) for performance sake, this method should only be used when loopable type\r\n                 * is unknown or in none intensive code (not called often and small loopable). Else\r\n                 * it's preferable to use a regular for() loop and save extra function calls.\r\n                 * @param {Object|Array} loopable - The object or array to be iterated.\r\n                 * @param {Function} fn - The function to call for each item.\r\n                 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\r\n                 * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\r\n                 */\r\n                each: function(loopable, fn, thisArg, reverse) {\r\n                    var i, len, keys;\r\n                    if (helpers.isArray(loopable)) {\r\n                        len = loopable.length;\r\n                        if (reverse) {\r\n                            for (i = len - 1; i >= 0; i--) {\r\n                                fn.call(thisArg, loopable[i], i);\r\n                            }\r\n                        } else {\r\n                            for (i = 0; i < len; i++) {\r\n                                fn.call(thisArg, loopable[i], i);\r\n                            }\r\n                        }\r\n                    } else if (helpers.isObject(loopable)) {\r\n                        keys = Object.keys(loopable);\r\n                        len = keys.length;\r\n                        for (i = 0; i < len; i++) {\r\n                            fn.call(thisArg, loopable[keys[i]], keys[i]);\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\r\n                 * @see http://stackoverflow.com/a/14853974\r\n                 * @param {Array} a0 - The array to compare\r\n                 * @param {Array} a1 - The array to compare\r\n                 * @returns {Boolean}\r\n                 */\r\n                arrayEquals: function(a0, a1) {\r\n                    var i, ilen, v0, v1;\r\n\r\n                    if (!a0 || !a1 || a0.length !== a1.length) {\r\n                        return false;\r\n                    }\r\n\r\n                    for (i = 0, ilen = a0.length; i < ilen; ++i) {\r\n                        v0 = a0[i];\r\n                        v1 = a1[i];\r\n\r\n                        if (v0 instanceof Array && v1 instanceof Array) {\r\n                            if (!helpers.arrayEquals(v0, v1)) {\r\n                                return false;\r\n                            }\r\n                        } else if (v0 !== v1) {\r\n                            // NOTE: two different object instances will never be equal: {x:20} != {x:20}\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                },\r\n\r\n                /**\r\n                 * Returns a deep copy of `source` without keeping references on objects and arrays.\r\n                 * @param {*} source - The value to clone.\r\n                 * @returns {*}\r\n                 */\r\n                clone: function(source) {\r\n                    if (helpers.isArray(source)) {\r\n                        return source.map(helpers.clone);\r\n                    }\r\n\r\n                    if (helpers.isObject(source)) {\r\n                        var target = {};\r\n                        var keys = Object.keys(source);\r\n                        var klen = keys.length;\r\n                        var k = 0;\r\n\r\n                        for (; k < klen; ++k) {\r\n                            target[keys[k]] = helpers.clone(source[keys[k]]);\r\n                        }\r\n\r\n                        return target;\r\n                    }\r\n\r\n                    return source;\r\n                },\r\n\r\n                /**\r\n                 * The default merger when Chart.helpers.merge is called without merger option.\r\n                 * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\r\n                 * @private\r\n                 */\r\n                _merger: function(key, target, source, options) {\r\n                    var tval = target[key];\r\n                    var sval = source[key];\r\n\r\n                    if (helpers.isObject(tval) && helpers.isObject(sval)) {\r\n                        helpers.merge(tval, sval, options);\r\n                    } else {\r\n                        target[key] = helpers.clone(sval);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Merges source[key] in target[key] only if target[key] is undefined.\r\n                 * @private\r\n                 */\r\n                _mergerIf: function(key, target, source) {\r\n                    var tval = target[key];\r\n                    var sval = source[key];\r\n\r\n                    if (helpers.isObject(tval) && helpers.isObject(sval)) {\r\n                        helpers.mergeIf(tval, sval);\r\n                    } else if (!target.hasOwnProperty(key)) {\r\n                        target[key] = helpers.clone(sval);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Recursively deep copies `source` properties into `target` with the given `options`.\r\n                 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n                 * @param {Object} target - The target object in which all sources are merged into.\r\n                 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\r\n                 * @param {Object} [options] - Merging options:\r\n                 * @param {Function} [options.merger] - The merge method (key, target, source, options)\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                merge: function(target, source, options) {\r\n                    var sources = helpers.isArray(source) ? source : [source];\r\n                    var ilen = sources.length;\r\n                    var merge, i, keys, klen, k;\r\n\r\n                    if (!helpers.isObject(target)) {\r\n                        return target;\r\n                    }\r\n\r\n                    options = options || {};\r\n                    merge = options.merger || helpers._merger;\r\n\r\n                    for (i = 0; i < ilen; ++i) {\r\n                        source = sources[i];\r\n                        if (!helpers.isObject(source)) {\r\n                            continue;\r\n                        }\r\n\r\n                        keys = Object.keys(source);\r\n                        for (k = 0, klen = keys.length; k < klen; ++k) {\r\n                            merge(keys[k], target, source, options);\r\n                        }\r\n                    }\r\n\r\n                    return target;\r\n                },\r\n\r\n                /**\r\n                 * Recursively deep copies `source` properties into `target` *only* if not defined in target.\r\n                 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n                 * @param {Object} target - The target object in which all sources are merged into.\r\n                 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                mergeIf: function(target, source) {\r\n                    return helpers.merge(target, source, { merger: helpers._mergerIf });\r\n                },\r\n\r\n                /**\r\n                 * Applies the contents of two or more objects together into the first object.\r\n                 * @param {Object} target - The target object in which all objects are merged into.\r\n                 * @param {Object} arg1 - Object containing additional properties to merge in target.\r\n                 * @param {Object} argN - Additional objects containing properties to merge in target.\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                extend: function(target) {\r\n                    var setFn = function(value, key) {\r\n                        target[key] = value;\r\n                    };\r\n                    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\r\n                        helpers.each(arguments[i], setFn);\r\n                    }\r\n                    return target;\r\n                },\r\n\r\n                /**\r\n                 * Basic javascript inheritance based on the model created in Backbone.js\r\n                 */\r\n                inherits: function(extensions) {\r\n                    var me = this;\r\n                    var ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\r\n                        return me.apply(this, arguments);\r\n                    };\r\n\r\n                    var Surrogate = function() {\r\n                        this.constructor = ChartElement;\r\n                    };\r\n\r\n                    Surrogate.prototype = me.prototype;\r\n                    ChartElement.prototype = new Surrogate();\r\n                    ChartElement.extend = helpers.inherits;\r\n\r\n                    if (extensions) {\r\n                        helpers.extend(ChartElement.prototype, extensions);\r\n                    }\r\n\r\n                    ChartElement.__super__ = me.prototype;\r\n                    return ChartElement;\r\n                }\r\n            };\r\n\r\n            module.exports = helpers;\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.callback instead.\r\n             * @function Chart.helpers.callCallback\r\n             * @deprecated since version 2.6.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.callCallback = helpers.callback;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Array.prototype.indexOf instead.\r\n             * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\r\n             * @function Chart.helpers.indexOf\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.indexOf = function(array, item, fromIndex) {\r\n                return Array.prototype.indexOf.call(array, item, fromIndex);\r\n            };\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\r\n             * @function Chart.helpers.getValueOrDefault\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.getValueOrDefault = helpers.valueOrDefault;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\r\n             * @function Chart.helpers.getValueAtIndexOrDefault\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n        }, {}], 34: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * Easing functions adapted from Robert Penner's easing equations.\r\n             * @namespace Chart.helpers.easingEffects\r\n             * @see http://www.robertpenner.com/easing/\r\n             */\r\n            var effects = {\r\n                linear: function(t) {\r\n                    return t;\r\n                },\r\n\r\n                easeInQuad: function(t) {\r\n                    return t * t;\r\n                },\r\n\r\n                easeOutQuad: function(t) {\r\n                    return -t * (t - 2);\r\n                },\r\n\r\n                easeInOutQuad: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t;\r\n                    }\r\n                    return -0.5 * ((--t) * (t - 2) - 1);\r\n                },\r\n\r\n                easeInCubic: function(t) {\r\n                    return t * t * t;\r\n                },\r\n\r\n                easeOutCubic: function(t) {\r\n                    return (t = t - 1) * t * t + 1;\r\n                },\r\n\r\n                easeInOutCubic: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t;\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * t + 2);\r\n                },\r\n\r\n                easeInQuart: function(t) {\r\n                    return t * t * t * t;\r\n                },\r\n\r\n                easeOutQuart: function(t) {\r\n                    return -((t = t - 1) * t * t * t - 1);\r\n                },\r\n\r\n                easeInOutQuart: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t * t;\r\n                    }\r\n                    return -0.5 * ((t -= 2) * t * t * t - 2);\r\n                },\r\n\r\n                easeInQuint: function(t) {\r\n                    return t * t * t * t * t;\r\n                },\r\n\r\n                easeOutQuint: function(t) {\r\n                    return (t = t - 1) * t * t * t * t + 1;\r\n                },\r\n\r\n                easeInOutQuint: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t * t * t;\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * t * t * t + 2);\r\n                },\r\n\r\n                easeInSine: function(t) {\r\n                    return -Math.cos(t * (Math.PI / 2)) + 1;\r\n                },\r\n\r\n                easeOutSine: function(t) {\r\n                    return Math.sin(t * (Math.PI / 2));\r\n                },\r\n\r\n                easeInOutSine: function(t) {\r\n                    return -0.5 * (Math.cos(Math.PI * t) - 1);\r\n                },\r\n\r\n                easeInExpo: function(t) {\r\n                    return (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\r\n                },\r\n\r\n                easeOutExpo: function(t) {\r\n                    return (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\r\n                },\r\n\r\n                easeInOutExpo: function(t) {\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * Math.pow(2, 10 * (t - 1));\r\n                    }\r\n                    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\r\n                },\r\n\r\n                easeInCirc: function(t) {\r\n                    if (t >= 1) {\r\n                        return t;\r\n                    }\r\n                    return -(Math.sqrt(1 - t * t) - 1);\r\n                },\r\n\r\n                easeOutCirc: function(t) {\r\n                    return Math.sqrt(1 - (t = t - 1) * t);\r\n                },\r\n\r\n                easeInOutCirc: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return -0.5 * (Math.sqrt(1 - t * t) - 1);\r\n                    }\r\n                    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\r\n                },\r\n\r\n                easeInElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.3;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\r\n                },\r\n\r\n                easeOutElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.3;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\r\n                },\r\n\r\n                easeInOutElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if ((t /= 0.5) === 2) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.45;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    if (t < 1) {\r\n                        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\r\n                    }\r\n                    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n                },\r\n                easeInBack: function(t) {\r\n                    var s = 1.70158;\r\n                    return t * t * ((s + 1) * t - s);\r\n                },\r\n\r\n                easeOutBack: function(t) {\r\n                    var s = 1.70158;\r\n                    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\r\n                },\r\n\r\n                easeInOutBack: function(t) {\r\n                    var s = 1.70158;\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n                },\r\n\r\n                easeInBounce: function(t) {\r\n                    return 1 - effects.easeOutBounce(1 - t);\r\n                },\r\n\r\n                easeOutBounce: function(t) {\r\n                    if (t < (1 / 2.75)) {\r\n                        return 7.5625 * t * t;\r\n                    }\r\n                    if (t < (2 / 2.75)) {\r\n                        return 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\r\n                    }\r\n                    if (t < (2.5 / 2.75)) {\r\n                        return 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\r\n                    }\r\n                    return 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\r\n                },\r\n\r\n                easeInOutBounce: function(t) {\r\n                    if (t < 0.5) {\r\n                        return effects.easeInBounce(t * 2) * 0.5;\r\n                    }\r\n                    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\r\n                }\r\n            };\r\n\r\n            module.exports = {\r\n                effects: effects\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\r\n             * @function Chart.helpers.easingEffects\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.easingEffects = effects;\r\n        }, { \"33\": 33 }], 35: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * @alias Chart.helpers.options\r\n             * @namespace\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Converts the given line height `value` in pixels for a specific font `size`.\r\n                 * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\r\n                 * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\r\n                 * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\r\n                 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\r\n                 * @since 2.7.0\r\n                 */\r\n                toLineHeight: function(value, size) {\r\n                    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\r\n                    if (!matches || matches[1] === 'normal') {\r\n                        return size * 1.2;\r\n                    }\r\n\r\n                    value = +matches[2];\r\n\r\n                    switch (matches[3]) {\r\n                        case 'px':\r\n                            return value;\r\n                        case '%':\r\n                            value /= 100;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n\r\n                    return size * value;\r\n                },\r\n\r\n                /**\r\n                 * Converts the given value into a padding object with pre-computed width/height.\r\n                 * @param {Number|Object} value - If a number, set the value to all TRBL component,\r\n                 *  else, if and object, use defined properties and sets undefined ones to 0.\r\n                 * @returns {Object} The padding values (top, right, bottom, left, width, height)\r\n                 * @since 2.7.0\r\n                 */\r\n                toPadding: function(value) {\r\n                    var t, r, b, l;\r\n\r\n                    if (helpers.isObject(value)) {\r\n                        t = +value.top || 0;\r\n                        r = +value.right || 0;\r\n                        b = +value.bottom || 0;\r\n                        l = +value.left || 0;\r\n                    } else {\r\n                        t = r = b = l = +value || 0;\r\n                    }\r\n\r\n                    return {\r\n                        top: t,\r\n                        right: r,\r\n                        bottom: b,\r\n                        left: l,\r\n                        height: t + b,\r\n                        width: l + r\r\n                    };\r\n                },\r\n\r\n                /**\r\n                 * Evaluates the given `inputs` sequentially and returns the first defined value.\r\n                 * @param {Array[]} inputs - An array of values, falling back to the last value.\r\n                 * @param {Object} [context] - If defined and the current value is a function, the value\r\n                 * is called with `context` as first argument and the result becomes the new input.\r\n                 * @param {Number} [index] - If defined and the current value is an array, the value\r\n                 * at `index` become the new input.\r\n                 * @since 2.7.0\r\n                 */\r\n                resolve: function(inputs, context, index) {\r\n                    var i, ilen, value;\r\n\r\n                    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\r\n                        value = inputs[i];\r\n                        if (value === undefined) {\r\n                            continue;\r\n                        }\r\n                        if (context !== undefined && typeof value === 'function') {\r\n                            value = value(context);\r\n                        }\r\n                        if (index !== undefined && helpers.isArray(value)) {\r\n                            value = value[index];\r\n                        }\r\n                        if (value !== undefined) {\r\n                            return value;\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }, { \"33\": 33 }], 36: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = require(33);\r\n            module.exports.easing = require(34);\r\n            module.exports.canvas = require(32);\r\n            module.exports.options = require(35);\r\n        }, { \"32\": 32, \"33\": 33, \"34\": 34, \"35\": 35 }], 37: [function(require, module, exports) {\r\n            /**\r\n             * Platform fallback implementation (minimal).\r\n             * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\r\n             */\r\n\r\n            module.exports = {\r\n                acquireContext: function(item) {\r\n                    if (item && item.canvas) {\r\n                        // Support for any object associated to a canvas (including a context2d)\r\n                        item = item.canvas;\r\n                    }\r\n\r\n                    return item && item.getContext('2d') || null;\r\n                }\r\n            };\r\n        }, {}], 38: [function(require, module, exports) {\r\n            /**\r\n             * Chart.Platform implementation for targeting a web browser\r\n             */\r\n\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            var EXPANDO_KEY = '$chartjs';\r\n            var CSS_PREFIX = 'chartjs-';\r\n            var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\r\n            var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\r\n            var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\r\n\r\n            /**\r\n             * DOM event types -> Chart.js event types.\r\n             * Note: only events with different types are mapped.\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/Events\r\n             */\r\n            var EVENT_TYPES = {\r\n                touchstart: 'mousedown',\r\n                touchmove: 'mousemove',\r\n                touchend: 'mouseup',\r\n                pointerenter: 'mouseenter',\r\n                pointerdown: 'mousedown',\r\n                pointermove: 'mousemove',\r\n                pointerup: 'mouseup',\r\n                pointerleave: 'mouseout',\r\n                pointerout: 'mouseout'\r\n            };\r\n\r\n            /**\r\n             * The \"used\" size is the final value of a dimension property after all calculations have\r\n             * been performed. This method uses the computed style of `element` but returns undefined\r\n             * if the computed style is not expressed in pixels. That can happen in some cases where\r\n             * `element` has a size relative to its parent and this last one is not yet displayed,\r\n             * for example because of `display: none` on a parent node.\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\r\n             * @returns {Number} Size in pixels or undefined if unknown.\r\n             */\r\n            function readUsedSize(element, property) {\r\n                var value = helpers.getStyle(element, property);\r\n                var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\r\n                return matches ? Number(matches[1]) : undefined;\r\n            }\r\n\r\n            /**\r\n             * Initializes the canvas style and render size without modifying the canvas display size,\r\n             * since responsiveness is handled by the controller.resize() method. The config is used\r\n             * to determine the aspect ratio to apply in case no explicit height has been specified.\r\n             */\r\n            function initCanvas(canvas, config) {\r\n                var style = canvas.style;\r\n\r\n                // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\r\n                // returns null or '' if no explicit value has been set to the canvas attribute.\r\n                var renderHeight = canvas.getAttribute('height');\r\n                var renderWidth = canvas.getAttribute('width');\r\n\r\n                // Chart.js modifies some canvas values that we want to restore on destroy\r\n                canvas[EXPANDO_KEY] = {\r\n                    initial: {\r\n                        height: renderHeight,\r\n                        width: renderWidth,\r\n                        style: {\r\n                            display: style.display,\r\n                            height: style.height,\r\n                            width: style.width\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // Force canvas to display as block to avoid extra space caused by inline\r\n                // elements, which would interfere with the responsive resize process.\r\n                // https://github.com/chartjs/Chart.js/issues/2538\r\n                style.display = style.display || 'block';\r\n\r\n                if (renderWidth === null || renderWidth === '') {\r\n                    var displayWidth = readUsedSize(canvas, 'width');\r\n                    if (displayWidth !== undefined) {\r\n                        canvas.width = displayWidth;\r\n                    }\r\n                }\r\n\r\n                if (renderHeight === null || renderHeight === '') {\r\n                    if (canvas.style.height === '') {\r\n                        // If no explicit render height and style height, let's apply the aspect ratio,\r\n                        // which one can be specified by the user but also by charts as default option\r\n                        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\r\n                        canvas.height = canvas.width / (config.options.aspectRatio || 2);\r\n                    } else {\r\n                        var displayHeight = readUsedSize(canvas, 'height');\r\n                        if (displayWidth !== undefined) {\r\n                            canvas.height = displayHeight;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return canvas;\r\n            }\r\n\r\n            /**\r\n             * Detects support for options object argument in addEventListener.\r\n             * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\r\n             * @private\r\n             */\r\n            var supportsEventListenerOptions = (function() {\r\n                var supports = false;\r\n                try {\r\n                    var options = Object.defineProperty({}, 'passive', {\r\n                        get: function() {\r\n                            supports = true;\r\n                        }\r\n                    });\r\n                    window.addEventListener('e', null, options);\r\n                } catch (e) {\r\n                    // continue regardless of error\r\n                }\r\n                return supports;\r\n            }());\r\n\r\n            // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\r\n            // https://github.com/chartjs/Chart.js/issues/4287\r\n            var eventListenerOptions = supportsEventListenerOptions ? { passive: true } : false;\r\n\r\n            function addEventListener(node, type, listener) {\r\n                node.addEventListener(type, listener, eventListenerOptions);\r\n            }\r\n\r\n            function removeEventListener(node, type, listener) {\r\n                node.removeEventListener(type, listener, eventListenerOptions);\r\n            }\r\n\r\n            function createEvent(type, chart, x, y, nativeEvent) {\r\n                return {\r\n                    type: type,\r\n                    chart: chart,\r\n                    native: nativeEvent || null,\r\n                    x: x !== undefined ? x : null,\r\n                    y: y !== undefined ? y : null,\r\n                };\r\n            }\r\n\r\n            function fromNativeEvent(event, chart) {\r\n                var type = EVENT_TYPES[event.type] || event.type;\r\n                var pos = helpers.getRelativePosition(event, chart);\r\n                return createEvent(type, chart, pos.x, pos.y, event);\r\n            }\r\n\r\n            function throttled(fn, thisArg) {\r\n                var ticking = false;\r\n                var args = [];\r\n\r\n                return function() {\r\n                    args = Array.prototype.slice.call(arguments);\r\n                    thisArg = thisArg || this;\r\n\r\n                    if (!ticking) {\r\n                        ticking = true;\r\n                        helpers.requestAnimFrame.call(window, function() {\r\n                            ticking = false;\r\n                            fn.apply(thisArg, args);\r\n                        });\r\n                    }\r\n                };\r\n            }\r\n\r\n            // Implementation based on https://github.com/marcj/css-element-queries\r\n            function createResizer(handler) {\r\n                var resizer = document.createElement('div');\r\n                var cls = CSS_PREFIX + 'size-monitor';\r\n                var maxSize = 1000000;\r\n                var style =\r\n                    'position:absolute;' +\r\n                    'left:0;' +\r\n                    'top:0;' +\r\n                    'right:0;' +\r\n                    'bottom:0;' +\r\n                    'overflow:hidden;' +\r\n                    'pointer-events:none;' +\r\n                    'visibility:hidden;' +\r\n                    'z-index:-1;';\r\n\r\n                resizer.style.cssText = style;\r\n                resizer.className = cls;\r\n                resizer.innerHTML =\r\n                    '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\r\n                    '<div style=\"' +\r\n                    'position:absolute;' +\r\n                    'width:' + maxSize + 'px;' +\r\n                    'height:' + maxSize + 'px;' +\r\n                    'left:0;' +\r\n                    'top:0\">' +\r\n                    '</div>' +\r\n                    '</div>' +\r\n                    '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\r\n                    '<div style=\"' +\r\n                    'position:absolute;' +\r\n                    'width:200%;' +\r\n                    'height:200%;' +\r\n                    'left:0; ' +\r\n                    'top:0\">' +\r\n                    '</div>' +\r\n                    '</div>';\r\n\r\n                var expand = resizer.childNodes[0];\r\n                var shrink = resizer.childNodes[1];\r\n\r\n                resizer._reset = function() {\r\n                    expand.scrollLeft = maxSize;\r\n                    expand.scrollTop = maxSize;\r\n                    shrink.scrollLeft = maxSize;\r\n                    shrink.scrollTop = maxSize;\r\n                };\r\n                var onScroll = function() {\r\n                    resizer._reset();\r\n                    handler();\r\n                };\r\n\r\n                addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\r\n                addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\r\n\r\n                return resizer;\r\n            }\r\n\r\n            // https://davidwalsh.name/detect-node-insertion\r\n            function watchForRender(node, handler) {\r\n                var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\r\n                var proxy = expando.renderProxy = function(e) {\r\n                    if (e.animationName === CSS_RENDER_ANIMATION) {\r\n                        handler();\r\n                    }\r\n                };\r\n\r\n                helpers.each(ANIMATION_START_EVENTS, function(type) {\r\n                    addEventListener(node, type, proxy);\r\n                });\r\n\r\n                // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\r\n                // is removed then added back immediately (same animation frame?). Accessing the\r\n                // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\r\n                // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\r\n                // https://github.com/chartjs/Chart.js/issues/4737\r\n                expando.reflow = !!node.offsetParent;\r\n\r\n                node.classList.add(CSS_RENDER_MONITOR);\r\n            }\r\n\r\n            function unwatchForRender(node) {\r\n                var expando = node[EXPANDO_KEY] || {};\r\n                var proxy = expando.renderProxy;\r\n\r\n                if (proxy) {\r\n                    helpers.each(ANIMATION_START_EVENTS, function(type) {\r\n                        removeEventListener(node, type, proxy);\r\n                    });\r\n\r\n                    delete expando.renderProxy;\r\n                }\r\n\r\n                node.classList.remove(CSS_RENDER_MONITOR);\r\n            }\r\n\r\n            function addResizeListener(node, listener, chart) {\r\n                var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\r\n\r\n                // Let's keep track of this added resizer and thus avoid DOM query when removing it.\r\n                var resizer = expando.resizer = createResizer(throttled(function() {\r\n                    if (expando.resizer) {\r\n                        return listener(createEvent('resize', chart));\r\n                    }\r\n                }));\r\n\r\n                // The resizer needs to be attached to the node parent, so we first need to be\r\n                // sure that `node` is attached to the DOM before injecting the resizer element.\r\n                watchForRender(node, function() {\r\n                    if (expando.resizer) {\r\n                        var container = node.parentNode;\r\n                        if (container && container !== resizer.parentNode) {\r\n                            container.insertBefore(resizer, container.firstChild);\r\n                        }\r\n\r\n                        // The container size might have changed, let's reset the resizer state.\r\n                        resizer._reset();\r\n                    }\r\n                });\r\n            }\r\n\r\n            function removeResizeListener(node) {\r\n                var expando = node[EXPANDO_KEY] || {};\r\n                var resizer = expando.resizer;\r\n\r\n                delete expando.resizer;\r\n                unwatchForRender(node);\r\n\r\n                if (resizer && resizer.parentNode) {\r\n                    resizer.parentNode.removeChild(resizer);\r\n                }\r\n            }\r\n\r\n            //function injectCSS(platform, css) {\r\n            //    // http://stackoverflow.com/q/3922139\r\n            //    var style = platform._style || document.createElement('style');\r\n            //    if (!platform._style) {\r\n            //        platform._style = style;\r\n            //        css = '/* Chart.js */\\n' + css;\r\n            //        style.setAttribute('type', 'text/css');\r\n            //        document.getElementsByTagName('head')[0].appendChild(style);\r\n            //    }\r\n\r\n            //    style.appendChild(document.createTextNode(css));\r\n            //}\r\n\r\n            module.exports = {\r\n                /**\r\n                 * This property holds whether this platform is enabled for the current environment.\r\n                 * Currently used by platform.js to select the proper implementation.\r\n                 * @private\r\n                 */\r\n                _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\r\n\r\n                initialize: function() {\r\n                    var keyframes = 'from{opacity:0.99}to{opacity:1}';\r\n                    //injectCSS(this,\r\n                    //    // DOM rendering detection\r\n                    //    // https://davidwalsh.name/detect-node-insertion\r\n                    //    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\r\n                    //    '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\r\n                    //    '.' + CSS_RENDER_MONITOR + '{' +\r\n                    //    '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\r\n                    //    'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\r\n                    //    '}'\r\n                    //);\r\n                },\r\n\r\n                acquireContext: function(item, config) {\r\n                    if (typeof item === 'string') {\r\n                        item = document.getElementById(item);\r\n                    } else if (item.length) {\r\n                        // Support for array based queries (such as jQuery)\r\n                        item = item[0];\r\n                    }\r\n\r\n                    if (item && item.canvas) {\r\n                        // Support for any object associated to a canvas (including a context2d)\r\n                        item = item.canvas;\r\n                    }\r\n\r\n                    // To prevent canvas fingerprinting, some add-ons undefine the getContext\r\n                    // method, for example: https://github.com/kkapsner/CanvasBlocker\r\n                    // https://github.com/chartjs/Chart.js/issues/2807\r\n                    var context = item && item.getContext && item.getContext('2d');\r\n\r\n                    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\r\n                    // inside an iframe or when running in a protected environment. We could guess the\r\n                    // types from their toString() value but let's keep things flexible and assume it's\r\n                    // a sufficient condition if the item has a context2D which has item as `canvas`.\r\n                    // https://github.com/chartjs/Chart.js/issues/3887\r\n                    // https://github.com/chartjs/Chart.js/issues/4102\r\n                    // https://github.com/chartjs/Chart.js/issues/4152\r\n                    if (context && context.canvas === item) {\r\n                        initCanvas(item, config);\r\n                        return context;\r\n                    }\r\n\r\n                    return null;\r\n                },\r\n\r\n                releaseContext: function(context) {\r\n                    var canvas = context.canvas;\r\n                    if (!canvas[EXPANDO_KEY]) {\r\n                        return;\r\n                    }\r\n\r\n                    var initial = canvas[EXPANDO_KEY].initial;\r\n                    ['height', 'width'].forEach(function(prop) {\r\n                        var value = initial[prop];\r\n                        if (helpers.isNullOrUndef(value)) {\r\n                            canvas.removeAttribute(prop);\r\n                        } else {\r\n                            canvas.setAttribute(prop, value);\r\n                        }\r\n                    });\r\n\r\n                    helpers.each(initial.style || {}, function(value, key) {\r\n                        canvas.style[key] = value;\r\n                    });\r\n\r\n                    // The canvas render size might have been changed (and thus the state stack discarded),\r\n                    // we can't use save() and restore() to restore the initial state. So make sure that at\r\n                    // least the canvas context is reset to the default state by setting the canvas width.\r\n                    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\r\n                    canvas.width = canvas.width;\r\n\r\n                    delete canvas[EXPANDO_KEY];\r\n                },\r\n\r\n                addEventListener: function(chart, type, listener) {\r\n                    var canvas = chart.canvas;\r\n                    if (type === 'resize') {\r\n                        // Note: the resize event is not supported on all browsers.\r\n                        addResizeListener(canvas, listener, chart);\r\n                        return;\r\n                    }\r\n\r\n                    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\r\n                    var proxies = expando.proxies || (expando.proxies = {});\r\n                    var proxy = proxies[chart.id + '_' + type] = function(event) {\r\n                        listener(fromNativeEvent(event, chart));\r\n                    };\r\n\r\n                    addEventListener(canvas, type, proxy);\r\n                },\r\n\r\n                removeEventListener: function(chart, type, listener) {\r\n                    var canvas = chart.canvas;\r\n                    if (type === 'resize') {\r\n                        // Note: the resize event is not supported on all browsers.\r\n                        removeResizeListener(canvas, listener);\r\n                        return;\r\n                    }\r\n\r\n                    var expando = listener[EXPANDO_KEY] || {};\r\n                    var proxies = expando.proxies || {};\r\n                    var proxy = proxies[chart.id + '_' + type];\r\n                    if (!proxy) {\r\n                        return;\r\n                    }\r\n\r\n                    removeEventListener(canvas, type, proxy);\r\n                }\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use EventTarget.addEventListener instead.\r\n             * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\r\n             * @function Chart.helpers.addEvent\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.addEvent = addEventListener;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use EventTarget.removeEventListener instead.\r\n             * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\r\n             * @function Chart.helpers.removeEvent\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.removeEvent = removeEventListener;\r\n        }, { \"36\": 36 }], 39: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n            var basic = require(37);\r\n            var dom = require(38);\r\n\r\n            // @TODO Make possible to select another platform at build time.\r\n            var implementation = dom._enabled ? dom : basic;\r\n\r\n            /**\r\n             * @namespace Chart.platform\r\n             * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\r\n             * @since 2.4.0\r\n             */\r\n            module.exports = helpers.extend({\r\n                /**\r\n                 * @since 2.7.0\r\n                 */\r\n                initialize: function() { },\r\n\r\n                /**\r\n                 * Called at chart construction time, returns a context2d instance implementing\r\n                 * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\r\n                 * @param {*} item - The native item from which to acquire context (platform specific)\r\n                 * @param {Object} options - The chart options\r\n                 * @returns {CanvasRenderingContext2D} context2d instance\r\n                 */\r\n                acquireContext: function() { },\r\n\r\n                /**\r\n                 * Called at chart destruction time, releases any resources associated to the context\r\n                 * previously returned by the acquireContext() method.\r\n                 * @param {CanvasRenderingContext2D} context - The context2d instance\r\n                 * @returns {Boolean} true if the method succeeded, else false\r\n                 */\r\n                releaseContext: function() { },\r\n\r\n                /**\r\n                 * Registers the specified listener on the given chart.\r\n                 * @param {Chart} chart - Chart from which to listen for event\r\n                 * @param {String} type - The ({@link IEvent}) type to listen for\r\n                 * @param {Function} listener - Receives a notification (an object that implements\r\n                 * the {@link IEvent} interface) when an event of the specified type occurs.\r\n                 */\r\n                addEventListener: function() { },\r\n\r\n                /**\r\n                 * Removes the specified listener previously registered with addEventListener.\r\n                 * @param {Chart} chart -Chart from which to remove the listener\r\n                 * @param {String} type - The ({@link IEvent}) type to remove\r\n                 * @param {Function} listener - The listener function to remove from the event target.\r\n                 */\r\n                removeEventListener: function() { }\r\n            }, implementation);\r\n\r\n            /**\r\n             * @interface IPlatform\r\n             * Allows abstracting platform dependencies away from the chart\r\n             * @borrows Chart.platform.acquireContext as acquireContext\r\n             * @borrows Chart.platform.releaseContext as releaseContext\r\n             * @borrows Chart.platform.addEventListener as addEventListener\r\n             * @borrows Chart.platform.removeEventListener as removeEventListener\r\n             */\r\n\r\n            /**\r\n             * @interface IEvent\r\n             * @prop {String} type - The event type name, possible values are:\r\n             * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\r\n             * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\r\n             * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\r\n             * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\r\n             * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\r\n             */\r\n        }, { \"36\": 36, \"37\": 37, \"38\": 38 }], 40: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = {};\r\n            module.exports.filler = require(41);\r\n            module.exports.legend = require(42);\r\n            module.exports.title = require(43);\r\n        }, { \"41\": 41, \"42\": 42, \"43\": 43 }], 41: [function(require, module, exports) {\r\n            /**\r\n             * Plugin based on discussion from the following Chart.js issues:\r\n             * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\r\n             * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\r\n             */\r\n\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                plugins: {\r\n                    filler: {\r\n                        propagate: true\r\n                    }\r\n                }\r\n            });\r\n\r\n            var mappers = {\r\n                dataset: function(source) {\r\n                    var index = source.fill;\r\n                    var chart = source.chart;\r\n                    var meta = chart.getDatasetMeta(index);\r\n                    var visible = meta && chart.isDatasetVisible(index);\r\n                    var points = (visible && meta.dataset._children) || [];\r\n                    var length = points.length || 0;\r\n\r\n                    return !length ? null : function(point, i) {\r\n                        return (i < length && points[i]._view) || null;\r\n                    };\r\n                },\r\n\r\n                boundary: function(source) {\r\n                    var boundary = source.boundary;\r\n                    var x = boundary ? boundary.x : null;\r\n                    var y = boundary ? boundary.y : null;\r\n\r\n                    return function(point) {\r\n                        return {\r\n                            x: x === null ? point.x : x,\r\n                            y: y === null ? point.y : y,\r\n                        };\r\n                    };\r\n                }\r\n            };\r\n\r\n            // @todo if (fill[0] === '#')\r\n            function decodeFill(el, index, count) {\r\n                var model = el._model || {};\r\n                var fill = model.fill;\r\n                var target;\r\n\r\n                if (fill === undefined) {\r\n                    fill = !!model.backgroundColor;\r\n                }\r\n\r\n                if (fill === false || fill === null) {\r\n                    return false;\r\n                }\r\n\r\n                if (fill === true) {\r\n                    return 'origin';\r\n                }\r\n\r\n                target = parseFloat(fill, 10);\r\n                if (isFinite(target) && Math.floor(target) === target) {\r\n                    if (fill[0] === '-' || fill[0] === '+') {\r\n                        target = index + target;\r\n                    }\r\n\r\n                    if (target === index || target < 0 || target >= count) {\r\n                        return false;\r\n                    }\r\n\r\n                    return target;\r\n                }\r\n\r\n                switch (fill) {\r\n                    // compatibility\r\n                    case 'bottom':\r\n                        return 'start';\r\n                    case 'top':\r\n                        return 'end';\r\n                    case 'zero':\r\n                        return 'origin';\r\n                    // supported boundaries\r\n                    case 'origin':\r\n                    case 'start':\r\n                    case 'end':\r\n                        return fill;\r\n                    // invalid fill values\r\n                    default:\r\n                        return false;\r\n                }\r\n            }\r\n\r\n            function computeBoundary(source) {\r\n                var model = source.el._model || {};\r\n                var scale = source.el._scale || {};\r\n                var fill = source.fill;\r\n                var target = null;\r\n                var horizontal;\r\n\r\n                if (isFinite(fill)) {\r\n                    return null;\r\n                }\r\n\r\n                // Backward compatibility: until v3, we still need to support boundary values set on\r\n                // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\r\n                // controllers might still use it (e.g. the Smith chart).\r\n\r\n                if (fill === 'start') {\r\n                    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\r\n                } else if (fill === 'end') {\r\n                    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\r\n                } else if (model.scaleZero !== undefined) {\r\n                    target = model.scaleZero;\r\n                } else if (scale.getBasePosition) {\r\n                    target = scale.getBasePosition();\r\n                } else if (scale.getBasePixel) {\r\n                    target = scale.getBasePixel();\r\n                }\r\n\r\n                if (target !== undefined && target !== null) {\r\n                    if (target.x !== undefined && target.y !== undefined) {\r\n                        return target;\r\n                    }\r\n\r\n                    if (typeof target === 'number' && isFinite(target)) {\r\n                        horizontal = scale.isHorizontal();\r\n                        return {\r\n                            x: horizontal ? target : null,\r\n                            y: horizontal ? null : target\r\n                        };\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n\r\n            function resolveTarget(sources, index, propagate) {\r\n                var source = sources[index];\r\n                var fill = source.fill;\r\n                var visited = [index];\r\n                var target;\r\n\r\n                if (!propagate) {\r\n                    return fill;\r\n                }\r\n\r\n                while (fill !== false && visited.indexOf(fill) === -1) {\r\n                    if (!isFinite(fill)) {\r\n                        return fill;\r\n                    }\r\n\r\n                    target = sources[fill];\r\n                    if (!target) {\r\n                        return false;\r\n                    }\r\n\r\n                    if (target.visible) {\r\n                        return fill;\r\n                    }\r\n\r\n                    visited.push(fill);\r\n                    fill = target.fill;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            function createMapper(source) {\r\n                var fill = source.fill;\r\n                var type = 'dataset';\r\n\r\n                if (fill === false) {\r\n                    return null;\r\n                }\r\n\r\n                if (!isFinite(fill)) {\r\n                    type = 'boundary';\r\n                }\r\n\r\n                return mappers[type](source);\r\n            }\r\n\r\n            function isDrawable(point) {\r\n                return point && !point.skip;\r\n            }\r\n\r\n            function drawArea(ctx, curve0, curve1, len0, len1) {\r\n                var i;\r\n\r\n                if (!len0 || !len1) {\r\n                    return;\r\n                }\r\n\r\n                // building first area curve (normal)\r\n                ctx.moveTo(curve0[0].x, curve0[0].y);\r\n                for (i = 1; i < len0; ++i) {\r\n                    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\r\n                }\r\n\r\n                // joining the two area curves\r\n                ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\r\n\r\n                // building opposite area curve (reverse)\r\n                for (i = len1 - 1; i > 0; --i) {\r\n                    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\r\n                }\r\n            }\r\n\r\n            function doFill(ctx, points, mapper, view, color, loop) {\r\n                var count = points.length;\r\n                var span = view.spanGaps;\r\n                var curve0 = [];\r\n                var curve1 = [];\r\n                var len0 = 0;\r\n                var len1 = 0;\r\n                var i, ilen, index, p0, p1, d0, d1;\r\n\r\n                ctx.beginPath();\r\n\r\n                for (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\r\n                    index = i % count;\r\n                    p0 = points[index]._view;\r\n                    p1 = mapper(p0, index, view);\r\n                    d0 = isDrawable(p0);\r\n                    d1 = isDrawable(p1);\r\n\r\n                    if (d0 && d1) {\r\n                        len0 = curve0.push(p0);\r\n                        len1 = curve1.push(p1);\r\n                    } else if (len0 && len1) {\r\n                        if (!span) {\r\n                            drawArea(ctx, curve0, curve1, len0, len1);\r\n                            len0 = len1 = 0;\r\n                            curve0 = [];\r\n                            curve1 = [];\r\n                        } else {\r\n                            if (d0) {\r\n                                curve0.push(p0);\r\n                            }\r\n                            if (d1) {\r\n                                curve1.push(p1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                drawArea(ctx, curve0, curve1, len0, len1);\r\n\r\n                ctx.closePath();\r\n                ctx.fillStyle = color;\r\n                ctx.fill();\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'filler',\r\n\r\n                afterDatasetsUpdate: function(chart, options) {\r\n                    var count = (chart.data.datasets || []).length;\r\n                    var propagate = options.propagate;\r\n                    var sources = [];\r\n                    var meta, i, el, source;\r\n\r\n                    for (i = 0; i < count; ++i) {\r\n                        meta = chart.getDatasetMeta(i);\r\n                        el = meta.dataset;\r\n                        source = null;\r\n\r\n                        if (el && el._model && el instanceof elements.Line) {\r\n                            source = {\r\n                                visible: chart.isDatasetVisible(i),\r\n                                fill: decodeFill(el, i, count),\r\n                                chart: chart,\r\n                                el: el\r\n                            };\r\n                        }\r\n\r\n                        meta.$filler = source;\r\n                        sources.push(source);\r\n                    }\r\n\r\n                    for (i = 0; i < count; ++i) {\r\n                        source = sources[i];\r\n                        if (!source) {\r\n                            continue;\r\n                        }\r\n\r\n                        source.fill = resolveTarget(sources, i, propagate);\r\n                        source.boundary = computeBoundary(source);\r\n                        source.mapper = createMapper(source);\r\n                    }\r\n                },\r\n\r\n                beforeDatasetDraw: function(chart, args) {\r\n                    var meta = args.meta.$filler;\r\n                    if (!meta) {\r\n                        return;\r\n                    }\r\n\r\n                    var ctx = chart.ctx;\r\n                    var el = meta.el;\r\n                    var view = el._view;\r\n                    var points = el._children || [];\r\n                    var mapper = meta.mapper;\r\n                    var color = view.backgroundColor || defaults.global.defaultColor;\r\n\r\n                    if (mapper && color && points.length) {\r\n                        helpers.canvas.clipArea(ctx, chart.chartArea);\r\n                        doFill(ctx, points, mapper, view, color, el._loop);\r\n                        helpers.canvas.unclipArea(ctx);\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 42: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            var noop = helpers.noop;\r\n\r\n            defaults._set('global', {\r\n                legend: {\r\n                    display: true,\r\n                    position: 'top',\r\n                    fullWidth: true,\r\n                    reverse: false,\r\n                    weight: 1000,\r\n\r\n                    // a callback that will handle\r\n                    onClick: function(e, legendItem) {\r\n                        var index = legendItem.datasetIndex;\r\n                        var ci = this.chart;\r\n                        var meta = ci.getDatasetMeta(index);\r\n\r\n                        // See controller.isDatasetVisible comment\r\n                        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\r\n\r\n                        // We hid a dataset ... rerender the chart\r\n                        ci.update();\r\n                    },\r\n\r\n                    onHover: null,\r\n\r\n                    labels: {\r\n                        boxWidth: 40,\r\n                        padding: 10,\r\n                        // Generates labels shown in the legend\r\n                        // Valid properties to return:\r\n                        // text : text to display\r\n                        // fillStyle : fill of coloured box\r\n                        // strokeStyle: stroke of coloured box\r\n                        // hidden : if this legend item refers to a hidden item\r\n                        // lineCap : cap style for line\r\n                        // lineDash\r\n                        // lineDashOffset :\r\n                        // lineJoin :\r\n                        // lineWidth :\r\n                        generateLabels: function(chart) {\r\n                            var data = chart.data;\r\n                            return helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\r\n                                return {\r\n                                    text: dataset.label,\r\n                                    fillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\r\n                                    hidden: !chart.isDatasetVisible(i),\r\n                                    lineCap: dataset.borderCapStyle,\r\n                                    lineDash: dataset.borderDash,\r\n                                    lineDashOffset: dataset.borderDashOffset,\r\n                                    lineJoin: dataset.borderJoinStyle,\r\n                                    lineWidth: dataset.borderWidth,\r\n                                    strokeStyle: dataset.borderColor,\r\n                                    pointStyle: dataset.pointStyle,\r\n\r\n                                    // Below is extra data used for toggling the datasets\r\n                                    datasetIndex: i\r\n                                };\r\n                            }, this) : [];\r\n                        }\r\n                    }\r\n                },\r\n\r\n                legendCallback: function(chart) {\r\n                    var text = [];\r\n                    text.push('<ul class=\"' + chart.id + '-legend\">');\r\n                    for (var i = 0; i < chart.data.datasets.length; i++) {\r\n                        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\r\n                        if (chart.data.datasets[i].label) {\r\n                            text.push(chart.data.datasets[i].label);\r\n                        }\r\n                        text.push('</li>');\r\n                    }\r\n                    text.push('</ul>');\r\n                    return text.join('');\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Helper function to get the box width based on the usePointStyle option\r\n             * @param labelopts {Object} the label options on the legend\r\n             * @param fontSize {Number} the label font size\r\n             * @return {Number} width of the color box area\r\n             */\r\n            function getBoxWidth(labelOpts, fontSize) {\r\n                return labelOpts.usePointStyle ?\r\n                    fontSize * Math.SQRT2 :\r\n                    labelOpts.boxWidth;\r\n            }\r\n\r\n            /**\r\n             * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\r\n             */\r\n            var Legend = Element.extend({\r\n                initialize: function(config) {\r\n                    helpers.extend(this, config);\r\n\r\n                    // Contains hit boxes for each dataset (in dataset order)\r\n                    this.legendHitBoxes = [];\r\n\r\n                    // Are we in doughnut mode which has a different data type\r\n                    this.doughnutMode = false;\r\n                },\r\n\r\n                // These methods are ordered by lifecycle. Utilities then follow.\r\n                // Any function defined here is inherited by all legend types.\r\n                // Any function can be extended by the legend type\r\n\r\n                beforeUpdate: noop,\r\n                update: function(maxWidth, maxHeight, margins) {\r\n                    var me = this;\r\n\r\n                    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                    me.beforeUpdate();\r\n\r\n                    // Absorb the master measurements\r\n                    me.maxWidth = maxWidth;\r\n                    me.maxHeight = maxHeight;\r\n                    me.margins = margins;\r\n\r\n                    // Dimensions\r\n                    me.beforeSetDimensions();\r\n                    me.setDimensions();\r\n                    me.afterSetDimensions();\r\n                    // Labels\r\n                    me.beforeBuildLabels();\r\n                    me.buildLabels();\r\n                    me.afterBuildLabels();\r\n\r\n                    // Fit\r\n                    me.beforeFit();\r\n                    me.fit();\r\n                    me.afterFit();\r\n                    //\r\n                    me.afterUpdate();\r\n\r\n                    return me.minSize;\r\n                },\r\n                afterUpdate: noop,\r\n\r\n                //\r\n\r\n                beforeSetDimensions: noop,\r\n                setDimensions: function() {\r\n                    var me = this;\r\n                    // Set the unconstrained dimension before label rotation\r\n                    if (me.isHorizontal()) {\r\n                        // Reset position before calculating rotation\r\n                        me.width = me.maxWidth;\r\n                        me.left = 0;\r\n                        me.right = me.width;\r\n                    } else {\r\n                        me.height = me.maxHeight;\r\n\r\n                        // Reset position before calculating rotation\r\n                        me.top = 0;\r\n                        me.bottom = me.height;\r\n                    }\r\n\r\n                    // Reset padding\r\n                    me.paddingLeft = 0;\r\n                    me.paddingTop = 0;\r\n                    me.paddingRight = 0;\r\n                    me.paddingBottom = 0;\r\n\r\n                    // Reset minSize\r\n                    me.minSize = {\r\n                        width: 0,\r\n                        height: 0\r\n                    };\r\n                },\r\n                afterSetDimensions: noop,\r\n\r\n                //\r\n\r\n                beforeBuildLabels: noop,\r\n                buildLabels: function() {\r\n                    var me = this;\r\n                    var labelOpts = me.options.labels || {};\r\n                    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\r\n\r\n                    if (labelOpts.filter) {\r\n                        legendItems = legendItems.filter(function(item) {\r\n                            return labelOpts.filter(item, me.chart.data);\r\n                        });\r\n                    }\r\n\r\n                    if (me.options.reverse) {\r\n                        legendItems.reverse();\r\n                    }\r\n\r\n                    me.legendItems = legendItems;\r\n                },\r\n                afterBuildLabels: noop,\r\n\r\n                //\r\n\r\n                beforeFit: noop,\r\n                fit: function() {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var labelOpts = opts.labels;\r\n                    var display = opts.display;\r\n\r\n                    var ctx = me.ctx;\r\n\r\n                    var globalDefault = defaults.global;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\r\n                    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\r\n                    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\r\n                    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n                    // Reset hit boxes\r\n                    var hitboxes = me.legendHitBoxes = [];\r\n\r\n                    var minSize = me.minSize;\r\n                    var isHorizontal = me.isHorizontal();\r\n\r\n                    if (isHorizontal) {\r\n                        minSize.width = me.maxWidth; // fill all the width\r\n                        minSize.height = display ? 10 : 0;\r\n                    } else {\r\n                        minSize.width = display ? 10 : 0;\r\n                        minSize.height = me.maxHeight; // fill all the height\r\n                    }\r\n\r\n                    // Increase sizes here\r\n                    if (display) {\r\n                        ctx.font = labelFont;\r\n\r\n                        if (isHorizontal) {\r\n                            // Labels\r\n\r\n                            // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\r\n                            var lineWidths = me.lineWidths = [0];\r\n                            var totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\r\n\r\n                            ctx.textAlign = 'left';\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            helpers.each(me.legendItems, function(legendItem, i) {\r\n                                var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                                var width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n                                if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\r\n                                    totalHeight += fontSize + (labelOpts.padding);\r\n                                    lineWidths[lineWidths.length] = me.left;\r\n                                }\r\n\r\n                                // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                                hitboxes[i] = {\r\n                                    left: 0,\r\n                                    top: 0,\r\n                                    width: width,\r\n                                    height: fontSize\r\n                                };\r\n\r\n                                lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\r\n                            });\r\n\r\n                            minSize.height += totalHeight;\r\n                        } else {\r\n                            var vPadding = labelOpts.padding;\r\n                            var columnWidths = me.columnWidths = [];\r\n                            var totalWidth = labelOpts.padding;\r\n                            var currentColWidth = 0;\r\n                            var currentColHeight = 0;\r\n                            var itemHeight = fontSize + vPadding;\r\n\r\n                            helpers.each(me.legendItems, function(legendItem, i) {\r\n                                var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                                var itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n                                // If too tall, go to new column\r\n                                if (currentColHeight + itemHeight > minSize.height) {\r\n                                    totalWidth += currentColWidth + labelOpts.padding;\r\n                                    columnWidths.push(currentColWidth); // previous column width\r\n\r\n                                    currentColWidth = 0;\r\n                                    currentColHeight = 0;\r\n                                }\r\n\r\n                                // Get max width\r\n                                currentColWidth = Math.max(currentColWidth, itemWidth);\r\n                                currentColHeight += itemHeight;\r\n\r\n                                // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                                hitboxes[i] = {\r\n                                    left: 0,\r\n                                    top: 0,\r\n                                    width: itemWidth,\r\n                                    height: fontSize\r\n                                };\r\n                            });\r\n\r\n                            totalWidth += currentColWidth;\r\n                            columnWidths.push(currentColWidth);\r\n                            minSize.width += totalWidth;\r\n                        }\r\n                    }\r\n\r\n                    me.width = minSize.width;\r\n                    me.height = minSize.height;\r\n                },\r\n                afterFit: noop,\r\n\r\n                // Shared Methods\r\n                isHorizontal: function() {\r\n                    return this.options.position === 'top' || this.options.position === 'bottom';\r\n                },\r\n\r\n                // Actually draw the legend on the canvas\r\n                draw: function() {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var labelOpts = opts.labels;\r\n                    var globalDefault = defaults.global;\r\n                    var lineDefault = globalDefault.elements.line;\r\n                    var legendWidth = me.width;\r\n                    var lineWidths = me.lineWidths;\r\n\r\n                    if (opts.display) {\r\n                        var ctx = me.ctx;\r\n                        var valueOrDefault = helpers.valueOrDefault;\r\n                        var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\r\n                        var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\r\n                        var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\r\n                        var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\r\n                        var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n                        var cursor;\r\n\r\n                        // Canvas setup\r\n                        ctx.textAlign = 'left';\r\n                        ctx.textBaseline = 'middle';\r\n                        ctx.lineWidth = 0.5;\r\n                        ctx.strokeStyle = fontColor; // for strikethrough effect\r\n                        ctx.fillStyle = fontColor; // render in correct colour\r\n                        ctx.font = labelFont;\r\n\r\n                        var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                        var hitboxes = me.legendHitBoxes;\r\n\r\n                        // current position\r\n                        var drawLegendBox = function(x, y, legendItem) {\r\n                            if (isNaN(boxWidth) || boxWidth <= 0) {\r\n                                return;\r\n                            }\r\n\r\n                            // Set the ctx for the box\r\n                            ctx.save();\r\n\r\n                            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\r\n                            ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\r\n                            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\r\n                            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\r\n                            ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\r\n                            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\r\n                            var isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\r\n\r\n                            if (ctx.setLineDash) {\r\n                                // IE 9 and 10 do not support line dash\r\n                                ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\r\n                            }\r\n\r\n                            if (opts.labels && opts.labels.usePointStyle) {\r\n                                // Recalculate x and y for drawPoint() because its expecting\r\n                                // x and y to be center of figure (instead of top left)\r\n                                var radius = fontSize * Math.SQRT2 / 2;\r\n                                var offSet = radius / Math.SQRT2;\r\n                                var centerX = x + offSet;\r\n                                var centerY = y + offSet;\r\n\r\n                                // Draw pointStyle as legend symbol\r\n                                helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\r\n                            } else {\r\n                                // Draw box as legend symbol\r\n                                if (!isLineWidthZero) {\r\n                                    ctx.strokeRect(x, y, boxWidth, fontSize);\r\n                                }\r\n                                ctx.fillRect(x, y, boxWidth, fontSize);\r\n                            }\r\n\r\n                            ctx.restore();\r\n                        };\r\n                        var fillText = function(x, y, legendItem, textWidth) {\r\n                            var halfFontSize = fontSize / 2;\r\n                            var xLeft = boxWidth + halfFontSize + x;\r\n                            var yMiddle = y + halfFontSize;\r\n\r\n                            ctx.fillText(legendItem.text, xLeft, yMiddle);\r\n\r\n                            if (legendItem.hidden) {\r\n                                // Strikethrough the text if hidden\r\n                                ctx.beginPath();\r\n                                ctx.lineWidth = 2;\r\n                                ctx.moveTo(xLeft, yMiddle);\r\n                                ctx.lineTo(xLeft + textWidth, yMiddle);\r\n                                ctx.stroke();\r\n                            }\r\n                        };\r\n\r\n                        // Horizontal\r\n                        var isHorizontal = me.isHorizontal();\r\n                        if (isHorizontal) {\r\n                            cursor = {\r\n                                x: me.left + ((legendWidth - lineWidths[0]) / 2),\r\n                                y: me.top + labelOpts.padding,\r\n                                line: 0\r\n                            };\r\n                        } else {\r\n                            cursor = {\r\n                                x: me.left + labelOpts.padding,\r\n                                y: me.top + labelOpts.padding,\r\n                                line: 0\r\n                            };\r\n                        }\r\n\r\n                        var itemHeight = fontSize + labelOpts.padding;\r\n                        helpers.each(me.legendItems, function(legendItem, i) {\r\n                            var textWidth = ctx.measureText(legendItem.text).width;\r\n                            var width = boxWidth + (fontSize / 2) + textWidth;\r\n                            var x = cursor.x;\r\n                            var y = cursor.y;\r\n\r\n                            if (isHorizontal) {\r\n                                if (x + width >= legendWidth) {\r\n                                    y = cursor.y += itemHeight;\r\n                                    cursor.line++;\r\n                                    x = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\r\n                                }\r\n                            } else if (y + itemHeight > me.bottom) {\r\n                                x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\r\n                                y = cursor.y = me.top + labelOpts.padding;\r\n                                cursor.line++;\r\n                            }\r\n\r\n                            drawLegendBox(x, y, legendItem);\r\n\r\n                            hitboxes[i].left = x;\r\n                            hitboxes[i].top = y;\r\n\r\n                            // Fill the actual label\r\n                            fillText(x, y, legendItem, textWidth);\r\n\r\n                            if (isHorizontal) {\r\n                                cursor.x += width + (labelOpts.padding);\r\n                            } else {\r\n                                cursor.y += itemHeight;\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Handle an event\r\n                 * @private\r\n                 * @param {IEvent} event - The event to handle\r\n                 * @return {Boolean} true if a change occured\r\n                 */\r\n                handleEvent: function(e) {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var type = e.type === 'mouseup' ? 'click' : e.type;\r\n                    var changed = false;\r\n\r\n                    if (type === 'mousemove') {\r\n                        if (!opts.onHover) {\r\n                            return;\r\n                        }\r\n                    } else if (type === 'click') {\r\n                        if (!opts.onClick) {\r\n                            return;\r\n                        }\r\n                    } else {\r\n                        return;\r\n                    }\r\n\r\n                    // Chart event already has relative position in it\r\n                    var x = e.x;\r\n                    var y = e.y;\r\n\r\n                    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\r\n                        // See if we are touching one of the dataset boxes\r\n                        var lh = me.legendHitBoxes;\r\n                        for (var i = 0; i < lh.length; ++i) {\r\n                            var hitBox = lh[i];\r\n\r\n                            if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n                                // Touching an element\r\n                                if (type === 'click') {\r\n                                    // use e.native for backwards compatibility\r\n                                    opts.onClick.call(me, e.native, me.legendItems[i]);\r\n                                    changed = true;\r\n                                    break;\r\n                                } else if (type === 'mousemove') {\r\n                                    // use e.native for backwards compatibility\r\n                                    opts.onHover.call(me, e.native, me.legendItems[i]);\r\n                                    changed = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return changed;\r\n                }\r\n            });\r\n\r\n            function createNewLegendAndAttach(chart, legendOpts) {\r\n                var legend = new Legend({\r\n                    ctx: chart.ctx,\r\n                    options: legendOpts,\r\n                    chart: chart\r\n                });\r\n\r\n                layouts.configure(chart, legend, legendOpts);\r\n                layouts.addBox(chart, legend);\r\n                chart.legend = legend;\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'legend',\r\n\r\n                /**\r\n                 * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\r\n                 * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\r\n                 * the plugin, which one will be re-exposed in the chart.js file.\r\n                 * https://github.com/chartjs/Chart.js/pull/2640\r\n                 * @private\r\n                 */\r\n                _element: Legend,\r\n\r\n                beforeInit: function(chart) {\r\n                    var legendOpts = chart.options.legend;\r\n\r\n                    if (legendOpts) {\r\n                        createNewLegendAndAttach(chart, legendOpts);\r\n                    }\r\n                },\r\n\r\n                beforeUpdate: function(chart) {\r\n                    var legendOpts = chart.options.legend;\r\n                    var legend = chart.legend;\r\n\r\n                    if (legendOpts) {\r\n                        helpers.mergeIf(legendOpts, defaults.global.legend);\r\n\r\n                        if (legend) {\r\n                            layouts.configure(chart, legend, legendOpts);\r\n                            legend.options = legendOpts;\r\n                        } else {\r\n                            createNewLegendAndAttach(chart, legendOpts);\r\n                        }\r\n                    } else if (legend) {\r\n                        layouts.removeBox(chart, legend);\r\n                        delete chart.legend;\r\n                    }\r\n                },\r\n\r\n                afterEvent: function(chart, e) {\r\n                    var legend = chart.legend;\r\n                    if (legend) {\r\n                        legend.handleEvent(e);\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"21\": 21, \"36\": 36 }], 43: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            var noop = helpers.noop;\r\n\r\n            defaults._set('global', {\r\n                title: {\r\n                    display: false,\r\n                    fontStyle: 'bold',\r\n                    fullWidth: true,\r\n                    lineHeight: 1.2,\r\n                    padding: 10,\r\n                    position: 'top',\r\n                    text: '',\r\n                    weight: 2000         // by default greater than legend (1000) to be above\r\n                }\r\n            });\r\n\r\n            /**\r\n             * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\r\n             */\r\n            var Title = Element.extend({\r\n                initialize: function(config) {\r\n                    var me = this;\r\n                    helpers.extend(me, config);\r\n\r\n                    // Contains hit boxes for each dataset (in dataset order)\r\n                    me.legendHitBoxes = [];\r\n                },\r\n\r\n                // These methods are ordered by lifecycle. Utilities then follow.\r\n\r\n                beforeUpdate: noop,\r\n                update: function(maxWidth, maxHeight, margins) {\r\n                    var me = this;\r\n\r\n                    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                    me.beforeUpdate();\r\n\r\n                    // Absorb the master measurements\r\n                    me.maxWidth = maxWidth;\r\n                    me.maxHeight = maxHeight;\r\n                    me.margins = margins;\r\n\r\n                    // Dimensions\r\n                    me.beforeSetDimensions();\r\n                    me.setDimensions();\r\n                    me.afterSetDimensions();\r\n                    // Labels\r\n                    me.beforeBuildLabels();\r\n                    me.buildLabels();\r\n                    me.afterBuildLabels();\r\n\r\n                    // Fit\r\n                    me.beforeFit();\r\n                    me.fit();\r\n                    me.afterFit();\r\n                    //\r\n                    me.afterUpdate();\r\n\r\n                    return me.minSize;\r\n                },\r\n                afterUpdate: noop,\r\n\r\n                //\r\n\r\n                beforeSetDimensions: noop,\r\n                setDimensions: function() {\r\n                    var me = this;\r\n                    // Set the unconstrained dimension before label rotation\r\n                    if (me.isHorizontal()) {\r\n                        // Reset position before calculating rotation\r\n                        me.width = me.maxWidth;\r\n                        me.left = 0;\r\n                        me.right = me.width;\r\n                    } else {\r\n                        me.height = me.maxHeight;\r\n\r\n                        // Reset position before calculating rotation\r\n                        me.top = 0;\r\n                        me.bottom = me.height;\r\n                    }\r\n\r\n                    // Reset padding\r\n                    me.paddingLeft = 0;\r\n                    me.paddingTop = 0;\r\n                    me.paddingRight = 0;\r\n                    me.paddingBottom = 0;\r\n\r\n                    // Reset minSize\r\n                    me.minSize = {\r\n                        width: 0,\r\n                        height: 0\r\n                    };\r\n                },\r\n                afterSetDimensions: noop,\r\n\r\n                //\r\n\r\n                beforeBuildLabels: noop,\r\n                buildLabels: noop,\r\n                afterBuildLabels: noop,\r\n\r\n                //\r\n\r\n                beforeFit: noop,\r\n                fit: function() {\r\n                    var me = this;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var opts = me.options;\r\n                    var display = opts.display;\r\n                    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\r\n                    var minSize = me.minSize;\r\n                    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\r\n                    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\r\n                    var textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\r\n\r\n                    if (me.isHorizontal()) {\r\n                        minSize.width = me.maxWidth; // fill all the width\r\n                        minSize.height = textSize;\r\n                    } else {\r\n                        minSize.width = textSize;\r\n                        minSize.height = me.maxHeight; // fill all the height\r\n                    }\r\n\r\n                    me.width = minSize.width;\r\n                    me.height = minSize.height;\r\n                },\r\n                afterFit: noop,\r\n\r\n                // Shared Methods\r\n                isHorizontal: function() {\r\n                    var pos = this.options.position;\r\n                    return pos === 'top' || pos === 'bottom';\r\n                },\r\n\r\n                // Actually draw the title block on the canvas\r\n                draw: function() {\r\n                    var me = this;\r\n                    var ctx = me.ctx;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var opts = me.options;\r\n                    var globalDefaults = defaults.global;\r\n\r\n                    if (opts.display) {\r\n                        var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\r\n                        var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\r\n                        var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\r\n                        var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n                        var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\r\n                        var offset = lineHeight / 2 + opts.padding;\r\n                        var rotation = 0;\r\n                        var top = me.top;\r\n                        var left = me.left;\r\n                        var bottom = me.bottom;\r\n                        var right = me.right;\r\n                        var maxWidth, titleX, titleY;\r\n\r\n                        ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\r\n                        ctx.font = titleFont;\r\n\r\n                        // Horizontal\r\n                        if (me.isHorizontal()) {\r\n                            titleX = left + ((right - left) / 2); // midpoint of the width\r\n                            titleY = top + offset;\r\n                            maxWidth = right - left;\r\n                        } else {\r\n                            titleX = opts.position === 'left' ? left + offset : right - offset;\r\n                            titleY = top + ((bottom - top) / 2);\r\n                            maxWidth = bottom - top;\r\n                            rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\r\n                        }\r\n\r\n                        ctx.save();\r\n                        ctx.translate(titleX, titleY);\r\n                        ctx.rotate(rotation);\r\n                        ctx.textAlign = 'center';\r\n                        ctx.textBaseline = 'middle';\r\n\r\n                        var text = opts.text;\r\n                        if (helpers.isArray(text)) {\r\n                            var y = 0;\r\n                            for (var i = 0; i < text.length; ++i) {\r\n                                ctx.fillText(text[i], 0, y, maxWidth);\r\n                                y += lineHeight;\r\n                            }\r\n                        } else {\r\n                            ctx.fillText(text, 0, 0, maxWidth);\r\n                        }\r\n\r\n                        ctx.restore();\r\n                    }\r\n                }\r\n            });\r\n\r\n            function createNewTitleBlockAndAttach(chart, titleOpts) {\r\n                var title = new Title({\r\n                    ctx: chart.ctx,\r\n                    options: titleOpts,\r\n                    chart: chart\r\n                });\r\n\r\n                layouts.configure(chart, title, titleOpts);\r\n                layouts.addBox(chart, title);\r\n                chart.titleBlock = title;\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'title',\r\n\r\n                /**\r\n                 * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\r\n                 * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\r\n                 * the plugin, which one will be re-exposed in the chart.js file.\r\n                 * https://github.com/chartjs/Chart.js/pull/2640\r\n                 * @private\r\n                 */\r\n                _element: Title,\r\n\r\n                beforeInit: function(chart) {\r\n                    var titleOpts = chart.options.title;\r\n\r\n                    if (titleOpts) {\r\n                        createNewTitleBlockAndAttach(chart, titleOpts);\r\n                    }\r\n                },\r\n\r\n                beforeUpdate: function(chart) {\r\n                    var titleOpts = chart.options.title;\r\n                    var titleBlock = chart.titleBlock;\r\n\r\n                    if (titleOpts) {\r\n                        helpers.mergeIf(titleOpts, defaults.global.title);\r\n\r\n                        if (titleBlock) {\r\n                            layouts.configure(chart, titleBlock, titleOpts);\r\n                            titleBlock.options = titleOpts;\r\n                        } else {\r\n                            createNewTitleBlockAndAttach(chart, titleOpts);\r\n                        }\r\n                    } else if (titleBlock) {\r\n                        layouts.removeBox(chart, titleBlock);\r\n                        delete chart.titleBlock;\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"21\": 21, \"36\": 36 }], 44: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                // Default config for a category scale\r\n                var defaultConfig = {\r\n                    position: 'bottom'\r\n                };\r\n\r\n                var DatasetScale = Chart.Scale.extend({\r\n                    /**\r\n                    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\r\n                    * else fall back to data.labels\r\n                    * @private\r\n                    */\r\n                    getLabels: function() {\r\n                        var data = this.chart.data;\r\n                        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\r\n                    },\r\n\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var labels = me.getLabels();\r\n                        me.minIndex = 0;\r\n                        me.maxIndex = labels.length - 1;\r\n                        var findIndex;\r\n\r\n                        if (me.options.ticks.min !== undefined) {\r\n                            // user specified min value\r\n                            findIndex = labels.indexOf(me.options.ticks.min);\r\n                            me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\r\n                        }\r\n\r\n                        if (me.options.ticks.max !== undefined) {\r\n                            // user specified max value\r\n                            findIndex = labels.indexOf(me.options.ticks.max);\r\n                            me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\r\n                        }\r\n\r\n                        me.min = labels[me.minIndex];\r\n                        me.max = labels[me.maxIndex];\r\n                    },\r\n\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var labels = me.getLabels();\r\n                        // If we are viewing some subset of labels, slice the original array\r\n                        me.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\r\n                    },\r\n\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        var me = this;\r\n                        var data = me.chart.data;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        if (data.yLabels && !isHorizontal) {\r\n                            return me.getRightValue(data.datasets[datasetIndex].data[index]);\r\n                        }\r\n                        return me.ticks[index - me.minIndex];\r\n                    },\r\n\r\n                    // Used to get data value locations.  Value can either be an index or a numerical value\r\n                    getPixelForValue: function(value, index) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        // 1 is added because we need the length but we have the indexes\r\n                        var offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\r\n\r\n                        // If value is a data object, then index is the index in the data array,\r\n                        // not the index of the scale. We need to change that.\r\n                        var valueCategory;\r\n                        if (value !== undefined && value !== null) {\r\n                            valueCategory = me.isHorizontal() ? value.x : value.y;\r\n                        }\r\n                        if (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\r\n                            var labels = me.getLabels();\r\n                            value = valueCategory || value;\r\n                            var idx = labels.indexOf(value);\r\n                            index = idx !== -1 ? idx : index;\r\n                        }\r\n\r\n                        if (me.isHorizontal()) {\r\n                            var valueWidth = me.width / offsetAmt;\r\n                            var widthOffset = (valueWidth * (index - me.minIndex));\r\n\r\n                            if (offset) {\r\n                                widthOffset += (valueWidth / 2);\r\n                            }\r\n\r\n                            return me.left + Math.round(widthOffset);\r\n                        }\r\n                        var valueHeight = me.height / offsetAmt;\r\n                        var heightOffset = (valueHeight * (index - me.minIndex));\r\n\r\n                        if (offset) {\r\n                            heightOffset += (valueHeight / 2);\r\n                        }\r\n\r\n                        return me.top + Math.round(heightOffset);\r\n                    },\r\n                    getPixelForTick: function(index) {\r\n                        return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        var value;\r\n                        var offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\r\n                        var horz = me.isHorizontal();\r\n                        var valueDimension = (horz ? me.width : me.height) / offsetAmt;\r\n\r\n                        pixel -= horz ? me.left : me.top;\r\n\r\n                        if (offset) {\r\n                            pixel -= (valueDimension / 2);\r\n                        }\r\n\r\n                        if (pixel <= 0) {\r\n                            value = 0;\r\n                        } else {\r\n                            value = Math.round(pixel / valueDimension);\r\n                        }\r\n\r\n                        return value + me.minIndex;\r\n                    },\r\n                    getBasePixel: function() {\r\n                        return this.bottom;\r\n                    }\r\n                });\r\n\r\n                Chart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\r\n            };\r\n        }, {}], 45: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var Ticks = require(25);\r\n\r\n            module.exports = function(Chart) {\r\n                var defaultConfig = {\r\n                    position: 'left',\r\n                    ticks: {\r\n                        callback: Ticks.formatters.linear\r\n                    }\r\n                };\r\n\r\n                var LinearScale = Chart.LinearScaleBase.extend({\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var chart = me.chart;\r\n                        var data = chart.data;\r\n                        var datasets = data.datasets;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var DEFAULT_MIN = 0;\r\n                        var DEFAULT_MAX = 1;\r\n\r\n                        function IDMatches(meta) {\r\n                            return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\r\n                        }\r\n\r\n                        // First Calculate the range\r\n                        me.min = null;\r\n                        me.max = null;\r\n\r\n                        var hasStacks = opts.stacked;\r\n                        if (hasStacks === undefined) {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                if (hasStacks) {\r\n                                    return;\r\n                                }\r\n\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\r\n                                    meta.stack !== undefined) {\r\n                                    hasStacks = true;\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        if (opts.stacked || hasStacks) {\r\n                            var valuesPerStack = {};\r\n\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                var key = [\r\n                                    meta.type,\r\n                                    // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\r\n                                    ((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\r\n                                    meta.stack\r\n                                ].join('.');\r\n\r\n                                if (valuesPerStack[key] === undefined) {\r\n                                    valuesPerStack[key] = {\r\n                                        positiveValues: [],\r\n                                        negativeValues: []\r\n                                    };\r\n                                }\r\n\r\n                                // Store these per type\r\n                                var positiveValues = valuesPerStack[key].positiveValues;\r\n                                var negativeValues = valuesPerStack[key].negativeValues;\r\n\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        positiveValues[index] = positiveValues[index] || 0;\r\n                                        negativeValues[index] = negativeValues[index] || 0;\r\n\r\n                                        if (opts.relativePoints) {\r\n                                            positiveValues[index] = 100;\r\n                                        } else if (value < 0) {\r\n                                            negativeValues[index] += value;\r\n                                        } else {\r\n                                            positiveValues[index] += value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n\r\n                            helpers.each(valuesPerStack, function(valuesForType) {\r\n                                var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\r\n                                var minVal = helpers.min(values);\r\n                                var maxVal = helpers.max(values);\r\n                                me.min = me.min === null ? minVal : Math.min(me.min, minVal);\r\n                                me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\r\n                            });\r\n                        } else {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        if (me.min === null) {\r\n                                            me.min = value;\r\n                                        } else if (value < me.min) {\r\n                                            me.min = value;\r\n                                        }\r\n\r\n                                        if (me.max === null) {\r\n                                            me.max = value;\r\n                                        } else if (value > me.max) {\r\n                                            me.max = value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\r\n                        me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\r\n\r\n                        // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\r\n                        this.handleTickRangeOptions();\r\n                    },\r\n                    getTickLimit: function() {\r\n                        var maxTicks;\r\n                        var me = this;\r\n                        var tickOpts = me.options.ticks;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\r\n                        } else {\r\n                            // The factor of 2 used to scale the font size has been experimentally determined.\r\n                            var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\r\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\r\n                        }\r\n\r\n                        return maxTicks;\r\n                    },\r\n                    // Called after the ticks are built. We need\r\n                    handleDirectionalChanges: function() {\r\n                        if (!this.isHorizontal()) {\r\n                            // We are in a vertical orientation. The top value is the highest. So reverse the array\r\n                            this.ticks.reverse();\r\n                        }\r\n                    },\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n                    },\r\n                    // Utils\r\n                    getPixelForValue: function(value) {\r\n                        // This must be called after fit has been run so that\r\n                        // this.left, this.top, this.right, and this.bottom have been defined\r\n                        var me = this;\r\n                        var start = me.start;\r\n\r\n                        var rightValue = +me.getRightValue(value);\r\n                        var pixel;\r\n                        var range = me.end - start;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            pixel = me.left + (me.width / range * (rightValue - start));\r\n                        } else {\r\n                            pixel = me.bottom - (me.height / range * (rightValue - start));\r\n                        }\r\n                        return pixel;\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var innerDimension = isHorizontal ? me.width : me.height;\r\n                        var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\r\n                        return me.start + ((me.end - me.start) * offset);\r\n                    },\r\n                    getPixelForTick: function(index) {\r\n                        return this.getPixelForValue(this.ticksAsNumbers[index]);\r\n                    }\r\n                });\r\n                Chart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\r\n            };\r\n        }, { \"16\": 16, \"25\": 25, \"36\": 36 }], 46: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Generate a set of linear ticks\r\n             * @param generationOptions the options used to generate the ticks\r\n             * @param dataRange the range of the data\r\n             * @returns {Array<Number>} array of tick values\r\n             */\r\n            function generateTicks(generationOptions, dataRange) {\r\n                var ticks = [];\r\n                // To get a \"nice\" value for the tick spacing, we will use the appropriately named\r\n                // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\r\n                // for details.\r\n\r\n                var spacing;\r\n                if (generationOptions.stepSize && generationOptions.stepSize > 0) {\r\n                    spacing = generationOptions.stepSize;\r\n                } else {\r\n                    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\r\n                    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\r\n                }\r\n                var niceMin = Math.floor(dataRange.min / spacing) * spacing;\r\n                var niceMax = Math.ceil(dataRange.max / spacing) * spacing;\r\n\r\n                // If min, max and stepSize is set and they make an evenly spaced scale use it.\r\n                if (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\r\n                    // If very close to our whole number, use it.\r\n                    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\r\n                        niceMin = generationOptions.min;\r\n                        niceMax = generationOptions.max;\r\n                    }\r\n                }\r\n\r\n                var numSpaces = (niceMax - niceMin) / spacing;\r\n                // If very close to our rounded value, use it.\r\n                if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n                    numSpaces = Math.round(numSpaces);\r\n                } else {\r\n                    numSpaces = Math.ceil(numSpaces);\r\n                }\r\n\r\n                var precision = 1;\r\n                if (spacing < 1) {\r\n                    precision = Math.pow(10, spacing.toString().length - 2);\r\n                    niceMin = Math.round(niceMin * precision) / precision;\r\n                    niceMax = Math.round(niceMax * precision) / precision;\r\n                }\r\n                ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\r\n                for (var j = 1; j < numSpaces; ++j) {\r\n                    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\r\n                }\r\n                ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\r\n\r\n                return ticks;\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                var noop = helpers.noop;\r\n\r\n                Chart.LinearScaleBase = Chart.Scale.extend({\r\n                    getRightValue: function(value) {\r\n                        if (typeof value === 'string') {\r\n                            return +value;\r\n                        }\r\n                        return Chart.Scale.prototype.getRightValue.call(this, value);\r\n                    },\r\n\r\n                    handleTickRangeOptions: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\r\n                        // do nothing since that would make the chart weird. If the user really wants a weird chart\r\n                        // axis, they can manually override it\r\n                        if (tickOpts.beginAtZero) {\r\n                            var minSign = helpers.sign(me.min);\r\n                            var maxSign = helpers.sign(me.max);\r\n\r\n                            if (minSign < 0 && maxSign < 0) {\r\n                                // move the top up to 0\r\n                                me.max = 0;\r\n                            } else if (minSign > 0 && maxSign > 0) {\r\n                                // move the bottom down to 0\r\n                                me.min = 0;\r\n                            }\r\n                        }\r\n\r\n                        var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\r\n                        var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\r\n\r\n                        if (tickOpts.min !== undefined) {\r\n                            me.min = tickOpts.min;\r\n                        } else if (tickOpts.suggestedMin !== undefined) {\r\n                            if (me.min === null) {\r\n                                me.min = tickOpts.suggestedMin;\r\n                            } else {\r\n                                me.min = Math.min(me.min, tickOpts.suggestedMin);\r\n                            }\r\n                        }\r\n\r\n                        if (tickOpts.max !== undefined) {\r\n                            me.max = tickOpts.max;\r\n                        } else if (tickOpts.suggestedMax !== undefined) {\r\n                            if (me.max === null) {\r\n                                me.max = tickOpts.suggestedMax;\r\n                            } else {\r\n                                me.max = Math.max(me.max, tickOpts.suggestedMax);\r\n                            }\r\n                        }\r\n\r\n                        if (setMin !== setMax) {\r\n                            // We set the min or the max but not both.\r\n                            // So ensure that our range is good\r\n                            // Inverted or 0 length range can happen when\r\n                            // ticks.min is set, and no datasets are visible\r\n                            if (me.min >= me.max) {\r\n                                if (setMin) {\r\n                                    me.max = me.min + 1;\r\n                                } else {\r\n                                    me.min = me.max - 1;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (me.min === me.max) {\r\n                            me.max++;\r\n\r\n                            if (!tickOpts.beginAtZero) {\r\n                                me.min--;\r\n                            }\r\n                        }\r\n                    },\r\n                    getTickLimit: noop,\r\n                    handleDirectionalChanges: noop,\r\n\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        // Figure out what the max number of ticks we can support it is based on the size of\r\n                        // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n                        // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n                        // the graph. Make sure we always have at least 2 ticks\r\n                        var maxTicks = me.getTickLimit();\r\n                        maxTicks = Math.max(2, maxTicks);\r\n\r\n                        var numericGeneratorOptions = {\r\n                            maxTicks: maxTicks,\r\n                            min: tickOpts.min,\r\n                            max: tickOpts.max,\r\n                            stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\r\n                        };\r\n                        var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\r\n\r\n                        me.handleDirectionalChanges();\r\n\r\n                        // At this point, we need to update our max and min given the tick values since we have expanded the\r\n                        // range of the scale\r\n                        me.max = helpers.max(ticks);\r\n                        me.min = helpers.min(ticks);\r\n\r\n                        if (tickOpts.reverse) {\r\n                            ticks.reverse();\r\n\r\n                            me.start = me.max;\r\n                            me.end = me.min;\r\n                        } else {\r\n                            me.start = me.min;\r\n                            me.end = me.max;\r\n                        }\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        me.ticksAsNumbers = me.ticks.slice();\r\n                        me.zeroLineIndex = me.ticks.indexOf(0);\r\n\r\n                        Chart.Scale.prototype.convertTicksToLabels.call(me);\r\n                    }\r\n                });\r\n            };\r\n        }, { \"36\": 36 }]\r\n    }, {}, [6])(6)\r\n});\r\n","/*!\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n * MIT license http://www.opensource.org/licenses/mit-license.php/\r\n * @author Lea Verou http://lea.verou.me\r\n */\r\n(function(root) {\r\n    // Private helper vars\r\n    var lang = /\\blang(?:uage)?-(?!\\*)(\\w+)\\b/i;\r\n\r\n    var _ = prism = {\r\n        util: {\r\n            encode: function(tokens) {\r\n                if (tokens instanceof Token) {\r\n                    return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\r\n                } else if (_.util.type(tokens) === 'Array') {\r\n                    return tokens.map(_.util.encode);\r\n                } else {\r\n                    return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\r\n                }\r\n            },\r\n\r\n            type: function(o) {\r\n                return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\r\n            },\r\n\r\n            // Deep clone a language definition (e.g. to extend it)\r\n            clone: function(o) {\r\n                var type = _.util.type(o);\r\n\r\n                switch (type) {\r\n                    case 'Object':\r\n                        var clone = {};\r\n\r\n                        for (var key in o) {\r\n                            if (o.hasOwnProperty(key)) {\r\n                                clone[key] = _.util.clone(o[key]);\r\n                            }\r\n                        }\r\n\r\n                        return clone;\r\n\r\n                    case 'Array':\r\n                        // Check for existence for IE8\r\n                        return o.map && o.map(function(v) { return _.util.clone(v); });\r\n                }\r\n\r\n                return o;\r\n            }\r\n        },\r\n\r\n        languages: {\r\n            extend: function(id, redef) {\r\n                var lang = _.util.clone(_.languages[id]);\r\n\r\n                for (var key in redef) {\r\n                    lang[key] = redef[key];\r\n                }\r\n\r\n                return lang;\r\n            },\r\n\r\n            /**\r\n             * Insert a token before another token in a language literal\r\n             * As this needs to recreate the object (we cannot actually insert before keys in object literals),\r\n             * we cannot just provide an object, we need anobject and a key.\r\n             * @param inside The key (or language id) of the parent\r\n             * @param before The key to insert before. If not provided, the function appends instead.\r\n             * @param insert Object with the key/value pairs to insert\r\n             * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\r\n             */\r\n            insertBefore: function(inside, before, insert, root) {\r\n                root = root || _.languages;\r\n                var grammar = root[inside];\r\n\r\n                if (arguments.length == 2) {\r\n                    insert = arguments[1];\r\n\r\n                    for (var newToken in insert) {\r\n                        if (insert.hasOwnProperty(newToken)) {\r\n                            grammar[newToken] = insert[newToken];\r\n                        }\r\n                    }\r\n\r\n                    return grammar;\r\n                }\r\n\r\n                var ret = {};\r\n\r\n                for (var token in grammar) {\r\n                    if (grammar.hasOwnProperty(token)) {\r\n                        if (token == before) {\r\n                            for (var newToken in insert) {\r\n                                if (insert.hasOwnProperty(newToken)) {\r\n                                    ret[newToken] = insert[newToken];\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        ret[token] = grammar[token];\r\n                    }\r\n                }\r\n\r\n                // Update references in other language definitions\r\n                _.languages.DFS(_.languages, function(key, value) {\r\n                    if (value === root[inside] && key != inside) {\r\n                        this[key] = ret;\r\n                    }\r\n                });\r\n\r\n                return root[inside] = ret;\r\n            },\r\n\r\n            // Traverse a language definition with Depth First Search\r\n            DFS: function(o, callback, type, visited) {\r\n                visited = visited || {};\r\n                for (var i in o) {\r\n                    if (o.hasOwnProperty(i)) {\r\n                        callback.call(o, i, o[i], type || i);\r\n\r\n                        if (_.util.type(o[i]) === 'Object' && !visited[o[i]]) {\r\n                            visited[o[i]] = true;\r\n                            _.languages.DFS(o[i], callback, null, visited);\r\n                        }\r\n                        else if (_.util.type(o[i]) === 'Array' && !visited[o[i]]) {\r\n                            visited[o[i]] = true;\r\n                            _.languages.DFS(o[i], callback, i, visited);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        plugins: {},\r\n\r\n        highlightAll: function(async, callback) {\r\n            var elements = document.querySelectorAll('code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code');\r\n\r\n            for (var i = 0, element; element = elements[i++];) {\r\n                _.highlightElement(element, async === true, callback);\r\n            }\r\n        },\r\n\r\n        highlightElement: function(element, async, callback) {\r\n            // Find language\r\n            var language, grammar, parent = element;\r\n\r\n            while (parent && !lang.test(parent.className)) {\r\n                parent = parent.parentNode;\r\n            }\r\n\r\n            if (parent) {\r\n                language = (parent.className.match(lang) || [, ''])[1];\r\n                grammar = _.languages[language];\r\n            }\r\n\r\n            // Set language on the element, if not present\r\n            element.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\r\n\r\n            // Set language on the parent, for styling\r\n            parent = element.parentNode;\r\n\r\n            if (/pre/i.test(parent.nodeName)) {\r\n                parent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\r\n            }\r\n\r\n            var code = element.textContent;\r\n\r\n            var env = {\r\n                element: element,\r\n                language: language,\r\n                grammar: grammar,\r\n                code: code\r\n            };\r\n\r\n            if (!code || !grammar) {\r\n                _.hooks.run('complete', env);\r\n                return;\r\n            }\r\n\r\n            _.hooks.run('before-highlight', env);\r\n\r\n            if (async && root.Worker) {\r\n                var worker = new Worker(_.filename);\r\n\r\n                worker.onmessage = function(evt) {\r\n                    env.highlightedCode = evt.data;\r\n\r\n                    _.hooks.run('before-insert', env);\r\n\r\n                    env.element.innerHTML = env.highlightedCode;\r\n\r\n                    callback && callback.call(env.element);\r\n                    _.hooks.run('after-highlight', env);\r\n                    _.hooks.run('complete', env);\r\n                };\r\n\r\n                worker.postMessage(JSON.stringify({\r\n                    language: env.language,\r\n                    code: env.code,\r\n                    immediateClose: true\r\n                }));\r\n            }\r\n            else {\r\n                env.highlightedCode = _.highlight(env.code, env.grammar, env.language);\r\n\r\n                _.hooks.run('before-insert', env);\r\n\r\n                env.element.innerHTML = env.highlightedCode;\r\n\r\n                callback && callback.call(element);\r\n\r\n                _.hooks.run('after-highlight', env);\r\n                _.hooks.run('complete', env);\r\n            }\r\n        },\r\n\r\n        highlight: function(text, grammar, language) {\r\n            var tokens = _.tokenize(text, grammar);\r\n            return Token.stringify(_.util.encode(tokens), language);\r\n        },\r\n\r\n        tokenize: function(text, grammar, language) {\r\n            var Token = _.Token;\r\n\r\n            var strarr = [text];\r\n\r\n            var rest = grammar.rest;\r\n\r\n            if (rest) {\r\n                for (var token in rest) {\r\n                    grammar[token] = rest[token];\r\n                }\r\n\r\n                delete grammar.rest;\r\n            }\r\n\r\n            tokenloop: for (var token in grammar) {\r\n                if (!grammar.hasOwnProperty(token) || !grammar[token]) {\r\n                    continue;\r\n                }\r\n\r\n                var patterns = grammar[token];\r\n                patterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\r\n\r\n                for (var j = 0; j < patterns.length; ++j) {\r\n                    var pattern = patterns[j],\r\n                        inside = pattern.inside,\r\n                        lookbehind = !!pattern.lookbehind,\r\n                        lookbehindLength = 0,\r\n                        alias = pattern.alias;\r\n\r\n                    pattern = pattern.pattern || pattern;\r\n\r\n                    for (var i = 0; i < strarr.length; i++) { // Don’t cache length as it changes during the loop\r\n                        var str = strarr[i];\r\n\r\n                        if (strarr.length > text.length) {\r\n                            // Something went terribly wrong, ABORT, ABORT!\r\n                            break tokenloop;\r\n                        }\r\n\r\n                        if (str instanceof Token) {\r\n                            continue;\r\n                        }\r\n\r\n                        pattern.lastIndex = 0;\r\n\r\n                        var match = pattern.exec(str);\r\n\r\n                        if (match) {\r\n                            if (lookbehind) {\r\n                                lookbehindLength = match[1].length;\r\n                            }\r\n\r\n                            var from = match.index - 1 + lookbehindLength,\r\n                                match = match[0].slice(lookbehindLength),\r\n                                len = match.length,\r\n                                to = from + len,\r\n                                before = str.slice(0, from + 1),\r\n                                after = str.slice(to + 1);\r\n\r\n                            var args = [i, 1];\r\n\r\n                            if (before) {\r\n                                args.push(before);\r\n                            }\r\n\r\n                            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias);\r\n\r\n                            args.push(wrapped);\r\n\r\n                            if (after) {\r\n                                args.push(after);\r\n                            }\r\n\r\n                            Array.prototype.splice.apply(strarr, args);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return strarr;\r\n        },\r\n\r\n        hooks: {\r\n            all: {},\r\n\r\n            add: function(name, callback) {\r\n                var hooks = _.hooks.all;\r\n\r\n                hooks[name] = hooks[name] || [];\r\n\r\n                hooks[name].push(callback);\r\n            },\r\n\r\n            run: function(name, env) {\r\n                var callbacks = _.hooks.all[name];\r\n\r\n                if (!callbacks || !callbacks.length) {\r\n                    return;\r\n                }\r\n\r\n                for (var i = 0, callback; callback = callbacks[i++];) {\r\n                    callback(env);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var Token = _.Token = function(type, content, alias) {\r\n        this.type = type;\r\n        this.content = content;\r\n        this.alias = alias;\r\n    };\r\n\r\n    Token.stringify = function(o, language, parent) {\r\n        if (typeof o == 'string') {\r\n            return o;\r\n        }\r\n\r\n        if (_.util.type(o) === 'Array') {\r\n            return o.map(function(element) {\r\n                return Token.stringify(element, language, o);\r\n            }).join('');\r\n        }\r\n\r\n        var env = {\r\n            type: o.type,\r\n            content: Token.stringify(o.content, language, parent),\r\n            tag: 'span',\r\n            classes: ['token', o.type],\r\n            attributes: {},\r\n            language: language,\r\n            parent: parent\r\n        };\r\n\r\n        if (env.type == 'comment') {\r\n            env.attributes['spellcheck'] = 'true';\r\n        }\r\n\r\n        if (o.alias) {\r\n            var aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\r\n            Array.prototype.push.apply(env.classes, aliases);\r\n        }\r\n\r\n        _.hooks.run('wrap', env);\r\n\r\n        var attributes = '';\r\n\r\n        for (var name in env.attributes) {\r\n            attributes += (attributes ? ' ' : '') + name + '=\"' + (env.attributes[name] || '') + '\"';\r\n        }\r\n\r\n        return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\" ' + attributes + '>' + env.content + '</' + env.tag + '>';\r\n    };\r\n\r\n    root.Prism = prism;\r\n})(this);\r\n\r\nPrism.languages.sql = {\r\n    'comment': {\r\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\w\\W]*?\\*\\/|(?:--|\\/\\/|#).*)/,\r\n        lookbehind: true\r\n    },\r\n    'string': {\r\n        pattern: /(^|[^@\\\\])(\"|')(?:\\\\?[\\s\\S])*?\\2/,\r\n        lookbehind: true\r\n    },\r\n    'variable': /@[\\w.$]+|@(\"|'|`)(?:\\\\?[\\s\\S])+?\\1/,\r\n    'function': /\\b(?:COUNT|SUM|AVG|MIN|MAX|FIRST|LAST|UCASE|LCASE|MID|LEN|ROUND|NOW|FORMAT)(?=\\s*\\()/i, // Should we highlight user defined functions too?\r\n    'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR VARYING|CHARACTER (?:SET|VARYING)|CHARSET|CHECK|CHECKPOINT|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMN|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS|CONTAINSTABLE|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|DATA(?:BASES?)?|DATETIME|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE(?: PRECISION)?|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE KEY|ELSE|ENABLE|ENCLOSED BY|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPE(?:D BY)?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTO|INVOKER|ISOLATION LEVEL|JOIN|KEYS?|KILL|LANGUAGE SQL|LAST|LEFT|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MODIFIES SQL DATA|MODIFY|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL(?: CHAR VARYING| CHARACTER(?: VARYING)?| VARCHAR)?|NATURAL|NCHAR(?: VARCHAR)?|NEXT|NO(?: SQL|CHECK|CYCLE)?|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READ(?:S SQL DATA|TEXT)?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEATABLE|REPLICATION|REQUIRE|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE MODE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|START(?:ING BY)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED BY|TEXT(?:SIZE)?|THEN|TIMESTAMP|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNPIVOT|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?)\\b/i,\r\n    'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\r\n    'number': /\\b-?(?:0x)?\\d*\\.?[\\da-f]+\\b/,\r\n    'operator': /[-+*\\/=%^~]|&&?|\\|?\\||!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\r\n    'punctuation': /[;[\\]()`,.]/\r\n};\r\n","/*!\r\n * Allowing lists to dynamically expand and collapse.\r\n * Created by Stephen Morley - http://code.stephenmorley.org/ - and released under the terms of the CC0 1.0 Universal legal code:\r\n * http://creativecommons.org/publicdomain/zero/1.0/legalcode\r\n *\r\n * Modified to work with bootstrap/fontAwesome and incorporate cascading checkboxes.\r\n */\r\n(function(root, factory) {\r\n    window.CollapsibleList = factory(root.$);\r\n})(this, function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare CollapsibleList class.\r\n     * @param {Node} element - Node to make collapsible.\r\n     */\r\n    var CollapsibleList = function(element) {\r\n        this.container = $.get(element);\r\n        this.init();\r\n    };\r\n\r\n    CollapsibleList.prototype = {\r\n        init: function() {\r\n            var node = this.container;\r\n            // loop over the list items within this node\r\n            var lis = $.getAll('li', node);\r\n            for (var i = 0; i < lis.length; i++) {\r\n                // prevent text from being selected unintentionally\r\n                $.on(lis[i], 'mousedown', function(e) { e.preventDefault(); }, false);\r\n                // add the click listener\r\n                $.on(lis[i], 'click', this.createClickListener(lis[i]), false);\r\n                // close the unordered lists within this list item\r\n                this.toggle(lis[i]);\r\n\r\n                // check any parent items if this item is checked\r\n                node = $.get('input[type=\"checkbox\"]', lis[i]);\r\n                if (node.checked) {\r\n                    var p = node;\r\n                    while (this.container !== (p = p.parentNode)) {\r\n                        if (p.nodeName === 'LI') {\r\n                            var parent = p.parentNode.parentNode;\r\n                            if (parent.nodeName === 'LI') {\r\n                                var pi = $.get('input[type=\"checkbox\"]', parent);\r\n                                if (pi && pi !== node) {\r\n                                    pi.checked = true;\r\n                                }\r\n                                this.toggle(parent, true);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Toggles the display status of any unordered list elements within the specified node.\r\n         * @param {Node} node - Node containing the unordered list elements.\r\n         * @returns {Function} Click handler function.\r\n         */\r\n        createClickListener: function(node) {\r\n            var self = this;\r\n            return function(e) {\r\n                // ensure the event object is defined\r\n                e = $.coalesce(e, window.event);\r\n\r\n                // find the list item containing the target of the event\r\n                var elem = $.coalesce(e.target, e.srcElement);\r\n\r\n                // handle checking/unchecking buttons\r\n                if (elem.nodeName === 'INPUT') {\r\n                    var checked = elem.checked;\r\n\r\n                    // first toggle the check for all of the children\r\n                    var inputs = $.getAll('ul input[type=\"checkbox\"]', $.closest('li', elem));\r\n                    i = inputs.length;\r\n                    while (i--) {\r\n                        inputs[i].checked = checked;\r\n                    }\r\n\r\n                    // then check all parents. if any of the children of a checkbox are checked, then it should be checked.\r\n                    var checkedRelative = false;\r\n                    var p = elem;\r\n                    while (self.container !== (p = p.parentNode)) {\r\n                        if (p.nodeName === 'LI') {\r\n                            // see if anybody else on this node level is checked\r\n                            var relatives = $.getAll('input[type=\"checkbox\"]', p.parentNode);\r\n                            var i = relatives.length;\r\n                            checkedRelative = false;\r\n                            while (i--) {\r\n                                if (relatives[i].checked) {\r\n                                    checkedRelative = true;\r\n                                }\r\n                            }\r\n\r\n                            if (p.parentNode.parentNode !== self.container) {\r\n                                var pi = $.get('input[type=\"checkbox\"]', p.parentNode.parentNode);\r\n                                if (pi && pi !== elem) {\r\n                                    pi.checked = checkedRelative || checked;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                if ($.hasClass(elem, 'form-group') || $.hasClass(elem, 'form-icon') || (elem.parentNode && $.hasClass(elem.parentNode, 'form-group'))) {\r\n                    // prevent toggling tree when checking/unchecking an element\r\n                    return;\r\n                }\r\n\r\n                // now handle the tree itself\r\n                while (elem.nodeName !== 'LI') {\r\n                    elem = elem.parentNode;\r\n                }\r\n\r\n                // toggle the state of the node if it was the target of the event\r\n                if (elem === node) {\r\n                    self.toggle(node);\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Opens or closes the unordered list elements directly within the specified node.\r\n         * @param {Node} node - Node containing the unordered list elements.\r\n         * @param {bool} forceOpen - Set to true to force the node to be open regardless of current status.\r\n         */\r\n        toggle: function(node, forceOpen) {\r\n            // determine whether to open or close the unordered lists\r\n            var open = $.coalesce(forceOpen, $.hasClass(node, 'collapsible-list-closed'));\r\n\r\n            // loop over the unordered list elements with the node\r\n            var uls = $.getAll('ul', node);\r\n            for (var i = 0; i < uls.length; i++) {\r\n                // find the parent list item of this unordered list\r\n                var li = uls[i];\r\n                while (li.nodeName !== 'LI') {\r\n                    li = li.parentNode;\r\n                }\r\n\r\n                // style the unordered list if it is directly within this node\r\n                if (li === node) {\r\n                    uls[i].style.display = open ? 'block' : 'none';\r\n                }\r\n            }\r\n\r\n            // remove the current class from the node\r\n            $.removeClass(node, 'collapsible-list-' + (open ? 'closed' : 'open'));\r\n\r\n            // if the node contains unordered lists, set its class\r\n            if (uls.length) {\r\n                $.addClass(node, 'collapsible-list-' + (open ? 'open' : 'closed'));\r\n            }\r\n        }\r\n    };\r\n\r\n    return CollapsibleList;\r\n});\r\n","/*!\r\n * Validator that converts HTML5 form validation errors into bootstrap friendly errors.\r\n * Based on the library below, but ported from jQuery to native js.\r\n *\r\n * Validator v0.9.0 for Bootstrap 3, by @1000hz\r\n * Copyright 2015 Cina Saffary\r\n * Licensed under http://opensource.org/licenses/MIT\r\n * https://github.com/1000hz/bootstrap-validator\r\n *\r\n * Modified to use Dash's core library instead of jQuery, with unneeded functionality removed.\r\n */\r\n(function(root, factory) {\r\n    root.Validator = factory(root.$);\r\n})(this, function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare validator class.\r\n     * @param {Node} element - Form to validate.\r\n     * @param {Object} errorMsgs - Error messages for custom errors.\r\n     */\r\n    var Validator = function(element, errorMsgs) {\r\n        this.element = element;\r\n        this.element.setAttribute('novalidate', true); // disable automatic native validation\r\n        this.errorMsgs = $.extend({}, Validator._errors, errorMsgs || {});\r\n\r\n        var inputs = $.getAll('[data-match]', this.element);\r\n        for (var i = 0; i < inputs.length; i++) {\r\n            // add the data match attribute to the target if it doesn't already exist\r\n            var target = inputs[i].getAttribute('data-match');\r\n            if (target) {\r\n                var targetElement = $.get('#' + target, this.element);\r\n                if (targetElement && !targetElement.hasAttribute('data-match')) {\r\n                    targetElement.setAttribute('data-match', inputs[i].id);\r\n                }\r\n            }\r\n        }\r\n\r\n        // check for pre-existing error classes because razor is weird sometimes\r\n        this.resetAll();\r\n\r\n        $.on(this.element, 'input', this.validateInput.bind(this));\r\n        $.on(this.element, 'change', this.validateInput.bind(this));\r\n        $.on(this.element, 'focusout', this.validateInput.bind(this));\r\n        $.on(this.element, 'submit', this.onSubmit.bind(this));\r\n        $.on(this.element, 'formValidate', this.validate.bind(this));\r\n    };\r\n\r\n    /**\r\n     * Default error messages for custom errors.\r\n     * @type {Object}\r\n     */\r\n    Validator._errors = {\r\n        match: '{0} does not match {1}.',\r\n        minlength: 'This field is not long enough.'\r\n    };\r\n\r\n    /**\r\n     * Functions to validate inputs against.\r\n     * @type {Object}\r\n     */\r\n    Validator.VALIDATORS = {\r\n        'native': function(el) {\r\n            return el.checkValidity();\r\n        },\r\n        'match': function(el) {\r\n            var target = $.get('#' + el.getAttribute('data-match'), this.element);\r\n            var res = !target ? false : el.value === target.value;\r\n            if (res) {\r\n                el.setCustomValidity('');\r\n            } else {\r\n                el.setCustomValidity(this.errorMsgs.match.replace('{0}', el.name).replace('{1}', el.getAttribute('data-match')));\r\n            }\r\n            return res;\r\n        },\r\n        'minlength': function(el) {\r\n            var minlength = el.getAttribute('data-minlength');\r\n            var res = !el.value || el.value.length >= minlength;\r\n            if (res) {\r\n                el.setCustomValidity('');\r\n            } else {\r\n                el.setCustomValidity(this.errorMsgs.minlength);\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n\r\n    Validator.prototype = {\r\n        /**\r\n         * Validate a single input element.\r\n         * @param {Node} e - Element to validate\r\n         */\r\n        validateInput: function(e) {\r\n            var el;\r\n            if (this.isValidatableInput(e)) {\r\n                el = e;\r\n            } else if (e.target && this.isValidatableInput(e.target)) {\r\n                el = e.target;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            if (el.type === 'radio') {\r\n                el = $.getAll('input[name=\"' + el.getAttribute('name') + '\"]', self.element);\r\n            }\r\n\r\n            if (e.defaultPrevented) {\r\n                return;\r\n            }\r\n\r\n            var errors = this.runValidators(el);\r\n            if (errors.length) {\r\n                self.showErrors(el, errors);\r\n            } else {\r\n                self.clearErrors(el);\r\n                if (el.getAttribute('data-match')) {\r\n                    self.clearErrors($.get('#' + el.getAttribute('data-match'), self.element));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get all the validatable inputs in the form.\r\n         * @returns {Node[]} Array of input elements.\r\n         */\r\n        inputSelector: function() {\r\n            var inputs = $.getAll('input,select,textarea', this.element);\r\n            var length = inputs.length, i = 0, results = [];\r\n            for (; i < length; i++) {\r\n                var input = inputs[i];\r\n                if (input.type !== 'submit' && input.type !== 'button' && !input.getAttribute('disabled') && input.style.visibility !== 'hidden') {\r\n                    results.push(input);\r\n                } else {\r\n                    // remove error class on disabled items\r\n                    $.removeClass(input, 'form-control-error');\r\n                }\r\n            }\r\n            return results;\r\n        },\r\n\r\n        /**\r\n         * Get all the inputs in the form and remove error styling.\r\n         */\r\n        resetAll: function() {\r\n            $.getAll('input,select,textarea', this.element).forEach(function(x) {\r\n                $.removeClass(x, 'form-control-error');\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Check if a node is an input that can be validated.\r\n         * @param {Node} input - Node to check.\r\n         * @returns {bool} True if input is an input that can be validated.\r\n         */\r\n        isValidatableInput: function(input) {\r\n            return (input.tagName === 'INPUT' || input.tagName === 'SELECT' || input.tagName === 'TEXTAREA') && !input.getAttribute('disabled') && input.style.visibility !== 'hidden';\r\n        },\r\n\r\n        /**\r\n         * Run all of the validator functions against an element.\r\n         * @param {Node} el - Element to validate.\r\n         * @returns {string[]} Array of error messages.\r\n         */\r\n        runValidators: function(el) {\r\n            var errors = [];\r\n\r\n            for (var key in Validator.VALIDATORS) {\r\n                if (Validator.VALIDATORS.hasOwnProperty(key)) {\r\n                    var validator = Validator.VALIDATORS[key];\r\n                    var attr = el.getAttribute('data-' + key);\r\n                    if ((attr || key === 'native') && !validator.call(this, el)) {\r\n                        var error = el.getAttribute('data' + key + '-error') || el.getAttribute('data-error') || (key === 'native' ? el.validationMessage : this.errorMsgs[key]);\r\n                        if (key === 'match') {\r\n                            error = error.replace('{0}', el.name).replace('{1}', attr);\r\n                        }\r\n                        !~errors.indexOf(error) && errors.push(error);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        validate: function() {\r\n            var inputs = this.inputSelector();\r\n            var length = inputs.length, i = 0;\r\n            for (; i < length; i++) {\r\n                this.validateInput(inputs[i]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Display errors for an element.\r\n         * @param {Node} el - Element to display errors for.\r\n         * @param {string[]} errors - List of error messages.\r\n         */\r\n        showErrors: function(el, errors) {\r\n            if (!errors.length) {\r\n                return;\r\n            }\r\n\r\n            var group = $.closest('.form-group', el);\r\n            var block = $.get('.help-block.with-errors', group);\r\n\r\n            if (block) {\r\n                var errorElement = document.createElement('ul');\r\n                $.addClass(errorElement, 'list-unstyled');\r\n\r\n                var errHtml = '', i = 0, len = errors.length;\r\n                for (; i < len; i++) {\r\n                    errHtml += '<li>' + errors[i] + '</li>';\r\n                }\r\n                errorElement.innerHTML = errHtml;\r\n\r\n                block.innerHTML = '';\r\n                block.appendChild(errorElement);\r\n            }\r\n\r\n            $.addClass(el, 'form-control-error');\r\n\r\n            var tab = $.closest('.tab-pane', el);\r\n            if (tab) {\r\n                // add error class to tab\r\n                var id = tab.getAttribute('aria-labelledby');\r\n                if (id) {\r\n                    $.addClass($.get('#' + id), 'tab-validation-error');\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Hide all error messages for an element.\r\n         * @param {Node} el - Element to hide errors for.\r\n         */\r\n        clearErrors: function(el) {\r\n            $.removeClass(el, 'form-control-error');\r\n\r\n            var group = $.closest('.form-group', el);\r\n            if (group) {\r\n                var block = $.get('.help-block.with-errors', group);\r\n                if (block) {\r\n                    block.innerHTML = '';\r\n                }\r\n            }\r\n            var tab = $.closest('.tab-pane', el);\r\n            if (tab) {\r\n                if ($.getAll('.form-control-error', tab).length == 0) {\r\n                    var id = tab.getAttribute('aria-labelledby');\r\n                    if (id) {\r\n                        $.removeClass($.get('#' + id), 'tab-validation-error');\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check if the validator found any errors.\r\n         * @returns {bool} True if there are any errors.\r\n         */\r\n        hasErrors: function() {\r\n            return $.getAll('.form-control-error', this.element).length;\r\n        },\r\n\r\n        /**\r\n         * Validate the form and prevent submit if there are errors.\r\n         * @param {Event} e - Form submit event.\r\n         */\r\n        onSubmit: function(e) {\r\n            this.validate();\r\n            if (this.hasErrors()) {\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    };\r\n\r\n    return Validator;\r\n});\r\n","/*!\r\n * Color helper library.\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Convert hex string to RGB.\r\n     * @param {string} hex - Hex string.\r\n     * @returns {Object} Object with RGB properties.\r\n     */\r\n    var hex2rgb = function(hex) {\r\n        return { r: parseInt(hex.substr(1, 2), 16), g: parseInt(hex.substr(3, 2), 16), b: parseInt(hex.substr(5, 2), 16) };\r\n    };\r\n\r\n    /**\r\n     * Converts an RGB color value to HSL. Conversion formula\r\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n     * Assumes r, g, and b are contained in the set [0, 255] and\r\n     * returns h, s, and l in the set [0, 1].\r\n     * @param {Object} rgb - Object with r, g, and b properties.\r\n     * @return {Number[]} The HSL representation.\r\n     */\r\n    var rgb2hsl = function(rgb) {\r\n        var r = rgb.r, g = rgb.g, b = rgb.b;\r\n        r /= 255, g /= 255, b /= 255;\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if (max === min) {\r\n            h = s = 0; // achromatic\r\n        } else {\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch (max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        return [h, s, l];\r\n    };\r\n\r\n    $.colors = {\r\n        hex2rgb: hex2rgb,\r\n        rgb2hsl: rgb2hsl,\r\n    };\r\n})(this.$);\r\n","/*!\r\n * ColorPicker mithril component.\r\n */\r\n(function(root, factory) {\r\n    root.ColorPicker = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    var _keys = {\r\n        ESC: 27,\r\n        DOWN: 40,\r\n        UP: 38,\r\n        LEFT: 37,\r\n        RIGHT: 39\r\n    };\r\n\r\n    var ColorPicker = {\r\n        /**\r\n         * Initialize the component.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            this.opts = {\r\n                value: attrs.value,\r\n                name: attrs.name,\r\n                active: false,\r\n                disabled: attrs.disabled,\r\n                onSelect: attrs.onSelect,\r\n                onCancel: attrs.onCancel,\r\n                container: null,\r\n                selectedIndex: -1,\r\n                colors: ['#4D4D4D', '#F44E3B', '#0000FF', '#FE9200', '#FCDC00', '#00FF00', '#A4DD00', '#68CCCA',\r\n                    '#73D8FF', '#AEA1FF', '#FDA1FF', '#D33115', '#E27300', '#FCC400', '#B0BC00', '#68BC00',\r\n                    '#16A5A5', '#009CE0', '#7B64FF', '#FA28FF', '#9F0500', '#C45100', '#FB9E00',\r\n                    '#808900', '#194D33', '#0C797D', '#0062B1', '#653294', '#AB149E'\r\n                ]\r\n            };\r\n            if (this.opts.value) {\r\n                this.opts.selectedIndex = this.opts.colors.indexOf(this.opts.value);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Grab the DOM containing node after it is created.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oncreate: function(vnode) {\r\n            this.opts.container = vnode.dom;\r\n        },\r\n\r\n        /**\r\n         * Update the opts in case the component name is changed.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         * @param vnode\r\n         */\r\n        onupdate: function(vnode) {\r\n            if (vnode.attrs) {\r\n                this.opts.name = vnode.attrs.name;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check special keys and respond accordingly.\r\n         * @param {Event} e - Keypress event.\r\n         */\r\n        onKeyDown: function(e) {\r\n            if (this.opts.disabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.opts.active) {\r\n                if (e.keyCode === _keys.ESC) {\r\n                    this.close();\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                } else if (e.keyCode === _keys.DOWN || e.keyCode === _keys.LEFT) {\r\n                    this.selectIndex(Math.min(this.opts.selectedIndex + 1, this.opts.colors.length - 1));\r\n                } else if (e.keyCode === _keys.UP || e.keyCode === _keys.RIGHT) {\r\n                    this.selectIndex(Math.max(this.opts.selectedIndex - 1, 0));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select an item from the list by index.\r\n         * @param {Event} e - Event that triggered this\r\n         * @param {Number} index - Index of the color being selected\r\n         */\r\n        selectColor: function(e, index) {\r\n            var target = e && e.target ? e.target : e;\r\n            if (target) {\r\n                this.opts.value = target.getAttribute('data-value') || target.parentNode.getAttribute('data-value');\r\n                target.scrollIntoView();\r\n\r\n                if (this.opts.onSelect) {\r\n                    this.opts.onSelect(this.opts.value);\r\n                }\r\n            }\r\n            if (index) {\r\n                this.opts.selectedIndex = index;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select an item from the list by index.\r\n         * @param {number} index - Filtered list item index.\r\n         */\r\n        selectIndex: function(index) {\r\n            var swatches = $.getAll('.swatch', this.opts.container);\r\n            if (swatches && swatches[index]) {\r\n                this.opts.selectedIndex = index;\r\n                swatches[index].focus();\r\n                if ($.hasClass(swatches[index], 'swatch-selectable')) {\r\n                    this.selectColor(swatches[index], index);\r\n                }\r\n            }\r\n        },\r\n\r\n        close: function() {\r\n            this.opts.active = false;\r\n            var trigger = $.get('.colorpicker-trigger', this.opts.container);\r\n            if (trigger) {\r\n                trigger.focus();\r\n            }\r\n        },\r\n\r\n        showEditor: function() {\r\n            if (this.opts.disabled) {\r\n                return;\r\n            }\r\n            this.opts.active = !this.opts.active;\r\n        },\r\n\r\n        /**\r\n         * Create HTML to display component.\r\n         * @returns {Object} Mithril vnode\r\n         */\r\n        view: function() {\r\n            var self = this;\r\n            return m('.mithril-colorpicker', {\r\n                class: this.opts.active ? 'active' : '', onkeydown: this.onKeyDown.bind(this)\r\n            }, m('button.btn.btn-secondary.colorpicker-trigger', {\r\n                type: 'button', role: 'button', disabled: this.opts.disabled,\r\n                onclick: this.showEditor.bind(this),\r\n                style: 'background-color: ' + this.opts.value\r\n            }, [m.trust('&nbsp;'), m('i.dash.colorpicker-indicator', { class: this.opts.active ? 'dash-sort-up' : 'dash-sort-down' })]), this.opts.active && m('.editor', [\r\n                m('.swatches',\r\n                    m('button.btn.btn-secondary.swatch', {\r\n                        type: 'button', role: 'button', onclick: this.close.bind(this)\r\n                    }, m('i.dash.dash-cancel')),\r\n                    this.opts.colors.map(function(x) {\r\n                        return m('button.btn.btn-secondary.swatch.swatch-selectable', {\r\n                            class: self.opts.value === x ? 'active' : '',\r\n                            type: 'button', role: 'button', 'data-value': x,\r\n                            style: 'background-color: ' + x + '; color: ' + x, onclick: self.selectColor.bind(self)\r\n                        }, m('i.dash.dash-cancel'));\r\n                    })\r\n                )\r\n            ]), m('input', { type: 'hidden', name: this.opts.name, value: this.opts.value }));\r\n        }\r\n    };\r\n\r\n    return ColorPicker;\r\n});\r\n","/*!\r\n * Mithril based table component. Supports ajax data, searching, sorting, paging, & resizing columns.\r\n */\r\n(function(root, factory) {\r\n    root.Table = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    var Table = {\r\n        pageOptions: [m('option', { value: '10' }, '10'), m('option', { value: '20' }, '20'), m('option', { value: '50' }, '50'), m('option', { value: '100' }, '100')],\r\n\r\n        /**\r\n         * Get/set persistent values.\r\n         * @param {string} key - Key name of the value to get/set.\r\n         * @param {*} value - Value to set.\r\n         * @returns {string|undefined} Value if getting, else undefined.\r\n         */\r\n        store: function(key, value) {\r\n            var myKey = this.opts.id + '.' + key;\r\n            // getter\r\n            if ($.isUndefined(value)) {\r\n                return $.isNull(this.opts.storageFunction) ? localStorage[myKey] : $.coalesce(this.opts[key], null);\r\n            }\r\n\r\n            // setter\r\n            if ($.isNull(this.opts.storageFunction)) {\r\n                localStorage[myKey] = value;\r\n            } else {\r\n                // ignore the param actually passed and use the values from the object\r\n                // passing the whole object lets the storage function decide when to actually save using a debounce\r\n                if ($.isFunction(this.opts.storageFunction)) {\r\n                    this.opts.storageFunction({\r\n                        itemsPerPage: this.itemsPerPage,\r\n                        currentStartItem: this.currentStartItem,\r\n                        searchQuery: this.searchQuery,\r\n                        width: this.width,\r\n                        sorting: this.sorting,\r\n                        columnWidths: this.opts.columns.map(function(c) { return { field: c.field, width: c.width * 1.0 }; })\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Process the data array result from the ajax request.\r\n         * @param {Object[]} data - Array of records to display.\r\n         */\r\n        processData: function(data) {\r\n            if (this.opts.dataCallback) {\r\n                this.opts.dataCallback(data);\r\n            }\r\n\r\n            var i = 0, len = data.rows.length, j = 0;\r\n            for (; i < len; i++) {\r\n                // add an index to the data so we can reset to the default sort order later if the user wants\r\n                data.rows[i]._index = i;\r\n\r\n                var x;\r\n                // convert input to appropriate types\r\n                for (j = 0; j < this.intColumns.length; j++) {\r\n                    x = this.intColumns[j];\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : data.rows[i][x] * 1;\r\n                }\r\n                for (j = 0; j < this.dateColumns.length; j++) {\r\n                    x = this.dateColumns[j];\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : $.fecha.parse(data.rows[i][x], this.opts.dataDateFormat);\r\n                }\r\n                for (j = 0; j < this.currencyColumns.length; j++) {\r\n                    x = this.currencyColumns[j];\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : $.accounting.unformat(data.rows[i][x]);\r\n                }\r\n            }\r\n            this.data = data.rows;\r\n            this.filteredTotal = data.filteredTotal;\r\n\r\n            this.loading = false;\r\n            this.sort(false);\r\n            this.filterResults();\r\n        },\r\n\r\n        /**\r\n         * Load the data to populate the table.\r\n         */\r\n        loadData: function() {\r\n            this.loading = true;\r\n            this.loadingError = false;\r\n\r\n            var self = this;\r\n            $.ajax({\r\n                method: this.opts.requestMethod,\r\n                url: this.opts.url,\r\n                data: this.buildParams(),\r\n                block: false\r\n            }, this.processData.bind(this), function(data) {\r\n                self.loading = false;\r\n                self.loadingError = true;\r\n                if (self.opts.errorCallback) {\r\n                    self.opts.errorCallback(data);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Force the table to refresh its data.\r\n         */\r\n        refresh: function() {\r\n            this.loading = true;\r\n            this.loadingError = false;\r\n            m.redraw();\r\n            this.loadData();\r\n        },\r\n\r\n        /**\r\n         * Build querystring params to fetch data from the server.\r\n         * @returns {Object} Request parameters.\r\n         */\r\n        buildParams: function() {\r\n            var sort = this.sorting.length > 0 ? this.sorting.map(function(obj, i) { return { field: obj.field, dir: obj.dir, index: i }; }) : null;\r\n            if (this.opts.requestUsePascalCase) {\r\n                return $.extend(this.opts.requestParams, {\r\n                    StartItem: this.currentStartItem,\r\n                    Items: this.itemsPerPage,\r\n                    Query: this.searchQuery,\r\n                    Sort: $.toPascalKeys(sort)\r\n                });\r\n            }\r\n            return $.extend(this.opts.requestParams, {\r\n                startItem: this.currentStartItem,\r\n                items: this.itemsPerPage,\r\n                query: this.searchQuery,\r\n                sort: sort\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Set the first item index to display.\r\n         * @param {type} index - Record index to start on.\r\n         */\r\n        setCurrentStartItem: function(index) {\r\n            this.currentStartItem = index;\r\n            this.store('currentStartItem', index);\r\n            this.filterResults(true);\r\n        },\r\n\r\n        /**\r\n         * Set the number of items to display per page.\r\n         * @param {number|Event} e - Number or items per page, or an event that triggered the change.\r\n         */\r\n        setItemsPerPage: function(e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var items = (isNaN(e) ? e.target.value : e) * 1;\r\n            if (this.itemsPerPage !== items) {\r\n                this.itemsPerPage = items;\r\n                this.store('itemsPerPage', items);\r\n                this.setCurrentStartItem(0);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set the search query for filtering table data.\r\n         * @param {string} val - New search text.\r\n         */\r\n        setSearchQuery: function(val) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var query = val.target ? val.target.value : val;\r\n            if (this.searchQuery !== query) {\r\n                this.searchQuery = query;\r\n                clearTimeout(this.requestTimer);\r\n                this.requestTimer = setTimeout(this.runSearch.bind(this, query), this.opts.inputTimeout);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change search query and filter results.\r\n         * @param {string} query - New search text.\r\n         */\r\n        runSearch: function(query) {\r\n            this.store('searchQuery', query);\r\n            this.requestTimer = null;\r\n            this.currentStartItem = 0;\r\n            this.filterResults(true);\r\n            m.redraw();\r\n        },\r\n\r\n        /**\r\n         * Filter the data based on the search query, current page, and items per page.\r\n         * @param {bool} refresh - Force it to refresh its data.\r\n         */\r\n        filterResults: function(refresh) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            if (refresh && !this.opts.loadAllData) {\r\n                // force the data to reload. filterResults will get called again after the data loads\r\n                this.loadData();\r\n            } else if (!this.opts.loadAllData) {\r\n                // we're not loading all the data to begin with. so whatever data we have should be displayed.\r\n                this.results = this.data;\r\n                this.pageTotal = Math.ceil(this.filteredTotal / this.itemsPerPage);\r\n                m.redraw();\r\n            } else {\r\n                // we're loading all the data to begin with. so figure out what data to display.\r\n                var filteredTotal = 0;\r\n                if (this.data.constructor !== Array) {\r\n                    this.loading = true;\r\n                    this.results = [];\r\n                } else {\r\n                    var startItem = this.currentStartItem;\r\n                    var res = this.searchQuery ? this.data.filter(this.filterArray.bind(this.searchQuery.toLowerCase())) : this.data;\r\n                    filteredTotal = res.length;\r\n                    this.results = res.slice(startItem, startItem + this.itemsPerPage);\r\n                }\r\n\r\n                this.filteredTotal = filteredTotal;\r\n                this.pageTotal = Math.ceil(filteredTotal / this.itemsPerPage);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Page forward or backward.\r\n         * @param {number} d - Direction to move, 1 is forward, -1 is backward.\r\n         * @param {number} m - Move to end (first or last page) if true.\r\n         */\r\n        moveToPage: function(d, m) {\r\n            this.changePage(d === 1 ? m ? this.pageTotal : this.currentStartItem / this.itemsPerPage + 2 : m ? 1 : this.currentStartItem / this.itemsPerPage);\r\n        },\r\n\r\n        /**\r\n         * Move to the specified page number.\r\n         * @param {number|Event} e - New page number, or an event that triggered the change.\r\n         */\r\n        changePage: function(e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var page = (isNaN(e) ? e.target.value : e) * 1;\r\n            if (page <= this.pageTotal && page > 0) {\r\n                this.setCurrentStartItem((page - 1) * this.itemsPerPage);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change the sorting order.\r\n         * @param {string} fieldName - Name of the field to sort on.\r\n         * @param {string} dataType - Data type of the field.\r\n         * @param {Event} e - Event that triggered the change.\r\n         */\r\n        changeSort: function(fieldName, dataType, e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var val = $.findByKey(this.sorting, 'field', fieldName);\r\n            if (e.shiftKey) {\r\n                document.getSelection().removeAllRanges();\r\n            } else {\r\n                this.sorting = [];\r\n            }\r\n\r\n            if (val === null) {\r\n                this.sorting.push({ field: fieldName, dir: 'ASC', dataType: dataType || 'string' });\r\n            } else if (e.shiftKey) {\r\n                if (val.dir === 'DESC') {\r\n                    this.sorting.splice(val._i, 1);\r\n                } else {\r\n                    val.dir = 'DESC';\r\n                    this.sorting[val._i] = val;\r\n                }\r\n            } else {\r\n                val.dir = val.dir === 'ASC' ? 'DESC' : 'ASC';\r\n                this.sorting.push(val);\r\n            }\r\n\r\n            this.sort();\r\n            this.setCurrentStartItem(0);\r\n        },\r\n\r\n        /**\r\n         * Sort the underlying data.\r\n         * @param {bool} refresh - Refresh the data from the server.\r\n         */\r\n        sort: function(refresh) {\r\n            refresh = $.coalesce(refresh, true);\r\n            this.data.sort(this.sorting.length > 0 ? this.compare.bind(this) : this.defaultCompare);\r\n            this.filterResults(refresh);\r\n            this.store('sorting', JSON.stringify(this.sorting));\r\n        },\r\n\r\n        /**\r\n         * Set up the table and column styles and events.\r\n         */\r\n        setLayout: function() {\r\n            if (this.layoutSet) {\r\n                return;\r\n            }\r\n\r\n            this.layoutSet = true;\r\n            this.table = $.get('.table-data-table', this.content);\r\n            this.table.style.tableLayout = 'fixed';\r\n            this.tableHeaderRow = this.table.tHead.rows[0];\r\n\r\n            if (this.table !== null) {\r\n                this.clientWidth = this.content.clientWidth;\r\n                this.table.tHead.style.width = this.table.style.width = (this.width / 100 * this.table.offsetWidth) + 'px';\r\n\r\n                var hWidth = this.table.tHead.offsetWidth;\r\n                var tWidth = this.table.offsetWidth;\r\n                var i = 0;\r\n                var cells = this.tableHeaderRow.cells;\r\n                this.opts.columns.forEach(function(x) {\r\n                    if (!x.width) {\r\n                        x.width = cells[i].offsetWidth / hWidth * 100;\r\n                    }\r\n                    cells[i].style.width = x.width / 100 * tWidth + 'px';\r\n                    ++i;\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update the table and column widths based on a window resize.\r\n         */\r\n        onResize: function() {\r\n            var cWidth = this.content.clientWidth;\r\n            if (cWidth === 0) {\r\n                return;\r\n            }\r\n            var scale = cWidth / this.clientWidth;\r\n            this.clientWidth = cWidth;\r\n            this.table.tHead.style.width = this.table.style.width = (this.pixelToFloat(this.table.style.width) * scale) + 'px';\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                this.tableHeaderRow.cells[i].style.width = (this.pixelToFloat(this.tableHeaderRow.cells[i].style.width) * scale) + 'px';\r\n            }\r\n            this.updateLayout();\r\n        },\r\n\r\n        /**\r\n         * Update the table header style.\r\n         */\r\n        updateLayout: function() {\r\n            if (!$.isVisible(this.table)) {\r\n                return;\r\n            }\r\n            $.get('.table-scrollable', this.content).style.paddingTop = this.table.tHead.offsetHeight + 'px';\r\n            var colGroup = $.get('.table-column-group', this.content);\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                colGroup.children[i].style.width = this.tableHeaderRow.cells[i].style.width;\r\n            }\r\n            if (this.clientWidth > 0 && this.content.clientWidth / this.clientWidth !== 1) {\r\n                this.onResize();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Make the table header scroll horizontally with the table\r\n         * @param {Event} e - Event that triggered the scroll.\r\n         */\r\n        onScroll: function(e) {\r\n            var head = this.table.tHead;\r\n            var scroll = e.target;\r\n            if (-head.offsetLeft !== scroll.scrollLeft) {\r\n                head.style.left = '-' + scroll.scrollLeft + 'px';\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handle dragging to change column widths.\r\n         * @param {type} e - Event that triggered the change.\r\n         */\r\n        onHeaderMouseDown: function(e) {\r\n            if (e.button !== 0) {\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            var callbackFunc = function(cellEl) {\r\n                e.stopImmediatePropagation();\r\n                e.preventDefault();\r\n\r\n                self.resizeContext = {\r\n                    colIndex: cellEl.cellIndex,\r\n                    initX: e.clientX,\r\n                    scrWidth: $.get('.table-scrollable', self.content).offsetWidth,\r\n                    initTblWidth: self.table.offsetWidth,\r\n                    initColWidth: self.pixelToFloat($.get('.table-column-group', self.content).children[cellEl.cellIndex].style.width),\r\n                    layoutTimer: null\r\n                };\r\n            };\r\n            self.inResizeArea(e, callbackFunc);\r\n        },\r\n\r\n        /**\r\n         * Handle resizing columns.\r\n         * @param {Event} e - Event that triggered the change.\r\n         */\r\n        onMouseMove: function(e) {\r\n            var newStyle = '';\r\n            var cursorFunc = function() {\r\n                newStyle = 'col-resize';\r\n            };\r\n            this.inResizeArea(e, cursorFunc);\r\n            if (this.table.tHead.style.cursor !== newStyle) {\r\n                this.table.tHead.style.cursor = newStyle;\r\n            }\r\n\r\n            var ctx = this.resizeContext;\r\n            if ($.isNull(ctx)) {\r\n                return;\r\n            }\r\n\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n\r\n            var newColWidth = Math.max(ctx.initColWidth + e.clientX - ctx.initX, this.opts.columnMinWidth);\r\n            this.table.tHead.style.width = this.table.style.width = (ctx.initTblWidth + (newColWidth - ctx.initColWidth)) + 'px';\r\n            $.get('.table-column-group', this.content).children[ctx.colIndex].style.width = this.tableHeaderRow.cells[ctx.colIndex].style.width = newColWidth + 'px';\r\n\r\n            if (ctx.layoutTimer === null) {\r\n                var self = this;\r\n                var timerFunc = function() {\r\n                    self.resizeContext.layoutTimer = null;\r\n                    self.updateLayout();\r\n                };\r\n                ctx.layoutTimer = setTimeout(timerFunc, 25);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update column widths and save them.\r\n         */\r\n        onMouseUp: function() {\r\n            var ctx = this.resizeContext;\r\n            if ($.isNull(ctx)) {\r\n                return;\r\n            }\r\n\r\n            if (ctx.layoutTimer !== null) {\r\n                clearTimeout(ctx.layoutTimer);\r\n            }\r\n            this.resizeContext = null;\r\n\r\n            var newTblWidth = this.table.offsetWidth;\r\n            this.width = (newTblWidth / ctx.scrWidth * 100).toFixed(2);\r\n            this.store('width', this.width);\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                this.opts.columns[i].width = (this.pixelToFloat(this.tableHeaderRow.cells[i].style.width) / newTblWidth * 100).toFixed(2);\r\n                this.store(this.opts.columns[i].field + '.width', this.opts.columns[i].width);\r\n            }\r\n\r\n            this.updateLayout();\r\n        },\r\n\r\n        /**\r\n         * Check if the cursor is in the area where the user can click to drag a column.\r\n         * @param {Event} e - Event that triggered the check.\r\n         * @param {Function} callback - Function to run if in the resize area.\r\n         */\r\n        inResizeArea: function(e, callback) {\r\n            var tblX = e.clientX;\r\n            var el;\r\n            for (el = this.table.tHead; el !== null; el = el.offsetParent) {\r\n                tblX -= el.offsetLeft + el.clientLeft - el.scrollLeft;\r\n            }\r\n\r\n            var cellEl = e.target;\r\n            while (cellEl !== this.table.tHead && cellEl !== null) {\r\n                if (cellEl.nodeName === 'TH') {\r\n                    break;\r\n                }\r\n                cellEl = cellEl.parentNode;\r\n            }\r\n\r\n            if (cellEl === this.table.tHead) {\r\n                for (var i = this.tableHeaderRow.cells.length - 1; i >= 0; i--) {\r\n                    cellEl = this.tableHeaderRow.cells[i];\r\n                    if (cellEl.offsetLeft <= tblX) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (cellEl !== null) {\r\n                var x = tblX;\r\n                for (el = cellEl; el !== this.table.tHead; el = el.offsetParent) {\r\n                    if (el === null) {\r\n                        break;\r\n                    }\r\n                    x -= el.offsetLeft - el.scrollLeft + el.clientLeft;\r\n                }\r\n                if (x < 10 && cellEl.cellIndex !== 0) {\r\n                    callback.call(this, cellEl.previousElementSibling);\r\n                } else if (x > cellEl.clientWidth - 10) {\r\n                    callback.call(this, cellEl);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Make column resizing play nice with touch. http://stackoverflow.com/questions/28218888/touch-event-handler-overrides-click-handlers\r\n         * @param {Event} e Event that triggered the handler.\r\n         */\r\n        touchHandler: function(e) {\r\n            var mouseEvent = null;\r\n            var simulatedEvent = document.createEvent('MouseEvent');\r\n            var touch = e.changedTouches[0];\r\n\r\n            switch (e.type) {\r\n                case 'touchstart':\r\n                    mouseEvent = 'mousedown';\r\n                    this.totalDistance = 0;\r\n                    this.lastSeenAt.x = touch.clientX;\r\n                    this.lastSeenAt.y = touch.clientY;\r\n                    break;\r\n                case 'touchmove':\r\n                    mouseEvent = 'mousemove';\r\n                    break;\r\n                case 'touchend':\r\n                    if (this.lastSeenAt.x) {\r\n                        this.totalDistance += Math.sqrt(Math.pow(this.lastSeenAt.y - touch.clientY, 2) + Math.pow(this.lastSeenAt.x - touch.clientX, 2));\r\n                    }\r\n                    mouseEvent = this.totalDistance > 5 ? 'mouseup' : 'click';\r\n                    this.lastSeenAt = { x: null, y: null };\r\n                    break;\r\n            }\r\n\r\n            simulatedEvent.initMouseEvent(mouseEvent, true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);\r\n            touch.target.dispatchEvent(simulatedEvent);\r\n            e.preventDefault();\r\n        },\r\n\r\n        /**\r\n         * Get the value for the field coverted to the correct data type.\r\n         * @param {string} value - Value to convert.\r\n         * @returns {*} Converted value.\r\n         */\r\n        getFieldValue: function(value) {\r\n            if ($.isNull(value)) {\r\n                return null;\r\n            }\r\n            return value.getMonth ? value : value.toLowerCase ? value.toLowerCase() : value;\r\n        },\r\n\r\n        /**\r\n         * Get the formatted value to display for the field.\r\n         * @param {string} value - Value to format.\r\n         * @param {string} dataType - Data type to format to.\r\n         * @returns {*} Converted value.\r\n         */\r\n        getDisplayValue: function(value, dataType) {\r\n            if (!dataType || $.isNull(value)) {\r\n                return value;\r\n            }\r\n\r\n            var val = value;\r\n            if (dataType === 'currency') {\r\n                val = $.accounting.formatMoney(val, this.opts.displayCurrencyFormat);\r\n            } else if (dataType === 'date') {\r\n                val = $.fecha.format(val, this.opts.displayDateFormat);\r\n            }\r\n            return val;\r\n        },\r\n\r\n        /**\r\n         * Default sorting function for the data - resets to order when data was loaded.\r\n         * @param {Object} a - First object to compare.\r\n         * @param {Object} b - Object to compare to.\r\n         * @returns {number} 1 if a comes first, -1 if b comes first, else 0.\r\n         */\r\n        defaultCompare: function(a, b) {\r\n            return a._index > b._index ? 1 : a._index < b._index ? -1 : 0;\r\n        },\r\n\r\n        /**\r\n         * Multi-sorting function for the data.\r\n         * @param {Object} a - First object to compare.\r\n         * @param {Object} b - Object to compare to.\r\n         * @returns {number} 1 if a comes first, -1 if b comes first, else 0.\r\n         */\r\n        compare: function(a, b) {\r\n            var sorting = this.sorting;\r\n            var i = 0, len = sorting.length;\r\n            for (; i < len; i++) {\r\n                var sort = sorting[i];\r\n                var aa = this.getFieldValue(a[sort.field]);\r\n                var bb = this.getFieldValue(b[sort.field]);\r\n\r\n                if (aa === null) {\r\n                    return 1;\r\n                }\r\n                if (bb === null) {\r\n                    return -1;\r\n                }\r\n                if (aa < bb) {\r\n                    return sort.dir === 'ASC' ? -1 : 1;\r\n                }\r\n                if (aa > bb) {\r\n                    return sort.dir === 'ASC' ? 1 : -1;\r\n                }\r\n            }\r\n            return 0;\r\n        },\r\n\r\n        /**\r\n         * Filter an array of objects to find objects where value contains the value of `this`\r\n         * @param {Object} obj - Object to search in.\r\n         * @returns {bool} True if object contains `this`.\r\n         */\r\n        filterArray: function(obj) {\r\n            for (var key in obj) {\r\n                if (key.indexOf('_') < 0 && obj.hasOwnProperty(key) && (obj[key] + '').toLowerCase().indexOf(this) > -1) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Convert a style with 'px' to a float.\r\n         * @param {string} val - CSS style to convert.\r\n         * @returns {number} Numeric value.\r\n         */\r\n        pixelToFloat: function(val) {\r\n            return val.replace('px', '').replace('%', '') * 1.0;\r\n        },\r\n\r\n        /**\r\n         * Build the table header tags.\r\n         * @param {Object} obj - Column to build the tag for.\r\n         * @returns {Object} Mithril TH node.\r\n         */\r\n        tableHeaders: function(obj) {\r\n            var field = obj.field;\r\n            var attrs = { class: obj.classes || '' };\r\n\r\n            var content = [obj.label || field];\r\n            if ($.isUndefined(obj.sortable) || obj.sortable === true) {\r\n                var val = $.findByKey(this.sorting, 'field', field);\r\n                var arrowAttrs = {\r\n                    class: val ? (val.dir === 'ASC' ? 'dash-sort-up' : 'dash-sort-down') : this.opts.editable ? 'dash-sort' : ''\r\n                };\r\n                if (this.opts.editable) {\r\n                    arrowAttrs.onclick = this.changeSort.bind(this, field, obj.dataType.toLowerCase());\r\n                }\r\n                content.push(m('i.float-right.dash.data-table-arrow', arrowAttrs));\r\n            } else {\r\n                attrs.class += ' disabled';\r\n            }\r\n            if (this.opts.editable) {\r\n                attrs.onmousedown = this.onHeaderMouseDown.bind(this);\r\n            }\r\n            return m('th.text-no-select', attrs, content);\r\n        },\r\n\r\n        /**\r\n         * Build the view that actually shows the table.\r\n         * @returns {Object}  Mithril DIV node.\r\n         */\r\n        view: function() {\r\n            return m('.data-table', [\r\n                !this.opts.editable ? m('span#table-items-per-page') :\r\n                    m('.container',\r\n                        m('.columns.form-horizontal.m-2', [\r\n                            m('.col-4',\r\n                                this.opts.searchable ? m('.input-group.col-8.col-mr-auto', [\r\n                                    m('span.input-group-addon.text-no-select', m('i.dash.dash-search')),\r\n                                    m('input.form-input', { type: 'text', oninput: this.setSearchQuery.bind(this), value: this.searchQuery, disabled: this.loading })\r\n                                ]) : null\r\n                            ),\r\n                            m('.col-4',\r\n                                m('.text-center', (this.opts.headerButtons || []).map(function(x) {\r\n                                    return m(x.type, x.attributes, x.label);\r\n                                }))\r\n                            ),\r\n                            m('.col-4',\r\n                                m('.input-group.col-8.col-ml-auto', [\r\n                                    m('span.input-group-addon.text-no-select', this.opts.resources.perPage),\r\n                                    m('select.form-select', {\r\n                                        id: 'table-items-per-page', onchange: this.setItemsPerPage.bind(this),\r\n                                        value: this.itemsPerPage, disabled: this.loading\r\n                                    }, this.pageOptions)\r\n                                ])\r\n                            )\r\n                        ])\r\n                    ),\r\n                m('.table-scrollable', { class: this.opts.editable ? '' : ' table-no-edit' }, [\r\n                    m('.table-area', { onscroll: this.onScroll.bind(this) }, [\r\n                        m('table.table.table-hover.table-sm.table-striped.table-data-table', [\r\n                            m('colgroup.table-column-group', this.colGroups),\r\n                            m('thead', [m('tr', this.opts.columns.map(this.tableHeaders.bind(this)))]),\r\n                            m('tbody', this.tableBodyView())\r\n                        ])\r\n                    ])\r\n                ]),\r\n                this.tableFooterView()\r\n            ]);\r\n        },\r\n\r\n        /**\r\n         * Build a single table cell.\r\n         * @param {Object} obj - Table record to build cell for.\r\n         * @param {number} index - Row index of this row.\r\n         * @param {Object} column - Column to build cell for.\r\n         * @returns {Object} Mithril TD node.\r\n         */\r\n        tableCellView: function(obj, index, column) {\r\n            return m('td', this.columnRenderer[column.field](obj, column, index));\r\n        },\r\n\r\n        /**\r\n         * Build a table row.\r\n         * @param {Object} obj - Table record to build row for.\r\n         * @param {number} index - Row index of this row.\r\n         * @returns {Object} Mithril TR node.\r\n         */\r\n        tableRowView: function(obj, index) {\r\n            return m('tr', { key: obj._index }, this.opts.columns.map(this.tableCellView.bind(this, obj, index)));\r\n        },\r\n\r\n        /**\r\n         * Build the table footer nodes\r\n         * @returns {Object} Mithril TR node(s).\r\n         */\r\n        tableBodyView: function() {\r\n            if (this.loading) {\r\n                return m('tr', m('td', { colspan: this.opts.columns.length }, m('.loading.loading-lg')));\r\n            }\r\n            if (this.loadingError) {\r\n                return m('tr.table-loading-error', m('td', { colspan: this.opts.columns.length }, [\r\n                    m('.table-loading-error-message', this.opts.resources.loadingError),\r\n                    m('.btn.btn-info', { onclick: this.refresh.bind(this) }, this.opts.resources.tryAgain)\r\n                ]));\r\n            }\r\n            if (this.filteredTotal === 0) {\r\n                return m('tr', [m('td', { colspan: this.opts.columns.length }, this.opts.resources.noData)]);\r\n            }\r\n            return this.results.map(this.tableRowView.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Build the table footer nodes.\r\n         * @returns {Object} Mithril DIV node.\r\n         */\r\n        tableFooterView: function() {\r\n            if (this.loading || this.loadingError) {\r\n                return null;\r\n            }\r\n\r\n            var currentPage = (this.currentStartItem + this.itemsPerPage) / this.itemsPerPage;\r\n            if (this.opts.pageDropdown) {\r\n                // limit page dropdown to 10000 options\r\n                var max = Math.min(this.pageTotal, 10000);\r\n                var optionList = [max], i = max;\r\n                while (i > 0) {\r\n                    optionList[i] = m('option', { value: i }, i);\r\n                    --i;\r\n                }\r\n            }\r\n\r\n            var res = this.opts.resources;\r\n            return m('.container', m('.columns.m-2', [\r\n                m('.col-4.btn-toolbar', { class: this.filteredTotal > this.itemsPerPage ? '' : ' invisible' }, [\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.firstPage, onclick: this.moveToPage.bind(this, -1, true)\r\n                    }, m('i.dash.dash-to-start-alt.text-primary')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.previousPage, onclick: this.moveToPage.bind(this, -1, false)\r\n                    }, m('i.dash.dash-to-start.text-primary')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.nextPage, onclick: this.moveToPage.bind(this, 1, false)\r\n                    }, m('i.dash.dash-to-end.text-primary')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.lastPage, onclick: this.moveToPage.bind(this, 1, true)\r\n                    }, m('i.dash.dash-to-end-alt.text-primary'))\r\n                ]),\r\n                m('.col-4', { class: this.filteredTotal > this.itemsPerPage ? '' : ' invisible' },\r\n                    !this.opts.pageDropdown ? null : m('.input-group.col-8.col-mx-auto', [\r\n                        m('span.input-group-addon.text-no-select', res.page),\r\n                        m('select.form-select', { onchange: this.changePage.bind(this), value: currentPage, disabled: this.pageTotal === 0 }, optionList)\r\n                    ])\r\n                ),\r\n                m('.col-4.text-right.my-auto', res.showing\r\n                    .replace('{0}', Math.min(this.currentStartItem + 1, this.filteredTotal))\r\n                    .replace('{1}', Math.min(this.currentStartItem + this.itemsPerPage, this.filteredTotal))\r\n                    .replace('{2}', this.filteredTotal)\r\n                )\r\n            ]));\r\n        },\r\n\r\n        oninit: function(vnode) {\r\n            var opts = vnode.attrs || {};\r\n\r\n            var data = null;\r\n            if (opts.data) {\r\n                data = opts.data;\r\n                delete opts.data;\r\n            }\r\n\r\n            this.opts = $.extend({\r\n                content: null,\r\n                id: null,\r\n                columns: [],\r\n                url: '',\r\n                requestMethod: 'GET',\r\n                requestUsePascalCase: true,\r\n                requestParams: {},\r\n                searchable: true,\r\n                loadAllData: true,\r\n                inputTimeout: 200,\r\n                columnMinWidth: 50,\r\n                width: 100,\r\n                editable: true,\r\n                pageDropdown: true,\r\n                headerButtons: null,\r\n                storageFunction: null,\r\n                itemsPerPage: null,\r\n                searchQuery: null,\r\n                currentStartItem: null,\r\n                sorting: null,\r\n                dataCallback: null,\r\n                errorCallback: null,\r\n                dataDateFormat: 'YYYY-MM-DD HH:mm:ss',\r\n                displayDateFormat: 'YYYY-MM-DD HH:mm',\r\n                displayCurrencyFormat: '{s:$} {[t:,][d:.][p:2]}',\r\n                resources: {\r\n                    firstPage: $.resx('firstPage'),\r\n                    previousPage: $.resx('previousPage'),\r\n                    nextPage: $.resx('nextPage'),\r\n                    lastPage: $.resx('lastPage'),\r\n                    noData: $.resx('noData'),\r\n                    showing: $.resx('showing'),\r\n                    page: $.resx('page') || 'Page',\r\n                    perPage: $.resx('perPage'),\r\n                    loadingError: $.resx('loadingError'),\r\n                    tryAgain: $.resx('tryAgain')\r\n                }\r\n            }, opts);\r\n\r\n            this.layoutSet = false;\r\n            this.data = null;\r\n            this.loading = true;\r\n            this.loadingError = false;\r\n            this.filteredTotal = 0;\r\n            this.results = [];\r\n            this.pageTotal = 0;\r\n            this.totalDistance = 0;\r\n            this.lastSeenAt = { x: null, y: null };\r\n            this.columnRenderer = {};\r\n            this.colGroups = [];\r\n            this.events = {};\r\n            this.intColumns = [];\r\n            this.dateColumns = [];\r\n            this.currencyColumns = [];\r\n\r\n            var self = this;\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                var column = this.opts.columns[i];\r\n                column.width = $.hasPositiveValue(column.width) ? column.width : this.store(column.field + '.width');\r\n                if (!($.isNull(column.links) || column.links.length === 0)) {\r\n                    column.links = column.links.filter(function(link) {\r\n                        return !$.isNull(link);\r\n                    });\r\n                }\r\n\r\n                this.columnRenderer[column.field] = $.isNull(column.links) || column.links.length === 0 ?\r\n                    function(obj, column) { return self.getDisplayValue(obj[column.field], column.dataType.toLowerCase()); } :\r\n                    function(obj, column) {\r\n                        return column.links.map(function(link) {\r\n                            var label = $.coalesce(link.label, self.getDisplayValue(obj[column.field], column.dataType.toLowerCase()));\r\n                            var attr = $.clone(link.attributes) || {};\r\n                            var href = link.href || null;\r\n                            if (href) {\r\n                                for (var prop in obj) {\r\n                                    if (href.indexOf('{' + prop + '}') > -1 && obj.hasOwnProperty(prop)) {\r\n                                        href = href.replace(new RegExp('{' + prop + '}', 'g'), obj[prop]);\r\n                                    }\r\n                                }\r\n                            }\r\n                            var classes = attr['class'].split(' ');\r\n                            var isBtn = classes.indexOf('btn') !== -1;\r\n                            if (isBtn) {\r\n                                attr['type'] = attr['role'] = 'button';\r\n                            } else {\r\n                                classes.push('btn');\r\n                                classes.push('btn-link');\r\n                            }\r\n                            if (classes.indexOf('dash-ajax') === -1) {\r\n                                classes.push('dash-ajax');\r\n                            }\r\n                            attr['class'] = classes.filter(function(x) { return x && x.length; }).join(' ');\r\n                            attr['data-method'] = link.method ? link.method.toUpperCase() : 'GET';\r\n                            attr['data-href'] = href;\r\n                            attr['title'] = label;\r\n                            return m(isBtn ? 'button' : 'a', attr, $.isNull(link.icon) ? label : m('i', { class: 'dash dash-' + link.icon.toLowerCase() }));\r\n                        });\r\n                    };\r\n\r\n                this.colGroups.push(m('col'));\r\n\r\n                var type = column.dataType.toLowerCase();\r\n                if (type === 'int') {\r\n                    this.intColumns.push(column.field);\r\n                } else if (type === 'date') {\r\n                    this.dateColumns.push(column.field);\r\n                } else if (type === 'currency') {\r\n                    this.currencyColumns.push(column.field);\r\n                }\r\n            }\r\n\r\n            if (this.opts.headerButtons) {\r\n                this.opts.headerButtons = this.opts.headerButtons.filter(function(x) {\r\n                    return !$.isNull(x);\r\n                });\r\n            }\r\n\r\n            this.itemsPerPage = this.store('itemsPerPage') * 1 || 10;\r\n            this.currentStartItem = this.store('currentStartItem') * 1 || 0;\r\n            this.searchQuery = this.store('searchQuery') || '';\r\n            this.width = this.store('width') * 1 || 100;\r\n            var sorting = this.store('sorting');\r\n            this.sorting = (typeof sorting === 'string' ? JSON.parse(sorting) : sorting) || [];\r\n\r\n            if (data) {\r\n                this.processData({ rows: data });\r\n            } else {\r\n                this.loadData();\r\n            }\r\n        },\r\n\r\n        oncreate: function(vnode) {\r\n            this.content = vnode.dom.parentNode;\r\n            if (this.opts.editable) {\r\n                this.events = {\r\n                    resize: $.debounce(this.onResize.bind(this), 50),\r\n                    move: this.onMouseMove.bind(this),\r\n                    up: this.onMouseUp.bind(this),\r\n                    touch: this.touchHandler.bind(this),\r\n                    refresh: this.refresh.bind(this),\r\n                    updateLayout: this.updateLayout.bind(this)\r\n                };\r\n                $.on(window, 'resize', this.events.resize);\r\n                $.on(window, 'mousemove', this.events.move);\r\n                $.on(window, 'mouseup', this.events.up);\r\n\r\n                var header = $.get('thead', this.table);\r\n                if (header) {\r\n                    $.on(header, 'touchstart', this.events.touch);\r\n                    $.on(header, 'touchmove', this.events.touch);\r\n                    $.on(header, 'touchend', this.events.touch);\r\n                    $.on(header, 'touchcancel', this.events.touch);\r\n                }\r\n            }\r\n            $.on(this.content, $.events.tableRefresh, this.events.refresh);\r\n            $.on(this.content, $.events.layoutUpdate, this.events.updateLayout);\r\n\r\n            this.setLayout();\r\n            this.updateLayout();\r\n            $.dialogs.processContent(this.table);\r\n        },\r\n\r\n        onupdate: function() {\r\n            this.setLayout();\r\n            this.updateLayout();\r\n            $.dialogs.processContent(this.table);\r\n        },\r\n\r\n        onremove: function() {\r\n            if (this.opts.editable) {\r\n                $.off(window, 'resize', this.events.resize);\r\n                $.off(window, 'mousemove', this.events.move);\r\n                $.off(window, 'mouseup', this.events.up);\r\n\r\n                var header = $.get('thead', this.table);\r\n                if (header) {\r\n                    $.off(header, 'touchstart', this.events.touch);\r\n                    $.off(header, 'touchmove', this.events.touch);\r\n                    $.off(header, 'touchend', this.events.touch);\r\n                    $.off(header, 'touchcancel', this.events.touch);\r\n                }\r\n            }\r\n            $.off(this.content, $.events.tableRefresh, this.events.refresh);\r\n            $.off(this.content, $.events.layoutUpdate, this.events.updateLayout);\r\n        }\r\n    };\r\n\r\n    return Table;\r\n});\r\n","/*!\r\n * Wraps functionality needed for creating charts using Chart.js.\r\n */\r\n(function(root, factory) {\r\n    root.DashChart = factory(root.$, root.Alertify, root.Chart);\r\n})(this, function($, Alertify, Chart) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare DashChart class.\r\n     * @param {Node} content - DOM node that contains the chart.\r\n     * @param {bool} showLegend - Show or hide the chart legend.\r\n     * @param {Function} dataFn - Function to call if after loading data. Runs before other functions.\r\n     * @param {Function} errorFn - Function to call if an error occurs loading data.\r\n     * @param {Function} toggleExportFn - Function to enable/disable export.\r\n     */\r\n    var DashChart = function(content, showLegend, dataFn, errorFn, toggleExportFn) {\r\n        this.content = content;\r\n        this.url = content.getAttribute('data-url');\r\n        this.canvas = $.get('.chart-canvas', content);\r\n        this.showLegend = $.coalesce(showLegend, true);\r\n        this.dataFn = dataFn;\r\n        this.errorFn = errorFn;\r\n        this.toggleExportFn = toggleExportFn;\r\n        this.chart = null;\r\n        this.events = { resize: $.debounce(this.resize.bind(this), 50) };\r\n        $.on(window, 'resize', this.events.resize);\r\n        this.run();\r\n    };\r\n\r\n    DashChart.prototype = {\r\n        /**\r\n         * Generate a random number within range.\r\n         * @param {number[]} range - Min and max value.\r\n         * @returns {number} Random number.\r\n         */\r\n        randomWithin: function(range) {\r\n            return Math.floor(range[0] + Math.random() * (range[1] + 1 - range[0]));\r\n        },\r\n\r\n        /**\r\n         * Generates a random color and a lighter partner color.\r\n         * @returns {string[]} Color codes.\r\n         */\r\n        randomColor: function() {\r\n            var hsl = [this.randomWithin([0, 360]), this.randomWithin([50, 100]), this.randomWithin([30, 80])];\r\n            return [\r\n                'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%, 1)',\r\n                'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%, .2)'\r\n            ];\r\n        },\r\n\r\n        /**\r\n         * Generates an array of random colors.\r\n         * @param {number} cnt - Number of colors to generate.\r\n         * @returns {string[]} Array of color codes.\r\n         */\r\n        randomColors: function(cnt) {\r\n            var result = new Array(cnt);\r\n            for (var i = 0; i < cnt; i++) {\r\n                result[i] = this.randomColor()[0];\r\n            }\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Parse a hex color into a hsla color and a lighter partner color.\r\n         * @param {string} hex - Hex color code with leading '#'.\r\n         * @returns {string[]} Color codes.\r\n         */\r\n        parseColor: function(hex) {\r\n            if (!hex) {\r\n                return this.randomColor();\r\n            }\r\n            var hsl = $.colors.rgb2hsl($.colors.hex2rgb(hex));\r\n            return [\r\n                'hsla(' + (hsl[0] * 360).toFixed(0) + ',' + (hsl[1] * 100).toFixed(0) + '%,' + (hsl[2] * 100).toFixed(0) + '%, 1)',\r\n                'hsla(' + (hsl[0] * 360).toFixed(0) + ',' + (hsl[1] * 100).toFixed(0) + '%,' + (hsl[2] * 100).toFixed(0) + '%, .2)'\r\n            ];\r\n        },\r\n\r\n        run: function() {\r\n            var self = this;\r\n\r\n            $.show($.get('.chart-spinner', self.content));\r\n            $.hide($.get('.chart-error', self.content));\r\n            $.hide(self.canvas);\r\n            if (self.toggleExportFn) {\r\n                self.toggleExportFn(false);\r\n            }\r\n\r\n            $.ajax({\r\n                method: 'POST',\r\n                url: self.url,\r\n                block: false\r\n            }, function(data) {\r\n                if ($.isFunction(self.dataFn)) {\r\n                    if (!self.dataFn(data)) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                var ranges = $.isArray(data.ranges) ? data.ranges : [data];\r\n                if (!ranges.some(function(x) { return x.rows && x.rows.length; })) {\r\n                    $.hide($.get('.chart-spinner', self.content));\r\n                    Alertify.error($.resx('chart.noData'));\r\n                    return;\r\n                }\r\n\r\n                $.hide($.get('.chart-spinner', self.content));\r\n                $.hide($.get('.chart-error', self.content));\r\n                $.show(self.canvas);\r\n                if (self.toggleExportFn) {\r\n                    self.toggleExportFn(true);\r\n                }\r\n\r\n                if (self.chart) {\r\n                    // this code is used for refreshing dashboard chart data, but won't be used on the chart dialog\r\n                    ranges.forEach(function(x, i) {\r\n                        self.chart.data.datasets[i].data = ranges[i].rows;\r\n                        self.chart.data.datasets[i].label = ranges[i].yTitle;\r\n                    });\r\n                    self.chart.data.labels = ranges[0].labels;\r\n                    self.chart.update();\r\n                } else {\r\n                    var scales = {};\r\n                    var tooltips = { callbacks: {} };\r\n                    if (ranges[0].xType === 'currency') {\r\n                        var currencyFormat = $.accounting.parseFormat(ranges[0].currencyFormat);\r\n                        scales.xAxes = [{\r\n                            ticks: {\r\n                                callback: function(value) {\r\n                                    return $.accounting.formatMoney(value, currencyFormat);\r\n                                }\r\n                            }\r\n                        }];\r\n                        tooltips.callbacks.title = function(tooltipItems, data) {\r\n                            var title = '';\r\n                            if (tooltipItems.length > 0) {\r\n                                if (tooltipItems[0].xLabel) {\r\n                                    title = tooltipItems[0].xLabel;\r\n                                } else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n                                    title = data.labels[tooltipItems[0].index];\r\n                                }\r\n                                title = $.accounting.formatMoney(title, currencyFormat);\r\n                            }\r\n                            return title;\r\n                        };\r\n                    } else if (ranges[0].xType === 'date') {\r\n                        var dateFormat = ranges[0].dateFormat;\r\n                        scales.xAxes = [{\r\n                            ticks: {\r\n                                callback: function(value) {\r\n                                    return $.fecha.format(new Date(value), dateFormat);\r\n                                }\r\n                            }\r\n                        }];\r\n                        tooltips.callbacks.title = function(tooltipItems, data) {\r\n                            var title = '';\r\n                            if (tooltipItems.length > 0) {\r\n                                if (tooltipItems[0].xLabel) {\r\n                                    title = tooltipItems[0].xLabel;\r\n                                } else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n                                    title = data.labels[tooltipItems[0].index];\r\n                                }\r\n                                title = $.fecha.format(new Date(title), dateFormat);\r\n                            }\r\n                            return title;\r\n                        };\r\n                    }\r\n\r\n                    var chartType = data.type.toLowerCase();\r\n                    var isRadial = chartType === 'pie' || chartType === 'doughnut';\r\n                    var datasets = [];\r\n                    scales.yAxes = [];\r\n                    ranges.forEach(function(x, i) {\r\n                        var color = self.parseColor(x.color);\r\n                        datasets.push({\r\n                            backgroundColor: color[0],\r\n                            borderColor: 'rgb(255, 255, 255)',\r\n                            borderWidth: 2,\r\n                            data: x.rows,\r\n                            label: x.yTitle,\r\n                            yAxisID: 'y-axis-' + i\r\n                        });\r\n\r\n                        var ticks = {};\r\n                        if (x.yType === 'currency') {\r\n                            var currencyFormat = $.accounting.parseFormat(x.currencyFormat);\r\n                            ticks.callback = function(value) {\r\n                                return $.accounting.formatMoney(value, currencyFormat);\r\n                            };\r\n                            tooltips.callbacks.label = function(item) {\r\n                                return $.accounting.formatMoney(item.yLabel, currencyFormat);\r\n                            };\r\n                        } else if (x.yType === 'date') {\r\n                            var dateFormat = x.dateFormat;\r\n                            ticks.callback = function(value) {\r\n                                return $.fecha.format(new Date(value), dateFormat);\r\n                            };\r\n                            tooltips.callbacks.label = function(item) {\r\n                                return $.fecha.format(new Date(item.yLabel), dateFormat);\r\n                            };\r\n                        }\r\n\r\n                        if (!isRadial) {\r\n                            scales.yAxes.push({\r\n                                id: 'y-axis-' + i,\r\n                                position: i === 0 ? 'left' : 'right',\r\n                                ticks: ticks,\r\n                                gridLines: {\r\n                                    color: color[1]\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    var chartData = {\r\n                        type: chartType === 'horizontalbar' ? 'horizontalBar' : chartType,\r\n                        options: {\r\n                            scales: isRadial ? null : scales,\r\n                            tooltips: tooltips,\r\n                            legend: { display: self.showLegend }\r\n                        },\r\n                        data: {\r\n                            labels: ranges[0].labels,\r\n                            datasets: datasets\r\n                        }\r\n                    };\r\n\r\n                    if (isRadial) {\r\n                        chartData.data.datasets[0].backgroundColor = self.randomColors(ranges[0].rows.length);\r\n                    }\r\n\r\n                    self.chart = new Chart(self.canvas.getContext('2d'), chartData);\r\n                }\r\n            }, function() {\r\n                if ($.isFunction(self.errorFn)) {\r\n                    if (!self.errorFn()) {\r\n                        return;\r\n                    }\r\n                }\r\n                $.hide($.get('.chart-spinner', self.content));\r\n                $.show($.get('.chart-error', self.content));\r\n                if (self.toggleExportFn) {\r\n                    self.toggleExportFn(false);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @todo Eventually this may not be necessary, but responsive functionality for Chart.js does not seem to work correctly.\r\n         */\r\n        resize: function() {\r\n            if (this.chart) {\r\n                this.chart.resize();\r\n            }\r\n        },\r\n\r\n        destroy: function() {\r\n            $.destroy(this.chart);\r\n            if (this.events) {\r\n                $.off(window, 'resize', this.events.resize);\r\n            }\r\n        }\r\n    };\r\n\r\n    return DashChart;\r\n});\r\n","/*!\r\n * Mithril based form component. For repetitive form elements.\r\n */\r\n(function(root, factory) {\r\n    root.Form = factory(root.m, root.$, root.Alertify, root.Help);\r\n})(this, function(m, $, Alertify, Help) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare form class.\r\n     * @param {Object} opts - Form settings\r\n     * @param {Object[]} records - Array of objects the form will display/update.\r\n     */\r\n    function Form(opts, records) {\r\n        opts = opts || {};\r\n        this.opts = $.extend({\r\n            container: null,\r\n            id: null,\r\n            columns: null,\r\n            wantsHelp: false,\r\n            appendRecord: false,\r\n            resx: {\r\n                deleteRecord: $.resx('delete'),\r\n                confirmDelete: $.resx('confirmDelete'),\r\n                confirmDeleteAll: $.resx('confirmDeleteAll'),\r\n                areYouSure: $.resx('areYouSure'),\r\n                moveUp: $.resx('moveUp'),\r\n                moveDown: $.resx('moveDown'),\r\n                help: $.resx('help')\r\n            }\r\n        }, opts);\r\n\r\n        this.container = $.get(this.opts.container);\r\n        this.records = $.isArray(records) ? records.map(function(x, i) { x._index = i; return x; }) : [];\r\n        this.addedCount = 0;\r\n        this.changed = false;\r\n    }\r\n\r\n    Form.prototype = {\r\n        /**\r\n         * Get the value of an element.\r\n         * @param {*} e - Event that triggered the value change, or the new value.\r\n         * @returns {string} Value of the element.\r\n         */\r\n        targetVal: function(e) {\r\n            return e && e.target ? e.target.value : e;\r\n        },\r\n\r\n        /**\r\n         * Set the value of a field on a record.\r\n         * @param {number} index - Record index.\r\n         * @param {string} field - Name of field to set.\r\n         * @param {Event} e - Event that triggered the change.\r\n         * @returns {bool} True if value changed, else false.\r\n         */\r\n        set: function(index, field, e) {\r\n            var val = this.targetVal(e);\r\n            if (this.opts.columns[field].type === 'int') {\r\n                val = $.isNull(val) ? null : val * 1;\r\n            }\r\n\r\n            if ($.isFunction(this.opts.columns[field].setter)) {\r\n                this.opts.columns[field].setter.call(this, index, field, e);\r\n            } else {\r\n                if (this.records[index][field] !== val) {\r\n                    this.records[index][field] = val;\r\n                    this.changed = true;\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        addRecord: function() {\r\n            --this.addedCount;\r\n            var obj = $.clone(this.opts.newRecord);\r\n            obj._index = this.addedCount;\r\n            if (this.opts.appendRecord) {\r\n                this.records.push(obj);\r\n            } else {\r\n                this.records.unshift(obj);\r\n            }\r\n            this.changed = true;\r\n        },\r\n\r\n        /**\r\n         * Delete a record.\r\n         * @param {number} index - Record index to delete.\r\n         * @param {Event} e - Event that triggered the delete.\r\n         */\r\n        deleteRecord: function(index, e) {\r\n            var self = this;\r\n            if ($.isFunction(this.opts.deleteFn)) {\r\n                this.opts.deleteFn.call(this, index, e);\r\n            } else {\r\n                // timeout prevents hitting enter on the button to trigger this confirmation from confirming it immediately\r\n                setTimeout(function() {\r\n                    Alertify.confirm(self.opts.resx.areYouSure, function(e) {\r\n                        self.records.splice(index, 1);\r\n                        if ($.isFunction(self.opts.afterDeleteFn)) {\r\n                            self.opts.afterDeleteFn.call(self, index, e);\r\n                        }\r\n                        self.changed = true;\r\n                        self.run();\r\n                    });\r\n                }, 100);\r\n            }\r\n        },\r\n\r\n        deleteAllRecords: function() {\r\n            var self = this;\r\n            setTimeout(function() {\r\n                Alertify.confirm(self.opts.resx.areYouSure, function() {\r\n                    self.records = [];\r\n                    self.changed = true;\r\n                    self.run();\r\n                });\r\n            }, 100);\r\n        },\r\n\r\n        /**\r\n         * Move a record up in the record list.\r\n         * @param {number} index - Index of record to move up.\r\n         */\r\n        moveUp: function(index) {\r\n            var t = this.records[index - 1];\r\n            if (t) {\r\n                this.records[index - 1] = this.records[index];\r\n                this.records[index] = t;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Move a record down in the record list.\r\n         * @param {number} index - Index of record to move down.\r\n         */\r\n        moveDown: function(index) {\r\n            var t = this.records[index + 1];\r\n            if (t) {\r\n                this.records[index + 1] = this.records[index];\r\n                this.records[index] = t;\r\n            }\r\n        },\r\n\r\n        hasRecords: function() {\r\n            return this.records && this.records.length > 0;\r\n        },\r\n\r\n        /**\r\n         * Trigger the click event if the enter or space key is hit.\r\n         * @param {Event} e - Event that triggered this.\r\n         */\r\n        keyInput: function(e) {\r\n            if (e && e.keyCode && (e.keyCode === 13 || e.keyCode === 32)) {\r\n                e.target.onclick.call(this, e);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Create the mithril node to show help wrapped around the provided content.\r\n         * @param {string} helpBody - Content of the help dialog.\r\n         * @param {Object} innerContent - Mithril node for the input that help is for.\r\n         * @returns {Object} Mithril node for input-group if help is enabled, else innerContent.\r\n         */\r\n        withHelp: function(helpBody, innerContent) {\r\n            return m(Help, { message: helpBody, enabled: this.opts.wantsHelp }, innerContent);\r\n        },\r\n\r\n        /**\r\n         * Return the error class if the value isn't valid.\r\n         * @param {string|number} value - Value to check against.\r\n         * @param {bool} requirePositive - Require the value be a positive number.\r\n         * @param {bool} isDate - Check if the value is a valid date.\r\n         * @returns {string}  Error class name if value isn't set, else empty string.\r\n         */\r\n        withError: function(value, requirePositive, isDate) {\r\n            requirePositive = $.coalesce(requirePositive, false);\r\n            isDate = $.coalesce(isDate, false);\r\n            var result = isDate ? $.fecha.parse(value, this.opts.dateFormat) : $.hasValue(value) && (!requirePositive || $.hasPositiveValue(value));\r\n            return result ? '' : ' mform-control-error';\r\n        },\r\n\r\n        /**\r\n         * Add a disabled attribute to the input attributes if isDisabled=true.\r\n         * @param {Object} attrs - Attribute object to update.\r\n         * @param {bool} isDisabled - Is the input diabled or not.\r\n         * @returns {Object} Updated attribute object.\r\n         */\r\n        withDisabled: function(attrs, isDisabled) {\r\n            if (isDisabled) {\r\n                attrs.disabled = true;\r\n            }\r\n            return attrs;\r\n        },\r\n\r\n        /**\r\n         * Add a checked attribute to the input attributes if isChecked=true.\r\n         * @param {Object} attrs - Attribute object to update.\r\n         * @param {bool} isChecked - Is the input checked or not.\r\n         * @returns {Object} Updated attribute object.\r\n         */\r\n        withChecked: function(attrs, isChecked) {\r\n            if (isChecked) {\r\n                attrs.checked = true;\r\n            }\r\n            return attrs;\r\n        },\r\n\r\n        /**\r\n         * Build list of options nodes.\r\n         * @param {Object[]} arr - Array of objects to build options for.\r\n         * @param {*} selectedValue - Value of the selected option. Can be a string, number, or array of either.\r\n         * @param {string} valueKey - Object key that stores the value of the option.\r\n         * @param {string} textKey - Object key that stores the text for the option.\r\n         * @returns {Object[]} Array of mithril option nodes.\r\n         */\r\n        withOptions: function(arr, selectedValue, valueKey, textKey) {\r\n            if (!$.isArray(arr)) {\r\n                return null;\r\n            }\r\n            return arr.map(function(x) {\r\n                var attr = { value: x[valueKey] === 0 ? '' : x[valueKey] };\r\n                if (x[valueKey] === 0) {\r\n                    attr.disabled = true;\r\n                }\r\n                if (x[valueKey] === selectedValue || ($.isArray(selectedValue) && selectedValue.indexOf(x[valueKey]) > -1)) {\r\n                    attr.selected = true;\r\n                }\r\n                return m('option', attr, x[textKey]);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Create the mithril node for the record buttons (move up/move down/delete).\r\n         * @param {number} index - Index of the record to create buttons for.\r\n         * @param {bool} includeMove - Optionally include the move up/down buttons.\r\n         * @returns {Object} Mithril node with buttons.\r\n         */\r\n        buttonView: function(index, includeMove) {\r\n            var btns = [];\r\n            if ($.coalesce(includeMove, false)) {\r\n                btns.push(m('button.btn.btn-sm.btn-secondary', {\r\n                    type: 'button', role: 'button', disabled: index < 1,\r\n                    onclick: this.moveUp.bind(this, index), title: this.opts.resx.moveUp\r\n                }, m('i.dash.dash-up-big.dash-lg.dash-fw'))\r\n                );\r\n                btns.push(m('button.btn.btn-sm.btn-secondary', {\r\n                    type: 'button', role: 'button', disabled: index === this.records.length - 1,\r\n                    onclick: this.moveDown.bind(this, index), title: this.opts.resx.moveDown\r\n                }, m('i.dash.dash-down-big.dash-lg.dash-fw'))\r\n                );\r\n            }\r\n            btns.push(m('button.btn.btn-sm.btn-secondary.confirm-delete-row-button', {\r\n                type: 'button', role: 'button', onclick: this.deleteRecord.bind(this, index), title: this.opts.resx.deleteRecord\r\n            }, m('i.dash.dash-trash.dash-lg.text-error')));\r\n            return m('.btn-toolbar.float-right', btns);\r\n        },\r\n\r\n        destroy: function() {\r\n            m.mount(this.container, null);\r\n        },\r\n\r\n        /**\r\n         * Build the view that actually shows the form. This is meant to be overridden.\r\n         * @returns {Object}  Mithril DIV node.\r\n         */\r\n        view: function() {\r\n            return m('div');\r\n        },\r\n\r\n        /**\r\n         * Render the view.\r\n         */\r\n        run: function() {\r\n            var self = this;\r\n            m.mount(self.container, {\r\n                view: self.view.bind(self)\r\n            });\r\n        }\r\n    };\r\n\r\n    return Form;\r\n});\r\n","/*!\r\n * Wraps dataset join form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.JoinForm = factory(root.m, root.$, root.Form, root.Autocomplete, root.Help);\r\n})(this, function(m, $, Form, Autocomplete, Help) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the join form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function JoinForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.join-table-wrapper', opts.content),\r\n            columns: {\r\n                joinTypeId: { type: 'int' },\r\n                tableName: { type: 'str' },\r\n                keys: { type: 'str' }\r\n            },\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, tableName: '', joinTypeId: 1, keys: null },\r\n            afterDeleteFn: opts.columnUpdateFn\r\n        }, opts.joins || []);\r\n\r\n        this.joinTypes = opts.joinTypes;\r\n        this.sourceFn = opts.sourceFn;\r\n        this.columnUpdateFn = opts.columnUpdateFn;\r\n    }\r\n\r\n    JoinForm.prototype = Object.create(Form.prototype);\r\n    JoinForm.prototype.constructor = JoinForm;\r\n\r\n    /**\r\n     * Set the table name for the join record, and update the column list.\r\n     * @param {number} index - Index of the record to update.\r\n     * @param {string} value - New table name value\r\n     */\r\n    JoinForm.prototype.setJoinTable = function(index, value) {\r\n        this.set(index, 'tableName', value);\r\n        this.columnUpdateFn();\r\n    };\r\n\r\n    /**\r\n     * Create the view for the joins tab.\r\n     * @returns {Object} Mithril node containing the join form.\r\n     */\r\n    JoinForm.prototype.view = function() {\r\n        var self = this;\r\n\r\n        if (self.isProc) {\r\n            return m('.table-wrapper.p-t-1.col-12', m('.card.bg-info.text-white', m('.card-body', $.resx('dataset.errorProcNoJoins'))));\r\n        }\r\n\r\n        return m('.table-wrapper', [\r\n            m('.columns.wrapper-row.pb-1',\r\n                m('.col-12', m('.text-right', [\r\n                    m('button.btn.btn-info.mr-2', { type: 'button', role: 'button', onclick: self.addRecord.bind(self) }, $.resx('add')),\r\n                    m(Help, { enabled: this.opts.wantsHelp, message: $.resx('dataset.joinsText') })\r\n                ]))\r\n            ),\r\n            self.records.map(function(record, index) {\r\n                return m('.columns.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: record._index }, [\r\n                    m('input', { type: 'hidden', name: 'DatasetJoin[' + index + '].Id', value: record.id }),\r\n                    m('input', { type: 'hidden', name: 'DatasetJoin[' + index + '].JoinOrder', value: index }),\r\n                    m('.col-3', self.withHelp($.resx('dataset.joinTableText'), m(Autocomplete, {\r\n                        name: 'DatasetJoin[' + index + '].TableName',\r\n                        required: true,\r\n                        placeholder: $.resx('dataset.joinTableName'),\r\n                        value: record.tableName,\r\n                        list: self.sourceFn,\r\n                        onSelect: self.setJoinTable.bind(self, index),\r\n                        onCancel: self.setJoinTable.bind(self, index),\r\n                    }))),\r\n                    m('.col-2', self.withHelp($.resx('dataset.joinTypeText'),\r\n                        m('select.form-select.required', {\r\n                            name: 'DatasetJoin[' + index + '].JoinTypeId', class: self.withError(record.joinTypeId),\r\n                            placeholder: $.resx('dataset.joinType'), oninput: self.set.bind(self, index, 'joinTypeId'), value: record.joinTypeId\r\n                        }, self.withOptions(self.joinTypes, record.joinTypeId, 'id', 'name'))\r\n                    )),\r\n                    m('.col-5', self.withHelp($.resx('dataset.joinKeysText'),\r\n                        m('input.form-input.required', {\r\n                            type: 'text', name: 'DatasetJoin[' + index + '].Keys', class: self.withError(record.keys),\r\n                            placeholder: $.resx('dataset.joinKeys'), oninput: self.set.bind(self, index, 'keys'), value: record.keys\r\n                        }))\r\n                    ),\r\n                    m('.col-2', self.buttonView.call(self, index, true))\r\n                ]);\r\n            })\r\n        ]);\r\n    };\r\n\r\n    return JoinForm;\r\n});\r\n","/*!\r\n * Wraps dataset column form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.ColumnForm = factory(root.m, root.$, root.Alertify, root.Form, root.Autocomplete, root.Help);\r\n})(this, function(m, $, Alertify, Form, Autocomplete, Help) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Sort columns by title.\r\n     * @param {Object} a - First column to compare.\r\n     * @param {Object} b - Second column to compare.\r\n     * @returns {bool} True if column a should be before column b.\r\n     */\r\n    var columnTitleSort = function(a, b) {\r\n        var aTitle = a.title.toLowerCase(), bTitle = b.title.toLowerCase();\r\n        return aTitle > bTitle ? 1 : (bTitle > aTitle ? -1 : 0);\r\n    };\r\n\r\n    /**\r\n     * Build the column form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function ColumnForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.column-table-wrapper', opts.content),\r\n            columns: {\r\n                title: { type: 'str' },\r\n                columnName: { type: 'str' },\r\n                dataTypeId: { type: 'int' },\r\n                derived: { type: 'str' },\r\n                filterTypeId: { type: 'int' },\r\n                filterQuery: { type: 'str' },\r\n                link: { type: 'str' },\r\n                isParam: { type: 'int' }\r\n            },\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, title: null, columnName: '', dataTypeId: '', derived: null, filterTypeId: '', filterQuery: null, link: null, isParam: 0, isExpanded: true }\r\n        }, opts.columns || []);\r\n\r\n        this.content = opts.content;\r\n        this.dataTypes = opts.dataTypes;\r\n        this.filterTypes = opts.filterTypes;\r\n        this.sourceFn = opts.sourceFn;\r\n        this.columnFn = opts.columnFn;\r\n        this.selectedSourceFn = opts.selectedSourceFn;\r\n    }\r\n\r\n    ColumnForm.prototype = Object.create(Form.prototype);\r\n    ColumnForm.prototype.constructor = ColumnForm;\r\n\r\n    /**\r\n     * Expand/collapse the fields for a column.\r\n     * @param {Object} column - The column record to expand/collapse.\r\n     */\r\n    ColumnForm.prototype.toggleExpanded = function(column) {\r\n        column.isExpanded = !column.isExpanded;\r\n    };\r\n\r\n    /**\r\n     * Check if the database and primary source are set.\r\n     * @returns {bool} True if a database and a primary source are provided, else false.\r\n     */\r\n    ColumnForm.prototype.checkStatus = function() {\r\n        var database = $.get('.dataset-database', this.content);\r\n        if (!(database && $.hasPositiveValue(database.value))) {\r\n            Alertify.error($.resx('dataset.importErrorDatabaseRequired'));\r\n            return false;\r\n        }\r\n        var primarySource = $.get('.primary-source-autocomplete', this.content);\r\n        if (!(primarySource && primarySource.value)) {\r\n            Alertify.error($.resx('dataset.importErrorPrimarySourceRequired'));\r\n            return false;\r\n        }\r\n        var type = $.get('.dataset-type', this.content);\r\n        if (type && type.value * 1 === 2) {\r\n            Alertify.error($.resx('dataset.importErrorNoProcs'));\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Import columns for the selected tables into the dataset.\r\n     * @param {Event} e - Event that triggered this.\r\n     */\r\n    ColumnForm.prototype.importColumns = function(e) {\r\n        var form = this.content;\r\n        if (!($.hasClass(form, 'dataset-form') && this.checkStatus())) {\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        var database = $.get('.dataset-database');\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-import-url'),\r\n            data: { databaseId: database.value, sources: self.selectedSourceFn() }\r\n        }, function(data) {\r\n            if (!data.columns || data.columns.length === 0) {\r\n                Alertify.error($.resx('dataset.importErrorNoColumns'));\r\n                return;\r\n            }\r\n\r\n            var newColumns = {};\r\n            data.columns.forEach(function(x) {\r\n                newColumns[x.columnName.toLowerCase()] = x;\r\n            });\r\n\r\n            var newRecords = [];\r\n            var existingColumns = [];\r\n            self.records.forEach(function(x) {\r\n                var colName = x.columnName.toLowerCase();\r\n                if (newColumns[colName]) {\r\n                    // record matches - update datatype and add to new list\r\n                    x.dataTypeId = newColumns[colName].dataTypeId;\r\n                    newRecords.push(x);\r\n                    existingColumns.push(colName);\r\n                }\r\n            });\r\n\r\n            data.columns.forEach(function(x) {\r\n                // now add any new columns from server\r\n                if (existingColumns.indexOf(x.columnName.toLowerCase()) === -1) {\r\n                    newRecords.push(x);\r\n                }\r\n            });\r\n\r\n            newRecords.sort(columnTitleSort);\r\n            self.records = newRecords;\r\n\r\n            Alertify.success($.resx('dataset.importSuccess'));\r\n            $.dialogs.focusOnClose.call(e);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Open the confirmation before importing columns.\r\n     * @param {Event} e - Event that triggered this.\r\n     */\r\n    ColumnForm.prototype.import = function(e) {\r\n        if (this.checkStatus()) {\r\n            Alertify.confirm($.resx('dataset.confirmImport'), this.importColumns.bind(this, e), $.dialogs.focusOnClose.bind(e));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Create the node for the column form.\r\n     * @returns {Object} Mithril node containing the form.\r\n     */\r\n    ColumnForm.prototype.view = function() {\r\n        var self = this;\r\n        return m('.table-wrapper', [\r\n            m('.columns.wrapper-row.pb-1',\r\n                m('.col-12',\r\n                    m('.text-right', [\r\n                        m('button.btn.btn-info.mr-2', {\r\n                            type: 'button', role: 'button', onclick: self.addRecord.bind(self)\r\n                        }, $.resx('add')),\r\n                        m('button.btn.btn-error.mr-2', {\r\n                            type: 'button', role: 'button', onclick: self.import.bind(self)\r\n                        }, $.resx('dataset.import')),\r\n                        m(Help, { enabled: this.opts.wantsHelp, message: $.resx('dataset.columnsText') })\r\n                    ])\r\n                )\r\n            ),\r\n            self.records.map(function(record, index) {\r\n                return m('.col-12.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: record._index }, [\r\n                    m('.columns', [\r\n                        m('input', { type: 'hidden', name: 'DatasetColumn[' + index + '].Id', value: record.id }),\r\n                        m('.col-4', self.withHelp($.resx('dataset.columnTitleText'), [\r\n                            m('span.input-group-addon.input-group-custom', m('button.btn.btn-secondary', {\r\n                                type: 'button', role: 'button',\r\n                                onclick: self.toggleExpanded.bind(self, record)\r\n                            }, m('i.dash.text-primary', { class: record.isExpanded ? 'dash-minus' : 'dash-plus' }))),\r\n                            m('input.form-input.required', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].Title', class: self.withError(record.title),\r\n                                placeholder: $.resx('dataset.columnTitle'), oninput: self.set.bind(self, index, 'title'), value: record.title\r\n                            }),\r\n                        ])),\r\n                        m('.col-4', self.withHelp($.resx('dataset.columnNameText'), m(Autocomplete, {\r\n                            name: 'DatasetColumn[' + index + '].ColumnName',\r\n                            required: true,\r\n                            placeholder: $.resx('dataset.columnName'),\r\n                            value: record.columnName,\r\n                            list: self.columnFn,\r\n                            onSelect: self.set.bind(self, index, 'columnName')\r\n                        }))),\r\n                        m('.col-3', self.withHelp($.resx('dataset.dataTypeText'),\r\n                            m('select.form-select.required', {\r\n                                name: 'DatasetColumn[' + index + '].DataTypeId', class: self.withError(record.dataTypeId),\r\n                                placeholder: $.resx('dataset.dataType'), oninput: self.set.bind(self, index, 'dataTypeId'), value: record.dataTypeId\r\n                            }, self.withOptions(self.dataTypes, record.dataTypeId, 'id', 'name'))\r\n                        )),\r\n                        m('.col-1', self.buttonView(index, false))\r\n                    ]),\r\n                    m('.columns', { class: record.isExpanded ? '' : ' d-none' },\r\n                        m('.col-10.col-mx-auto', self.withHelp($.resx('dataset.derivedText'),\r\n                            m('input.form-input', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].Derived', placeholder: $.resx('dataset.derived'),\r\n                                oninput: self.set.bind(self, index, 'derived'), value: record.derived\r\n                            })\r\n                        ))\r\n                    ),\r\n                    m('.columns', { class: record.isExpanded ? '' : ' d-none' }, [\r\n                        m('.col-3.col-mx-auto', self.withHelp($.resx('dataset.filterTypeText'),\r\n                            m('select.form-select', {\r\n                                name: 'DatasetColumn[' + index + '].FilterTypeId', class: self.withError(record.filterTypeId),\r\n                                placeholder: $.resx('dataset.filterType'), oninput: self.set.bind(self, index, 'filterTypeId'), value: record.filterTypeId\r\n                            }, self.withOptions(self.filterTypes, record.filterTypeId, 'id', 'name'))\r\n                        )),\r\n                        m('.col-7', self.withHelp($.resx('dataset.queryText'),\r\n                            m('input.form-input', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].FilterQuery', placeholder: $.resx('dataset.query'),\r\n                                oninput: self.set.bind(self, index, 'filterQuery'), value: record.filterQuery, readOnly: record.filterTypeId !== 3\r\n                            }))\r\n                        )\r\n                    ]),\r\n                    m('.columns', { class: record.isExpanded ? '' : ' d-none' }, [\r\n                        m('.col-8.col-mx-auto', self.withHelp($.resx('dataset.linkText'),\r\n                            m('input.form-input', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].Link', placeholder: $.resx('dataset.link'),\r\n                                oninput: self.set.bind(self, index, 'link'), value: record.link\r\n                            })\r\n                        )),\r\n                        m('.col-1', [\r\n                            m('label.form-checkbox', { for: 'DatasetColumn_' + index + '_.IsParam' }, [\r\n                                m('input.custom-control-input', self.withChecked({\r\n                                    type: 'checkbox', name: 'DatasetColumn[' + index + '].IsParam', id: 'DatasetColumn_' + index + '_.IsParam',\r\n                                    oninput: self.set.bind(self, index, 'isParam'), value: 'true'\r\n                                }, record.isParam)),\r\n                                m('i.form-icon'),\r\n                                $.resx('dataset.isParam')\r\n                            ])\r\n                        ]),\r\n                        m('.col-1', m(Help, { enabled: self.opts.wantsHelp, message: $.resx('dataset.isParamText') }))\r\n                    ])\r\n                ]);\r\n            })\r\n        ]);\r\n    };\r\n\r\n    return ColumnForm;\r\n});\r\n","/*!\r\n * Wraps share form functionality. Used for report and chart.\r\n */\r\n(function(root, factory) {\r\n    root.ShareForm = factory(root.m, root.$, root.Form);\r\n})(this, function(m, $, Form) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the share form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function ShareForm(opts) {\r\n        var container = $.get('.share-table-wrapper', opts.content);\r\n        var formOpts = JSON.parse(container.getAttribute('data-json'));\r\n        container.removeAttribute('data-json');\r\n\r\n        Form.call(this, {\r\n            container: container,\r\n            columns: {\r\n                id: { type: 'int' },\r\n                userId: { type: 'int' },\r\n                roleId: { type: 'int' }\r\n            },\r\n            appendRecord: true,\r\n            wantsHelp: formOpts.wantsHelp,\r\n            newRecord: { id: 0, userId: 0, roleId: 0 }\r\n        }, formOpts.shares || []);\r\n\r\n        this.users = formOpts.userList || [];\r\n        this.roles = formOpts.roleList || [];\r\n        this.formName = opts.formName;\r\n    }\r\n\r\n    ShareForm.prototype = Object.create(Form.prototype);\r\n    ShareForm.prototype.constructor = ShareForm;\r\n\r\n    /**\r\n     * Build the user dropdown attributes.\r\n     * @param {Object} share - Share to build the dropdown for.\r\n     * @param {number} index - Index of the share record.\r\n     * @returns {Object} Dropdown attribute object.\r\n     */\r\n    ShareForm.prototype.userSelectAttr = function(share, index) {\r\n        var res = {\r\n            name: this.formName + '[' + index + '].UserId', class: 'form-select' + ($.hasPositiveValue(share.userId) || $.hasPositiveValue(share.roleId) ? '' : ' mform-control-error'),\r\n            placeholder: $.resx('selectUser'), onchange: this.set.bind(this, index, 'userId'), value: share.userId\r\n        };\r\n        if ($.hasPositiveValue(share.roleId)) {\r\n            res['disabled'] = true;\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Build the role dropdown attributes.\r\n     * @param {Object} share - Share to build the dropdown for.\r\n     * @param {number} index - Index of the share record.\r\n     * @returns {Object} Dropdown attribute object.\r\n     */\r\n    ShareForm.prototype.roleSelectAttr = function(share, index) {\r\n        var res = {\r\n            name: this.formName + '[' + index + '].RoleId', class: 'form-select' + ($.hasPositiveValue(share.userId) || $.hasPositiveValue(share.roleId) ? '' : ' mform-control-error'),\r\n            placeholder: $.resx('selectRole'), onchange: this.set.bind(this, index, 'roleId'), value: share.roleId\r\n        };\r\n        if ($.hasPositiveValue(share.userId)) {\r\n            res['disabled'] = true;\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Create the view for the share form.\r\n     * @returns {Object} Mithril node containing the share form.\r\n     */\r\n    ShareForm.prototype.view = function() {\r\n        var self = this;\r\n        return m('.table-wrapper', [\r\n            m('.columns', [\r\n                m('.col-5', m('h5', $.resx('user'))),\r\n                m('.col-5', m('h5', $.resx('role'))),\r\n                m('.col-2')\r\n            ]),\r\n            self.records.map(function(share, index) {\r\n                return m('.columns.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: share._index }, [\r\n                    m('input', { type: 'hidden', name: self.formName + '[' + index + '].Id', value: share.id }),\r\n                    m('.col-5.pr-2',\r\n                        m('select', self.userSelectAttr(share, index), self.withOptions(self.users, share.userId, 'id', 'fullName'))\r\n                    ),\r\n                    m('.col-5',\r\n                        m('select', self.roleSelectAttr(share, index), self.withOptions(self.roles, share.roleId, 'id', 'name'))\r\n                    ),\r\n                    m('.col-2', self.buttonView(index, false))\r\n                ]);\r\n            }),\r\n            m('.columns.pt-1', [\r\n                m('.col-12', [\r\n                    m('.text-right', [\r\n                        m('button.btn.btn-info.mr-2', { type: 'button', role: 'button', onclick: self.addRecord.bind(self) }, $.resx('add')),\r\n                        m('button.btn.btn-warning', {\r\n                            type: 'button', role: 'button', disabled: !self.hasRecords(),\r\n                            onclick: self.hasRecords() ? self.deleteAllRecords.bind(self) : $.noop\r\n                        }, $.resx('deleteAll'))\r\n                    ])\r\n                ])\r\n            ])\r\n        ]);\r\n    };\r\n\r\n    return ShareForm;\r\n});\r\n","/*!\r\n * Wraps report filter form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.FilterForm = factory(root.m, root.$, root.Form, root.Help, root.Alertify, root.DatePicker);\r\n})(this, function(m, $, Form, Help, Alertify, DatePicker) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the filter form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function FilterForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.filter-table-wrapper', opts.content),\r\n            columns: {\r\n                id: { type: 'int' },\r\n                columnId: { type: 'int' },\r\n                operatorId: { type: 'int' },\r\n                criteria: { type: 'str' },\r\n                criteria2: { type: 'str' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, columnId: 0, operatorId: 0, criteria: null, criteria2: null },\r\n            dateFormat: opts.dateFormat\r\n        }, opts.filters || []);\r\n\r\n        this.reportId = opts.reportId;\r\n        this.isProc = opts.isProc;\r\n        this.saveFiltersUrl = opts.saveFiltersUrl;\r\n        this.filterOperators = opts.filterOperators || [];\r\n        this.filterOperatorIds = opts.filterOperatorIds || {};\r\n        this.filterTypes = opts.filterTypes || {};\r\n        this.dateOperators = opts.dateOperators || [];\r\n        this.lookups = opts.lookups || [];\r\n        this.dataTable = opts.dataTable;\r\n        this.columnFn = opts.columnFn;\r\n    }\r\n\r\n    FilterForm.prototype = Object.create(Form.prototype);\r\n    FilterForm.prototype.constructor = FilterForm;\r\n\r\n    /**\r\n     * Build the options select list for the boolean filter.\r\n     */\r\n    FilterForm.prototype.boolOptions = [\r\n        m('option', { value: '' }, $.resx('select')),\r\n        m('option', { value: 1 }, $.resx('report.true')),\r\n        m('option', { value: 0 }, $.resx('report.false'))\r\n    ];\r\n\r\n    /**\r\n     * Set the columnId for a filter and unset the criteria.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered showing the picker.\r\n     */\r\n    FilterForm.prototype.setColumnId = function(index, e) {\r\n        var val = this.targetVal(e) * 1;\r\n        if (this.records[index].columnId !== val) {\r\n            this.records[index].columnId = val;\r\n            this.records[index].operatorId = 0;\r\n            this.records[index].criteria = null;\r\n            this.records[index].criteria2 = null;\r\n            this.run();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the operatorId for a filter and unset the criteria.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered showing the picker.\r\n     */\r\n    FilterForm.prototype.setOperator = function(index, e) {\r\n        this.set(index, 'operatorId', e);\r\n    };\r\n\r\n    /**\r\n     * Set the criteria for a filter.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered the update.\r\n     */\r\n    FilterForm.prototype.setCriteria = function(index, e) {\r\n        var node = e.target;\r\n        if (node && node.nodeName === 'SELECT' && node.hasAttribute('multiple') && node.options) {\r\n            this.records[index].criteriaJson = Array.apply(null, node.options).filter(function(x) { return x.selected; }).map(function(x) { return x.value || x.text; });\r\n        }\r\n        this.set(index, 'criteria', e);\r\n    };\r\n\r\n    /**\r\n     * Set the criteria for a date filter.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {string} field - Name of field to set.\r\n     * @param {Date} val - Date value to save.\r\n     */\r\n    FilterForm.prototype.setDate = function(index, field, val) {\r\n        this.set(index, field, $.fecha.format(val, 'YYYY-MM-DD HH:mm'));\r\n    };\r\n\r\n    /**\r\n     * Save filters to the server then reload the table data.\r\n     */\r\n    FilterForm.prototype.saveFilters = function() {\r\n        if ($.getAll('.mform-control-error', this.container).length > 0) {\r\n            Alertify.error($.resx('fixIt'));\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: 'PUT',\r\n            url: self.saveFiltersUrl,\r\n            data: {\r\n                Id: self.reportId,\r\n                Filters: $.toPascalKeys(self.records)\r\n            }\r\n        }, function(data) {\r\n            if (data) {\r\n                self.changed = false;\r\n                if ($.isArray(data.filters)) {\r\n                    data.filters.forEach(function(x, i) { self.records[i].id = x.id; });\r\n                }\r\n            }\r\n            if (self.dataTable) {\r\n                self.dataTable.loadData();\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Build the criteria input(s) for a filter.\r\n     * @param {number} index - Index of the filter to build.\r\n     * @returns {Object} Mithril node containing the criteria input(s).\r\n     */\r\n    FilterForm.prototype.criteriaView = function(index) {\r\n        var filter = this.records[index];\r\n        var column = $.hasPositiveValue(filter.columnId) ? $.findByKey(this.columnFn(), 'id', filter.columnId) : null;\r\n        if (column === null || !$.hasPositiveValue(filter.operatorId)) {\r\n            return m('input.form-input', { disabled: true, placeholder: $.resx('report.filterCriteria') });\r\n        }\r\n\r\n        var criteria = null;\r\n        var attrs = {\r\n            name: 'ReportFilter[' + index + '].Criteria',\r\n            id: 'ReportFilter_' + index + '_Criteria',\r\n            class: 'form-input required' + this.withError(filter.criteria),\r\n            placeholder: $.resx('report.filterCriteria'),\r\n            oninput: this.setCriteria.bind(this, index)\r\n        };\r\n        if (!this.opts.allowEdit) {\r\n            attrs.disabled = true;\r\n        }\r\n\r\n        if (column.filterTypeId !== this.filterTypes.select) {\r\n            attrs.value = filter.criteria;\r\n        }\r\n        var isRange = filter.operatorId === this.filterOperatorIds.range;\r\n\r\n        switch (column.filterTypeId) {\r\n            case this.filterTypes.boolean:\r\n                attrs.class = 'form-select required' + this.withError(filter.criteria);\r\n                criteria = m('select', attrs, this.boolOptions);\r\n                break;\r\n            case this.filterTypes.date:\r\n                if (filter.operatorId === this.filterOperatorIds.dateInterval) {\r\n                    attrs.class = 'form-select required' + this.withError(filter.criteria);\r\n                    criteria = m('select', attrs, this.withOptions(this.dateOperators, filter.criteria * 1, 'id', 'name'));\r\n                } else {\r\n                    criteria = m(DatePicker, {\r\n                        name: attrs.name, required: true, date: filter.criteria, disabled: !this.opts.allowEdit,\r\n                        onchange: this.setDate.bind(this, index, 'criteria'), format: this.dateFormat,\r\n                        class: isRange ? 'col' : null\r\n                    });\r\n                }\r\n                break;\r\n            case this.filterTypes.select:\r\n                if (filter.operatorId !== this.filterOperatorIds.equal) {\r\n                    attrs.multiple = true;\r\n                } else {\r\n                    attrs.class = 'form-select required' + this.withError(filter.criteria);\r\n                }\r\n\r\n                try {\r\n                    if (filter.criteria.substring(0, 1) === '[') {\r\n                        filter.criteriaJson = JSON.parse(filter.criteria);\r\n                    }\r\n                } catch (e) {\r\n                    // do nothing\r\n                }\r\n\r\n                if (!filter.criteriaJson) {\r\n                    attrs.value = filter.criteria;\r\n                }\r\n\r\n                var lookup = $.isArray(this.lookups[filter.columnId]) ? this.lookups[filter.columnId] : [];\r\n                criteria = m('select', attrs, this.withOptions(lookup, filter.criteriaJson, 'value', 'text'));\r\n                break;\r\n            default:\r\n                attrs.type = column.filterTypeId === this.filterTypes.numeric ? 'number' : 'text';\r\n                criteria = m('input', attrs);\r\n        }\r\n\r\n        if (!isRange) {\r\n            return criteria;\r\n        }\r\n\r\n        var isDatePicker = column.filterTypeId === this.filterTypes.date && filter.operatorId !== this.filterOperatorIds.dateInterval;\r\n        var attrs2 = {\r\n            name: 'ReportFilter[' + index + '].Criteria2',\r\n            id: 'ReportFilter_' + index + '_Criteria2',\r\n            class: 'form-input required' + this.withError(filter.criteria2, null, column.filterTypeId === this.filterTypes.date),\r\n            placeholder: $.resx('report.filterCriteria2'),\r\n            onchange: isDatePicker ? this.setDate.bind(this, index, 'criteria2') : this.set.bind(this, index, 'criteria2'),\r\n            value: filter.criteria2,\r\n            type: column.filterTypeId === this.filterTypes.numeric ? 'number' : 'text'\r\n        };\r\n        if (!this.opts.allowEdit) {\r\n            attrs2.disabled = true;\r\n        }\r\n        var criteriaArr = [criteria];\r\n        if (isDatePicker) {\r\n            criteriaArr.push(m(DatePicker, {\r\n                name: attrs2.name, required: true, date: filter.criteria2, disabled: !this.opts.allowEdit,\r\n                onchange: this.setDate.bind(this, index, 'criteria2'), format: this.dateFormat, class: 'col'\r\n            }));\r\n        } else {\r\n            criteriaArr.push(m('input', attrs2));\r\n        }\r\n        return criteriaArr;\r\n    };\r\n\r\n    /**\r\n     * Build the operator dropdown for a filter.\r\n     * @param {number} index - Index of the filter to build.\r\n     * @param {Object} column - Column that the filter is for.\r\n     * @returns {Object} Mithril node containing the operator select.\r\n     */\r\n    FilterForm.prototype.operatorView = function(index, column) {\r\n        return m('select.form-select.required', {\r\n            name: 'ReportFilter[' + index + '].OperatorId', id: 'ReportFilter_' + index + '_OperatorId',\r\n            disabled: !column || !this.opts.allowEdit,\r\n            class: column ? this.withError(this.records[index].operatorId, true) : null,\r\n            placeholder: $.resx('report.filterOperator'), onchange: this.setOperator.bind(this, index), value: this.records[index].operatorId\r\n        }, this.withOptions(column && $.hasPositiveValue(column.filterTypeId) ?\r\n            this.filterOperators[column.filterTypeId] : [{ id: 0, name: $.resx('report.filterOperator') }], this.records[index].operatorId, 'id', 'name')\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Build the filters.\r\n     * @returns {Object[]} Array of Mithril nodes containing the filters.\r\n     */\r\n    FilterForm.prototype.filterView = function() {\r\n        if (!this.columnFn()) {\r\n            return null;\r\n        }\r\n\r\n        var self = this;\r\n        return this.records.map(function(x, index) {\r\n            var column = $.hasPositiveValue(x.columnId) ? $.findByKey(self.columnFn(), 'id', x.columnId) : null;\r\n\r\n            // @todo this isn't setting the `placeholder` default value correctly anymore it seems\r\n            var attrs = {\r\n                name: 'ReportFilter[' + index + '].ColumnId', class: 'form-select required' + self.withError(x.columnId, true),\r\n                placeholder: $.resx('report.filterColumn'), onchange: self.setColumnId.bind(self, index), value: x.columnId\r\n            };\r\n            if (!self.opts.allowEdit) {\r\n                attrs.disabled = true;\r\n            }\r\n\r\n            var filterColumns = self.isProc ? self.columnFn().filter(function(x) { return x.isParam; }) : self.columnFn();\r\n\r\n            return m('.columns.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even' }, [\r\n                m('input', { type: 'hidden', name: 'ReportFilter[' + index + '].Id', value: x.id }),\r\n                m('input', { type: 'hidden', name: 'ReportFilter[' + index + '].DisplayOrder', value: index }),\r\n                m('.col-4',\r\n                    self.withHelp($.resx('report.filterColumnText'), m('select', attrs, self.withOptions(filterColumns, x.columnId, 'id', 'title')))\r\n                ),\r\n                m('.col-2',\r\n                    self.withHelp($.resx('report.filterOperatorText'), self.operatorView.call(self, index, column))\r\n                ),\r\n                m('.col-5',\r\n                    self.withHelp($.resx('report.filterCriteriaText'), self.criteriaView.call(self, index))\r\n                ),\r\n                m('.col-1', self.opts.allowEdit ? self.buttonView.call(self, index, false) : null)\r\n            ]);\r\n        });\r\n    };\r\n\r\n    /**\r\n    * Create the view for the share form.\r\n    * @returns {Object} Mithril node containing the share form.\r\n    */\r\n    FilterForm.prototype.view = function() {\r\n        return [\r\n            this.filterView(),\r\n            this.opts.allowEdit ? m('.columns.pt-1', [\r\n                m('.col-6', m('button.btn.btn-primary', {\r\n                    type: 'button', role: 'button', onclick: this.saveFilters.bind(this)\r\n                }, $.resx('save'))),\r\n                m('.col-6', [\r\n                    m('.text-right', [\r\n                        m('button.btn.btn-info.mr-2', {\r\n                            type: 'button', role: 'button', onclick: this.addRecord.bind(this),\r\n                        }, $.resx('add')),\r\n                        m('button.btn.btn-warning.mr-2', {\r\n                            type: 'button', role: 'button', disabled: !this.hasRecords(),\r\n                            onclick: this.hasRecords() ? this.deleteAllRecords.bind(this) : $.noop\r\n                        }, $.resx('deleteAll')),\r\n                        m(Help, { enabled: this.opts.wantsHelp, message: $.resx('report.filterText') })\r\n                    ])\r\n                ])\r\n            ]) : null\r\n        ];\r\n    };\r\n\r\n    return FilterForm;\r\n});\r\n","/*!\r\n * Wraps report group form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.GroupForm = factory(root.m, root.$, root.Form, root.Help, root.Alertify);\r\n})(this, function(m, $, Form, Help, Alertify) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the group form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function GroupForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.group-table-wrapper', opts.content),\r\n            columns: {\r\n                id: { type: 'int' },\r\n                columnId: { type: 'int' },\r\n                operatorId: { type: 'int' },\r\n                criteria: { type: 'str' },\r\n                criteria2: { type: 'str' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, columnId: 0, displayOrder: 0 }\r\n        }, opts.groups || []);\r\n\r\n        this.reportId = opts.reportId;\r\n        this.isProc = opts.isProc;\r\n        this.saveGroupsUrl = opts.saveGroupsUrl;\r\n        this.aggregator = opts.aggregatorId === 0 ? '' : opts.aggregatorId;\r\n        this.aggregators = opts.aggregators || [];\r\n        this.dataTable = opts.dataTable;\r\n        this.columnFn = opts.columnFn;\r\n    }\r\n\r\n    GroupForm.prototype = Object.create(Form.prototype);\r\n    GroupForm.prototype.constructor = GroupForm;\r\n\r\n    /**\r\n     * Save groups to the server then reload the table data.\r\n     */\r\n    GroupForm.prototype.saveGroups = function() {\r\n        if ($.getAll('.mform-control-error', this.container).length > 0) {\r\n            Alertify.error($.resx('fixIt'));\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: 'PUT',\r\n            url: self.saveGroupsUrl,\r\n            data: {\r\n                Id: self.reportId,\r\n                GroupAggregator: self.aggregator === '' ? 0 : self.aggregator * 1,\r\n                Groups: $.toPascalKeys(self.records)\r\n            }\r\n        }, function(data) {\r\n            if (data) {\r\n                if ($.isArray(data.groups)) {\r\n                    data.groups.forEach(function(x, i) { self.records[i].id = x.id; });\r\n                }\r\n            }\r\n            if (self.dataTable) {\r\n                self.dataTable.loadData();\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Set the aggregator property.\r\n     * @param {Event} e - Event that triggered the function.\r\n     */\r\n    GroupForm.prototype.setAggregator = function(e) {\r\n        this.aggregator = this.targetVal(e);\r\n    };\r\n\r\n    /**\r\n     * Build the groups.\r\n     * @returns {Object[]} Array of Mithril nodes containing the groups.\r\n     */\r\n    GroupForm.prototype.groupView = function() {\r\n        if (!this.columnFn()) {\r\n            return null;\r\n        }\r\n\r\n        var self = this;\r\n        return this.records.map(function(x, index) {\r\n            x.displayOrder = index;\r\n            var attrs = {\r\n                name: 'ReportGroup[' + index + '].ColumnId', class: 'form-select required' + self.withError(x.columnId, true),\r\n                placeholder: $.resx('report.groupColumn'), onchange: self.set.bind(self, index, 'columnId'), value: x.columnId\r\n            };\r\n            if (!self.opts.allowEdit) {\r\n                attrs.disabled = true;\r\n            }\r\n            return m('.columns.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even' }, [\r\n                m('input', { type: 'hidden', name: 'ReportGroup[' + index + '].Id', value: x.id }),\r\n                m('input', { type: 'hidden', name: 'ReportGroup[' + index + '].DisplayOrder', value: index }),\r\n                m('.col-10', [\r\n                    m('select', attrs, self.withOptions(self.columnFn(), x.columnId, 'id', 'title'))\r\n                ]),\r\n                m('.col-2', self.opts.allowEdit ? self.buttonView.call(self, index, true) : null)\r\n            ]);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Build the group form.\r\n     * @returns {Object} Mithril node containing the form.\r\n     */\r\n    GroupForm.prototype.view = function() {\r\n        if (this.isProc) {\r\n            return m('.table-wrapper.p-t-1.col-12', m('.card.card-info', m('.card-body', $.resx('report.errorProcNoGroups'))));\r\n        }\r\n\r\n        var attrs = {\r\n            name: 'Report.Aggregator', class: 'form-select', placeholder: $.resx('report.aggregator'),\r\n            onchange: this.setAggregator.bind(this), value: this.aggregator\r\n        };\r\n        if (!this.opts.allowEdit) {\r\n            attrs.disabled = true;\r\n        }\r\n        return m('.col-12.table-wrapper', m('.columns', [\r\n            m('.col-2.mt-1', [\r\n                m('.form-group', [\r\n                    m('select', attrs, this.withOptions(this.aggregators, this.aggregator, 'id', 'name'))\r\n                ]),\r\n                this.opts.allowEdit ? m('.mt-1', m('button.btn.btn-primary', {\r\n                    type: 'button', role: 'button', onclick: this.saveGroups.bind(this)\r\n                }, $.resx('save'))) : null\r\n            ]),\r\n            m('.col-9.col-ml-auto.mt-1', [\r\n                this.groupView(),\r\n                this.opts.allowEdit ? m('.container.pt-1', m('.columns', [\r\n                    m('.col-12', [\r\n                        m('.btn-toolbar.text-right', [\r\n                            m('button.btn.btn-info.mr-1', {\r\n                                type: 'button', role: 'button', onclick: this.addRecord.bind(this)\r\n                            }, $.resx('add')),\r\n                            m('button.btn.btn-warning', {\r\n                                type: 'button', role: 'button', disabled: !this.hasRecords(),\r\n                                onclick: this.hasRecords() ? this.deleteAllRecords.bind(this) : $.noop\r\n                            }, $.resx('deleteAll')),\r\n                            m(Help, { enabled: this.opts.wantsHelp, message: $.resx('report.groupText') })\r\n                        ])\r\n                    ])\r\n                ])) : null\r\n            ])\r\n        ]));\r\n    };\r\n\r\n    return GroupForm;\r\n});\r\n","/*!\r\n * Wraps chart range form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.RangeForm = factory(root.m, root.$, root.Form, root.Help, root.Alertify, root.DashChart, root.ColorPicker);\r\n})(this, function(m, $, Form, Help, Alertify, DashChart, ColorPicker) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the range form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function RangeForm(opts) {\r\n        var ranges = opts.ranges || [];\r\n        ranges = opts.ranges.map(function(x) { x.isExpanded = false; return x; });\r\n\r\n        Form.call(this, {\r\n            container: $.get('.range-table-wrapper', opts.content),\r\n            columns: {\r\n                id: { type: 'int' },\r\n                reportId: { type: 'int' },\r\n                xAxisColumnId: { type: 'int' },\r\n                yAxisColumnId: { type: 'int' },\r\n                aggregatorId: { type: 'int' },\r\n                dateIntervalId: { type: 'int' },\r\n                color: { type: 'string' },\r\n                displayOrder: { type: 'int' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, reportId: 0, xAxisColumnId: 0, yAxisColumnId: 0, aggregatorId: 0, dateIntervalId: 0, color: '', displayOrder: 0 }\r\n        }, ranges || []);\r\n\r\n        this.content = opts.content;\r\n        this.chartId = opts.chartId;\r\n        this.filterTypes = opts.filterTypes || {};\r\n        this.saveRangesUrl = opts.saveRangesUrl;\r\n        this.dateIntervals = opts.dateIntervals || [];\r\n        this.aggregators = opts.aggregators || [];\r\n        this.reports = opts.reports || [];\r\n        this.columns = opts.columns || [];\r\n        this.processJsonFn = opts.processJsonFn;\r\n        this.canExportFn = opts.canExportFn;\r\n        this.toggleExportFn = opts.toggleExportFn;\r\n    }\r\n\r\n    RangeForm.prototype = Object.create(Form.prototype);\r\n    RangeForm.prototype.constructor = RangeForm;\r\n\r\n    /**\r\n     * Save ranges to the server then rebuild the chart.\r\n     */\r\n    RangeForm.prototype.saveRanges = function() {\r\n        if ($.getAll('.mform-control-error', this.container).length > 0) {\r\n            Alertify.error($.resx('fixIt'));\r\n            return;\r\n        }\r\n\r\n        this.records.forEach(function(x, i) { x.displayOrder = i; });\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: self.saveRangesUrl,\r\n            data: {\r\n                Id: self.chartId,\r\n                Ranges: $.toPascalKeys(self.records)\r\n            }\r\n        }, function(data) {\r\n            if (data) {\r\n                self.changed = false;\r\n                if ($.isArray(data.ranges)) {\r\n                    data.ranges.forEach(function(x, i) { self.records[i].id = x.id; });\r\n                }\r\n                Alertify.success($.resx('chart.saveSuccessful'));\r\n                self.makeChart();\r\n            }\r\n        });\r\n    };\r\n\r\n    RangeForm.prototype.makeChart = function() {\r\n        var chartContent = $.get('.chart-container', this.content);\r\n        if (!(chartContent && chartContent.hasAttribute('data-url'))) {\r\n            return;\r\n        }\r\n        if (!(this.records && this.records.length > 0)) {\r\n            Alertify.error($.resx('chart.rangesRequired'));\r\n            return;\r\n        }\r\n\r\n        if (this.dashChart && this.dashChart.chart) {\r\n            this.dashChart.chart.destroy();\r\n        }\r\n\r\n        this.dashChart = new DashChart(chartContent, true, this.processJsonFn, null, this.toggleExportFn);\r\n    };\r\n\r\n    RangeForm.prototype.exportChart = function() {\r\n        if (!this.canExportFn()) {\r\n            return;\r\n        }\r\n        var chartContainer = $.get('.chart-container', this.content);\r\n        if (chartContainer) {\r\n            $.get('.export-width', this.content).value = chartContainer.offsetWidth;\r\n            $.get('.export-data', this.content).value = this.dashChart.chart.toBase64Image();\r\n            $.get('.export-form', this.content).submit();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the operatorId for a filter and unset the criteria.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered.\r\n     */\r\n    RangeForm.prototype.setReport = function(index, e) {\r\n        if (this.set(index, 'reportId', e)) {\r\n            this.records[index].xAxisColumnId = 0;\r\n            this.records[index].yAxisColumnId = 0;\r\n            this.records[index].aggregatorId = 0;\r\n            this.records[index].dateIntervalId = 0;\r\n            this.run();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Expand/collapse the inputs for a range.\r\n     * @param {Object} record - Range object.\r\n     */\r\n    RangeForm.prototype.toggleExpanded = function(record) {\r\n        record.isExpanded = !record.isExpanded;\r\n    };\r\n\r\n    /**\r\n     * Build the ranges.\r\n     * @returns {Object[]} Array of Mithril nodes containing the ranges.\r\n     */\r\n    RangeForm.prototype.rangeView = function() {\r\n        if (!this.reports) {\r\n            return null;\r\n        }\r\n\r\n        var self = this;\r\n        return this.records.map(function(record, index) {\r\n            var report = record.reportId ? $.findByKey(self.columns, 'reportId', record.reportId) : null;\r\n            if (report && !report.xColumns) {\r\n                report.xColumns = $.clone(report.columns);\r\n                report.xColumns.unshift({ columnId: 0, title: $.resx('chart.xAxisColumn') });\r\n                report.yColumns = $.clone(report.columns);\r\n                report.yColumns.unshift({ columnId: 0, title: $.resx('chart.yAxisColumn') });\r\n            }\r\n\r\n            var dateIntervalDisabled = true;\r\n            var inputsDisabled = !(self.opts.allowEdit && report);\r\n            if (!inputsDisabled && self.filterTypes) {\r\n                var col = $.findByKey(report.columns, 'columnId', record.xAxisColumnId * 1);\r\n                if (col && col.filterTypeId === self.filterTypes.date) {\r\n                    // show for date\r\n                    dateIntervalDisabled = false;\r\n                }\r\n            }\r\n\r\n            return m('.container.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: record._index }, [\r\n                m('.columns', [\r\n                    m('input', { type: 'hidden', name: 'ChartRange[' + index + '].Id', value: record.id }),\r\n                    m('.col-4',\r\n                        self.withHelp($.resx('chart.reportText'), [\r\n                            m('span.input-group-addon.input-group-custom', m('button.btn.btn-secondary', { onclick: self.toggleExpanded.bind(self, record) },\r\n                                m('i.dash.text-primary', { class: record.isExpanded ? 'dash-minus' : 'dash-plus' })\r\n                            )),\r\n                            m('select.form-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].ReportId', class: self.withError(record.reportId, true),\r\n                                placeholder: $.resx('chart.report'), onchange: self.setReport.bind(self, index), value: record.reportId\r\n                            }, !self.opts.allowEdit), self.withOptions(self.reports, record.reportId, 'id', 'name'))\r\n                        ])\r\n                    ),\r\n                    m('.col-3',\r\n                        self.withHelp($.resx('chart.xAxisColumnText'),\r\n                            m('select.form-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].XAxisColumnId', id: 'xAxisColumnId' + index, class: report ? self.withError(record.xAxisColumnId, true) : null,\r\n                                placeholder: $.resx('chart.xAxisColumn'), onchange: self.set.bind(self, index, 'xAxisColumnId'), value: record.xAxisColumnId\r\n                            }, inputsDisabled), self.withOptions(report ? report.xColumns : [{ columnId: 0, title: $.resx('chart.xAxisColumn') }], record.xAxisColumnId, 'columnId', 'title'))\r\n                        )\r\n                    ),\r\n                    m('.col-3',\r\n                        self.withHelp($.resx('chart.yAxisColumnText'),\r\n                            m('select.form-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].YAxisColumnId', id: 'yAxisColumnId' + index, class: report ? self.withError(record.yAxisColumnId, true) : null,\r\n                                placeholder: $.resx('chart.yAxisColumn'), onchange: self.set.bind(self, index, 'yAxisColumnId'), value: record.yAxisColumnId\r\n                            }, inputsDisabled), self.withOptions(report ? report.yColumns : [{ columnId: 0, title: $.resx('chart.yAxisColumn') }], record.yAxisColumnId, 'columnId', 'title'))\r\n                        )\r\n                    ),\r\n                    m('.col-2', self.opts.allowEdit ? self.buttonView.call(self, index, true) : null)\r\n                ]),\r\n                m('.columns', { class: record.isExpanded ? '' : ' d-none' }, [\r\n                    m('.col-4.col-ml-auto',\r\n                        self.withHelp($.resx('chart.aggregatorText'),\r\n                            m('select.form-select', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].AggregatorId', id: 'aggregatorId' + index,\r\n                                placeholder: $.resx('chart.aggregator'), onchange: self.set.bind(self, index, 'aggregatorId'), value: record.aggregatorId\r\n                            }, inputsDisabled), self.withOptions(self.aggregators, record.aggregatorId, 'id', 'name'))\r\n                        )\r\n                    ),\r\n                    m('.col-4',\r\n                        self.withHelp($.resx('chart.dateIntervalText'),\r\n                            m('select.form-select', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].DateIntervalId', id: 'dateIntervalId' + index,\r\n                                placeholder: $.resx('chart.dateInterval'), onchange: self.set.bind(self, index, 'dateIntervalId'), value: record.dateIntervalId\r\n                            }, dateIntervalDisabled), self.withOptions(self.dateIntervals, record.dateIntervalId, 'id', 'name'))\r\n                        )\r\n                    ),\r\n                    m('.col-2', [\r\n                        self.withHelp($.resx('chart.colorText'),\r\n                            m(ColorPicker, {\r\n                                name: 'ChartRange[' + index + '].Color', value: record.color, disabled: inputsDisabled,\r\n                                onSelect: self.set.bind(self, index, 'color')\r\n                            })\r\n                        ),\r\n                    ]),\r\n                    m('.col-1')\r\n                ])\r\n            ]);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Build the range form.\r\n     * @returns {Object} Mithril node containing the form.\r\n     */\r\n    RangeForm.prototype.view = function() {\r\n        return [\r\n            this.rangeView(),\r\n            m('.container.pt-1', m('.columns', [\r\n                m('.col-6', [\r\n                    m('.btn-toolbar', [\r\n                        this.opts.allowEdit ? m('button.btn.btn-primary.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.saveRanges.bind(this)\r\n                        }, $.resx('save')) : null,\r\n                        m('button.btn.btn-info', {\r\n                            type: 'button', role: 'button', onclick: this.exportChart.bind(this), disabled: !this.canExportFn()\r\n                        }, $.resx('export'))\r\n                    ])\r\n                ]),\r\n                this.opts.allowEdit ? m('.col-6.text-right', [\r\n                    m('.text-right', [\r\n                        m('button.btn.btn-info.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.addRecord.bind(this)\r\n                        }, $.resx('add')),\r\n                        m('button.btn.btn-warning.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.deleteAllRecords.bind(this), disabled: !this.hasRecords()\r\n                        }, $.resx('deleteAll')),\r\n                        m(Help, { enabled: this.opts.wantsHelp, message: $.resx('chart.rangeText') })\r\n                    ])\r\n                ]) : null\r\n            ]))\r\n        ];\r\n    };\r\n\r\n    return RangeForm;\r\n});\r\n","/*!\r\n * Wraps dataset form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.Dataset = factory(root.m, root.$, root.Alertify, root.Form, root.Autocomplete, root.Help, root.JoinForm, root.ColumnForm);\r\n})(this, function(m, $, Alertify, Form, Autocomplete, Help, JoinForm, ColumnForm) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare Dataset class.\r\n     * @param {Object} opts - Dataset settings\r\n     */\r\n    function Dataset(opts) {\r\n        opts = opts || {};\r\n        if (opts.columns) {\r\n            opts.columns.forEach(function(x) { x.isExpanded = false; });\r\n        }\r\n\r\n        this.sourceList = null;\r\n        this.columnList = null;\r\n        this.formChanged = false;\r\n        this.selectedSourceList = [];\r\n        this.content = opts.content;\r\n\r\n        this.checkType(false);\r\n        this.loadSourceList();\r\n        this.loadColumnList();\r\n\r\n        this.joinForm = new JoinForm({\r\n            content: opts.content,\r\n            wantsHelp: opts.wantsHelp,\r\n            joins: opts.joins,\r\n            joinTypes: opts.joinTypes,\r\n            sourceFn: this.getSourceList.bind(this),\r\n            columnUpdateFn: this.loadColumnList.bind(this)\r\n        });\r\n        this.joinForm.run();\r\n\r\n        this.columnForm = new ColumnForm({\r\n            content: opts.content,\r\n            wantsHelp: opts.wantsHelp,\r\n            columns: opts.columns,\r\n            dataTypes: opts.dataTypes,\r\n            filterTypes: opts.filterTypes,\r\n            sourceFn: this.getSourceList.bind(this),\r\n            columnFn: this.getColumnList.bind(this),\r\n            selectedSourceFn: this.getSelectedSourceList.bind(this)\r\n        });\r\n        this.columnForm.run();\r\n\r\n        $.onChange($.get('.dataset-database', this.content), this.loadSourceList.bind(this), false);\r\n        $.onChange($.get('.dataset-type', this.content), this.checkType.bind(this), false);\r\n\r\n        var self = this;\r\n        var primary = $.get('.dataset-primary-source', this.content);\r\n        if (primary) {\r\n            m.mount(primary, {\r\n                view: function() {\r\n                    return m(Help, { message: $.resx('dataset.primarySourceHelp'), enabled: opts.wantsHelp }, m(Autocomplete, {\r\n                        name: 'PrimarySource',\r\n                        class: 'primary-source-autocomplete',\r\n                        value: primary.getAttribute('data-value'),\r\n                        required: true,\r\n                        list: self.getSourceList.bind(self),\r\n                        onSelect: self.updateColumnList.bind(self),\r\n                        onCancel: self.updateColumnList.bind(self)\r\n                    }));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    Dataset.prototype = {\r\n        /**\r\n         * Build a list of all tables used by this dataset.\r\n         * @returns {bool} Returns true if list has changed, else false.\r\n         */\r\n        updateSelectedSources: function() {\r\n            var list = [];\r\n            var primarySource = $.get('.primary-source-autocomplete', this.content);\r\n            if (primarySource && primarySource.value) {\r\n                list.push(primarySource.value);\r\n            }\r\n            if (this.joinForm) {\r\n                this.joinForm.records.map(function(x) { list.push(x.tableName); });\r\n            }\r\n            list = list.filter(function(x) {\r\n                return !$.isNull(x) && x.length > 0;\r\n            });\r\n            if (!$.equals(list, this.selectedSourceList)) {\r\n                this.selectedSourceList = list;\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Check if the dataset is using a proc instead of tables.\r\n         * @param {bool} updateList - If true update the table/proc list.\r\n         */\r\n        checkType: function(updateList) {\r\n            var type = $.get('.dataset-type', this.content);\r\n            if (!type) {\r\n                return;\r\n            }\r\n            if ($.coalesce(updateList, true)) {\r\n                this.loadSourceList();\r\n            }\r\n            if (this.joinForm) {\r\n                this.joinForm.isProc = type.value * 1 === 2;\r\n                this.joinForm.run();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Fetch a list of available columns from the server. Autocompletes will update automatically.\r\n         */\r\n        loadColumnList: function() {\r\n            var url = this.content.getAttribute('data-column-url');\r\n            var database = $.get('.dataset-database', this.content);\r\n            if (!(url && database && $.hasPositiveValue(database.value))) {\r\n                this.columnList = [];\r\n                return;\r\n            }\r\n\r\n            if (this.updateSelectedSources()) {\r\n                // only run if sources are different from last request to avoid unnecessary traffic\r\n                var self = this;\r\n                $.ajax({\r\n                    method: 'POST',\r\n                    url: url,\r\n                    data: { DatabaseId: database.value * 1, Tables: self.selectedSourceList }\r\n                }, function(columns) {\r\n                    self.columnList = columns && columns.length ? columns : [];\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Fetch a list of tables from the server. Autocompletes will update automatically.\r\n         */\r\n        loadSourceList: function() {\r\n            var url = this.content.getAttribute('data-table-url');\r\n            var database = $.get('.dataset-database', this.content);\r\n            var type = $.get('.dataset-type', this.content);\r\n            if (!(url && database && type)) {\r\n                return;\r\n            }\r\n            if (!$.hasPositiveValue(database.value) || !$.hasPositiveValue(type.value)) {\r\n                this.sourceList = [];\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: url,\r\n                data: { databaseId: database.value, typeId: type.value }\r\n            }, function(tables) {\r\n                self.sourceList = tables && tables.length ? tables : [];\r\n                self.loadColumnList();\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get the list of table for the autocomplete.\r\n         * @returns {string[]} Returns array of tables.\r\n         */\r\n        getSourceList: function() {\r\n            return this.sourceList;\r\n        },\r\n\r\n        /**\r\n         * Get the list of selected tables.\r\n         * @returns {string[]} Returns array of tables.\r\n         */\r\n        getSelectedSourceList: function() {\r\n            return this.selectedSourceList;\r\n        },\r\n\r\n        /**\r\n         * Get the list of columns for the autocomplete.\r\n         * @returns {string[]} Returns array of columns.\r\n         */\r\n        getColumnList: function() {\r\n            return this.columnList;\r\n        },\r\n\r\n        /**\r\n         * Refresh the column list.\r\n         */\r\n        updateColumnList: function() {\r\n            // need timeout delay so the field value is updated before we load the list\r\n            setTimeout(this.loadColumnList.bind(this), 10);\r\n        },\r\n\r\n        destroy: function() {\r\n            $.destroy(this.columnForm);\r\n            $.destroy(this.joinForm);\r\n\r\n            var primary = $.get('.dataset-primary-source', this.content);\r\n            if (primary) {\r\n                m.mount(primary, null);\r\n            }\r\n        }\r\n    };\r\n\r\n    return Dataset;\r\n});\r\n","/*!\r\n * Wraps shared functionality for report and chart detail pages.\r\n */\r\n(function(root, factory) {\r\n    root.BaseDetails = factory(root.$, root.Alertify, root.Prism);\r\n})(this, function($, Alertify, Prism) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare base details class.\r\n     * @param {Object} opts - Form settings\r\n     */\r\n    function BaseDetails(opts) {\r\n        opts = opts || {};\r\n        this.content = opts.content;\r\n        this.columnList = opts.columns || [];\r\n\r\n        $.on($.get('.view-sql', opts.content), 'click', function() {\r\n            $.dialogs.openDialog($.get('.modal-sql', opts.content).outerHTML);\r\n        });\r\n\r\n        if (!opts.allowEdit) {\r\n            this.initDate = new Date();\r\n        }\r\n    }\r\n\r\n    BaseDetails.prototype = {\r\n        /**\r\n         * Handle the result of a query for report data.\r\n         * @param {Object} json - Query result.\r\n         * @returns {bool}  True if data is valid.\r\n         */\r\n        processJson: function(json) {\r\n            if (json.updatedDate && this.initDate) {\r\n                var updateDate = new Date(json.updatedDate);\r\n                if (updateDate && updateDate > this.initDate) {\r\n                    // report has been modified - warn the user to refresh\r\n                    Alertify.error($.resx('reportModified'));\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if (json.dataSql) {\r\n                this.setSql($.get('.sql-data-content', this.content), json.dataSql, json.dataError);\r\n            }\r\n            if (json.countSql) {\r\n                this.setSql($.get('.sql-count-content', this.content), json.countSql, json.countError);\r\n            }\r\n\r\n            if ($.isNull(json.rows)) {\r\n                Alertify.error($.resx('errorConnectingToDataSource'));\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Show sql and error message in the correct place.\r\n         * @param {Node} node - DOM node to update.\r\n         * @param {string} sql - SQL statement to display.\r\n         * @param {string} error - Error to display if any.\r\n         */\r\n        setSql: function(node, sql, error) {\r\n            if (node) {\r\n                var elem = $.get('.sql-text', node);\r\n                if (elem) {\r\n                    elem.textContent = sql;\r\n                    Prism.highlightElement(elem);\r\n                }\r\n                elem = $.get('.sql-error', node);\r\n                if (elem) {\r\n                    elem.textContent = error || '';\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the list of columns for the autocomplete.\r\n         * @returns {string[]} Returns array of columns.\r\n         */\r\n        getColumnList: function() {\r\n            return this.columnList;\r\n        }\r\n    };\r\n\r\n    return BaseDetails;\r\n});\r\n","/*!\r\n * Wraps report form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.ReportDetails = factory(root.m, root.$, root.Alertify, root.BaseDetails, root.FilterForm, root.GroupForm, root.Table);\r\n})(this, function(m, $, Alertify, BaseDetails, FilterForm, GroupForm, Table) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare ReportDetails class.\r\n     * @param {Object} opts - Report settings\r\n     */\r\n    function ReportDetails(opts) {\r\n        opts = opts || {};\r\n\r\n        BaseDetails.call(this, opts);\r\n\r\n        if (!(opts.reportColumns && opts.reportColumns.length)) {\r\n            return;\r\n        }\r\n\r\n        this.isProc = opts.loadAllData;\r\n\r\n        var self = this;\r\n        var saveUrl = opts.saveColumnsUrl;\r\n        var saveStorageFunc = $.debounce(!opts.allowEdit ? $.noop : function(settings) {\r\n            if ($.isNull(self.dataTable.previousColumnWidths) || !$.equals(settings.columnWidths, self.dataTable.previousColumnWidths)) {\r\n                $.ajax({\r\n                    method: 'PUT',\r\n                    url: saveUrl,\r\n                    data: {\r\n                        Id: opts.reportId,\r\n                        Columns: $.toPascalKeys(settings.columnWidths),\r\n                        ReportWidth: settings.width * 1\r\n                    },\r\n                    block: false\r\n                });\r\n                self.dataTable.previousColumnWidths = settings.columnWidths;\r\n            }\r\n        }, 250);\r\n\r\n        this.dataTable = new Table({\r\n            content: $.get('.report-data-container', opts.content),\r\n            url: opts.dataUrl,\r\n            requestMethod: 'POST',\r\n            requestParams: { Id: opts.reportId, Save: true },\r\n            searchable: false,\r\n            loadAllData: opts.loadAllData,\r\n            editable: opts.allowEdit,\r\n            headerButtons: [{ type: 'a', attributes: { class: 'btn btn-primary mr-2', href: opts.exportUrl, target: '_blank' }, label: $.resx('export') }],\r\n            itemsPerPage: opts.rowLimit,\r\n            currentStartItem: 0,\r\n            sorting: opts.sortColumns || [],\r\n            storageFunction: saveStorageFunc,\r\n            width: opts.width,\r\n            columns: opts.reportColumns || [],\r\n            displayDateFormat: opts.dateFormat,\r\n            displayCurrencyFormat: opts.currencyFormat,\r\n            dataCallback: this.processJson.bind(this),\r\n            errorCallback: this.processJson.bind(this)\r\n        });\r\n        this.dataTable.previousColumnWidths = opts.reportColumns.map(function(x) { return { field: x.field, width: x.width * 1.0 }; });\r\n\r\n        this.filterForm = new FilterForm({\r\n            reportId: opts.reportId,\r\n            content: opts.content,\r\n            filters: opts.filters,\r\n            columns: {\r\n                id: { type: 'int' },\r\n                columnId: { type: 'int' },\r\n                operatorId: { type: 'int' },\r\n                criteria: { type: 'str' },\r\n                criteria2: { type: 'str' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: null, columnId: '', operatorId: '', criteria: null, criteria2: null },\r\n            dateFormat: opts.dateFormat,\r\n            saveFiltersUrl: opts.saveFiltersUrl,\r\n            filterOperators: opts.filterOperators,\r\n            filterOperatorIds: opts.filterOperatorIds,\r\n            filterTypes: opts.filterTypes,\r\n            dateOperators: opts.dateOperators,\r\n            lookups: opts.lookups,\r\n            isProc: opts.isProc,\r\n            dataTable: this.dataTable,\r\n            columnFn: this.getColumnList.bind(this)\r\n        });\r\n        this.filterForm.run();\r\n\r\n        this.groupForm = new GroupForm({\r\n            reportId: opts.reportId,\r\n            content: opts.content,\r\n            groups: opts.groups,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            saveGroupsUrl: opts.saveGroupsUrl,\r\n            aggregatorId: opts.aggregatorId,\r\n            aggregator: opts.aggregator,\r\n            aggregators: opts.aggregators,\r\n            isProc: opts.isProc,\r\n            dataTable: this.dataTable,\r\n            columnFn: this.getColumnList.bind(this)\r\n        });\r\n        this.groupForm.run();\r\n    }\r\n\r\n    ReportDetails.prototype = Object.create(BaseDetails.prototype);\r\n    ReportDetails.prototype.constructor = BaseDetails;\r\n\r\n    /**\r\n     * Handle the result of a query for report data.\r\n     * @param {Object} json - Query result.\r\n     * @returns {bool}  True if data is valid.\r\n     */\r\n    ReportDetails.prototype.processJson = function(json) {\r\n        if (json.updatedDate && this.initDate) {\r\n            var updateDate = new Date(json.updatedDate);\r\n            if (updateDate && updateDate > this.initDate) {\r\n                // report has been modified - warn the user of the refresh\r\n                Alertify.error($.resx('reportModified'));\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (json.dataSql) {\r\n            this.setSql($.get('.sql-data-content', this.content), json.dataSql, json.dataError);\r\n        }\r\n        if (json.countSql) {\r\n            this.setSql($.get('.sql-count-content', this.content), json.countSql, json.countError);\r\n        }\r\n\r\n        if ($.isNull(json.rows)) {\r\n            Alertify.error($.resx('errorConnectingToDataSource'));\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    ReportDetails.prototype.destroy = function() {\r\n        $.destroy(this.dataTable);\r\n        $.destroy(this.filterForm);\r\n        $.destroy(this.groupForm);\r\n    };\r\n\r\n    return ReportDetails;\r\n});\r\n","/*!\r\n * Wraps report form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.ChartDetails = factory(root.$, root.Alertify, root.BaseDetails, root.RangeForm);\r\n})(this, function($, Alertify, BaseDetails, RangeForm) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare ChartDetails class.\r\n     * @param {Object} opts - Report settings\r\n     */\r\n    function ChartDetails(opts) {\r\n        opts = opts || {};\r\n\r\n        BaseDetails.call(this, opts);\r\n\r\n        this.enableExport = false;\r\n\r\n        this.rangeForm = new RangeForm({\r\n            chartId: opts.chartId,\r\n            content: opts.content,\r\n            ranges: opts.ranges,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            filterTypes: opts.filterTypes || {},\r\n            saveRangesUrl: opts.saveRangesUrl,\r\n            dateIntervals: opts.dateIntervals,\r\n            aggregators: opts.aggregators,\r\n            reports: opts.reports,\r\n            columns: opts.columns,\r\n            processJsonFn: this.processJson.bind(this),\r\n            canExportFn: this.canExport.bind(this),\r\n            toggleExportFn: this.toggleExport.bind(this)\r\n        });\r\n        this.rangeForm.run();\r\n\r\n        if (this.rangeForm.records && this.rangeForm.records.length) {\r\n            this.rangeForm.makeChart();\r\n        }\r\n    }\r\n\r\n    ChartDetails.prototype = Object.create(BaseDetails.prototype);\r\n    ChartDetails.prototype.constructor = BaseDetails;\r\n\r\n    /**\r\n     * Handle the result of a query for report data.\r\n     * @param {Object} json - Query result.\r\n     * @returns {bool}  True if data is valid.\r\n     */\r\n    ChartDetails.prototype.processJson = function(json) {\r\n        if (json.updatedDate && this.initDate) {\r\n            var updateDate = new Date(json.updatedDate);\r\n            if (updateDate && updateDate > this.initDate) {\r\n                // chart has been modified - warn the user to refresh\r\n                document.dispatchEvent($.events.chartLoad);\r\n                Alertify.success($.resx('chartModified'));\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if ($.isNull(json.ranges) || json.ranges.length === 0) {\r\n            Alertify.error($.resx('errorConnectingToDataSource'));\r\n            this.enableExport = false;\r\n            $.show($.get('.chart-error', this));\r\n            return false;\r\n        }\r\n\r\n        this.enableExport = true;\r\n        $.get('.export-filename', this.content).value = json.title;\r\n\r\n        var elem = $.get('.sql-content', this.content);\r\n        var ranges = json.ranges.map(function(x) { return { title: x.title, sql: x.sql, error: x.error }; });\r\n        this.setSql(elem, ranges.filter(function(x) { return x.sql; }).map(function(x) { return '-- ' + x.title + '\\n' + x.sql + '\\n'; }).join('\\n'),\r\n            ranges.filter(function(x) { return x.error; }).map(function(x) { return x.title + ':<br>' + x.error + '<br>'; }).join('<br>'));\r\n\r\n        return true;\r\n    };\r\n\r\n    ChartDetails.prototype.canExport = function() {\r\n        return this.enableExport;\r\n    };\r\n\r\n    /**\r\n     * Set export flag.\r\n     * @param {bool} val - Enable export if true, else disable.\r\n     */\r\n    ChartDetails.prototype.toggleExport = function(val) {\r\n        this.enableExport = val;\r\n    };\r\n\r\n    ChartDetails.prototype.destroy = function() {\r\n        $.destroy(this.rangeForm);\r\n        $.destroy(this.chart);\r\n    };\r\n\r\n    return ChartDetails;\r\n});\r\n","/*!\r\n * Wraps functionality needed to display a dashboard widget.\r\n */\r\n(function(root, factory) {\r\n    root.Widget = factory(root.m, root.$, root.Alertify, root.Table, root.DashChart, root.Draggabilly, root.Rect);\r\n})(this, function(m, $, Alertify, Table, DashChart, Draggabilly, Rect) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Use object properties to make class list for a widget container.\r\n     * @param {Object} obj - Widget properties.\r\n     * @returns {string} CSS class list.\r\n     */\r\n    var buildClassList = function(obj) {\r\n        return 'grid-item grid-item-width-' + obj.width + ' grid-item-height-' + obj.height +\r\n            ' grid-item-x-' + obj.x + ' grid-item-y-' + obj.y;\r\n    };\r\n\r\n    /**\r\n     * Declare Widget class.\r\n     * @param {Object} opts - Widget settings\r\n     */\r\n    var Widget = function(opts) {\r\n        this.init(opts);\r\n\r\n        // attach this to the container for reference in the dashboard\r\n        var container = this.getContainer();\r\n        container.widget = this;\r\n    };\r\n\r\n    Widget.prototype = {\r\n        /**\r\n         * Initialize the widget.\r\n         * @param {Object} opts - Widget settings\r\n         */\r\n        init: function(opts) {\r\n            opts.isData = $.coalesce(opts.isData, true);\r\n            opts.refreshSeconds = $.coalesce(opts.refreshSeconds, 0);\r\n            opts.baseUrl = $.get('body').getAttribute('data-base-url');\r\n            this.opts = opts;\r\n\r\n            this.id = opts.id;\r\n            this.table = null;\r\n            this.chart = null;\r\n            this.interval = null;\r\n            this.isFullscreen = false;\r\n            this.initDate = new Date();\r\n            this.dragMargin = 0;\r\n\r\n            if (opts.isData) {\r\n                this.tableOpts = {\r\n                    content: '#widgetData_' + opts.id,\r\n                    id: 'widgetTable_' + opts.id,\r\n                    url: opts.url,\r\n                    requestMethod: 'POST',\r\n                    requestParams: { Id: opts.reportId },\r\n                    loadAllData: false,\r\n                    editable: false,\r\n                    itemsPerPage: opts.reportRowLimit || 10,\r\n                    currentStartItem: 0,\r\n                    sorting: opts.sortColumns,\r\n                    storageFunction: $.noop,\r\n                    width: Math.max(opts.reportWidth || 100, 100),\r\n                    columns: opts.columns,\r\n                    dataCallback: this.processJson.bind(this),\r\n                    errorCallback: this.onError.bind(this),\r\n                    displayDateFormat: opts.displayDateFormat,\r\n                    displayCurrencyFormat: opts.displayCurrencyFormat\r\n                };\r\n            }\r\n\r\n            this.render();\r\n\r\n            var container = this.getContainer();\r\n            this.rect = new Rect(opts.width, opts.height, opts.x, opts.y);\r\n            this.setupDraggie(container);\r\n\r\n            if (!opts.isData) {\r\n                this.chart = new DashChart(container, false, this.processJson.bind(this), this.onError.bind(this));\r\n            }\r\n            if (opts.refreshSeconds > 0) {\r\n                this.interval = setInterval(this.refresh.bind(this), opts.refreshSeconds * 1000);\r\n            }\r\n\r\n            if (opts.title) {\r\n                $.setText($.get('.grid-title', container), opts.title);\r\n            }\r\n        },\r\n\r\n        render: function() {\r\n            var parentNode = $.get('#widget_' + this.opts.id);\r\n            var firstRender = !parentNode;\r\n\r\n            if (firstRender) {\r\n                // have to create the parent node by hand first - rendering multiple views to the same parentNode with mithril causes an overwrite\r\n                parentNode = $.createNode();\r\n                parentNode.id = 'widget_' + this.opts.id;\r\n                parentNode.setAttribute('data-url', this.opts.url);\r\n                parentNode.className = buildClassList(this.opts);\r\n                $.get('#dashboard').appendChild(parentNode);\r\n            }\r\n\r\n            var self = this;\r\n            // now render the rest of the widget content\r\n            m.mount(parentNode, {\r\n                view: function() {\r\n                    return [\r\n                        m('.grid-header.columns', [\r\n                            m('span.grid-title.col-8', self.opts.title),\r\n                            m('span.grid-buttons.col-4.text-right', [\r\n                                m('a.btn.btn-link.btn-refresh', { title: $.resx('refresh'), onclick: self.forceRefresh.bind(self) },\r\n                                    m('i.dash.dash-arrows-cw')\r\n                                ),\r\n                                m('a.btn.btn-link.btn-fullscreen', { title: $.resx('toggleFullScreen'), onclick: self.toggleFullScreen.bind(self) },\r\n                                    m('i.dash.dash-max')\r\n                                ),\r\n                                m('a.btn.btn-link.dash-ajax.fs-disabled', {\r\n                                    href: self.opts.baseUrl + (self.opts.isData ? 'Report' : 'Chart') + '/Details/' + (self.opts.isData ? self.opts.reportId : self.opts.chartId),\r\n                                    title: $.resx(self.opts.isData ? 'viewReport' : 'viewChart')\r\n                                }, m('i.dash.dash-info')),\r\n                                m('a.btn.btn-link.dash-ajax.fs-disabled', { href: self.opts.baseUrl + 'Dashboard/Edit/' + self.opts.id, title: $.resx('editWidget') },\r\n                                    m('i.dash.dash-pencil')\r\n                                ),\r\n                                m('a.btn.btn-link.dash-ajax.fs-disabled', { title: $.resx('deleteWidget'), onclick: self.deleteWidget.bind(self) },\r\n                                    m('i.dash.dash-trash')\r\n                                )\r\n                            ])\r\n                        ]),\r\n                        m('.grid-body', [\r\n                            self.opts.isData ? m('.widget-data', { id: 'widgetData_' + self.opts.id }, m(Table, self.tableOpts)) :\r\n                                m('.widget-chart', { id: 'widgetChart_' + self.opts.id }, [\r\n                                    m('.chart-spinner', m('.loading.loading-lg')),\r\n                                    m('.chart-error.d-none.pl-1',\r\n                                        m('div', [\r\n                                            m('p', $.resx('errorChartLoad')),\r\n                                            m('.btn.btn-info.btn-sm', { onclick: self.refresh.bind(self) }, $.resx('tryAgain'))\r\n                                        ])\r\n                                    ),\r\n                                    m('.canvas-container', m('canvas.chart-canvas.d-none'))\r\n                                ])\r\n                        ]),\r\n                        m('.grid-footer', [\r\n                            m('span.grid-updated-time', new Date().toLocaleTimeString()),\r\n                            m('span.resizable-handle.float-right', m('i.dash.dash-corner')),\r\n                            m('span.drag-handle.float-right', m('i.dash.dash-move'))\r\n                        ])\r\n                    ];\r\n                }\r\n            });\r\n\r\n            if (firstRender) {\r\n                // add our system wide events\r\n                $.dialogs.processContent($.get('#widget_' + this.opts.id));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the container element for the widget.\r\n         * @returns {Node} DOM node that contains the widget content.\r\n         */\r\n        getContainer: function() {\r\n            return $.get('#widget_' + this.opts.id);\r\n        },\r\n\r\n        /**\r\n         * Add the draggabilly handlers.\r\n         * @param {Node} container - DOM node that contains the widget content.\r\n         * @param {Object} grid - Object that contains the grid columnWidth and rowHeight.\r\n         */\r\n        setupDraggie: function(container, grid) {\r\n            container = $.coalesce(container, this.getContainer());\r\n            var g = this.opts.grid = $.coalesce(grid, this.opts.grid);\r\n\r\n            $.destroy(this.moveDraggie);\r\n            this.moveDraggie = new Draggabilly(container, { handle: '.drag-handle', grid: [g.columnWidth, g.rowHeight], minZero: true }).on('dragEnd', this.stopDrag.bind(this));\r\n\r\n            $.destroy(this.resizeDraggie);\r\n            var handle = $.get('.resizable-handle', container);\r\n            this.resizeDraggie = new Draggabilly(handle, { grid: [g.columnWidth, g.rowHeight] }).on('dragStart', this.initResize.bind(this)).on('dragEnd', this.stopResize.bind(this));\r\n\r\n            var style = handle.currentStyle || window.getComputedStyle(handle);\r\n            this.dragMargin = style.marginRight.replace('px', '') * 1;\r\n        },\r\n\r\n        /**\r\n         * Stop dragging the widget and updates its location.\r\n         */\r\n        stopDrag: function() {\r\n            var x = Math.max(Math.round(this.moveDraggie.position.x / this.opts.grid.columnWidth), 0);\r\n            var y = Math.max(Math.round(this.moveDraggie.position.y / this.opts.grid.rowHeight), 0);\r\n            if (x + this.rect.width > this.opts.grid.columns) {\r\n                x = this.opts.grid.columns - this.rect.width;\r\n            }\r\n            if (y + this.rect.height > this.opts.grid.rows) {\r\n                y = this.opts.grid.rows - this.rect.height;\r\n            }\r\n            this.setLocation(x, y);\r\n            this.rect.updated = true;\r\n            this.opts.layoutCallback();\r\n        },\r\n\r\n        /**\r\n         * Start resizing a widget\r\n         * @param {Event} event - Original mousedown or touchstart event\r\n         */\r\n        initResize: function(event) {\r\n            // clear any selection so browser doesn't think we are dragging the selection\r\n            window.getSelection().removeAllRanges();\r\n\r\n            var container = this.getContainer();\r\n            container.style['z-index'] = 9999;\r\n            var pos = event.changedTouches ? event.changedTouches[0] : event;\r\n            this.x = pos.clientX;\r\n            this.y = pos.clientY;\r\n\r\n            var styles = document.defaultView.getComputedStyle(container);\r\n            this.width = styles.width.replace('px', '') * 1;\r\n            this.height = styles.height.replace('px', '') * 1;\r\n\r\n            if (event.target !== event.currentTarget) {\r\n                event.stopPropagation();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update the widget after the user finishes resizing.\r\n         */\r\n        stopResize: function() {\r\n            var container = this.getContainer();\r\n            var w = Math.max(this.width + this.resizeDraggie.position.x + this.dragMargin, this.opts.grid.columnWidth * 4);\r\n            var h = Math.max(this.height + this.resizeDraggie.position.y, this.opts.grid.rowHeight * 4);\r\n\r\n            this.setSize(Math.min(Math.round(w / this.opts.grid.columnWidth), this.opts.grid.columns), Math.min(Math.round(h / this.opts.grid.rowHeight), this.opts.grid.rows));\r\n\r\n            var handle = $.get('.resizable-handle', container);\r\n            if (handle) {\r\n                handle.removeAttribute('style');\r\n            }\r\n\r\n            this.opts.layoutCallback();\r\n\r\n            if (this.opts.isData) {\r\n                // @todo trigger update event\r\n                // this.table.updateLayout();\r\n            }\r\n\r\n            this.rect.updated = true;\r\n        },\r\n\r\n        deleteWidget: function() {\r\n            var self = this;\r\n            Alertify.confirm($.resx('areYouSure'), function() {\r\n                $.ajax({\r\n                    method: 'DELETE',\r\n                    url: self.opts.baseUrl + 'Dashboard/Delete/' + self.opts.id\r\n                }, self.destroy.bind(self));\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Handle the result of a query for report data.\r\n         * @param {Object} json - Data to display in the widget.\r\n         * @returns {bool} True if the json data is valid\r\n         */\r\n        processJson: function(json) {\r\n            if (json.updatedDate && this.initDate) {\r\n                var updateDate = new Date(json.updatedDate);\r\n                if (updateDate && updateDate > this.initDate) {\r\n                    this.reload();\r\n                    return false;\r\n                }\r\n            }\r\n            if ((this.opts.isData && $.isNull(json.rows)) || (!this.opts.isData && ($.isNull(json.ranges) || json.ranges.length === 0))) {\r\n                Alertify.error($.resx('errorConnectingToDataSource'));\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Reload the widget options and reinitialize.\r\n         * @param {bool} showMsg - If true show the widget reloaded message to the user.\r\n         * @param {Object} options - Options to use to reload the widget instead of requesting from the server.\r\n         */\r\n        reload: function(showMsg, options) {\r\n            var callback = function(opts) {\r\n                this.destroy(false);\r\n                this.init($.extend(this.opts, opts));\r\n                if ($.coalesce(showMsg, true)) {\r\n                    Alertify.success($.resx('widgetReloaded').replace('{0}', this.opts.title));\r\n                }\r\n                return;\r\n            };\r\n\r\n            if (!$.isNull(options)) {\r\n                callback.call(this, options);\r\n            } else {\r\n                $.ajax({ method: 'GET', url: this.opts.baseUrl + 'Dashboard/WidgetOptions/' + this.opts.id }, callback.bind(this));\r\n            }\r\n        },\r\n\r\n        refresh: function() {\r\n            if ($.dialogs.hasOpenDialog()) {\r\n                // don't refresh when a dialog is open\r\n                return;\r\n            }\r\n\r\n            if (this.opts.isData) {\r\n                // @todo trigger refresh event\r\n                //this.table.refresh();\r\n            } else {\r\n                this.chart.run();\r\n            }\r\n\r\n            var updatedAt = $.get('.grid-updated-time', this.getContainer());\r\n            if (updatedAt) {\r\n                updatedAt.innerText = new Date().toLocaleTimeString();\r\n            }\r\n        },\r\n\r\n        forceRefresh: function() {\r\n            if (this.opts.refreshSeconds > 0) {\r\n                clearInterval(this.interval);\r\n                this.interval = setInterval(this.refresh.bind(this), this.opts.refreshSeconds * 1000);\r\n            }\r\n            this.refresh();\r\n        },\r\n\r\n        /**\r\n         * Refresh the style based on the dimensions.\r\n         * @param {number} width - New width of the widget.\r\n         * @param {number} height - New height of the widget.\r\n         */\r\n        setSize: function(width, height) {\r\n            this.rect.width = width;\r\n            this.rect.height = height;\r\n            this.updateStyle();\r\n        },\r\n\r\n        /**\r\n         * Refresh the style based on the dimensions.\r\n         * @param {number} x - New x coordinate of the widget.\r\n         * @param {number} y - New y coordinate of the widget.\r\n         */\r\n        setLocation: function(x, y) {\r\n            this.rect.x = x;\r\n            this.rect.y = y;\r\n            this.updateStyle();\r\n        },\r\n\r\n        /**\r\n        * Refresh the style based on the dimensions.\r\n        */\r\n        updateStyle: function() {\r\n            var container = this.getContainer();\r\n            container.className = buildClassList(this.rect);\r\n            container.removeAttribute('style');\r\n        },\r\n\r\n        /**\r\n         * Handle an error.\r\n         * @returns {bool} Always returns true.\r\n         */\r\n        onError: function() {\r\n            if (this.interval) {\r\n                clearInterval(this.interval);\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Destroy the widget.\r\n         * @param {bool} totalDestruction - Remove the container node and null out the widget object if true.\r\n         */\r\n        destroy: function(totalDestruction) {\r\n            //$.destroy(this.table);\r\n            $.destroy(this.chart);\r\n            $.destroy(this.moveDraggie);\r\n            $.destroy(this.resizeDraggie);\r\n\r\n            if (this.interval) {\r\n                clearInterval(this.interval);\r\n                this.interval = null;\r\n            }\r\n\r\n            if ($.coalesce(totalDestruction, true)) {\r\n                var container = this.getContainer();\r\n                container.widget = null;\r\n                container.parentNode.removeChild(container);\r\n            }\r\n        },\r\n\r\n        toggleFullScreen: function() {\r\n            var container = this.getContainer();\r\n            var fullScreenIcon = $.get('.btn-fullscreen i', container);\r\n            $.toggleClass(container, 'full-screen', !this.isFullscreen);\r\n            $.toggleClass(fullScreenIcon, 'dash-min', !this.isFullscreen);\r\n            $.toggleClass(fullScreenIcon, 'dash-max', this.isFullscreen);\r\n            var isFullscreen = this.isFullscreen;\r\n            $.getAll('.fs-disabled', container).forEach(function(x) { $.toggleClass(x, 'disabled', !isFullscreen); });\r\n            this.isFullscreen = !this.isFullscreen;\r\n\r\n            if (this.opts.isData) {\r\n                // @todo trigger update event\r\n                // this.table.updateLayout();\r\n            } else {\r\n                this.chart.resize();\r\n            }\r\n        }\r\n    };\r\n\r\n    return Widget;\r\n});\r\n","/*!\r\n * Wraps dialog functionality.\r\n */\r\n(function($, Alertify, Dialog, Table, Tab, CollapsibleList, Validator, DatePicker) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Set focus on an element after a dialog closes.\r\n     * @this {Event} Event that originally opened the dialog.\r\n     */\r\n    var focusOnClose = function() {\r\n        if (this && this.target) {\r\n            this.target.focus();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Selectors and callback function to create events.\r\n     */\r\n    var _contentActions = [\r\n        { selector: '[data-toggle=\"tab\"], [data-toggle=\"pill\"]', action: function() { new Tab(this); } },\r\n        { selector: '.dash-table', action: function() { tableLoad(this); } },\r\n        { selector: '.dash-ajax', action: function() { $.on(this, 'click', handleAjaxRequest); } },\r\n        { selector: '.dash-form', action: function() { $.on(this, 'submit', function(e) { e.preventDefault(); }, true); } },\r\n        {\r\n            selector: '.dash-context-help', action: function() {\r\n                $.on(this, 'click', function(e) {\r\n                    Alertify.alert(this.getAttribute('data-message').replace(/&quot;/g, '\"'), focusOnClose.bind(e), focusOnClose.bind(e));\r\n                });\r\n            }\r\n        },\r\n        { selector: '.dash-collapsible-list', action: function() { new CollapsibleList(this); } },\r\n        {\r\n            selector: '[data-toggle=\"validator\"]', action: function() {\r\n                new Validator(this, { match: $.resx('errorMatch'), minlength: $.resx('errorMinLength') });\r\n            }\r\n        },\r\n        { selector: '.dash-input-replace', action: function() { $.on(this, 'click', inputReplace); } }\r\n    ];\r\n\r\n    var _dialogs = [];\r\n\r\n    /**\r\n     * Find a dialog in the internal list by ID.\r\n     * @param {number} id - Dialog ID\r\n     */\r\n    var findDialogById = function(id) {\r\n        var dlgs = _dialogs.filter(function(x) {\r\n            return x.getId() === id;\r\n        });\r\n        return dlgs.length ? dlgs[0] : null;\r\n    };\r\n\r\n    /**\r\n     * Get active dialog.\r\n     * @param {Object} Return currently open dialog object.\r\n     */\r\n    var getActiveDialog = function() {\r\n        if (!_dialogs.length) {\r\n            return null;\r\n        }\r\n        return findDialogById(Math.max.apply(Math, _dialogs.map(function(x) { return x.getId(); })));\r\n    };\r\n\r\n    /**\r\n     * Get active dialog content.\r\n     * @param {Object} Return content node of currently open dialog object.\r\n     */\r\n    var getActiveContent = function() {\r\n        var dlg = getActiveDialog();\r\n        return dlg ? dlg.getContent() : null;\r\n    };\r\n\r\n    var hasOpenDialog = function() {\r\n        return _dialogs.length > 0;\r\n    };\r\n\r\n    /**\r\n     * Remove a dialog from internal list.\r\n     * @param {number} id - Dialog ID\r\n     */\r\n    var removeDialog = function(id) {\r\n        _dialogs = _dialogs.filter(function(x) {\r\n            return x.getId() !== id;\r\n        });\r\n        var activeDialog = getActiveDialog();\r\n        if (activeDialog) {\r\n            setTimeout(activeDialog.onShow.bind(activeDialog), 25);\r\n        } else {\r\n            // back to dashboard so set title\r\n            var dashboard = $.get('#dashboard');\r\n            if (dashboard) {\r\n                document.title = dashboard.getAttribute('data-title');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle action from a click on an ajax link.\r\n     * @param {Event} e - Event that triggered the request.\r\n     */\r\n    var handleAjaxRequest = function(e) {\r\n        if (!(e && e.target)) {\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n        e.target.blur();\r\n\r\n        var obj = e.target;\r\n        while (obj !== document.body && obj.parentNode && !$.hasClass(obj, 'dash-ajax')) {\r\n            obj = obj.parentNode;\r\n        }\r\n        if (!obj || !(obj.hasAttribute('href') || obj.hasAttribute('data-href')) || $.hasClass(obj, 'disabled')) {\r\n            return;\r\n        }\r\n\r\n        var url = obj.getAttribute('href') || obj.getAttribute('data-href');\r\n        var method = obj.getAttribute('data-method') || 'GET';\r\n        var message = obj.getAttribute('data-message');\r\n        var target = obj.getAttribute('target');\r\n\r\n        if ($.hasClass(obj, 'dash-confirm')) {\r\n            Alertify.dismissAll();\r\n            Alertify.confirm(message, sendAjaxRequest.bind(this, url, method, obj), function() { e.target.focus(); });\r\n        } else if ($.hasClass(obj, 'dash-prompt')) {\r\n            Alertify.dismissAll();\r\n            Alertify.prompt(message, checkPrompt.bind(this, url, method, obj));\r\n        } else if (target) {\r\n            window.open(url, target);\r\n        } else {\r\n            sendAjaxRequest(url, method, obj);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Send a request to the server and display the results\r\n     * @param {string} url - URL to send request for.\r\n     * @param {string} method - Request method type.\r\n     * @param {Node} target - Node that requested the data.\r\n     * @param {Event} e - Event that triggered the request.\r\n     * @param {string} promptValue - If coming from a prompt dialog, the value entered.\r\n     */\r\n    var sendAjaxRequest = function(url, method, target, e, promptValue) {\r\n        if (!url) {\r\n            return;\r\n        }\r\n\r\n        if (promptValue) {\r\n            if (url.indexOf('?') > -1) {\r\n                url += '&Prompt=' + encodeURIComponent(promptValue);\r\n            } else {\r\n                url += '?Prompt=' + encodeURIComponent(promptValue);\r\n            }\r\n        }\r\n        $.ajax({\r\n            method: method || 'GET',\r\n            url: url\r\n        }, function(responseData) {\r\n            if (!(responseData.content || responseData.component)) {\r\n                refreshTable();\r\n                return;\r\n            }\r\n\r\n            if (target && target.hasAttribute('data-update-target')) {\r\n                var targetSelector = target.getAttribute('data-update-target');\r\n                var updateObj;\r\n                if (targetSelector.substr(1) === '#') {\r\n                    updateObj = $.get(targetSelector);\r\n                } else {\r\n                    var dialog = getActiveDialog();\r\n                    if (dialog) {\r\n                        updateObj = $.get(targetSelector, dialog.getContainer());\r\n                    }\r\n                }\r\n                if (updateObj) {\r\n                    if (responseData.html) {\r\n                        updateObj.innerHTML = responseData.content;\r\n                        processContent(updateObj);\r\n                    } else {\r\n                        $.setText(updateObj, responseData.content);\r\n                    }\r\n                }\r\n            } else {\r\n                openDialog($.isNull(responseData.component) ? responseData.content : responseData, target);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Open a new dialog.\r\n     * @param {string} content - HTML content for the dialog\r\n     * @param {Node} target - Node that triggered the dialog to open.\r\n     * @param {Function} onOkay - Function to run if the user clicks ok.\r\n     * @param {Function} onCancel - Function to run if the user clicks cancel.\r\n     * @param {Function} onShow - Function to run after the dialog loads.\r\n     */\r\n    var openDialog = function(content, target, onOkay, onCancel, onShow) {\r\n        Alertify.dismissAll();\r\n\r\n        // get max dialog id, and increment\r\n        var id = _dialogs.length ? Math.max.apply(Math, _dialogs.map(function(x) { return x.getId(); })) + 1 : 1;\r\n        var activeDlg = getActiveDialog();\r\n        _dialogs.push(new Dialog({\r\n            id: id, content: content, target: target, onOkay: onOkay, onCancel: onCancel, onShow: onShow,\r\n            buttons: { 'ok': $.resx('okay'), 'cancel': $.resx('cancel'), 'close': $.resx('close') },\r\n            parent: activeDlg ? activeDlg.getId() : null\r\n        }));\r\n    };\r\n\r\n    /**\r\n     * Check that a prompt value was supplied.\r\n     * @param {string} url - URL to send request for.\r\n     * @param {string} method - Request method type.\r\n     * @param {Node} target - Node that requested the data.\r\n     * @param {string} promptValue - If coming from a prompt dialog, the value entered.\r\n     * @param {Event} e - Event that triggered the request.\r\n     */\r\n    var checkPrompt = function(url, method, target, promptValue, e) {\r\n        if (!$.hasValue(promptValue)) {\r\n            Alertify.error($.resx('errorNameRequired'));\r\n            return false;\r\n        }\r\n        sendAjaxRequest.call(this, url, method, target, e, promptValue);\r\n    };\r\n\r\n    /**\r\n     * Initialize a table instance\r\n     * @param {Node} node - Node containing the data url for the table settings.\r\n     */\r\n    var tableLoad = function(node) {\r\n        var json = node.getAttribute('data-json');\r\n        if (json) {\r\n            var opts = JSON.parse(json);\r\n            opts.content = node;\r\n            node.table = new Table(opts);\r\n            node.removeAttribute('data-json');\r\n        } else {\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: node.getAttribute('data-url')\r\n            }, function(opts) {\r\n                node.table = new Table(opts);\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Refresh data for the table instance in the active dialog.\r\n     */\r\n    var refreshTable = function() {\r\n        var content = getActiveContent();\r\n        if (!content) {\r\n            return;\r\n        }\r\n        var node = $.hasClass(content, 'dash-table') ? content : $.get('.dash-table', content);\r\n        if (node && node.table) {\r\n            node.table.refresh();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Focus on the first error or input.\r\n     * @param {Node} node - Parent node to search in.\r\n     */\r\n    var focusNode = function(node) {\r\n        if (!node) {\r\n            return null;\r\n        }\r\n        var elems = $.getAll('.form-control-error:not([type=\"hidden\"]):not([disabled]):not([readonly]), .mform-control-error:not([type=\"hidden\"]):not([disabled]):not([readonly])', node).filter($.isVisible);\r\n        if (!elems.length) {\r\n            elems = $.getAll('input:not([type=\"hidden\"]):not([disabled]):not([readonly]), select:not([disabled]):not([readonly])', node).filter($.isVisible);\r\n        }\r\n        if (!elems.length) {\r\n            elems = $.getAll('button:not([disabled]), a:not([disabled]), [tabindex]:not([disabled]):not([tabindex=\"-1\"])', node).filter($.isVisible);\r\n        }\r\n        if (!elems.length) {\r\n            var dlg = $.closest('.rd-dialog', node);\r\n            if (dlg) {\r\n                elems = $.getAll('.rd-close', dlg).filter($.isVisible);\r\n            }\r\n        }\r\n        if (elems.length) {\r\n            elems[0].focus();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Replace the value of the data-target node with the data-value from this. Used for providing defaults via a dropdown.\r\n     */\r\n    var inputReplace = function() {\r\n        if (this.hasAttribute('data-target') && this.hasAttribute('data-value')) {\r\n            var target = $.get('#' + this.getAttribute('data-target'));\r\n            if (target && !$.isNull(target.value)) {\r\n                target.value = this.getAttribute('data-value');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Process node content adding events.\r\n     * @param {Node} node - Node to add events to.\r\n     */\r\n    var processContent = function(node) {\r\n        node = $.isEvent(node) ? null : node;\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        // process all the content actions\r\n        var elems;\r\n        _contentActions.forEach(function(act) {\r\n            elems = $.getAll(act.selector, node);\r\n            if ($.matches(node, act.selector)) {\r\n                elems.push(node);\r\n            }\r\n            elems.forEach(function(x) {\r\n                act.action.call(x);\r\n            });\r\n        });\r\n\r\n        if (node.nodeName === 'BODY') {\r\n            var lang = node.getAttribute('data-lang');\r\n            if (lang && lang !== 'en') {\r\n                DatePicker.localize({ locale: lang });\r\n            }\r\n            focusNode(node);\r\n        }\r\n    };\r\n\r\n    $.dialogs = {\r\n        openDialog: openDialog,\r\n        findDialogById: findDialogById,\r\n        focusNode: focusNode,\r\n        focusOnClose: focusOnClose,\r\n        getActiveContent: getActiveContent,\r\n        getActiveDialog: getActiveDialog,\r\n        hasOpenDialog: hasOpenDialog,\r\n        processContent: processContent,\r\n        refreshTable: refreshTable,\r\n        removeDialog: removeDialog,\r\n        sendAjaxRequest: sendAjaxRequest\r\n    };\r\n})(this.$, this.Alertify, this.Dialog, this.Table, this.Tab, this.CollapsibleList, this.Validator, this.DatePicker);\r\n","/*!\r\n * Wraps dataset form functionality.\r\n */\r\n(function($, Dataset) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Store references to the dataset form mithril modules and value lists.\r\n     * @type {Object}\r\n     */\r\n    var _datasets = {};\r\n\r\n    /**\r\n     * Initialize the dataset form when the datasetFormLoad event fires.\r\n     */\r\n    $.on(document, 'datasetFormLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'dataset-form')) {\r\n            return;\r\n        }\r\n\r\n        var dataset = $.get('.dataset-id', form);\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-url'),\r\n            data: dataset ? { id: dataset.value } : null\r\n        }, function(data) {\r\n            var dlg = $.dialogs.getActiveDialog();\r\n            data.content = dlg.getContent();\r\n            _datasets[dlg.getId()] = new Dataset(data);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Destroy the form when the dialog closes.\r\n     */\r\n    $.on(document, 'datasetFormUnload', function() {\r\n        if (!_datasets) {\r\n            return;\r\n        }\r\n\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var dataset = _datasets[dlg.getId()];\r\n        if (dataset) {\r\n            dataset.destroy();\r\n        }\r\n        delete _datasets[dlg.getId()];\r\n    });\r\n})(this.$, this.Dataset);\r\n","/*!\r\n * Wraps functionality for displaying reports.\r\n */\r\n(function($, Draggabilly, ShareForm, ReportDetails) {\r\n    'use strict';\r\n\r\n    var _reports = {};\r\n    var _shares = {};\r\n\r\n    /**\r\n     * Update zIndex of column being dragged so it is on top.\r\n     * @param {Event} event - Original mousedown or touchstart event\r\n     */\r\n    var startDrag = function(event) {\r\n        var target = $.hasClass(event.target, 'column-item') ? event.target : event.target.parentNode;\r\n        target.style['z-index'] = 9999;\r\n    };\r\n\r\n    /**\r\n     * Update column lists when the user stops dragging a column.\r\n     * @param {Event} event - Original mouseup or touchend event\r\n     * @param {MouseEvent|Touch} pointer - Event object that has .pageX and .pageY\r\n     */\r\n    var stopDrag = function(event, pointer) {\r\n        var target = $.hasClass(event.target, 'column-item') ? event.target : event.target.parentNode;\r\n        var isLeft = pointer.x + target.offsetWidth / 2 < document.documentElement.clientWidth / 2;\r\n        var newPos = Math.max(Math.round(target.offsetTop / target.offsetHeight), 0);\r\n\r\n        $.removeClass(target, 'column-item-right');\r\n        $.removeClass(target, 'column-item-left');\r\n        target.removeAttribute('style');\r\n\r\n        var leftItems = $.getAll('.column-item-left');\r\n        leftItems.sort(columnSort);\r\n        var rightItems = $.getAll('.column-item-right');\r\n        rightItems.sort(columnSort);\r\n        newPos = Math.min(newPos, isLeft ? leftItems.length : rightItems.length);\r\n\r\n        if (isLeft) {\r\n            $.addClass(target, 'column-item-left');\r\n            leftItems.splice(newPos, 0, target);\r\n        } else {\r\n            $.addClass(target, 'column-item-right');\r\n            rightItems.splice(newPos, 0, target);\r\n        }\r\n\r\n        updateList(leftItems, true);\r\n        updateList(rightItems, false);\r\n    };\r\n\r\n    /**\r\n     * Sort columns by their vertical position.\r\n     * @param {Object} a - Object for first column.\r\n     * @param {Object} b - Object for second column.\r\n     * @returns {bool} True if first column should be after second column, else false;\r\n     */\r\n    var columnSort = function(a, b) {\r\n        return a.offsetTop > b.offsetTop;\r\n    };\r\n\r\n    /**\r\n     * Update the position and displayOrder of columns in a list.\r\n     * @param {Node[]} items - Array of column nodes.\r\n     * @param {bool} isLeft - True if the left column list, else false.\r\n     */\r\n    var updateList = function(items, isLeft) {\r\n        items.forEach(function(x, i) {\r\n            updateColumn(x, i, isLeft);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Update the class list and displayOrder for a column item.\r\n     * @param {Node} element - DOM node for the column.\r\n     * @param {number} index - New index of the column in the list.\r\n     * @param {bool} isLeft - True if the column is in the left list, else false.\r\n     */\r\n    var updateColumn = function(element, index, isLeft) {\r\n        element.className = element.className.replace(/column-item-y-([0-9]*)/i, '').trim() + ' column-item-y-' + index;\r\n        var input = $.get('.column-grid-display-order', element);\r\n        if (input) {\r\n            if (isLeft) {\r\n                input.value = 0;\r\n            } else {\r\n                input.value = index + 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initialize the report column selector.\r\n     */\r\n    $.on(document, 'columnSelectorLoad', function() {\r\n        $.getAll('.column-item').forEach(function(x) {\r\n            new Draggabilly(x).on('dragStart', startDrag).on('dragEnd', stopDrag);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Request settings to display a report and call the method to initialize it.\r\n     */\r\n    $.on(document, 'reportLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'report-form')) {\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-url')\r\n        }, function(data) {\r\n            var dlg = $.dialogs.getActiveDialog();\r\n            data.content = dlg.getContent();\r\n            _reports[dlg.getId()] = new ReportDetails(data);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Clean up when closing the report dialog.\r\n     */\r\n    $.on(document, 'reportUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var report = _reports[dlg.getId()];\r\n        if (report) {\r\n            report.destroy();\r\n        }\r\n        delete _reports[dlg.getId()];\r\n        document.dispatchEvent($.events.dashboardReload);\r\n    });\r\n\r\n    /**\r\n     * Load the settings to display the report share form.\r\n     */\r\n    $.on(document, 'reportShareLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'report-share-form')) {\r\n            return;\r\n        }\r\n\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        _shares[dlg.getId()] = new ShareForm({ content: dlg.getContent(), formName: 'Shares' });\r\n        _shares[dlg.getId()].run();\r\n    });\r\n\r\n    /**\r\n     * Clean up when the report share dialog closes.\r\n     */\r\n    $.on(document, 'reportShareUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var share = _shares[dlg.getId()];\r\n        if (share) {\r\n            share.destroy();\r\n        }\r\n        delete _shares[dlg.getId()];\r\n    });\r\n})(this.$, this.Draggabilly, this.ShareForm, this.ReportDetails);\r\n","/*!\r\n * Wraps functionality for displaying charts.\r\n */\r\n(function($, Alertify, Chart, ChartDetails, ShareForm) {\r\n    'use strict';\r\n\r\n    // Change chart settings.\r\n    Chart.defaults.global.responsive = true;\r\n    Chart.defaults.global.maintainAspectRatio = false;\r\n    Chart.defaults.global.title.display = false;\r\n    Chart.defaults.global.legend.position = 'bottom';\r\n    Chart.defaults.global.legend.labels.fontSize = 16;\r\n    Chart.defaults.global.legend.labels.fontFamily = 'Calibri';\r\n    Chart.defaults.global.layout = { padding: 10 };\r\n    Chart.defaults.scale.ticks.fontFamily = 'Calibri';\r\n    Chart.defaults.scale.ticks.fontSize = 12;\r\n\r\n    var _charts = {};\r\n    var _shares = {};\r\n\r\n    /**\r\n     * Request settings to display a chart and call the method to initialize it.\r\n     */\r\n    $.on(document, 'chartLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'chart-form')) {\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-url')\r\n        }, function(data) {\r\n            var dlg = $.dialogs.getActiveDialog();\r\n            data.content = dlg.getContent();\r\n            _charts[dlg.getId()] = new ChartDetails(data);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Clean up when closing the chart dialog.\r\n     */\r\n    $.on(document, 'chartUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var chart = _charts[dlg.getId()];\r\n        if (chart) {\r\n            chart.destroy();\r\n        }\r\n        delete _charts[dlg.getId()];\r\n        document.dispatchEvent($.events.dashboardReload);\r\n    });\r\n\r\n    /**\r\n     * Load the settings to display the chart share form.\r\n     */\r\n    $.on(document, 'chartShareLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'chart-share-form')) {\r\n            return;\r\n        }\r\n\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        _shares[dlg.getId()] = new ShareForm({ content: dlg.getContent(), formName: 'Shares' });\r\n        _shares[dlg.getId()].run();\r\n    });\r\n\r\n    /**\r\n     * Clean up when the chart share dialog closes.\r\n     */\r\n    $.on(document, 'chartShareUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var share = _shares[dlg.getId()];\r\n        if (share) {\r\n            share.destroy();\r\n        }\r\n        delete _shares[dlg.getId()];\r\n    });\r\n})(this.$, this.Alertify, this.Chart, this.ChartDetails, this.ShareForm);\r\n","/*!\r\n * Wraps functionality for displaying/moving/resizing widgets and their contents.\r\n */\r\n(function($, Widget) {\r\n    'use strict';\r\n\r\n    var _columns = 20;\r\n    var _rows = 20;\r\n    var _currentPositions = null;\r\n\r\n    /**\r\n     * Initialize the dashboard.\r\n     * @param {Object} widgets - Widgets options.\r\n     */\r\n    var create = function(widgets) {\r\n        var dashboard = $.get('#dashboard');\r\n        widgets = $.coalesce(widgets, []);\r\n\r\n        var opts = makeWidgetOpts(dashboard);\r\n        if (widgets.length) {\r\n            widgets.forEach(function(x) { new Widget($.extend(x, opts)); });\r\n            $.on(window, 'keydown', checkKeyPress);\r\n            $.on(window, 'resize', $.debounce(resizeLayout, 100));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Make the extra options needed to create a widget.\r\n     * @param {Node} dashboard - Dashboard node.\r\n     * @returns {Object} Object with grid and layoutCallback.\r\n     */\r\n    var makeWidgetOpts = function(dashboard) {\r\n        dashboard = $.coalesce(dashboard, $.get('#dashboard'));\r\n        return {\r\n            grid: { columns: _columns, rows: _rows, columnWidth: dashboard.parentNode.offsetWidth / _columns, rowHeight: dashboard.parentNode.offsetHeight / _rows },\r\n            layoutCallback: $.debounce(updatePosition, 100)\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Get the config for the dashboard from the server.\r\n     */\r\n    $.on(document, 'dashboardLoad', function() {\r\n        var dash = $.get('#dashboard');\r\n        if (!dash) {\r\n            return;\r\n        }\r\n        var json = dash.getAttribute('data-json');\r\n        if (json) {\r\n            dash.removeAttribute('data-json');\r\n            create(JSON.parse(json));\r\n        } else if (dash.hasAttribute('data-url')) {\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: dash.getAttribute('data-url')\r\n            }, function(data) {\r\n                create(data);\r\n            });\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Fetch widget settings from server and add/reload/delete widgets as needed.\r\n     */\r\n    $.on(document, 'dashboardReload', function() {\r\n        var dash = $.get('#dashboard');\r\n        if (!(dash && dash.hasAttribute('data-url'))) {\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: dash.getAttribute('data-url')\r\n        }, function(widgetOpts) {\r\n            if (widgetOpts) {\r\n                var widgets = getWidgets();\r\n\r\n                widgetOpts.forEach(function(x) {\r\n                    var widgetDate = new Date(x.widgetDateUpdated);\r\n                    var oldWidget = $.findByKey(widgets, 'id', x.id);\r\n                    if (!oldWidget) {\r\n                        // newly added widget\r\n                        new Widget($.extend(x, makeWidgetOpts()));\r\n                    } else {\r\n                        // existing widget - remove this widget from the list\r\n                        widgets.splice(oldWidget._i, 1);\r\n\r\n                        if (oldWidget.initDate < widgetDate) {\r\n                            // this widget needs to be reloaded\r\n                            oldWidget.reload(null, x);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                if (widgets.length) {\r\n                    // any widgets still left need to be deleted\r\n                    widgets.forEach(function(x) { x.destroy(true); });\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Get the widget objects for the dashboard.\r\n     * @returns {Widget[]} Array of widgets.\r\n     */\r\n    var getWidgets = function() {\r\n        return $.getAll('.grid-item').map(function(x) { return x.widget; });\r\n    };\r\n\r\n    /**\r\n     * Update widget tables on window resize.\r\n     */\r\n    var resizeLayout = function() {\r\n        var grid = makeWidgetOpts().grid;\r\n        getWidgets().forEach(function(x) {\r\n            if (x.opts.isData) {\r\n                x.table.updateLayout();\r\n            }\r\n            x.setupDraggie(null, grid);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Update widget position to avoid collisions after a resize or drag.\r\n     */\r\n    var updatePosition = function() {\r\n        var sorted = getWidgets();\r\n        sorted.sort(rectSort);\r\n\r\n        var l = sorted.length, aWidget, bWidget;\r\n        for (var i = 0; i < l; i++) {\r\n            aWidget = sorted[i];\r\n            aWidget.rect.updated = false;\r\n\r\n            for (var j = 0; j < l; j++) {\r\n                if (i === j) {\r\n                    continue;\r\n                }\r\n\r\n                bWidget = sorted[j];\r\n                if (bWidget.rect.overlaps(aWidget.rect)) {\r\n                    if (bWidget.rect.y > aWidget.rect.y) {\r\n                        // need to move down\r\n                        bWidget.setLocation(bWidget.rect.x, aWidget.rect.y + aWidget.rect.height);\r\n                    } else if (aWidget.rect.x + aWidget.rect.width + bWidget.rect.width > _columns) {\r\n                        // need to move down\r\n                        bWidget.setLocation(bWidget.rect.x, aWidget.rect.y + aWidget.rect.height);\r\n                    } else {\r\n                        // safe to move right\r\n                        bWidget.setLocation(aWidget.rect.x + aWidget.rect.width, bWidget.rect.y);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        saveDashboard();\r\n    };\r\n\r\n    /**\r\n     * Sort widgets from top left to bottom right.\r\n     * @param {Widget} a - First widget to compare.\r\n     * @param {Widget} b - Second widget to compare.\r\n     * @returns {number} Negative number if a comes first, positive number if b, zero if equal.\r\n     */\r\n    var rectSort = function(a, b) {\r\n        if (a.rect.y === b.rect.y && a.rect.x === b.rect.x) {\r\n            return a.rect.updated ? -1 : b.rect.updated ? 1 : 0;\r\n        }\r\n        if (a.rect.x === b.rect.x) {\r\n            return a.rect.y - b.rect.y;\r\n        }\r\n        return a.rect.x - b.rect.x;\r\n    };\r\n\r\n    /**\r\n     * Save dashboard settings back to server.\r\n     */\r\n    var saveDashboard = function() {\r\n        var positions = getWidgets().map(function(w) {\r\n            return {\r\n                Id: w.opts.id || 0,\r\n                Width: w.rect.width || 1,\r\n                Height: w.rect.height || 1,\r\n                X: w.rect.x || 0,\r\n                Y: w.rect.y || 0\r\n            };\r\n        });\r\n\r\n        if (_currentPositions && $.equals(_currentPositions, positions)) {\r\n            return;\r\n        }\r\n        _currentPositions = positions;\r\n\r\n        var dash = $.get('#dashboard');\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: dash.getAttribute('data-save-url'),\r\n            data: { Widgets: positions },\r\n            block: false\r\n        }, null);\r\n    };\r\n\r\n    /**\r\n     * Toggle full screen on escape key.\r\n     * @param {Event} evt - Key press event.\r\n     */\r\n    var checkKeyPress = function(evt) {\r\n        evt = evt || window.event;\r\n        if (evt.keyCode === 27) {\r\n            getWidgets().filter(function(x) { return x.isFullscreen; }).forEach(function(x) { x.toggleFullScreen(); });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set up content after page has loaded.\r\n     */\r\n    var pageLoaded = function() {\r\n        $.dialogs.processContent($.get('body'));\r\n\r\n        $.on('#toggleContextHelpBtn', 'click', function(e) {\r\n            e.preventDefault();\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: this.getAttribute('href')\r\n            }, function(data) {\r\n                $.toggleClass('#toggleContextHelpBtn', 'help-active', data.enabled);\r\n            });\r\n        });\r\n\r\n        $.on('#menuBtn', 'click', $.toggleClass.bind(null, 'body', 'toggled', null));\r\n\r\n        document.dispatchEvent($.events.dashboardLoad);\r\n    };\r\n\r\n    /**\r\n     * Run events needed for the inital page load.\r\n     */\r\n    if ($.resxLoaded) {\r\n        pageLoaded();\r\n    } else {\r\n        $.on(document, 'resxLoaded', pageLoaded);\r\n    }\r\n})(this.$, this.Widget);\r\n"]}