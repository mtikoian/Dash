{"version":3,"sources":["native.bootstrap.js","fecha.js","accounting.js","Help.js","Dialog.js","Autocomplete.js","DatePicker.js","Rect.js","Draggabilly.js","Chart.js","Prism.js","CollapsibleList.js","Validator.js","colors.js","ColorPicker.js","Table.js","DashChart.js","Form.js","JoinForm.js","ColumnForm.js","ShareForm.js","FilterForm.js","GroupForm.js","RangeForm.js","Dataset.js","BaseDetails.js","ReportDetails.js","ChartDetails.js","Widget.js","dialogs.js","datasets.js","reports.js","charts.js","dashboard.js"],"names":["root","factory","$","_keys","Dropdown","DOWN","ENTER","ESC","TAB","UP","SPACE","element","this","menu","get","target","parentNode","container","closest","items","getAll","selectedIndex","init","prototype","actions","setAttribute","on","handle","key","bind","close","self","forEach","x","index","e","click","stopPropagation","selectIndex","currentTarget","nodeName","toggle","test","href","preventDefault","hasClass","addClass","which","Math","min","length","max","removeClass","setTimeout","Tab","tab","tabs","dropdown","duration","action","window","next","nextContent","getAttribute","activeTab","getActiveTab","activeContent","getActiveContent","activeTabs","a","b","fecha","token","twoDigits","word","literal","noop","shorten","arr","sLen","newArr","i","len","push","substr","monthUpdate","arrName","d","v","i18n","indexOf","charAt","toUpperCase","toLowerCase","month","pad","val","String","dayNames","monthNames","monthNamesShort","dayNamesShort","amPm","DoFn","D","formatFlags","dateObj","getDate","DD","Do","getDay","dd","ddd","dddd","M","getMonth","MM","MMM","MMMM","YY","getFullYear","YYYY","h","getHours","hh","H","HH","m","getMinutes","mm","s","getSeconds","ss","S","round","getMilliseconds","SS","SSS","A","ZZ","o","getTimezoneOffset","floor","abs","l","onejan","Date","ceil","ll","q","parseFlags","day","RegExp","source","parseInt","cent","year","hour","minute","second","millisecond","isPm","minutes","parts","match","timezoneOffset","masks","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","format","mask","i18nSettings","isNaN","getTime","literals","replace","$0","$1","slice","shift","parse","dateStr","Error","isValid","dateInfo","isUtc","info","search","result","date","today","UTC","lib","version","settings","currency","symbol","decimal","thousand","precision","grouping","number","tokens","value","checkPrecision","parseFormat","isString","res","newFormat","exec","unformat","regex","unformatted","parseFloat","toFixed","power","pow","formatNumber","opts","extend","usePrecision","negative","base","mod","split","accounting","formatMoney","formats","isFunction","pos","neg","zero","checkCurrencyFormat","Help","Alertify","oninit","vnode","attrs","enabled","message","showHelp","alert","dialogs","focusOnClose","view","children","concat","type","role","onclick","isArray","Dialog","_buttons","ok","cancel","tryGetValue","field","fieldName","name","pop","substring","isNull","trySetValue","obj","hasOwnProperty","id","title","basic","buttons","content","onOkay","onCancel","onShow","parent","elements","changed","run","onkeydown","checkKey","tabindex","class","trust","oncreate","node","dom","firstElementChild","hasAttribute","redraw","document","createElement","body","appendChild","mount","processContent","checkEvent","getId","getContainer","getContent","getTarget","findForm","matches","call","focusNode","form","validateForm","formData","serializeForm","ajax","method","url","data","__RequestVerificationToken","responseData","parentDlg","findDialogById","parentTarget","destroy","closeParent","dialogUrl","sendAjaxRequest","confirm","resx","focus","keyCode","attrName","ev","events","dispatchEvent","bracketRegEx","disabled","Array","apply","options","filter","selected","map","checked","pieces","setTabStatus","el","formValidate","mErrors","error","tableNode","table","removeChild","removeDialog","refreshTable","Autocomplete","valueChanged","placeholder","active","required","onSelect","list","filteredList","onupdate","autocomplete","setList","onKeyDown","selectItem","onInput","onBlur","ul","scrollIntoView","item","input","highlightItem","text","trim","hasValue","aria-autocomplete","oninput","onblur","aria-selected","onmousedown","DatePicker","days","months","hours","prevNextTitles","weekStart","locale","formatOptions","defaultFormat","chooseDate","props","box","selectedDate","textContent","setFullYear","setDate","dismissAndCommit","relatedTarget","onchange","prevNext","delta","newDate","setMonth","pushToLastDay","lastDateInMonth","over","under","oldDate","stringsForLocale","_months","_days","toLocaleDateString","weekday","classForBox","Header","theseMonths","MonthView","prevDates","firstDay","array","lastDate","daysFromLastMonth","theseDates","daysFromThisMonth","nextDates","prev","these","n","daysFromNextMonth","theseWeekdays","_","idx","setHours","setMinutes","YearView","DecadeView","decade","start","yearsForDecade","Editor","requestAnimationFrame","classList","add","onbeforeremove","remove","Promise","done","localize","loc","isNumber","strings","now","prop","state","onbeforeupdate","chosen","showEditor","KeyboardEvent","readonly","Rect","width","height","y","coalesce","updated","overlaps","rect","thisRight","thisBottom","rectRight","rectBottom","getSize","getStyleSize","num","measurements","measurementsLength","isBoxSizeOuter","isSetup","elem","div","style","padding","borderStyle","borderWidth","boxSizing","documentElement","getComputedStyle","setup","isNode","display","size","innerWidth","innerHeight","outerWidth","outerHeight","getZeroSize","offsetWidth","offsetHeight","isBorderBox","measurement","paddingWidth","paddingLeft","paddingRight","paddingHeight","paddingTop","paddingBottom","marginWidth","marginLeft","marginRight","marginHeight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderHeight","borderTopWidth","borderBottomWidth","isBorderBoxSizeOuter","styleWidth","styleHeight","EvEmitter","eventName","listener","_events","listeners","off","splice","emitEvent","args","Unipointer","proto","Object","create","bindStartEvent","_bindStartEvent","unbindStartEvent","isBind","bindMethod","navigator","pointerEnabled","msPointerEnabled","handleEvent","event","getTouch","touches","findByKey","pointerIdentifier","button","_pointerDown","ontouchstart","changedTouches","onMSPointerDown","onpointerdown","pointer","isPointerDown","undefined","pointerId","identifier","pointerDown","_bindPostStartEvents","postStartEvents","mousedown","touchstart","pointerdown","MSPointerDown","addEventListener","_boundPointerEvents","_unbindPostStartEvents","removeEventListener","onmousemove","_pointerMove","onMSPointerMove","onpointermove","ontouchmove","touch","pointerMove","onmouseup","_pointerUp","onMSPointerUp","onpointerup","ontouchend","_pointerDone","pointerUp","pointerDone","onMSPointerCancel","onpointercancel","_pointerCancel","ontouchcancel","pointerCancel","getPointerPoint","pageX","pageY","Unidragger","bindHandles","_bindHandles","unbindHandles","binderExtra","handles","_dragPointerDown","focused","activeElement","blur","pointerDownPoint","canPreventDefaultOnPointerDown","moveVector","_dragPointerMove","_dragMove","movePoint","isDragging","hasDragStarted","_dragStart","_dragPointerUp","_dragEnd","_staticClick","dragStartPoint","isPreventingClicks","dragStart","dragMove","dragEnd","isIgnoringMouseUp","staticClick","Draggabilly","lastTime","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","currTime","timeToCall","transformProperty","transform","_create","positionValues","relative","absolute","fixed","applyGrid","grid","applyMinZero","drag","position","_getPosition","startPoint","dragPoint","startPosition","enable","setHandles","_getPositionCoord","left","top","_addTransformPosition","styleSide","measure","parentSize","matrixValues","xIndex","translateX","translateY","isEnabled","measureContainment","setLeftTop","animate","containment","elemSize","containerSize","elemRect","getBoundingClientRect","containerRect","borderSizeX","borderSizeY","relativeStartPosition","containSize","dragX","dragY","gridX","gridY","containDrag","axis","minZero","positionDrag","disable","removeAttribute","f","exports","module","define","amd","global","Chart","t","r","u","require","code","1","colorNames","getRgba","string","rgb","scale","getHsla","alpha","getHwb","rgbaString","rgba","percentaString","hslaString","hsla","hexDouble","str","toString","getRgb","getHsl","getAlpha","vals","hexString","rgbString","percentString","g","hslString","hwbString","hwb","keyword","reverseNames","5","2","convert","Color","valid","values","hsl","hsv","cmyk","setValues","red","lightness","w","whiteness","c","cyan","setSpace","arguments","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","color1","p","w1","w2","toJSON","clone","console","spaces","maxes","getValues","space","capped","chans","sname","svalues","4","3","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","k","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","hwb2rgb","wh","bl","cmyk2rgb","xyz2rgb","xyz2lab","lab2xyz","lab","y2","lab2lch","atan2","PI","sqrt","lab2rgb","lch2lab","lch","hr","cos","sin","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","conversions","Converter","func","arg","pair","from","to","convs","routeSpace","fspace","6","helpers","defaults","Element","Interaction","layouts","platform","plugins","Ticks","register","initialize","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","31","36","39","40","44","45","46","7","8","9","Bar","context","config","Doughnut","Line","_set","hover","mode","scales","xAxes","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","yAxes","rectangle","borderSkipped","tooltips","callbacks","yLabel","labels","label","datasets","datasetIndex","xLabel","controllers","bar","DatasetController","dataElementType","Rectangle","meta","getMeta","stack","getDataset","update","reset","ilen","rects","_ruler","getRuler","updateElement","me","chart","dataset","custom","rectangleOptions","_xScale","getScaleForId","xAxisID","_yScale","yAxisID","_datasetIndex","_index","_model","datasetLabel","backgroundColor","valueAtIndexOrDefault","borderColor","updateElementGeometry","pivot","model","vscale","getValueScale","getBasePixel","horizontal","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","last","stacked","stacks","getDatasetMeta","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","isNullOrUndef","barThickness","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","controller","thickness","count","percent","range","chunk","stackIndex","valueOrDefault","maxBarThickness","Infinity","draw","canvas","clipArea","ctx","chartArea","unclipArea","setHoverStyle","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","rectangleElementOptions","horizontalBar","animation","animateRotate","animateScale","legendCallback","join","legend","generateLabels","ds","arc","arcOpts","fillStyle","strokeStyle","lineWidth","hidden","onClick","legendItem","cutoutPercentage","rotation","circumference","tooltipItem","dataLabel","doughnut","pie","Arc","linkScales","getRingIndex","ringIndex","j","availableWidth","right","availableHeight","bottom","minSize","startAngle","endAngle","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","each","animationOpts","centerX","centerY","calculateCircumference","arcs","hoverWidth","_chart","showLines","spanGaps","lineEnabled","showLine","line","datasetElementType","Point","points","lineElementOptions","tension","lineTension","_scale","_children","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","fill","steppedLine","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","point","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","yScale","xScale","pointOptions","radius","pointRadius","hitRadius","pointHitRadius","NaN","calculatePointY","skip","pointStyle","dsMeta","sumPos","sumNeg","stackedRightValue","Number","rightValue","controlPoints","area","capControlPoint","pt","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","controlPointNextY","capBezierPoints","hoverRadius","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","easing","onProgress","onComplete","Animation","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","framesToDrop","advance","endTime","defineProperty","set","positionIsHorizontal","types","instances","construct","configMerge","acquireContext","uid","aspectRatio","_bufferedRender","notify","retinaScale","devicePixelRatio","bindEvents","responsive","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","clear","stop","silent","maintainAspectRatio","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","responsiveAnimationDuration","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","keys","reduce","dtype","dposition","isDefault","scaleType","scaleClass","scaleService","getScaleConstructor","mergeTicksOptions","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","ControllerClass","resetElements","tooltip","newOptions","removeBox","_options","_invalidate","_data","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","effects","stepDecimal","easingValue","transition","boxes","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","modes","single","getElementsAtEvent","intersect","getElementsAtXAxis","getElementsAtEventForMode","getDatasetAtEvent","_meta","generateLegend","unbindEvents","releaseContext","toBase64Image","toDataURL","Tooltip","_chartInstance","_listeners","eventHandler","updateHoverStyle","_start","bufferedRequest","animationDuration","hoverOptions","onHover","native","arrayEquals","Controller","arrayEvents","unlistenArrayEvents","stub","_chartjs","addElements","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","configurable","enumerable","object","resyncElements","elementOpts","numMeta","numData","insertElements","onDataPush","onDataPop","onDataShift","onDataSplice","onDataUnshift","inherits","scope","merge","color","configuration","_view","ease","actual","origin","c0","c1","isFinite","interpolate","tooltipPosition","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","constrainedNode","constrainedContainer","hasCNode","hasCContainer","infinity","POSITIVE_INFINITY","merger","tval","sval","scaleMerge","getScaleDefaults","_merger","slen","where","collection","filterCallback","filtered","findNextWhere","arrayToSearch","startIndex","currentItem","findPreviousWhere","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","log10","exponent","log","LOG10E","powerOf10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distance","distanceBetweenPoints","pt1","pt2","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","current","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","deltaX","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","loop","niceNum","fraction","oRequestAnimationFrame","msRequestAnimationFrame","getRelativePosition","evt","mouseX","mouseY","originalEvent","srcElement","boundingRect","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","clientWidth","cw","clientHeight","ch","property","currentStyle","getPropertyValue","forceRatio","pixelRatio","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","cache","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","defaultColor","colorValue","CanvasPattern","parseVisibleItems","handler","jlen","getIntersectItems","inRange","getNearestItems","distanceMetric","minDistance","nearestItems","getCenterPoint","getDistanceMetricForAxis","useX","useY","deltaY","indexMode","x-axis","nearest","sort","ret","getArea","intersectsItem","inXRange","inYRange","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","layout","filterByPosition","sortByWeight","reverse","_tmpIndex_","v0","v1","addBox","fullWidth","layoutItem","configure","layoutOptions","toPadding","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","_plugins","_cacheId","plugin","unregister","hook","descriptor","params","descriptors","$plugins","labelsFromTicks","getLineValue","lineValue","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","formatters","minor","major","computeTextSize","tick","parseFontOptions","globalDefaults","fontSize","family","parseLineHeight","toLineHeight","Scale","_ticks","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","rawValue","getLabelForIndex","getValueForPixel","pixel","finalVal","getPixelForDecimal","valueOffset","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","optionMajorTicks","isRotated","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","labelX","labelY","zeroLineIndex","textAlign","textBaseline","labelYOffset","xLineValue","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","save","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","constructors","registerScaleType","scaleConstructor","scaleDefaults","updateScaleDefaults","additions","linear","tickValue","logDelta","tickString","numDecimal","logarithmic","remain","toExponential","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","vm","alignment","paddingAndSize","radiusAndPadding","existingModel","_active","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","dataPoints","lf","rf","olf","orf","yf","midX","midY","determineAlignment","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","getTooltipSize","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","quadraticCurveTo","closePath","hasTooltipContent","average","eventPosition","nearestElement","tp","27","inLabelRange","chartX","chartY","pointRelativePosition","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","28","currentVM","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","29","xRange","drawPoint","30","isVertical","getBarBounds","halfWidth","halfHeight","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","bounds","32","clearRect","roundedRect","rx","ry","edgeLength","xOffset","yOffset","SQRT2","leftX","topY","sideSize","drawImage","clip","flip","bezierCurveTo","drawRoundedRectangle","33","isObject","defaultValue","fn","thisArg","loopable","a0","a1","klen","_mergerIf","mergeIf","sources","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","34","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","35","resolve","inputs","37","getContext","38","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchmove","touchend","pointerenter","pointermove","pointerup","pointerleave","pointerout","readUsedSize","eventListenerOptions","supports","passive","createEvent","nativeEvent","addResizeListener","ticking","expando","proxy","resizer","cls","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","createResizer","insertBefore","firstChild","renderProxy","animationName","reflow","offsetParent","removeResizeListener","_enabled","getElementById","renderHeight","renderWidth","initial","displayWidth","displayHeight","initCanvas","proxies","addEvent","removeEvent","implementation","filler","41","42","43","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","getBasePosition","resolveTarget","visited","visible","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","span","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","lineDash","Legend","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","halfFontSize","xLeft","yMiddle","isLineWidthZero","offSet","drawLegendBox","lh","hitBox","createNewLegendAndAttach","legendOpts","_element","beforeInit","afterEvent","Title","textSize","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","LinearScaleBase","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","tickFontSize","handleDirectionalChanges","innerDimension","ticksAsNumbers","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","stepSize","fixedStepSize","generationOptions","dataRange","spacing","niceRange","niceMin","niceMax","numSpaces","generateTicks","lang","prism","util","encode","Token","alias","languages","redef","inside","insert","grammar","newToken","DFS","highlightAll","async","querySelectorAll","highlightElement","language","env","hooks","Worker","worker","filename","onmessage","highlightedCode","postMessage","immediateClose","highlight","tokenize","strarr","rest","tokenloop","patterns","pattern","lookbehind","lookbehindLength","lastIndex","wrapped","all","tag","classes","attributes","aliases","Prism","sql","comment","variable","function","boolean","operator","punctuation","CollapsibleList","lis","createClickListener","pi","checkedRelative","relatives","forceOpen","open","uls","li","Validator","errorMsgs","_errors","targetElement","resetAll","validateInput","onSubmit","validate","minlength","VALIDATORS","checkValidity","setCustomValidity","isValidatableInput","defaultPrevented","errors","runValidators","showErrors","clearErrors","inputSelector","results","visibility","tagName","validator","attr","validationMessage","group","block","errorElement","errHtml","hasErrors","colors","hex2rgb","hex","ColorPicker","LEFT","RIGHT","selectColor","swatches","trigger","data-value","Table","columns","requestMethod","requestUsePascalCase","requestParams","searchable","loadAllData","inputTimeout","columnMinWidth","editable","pageDropdown","headerButtons","storageFunction","itemsPerPage","searchQuery","currentStartItem","sorting","dataCallback","errorCallback","dataDateFormat","displayDateFormat","displayCurrencyFormat","resources","firstPage","previousPage","nextPage","lastPage","noData","showing","page","perPage","loadingError","tryAgain","layoutSet","loading","filteredTotal","pageTotal","totalDistance","lastSeenAt","columnRenderer","colGroups","intColumns","dateColumns","currencyColumns","column","hasPositiveValue","store","columnFunction","links","getDisplayValue","dataType","link","icon","processData","rows","pageOptions","myKey","isUndefined","localStorage","filterResults","loadData","buildParams","refresh","dir","StartItem","Items","Query","Sort","toPascalKeys","startItem","query","setCurrentStartItem","setItemsPerPage","setSearchQuery","clearTimeout","requestTimer","runSearch","filterArray","moveToPage","changePage","changeSort","shiftKey","getSelection","removeAllRanges","_i","compare","defaultCompare","setLayout","tableLayout","tableHeaderRow","tHead","hWidth","tWidth","cells","debounce","move","onMouseMove","up","onMouseUp","touchHandler","header","cWidth","pixelToFloat","isVisible","colGroup","scroll","offsetLeft","onHeaderMouseDown","inResizeArea","cellEl","stopImmediatePropagation","resizeContext","colIndex","cellIndex","initX","scrWidth","initTblWidth","initColWidth","layoutTimer","newStyle","newColWidth","newTblWidth","tblX","clientLeft","previousElementSibling","mouseEvent","simulatedEvent","initMouseEvent","screenX","screenY","getFieldValue","aa","bb","tableHeaders","thAttrs","divAttrs","divContent","sortable","onscroll","tableBodyView","tableFooterView","tableCellView","tableRowView","colspan","currentPage","optionList","DashChart","showLegend","dataFn","errorFn","toggleExportFn","randomWithin","random","randomColor","randomColors","cnt","parseColor","show","hide","ranges","some","yTitle","xType","currencyFormat","dateFormat","chartType","isRadial","yType","chartData","Form","records","wantsHelp","appendRecord","deleteRecord","confirmDelete","confirmDeleteAll","areYouSure","moveUp","moveDown","help","addedCount","targetVal","setter","addRecord","newRecord","unshift","deleteFn","afterDeleteFn","deleteAllRecords","hasRecords","keyInput","withHelp","helpBody","innerContent","withError","requirePositive","isDate","withDisabled","isDisabled","withChecked","isChecked","withOptions","selectedValue","valueKey","textKey","buttonView","includeMove","btns","JoinForm","joinTypeId","tableName","columnUpdateFn","joins","joinTypes","sourceFn","setJoinTable","isProc","record","ColumnForm","columnTitleSort","aTitle","bTitle","columnName","dataTypeId","derived","filterTypeId","filterQuery","isParam","isExpanded","dataTypes","filterTypes","columnFn","selectedSourceFn","toggleExpanded","checkStatus","database","primarySource","importColumns","databaseId","newColumns","newRecords","existingColumns","colName","success","import","readOnly","for","ShareForm","formOpts","userId","roleId","shares","users","userList","roles","roleList","formName","userSelectAttr","share","roleSelectAttr","FilterForm","columnId","operatorId","criteria","criteria2","allowEdit","filters","reportId","saveFiltersUrl","filterOperators","filterOperatorIds","dateOperators","lookups","dataTable","boolOptions","setColumnId","setOperator","setCriteria","criteriaJson","saveFilters","Id","Filters","criteriaView","select","isRange","dateInterval","equal","multiple","lookup","numeric","isDatePicker","attrs2","criteriaArr","operatorView","filterView","filterColumns","GroupForm","displayOrder","groups","saveGroupsUrl","aggregator","aggregatorId","aggregators","saveGroups","GroupAggregator","Groups","setAggregator","groupView","RangeForm","xAxisColumnId","yAxisColumnId","dateIntervalId","chartId","saveRangesUrl","dateIntervals","reports","processJsonFn","canExportFn","saveRanges","Ranges","makeChart","chartContent","dashChart","exportChart","chartContainer","submit","setReport","rangeView","report","xColumns","yColumns","dateIntervalDisabled","inputsDisabled","col","Dataset","sourceList","columnList","formChanged","selectedSourceList","checkType","loadSourceList","loadColumnList","joinForm","getSourceList","columnForm","getColumnList","getSelectedSourceList","onChange","primary","updateColumnList","updateSelectedSources","equals","updateList","tables","typeId","BaseDetails","openDialog","outerHTML","initDate","processJson","json","updatedDate","updateDate","dataSql","setSql","dataError","countSql","countError","ReportDetails","reportColumns","saveUrl","saveColumnsUrl","saveStorageFunc","previousColumnWidths","Columns","ReportWidth","dataUrl","Save","exportUrl","rowLimit","sortColumns","filterForm","groupForm","ChartDetails","enableExport","rangeForm","canExport","toggleExport","chartLoad","Widget","buildClassList","widget","isData","refreshSeconds","baseUrl","interval","isFullscreen","dragMargin","setupDraggie","reportRowLimit","reportWidth","onError","setInterval","setText","firstRender","createNode","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","forceRefresh","toggleFullScreen","deleteWidget","toLocaleTimeString","moveDraggie","columnWidth","rowHeight","stopDrag","resizeDraggie","initResize","stopResize","setLocation","layoutCallback","styles","setSize","reload","showMsg","hasOpenDialog","updatedAt","innerText","clearInterval","updateStyle","totalDestruction","fullScreenIcon","headerHideBtns","_contentActions","selector","tableLoad","handleAjaxRequest","inputReplace","_dialogs","dlgs","getActiveDialog","dlg","dismissAll","prompt","checkPrompt","promptValue","encodeURIComponent","updateObj","targetSelector","dialog","html","activeDlg","elems","Event","act","activeDialog","dashboard","_datasets","_reports","_shares","startDrag","newPos","offsetTop","leftItems","columnSort","rightItems","updateColumn","dashboardReload","_charts","_currentPositions","widgets","makeWidgetOpts","checkKeyPress","resizeLayout","updatePosition","dash","widgetOpts","getWidgets","widgetDate","widgetDateUpdated","oldWidget","sorted","rectSort","aWidget","bWidget","saveDashboard","positions","Width","Height","X","Y","Widgets","pageLoaded","initEvent","dashboardLoad","resxLoaded"],"mappings":"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","file":"modules.js","sourcesContent":["/*!\r\n * Native Javascript for Bootstrap 3\r\n * by dnp_theme\r\n * https://github.com/thednp/bootstrap.native\r\n *\r\n * Modified to use Dash's core library, and remove unneeded functionality.\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Dropdown = factory(root.$);\r\n})(this, function($) {\r\n    var _keys = {\r\n        DOWN: 40,\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        TAB: 9,\r\n        UP: 38,\r\n        SPACE: 32\r\n    };\r\n\r\n    /**\r\n     * Declare Dropdown class.\r\n     * @param {Node} element - Node to trigger the dropdown.\r\n     */\r\n    var Dropdown = function(element) {\r\n        this.menu = $.get(element);\r\n        this.target = $.get('.dropdown-menu', element.parentNode);\r\n        this.container = $.closest('.dropdown', this.target);\r\n        this.items = $.getAll('.dropdown-item', this.target);\r\n        this.selectedIndex = -1;\r\n        this.init();\r\n    };\r\n\r\n    /**\r\n     * Declare Dropdown class methods.\r\n     */\r\n    Dropdown.prototype = {\r\n        /**\r\n         * Initialize the dropdown.\r\n         */\r\n        init: function() {\r\n            this.actions();\r\n            this.menu.setAttribute('tabindex', '0'); // Fix onblur on Chrome | Safari\r\n            $.on(this.container, 'click', this.handle, false);\r\n            $.on(this.container, 'keydown', this.key.bind(this), false);\r\n\r\n            // need this combination of blur and mousedown to imitate a click on the link, and still allow blur to close the dropdown\r\n            $.on(this.container, 'blur', this.close.bind(this), true);\r\n            var self = this;\r\n            this.items.forEach(function(x, index) {\r\n                $.on(x, 'mousedown', function(e) {\r\n                    x.click();\r\n                    e.stopPropagation();\r\n                });\r\n                $.on(x, 'mouseover', function() {\r\n                    self.selectIndex(index);\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Closure for class methods.\r\n         */\r\n        actions: function() {\r\n            var self = this;\r\n\r\n            /**\r\n             * Trigger the dropdown event.\r\n             * @param {Event} e - Event that requested the dropdown.\r\n             */\r\n            this.handle = function(e) {\r\n                var target = e.target || e.currentTarget;\r\n                if (target.nodeName === 'I' && (target.parentNode.nodeName === 'BUTTON' || target.parentNode.nodeName === 'A')) {\r\n                    target = target.parentNode;\r\n                }\r\n                if (target === self.menu || target === $.get('span', self.menu)) {\r\n                    self.toggle();\r\n                } else {\r\n                    self.close();\r\n                }\r\n                /#$/g.test(target.href) && e.preventDefault();\r\n            };\r\n\r\n            /**\r\n             * Show/hide the dropdown content.\r\n             */\r\n            this.toggle = function() {\r\n                if ($.hasClass(this.target, 'show')) {\r\n                    this.close();\r\n                } else {\r\n                    $.addClass(this.target, 'show');\r\n                    this.menu.setAttribute('aria-expanded', true);\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Close dropdown on escape key.\r\n             * @param {Event} e - Keydown event\r\n             */\r\n            this.key = function(e) {\r\n                if ($.hasClass(this.target, 'show')) {\r\n                    if (e.which === _keys.ESC) {\r\n                        self.toggle();\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    }\r\n                    if (e.which === _keys.ENTER || e.which === _keys.SPACE) {\r\n                        if (this.selectedIndex > -1) {\r\n                            this.items[this.selectedIndex].click();\r\n                        }\r\n                        self.toggle();\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    }\r\n                    if (e.which === _keys.DOWN) {\r\n                        this.selectIndex(Math.min(this.selectedIndex + 1, this.items.length - 1));\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    }\r\n                    if (e.which === _keys.UP) {\r\n                        this.selectIndex(Math.max(this.selectedIndex - 1, 0));\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    }\r\n                } else if (e.which === _keys.ENTER || e.which === _keys.SPACE) {\r\n                    self.toggle();\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Select an item from the list by index.\r\n             * @param {number} index - Filtered list item index.\r\n             */\r\n            this.selectIndex = function(index) {\r\n                this.selectedIndex = index;\r\n                this.items.forEach(function(x) {\r\n                    $.removeClass(x, 'active');\r\n                });\r\n                $.addClass(this.items[this.selectedIndex], 'active');\r\n            };\r\n\r\n            /**\r\n             * Close the dropdown.\r\n             */\r\n            this.close = function() {\r\n                this.selectedIndex = -1;\r\n                this.items.forEach(function(x) {\r\n                    $.removeClass(x, 'active');\r\n                });\r\n                setTimeout(function() {\r\n                    $.removeClass(self.target, 'show');\r\n                    self.menu.setAttribute('aria-expanded', false);\r\n                }, 0);\r\n            };\r\n        }\r\n    };\r\n\r\n    return Dropdown;\r\n});\r\n\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Tab = factory(root.$);\r\n})(this, function($) {\r\n    /**\r\n     * Declare Tab class.\r\n     * @param {Node} element - Node to trigger the tab.\r\n     */\r\n    var Tab = function(element) {\r\n        this.tab = $.get(element);\r\n        this.tabs = this.tab.parentNode.parentNode;\r\n        this.dropdown = $.get('.dropdown', this.tabs);\r\n        if ($.hasClass(this.tabs, 'dropdown-menu')) {\r\n            this.dropdown = this.tabs.parentNode;\r\n            this.tabs = this.tabs.parentNode.parentNode;\r\n        }\r\n        this.duration = 100;\r\n        this.init();\r\n    };\r\n\r\n    /**\r\n     * Declare Tab class methods.\r\n     */\r\n    Tab.prototype = {\r\n        init: function() {\r\n            this.actions();\r\n            $.on(this.tab, 'click', this.action, false);\r\n        },\r\n\r\n        /**\r\n         * Closure for class methods.\r\n         */\r\n        actions: function() {\r\n            var self = this;\r\n\r\n            /**\r\n             * Display content of a tab.\r\n             * @param {Event} e - Event that triggered the tab change.\r\n             */\r\n            this.action = function(e) {\r\n                e = e || window.e; e.preventDefault();\r\n                var next = e.target; //the tab we clicked is now the next tab\r\n                var nextContent = $.get(next.getAttribute('href')); //this is the actual object, the next tab content to activate\r\n\r\n                // get current active tab and content\r\n                var activeTab = self.getActiveTab();\r\n                var activeContent = self.getActiveContent();\r\n\r\n                if (!$.hasClass(next.parentNode, 'active')) {\r\n                    // toggle \"active\" class name\r\n                    $.removeClass($.getAll('a', activeTab)[0], 'active');\r\n                    $.addClass(next, 'active');\r\n\r\n                    // handle dropdown menu \"active\" class name\r\n                    if (self.dropdown) {\r\n                        if (!$.hasClass(self.tab.parentNode.parentNode, 'dropdown-menu')) {\r\n                            $.removeClass(self.dropdown, 'active');\r\n                        } else {\r\n                            $.addClass(self.dropdown, 'active');\r\n                        }\r\n                    }\r\n\r\n                    //1. hide current active content first\r\n                    $.removeClass(activeContent, 'show');\r\n\r\n                    setTimeout(function() {\r\n                        //2. toggle current active content from view\r\n                        $.removeClass(activeContent, 'active');\r\n                        $.addClass(nextContent, 'active');\r\n                    }, self.duration);\r\n                    setTimeout(function() {\r\n                        //3. show next active content\r\n                        $.addClass(nextContent, 'show');\r\n                    }, self.duration * 2);\r\n                }\r\n            },\r\n\r\n                /**\r\n                 * Gets the currently active tab.\r\n                 * @returns {Node} Active tab element.\r\n                 */\r\n                this.getActiveTab = function() {\r\n                    var activeTabs = $.getAll('.active', this.tabs);\r\n                    if (activeTabs.length === 1 && !$.hasClass(activeTabs[0], 'dropdown')) {\r\n                        return activeTabs[0].parentNode;\r\n                    } else if (activeTabs.length > 1) {\r\n                        return activeTabs[activeTabs.length - 1].parentNode;\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Get the currently active tab content.\r\n                 * @returns {Node} Active content element\r\n                 */\r\n                this.getActiveContent = function() {\r\n                    var a = this.getActiveTab();\r\n                    var b = a && $.getAll('a', a);\r\n                    return b.length && $.get(b[0].getAttribute('href'));\r\n                };\r\n        }\r\n    };\r\n\r\n    return Tab;\r\n});\r\n","/*!\r\n * Lightweight date library\r\n * https://github.com/taylorhakes/fecha\r\n *\r\n * Modified to add date manipulation methods similar to moment.js.\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Parse or format dates\r\n     * @class fecha\r\n     */\r\n    var fecha = {};\r\n    var token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\r\n    var twoDigits = /\\d\\d?/;\r\n    var threeDigits = /\\d{3}/;\r\n    var fourDigits = /\\d{4}/;\r\n    var word = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\r\n    var literal = /\\[([^]*?)\\]/gm;\r\n    var noop = function() { };\r\n\r\n    /**\r\n     * Abbreviate a string.\r\n     * @param {string[]} arr - Array of strings to shorten.\r\n     * @param {number} sLen - Max length of new strings.\r\n     * @returns {string[]} New array of strings.\r\n     */\r\n    function shorten(arr, sLen) {\r\n        var newArr = [];\r\n        for (var i = 0, len = arr.length; i < len; i++) {\r\n            newArr.push(arr[i].substr(0, sLen));\r\n        }\r\n        return newArr;\r\n    }\r\n\r\n    /**\r\n     * Update months names based on i18n resource.\r\n     * @param {string[]} arrName - Array of month names.\r\n     * @returns {string[]} Updated array of month names.\r\n     */\r\n    function monthUpdate(arrName) {\r\n        return function(d, v, i18n) {\r\n            var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());\r\n            if (~index) {\r\n                d.month = index;\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Left pad a number to length len using zeros.\r\n     * @param {number|string} val - Value to pad.\r\n     * @param {number} len - Length to pad number to.\r\n     * @returns {string} Zero padded string.\r\n     */\r\n    function pad(val, len) {\r\n        val = String(val);\r\n        len = len || 2;\r\n        while (val.length < len) {\r\n            val = '0' + val;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    var monthNamesShort = shorten(monthNames, 3);\r\n    var dayNamesShort = shorten(dayNames, 3);\r\n    fecha.i18n = {\r\n        dayNamesShort: dayNamesShort,\r\n        dayNames: dayNames,\r\n        monthNamesShort: monthNamesShort,\r\n        monthNames: monthNames,\r\n        amPm: ['am', 'pm'],\r\n        DoFn: function DoFn(D) {\r\n            return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];\r\n        }\r\n    };\r\n\r\n    var formatFlags = {\r\n        D: function(dateObj) {\r\n            return dateObj.getDate();\r\n        },\r\n        DD: function(dateObj) {\r\n            return pad(dateObj.getDate());\r\n        },\r\n        Do: function(dateObj, i18n) {\r\n            return i18n.DoFn(dateObj.getDate());\r\n        },\r\n        d: function(dateObj) {\r\n            return dateObj.getDay();\r\n        },\r\n        dd: function(dateObj) {\r\n            return pad(dateObj.getDay());\r\n        },\r\n        ddd: function(dateObj, i18n) {\r\n            return i18n.dayNamesShort[dateObj.getDay()];\r\n        },\r\n        dddd: function(dateObj, i18n) {\r\n            return i18n.dayNames[dateObj.getDay()];\r\n        },\r\n        M: function(dateObj) {\r\n            return dateObj.getMonth() + 1;\r\n        },\r\n        MM: function(dateObj) {\r\n            return pad(dateObj.getMonth() + 1);\r\n        },\r\n        MMM: function(dateObj, i18n) {\r\n            return i18n.monthNamesShort[dateObj.getMonth()];\r\n        },\r\n        MMMM: function(dateObj, i18n) {\r\n            return i18n.monthNames[dateObj.getMonth()];\r\n        },\r\n        YY: function(dateObj) {\r\n            return String(dateObj.getFullYear()).substr(2);\r\n        },\r\n        YYYY: function(dateObj) {\r\n            return dateObj.getFullYear();\r\n        },\r\n        h: function(dateObj) {\r\n            return dateObj.getHours() % 12 || 12;\r\n        },\r\n        hh: function(dateObj) {\r\n            return pad(dateObj.getHours() % 12 || 12);\r\n        },\r\n        H: function(dateObj) {\r\n            return dateObj.getHours();\r\n        },\r\n        HH: function(dateObj) {\r\n            return pad(dateObj.getHours());\r\n        },\r\n        m: function(dateObj) {\r\n            return dateObj.getMinutes();\r\n        },\r\n        mm: function(dateObj) {\r\n            return pad(dateObj.getMinutes());\r\n        },\r\n        s: function(dateObj) {\r\n            return dateObj.getSeconds();\r\n        },\r\n        ss: function(dateObj) {\r\n            return pad(dateObj.getSeconds());\r\n        },\r\n        S: function(dateObj) {\r\n            return Math.round(dateObj.getMilliseconds() / 100);\r\n        },\r\n        SS: function(dateObj) {\r\n            return pad(Math.round(dateObj.getMilliseconds() / 10), 2);\r\n        },\r\n        SSS: function(dateObj) {\r\n            return pad(dateObj.getMilliseconds(), 3);\r\n        },\r\n        a: function(dateObj, i18n) {\r\n            return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];\r\n        },\r\n        A: function(dateObj, i18n) {\r\n            return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();\r\n        },\r\n        ZZ: function(dateObj) {\r\n            var o = dateObj.getTimezoneOffset();\r\n            return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);\r\n        },\r\n        l: function(dateObj) {\r\n            var onejan = new Date(dateObj.getFullYear(), 0, 1);\r\n            return Math.ceil((((dateObj - onejan) / 86400000) + onejan.getDay() + 1) / 7);\r\n        },\r\n        ll: function(dateObj) {\r\n            var onejan = new Date(dateObj.getFullYear(), 0, 1);\r\n            return pad(Math.ceil((((dateObj - onejan) / 86400000) + onejan.getDay() + 1) / 7), 2);\r\n        },\r\n        q: function(dateObj) {\r\n            return (Math.ceil(dateObj.getMonth() + 1 / 3));\r\n        }\r\n    };\r\n\r\n    var parseFlags = {\r\n        D: [twoDigits, function(d, v) {\r\n            d.day = v;\r\n        }],\r\n        Do: [new RegExp(twoDigits.source + word.source), function(d, v) {\r\n            d.day = parseInt(v, 10);\r\n        }],\r\n        M: [twoDigits, function(d, v) {\r\n            d.month = v - 1;\r\n        }],\r\n        YY: [twoDigits, function(d, v) {\r\n            var da = new Date(), cent = +('' + da.getFullYear()).substr(0, 2);\r\n            d.year = '' + (v > 68 ? cent - 1 : cent) + v;\r\n        }],\r\n        h: [twoDigits, function(d, v) {\r\n            d.hour = v;\r\n        }],\r\n        m: [twoDigits, function(d, v) {\r\n            d.minute = v;\r\n        }],\r\n        s: [twoDigits, function(d, v) {\r\n            d.second = v;\r\n        }],\r\n        YYYY: [fourDigits, function(d, v) {\r\n            d.year = v;\r\n        }],\r\n        S: [/\\d/, function(d, v) {\r\n            d.millisecond = v * 100;\r\n        }],\r\n        SS: [/\\d{2}/, function(d, v) {\r\n            d.millisecond = v * 10;\r\n        }],\r\n        SSS: [threeDigits, function(d, v) {\r\n            d.millisecond = v;\r\n        }],\r\n        d: [twoDigits, noop],\r\n        ddd: [word, noop],\r\n        MMM: [word, monthUpdate('monthNamesShort')],\r\n        MMMM: [word, monthUpdate('monthNames')],\r\n        a: [word, function(d, v, i18n) {\r\n            var val = v.toLowerCase();\r\n            if (val === i18n.amPm[0]) {\r\n                d.isPm = false;\r\n            } else if (val === i18n.amPm[1]) {\r\n                d.isPm = true;\r\n            }\r\n        }],\r\n        ZZ: [/[+-]\\d\\d:?\\d\\d/, function(d, v) {\r\n            var parts = (v + '').match(/([+-]|\\d\\d)/gi), minutes;\r\n\r\n            if (parts) {\r\n                minutes = +(parts[1] * 60) + parseInt(parts[2], 10);\r\n                d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;\r\n            }\r\n        }]\r\n    };\r\n    parseFlags.dd = parseFlags.d;\r\n    parseFlags.dddd = parseFlags.ddd;\r\n    parseFlags.DD = parseFlags.D;\r\n    parseFlags.mm = parseFlags.m;\r\n    parseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;\r\n    parseFlags.MM = parseFlags.M;\r\n    parseFlags.ss = parseFlags.s;\r\n    parseFlags.A = parseFlags.a;\r\n\r\n    // Some common format strings\r\n    fecha.masks = {\r\n        'default': 'ddd MMM DD YYYY HH:mm:ss',\r\n        shortDate: 'M/D/YY',\r\n        mediumDate: 'MMM D, YYYY',\r\n        longDate: 'MMMM D, YYYY',\r\n        fullDate: 'dddd, MMMM D, YYYY',\r\n        shortTime: 'HH:mm',\r\n        mediumTime: 'HH:mm:ss',\r\n        longTime: 'HH:mm:ss.SSS'\r\n    };\r\n\r\n    /***\r\n     * Format a date.\r\n     * @method format\r\n     * @param {Date|number} dateObj - JS date to format.\r\n     * @param {string} mask - New format for the date, i.e. 'mm-dd-yy' or 'shortDate'.\r\n     * @param {Object} i18nSettings - i18n resources.\r\n     * @return {string} Formatted date string.\r\n     */\r\n    fecha.format = function(dateObj, mask, i18nSettings) {\r\n        var i18n = i18nSettings || fecha.i18n;\r\n\r\n        if (typeof dateObj === 'number') {\r\n            dateObj = new Date(dateObj);\r\n        }\r\n\r\n        if (!dateObj.getMonth || isNaN(dateObj.getTime())) {\r\n            return '';\r\n            // throw new Error('Invalid Date in fecha.format');\r\n        }\r\n\r\n        mask = fecha.masks[mask] || mask || fecha.masks['default'];\r\n\r\n        var literals = [];\r\n\r\n        // Make literals inactive by replacing them with ??\r\n        mask = mask.replace(literal, function($0, $1) {\r\n            literals.push($1);\r\n            return '??';\r\n        });\r\n        // Apply formatting rules\r\n        mask = mask.replace(token, function($0) {\r\n            return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);\r\n        });\r\n        // Inline literal values back into the formatted value\r\n        return mask.replace(/\\?\\?/g, function() {\r\n            return literals.shift();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Parse a date string into an object.\r\n     * @method parse\r\n     * @param {string} dateStr - Date string\r\n     * @param {string} format - Date parse format\r\n     * @param {Object} i18nSettings - i18n resources.\r\n     * @returns {Date|boolean} JS date object or false.\r\n     */\r\n    fecha.parse = function(dateStr, format, i18nSettings) {\r\n        var i18n = i18nSettings || fecha.i18n;\r\n\r\n        if (typeof format !== 'string') {\r\n            throw new Error('Invalid format in fecha.parse');\r\n        }\r\n\r\n        format = fecha.masks[format] || format;\r\n\r\n        // Avoid regular expression denial of service, fail early for really long strings\r\n        // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\r\n        if (!dateStr || dateStr.length > 1000) {\r\n            return false;\r\n        }\r\n\r\n        var isValid = true;\r\n        var dateInfo = {};\r\n        var isUtc = false;\r\n\r\n        // Special handler for UTC. String will end in a Z but with no offset specified (ie '-0400')\r\n        if (dateStr.indexOf('Z') === dateStr.length - 1 && dateStr.indexOf('ZZ') === -1) {\r\n            dateStr = dateStr.substr(0, dateStr.length - 2);\r\n            dateInfo.timezoneOffset = new Date().getTimezoneOffset();\r\n            isUtc = true;\r\n        }\r\n\r\n        format.replace(token, function($0) {\r\n            if (parseFlags[$0]) {\r\n                var info = parseFlags[$0];\r\n                var index = dateStr.search(info[0]);\r\n                if (!~index) {\r\n                    isValid = false;\r\n                } else {\r\n                    dateStr.replace(info[0], function(result) {\r\n                        info[1](dateInfo, result, i18n);\r\n                        dateStr = dateStr.substr(index + result.length);\r\n                        return result;\r\n                    });\r\n                }\r\n            }\r\n\r\n            return parseFlags[$0] ? '' : $0.slice(1, $0.length - 1);\r\n        });\r\n\r\n        if (!isValid) {\r\n            return false;\r\n        }\r\n\r\n        var today = new Date();\r\n        if (dateInfo.isPm === true && typeof dateInfo.hour !== 'undefined' && +dateInfo.hour !== 12) {\r\n            dateInfo.hour = +dateInfo.hour + 12;\r\n        } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {\r\n            dateInfo.hour = 0;\r\n        }\r\n\r\n        var date;\r\n        if (typeof dateInfo.timezoneOffset !== 'undefined') {\r\n            if (!isUtc) {\r\n                dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;\r\n            }\r\n            date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\r\n                dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));\r\n        } else {\r\n            date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\r\n                dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);\r\n        }\r\n        return date;\r\n    };\r\n\r\n    // Assume a traditional browser.\r\n    $.fecha = fecha;\r\n})(this.$);\r\n","/*!\r\n * accounting.js v0.4.2\r\n * Copyright 2014 Open Exchange Rates\r\n *\r\n * Freely distributable under the MIT license.\r\n * Portions of accounting.js are inspired or borrowed from underscore.js\r\n *\r\n * Full details and documentation:\r\n * http://openexchangerates.github.io/accounting.js/\r\n */\r\n\r\n(function($) {\r\n    /**\r\n     * Create the local library object, to be exported or referenced globally later\r\n     */\r\n    var lib = {\r\n        version: '0.4.2',\r\n        settings: {\r\n            currency: {\r\n                symbol: '$',\t\t// default currency symbol is '$'\r\n                format: '%s%v',\t    // controls output: %s = symbol, %v = value (can be object, see docs)\r\n                decimal: '.',\t\t// decimal point separator\r\n                thousand: ',',\t\t// thousands separator\r\n                precision: 2,\t\t// decimal places\r\n                grouping: 3\t\t    // digit grouping (not implemented yet)\r\n            },\r\n            number: {\r\n                precision: 0,\t\t// default precision on numbers is 0\r\n                grouping: 3,\t\t// digit grouping (not implemented yet)\r\n                thousand: ',',\r\n                decimal: '.'\r\n            }\r\n        }\r\n    };\r\n\r\n    var tokens = {\r\n        symbol: /\\{s:(.?)\\}/i,\r\n        decimal: /\\[d:(.?)\\]/i,\r\n        thousand: /\\[t:(.?)\\]/i,\r\n        precision: /\\[p:(.?)\\]/i,\r\n        value: /\\{#+\\}/i\r\n    };\r\n\r\n    /**\r\n     * Check and normalise the value of precision (must be positive integer).\r\n     * @param {number} val - Value of precision to validate\r\n     * @returns {number} Positive integer value.\r\n     */\r\n    var checkPrecision = function(val) {\r\n        val = Math.round(Math.abs(val));\r\n        return isNaN(val) ? lib.settings.number.precision : val;\r\n    };\r\n\r\n    /**\r\n     * Parses a format string or object and returns format obj for use in rendering.\r\n     * @param {string|Object} format - Default (positive) format, or object containing `pos` (required), `neg` and `zero` values (or a function returning either a string or object)\r\n     * @returns {Object} Format object with pos, neg, and zero properties.\r\n     */\r\n    var checkCurrencyFormat = function(format) {\r\n        // Allow function as format parameter (should return string or object):\r\n        if ($.isFunction(format)) {\r\n            format = format();\r\n        }\r\n\r\n        // Format can be a string, in which case `value` (\"%v\") must be present:\r\n        if ($.isString(format) && format.match('%v')) {\r\n            // Create and return positive, negative and zero formats:\r\n            return {\r\n                pos: format,\r\n                neg: format.replace('-', '').replace('%v', '-%v'),\r\n                zero: format\r\n            };\r\n        }\r\n        if (!format || !format.pos || !format.pos.match('%v')) {\r\n            // If no format, or object is missing valid positive value, use default.\r\n            // If default is a string, casts it to an object for faster checking next time.\r\n            var x = lib.settings.currency.format;\r\n            if ($.isString(x)) {\r\n                lib.settings.currency.format = x = { pos: x, neg: x.replace('%v', '-%v'), zero: x };\r\n            }\r\n            return x;\r\n        }\r\n        return format;\r\n    };\r\n\r\n    /**\r\n     * Takes a format string and parses it into an object.\r\n     * @param {string} format - Format string`\r\n     * @returns {Object} Object with format settings.\r\n     */\r\n    var parseFormat = function(format) {\r\n        if (!$.isString(format)) {\r\n            return format || {};\r\n        }\r\n\r\n        var res = {}, x;\r\n        var newFormat = format;\r\n        if ((x = tokens.symbol.exec(newFormat)) !== null && x.length > 1) {\r\n            res.symbol = x[1];\r\n            newFormat = newFormat.replace(x[0], '%s');\r\n        }\r\n        if ((x = tokens.decimal.exec(newFormat)) !== null && x.length > 1) {\r\n            res.decimal = x[1];\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.thousand.exec(newFormat)) !== null && x.length > 1) {\r\n            res.thousand = x[1];\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.precision.exec(newFormat)) !== null && x.length > 1) {\r\n            res.precision = x[1] * 1;\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.value.exec(newFormat)) !== null) {\r\n            res.format = newFormat.replace(x[0], '%v');\r\n        } else {\r\n            res.format = newFormat + ' %v';\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Takes a string/array of strings, removes all formatting/cruft and returns the raw float value.\r\n     * @param {string|number} value - Value to remove formatting from.\r\n     * @returns {number} Number with no formatting.\r\n     */\r\n    var unformat = function(value) {\r\n        // Fails silently (need decent errors):\r\n        value = value || 0;\r\n\r\n        // Return the value as-is if it's already a number:\r\n        if (typeof value === 'number') {\r\n            return value;\r\n        }\r\n\r\n        // Build regex to strip out everything except digits, decimal point and minus sign:\r\n        var regex = new RegExp('[^0-9-' + lib.settings.number.decimal + ']', ['g']),\r\n            unformatted = parseFloat(\r\n                ('' + value)\r\n                    .replace(/\\((.*)\\)/, '-$1') // replace bracketed values with negatives\r\n                    .replace(regex, '')         // strip out any cruft\r\n                    .replace(lib.settings.number.decimal, '.')      // make sure decimal point is standard\r\n            );\r\n\r\n        // This will fail silently which may cause trouble, let's wait and see:\r\n        return !isNaN(unformatted) ? unformatted : 0;\r\n    };\r\n\r\n    /**\r\n     * Implementation of toFixed() that treats floats more like decimals.\r\n     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === \"0.61\") that present problems for accounting- and finance-related software.\r\n     * @param {number|string} value - Number to convert\r\n     * @param {number} precision - Number of digits after the decimal.\r\n     * @returns {number} Formatted value.\r\n     */\r\n    var toFixed = function(value, precision) {\r\n        precision = checkPrecision(precision);\r\n        var power = Math.pow(10, precision);\r\n\r\n        // Multiply up by precision, round accurately, then divide and use native toFixed():\r\n        return (Math.round(unformat(value) * power) / power).toFixed(precision);\r\n    };\r\n\r\n    /**\r\n     * Format a number, with comma-separated thousands and custom precision/decimal places.\r\n     * @param {number} number - Number to format.\r\n     * @param {string} format - Tokenized string format.\r\n     * @returns {string} Formatted number.\r\n     */\r\n    var formatNumber = function(number, format) {\r\n        // Clean up number:\r\n        number = unformat(number);\r\n\r\n        // Build options object from second param (if object) or all params, extending defaults:\r\n        var opts = $.extend({}, lib.settings.number, parseFormat(format));\r\n\r\n        // Clean up precision\r\n        var usePrecision = checkPrecision(opts.precision);\r\n\r\n        // Do some calc:\r\n        var negative = number < 0 ? '-' : '';\r\n        var base = parseInt(toFixed(Math.abs(number || 0), usePrecision), 10) + '';\r\n        var mod = base.length > 3 ? base.length % 3 : 0;\r\n\r\n        // Format the number:\r\n        return negative + (mod ? base.substr(0, mod) + opts.thousand : '') + base.substr(mod).replace(/(\\d{3})(?=\\d)/g, '$1' + opts.thousand) +\r\n            (usePrecision ? opts.decimal + toFixed(Math.abs(number), usePrecision).split('.')[1] : '');\r\n    };\r\n\r\n    /**\r\n     * Format a number as currency, with comma-separated thousands and custom precision/decimal places.\r\n     * @param {number} number - Number to format.\r\n     * @param {string} format - Tokenized string format.\r\n     * @returns {string} Formatted currency.\r\n     */\r\n    var formatMoney = function(number, format) {\r\n        // Clean up number:\r\n        number = unformat(number);\r\n\r\n        // Build options object from second param (if object) or all params, extending defaults:\r\n        var opts = $.extend({}, lib.settings.currency, parseFormat(format));\r\n\r\n        // Check format (returns object with pos, neg and zero):\r\n        var formats = checkCurrencyFormat(opts.format);\r\n\r\n        // Choose which format to use for this value:\r\n        var useFormat = number > 0 ? formats.pos : number < 0 ? formats.neg : formats.zero;\r\n\r\n        // Return with currency symbol added:\r\n        return useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(number), format));\r\n    };\r\n\r\n    $.accounting = {\r\n        formatMoney: formatMoney,\r\n        formatNumber: formatNumber,\r\n        parseFormat: parseFormat,\r\n        unformat: unformat\r\n    };\r\n}(this.$));\r\n","/*!\r\n * Help mithril component. Shows input groups with help button.\r\n */\r\n(function(root, factory) {\r\n    root.Help = factory(root.m, root.$, root.Alertify);\r\n})(this, function(m, $, Alertify) {\r\n    'use strict';\r\n\r\n    var Help = {\r\n        /**\r\n         * Initialize the component.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            this.opts = {\r\n                enabled: attrs.enabled,\r\n                message: attrs.message\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Show help dialog.\r\n         * @param {Event} e - Event that triggered the dialog to open.\r\n         */\r\n        showHelp: function(e) {\r\n            Alertify.alert(this.opts.message, $.dialogs.focusOnClose.bind(e), $.dialogs.focusOnClose.bind(e));\r\n        },\r\n\r\n        /**\r\n         * Create HTML to display content with help add on.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         * @returns {Object} Mithril vnode\r\n         */\r\n        view: function(vnode) {\r\n            if (!this.opts.enabled) {\r\n                return $.isArray(vnode.children) ? m('.input-group', vnode.children) : vnode.children;\r\n            }\r\n            if (!(vnode.children && vnode.children.length)) {\r\n                return m('span', m('button.btn.btn-secondary.dash-context-help', {\r\n                    type: 'button', role: 'button', onclick: this.showHelp.bind(this)\r\n                }, m('i.dash.dash-help')));\r\n            }\r\n            return m('.input-group',\r\n                vnode.children.concat(m('span.input-group-append', m('button.btn.btn-secondary.dash-context-help', {\r\n                    type: 'button', role: 'button', onclick: this.showHelp.bind(this)\r\n                }, m('i.dash.dash-help'))))\r\n            );\r\n        }\r\n    };\r\n\r\n    return Help;\r\n});\r\n","/*!\r\n * Dialog mithril component.\r\n */\r\n(function(root, factory) {\r\n    root.Dialog = factory(root.m, root.$, root.Alertify);\r\n})(this, function(m, $, Alertify) {\r\n    'use strict';\r\n\r\n    var _buttons = {\r\n        'ok': 'Okay',\r\n        'cancel': 'Cancel',\r\n        'close': 'Close'\r\n    };\r\n\r\n    var _keys = {\r\n        ENTER: 13,\r\n        ESC: 27\r\n    };\r\n\r\n    /**\r\n     * Convert a value for a field to the correct data type.\r\n     * @param {Node} field - Input that we are converting value for.\r\n     * @param {string} val - Value to convert.\r\n     * @returns {string|number|bool} Returns correctly casted value.\r\n     */\r\n    var tryGetValue = function(field, val) {\r\n        var fieldName = field.name.split('.').pop();\r\n        if ((fieldName.substring(0, 2) === 'Is' || fieldName.substring(0, 5) === 'Allow') && (field.value.toLowerCase() === 'true' || field.value.toLowerCase() === 'false')) {\r\n            return field.value.toLowerCase() === 'true';\r\n        } else if (field.type.toLowerCase() === 'number' || field.name.slice(-2) === 'Id' || !($.isNull(val) || val.length == 0 || isNaN(val))) {\r\n            return val.length ? parseInt(val) : null;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    /**\r\n     * Try to set a value in an object.\r\n     * @param {Object} obj - Object to add value to.\r\n     * @param {Node} field - Input that we are converting value for.\r\n     * @param {string} name - Name of property.\r\n     * @param {string} val - Value to set.\r\n     * @returns {Object} Returns correctly updated object.\r\n     */\r\n    var trySetValue = function(obj, field, name, val) {\r\n        if (obj.hasOwnProperty(name) || $.hasClass(field, 'custom-control-input-multiple')) {\r\n            if (!$.isArray(obj[name])) {\r\n                obj[name] = $.isNull(obj[name]) ? [] : [obj[name]];\r\n            }\r\n            if (!$.isNull(val)) {\r\n                obj[name].push(val);\r\n            }\r\n        } else if (!$.isNull(val)) {\r\n            obj[name] = val;\r\n        }\r\n        return obj;\r\n    };\r\n\r\n    /**\r\n     * Declare Dialog class.\r\n     * @param {Object} opts - Dialog settings\r\n     */\r\n    function Dialog(opts) {\r\n        this.opts = $.extend({\r\n            id: null,\r\n            title: null,\r\n            basic: true,\r\n            buttons: _buttons,\r\n            content: null,\r\n            target: null,\r\n            onOkay: null,\r\n            onCancel: null,\r\n            onShow: null,\r\n            parent: null\r\n        }, opts || {});\r\n        this.elements = {\r\n            container: null,\r\n            content: null\r\n        };\r\n        this.changed = false;\r\n        this.run();\r\n    }\r\n\r\n    Dialog.prototype = {\r\n        /**\r\n         * Generates the components HTML.\r\n         * @returns {Object} Mithril virtual node\r\n         */\r\n        view: function() {\r\n            return m('.rd-dialog', { onkeydown: this.checkKey.bind(this), tabindex: 0 }, [\r\n                m('.rd-commands', [\r\n                    m('button.btn.btn-secondary.rd-close', { type: 'button', role: 'button', onclick: this.onCancel.bind(this) },\r\n                        m('i.dash.dash-cancel.text-error', { title: this.opts.buttons.close })\r\n                    )\r\n                ]),\r\n                m('.rd-header.dialog-header', this.opts.title),\r\n                m('.rd-content', { class: this.opts.basic ? 'rd-no-footer' : '' }, m.trust(this.opts.content)),\r\n                this.opts.basic ? null : m('.rd-footer', [\r\n                    m('.rd-buttons', [\r\n                        m('button.rd-button.btn.btn-primary', {\r\n                            type: 'button', role: 'button', onclick: this.onOkay.bind(this)\r\n                        }, this.opts.buttons.ok),\r\n                        m('button.rd-button.btn.btn-warning', {\r\n                            type: 'button', role: 'button', onclick: this.onCancel.bind(this)\r\n                        }, this.opts.buttons.cancel)\r\n                    ])\r\n                ])\r\n            ]);\r\n        },\r\n\r\n        /**\r\n         * Runs after the dialog is first created by mithril.\r\n         * @param {Object} vnode - Mithril virtual node.\r\n         */\r\n        oncreate: function(vnode) {\r\n            if (this.elements.content) {\r\n                return;\r\n            }\r\n            var node = $.get('.rd-content', vnode.dom);\r\n            if (!(node && node.firstElementChild)) {\r\n                return;\r\n            }\r\n            node = node.firstElementChild;\r\n            this.opts.title = node.getAttribute('data-title');\r\n            this.opts.basic = node.hasAttribute('data-basic-dialog');\r\n            m.redraw();\r\n\r\n            var self = this;\r\n            $.on(node, 'change', function() {\r\n                self.changed = true;\r\n            });\r\n            this.elements.content = node;\r\n            setTimeout(this.onShow.bind(this), 25);\r\n        },\r\n\r\n        /**\r\n         * Run the component and render the dialog.\r\n         */\r\n        run: function() {\r\n            this.elements.container = document.createElement('div');\r\n            this.elements.container.id = 'dialog' + this.opts.id;\r\n            $.addClass(this.elements.container, 'rd-dialog-container');\r\n            document.body.appendChild(this.elements.container);\r\n            m.mount(this.elements.container, {\r\n                view: this.view.bind(this),\r\n                oncreate: this.oncreate.bind(this),\r\n            });\r\n\r\n            $.dialogs.processContent(this.elements.content);\r\n            setTimeout(this.checkEvent.bind(this, this.elements.content, 'data-event'), 25);\r\n        },\r\n\r\n        /**\r\n         * Get the dialog id.\r\n         * @returns {number} ID of dialog.\r\n         */\r\n        getId: function() {\r\n            return this.opts.id;\r\n        },\r\n\r\n        /**\r\n         * Get the dialog container node.\r\n         * @returns {Node} DOM node of dialog container.\r\n         */\r\n        getContainer: function() {\r\n            return this.elements.container;\r\n        },\r\n\r\n        /**\r\n         * Get the dialog content node.\r\n         * @returns {Node} DOM node of dialog content.\r\n         */\r\n        getContent: function() {\r\n            return this.elements.content;\r\n        },\r\n\r\n        /**\r\n         * Get the dialog target node.\r\n         * @returns {Node} DOM node to target on close.\r\n         */\r\n        getTarget: function() {\r\n            return this.opts.target;\r\n        },\r\n\r\n        /**\r\n         * Find a form node inside the dialog.\r\n         * @returns {Node} Form node if exists else null.\r\n         */\r\n        findForm: function() {\r\n            return $.matches(this.elements.content, 'form.dash-form') ? this.elements.content : $.get('form.dash-form', this.elements.content);\r\n        },\r\n\r\n        /**\r\n         * Find element to focus on when dialog is displayed.\r\n         */\r\n        onShow: function() {\r\n            if ($.isFunction(this.opts.onShow)) {\r\n                if (!this.opts.onShow.call(this)) {\r\n                    return;\r\n                }\r\n            }\r\n            document.title = this.opts.title;\r\n            $.dialogs.focusNode(this.elements.content);\r\n        },\r\n\r\n        /**\r\n         * User okayed dialog. Save changes; close dialog.\r\n         */\r\n        onOkay: function() {\r\n            if ($.isFunction(this.opts.onOkay)) {\r\n                if (!this.opts.onOkay.call(this)) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            var form = this.findForm();\r\n            if (!form) {\r\n                this.destroy();\r\n                return;\r\n            }\r\n            if (!this.validateForm()) {\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            var formData = this.serializeForm();\r\n            $.ajax({\r\n                method: form.hasAttribute('data-method') ? form.getAttribute('data-method') : 'POST',\r\n                url: form.getAttribute('action'),\r\n                data: formData,\r\n                token: formData.__RequestVerificationToken\r\n            }, function(responseData) {\r\n                var target = self.opts.target;\r\n                var parentDlg = $.dialogs.findDialogById(self.opts.parent);\r\n                if (responseData.parentTarget && parentDlg) {\r\n                    target = parentDlg.getTarget();\r\n                }\r\n\r\n                self.destroy();\r\n                if (responseData.closeParent && parentDlg) {\r\n                    parentDlg.destroy();\r\n                }\r\n                if (responseData.dialogUrl) {\r\n                    $.dialogs.sendAjaxRequest(responseData.dialogUrl, 'GET', target);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * User canceled dialog. Check for changes; close dialog.\r\n         * @param {Event} e - Event that triggered the cancel.\r\n         */\r\n        onCancel: function(e) {\r\n            if ($.isFunction(this.opts.onCancel)) {\r\n                if (!this.opts.onCancel.call(this)) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (!this.changed || !this.findForm()) {\r\n                this.destroy();\r\n                return;\r\n            }\r\n\r\n            Alertify.confirm($.resx('discardChanges'), this.destroy.bind(this), function() {\r\n                if (e.target) {\r\n                    e.target.focus();\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Trigger okay or cancel action based on keydown.\r\n         * @param {KeyboardEvent} e - Keydown event that triggered this.\r\n         */\r\n        checkKey: function(e) {\r\n            if (e.keyCode === _keys.ESC) {\r\n                this.onCancel(e);\r\n            }\r\n            if (e.keyCode === _keys.ENTER && !this.opts.basic) {\r\n                this.onOkay(e);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Dispatch event named in attribute `attrName` if it exists.\r\n         * @param {Node} node - Node to look for an event attribute in.\r\n         * @param {string} attrName - Name of the attribute to check for the event in.\r\n         */\r\n        checkEvent: function(node, attrName) {\r\n            if (!node || !node.hasAttribute(attrName)) {\r\n                return;\r\n            }\r\n            var ev = node.getAttribute(attrName);\r\n            if ($.events.hasOwnProperty(ev)) {\r\n                document.dispatchEvent($.events[ev]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Convert form data into an object.\r\n         * @returns {Object} Form data.\r\n         */\r\n        serializeForm: function() {\r\n            var form = this.findForm();\r\n            if (!form) {\r\n                return {};\r\n            }\r\n\r\n            var field, data = {};\r\n            var len = form.elements.length;\r\n            var bracketRegEx = /\\[([^\\]]+)\\]/;\r\n            for (var i = 0; i < len; i++) {\r\n                field = form.elements[i];\r\n                if (!field.name || field.disabled || ['file', 'reset', 'submit', 'button'].indexOf(field.type) > -1) {\r\n                    continue;\r\n                }\r\n\r\n                var value = null;\r\n                if (field.type === 'select' && field.hasAttribute('multiple')) {\r\n                    value = Array.apply(null, form.elements[i].options).filter(function(x) {\r\n                        return x.selected;\r\n                    }).map(function(x) {\r\n                        return tryGetValue(field, x.value);\r\n                    });\r\n                } else if (field.type === 'checkbox') {\r\n                    if (field.checked) {\r\n                        value = tryGetValue(field, field.value);\r\n                    }\r\n                } else if (field.type !== 'radio' || field.checked) {\r\n                    value = tryGetValue(field, field.value);\r\n                }\r\n\r\n                var pieces = field.name.split('.');\r\n                var name = field.name;\r\n                if (pieces.length > 1) {\r\n                    var matches = bracketRegEx.exec(pieces[0]);\r\n                    name = matches.length > 1 ? pieces[0].replace(matches[0], '') : pieces[0];\r\n                    if (!data.hasOwnProperty(name)) {\r\n                        data[name] = [];\r\n                    }\r\n                    if (matches.length > 1) {\r\n                        if (!data[name].hasOwnProperty(matches[1])) {\r\n                            data[name][matches[1]] = {};\r\n                        }\r\n                        data[name][matches[1]] = trySetValue(data[name][matches[1]], field, pieces[1], value);\r\n                    } else {\r\n                        data[name][matches[0]] = trySetValue(data[name][matches[0]], field, pieces[1], value);\r\n                    }\r\n                } else {\r\n                    data = trySetValue(data, field, name, value);\r\n                }\r\n            }\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Set tab status when validating form.\r\n         * @param {Node} el - Node that has a validation error.\r\n         */\r\n        setTabStatus: function(el) {\r\n            var tab = $.closest('.tab-pane', el);\r\n            if (tab) {\r\n                // add error class to tab\r\n                var id = tab.getAttribute('aria-labelledby');\r\n                if (id) {\r\n                    if ($.hasClass(el, 'mform-control-error')) {\r\n                        $.addClass($.get('#' + id), 'tab-validation-error');\r\n                    } else {\r\n                        $.removeClass($.get('#' + id), 'tab-validation-error');\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Run the form validator and display an error if needed.\r\n         * @returns {bool} Return true if form is valid, else false.\r\n         */\r\n        validateForm: function() {\r\n            var form = this.findForm();\r\n            form.dispatchEvent($.events.formValidate);\r\n\r\n            var tabs = $.getAll('.nav-tabs.nav-item.nav-link', form);\r\n            tabs.forEach(function(x) {\r\n                $.removeClass(x, 'tab-validation-error');\r\n            });\r\n\r\n            var mErrors = $.getAll('.mform-control-error', form);\r\n            if (mErrors.length) {\r\n                mErrors.forEach(this.setTabStatus);\r\n            }\r\n\r\n            if (mErrors.length || $.getAll('.form-control-error', form).length) {\r\n                Alertify.error($.resx('fixIt'));\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Clean up our mess.\r\n         */\r\n        destroy: function() {\r\n            this.checkEvent(this.elements.content, 'data-close-event');\r\n\r\n            var tableNode = $.get('.dash-table', this.elements.content);\r\n            if (tableNode) {\r\n                tableNode.table.destroy();\r\n            }\r\n\r\n            m.mount(this.elements.container, null);\r\n            document.body.removeChild(this.elements.container);\r\n            $.dialogs.removeDialog(this.opts.id);\r\n            $.dialogs.refreshTable();\r\n        }\r\n    };\r\n\r\n    return Dialog;\r\n});\r\n","/*!\r\n * Autocomplete mithril component.\r\n */\r\n(function(root, factory) {\r\n    root.Autocomplete = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    var _keys = {\r\n        DOWN: 40,\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        TAB: 9,\r\n        UP: 38\r\n    };\r\n\r\n    /**\r\n     * Escape a string for use with a regex.\r\n     * @param {string} s - String to escape.\r\n     * @returns Escaped string.\r\n     */\r\n    var regExpEscape = function(s) {\r\n        return s.replace(/[-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n    };\r\n\r\n    var Autocomplete = {\r\n        /**\r\n         * Initialize the component.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            this.opts = {\r\n                value: attrs.value,\r\n                valueChanged: false,\r\n                name: attrs.name,\r\n                placeholder: attrs.placeholder,\r\n                active: false,\r\n                required: attrs.required,\r\n                disabled: attrs.disabled,\r\n                onSelect: attrs.onSelect,\r\n                onCancel: attrs.onCancel,\r\n                class: attrs.class,\r\n                list: attrs.list || [],\r\n                filteredList: [],\r\n                container: null,\r\n                selectedIndex: -1\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Update the opts in case the component name is changed.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         * @param vnode\r\n         */\r\n        onupdate: function(vnode) {\r\n            if (vnode.attrs) {\r\n                this.opts.name = vnode.attrs.name;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Grab the DOM containing node after it is created.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oncreate: function(vnode) {\r\n            this.opts.container = vnode.dom;\r\n            this.opts.container.autocomplete = this;\r\n        },\r\n\r\n        /**\r\n         * Update the list of items.\r\n         * @param {string[]} list - Array of strings to show.\r\n         */\r\n        setList: function(list) {\r\n            this.close();\r\n            this.opts.list = list;\r\n            this.opts.filteredList = [];\r\n        },\r\n\r\n        /**\r\n         * Check special keys and respond accordingly.\r\n         * @param {Event} e - Keypress event.\r\n         */\r\n        onKeyDown: function(e) {\r\n            if (this.opts.disabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.opts.active) {\r\n                if (e.keyCode === _keys.ENTER) {\r\n                    var selected = this.opts.filteredList[this.opts.selectedIndex];\r\n                    if (selected) {\r\n                        this.selectItem(selected);\r\n                    } else {\r\n                        this.cancel(true);\r\n                    }\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                } else if (e.keyCode === _keys.ESC) {\r\n                    this.cancel(true);\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                } else if (e.keyCode === _keys.DOWN) {\r\n                    this.selectIndex(Math.min(this.opts.selectedIndex + 1, this.opts.filteredList.length - 1));\r\n                } else if (e.keyCode === _keys.UP) {\r\n                    this.selectIndex(Math.max(this.opts.selectedIndex - 1, 0));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handle the input's value changing and show the list.\r\n         * @param {Event} e - Event that triggered the change.\r\n         */\r\n        onInput: function(e) {\r\n            if (this.opts.value !== e.target.value) {\r\n                this.opts.valueChanged = true;\r\n                this.opts.value = e.target.value;\r\n            }\r\n            if (this.opts.value.length > 1) {\r\n                this.opts.active = true;\r\n                this.opts.selectedIndex = 0;\r\n                var val = this.opts.value.toLowerCase();\r\n                this.opts.filteredList = ($.isFunction(this.opts.list) ? this.opts.list() : this.opts.list).filter(function(x) {\r\n                    return x.toLowerCase().indexOf(val) > -1;\r\n                });\r\n            } else {\r\n                this.opts.filteredList = [];\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Close autocomplete dropdown on lost focus.\r\n         */\r\n        onBlur: function() {\r\n            if (this.opts.active || this.opts.valueChanged) {\r\n                this.cancel(false);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select an item from the list by index.\r\n         * @param {number} index - Filtered list item index.\r\n         */\r\n        selectIndex: function(index) {\r\n            this.opts.selectedIndex = index;\r\n            var ul = $.get('ul', this.opts.container);\r\n            if (ul) {\r\n                ul.children[index].scrollIntoView();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select an item by text value.\r\n         * @param {string} item - Text to select.\r\n         * @param {Event} e - Event that triggered this.\r\n         */\r\n        selectItem: function(item, e, focus) {\r\n            if ($.isFunction(this.opts.onSelect)) {\r\n                this.opts.onSelect.call(null, item);\r\n            }\r\n            this.opts.value = item;\r\n            this.close($.isNull(focus) ? true : focus);\r\n            if (e && e.preventDefault) {\r\n                e.preventDefault();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Discard value and close the autocomplete.\r\n         * @param {bool} focus - Focus on the original control after closing if true.\r\n         */\r\n        cancel: function(focus) {\r\n            if (this.opts.valueChanged) {\r\n                this.opts.value = '';\r\n            }\r\n            if ($.isFunction(this.opts.onCancel)) {\r\n                this.opts.onCancel();\r\n            }\r\n            this.close(focus);\r\n        },\r\n\r\n        /**\r\n         * Set value and close the autocomplete.\r\n         * @param {bool} focus - Focus on the original control after closing if true.\r\n         */\r\n        close: function(focus) {\r\n            this.opts.active = false;\r\n            this.opts.selectedIndex = -1;\r\n            this.opts.valueChanged = false;\r\n            if (focus) {\r\n                var input = $.get('input', this.opts.container);\r\n                if (input) {\r\n                    input.focus();\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Highlight val inside item.\r\n         * @param {string} text - Text to highlight in.\r\n         * @param {string} val - Substring to highlight.\r\n         * @returns Marked up string.\r\n         */\r\n        highlightItem: function(text, val) {\r\n            return val === '' ? text : text.replace(RegExp(regExpEscape(val.trim()), 'gi'), '<mark>$&</mark>');\r\n        },\r\n\r\n        /**\r\n         * Create HTML to display component.\r\n         * @returns {Object} Mithril vnode\r\n         */\r\n        view: function() {\r\n            var self = this;\r\n            return m('.mithril-autocomplete-container.autocomplete', { class: self.opts.active ? 'autocomplete-active' : '' },\r\n                m('input.form-control', {\r\n                    type: 'text',\r\n                    name: self.opts.name,\r\n                    placeholder: self.opts.placeholder,\r\n                    class: (self.opts.class || '') + (self.opts.required && !$.hasValue(self.opts.value) ? ' mform-control-error' : ''),\r\n                    autocomplete: 'off',\r\n                    'aria-autocomplete': 'list',\r\n                    onkeydown: self.onKeyDown.bind(self),\r\n                    oninput: self.onInput.bind(self),\r\n                    value: self.opts.value,\r\n                    onblur: self.onBlur.bind(self)\r\n                }),\r\n                self.opts.active && m('ul', self.opts.filteredList.map(function(x, index) {\r\n                    return m('li', {\r\n                        'aria-selected': self.opts.selectedIndex == index,\r\n                        onmousedown: self.selectItem.bind(self, x)\r\n                    }, m.trust(self.highlightItem(x, self.opts.value)));\r\n                }))\r\n            );\r\n        }\r\n    };\r\n\r\n    return Autocomplete;\r\n});\r\n","/*!\r\n * DatePicker mithril component.\r\n * Modified from https://github.com/CreaturesInUnitards/mithril-datepicker\r\n */\r\n(function(root, factory) {\r\n    root.DatePicker = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    var _keys = {\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        SPACE: 32\r\n    };\r\n\r\n    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    var hours = [];\r\n    var minutes = [];\r\n    var i = 0;\r\n    while (hours.push(i++) < 24) { /* nothing to do here */ }\r\n    i = 0;\r\n    while (minutes.push(i++) < 60) { /* nothing to do here */ }\r\n    var prevNextTitles = ['1 Mo', '1 Yr', '10 Yr'];\r\n    var weekStart = 0;\r\n    var locale = 'en-us';\r\n    var formatOptions = null;\r\n    var defaultFormat = 'YYYY-MM-DD HH:mm';\r\n\r\n    /**\r\n     * Actions\r\n     */\r\n    function chooseDate(props, e) {\r\n        var box = e.target;\r\n        var selectedDate = parseInt(box.textContent);\r\n        var dateObj = props.date;\r\n        if ($.hasClass(box, 'other-scope')) {\r\n            dateObj.setFullYear(dateObj.getFullYear(), dateObj.getMonth() + (selectedDate > 6 ? -1 : 1), selectedDate);\r\n        } else {\r\n            dateObj.setDate(selectedDate);\r\n        }\r\n    }\r\n\r\n    function dismissAndCommit(props, e) {\r\n        if (e) {\r\n            if (e.target && $.hasClass('number', e.target)) {\r\n                e.preventDefault();\r\n                chooseDate(props, e);\r\n            } else {\r\n                var parent = e.relatedTarget && $.closest('.mithril-date-picker-container', e.relatedTarget);\r\n                if (!parent) {\r\n                    e.preventDefault();\r\n                    props.view = 0;\r\n                    props.active = false;\r\n                }\r\n            }\r\n        }\r\n        // @todo this probably needs more testing to make sure it triggers correctly\r\n        if (props.onchange) {\r\n            props.onchange(props.date);\r\n        }\r\n    }\r\n\r\n    function checkKey(props, e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (e.keyCode === _keys.ESC) {\r\n            dismissAndCommit(props, e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function prevNext(props, delta) {\r\n        var newDate = new Date(props.date);\r\n        switch (props.view) {\r\n            case 0:\r\n                newDate.setMonth(newDate.getMonth() + delta);\r\n                break;\r\n            case 1:\r\n                newDate.setFullYear(newDate.getFullYear() + delta);\r\n                break;\r\n            default:\r\n                newDate.setFullYear(newDate.getFullYear() + (delta * 10));\r\n        }\r\n        props.date = pushToLastDay(props.date, newDate);\r\n    }\r\n\r\n    /**\r\n     * Utility\r\n     */\r\n    function adjustedProps(date, delta) {\r\n        var month = date.getMonth() + delta, year = date.getFullYear();\r\n        var over = month > 11, under = month < 0;\r\n        return {\r\n            month: over ? 0 : under ? 11 : month,\r\n            year: over ? year + 1 : under ? year - 1 : year\r\n        };\r\n    }\r\n\r\n    function lastDateInMonth(date, delta) {\r\n        var obj = adjustedProps(date, delta);\r\n        if ([0, 2, 4, 6, 7, 9, 11].indexOf(obj.month) > -1) {\r\n            return 31; // array of 31-day props.months\r\n        }\r\n        if (obj.month === 1) { // February\r\n            if (!(obj.year % 400)) {\r\n                return 29;\r\n            }\r\n            if (!(obj.year % 100)) {\r\n                return 28;\r\n            }\r\n            return (obj.year % 4) ? 28 : 29;\r\n        }\r\n        return 30;\r\n    }\r\n\r\n    function pushToLastDay(oldDate, newDate) {\r\n        if (oldDate.getDate() !== newDate.getDate()) {\r\n            newDate.setMonth(newDate.getMonth() - 1, lastDateInMonth(newDate, -1));\r\n        }\r\n        return newDate;\r\n    }\r\n\r\n    function stringsForLocale(locale) {\r\n        var date = new Date('jan 1 2017'), _months = [], _days = []; // 1/1/2017 was month:0 and weekday:0, so perfect\r\n        while (_days.length < 7) {\r\n            _days.push(date.toLocaleDateString(locale, { weekday: 'long' }));\r\n            date.setDate(date.getDate() + 1);\r\n        }\r\n        while (_months.length < 12) {\r\n            _months.push(date.toLocaleDateString(locale, { month: 'long' }));\r\n            date.setMonth(date.getMonth() + 1);\r\n        }\r\n        return { days: _days, months: _months };\r\n    }\r\n\r\n    function wrapAround(idx, array) {\r\n        var len = array.length;\r\n        var n = idx >= len ? idx - len : idx;\r\n        return array[n];\r\n    }\r\n\r\n    /**\r\n     * Generators\r\n     */\r\n    function daysFromLastMonth(props) {\r\n        var month = props.date.getMonth(), year = props.date.getFullYear();\r\n        var firstDay = (new Date(year, month, 1)).getDay() - props.weekStart;\r\n        if (firstDay < 0) firstDay += 7;\r\n        var array = [];\r\n        var lastDate = lastDateInMonth(props.date, -1);\r\n        var offsetStart = lastDate - firstDay + 1;\r\n        for (var i = offsetStart; i <= lastDate; i++) {\r\n            array.push(i);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function daysFromThisMonth(props) {\r\n        var max = lastDateInMonth(props.date, 0);\r\n        var array = [];\r\n        for (var i = 1; i <= max; i++) {\r\n            array.push(i);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function daysFromNextMonth(prev, these) {\r\n        var soFar = prev.concat(these);\r\n        var mod = soFar.length % 7;\r\n        var array = [];\r\n        if (mod > 0) {\r\n            var n = 7 - mod;\r\n            for (var i = 1; i <= n; i++) {\r\n                array.push(i);\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function defaultDate() {\r\n        var now = new Date();\r\n        now.setHours(0, 0, 0, 0);\r\n        return now;\r\n    }\r\n\r\n    function yearsForDecade(date) {\r\n        var year = date.getFullYear();\r\n        var start = year - (year % 10);\r\n        var array = [];\r\n        for (var i = start; i < start + 10; i++) {\r\n            array.push(i);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * View helpers\r\n     */\r\n    function classForBox(a, b) {\r\n        return a === b ? 'chosen' : '';\r\n    }\r\n\r\n    /**\r\n     * Components\r\n     */\r\n    var Header = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var date = props.date;\r\n            var theseMonths = props.months || months;\r\n            return m('.header',\r\n                m('button.header-button.prev', { onclick: prevNext.bind(null, props, -1) }, [\r\n                    m('i.dash.dash-to-start'),\r\n                    prevNextTitles[props.view]\r\n                ]),\r\n                m('button.header-button.segment', { onclick: function() { props.view = 0; } }, date.getDate()),\r\n                m('button.header-button.segment', { onclick: function() { props.view = 1; } }, theseMonths[date.getMonth()].substr(0, 3)),\r\n                m('button.header-button.segment', { onclick: function() { props.view = 2; } }, date.getFullYear()),\r\n                m('button.header-button.next', { onclick: prevNext.bind(null, props, 1) }, [\r\n                    prevNextTitles[props.view],\r\n                    m('i.dash.dash-to-end')\r\n                ]),\r\n                m('button.btn.btn-secondary.btn-sm', { onclick: dismissAndCommit.bind(null, props) }, m('i.dash.dash-cancel'))\r\n            );\r\n        }\r\n    };\r\n\r\n    var MonthView = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var prevDates = daysFromLastMonth(props);\r\n            var theseDates = daysFromThisMonth(props);\r\n            var nextDates = daysFromNextMonth(prevDates, theseDates);\r\n            var theseWeekdays = props.days || days;\r\n            return m('.calendar',\r\n                m('.weekdays', theseWeekdays.map(function(_, idx) {\r\n                    var day = wrapAround(idx + props.weekStart, theseWeekdays);\r\n                    return m('.day.dummy', day.substring(0, 2));\r\n                })),\r\n                m('.weekdays', {\r\n                    onclick: function(e) {\r\n                        chooseDate(props, e);\r\n                    }\r\n                }, prevDates.map(function(date) {\r\n                    return m('button.day.other-scope', date);\r\n                }), theseDates.map(function(date) {\r\n                    return m('button.day', { class: classForBox(props.date.getDate(), date) }, m('.number', date));\r\n                }), nextDates.map(function(date) {\r\n                    return m('button.day.other-scope', date);\r\n                })),\r\n                m('.time',\r\n                    m('select.form-control.custom-select', {\r\n                        value: props.date.getHours(), onchange: function(e) {\r\n                            props.date.setHours(e.target.value);\r\n                            props.date.setHours(e.target.value);\r\n                            if (props.onchange) {\r\n                                props.onchange(props.date);\r\n                            }\r\n                        }\r\n                    }, hours.map(function(x) {\r\n                        return m('option', { value: x }, ('00' + x).slice(-2));\r\n                    })),\r\n                    m('select.form-control.custom-select', {\r\n                        value: props.date.getMinutes(), onchange: function(e) {\r\n                            props.date.setMinutes(e.target.value);\r\n                            props.date.setMinutes(e.target.value);\r\n                            if (props.onchange) {\r\n                                props.onchange(props.date);\r\n                            }\r\n                        }\r\n                    }, minutes.map(function(x) {\r\n                        return m('option', { value: x }, ('00' + x).slice(-2));\r\n                    }))\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var YearView = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var theseMonths = props.months || months;\r\n            return m('.calendar',\r\n                m('.months',\r\n                    theseMonths.map(function(month, idx) {\r\n                        return m('button.month', {\r\n                            class: classForBox(props.date.getMonth(), idx), onclick: function() {\r\n                                var newDate = new Date(props.date);\r\n                                newDate.setMonth(idx);\r\n                                props.date = pushToLastDay(props.date, newDate);\r\n                                props.view = 0;\r\n                            }\r\n                        }, m('.number', month.substring(0, 3)));\r\n                    })\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var DecadeView = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var decade = yearsForDecade(props.date);\r\n            return m('.calendar',\r\n                m('.years',\r\n                    decade.map(function(year) {\r\n                        return m('button.year', {\r\n                            class: classForBox(props.date.getFullYear(), year), onclick: function() {\r\n                                var newDate = new Date(props.date);\r\n                                newDate.setFullYear(year);\r\n                                props.date = pushToLastDay(props.date, newDate);\r\n                                props.view = 1;\r\n                            }\r\n                        }, m('.number', year));\r\n                    })\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var Editor = {\r\n        oncreate: function(vnode) {\r\n            requestAnimationFrame(function() {\r\n                vnode.dom.classList.add('active');\r\n            });\r\n        },\r\n        onbeforeremove: function(vnode) {\r\n            vnode.dom.classList.remove('active');\r\n            return new Promise(function(done) {\r\n                setTimeout(done, 200);\r\n            });\r\n        },\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            return m('.editor', { onkeydown: checkKey.bind(null, props) },\r\n                m(Header, { props: props }),\r\n                m('.sled', { class: 'p' + props.view },\r\n                    m(MonthView, { props: props }),\r\n                    m(YearView, { props: props }),\r\n                    m(DecadeView, { props: props })\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var DatePicker = {\r\n        localize: function(loc) {\r\n            if (loc) {\r\n                prevNextTitles = loc.prevNextTitles || prevNextTitles;\r\n                locale = loc.locale || locale;\r\n                formatOptions = loc.formatOptions || formatOptions;\r\n                weekStart = $.isNumber(loc.weekStart) ? loc.weekStart : weekStart;\r\n                var strings = stringsForLocale(locale);\r\n                days = strings.days;\r\n                months = strings.months;\r\n            }\r\n        },\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            var date = new Date(attrs.date || defaultDate());\r\n            if (!attrs.date) {\r\n                attrs.onchange(date);\r\n            }\r\n            var props = {\r\n                date: date,\r\n                format: attrs.format || defaultFormat,\r\n                name: attrs.name,\r\n                active: false,\r\n                view: 0,\r\n                required: attrs.required,\r\n                disabled: attrs.disabled,\r\n                onchange: attrs.onchange,\r\n                class: attrs.class\r\n            };\r\n\r\n            ['prevNextTitles', 'locale', 'formatOptions'].forEach(function(prop) {\r\n                props[prop] = attrs[prop] || prop;\r\n            });\r\n            props.weekStart = $.isNumber(attrs.weekStart) ? attrs.weekStart : weekStart;\r\n\r\n            if (attrs.locale && attrs.locale !== locale) {\r\n                var strings = stringsForLocale(props.locale);\r\n                props.days = strings.days;\r\n                props.months = strings.months;\r\n            }\r\n\r\n            vnode.state.props = props;\r\n        },\r\n        onbeforeupdate: function(vnode) {\r\n            vnode.state.props.class = vnode.attrs.class;\r\n        },\r\n        onupdate: function(vnode) {\r\n            var chosen = $.get('.chosen', vnode.dom);\r\n            if (chosen) {\r\n                chosen.focus();\r\n            }\r\n        },\r\n        showEditor: function(props, e) {\r\n            if (e && e instanceof KeyboardEvent) {\r\n                if (e.keyCode !== _keys.SPACE && e.keyCode !== _keys.ENTER) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (props.disabled) {\r\n                return;\r\n            }\r\n            if (props.active) {\r\n                props.view = 0;\r\n            }\r\n            props.active = !props.active;\r\n        },\r\n        view: function(vnode) {\r\n            var props = vnode.state.props;\r\n            return m('.mithril-date-picker-container', { class: ((props.active ? 'active' : '') + ' ' + props.class).trim() },\r\n                m('input.current-date.form-control', {\r\n                    name: props.name,\r\n                    class: props.required ? 'required' : null,\r\n                    format: props.format,\r\n                    readonly: true,\r\n                    onclick: this.showEditor.bind(null, props),\r\n                    onkeydown: this.showEditor.bind(null, props),\r\n                    value: $.fecha.format(props.date, props.format || defaultFormat)\r\n                }),\r\n                m('i.dash.current-date-indicator', { class: props.active ? 'dash-sort-up' : 'dash-sort-down' }),\r\n                props.active && m(Editor, { props: props })\r\n            );\r\n        }\r\n    };\r\n\r\n    return DatePicker;\r\n});\r\n","/*!\r\n * Library for storing widget positions and detecting collisions.\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Rect = factory(root.$);\r\n})(this, function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Constructor for a rect.\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     */\r\n    function Rect(width, height, x, y) {\r\n        this.x = $.coalesce(x, 0);\r\n        this.y = $.coalesce(y, 0);\r\n        this.width = $.coalesce(width, 0);\r\n        this.height = $.coalesce(height, 0);\r\n        this.updated = false;\r\n    }\r\n\r\n    Rect.prototype = {\r\n        /**\r\n         * Check if rect intersects with this rect.\r\n         * @param {Rect} rect - Rect to check for intersection with.\r\n         * @returns {bool} True if the rectangles collide, else false.\r\n         */\r\n        overlaps: function(rect) {\r\n            var thisRight = this.x + this.width;\r\n            var thisBottom = this.y + this.height;\r\n            var rectRight = rect.x + rect.width;\r\n            var rectBottom = rect.y + rect.height;\r\n\r\n            // http://stackoverflow.com/a/306332\r\n            return this.x < rectRight && thisRight > rect.x && this.y < rectBottom && thisBottom > rect.y;\r\n        }\r\n    };\r\n\r\n    return Rect;\r\n});\r\n","/*!\r\n * Draggabilly PACKAGED v2.1.1\r\n * Make that shiz draggable\r\n * http://draggabilly.desandro.com\r\n * MIT license\r\n *\r\n * Modified to remove jQuery completely.\r\n */\r\n\r\n/*!\r\n * getSize v2.0.2\r\n * measure size of elements\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.getSize = factory(root.$);\r\n})(this, function factory($) {\r\n    /**\r\n     * Get a number from a string, not a percentage.\r\n     * @param {string} value - String to parse.\r\n     * @returns {Number} Returns the number.\r\n     */\r\n    function getStyleSize(value) {\r\n        var num = parseFloat(value);\r\n        // not a percent like '100%', and a number\r\n        return value.indexOf('%') === -1 && !isNaN(num) && num;\r\n    }\r\n\r\n    var measurements = [\r\n        'paddingLeft',\r\n        'paddingRight',\r\n        'paddingTop',\r\n        'paddingBottom',\r\n        'marginLeft',\r\n        'marginRight',\r\n        'marginTop',\r\n        'marginBottom',\r\n        'borderLeftWidth',\r\n        'borderRightWidth',\r\n        'borderTopWidth',\r\n        'borderBottomWidth'\r\n    ];\r\n\r\n    var measurementsLength = measurements.length;\r\n\r\n    /**\r\n     * Build the size measurements for a hidden element.\r\n     * @returns {Object} Measurements for the element.\r\n     */\r\n    function getZeroSize() {\r\n        var size = {\r\n            width: 0,\r\n            height: 0,\r\n            innerWidth: 0,\r\n            innerHeight: 0,\r\n            outerWidth: 0,\r\n            outerHeight: 0\r\n        };\r\n        for (var i = 0; i < measurementsLength; i++) {\r\n            size[measurements[i]] = 0;\r\n        }\r\n        return size;\r\n    }\r\n\r\n    var isSetup = false;\r\n    var isBoxSizeOuter;\r\n\r\n    /**\r\n     * Setup the instance.\r\n     */\r\n    function setup() {\r\n        // setup once\r\n        if (isSetup) {\r\n            return;\r\n        }\r\n        isSetup = true;\r\n\r\n        /**\r\n         * WebKit measures the outer-width on style.width on border-box elems\r\n         * IE & Firefox<29 measures the inner-width\r\n         */\r\n        var div = document.createElement('div');\r\n        $.style(div, { width: '200px', padding: '1px 2px 3px 4px', borderStyle: 'solid', borderWidth: '1px 2px 3px 4px', boxSizing: 'border-box' });\r\n\r\n        var body = document.body || document.documentElement;\r\n        body.appendChild(div);\r\n        var style = getComputedStyle(div);\r\n\r\n        getSize.isBoxSizeOuter = isBoxSizeOuter = getStyleSize(style.width) === 200;\r\n        body.removeChild(div);\r\n    }\r\n\r\n    /**\r\n     * Get the dimensions of a node.\r\n     * @param {Node|string} elem - Node object or query selector.\r\n     * @returns {Object} Dimensions for node.\r\n     */\r\n    function getSize(elem) {\r\n        setup();\r\n\r\n        elem = $.get(elem);\r\n        if (!$.isNode(elem)) {\r\n            return;\r\n        }\r\n\r\n        var style = getComputedStyle(elem);\r\n\r\n        // if hidden, everything is 0\r\n        if (style.display === 'none') {\r\n            return getZeroSize();\r\n        }\r\n\r\n        var size = { width: elem.offsetWidth, height: elem.offsetHeight };\r\n        var isBorderBox = size.isBorderBox = style.boxSizing === 'border-box';\r\n\r\n        // get all measurements\r\n        for (var i = 0; i < measurementsLength; i++) {\r\n            var measurement = measurements[i];\r\n            var value = style[measurement];\r\n            var num = parseFloat(value);\r\n            // any 'auto', 'medium' value will be 0\r\n            size[measurement] = !isNaN(num) ? num : 0;\r\n        }\r\n\r\n        var paddingWidth = size.paddingLeft + size.paddingRight;\r\n        var paddingHeight = size.paddingTop + size.paddingBottom;\r\n        var marginWidth = size.marginLeft + size.marginRight;\r\n        var marginHeight = size.marginTop + size.marginBottom;\r\n        var borderWidth = size.borderLeftWidth + size.borderRightWidth;\r\n        var borderHeight = size.borderTopWidth + size.borderBottomWidth;\r\n        var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\r\n\r\n        // overwrite width and height if we can get it from style\r\n        var styleWidth = getStyleSize(style.width);\r\n        if (styleWidth !== false) {\r\n            // add padding and border unless it's already including it\r\n            size.width = styleWidth + (isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth);\r\n        }\r\n\r\n        var styleHeight = getStyleSize(style.height);\r\n        if (styleHeight !== false) {\r\n            // add padding and border unless it's already including it\r\n            size.height = styleHeight + (isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight);\r\n        }\r\n\r\n        size.innerWidth = size.width - (paddingWidth + borderWidth);\r\n        size.innerHeight = size.height - (paddingHeight + borderHeight);\r\n        size.outerWidth = size.width + marginWidth;\r\n        size.outerHeight = size.height + marginHeight;\r\n\r\n        return size;\r\n    }\r\n\r\n    return getSize;\r\n});\r\n\r\n/**\r\n * EvEmitter v1.0.3\r\n * Lil' event emitter\r\n * MIT License\r\n */\r\n\r\n/* jshint unused: true, undef: true, strict: true */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.EvEmitter = factory();\r\n}(this, function() {\r\n    /**\r\n     * Constructor for the event emitter.\r\n     */\r\n    function EvEmitter() { }\r\n\r\n    EvEmitter.prototype = {\r\n        /**\r\n         * Add an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Function} listener - Callback function\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        on: function(eventName, listener) {\r\n            if (!eventName || !listener) {\r\n                return;\r\n            }\r\n            // set events hash\r\n            var events = this._events = this._events || {};\r\n            // set listeners array\r\n            var listeners = events[eventName] = events[eventName] || [];\r\n            // only add once\r\n            if (listeners.indexOf(listener) === -1) {\r\n                listeners.push(listener);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Remove an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Function} listener - Callback function\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        off: function(eventName, listener) {\r\n            var listeners = this._events && this._events[eventName];\r\n            if (!listeners || !listeners.length) {\r\n                return;\r\n            }\r\n            var index = listeners.indexOf(listener);\r\n            if (index !== -1) {\r\n                listeners.splice(index, 1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Dispatch an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Array} args - Arguments for the callback.\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        emitEvent: function(eventName, args) {\r\n            var listeners = this._events && this._events[eventName];\r\n            if (!listeners || !listeners.length) {\r\n                return;\r\n            }\r\n            args = args || [];\r\n            listeners.forEach(function(x) {\r\n                x.apply(this, args);\r\n            });\r\n            return this;\r\n        }\r\n    };\r\n\r\n    return EvEmitter;\r\n}));\r\n\r\n/*!\r\n * Unipointer v2.1.0\r\n * base class for doing one thing with pointer event\r\n * MIT license\r\n */\r\n\r\n/*jshint browser: true, undef: true, unused: true, strict: true */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Unipointer = factory(root.$, root, root.EvEmitter);\r\n}(this, function factory($, root, EvEmitter) {\r\n    /**\r\n     * Constructor for the Unipointer\r\n     */\r\n    function Unipointer() { }\r\n\r\n    // inherit EvEmitter\r\n    var proto = Unipointer.prototype = Object.create(EvEmitter.prototype);\r\n\r\n    /**\r\n     * Add an event to start dragging.\r\n     * @param {Node} elem - Node to add the event to.\r\n     */\r\n    proto.bindStartEvent = function(elem) {\r\n        this._bindStartEvent(elem, true);\r\n    };\r\n\r\n    /**\r\n     * Remove an event to start dragging.\r\n     * @param {Node} elem - Node to remove the event from.\r\n     */\r\n    proto.unbindStartEvent = function(elem) {\r\n        this._bindStartEvent(elem, false);\r\n    };\r\n\r\n    /**\r\n     * Add/remove the event to start dragging.\r\n     * @param {Node} elem - Node to add/remove the event to.\r\n     * @param {Boolean} isBind - will unbind if falsey.\r\n     * @private\r\n     */\r\n    proto._bindStartEvent = function(elem, isBind) {\r\n        var bindMethod = $.coalesce(isBind, true) ? 'addEventListener' : 'removeEventListener';\r\n\r\n        if (window.navigator.pointerEnabled) {\r\n            // W3C Pointer Events, IE11. See https://coderwall.com/p/mfreca\r\n            elem[bindMethod]('pointerdown', this);\r\n        } else if (window.navigator.msPointerEnabled) {\r\n            // IE10 Pointer Events\r\n            elem[bindMethod]('MSPointerDown', this);\r\n        } else {\r\n            // listen for both, for devices like Chrome Pixel\r\n            elem[bindMethod]('mousedown', this);\r\n            elem[bindMethod]('touchstart', this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Trigger handler methods for events\r\n     * @param {Event} event - Event to trigger.\r\n     */\r\n    proto.handleEvent = function(event) {\r\n        var method = 'on' + event.type;\r\n        if (this[method]) {\r\n            this[method](event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns the touch that we're keeping track of.\r\n     * @param {Touch[]} touches - Touch history\r\n     * @returns {Touch} Touch event.\r\n     */\r\n    proto.getTouch = function(touches) {\r\n        return $.findByKey(touches, 'identifier', this.pointerIdentifier);\r\n    };\r\n\r\n    /**\r\n     * Handle a mouse click.\r\n     * @param {Event} event - Click event.\r\n     */\r\n    proto.onmousedown = function(event) {\r\n        // dismiss clicks from right or middle buttons\r\n        var button = event.button;\r\n        if (button && (button !== 0 && button !== 1)) {\r\n            return;\r\n        }\r\n        this._pointerDown(event, event);\r\n    };\r\n\r\n    /**\r\n     * Handle a touch.\r\n     * @param {Touch} event - Touch event.\r\n     */\r\n    proto.ontouchstart = function(event) {\r\n        this._pointerDown(event, event.changedTouches[0]);\r\n    };\r\n\r\n    /**\r\n     * Handle a mouse click for IE.\r\n     * @param {Event} event - Click event.\r\n     */\r\n    proto.onMSPointerDown = proto.onpointerdown = function(event) {\r\n        this._pointerDown(event, event);\r\n    };\r\n\r\n    /**\r\n     * Start a click/touch event.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerDown = function(event, pointer) {\r\n        // dismiss other pointers\r\n        if (this.isPointerDown) {\r\n            return;\r\n        }\r\n\r\n        this.isPointerDown = true;\r\n        // save pointer identifier to match up touch events\r\n        // pointerId for pointer events, touch.indentifier for touch events\r\n        this.pointerIdentifier = pointer.pointerId !== undefined ? pointer.pointerId : pointer.identifier;\r\n        this.pointerDown(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Bind events after the start of a click/touch event.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        this._bindPostStartEvents(event);\r\n        this.emitEvent('pointerDown', [event, pointer]);\r\n    };\r\n\r\n    // hash of events to be bound after start event\r\n    var postStartEvents = {\r\n        mousedown: ['mousemove', 'mouseup'],\r\n        touchstart: ['touchmove', 'touchend', 'touchcancel'],\r\n        pointerdown: ['pointermove', 'pointerup', 'pointercancel'],\r\n        MSPointerDown: ['MSPointerMove', 'MSPointerUp', 'MSPointerCancel']\r\n    };\r\n\r\n    /**\r\n     * Add all of the events that are needed after start dragging.\r\n     * @param {Event} event - Original click/touch event.\r\n     * @private\r\n     */\r\n    proto._bindPostStartEvents = function(event) {\r\n        if (!event) {\r\n            return;\r\n        }\r\n        // get proper events to match start event\r\n        var events = postStartEvents[event.type];\r\n        // bind events to node\r\n        events.forEach(function(eventName) {\r\n            window.addEventListener(eventName, this);\r\n        }, this);\r\n        // save these arguments\r\n        this._boundPointerEvents = events;\r\n    };\r\n\r\n    /**\r\n     * Remove all of the events that are needed after start dragging.\r\n     * @param {Event} event - Original click/touch event.\r\n     * @private\r\n     */\r\n    proto._unbindPostStartEvents = function() {\r\n        // check for _boundEvents, in case dragEnd triggered twice (old IE8 bug)\r\n        if (!this._boundPointerEvents) {\r\n            return;\r\n        }\r\n        this._boundPointerEvents.forEach(function(eventName) {\r\n            window.removeEventListener(eventName, this);\r\n        }, this);\r\n\r\n        delete this._boundPointerEvents;\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse moves.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onmousemove = function(event) {\r\n        this._pointerMove(event, event);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse moves for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerMove = proto.onpointermove = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerMove(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch moves.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchmove = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerMove(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer move from all the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerMove = function(event, pointer) {\r\n        this.pointerMove(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer move event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        this.emitEvent('pointerMove', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse button is released.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onmouseup = function(event) {\r\n        this._pointerUp(event, event);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse button is released for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerUp = proto.onpointerup = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerUp(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch is released.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchend = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerUp(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer up from all the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerUp = function(event, pointer) {\r\n        this._pointerDone();\r\n        this.pointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer up event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        this.emitEvent('pointerUp', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Event handler for when the dragging stops.\r\n     * @private\r\n     */\r\n    proto._pointerDone = function() {\r\n        // reset properties\r\n        this.isPointerDown = false;\r\n        delete this.pointerIdentifier;\r\n        // remove events\r\n        this._unbindPostStartEvents();\r\n        this.pointerDone();\r\n    };\r\n\r\n    proto.pointerDone = $.noop;\r\n\r\n    /**\r\n     * Event handler when the mouse click is canceled for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerCancel = proto.onpointercancel = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerCancel(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch is canceled.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchcancel = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerCancel(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer cancel from all of the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerCancel = function(event, pointer) {\r\n        this._pointerDone();\r\n        this.pointerCancel(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer cancel event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerCancel = function(event, pointer) {\r\n        this.emitEvent('pointerCancel', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Utility function for getting x/y coords from event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @returns {Object} Object with x & y coordinates.\r\n     */\r\n    Unipointer.getPointerPoint = function(pointer) {\r\n        return {\r\n            x: pointer.pageX,\r\n            y: pointer.pageY\r\n        };\r\n    };\r\n\r\n    return Unipointer;\r\n}));\r\n\r\n/*!\r\n * Unidragger v2.1.0\r\n * Draggable base class\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Unidragger = factory(root.$, root, root.Unipointer);\r\n}(this, function factory($, root, Unipointer) {\r\n    /**\r\n     * Unidragger constructor.\r\n     */\r\n    function Unidragger() { }\r\n\r\n    /**\r\n     * Inherit Unipointer & EvEmitter\r\n     */\r\n    var proto = Unidragger.prototype = Object.create(Unipointer.prototype);\r\n\r\n    /**\r\n     * Add events for drag handle.\r\n     */\r\n    proto.bindHandles = function() {\r\n        this._bindHandles(true);\r\n    };\r\n\r\n    /**\r\n     * Remove events for drag handle.\r\n     */\r\n    proto.unbindHandles = function() {\r\n        this._bindHandles(false);\r\n    };\r\n\r\n    /**\r\n     * Handle adding/removing events for the drag handle.\r\n     * @param {Bool} isBind - Unbind if falsey.\r\n     */\r\n    proto._bindHandles = function(isBind) {\r\n        isBind = $.coalesce(isBind, true);\r\n        // extra bind logic\r\n        var binderExtra;\r\n        var navigator = window.navigator;\r\n        if (navigator.pointerEnabled || navigator.msPointerEnabled) {\r\n            var prop = navigator.pointerEnabled ? 'touchAction' : 'msTouchAction';\r\n            binderExtra = function(handle) {\r\n                // disable scrolling on the element\r\n                handle.style[prop] = isBind ? 'none' : '';\r\n            };\r\n        } else {\r\n            binderExtra = $.noop;\r\n        }\r\n        // bind each handle\r\n        var bindMethod = isBind ? 'addEventListener' : 'removeEventListener';\r\n        for (var i = 0; i < this.handles.length; i++) {\r\n            var handle = this.handles[i];\r\n            this._bindStartEvent(handle, isBind);\r\n            binderExtra(handle);\r\n            handle[bindMethod]('click', this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Pointer start\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        // dismiss range sliders\r\n        if (event.target.nodeName === 'INPUT' && event.target.type === 'range') {\r\n            // reset pointerDown logic\r\n            this.isPointerDown = false;\r\n            delete this.pointerIdentifier;\r\n            return;\r\n        }\r\n\r\n        this._dragPointerDown(event, pointer);\r\n        // kludge to blur focused inputs in dragger\r\n        var focused = document.activeElement;\r\n        if (focused && focused.blur) {\r\n            focused.blur();\r\n        }\r\n        // bind move and end events\r\n        this._bindPostStartEvents(event);\r\n        this.emitEvent('pointerDown', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Base pointer down logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragPointerDown = function(event, pointer) {\r\n        // track to see when dragging starts\r\n        this.pointerDownPoint = Unipointer.getPointerPoint(pointer);\r\n        if (this.canPreventDefaultOnPointerDown(event, pointer)) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Overwriteable method so Flickity can prevent for scrolling\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @returns {Bool} True if allowed to prevent default event, else false.\r\n     */\r\n    proto.canPreventDefaultOnPointerDown = function(event) {\r\n        // prevent default, unless touchstart or <select>\r\n        return event.target.nodeName !== 'SELECT';\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        var moveVector = this._dragPointerMove(event, pointer);\r\n        this.emitEvent('pointerMove', [event, pointer, moveVector]);\r\n        this._dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Base pointer move logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @returns {Object} Object with x & y coordinates.\r\n     */\r\n    proto._dragPointerMove = function(event, pointer) {\r\n        var movePoint = Unipointer.getPointerPoint(pointer);\r\n        var moveVector = {\r\n            x: movePoint.x - this.pointerDownPoint.x,\r\n            y: movePoint.y - this.pointerDownPoint.y\r\n        };\r\n        // start drag if pointer has moved far enough to start drag\r\n        if (!this.isDragging && this.hasDragStarted(moveVector)) {\r\n            this._dragStart(event, pointer);\r\n        }\r\n        return moveVector;\r\n    };\r\n\r\n    /**\r\n     * Check if pointer has moved far enough to start drag.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     * @returns {Bool} True if moved far enough to count as move.\r\n     */\r\n    proto.hasDragStarted = function(moveVector) {\r\n        return Math.abs(moveVector.x) > 3 || Math.abs(moveVector.y) > 3;\r\n    };\r\n\r\n    /**\r\n     * Pointer up.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        this.emitEvent('pointerUp', [event, pointer]);\r\n        this._dragPointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Handle mouse/touch up.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragPointerUp = function(event, pointer) {\r\n        if (this.isDragging) {\r\n            this._dragEnd(event, pointer);\r\n        } else {\r\n            // pointer didn't move enough for drag to start\r\n            this._staticClick(event, pointer);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Base drag start logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._dragStart = function(event, pointer) {\r\n        this.isDragging = true;\r\n        this.dragStartPoint = Unipointer.getPointerPoint(pointer);\r\n        this.isPreventingClicks = true;\r\n        this.dragStart(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag start event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragStart = function(event, pointer) {\r\n        this.emitEvent('dragStart', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Base drag move logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     * @private\r\n     */\r\n    proto._dragMove = function(event, pointer, moveVector) {\r\n        // do not drag if not dragging yet\r\n        if (!this.isDragging) {\r\n            return;\r\n        }\r\n        this.dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag move event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     */\r\n    proto.dragMove = function(event, pointer, moveVector) {\r\n        event.preventDefault();\r\n        this.emitEvent('dragMove', [event, pointer, moveVector]);\r\n    };\r\n\r\n    /**\r\n     * Base logic for drag end.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragEnd = function(event, pointer) {\r\n        this.isDragging = false;\r\n        // re-enable clicking async\r\n        setTimeout(function() {\r\n            delete this.isPreventingClicks;\r\n        }.bind(this));\r\n        this.dragEnd(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag end event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragEnd = function(event, pointer) {\r\n        this.emitEvent('dragEnd', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Handle all clicks and prevent clicks when dragging\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     */\r\n    proto.onclick = function(event) {\r\n        if (this.isPreventingClicks) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Triggered after pointer down & up with no/tiny movement.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._staticClick = function(event, pointer) {\r\n        // ignore emulated mouse up clicks\r\n        if (this.isIgnoringMouseUp && event.type === 'mouseup') {\r\n            return;\r\n        }\r\n\r\n        // allow click in <input>s and <textarea>s\r\n        var nodeName = event.target.nodeName;\r\n        if (nodeName === 'INPUT' || nodeName === 'TEXTAREA') {\r\n            event.target.focus();\r\n        }\r\n        this.staticClick(event, pointer);\r\n\r\n        // set flag for emulated clicks 300ms after touchend\r\n        if (event.type !== 'mouseup') {\r\n            this.isIgnoringMouseUp = true;\r\n            // reset flag after 300ms\r\n            setTimeout(function() {\r\n                delete this.isIgnoringMouseUp;\r\n            }.bind(this), 400);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Dispatch event for staticClick for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.staticClick = function(event, pointer) {\r\n        this.emitEvent('staticClick', [event, pointer]);\r\n    };\r\n\r\n    return Unidragger;\r\n}));\r\n\r\n/*!\r\n * Draggabilly v2.1.1\r\n * Make that shiz draggable\r\n * http://draggabilly.desandro.com\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Draggabilly = factory(root.$, root, root.getSize, root.Unidragger);\r\n}(this, function factory($, root, getSize, Unidragger) {\r\n    var lastTime = 0;\r\n    // get rAF, prefixed, if present. fallback to setTimeout\r\n    var requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(callback) {\r\n        var currTime = new Date().getTime();\r\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n        var id = setTimeout(callback, timeToCall);\r\n        lastTime = currTime + timeToCall;\r\n        return id;\r\n    };\r\n    var transformProperty = $.isString(document.documentElement.style.transform) ? 'transform' : 'WebkitTransform';\r\n\r\n    /**\r\n     * Draggabilly constructor.\r\n     * @param {Node|string} element - Node, or querySelector string of node, to make draggable.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    function Draggabilly(element, options) {\r\n        this.element = $.get(element);\r\n        this.options = options || {};\r\n        this._create();\r\n    }\r\n\r\n    /**\r\n     * Inherit Unidragger methods.\r\n     */\r\n    var proto = Draggabilly.prototype = Object.create(Unidragger.prototype);\r\n\r\n    /**\r\n     * CSS position values that don't need to be set.\r\n     */\r\n    var positionValues = { relative: true, absolute: true, fixed: true };\r\n\r\n    /**\r\n     * Initialize draggabilly.\r\n     */\r\n    proto._create = function() {\r\n        // properties\r\n        this.position = {};\r\n        this._getPosition();\r\n\r\n        this.startPoint = { x: 0, y: 0 };\r\n        this.dragPoint = { x: 0, y: 0 };\r\n        this.startPosition = {};\r\n\r\n        // set relative positioning\r\n        var style = getComputedStyle(this.element);\r\n        if (!positionValues[style.position]) {\r\n            this.element.style.position = 'relative';\r\n        }\r\n\r\n        this.enable();\r\n        this.setHandles();\r\n    };\r\n\r\n    /**\r\n     * Set this.handles and bind start events to the handles.\r\n     */\r\n    proto.setHandles = function() {\r\n        this.handles = this.options.handle ? $.getAll(this.options.handle, this.element) : [this.element];\r\n        this.bindHandles();\r\n    };\r\n\r\n    /**\r\n     * Emits events via EvEmitter.\r\n     * @param {String} type - Name of event.\r\n     * @param {Event} event - Original event.\r\n     * @param {Array} args - Extra arguments.\r\n     */\r\n    proto.dispatchEvent = function(type, event, args) {\r\n        this.emitEvent(type, [event].concat(args));\r\n    };\r\n\r\n    /**\r\n     * Get x/y position from style.\r\n     */\r\n    proto._getPosition = function() {\r\n        var style = getComputedStyle(this.element);\r\n        var x = this._getPositionCoord(style.left, 'width');\r\n        var y = this._getPositionCoord(style.top, 'height');\r\n        // clean up 'auto' or other non-integer values\r\n        this.position.x = isNaN(x) ? 0 : x;\r\n        this.position.y = isNaN(y) ? 0 : y;\r\n\r\n        this._addTransformPosition(style);\r\n    };\r\n\r\n    /**\r\n     * Get a numeric coordinate from a style.\r\n     * @param {String} styleSide - CSS style to parse.\r\n     * @param {String} measure - Property name to get the size for.\r\n     * @returns {Number} Resulting size in pixels.\r\n     */\r\n    proto._getPositionCoord = function(styleSide, measure) {\r\n        if (styleSide.indexOf('%') !== -1) {\r\n            // convert percent into pixel for Safari, #75\r\n            var parentSize = getSize(this.element.parentNode);\r\n            // prevent not-in-DOM element throwing bug, #131\r\n            return !parentSize ? 0 : (parseFloat(styleSide) / 100) * parentSize[measure];\r\n        }\r\n        return parseInt(styleSide, 10);\r\n    };\r\n\r\n    /**\r\n     * Add `transform: translate( x, y )` to position.\r\n     * @param {CSSStyleDeclaration} style - Element styles to add to.\r\n     */\r\n    proto._addTransformPosition = function(style) {\r\n        var transform = style[transformProperty];\r\n        // bail out if value is 'none'\r\n        if (transform.indexOf('matrix') !== 0) {\r\n            return;\r\n        }\r\n        // split matrix(1, 0, 0, 1, x, y)\r\n        var matrixValues = transform.split(',');\r\n        // translate X value is in 12th or 4th position\r\n        var xIndex = transform.indexOf('matrix3d') === 0 ? 12 : 4;\r\n        var translateX = parseInt(matrixValues[xIndex], 10);\r\n        // translate Y value is in 13th or 5th position\r\n        var translateY = parseInt(matrixValues[xIndex + 1], 10);\r\n        this.position.x += translateX;\r\n        this.position.y += translateY;\r\n    };\r\n\r\n    /**\r\n     * Pointer start.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        this._dragPointerDown(event, pointer);\r\n        // kludge to blur focused inputs in dragger\r\n        var focused = document.activeElement;\r\n        // do not blur body for IE10, metafizzy/flickity#117\r\n        if (focused && focused.blur && focused !== document.body) {\r\n            focused.blur();\r\n        }\r\n        // bind move and end events\r\n        this._bindPostStartEvents(event);\r\n        $.addClass(this.element, 'is-pointer-down');\r\n        this.dispatchEvent('pointerDown', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        var moveVector = this._dragPointerMove(event, pointer);\r\n        this.dispatchEvent('pointerMove', event, [pointer, moveVector]);\r\n        this._dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Drag start.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragStart = function(event, pointer) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n        this._getPosition();\r\n        this.measureContainment();\r\n        // position _when_ drag began\r\n        this.startPosition.x = this.position.x;\r\n        this.startPosition.y = this.position.y;\r\n        // reset left/top style\r\n        this.setLeftTop();\r\n\r\n        this.dragPoint.x = 0;\r\n        this.dragPoint.y = 0;\r\n\r\n        $.addClass(this.element, 'is-dragging');\r\n        this.dispatchEvent('dragStart', event, [pointer]);\r\n        // start animation\r\n        this.animate();\r\n    };\r\n\r\n    /**\r\n     * Calculate the correct position of the element within its container.\r\n     */\r\n    proto.measureContainment = function() {\r\n        var containment = this.options.containment;\r\n        if (!containment) {\r\n            return;\r\n        }\r\n\r\n        // use element if element, otherwise just `true`, use the parent\r\n        var container = $.isNode(containment) ? containment : $.isString(containment) ? $.get(containment) : this.element.parentNode;\r\n        var elemSize = getSize(this.element);\r\n        var containerSize = getSize(container);\r\n        var elemRect = this.element.getBoundingClientRect();\r\n        var containerRect = container.getBoundingClientRect();\r\n        var borderSizeX = containerSize.borderLeftWidth + containerSize.borderRightWidth;\r\n        var borderSizeY = containerSize.borderTopWidth + containerSize.borderBottomWidth;\r\n\r\n        var position = this.relativeStartPosition = {\r\n            x: elemRect.left - (containerRect.left + containerSize.borderLeftWidth),\r\n            y: elemRect.top - (containerRect.top + containerSize.borderTopWidth)\r\n        };\r\n\r\n        this.containSize = {\r\n            width: (containerSize.width - borderSizeX) - position.x - elemSize.width,\r\n            height: (containerSize.height - borderSizeY) - position.y - elemSize.height\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x and y coordinates of current position.\r\n     */\r\n    proto.dragMove = function(event, pointer, moveVector) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n\r\n        var dragX = moveVector.x;\r\n        var dragY = moveVector.y;\r\n        var grid = this.options.grid;\r\n        var gridX = grid && grid[0];\r\n        var gridY = grid && grid[1];\r\n\r\n        dragX = applyGrid(dragX, gridX);\r\n        dragY = applyGrid(dragY, gridY);\r\n\r\n        dragX = this.containDrag('x', dragX, gridX);\r\n        dragY = this.containDrag('y', dragY, gridY);\r\n\r\n        // constrain to axis\r\n        dragX = this.options.axis === 'y' ? 0 : dragX;\r\n        dragY = this.options.axis === 'x' ? 0 : dragY;\r\n\r\n        if (this.options.minZero) {\r\n            dragX = applyMinZero(this.startPosition.x, dragX);\r\n            dragY = applyMinZero(this.startPosition.y, dragY);\r\n        }\r\n\r\n        this.position.x = this.startPosition.x + dragX;\r\n        this.position.y = this.startPosition.y + dragY;\r\n        // set dragPoint properties\r\n        this.dragPoint.x = dragX;\r\n        this.dragPoint.y = dragY;\r\n\r\n        this.dispatchEvent('dragMove', event, [pointer, moveVector]);\r\n    };\r\n\r\n    /**\r\n     * Adjust a coordinate to snap to the grid.\r\n     * @param {Number} value - Coordinate to snap to grid.\r\n     * @param {Number} grid - Grid width/height.\r\n     * @param {String} method - Math method to apply.\r\n     * @returns {Number} Closes number that snaps to grid.\r\n     */\r\n    function applyGrid(value, grid, method) {\r\n        return grid ? Math[method || 'round'](value / grid) * grid : value;\r\n    }\r\n\r\n    /**\r\n     * Adjust the drag position to prevent the item from moving out of the container to the left or top.\r\n     * @param {Number} start - Element starting coordinate.\r\n     * @param {Number} drag - Distance element was dragged.\r\n     * @returns {Number} Corrected drag coordinate.\r\n     */\r\n    function applyMinZero(start, drag) {\r\n        return start + drag < 0 ? -start : drag;\r\n    }\r\n\r\n    /**\r\n     * Limit dragging within boundaries.\r\n     * @param {string} axis - X or Y Axis\r\n     * @param {number} drag - Position coordinate on axis\r\n     * @param {number} grid - Boundary coordinate on axis.\r\n     * @returns {number} Coordinate contained with drag.\r\n     */\r\n    proto.containDrag = function(axis, drag, grid) {\r\n        if (!this.options.containment) {\r\n            return drag;\r\n        }\r\n        var measure = axis === 'x' ? 'width' : 'height';\r\n\r\n        var rel = this.relativeStartPosition[axis];\r\n        var min = applyGrid(-rel, grid, 'ceil');\r\n        var max = this.containSize[measure];\r\n        max = applyGrid(max, grid, 'floor');\r\n        return Math.min(max, Math.max(min, drag));\r\n    };\r\n\r\n    /**\r\n     * pointer up\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        $.removeClass(this.element, 'is-pointer-down');\r\n        this.dispatchEvent('pointerUp', event, [pointer]);\r\n        this._dragPointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Drag end.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragEnd = function(event, pointer) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n        // use top left position when complete\r\n        if (transformProperty) {\r\n            this.element.style[transformProperty] = '';\r\n            this.setLeftTop();\r\n        }\r\n        $.removeClass(this.element, 'is-dragging');\r\n        this.dispatchEvent('dragEnd', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Animate while dragging.\r\n     */\r\n    proto.animate = function() {\r\n        if (!this.isDragging) {\r\n            return;\r\n        }\r\n        this.positionDrag();\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    };\r\n\r\n    /**\r\n     * Set left/top positioning.\r\n     */\r\n    proto.setLeftTop = function() {\r\n        $.style(this.element, { left: this.position.x + 'px', top: this.position.y + 'px' });\r\n    };\r\n\r\n    /**\r\n     * Set position transform based on drag.\r\n     */\r\n    proto.positionDrag = function() {\r\n        this.element.style[transformProperty] = 'translate3d( ' + this.dragPoint.x + 'px, ' + this.dragPoint.y + 'px, 0)';\r\n    };\r\n\r\n    /**\r\n     * Dispatch the event for static click callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.staticClick = function(event, pointer) {\r\n        this.dispatchEvent('staticClick', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Enable dragging.\r\n     */\r\n    proto.enable = function() {\r\n        this.isEnabled = true;\r\n    };\r\n\r\n    /**\r\n     * Disable dragging.\r\n     */\r\n    proto.disable = function() {\r\n        this.isEnabled = false;\r\n        if (this.isDragging) {\r\n            this.dragEnd();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy this instance.\r\n     */\r\n    proto.destroy = function() {\r\n        this.disable();\r\n        this.element.removeAttribute('style');\r\n        this.unbindHandles();\r\n    };\r\n\r\n    return Draggabilly;\r\n}));\r\n","/*!\r\n * Chart.js\r\n * http://chartjs.org/\r\n * Version: 2.7.1\r\n *\r\n * Copyright 2018 Chart.js Contributors\r\n * Released under the MIT license\r\n * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md\r\n */\r\n(function(f) { if (typeof exports === \"object\" && typeof module !== \"undefined\") { module.exports = f() } else if (typeof define === \"function\" && define.amd) { define([], f) } else { var g; if (typeof window !== \"undefined\") { g = window } else if (typeof global !== \"undefined\") { g = global } else if (typeof self !== \"undefined\") { g = self } else { g = this } g.Chart = f() } })(function() {\r\n    var define, module, exports; return (function e(t, n, r) { function s(o, u) { if (!n[o]) { if (!t[o]) { var a = typeof require == \"function\" && require; if (!u && a) return a(o, !0); if (i) return i(o, !0); var f = new Error(\"Cannot find module '\" + o + \"'\"); throw f.code = \"MODULE_NOT_FOUND\", f } var l = n[o] = { exports: {} }; t[o][0].call(l.exports, function(e) { var n = t[o][1][e]; return s(n ? n : e) }, l, l.exports, e, t, n, r) } return n[o].exports } var i = typeof require == \"function\" && require; for (var o = 0; o < r.length; o++)s(r[o]); return s })({\r\n        1: [function(require, module, exports) {\r\n            /* MIT license */\r\n            var colorNames = require(5);\r\n\r\n            module.exports = {\r\n                getRgba: getRgba,\r\n                getHsla: getHsla,\r\n                getRgb: getRgb,\r\n                getHsl: getHsl,\r\n                getHwb: getHwb,\r\n                getAlpha: getAlpha,\r\n\r\n                hexString: hexString,\r\n                rgbString: rgbString,\r\n                rgbaString: rgbaString,\r\n                percentString: percentString,\r\n                percentaString: percentaString,\r\n                hslString: hslString,\r\n                hslaString: hslaString,\r\n                hwbString: hwbString,\r\n                keyword: keyword\r\n            }\r\n\r\n            function getRgba(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var abbr = /^#([a-fA-F0-9]{3})$/i,\r\n                    hex = /^#([a-fA-F0-9]{6})$/i,\r\n                    rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n                    per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n                    keyword = /(\\w+)/;\r\n\r\n                var rgb = [0, 0, 0],\r\n                    a = 1,\r\n                    match = string.match(abbr);\r\n                if (match) {\r\n                    match = match[1];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match[i] + match[i], 16);\r\n                    }\r\n                }\r\n                else if (match = string.match(hex)) {\r\n                    match = match[1];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n                    }\r\n                }\r\n                else if (match = string.match(rgba)) {\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match[i + 1]);\r\n                    }\r\n                    a = parseFloat(match[4]);\r\n                }\r\n                else if (match = string.match(per)) {\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n                    }\r\n                    a = parseFloat(match[4]);\r\n                }\r\n                else if (match = string.match(keyword)) {\r\n                    if (match[1] == \"transparent\") {\r\n                        return [0, 0, 0, 0];\r\n                    }\r\n                    rgb = colorNames[match[1]];\r\n                    if (!rgb) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                for (var i = 0; i < rgb.length; i++) {\r\n                    rgb[i] = scale(rgb[i], 0, 255);\r\n                }\r\n                if (!a && a != 0) {\r\n                    a = 1;\r\n                }\r\n                else {\r\n                    a = scale(a, 0, 1);\r\n                }\r\n                rgb[3] = a;\r\n                return rgb;\r\n            }\r\n\r\n            function getHsla(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n                var match = string.match(hsl);\r\n                if (match) {\r\n                    var alpha = parseFloat(match[4]);\r\n                    var h = scale(parseInt(match[1]), 0, 360),\r\n                        s = scale(parseFloat(match[2]), 0, 100),\r\n                        l = scale(parseFloat(match[3]), 0, 100),\r\n                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n                    return [h, s, l, a];\r\n                }\r\n            }\r\n\r\n            function getHwb(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n                var match = string.match(hwb);\r\n                if (match) {\r\n                    var alpha = parseFloat(match[4]);\r\n                    var h = scale(parseInt(match[1]), 0, 360),\r\n                        w = scale(parseFloat(match[2]), 0, 100),\r\n                        b = scale(parseFloat(match[3]), 0, 100),\r\n                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n                    return [h, w, b, a];\r\n                }\r\n            }\r\n\r\n            function getRgb(string) {\r\n                var rgba = getRgba(string);\r\n                return rgba && rgba.slice(0, 3);\r\n            }\r\n\r\n            function getHsl(string) {\r\n                var hsla = getHsla(string);\r\n                return hsla && hsla.slice(0, 3);\r\n            }\r\n\r\n            function getAlpha(string) {\r\n                var vals = getRgba(string);\r\n                if (vals) {\r\n                    return vals[3];\r\n                }\r\n                else if (vals = getHsla(string)) {\r\n                    return vals[3];\r\n                }\r\n                else if (vals = getHwb(string)) {\r\n                    return vals[3];\r\n                }\r\n            }\r\n\r\n            // generators\r\n            function hexString(rgb) {\r\n                return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n                    + hexDouble(rgb[2]);\r\n            }\r\n\r\n            function rgbString(rgba, alpha) {\r\n                if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n                    return rgbaString(rgba, alpha);\r\n                }\r\n                return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n            }\r\n\r\n            function rgbaString(rgba, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n                }\r\n                return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n                    + \", \" + alpha + \")\";\r\n            }\r\n\r\n            function percentString(rgba, alpha) {\r\n                if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n                    return percentaString(rgba, alpha);\r\n                }\r\n                var r = Math.round(rgba[0] / 255 * 100),\r\n                    g = Math.round(rgba[1] / 255 * 100),\r\n                    b = Math.round(rgba[2] / 255 * 100);\r\n\r\n                return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n            }\r\n\r\n            function percentaString(rgba, alpha) {\r\n                var r = Math.round(rgba[0] / 255 * 100),\r\n                    g = Math.round(rgba[1] / 255 * 100),\r\n                    b = Math.round(rgba[2] / 255 * 100);\r\n                return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n            }\r\n\r\n            function hslString(hsla, alpha) {\r\n                if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n                    return hslaString(hsla, alpha);\r\n                }\r\n                return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n            }\r\n\r\n            function hslaString(hsla, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n                }\r\n                return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n                    + alpha + \")\";\r\n            }\r\n\r\n            // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n            // (hwb have alpha optional & 1 is default value)\r\n            function hwbString(hwb, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n                }\r\n                return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n                    + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n            }\r\n\r\n            function keyword(rgb) {\r\n                return reverseNames[rgb.slice(0, 3)];\r\n            }\r\n\r\n            // helpers\r\n            function scale(num, min, max) {\r\n                return Math.min(Math.max(min, num), max);\r\n            }\r\n\r\n            function hexDouble(num) {\r\n                var str = num.toString(16).toUpperCase();\r\n                return (str.length < 2) ? \"0\" + str : str;\r\n            }\r\n\r\n            //create a list of reverse color names\r\n            var reverseNames = {};\r\n            for (var name in colorNames) {\r\n                reverseNames[colorNames[name]] = name;\r\n            }\r\n        }, { \"5\": 5 }], 2: [function(require, module, exports) {\r\n            /* MIT license */\r\n            var convert = require(4);\r\n            var string = require(1);\r\n\r\n            var Color = function(obj) {\r\n                if (obj instanceof Color) {\r\n                    return obj;\r\n                }\r\n                if (!(this instanceof Color)) {\r\n                    return new Color(obj);\r\n                }\r\n\r\n                this.valid = false;\r\n                this.values = {\r\n                    rgb: [0, 0, 0],\r\n                    hsl: [0, 0, 0],\r\n                    hsv: [0, 0, 0],\r\n                    hwb: [0, 0, 0],\r\n                    cmyk: [0, 0, 0, 0],\r\n                    alpha: 1\r\n                };\r\n\r\n                // parse Color() argument\r\n                var vals;\r\n                if (typeof obj === 'string') {\r\n                    vals = string.getRgba(obj);\r\n                    if (vals) {\r\n                        this.setValues('rgb', vals);\r\n                    } else if (vals = string.getHsla(obj)) {\r\n                        this.setValues('hsl', vals);\r\n                    } else if (vals = string.getHwb(obj)) {\r\n                        this.setValues('hwb', vals);\r\n                    }\r\n                } else if (typeof obj === 'object') {\r\n                    vals = obj;\r\n                    if (vals.r !== undefined || vals.red !== undefined) {\r\n                        this.setValues('rgb', vals);\r\n                    } else if (vals.l !== undefined || vals.lightness !== undefined) {\r\n                        this.setValues('hsl', vals);\r\n                    } else if (vals.v !== undefined || vals.value !== undefined) {\r\n                        this.setValues('hsv', vals);\r\n                    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\r\n                        this.setValues('hwb', vals);\r\n                    } else if (vals.c !== undefined || vals.cyan !== undefined) {\r\n                        this.setValues('cmyk', vals);\r\n                    }\r\n                }\r\n            };\r\n\r\n            Color.prototype = {\r\n                isValid: function() {\r\n                    return this.valid;\r\n                },\r\n                rgb: function() {\r\n                    return this.setSpace('rgb', arguments);\r\n                },\r\n                hsl: function() {\r\n                    return this.setSpace('hsl', arguments);\r\n                },\r\n                hsv: function() {\r\n                    return this.setSpace('hsv', arguments);\r\n                },\r\n                hwb: function() {\r\n                    return this.setSpace('hwb', arguments);\r\n                },\r\n                cmyk: function() {\r\n                    return this.setSpace('cmyk', arguments);\r\n                },\r\n\r\n                rgbArray: function() {\r\n                    return this.values.rgb;\r\n                },\r\n                hslArray: function() {\r\n                    return this.values.hsl;\r\n                },\r\n                hsvArray: function() {\r\n                    return this.values.hsv;\r\n                },\r\n                hwbArray: function() {\r\n                    var values = this.values;\r\n                    if (values.alpha !== 1) {\r\n                        return values.hwb.concat([values.alpha]);\r\n                    }\r\n                    return values.hwb;\r\n                },\r\n                cmykArray: function() {\r\n                    return this.values.cmyk;\r\n                },\r\n                rgbaArray: function() {\r\n                    var values = this.values;\r\n                    return values.rgb.concat([values.alpha]);\r\n                },\r\n                hslaArray: function() {\r\n                    var values = this.values;\r\n                    return values.hsl.concat([values.alpha]);\r\n                },\r\n                alpha: function(val) {\r\n                    if (val === undefined) {\r\n                        return this.values.alpha;\r\n                    }\r\n                    this.setValues('alpha', val);\r\n                    return this;\r\n                },\r\n\r\n                red: function(val) {\r\n                    return this.setChannel('rgb', 0, val);\r\n                },\r\n                green: function(val) {\r\n                    return this.setChannel('rgb', 1, val);\r\n                },\r\n                blue: function(val) {\r\n                    return this.setChannel('rgb', 2, val);\r\n                },\r\n                hue: function(val) {\r\n                    if (val) {\r\n                        val %= 360;\r\n                        val = val < 0 ? 360 + val : val;\r\n                    }\r\n                    return this.setChannel('hsl', 0, val);\r\n                },\r\n                saturation: function(val) {\r\n                    return this.setChannel('hsl', 1, val);\r\n                },\r\n                lightness: function(val) {\r\n                    return this.setChannel('hsl', 2, val);\r\n                },\r\n                saturationv: function(val) {\r\n                    return this.setChannel('hsv', 1, val);\r\n                },\r\n                whiteness: function(val) {\r\n                    return this.setChannel('hwb', 1, val);\r\n                },\r\n                blackness: function(val) {\r\n                    return this.setChannel('hwb', 2, val);\r\n                },\r\n                value: function(val) {\r\n                    return this.setChannel('hsv', 2, val);\r\n                },\r\n                cyan: function(val) {\r\n                    return this.setChannel('cmyk', 0, val);\r\n                },\r\n                magenta: function(val) {\r\n                    return this.setChannel('cmyk', 1, val);\r\n                },\r\n                yellow: function(val) {\r\n                    return this.setChannel('cmyk', 2, val);\r\n                },\r\n                black: function(val) {\r\n                    return this.setChannel('cmyk', 3, val);\r\n                },\r\n\r\n                hexString: function() {\r\n                    return string.hexString(this.values.rgb);\r\n                },\r\n                rgbString: function() {\r\n                    return string.rgbString(this.values.rgb, this.values.alpha);\r\n                },\r\n                rgbaString: function() {\r\n                    return string.rgbaString(this.values.rgb, this.values.alpha);\r\n                },\r\n                percentString: function() {\r\n                    return string.percentString(this.values.rgb, this.values.alpha);\r\n                },\r\n                hslString: function() {\r\n                    return string.hslString(this.values.hsl, this.values.alpha);\r\n                },\r\n                hslaString: function() {\r\n                    return string.hslaString(this.values.hsl, this.values.alpha);\r\n                },\r\n                hwbString: function() {\r\n                    return string.hwbString(this.values.hwb, this.values.alpha);\r\n                },\r\n                keyword: function() {\r\n                    return string.keyword(this.values.rgb, this.values.alpha);\r\n                },\r\n\r\n                rgbNumber: function() {\r\n                    var rgb = this.values.rgb;\r\n                    return (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\r\n                },\r\n\r\n                luminosity: function() {\r\n                    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n                    var rgb = this.values.rgb;\r\n                    var lum = [];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        var chan = rgb[i] / 255;\r\n                        lum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\r\n                    }\r\n                    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n                },\r\n\r\n                contrast: function(color2) {\r\n                    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n                    var lum1 = this.luminosity();\r\n                    var lum2 = color2.luminosity();\r\n                    if (lum1 > lum2) {\r\n                        return (lum1 + 0.05) / (lum2 + 0.05);\r\n                    }\r\n                    return (lum2 + 0.05) / (lum1 + 0.05);\r\n                },\r\n\r\n                level: function(color2) {\r\n                    var contrastRatio = this.contrast(color2);\r\n                    if (contrastRatio >= 7.1) {\r\n                        return 'AAA';\r\n                    }\r\n\r\n                    return (contrastRatio >= 4.5) ? 'AA' : '';\r\n                },\r\n\r\n                dark: function() {\r\n                    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\r\n                    var rgb = this.values.rgb;\r\n                    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\r\n                    return yiq < 128;\r\n                },\r\n\r\n                light: function() {\r\n                    return !this.dark();\r\n                },\r\n\r\n                negate: function() {\r\n                    var rgb = [];\r\n                    for (var i = 0; i < 3; i++) {\r\n                        rgb[i] = 255 - this.values.rgb[i];\r\n                    }\r\n                    this.setValues('rgb', rgb);\r\n                    return this;\r\n                },\r\n\r\n                lighten: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[2] += hsl[2] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                darken: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[2] -= hsl[2] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                saturate: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[1] += hsl[1] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                desaturate: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[1] -= hsl[1] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                whiten: function(ratio) {\r\n                    var hwb = this.values.hwb;\r\n                    hwb[1] += hwb[1] * ratio;\r\n                    this.setValues('hwb', hwb);\r\n                    return this;\r\n                },\r\n\r\n                blacken: function(ratio) {\r\n                    var hwb = this.values.hwb;\r\n                    hwb[2] += hwb[2] * ratio;\r\n                    this.setValues('hwb', hwb);\r\n                    return this;\r\n                },\r\n\r\n                greyscale: function() {\r\n                    var rgb = this.values.rgb;\r\n                    // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\r\n                    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\r\n                    this.setValues('rgb', [val, val, val]);\r\n                    return this;\r\n                },\r\n\r\n                clearer: function(ratio) {\r\n                    var alpha = this.values.alpha;\r\n                    this.setValues('alpha', alpha - (alpha * ratio));\r\n                    return this;\r\n                },\r\n\r\n                opaquer: function(ratio) {\r\n                    var alpha = this.values.alpha;\r\n                    this.setValues('alpha', alpha + (alpha * ratio));\r\n                    return this;\r\n                },\r\n\r\n                rotate: function(degrees) {\r\n                    var hsl = this.values.hsl;\r\n                    var hue = (hsl[0] + degrees) % 360;\r\n                    hsl[0] = hue < 0 ? 360 + hue : hue;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                /**\r\n                 * Ported from sass implementation in C\r\n                 * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\r\n                 */\r\n                mix: function(mixinColor, weight) {\r\n                    var color1 = this;\r\n                    var color2 = mixinColor;\r\n                    var p = weight === undefined ? 0.5 : weight;\r\n\r\n                    var w = 2 * p - 1;\r\n                    var a = color1.alpha() - color2.alpha();\r\n\r\n                    var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n                    var w2 = 1 - w1;\r\n\r\n                    return this\r\n                        .rgb(\r\n                        w1 * color1.red() + w2 * color2.red(),\r\n                        w1 * color1.green() + w2 * color2.green(),\r\n                        w1 * color1.blue() + w2 * color2.blue()\r\n                        )\r\n                        .alpha(color1.alpha() * p + color2.alpha() * (1 - p));\r\n                },\r\n\r\n                toJSON: function() {\r\n                    return this.rgb();\r\n                },\r\n\r\n                clone: function() {\r\n                    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\r\n                    // making the final build way to big to embed in Chart.js. So let's do it manually,\r\n                    // assuming that values to clone are 1 dimension arrays containing only numbers,\r\n                    // except 'alpha' which is a number.\r\n                    var result = new Color();\r\n                    var source = this.values;\r\n                    var target = result.values;\r\n                    var value, type;\r\n\r\n                    for (var prop in source) {\r\n                        if (source.hasOwnProperty(prop)) {\r\n                            value = source[prop];\r\n                            type = ({}).toString.call(value);\r\n                            if (type === '[object Array]') {\r\n                                target[prop] = value.slice(0);\r\n                            } else if (type === '[object Number]') {\r\n                                target[prop] = value;\r\n                            } else {\r\n                                console.error('unexpected color value:', value);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return result;\r\n                }\r\n            };\r\n\r\n            Color.prototype.spaces = {\r\n                rgb: ['red', 'green', 'blue'],\r\n                hsl: ['hue', 'saturation', 'lightness'],\r\n                hsv: ['hue', 'saturation', 'value'],\r\n                hwb: ['hue', 'whiteness', 'blackness'],\r\n                cmyk: ['cyan', 'magenta', 'yellow', 'black']\r\n            };\r\n\r\n            Color.prototype.maxes = {\r\n                rgb: [255, 255, 255],\r\n                hsl: [360, 100, 100],\r\n                hsv: [360, 100, 100],\r\n                hwb: [360, 100, 100],\r\n                cmyk: [100, 100, 100, 100]\r\n            };\r\n\r\n            Color.prototype.getValues = function(space) {\r\n                var values = this.values;\r\n                var vals = {};\r\n\r\n                for (var i = 0; i < space.length; i++) {\r\n                    vals[space.charAt(i)] = values[space][i];\r\n                }\r\n\r\n                if (values.alpha !== 1) {\r\n                    vals.a = values.alpha;\r\n                }\r\n\r\n                // {r: 255, g: 255, b: 255, a: 0.4}\r\n                return vals;\r\n            };\r\n\r\n            Color.prototype.setValues = function(space, vals) {\r\n                var values = this.values;\r\n                var spaces = this.spaces;\r\n                var maxes = this.maxes;\r\n                var alpha = 1;\r\n                var i;\r\n\r\n                this.valid = true;\r\n\r\n                if (space === 'alpha') {\r\n                    alpha = vals;\r\n                } else if (vals.length) {\r\n                    // [10, 10, 10]\r\n                    values[space] = vals.slice(0, space.length);\r\n                    alpha = vals[space.length];\r\n                } else if (vals[space.charAt(0)] !== undefined) {\r\n                    // {r: 10, g: 10, b: 10}\r\n                    for (i = 0; i < space.length; i++) {\r\n                        values[space][i] = vals[space.charAt(i)];\r\n                    }\r\n\r\n                    alpha = vals.a;\r\n                } else if (vals[spaces[space][0]] !== undefined) {\r\n                    // {red: 10, green: 10, blue: 10}\r\n                    var chans = spaces[space];\r\n\r\n                    for (i = 0; i < space.length; i++) {\r\n                        values[space][i] = vals[chans[i]];\r\n                    }\r\n\r\n                    alpha = vals.alpha;\r\n                }\r\n\r\n                values.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\r\n\r\n                if (space === 'alpha') {\r\n                    return false;\r\n                }\r\n\r\n                var capped;\r\n\r\n                // cap values of the space prior converting all values\r\n                for (i = 0; i < space.length; i++) {\r\n                    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\r\n                    values[space][i] = Math.round(capped);\r\n                }\r\n\r\n                // convert to all the other color spaces\r\n                for (var sname in spaces) {\r\n                    if (sname !== space) {\r\n                        values[sname] = convert[space][sname](values[space]);\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            };\r\n\r\n            Color.prototype.setSpace = function(space, args) {\r\n                var vals = args[0];\r\n\r\n                if (vals === undefined) {\r\n                    // color.rgb()\r\n                    return this.getValues(space);\r\n                }\r\n\r\n                // color.rgb(10, 10, 10)\r\n                if (typeof vals === 'number') {\r\n                    vals = Array.prototype.slice.call(args);\r\n                }\r\n\r\n                this.setValues(space, vals);\r\n                return this;\r\n            };\r\n\r\n            Color.prototype.setChannel = function(space, index, val) {\r\n                var svalues = this.values[space];\r\n                if (val === undefined) {\r\n                    // color.red()\r\n                    return svalues[index];\r\n                } else if (val === svalues[index]) {\r\n                    // color.red(color.red())\r\n                    return this;\r\n                }\r\n\r\n                // color.red(100)\r\n                svalues[index] = val;\r\n                this.setValues(space, svalues);\r\n\r\n                return this;\r\n            };\r\n\r\n            if (typeof window !== 'undefined') {\r\n                window.Color = Color;\r\n            }\r\n\r\n            module.exports = Color;\r\n        }, { \"1\": 1, \"4\": 4 }], 3: [function(require, module, exports) {\r\n            /* MIT license */\r\n\r\n            module.exports = {\r\n                rgb2hsl: rgb2hsl,\r\n                rgb2hsv: rgb2hsv,\r\n                rgb2hwb: rgb2hwb,\r\n                rgb2cmyk: rgb2cmyk,\r\n                rgb2keyword: rgb2keyword,\r\n                rgb2xyz: rgb2xyz,\r\n                rgb2lab: rgb2lab,\r\n                rgb2lch: rgb2lch,\r\n\r\n                hsl2rgb: hsl2rgb,\r\n                hsl2hsv: hsl2hsv,\r\n                hsl2hwb: hsl2hwb,\r\n                hsl2cmyk: hsl2cmyk,\r\n                hsl2keyword: hsl2keyword,\r\n\r\n                hsv2rgb: hsv2rgb,\r\n                hsv2hsl: hsv2hsl,\r\n                hsv2hwb: hsv2hwb,\r\n                hsv2cmyk: hsv2cmyk,\r\n                hsv2keyword: hsv2keyword,\r\n\r\n                hwb2rgb: hwb2rgb,\r\n                hwb2hsl: hwb2hsl,\r\n                hwb2hsv: hwb2hsv,\r\n                hwb2cmyk: hwb2cmyk,\r\n                hwb2keyword: hwb2keyword,\r\n\r\n                cmyk2rgb: cmyk2rgb,\r\n                cmyk2hsl: cmyk2hsl,\r\n                cmyk2hsv: cmyk2hsv,\r\n                cmyk2hwb: cmyk2hwb,\r\n                cmyk2keyword: cmyk2keyword,\r\n\r\n                keyword2rgb: keyword2rgb,\r\n                keyword2hsl: keyword2hsl,\r\n                keyword2hsv: keyword2hsv,\r\n                keyword2hwb: keyword2hwb,\r\n                keyword2cmyk: keyword2cmyk,\r\n                keyword2lab: keyword2lab,\r\n                keyword2xyz: keyword2xyz,\r\n\r\n                xyz2rgb: xyz2rgb,\r\n                xyz2lab: xyz2lab,\r\n                xyz2lch: xyz2lch,\r\n\r\n                lab2xyz: lab2xyz,\r\n                lab2rgb: lab2rgb,\r\n                lab2lch: lab2lch,\r\n\r\n                lch2lab: lch2lab,\r\n                lch2xyz: lch2xyz,\r\n                lch2rgb: lch2rgb\r\n            }\r\n\r\n            function rgb2hsl(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255,\r\n                    min = Math.min(r, g, b),\r\n                    max = Math.max(r, g, b),\r\n                    delta = max - min,\r\n                    h, s, l;\r\n\r\n                if (max == min)\r\n                    h = 0;\r\n                else if (r == max)\r\n                    h = (g - b) / delta;\r\n                else if (g == max)\r\n                    h = 2 + (b - r) / delta;\r\n                else if (b == max)\r\n                    h = 4 + (r - g) / delta;\r\n\r\n                h = Math.min(h * 60, 360);\r\n\r\n                if (h < 0)\r\n                    h += 360;\r\n\r\n                l = (min + max) / 2;\r\n\r\n                if (max == min)\r\n                    s = 0;\r\n                else if (l <= 0.5)\r\n                    s = delta / (max + min);\r\n                else\r\n                    s = delta / (2 - max - min);\r\n\r\n                return [h, s * 100, l * 100];\r\n            }\r\n\r\n            function rgb2hsv(rgb) {\r\n                var r = rgb[0],\r\n                    g = rgb[1],\r\n                    b = rgb[2],\r\n                    min = Math.min(r, g, b),\r\n                    max = Math.max(r, g, b),\r\n                    delta = max - min,\r\n                    h, s, v;\r\n\r\n                if (max == 0)\r\n                    s = 0;\r\n                else\r\n                    s = (delta / max * 1000) / 10;\r\n\r\n                if (max == min)\r\n                    h = 0;\r\n                else if (r == max)\r\n                    h = (g - b) / delta;\r\n                else if (g == max)\r\n                    h = 2 + (b - r) / delta;\r\n                else if (b == max)\r\n                    h = 4 + (r - g) / delta;\r\n\r\n                h = Math.min(h * 60, 360);\r\n\r\n                if (h < 0)\r\n                    h += 360;\r\n\r\n                v = ((max / 255) * 1000) / 10;\r\n\r\n                return [h, s, v];\r\n            }\r\n\r\n            function rgb2hwb(rgb) {\r\n                var r = rgb[0],\r\n                    g = rgb[1],\r\n                    b = rgb[2],\r\n                    h = rgb2hsl(rgb)[0],\r\n                    w = 1 / 255 * Math.min(r, Math.min(g, b)),\r\n                    b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\r\n\r\n                return [h, w * 100, b * 100];\r\n            }\r\n\r\n            function rgb2cmyk(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255,\r\n                    c, m, y, k;\r\n\r\n                k = Math.min(1 - r, 1 - g, 1 - b);\r\n                c = (1 - r - k) / (1 - k) || 0;\r\n                m = (1 - g - k) / (1 - k) || 0;\r\n                y = (1 - b - k) / (1 - k) || 0;\r\n                return [c * 100, m * 100, y * 100, k * 100];\r\n            }\r\n\r\n            function rgb2keyword(rgb) {\r\n                return reverseKeywords[JSON.stringify(rgb)];\r\n            }\r\n\r\n            function rgb2xyz(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255;\r\n\r\n                // assume sRGB\r\n                r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\r\n                g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\r\n                b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\r\n\r\n                var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\r\n                var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\r\n                var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\r\n\r\n                return [x * 100, y * 100, z * 100];\r\n            }\r\n\r\n            function rgb2lab(rgb) {\r\n                var xyz = rgb2xyz(rgb),\r\n                    x = xyz[0],\r\n                    y = xyz[1],\r\n                    z = xyz[2],\r\n                    l, a, b;\r\n\r\n                x /= 95.047;\r\n                y /= 100;\r\n                z /= 108.883;\r\n\r\n                x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\r\n                y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\r\n                z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\r\n\r\n                l = (116 * y) - 16;\r\n                a = 500 * (x - y);\r\n                b = 200 * (y - z);\r\n\r\n                return [l, a, b];\r\n            }\r\n\r\n            function rgb2lch(args) {\r\n                return lab2lch(rgb2lab(args));\r\n            }\r\n\r\n            function hsl2rgb(hsl) {\r\n                var h = hsl[0] / 360,\r\n                    s = hsl[1] / 100,\r\n                    l = hsl[2] / 100,\r\n                    t1, t2, t3, rgb, val;\r\n\r\n                if (s == 0) {\r\n                    val = l * 255;\r\n                    return [val, val, val];\r\n                }\r\n\r\n                if (l < 0.5)\r\n                    t2 = l * (1 + s);\r\n                else\r\n                    t2 = l + s - l * s;\r\n                t1 = 2 * l - t2;\r\n\r\n                rgb = [0, 0, 0];\r\n                for (var i = 0; i < 3; i++) {\r\n                    t3 = h + 1 / 3 * - (i - 1);\r\n                    t3 < 0 && t3++;\r\n                    t3 > 1 && t3--;\r\n\r\n                    if (6 * t3 < 1)\r\n                        val = t1 + (t2 - t1) * 6 * t3;\r\n                    else if (2 * t3 < 1)\r\n                        val = t2;\r\n                    else if (3 * t3 < 2)\r\n                        val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\r\n                    else\r\n                        val = t1;\r\n\r\n                    rgb[i] = val * 255;\r\n                }\r\n\r\n                return rgb;\r\n            }\r\n\r\n            function hsl2hsv(hsl) {\r\n                var h = hsl[0],\r\n                    s = hsl[1] / 100,\r\n                    l = hsl[2] / 100,\r\n                    sv, v;\r\n\r\n                if (l === 0) {\r\n                    // no need to do calc on black\r\n                    // also avoids divide by 0 error\r\n                    return [0, 0, 0];\r\n                }\r\n\r\n                l *= 2;\r\n                s *= (l <= 1) ? l : 2 - l;\r\n                v = (l + s) / 2;\r\n                sv = (2 * s) / (l + s);\r\n                return [h, sv * 100, v * 100];\r\n            }\r\n\r\n            function hsl2hwb(args) {\r\n                return rgb2hwb(hsl2rgb(args));\r\n            }\r\n\r\n            function hsl2cmyk(args) {\r\n                return rgb2cmyk(hsl2rgb(args));\r\n            }\r\n\r\n            function hsl2keyword(args) {\r\n                return rgb2keyword(hsl2rgb(args));\r\n            }\r\n\r\n            function hsv2rgb(hsv) {\r\n                var h = hsv[0] / 60,\r\n                    s = hsv[1] / 100,\r\n                    v = hsv[2] / 100,\r\n                    hi = Math.floor(h) % 6;\r\n\r\n                var f = h - Math.floor(h),\r\n                    p = 255 * v * (1 - s),\r\n                    q = 255 * v * (1 - (s * f)),\r\n                    t = 255 * v * (1 - (s * (1 - f))),\r\n                    v = 255 * v;\r\n\r\n                switch (hi) {\r\n                    case 0:\r\n                        return [v, t, p];\r\n                    case 1:\r\n                        return [q, v, p];\r\n                    case 2:\r\n                        return [p, v, t];\r\n                    case 3:\r\n                        return [p, q, v];\r\n                    case 4:\r\n                        return [t, p, v];\r\n                    case 5:\r\n                        return [v, p, q];\r\n                }\r\n            }\r\n\r\n            function hsv2hsl(hsv) {\r\n                var h = hsv[0],\r\n                    s = hsv[1] / 100,\r\n                    v = hsv[2] / 100,\r\n                    sl, l;\r\n\r\n                l = (2 - s) * v;\r\n                sl = s * v;\r\n                sl /= (l <= 1) ? l : 2 - l;\r\n                sl = sl || 0;\r\n                l /= 2;\r\n                return [h, sl * 100, l * 100];\r\n            }\r\n\r\n            function hsv2hwb(args) {\r\n                return rgb2hwb(hsv2rgb(args))\r\n            }\r\n\r\n            function hsv2cmyk(args) {\r\n                return rgb2cmyk(hsv2rgb(args));\r\n            }\r\n\r\n            function hsv2keyword(args) {\r\n                return rgb2keyword(hsv2rgb(args));\r\n            }\r\n\r\n            // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\r\n            function hwb2rgb(hwb) {\r\n                var h = hwb[0] / 360,\r\n                    wh = hwb[1] / 100,\r\n                    bl = hwb[2] / 100,\r\n                    ratio = wh + bl,\r\n                    i, v, f, n;\r\n\r\n                // wh + bl cant be > 1\r\n                if (ratio > 1) {\r\n                    wh /= ratio;\r\n                    bl /= ratio;\r\n                }\r\n\r\n                i = Math.floor(6 * h);\r\n                v = 1 - bl;\r\n                f = 6 * h - i;\r\n                if ((i & 0x01) != 0) {\r\n                    f = 1 - f;\r\n                }\r\n                n = wh + f * (v - wh);  // linear interpolation\r\n\r\n                switch (i) {\r\n                    default:\r\n                    case 6:\r\n                    case 0: r = v; g = n; b = wh; break;\r\n                    case 1: r = n; g = v; b = wh; break;\r\n                    case 2: r = wh; g = v; b = n; break;\r\n                    case 3: r = wh; g = n; b = v; break;\r\n                    case 4: r = n; g = wh; b = v; break;\r\n                    case 5: r = v; g = wh; b = n; break;\r\n                }\r\n\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function hwb2hsl(args) {\r\n                return rgb2hsl(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2hsv(args) {\r\n                return rgb2hsv(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2cmyk(args) {\r\n                return rgb2cmyk(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2keyword(args) {\r\n                return rgb2keyword(hwb2rgb(args));\r\n            }\r\n\r\n            function cmyk2rgb(cmyk) {\r\n                var c = cmyk[0] / 100,\r\n                    m = cmyk[1] / 100,\r\n                    y = cmyk[2] / 100,\r\n                    k = cmyk[3] / 100,\r\n                    r, g, b;\r\n\r\n                r = 1 - Math.min(1, c * (1 - k) + k);\r\n                g = 1 - Math.min(1, m * (1 - k) + k);\r\n                b = 1 - Math.min(1, y * (1 - k) + k);\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function cmyk2hsl(args) {\r\n                return rgb2hsl(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2hsv(args) {\r\n                return rgb2hsv(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2hwb(args) {\r\n                return rgb2hwb(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2keyword(args) {\r\n                return rgb2keyword(cmyk2rgb(args));\r\n            }\r\n\r\n            function xyz2rgb(xyz) {\r\n                var x = xyz[0] / 100,\r\n                    y = xyz[1] / 100,\r\n                    z = xyz[2] / 100,\r\n                    r, g, b;\r\n\r\n                r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\r\n                g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\r\n                b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\r\n\r\n                // assume sRGB\r\n                r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\r\n                    : r = (r * 12.92);\r\n\r\n                g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\r\n                    : g = (g * 12.92);\r\n\r\n                b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\r\n                    : b = (b * 12.92);\r\n\r\n                r = Math.min(Math.max(0, r), 1);\r\n                g = Math.min(Math.max(0, g), 1);\r\n                b = Math.min(Math.max(0, b), 1);\r\n\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function xyz2lab(xyz) {\r\n                var x = xyz[0],\r\n                    y = xyz[1],\r\n                    z = xyz[2],\r\n                    l, a, b;\r\n\r\n                x /= 95.047;\r\n                y /= 100;\r\n                z /= 108.883;\r\n\r\n                x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\r\n                y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\r\n                z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\r\n\r\n                l = (116 * y) - 16;\r\n                a = 500 * (x - y);\r\n                b = 200 * (y - z);\r\n\r\n                return [l, a, b];\r\n            }\r\n\r\n            function xyz2lch(args) {\r\n                return lab2lch(xyz2lab(args));\r\n            }\r\n\r\n            function lab2xyz(lab) {\r\n                var l = lab[0],\r\n                    a = lab[1],\r\n                    b = lab[2],\r\n                    x, y, z, y2;\r\n\r\n                if (l <= 8) {\r\n                    y = (l * 100) / 903.3;\r\n                    y2 = (7.787 * (y / 100)) + (16 / 116);\r\n                } else {\r\n                    y = 100 * Math.pow((l + 16) / 116, 3);\r\n                    y2 = Math.pow(y / 100, 1 / 3);\r\n                }\r\n\r\n                x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\r\n\r\n                z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\r\n\r\n                return [x, y, z];\r\n            }\r\n\r\n            function lab2lch(lab) {\r\n                var l = lab[0],\r\n                    a = lab[1],\r\n                    b = lab[2],\r\n                    hr, h, c;\r\n\r\n                hr = Math.atan2(b, a);\r\n                h = hr * 360 / 2 / Math.PI;\r\n                if (h < 0) {\r\n                    h += 360;\r\n                }\r\n                c = Math.sqrt(a * a + b * b);\r\n                return [l, c, h];\r\n            }\r\n\r\n            function lab2rgb(args) {\r\n                return xyz2rgb(lab2xyz(args));\r\n            }\r\n\r\n            function lch2lab(lch) {\r\n                var l = lch[0],\r\n                    c = lch[1],\r\n                    h = lch[2],\r\n                    a, b, hr;\r\n\r\n                hr = h / 360 * 2 * Math.PI;\r\n                a = c * Math.cos(hr);\r\n                b = c * Math.sin(hr);\r\n                return [l, a, b];\r\n            }\r\n\r\n            function lch2xyz(args) {\r\n                return lab2xyz(lch2lab(args));\r\n            }\r\n\r\n            function lch2rgb(args) {\r\n                return lab2rgb(lch2lab(args));\r\n            }\r\n\r\n            function keyword2rgb(keyword) {\r\n                return cssKeywords[keyword];\r\n            }\r\n\r\n            function keyword2hsl(args) {\r\n                return rgb2hsl(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2hsv(args) {\r\n                return rgb2hsv(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2hwb(args) {\r\n                return rgb2hwb(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2cmyk(args) {\r\n                return rgb2cmyk(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2lab(args) {\r\n                return rgb2lab(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2xyz(args) {\r\n                return rgb2xyz(keyword2rgb(args));\r\n            }\r\n\r\n            var cssKeywords = {\r\n                aliceblue: [240, 248, 255],\r\n                antiquewhite: [250, 235, 215],\r\n                aqua: [0, 255, 255],\r\n                aquamarine: [127, 255, 212],\r\n                azure: [240, 255, 255],\r\n                beige: [245, 245, 220],\r\n                bisque: [255, 228, 196],\r\n                black: [0, 0, 0],\r\n                blanchedalmond: [255, 235, 205],\r\n                blue: [0, 0, 255],\r\n                blueviolet: [138, 43, 226],\r\n                brown: [165, 42, 42],\r\n                burlywood: [222, 184, 135],\r\n                cadetblue: [95, 158, 160],\r\n                chartreuse: [127, 255, 0],\r\n                chocolate: [210, 105, 30],\r\n                coral: [255, 127, 80],\r\n                cornflowerblue: [100, 149, 237],\r\n                cornsilk: [255, 248, 220],\r\n                crimson: [220, 20, 60],\r\n                cyan: [0, 255, 255],\r\n                darkblue: [0, 0, 139],\r\n                darkcyan: [0, 139, 139],\r\n                darkgoldenrod: [184, 134, 11],\r\n                darkgray: [169, 169, 169],\r\n                darkgreen: [0, 100, 0],\r\n                darkgrey: [169, 169, 169],\r\n                darkkhaki: [189, 183, 107],\r\n                darkmagenta: [139, 0, 139],\r\n                darkolivegreen: [85, 107, 47],\r\n                darkorange: [255, 140, 0],\r\n                darkorchid: [153, 50, 204],\r\n                darkred: [139, 0, 0],\r\n                darksalmon: [233, 150, 122],\r\n                darkseagreen: [143, 188, 143],\r\n                darkslateblue: [72, 61, 139],\r\n                darkslategray: [47, 79, 79],\r\n                darkslategrey: [47, 79, 79],\r\n                darkturquoise: [0, 206, 209],\r\n                darkviolet: [148, 0, 211],\r\n                deeppink: [255, 20, 147],\r\n                deepskyblue: [0, 191, 255],\r\n                dimgray: [105, 105, 105],\r\n                dimgrey: [105, 105, 105],\r\n                dodgerblue: [30, 144, 255],\r\n                firebrick: [178, 34, 34],\r\n                floralwhite: [255, 250, 240],\r\n                forestgreen: [34, 139, 34],\r\n                fuchsia: [255, 0, 255],\r\n                gainsboro: [220, 220, 220],\r\n                ghostwhite: [248, 248, 255],\r\n                gold: [255, 215, 0],\r\n                goldenrod: [218, 165, 32],\r\n                gray: [128, 128, 128],\r\n                green: [0, 128, 0],\r\n                greenyellow: [173, 255, 47],\r\n                grey: [128, 128, 128],\r\n                honeydew: [240, 255, 240],\r\n                hotpink: [255, 105, 180],\r\n                indianred: [205, 92, 92],\r\n                indigo: [75, 0, 130],\r\n                ivory: [255, 255, 240],\r\n                khaki: [240, 230, 140],\r\n                lavender: [230, 230, 250],\r\n                lavenderblush: [255, 240, 245],\r\n                lawngreen: [124, 252, 0],\r\n                lemonchiffon: [255, 250, 205],\r\n                lightblue: [173, 216, 230],\r\n                lightcoral: [240, 128, 128],\r\n                lightcyan: [224, 255, 255],\r\n                lightgoldenrodyellow: [250, 250, 210],\r\n                lightgray: [211, 211, 211],\r\n                lightgreen: [144, 238, 144],\r\n                lightgrey: [211, 211, 211],\r\n                lightpink: [255, 182, 193],\r\n                lightsalmon: [255, 160, 122],\r\n                lightseagreen: [32, 178, 170],\r\n                lightskyblue: [135, 206, 250],\r\n                lightslategray: [119, 136, 153],\r\n                lightslategrey: [119, 136, 153],\r\n                lightsteelblue: [176, 196, 222],\r\n                lightyellow: [255, 255, 224],\r\n                lime: [0, 255, 0],\r\n                limegreen: [50, 205, 50],\r\n                linen: [250, 240, 230],\r\n                magenta: [255, 0, 255],\r\n                maroon: [128, 0, 0],\r\n                mediumaquamarine: [102, 205, 170],\r\n                mediumblue: [0, 0, 205],\r\n                mediumorchid: [186, 85, 211],\r\n                mediumpurple: [147, 112, 219],\r\n                mediumseagreen: [60, 179, 113],\r\n                mediumslateblue: [123, 104, 238],\r\n                mediumspringgreen: [0, 250, 154],\r\n                mediumturquoise: [72, 209, 204],\r\n                mediumvioletred: [199, 21, 133],\r\n                midnightblue: [25, 25, 112],\r\n                mintcream: [245, 255, 250],\r\n                mistyrose: [255, 228, 225],\r\n                moccasin: [255, 228, 181],\r\n                navajowhite: [255, 222, 173],\r\n                navy: [0, 0, 128],\r\n                oldlace: [253, 245, 230],\r\n                olive: [128, 128, 0],\r\n                olivedrab: [107, 142, 35],\r\n                orange: [255, 165, 0],\r\n                orangered: [255, 69, 0],\r\n                orchid: [218, 112, 214],\r\n                palegoldenrod: [238, 232, 170],\r\n                palegreen: [152, 251, 152],\r\n                paleturquoise: [175, 238, 238],\r\n                palevioletred: [219, 112, 147],\r\n                papayawhip: [255, 239, 213],\r\n                peachpuff: [255, 218, 185],\r\n                peru: [205, 133, 63],\r\n                pink: [255, 192, 203],\r\n                plum: [221, 160, 221],\r\n                powderblue: [176, 224, 230],\r\n                purple: [128, 0, 128],\r\n                rebeccapurple: [102, 51, 153],\r\n                red: [255, 0, 0],\r\n                rosybrown: [188, 143, 143],\r\n                royalblue: [65, 105, 225],\r\n                saddlebrown: [139, 69, 19],\r\n                salmon: [250, 128, 114],\r\n                sandybrown: [244, 164, 96],\r\n                seagreen: [46, 139, 87],\r\n                seashell: [255, 245, 238],\r\n                sienna: [160, 82, 45],\r\n                silver: [192, 192, 192],\r\n                skyblue: [135, 206, 235],\r\n                slateblue: [106, 90, 205],\r\n                slategray: [112, 128, 144],\r\n                slategrey: [112, 128, 144],\r\n                snow: [255, 250, 250],\r\n                springgreen: [0, 255, 127],\r\n                steelblue: [70, 130, 180],\r\n                tan: [210, 180, 140],\r\n                teal: [0, 128, 128],\r\n                thistle: [216, 191, 216],\r\n                tomato: [255, 99, 71],\r\n                turquoise: [64, 224, 208],\r\n                violet: [238, 130, 238],\r\n                wheat: [245, 222, 179],\r\n                white: [255, 255, 255],\r\n                whitesmoke: [245, 245, 245],\r\n                yellow: [255, 255, 0],\r\n                yellowgreen: [154, 205, 50]\r\n            };\r\n\r\n            var reverseKeywords = {};\r\n            for (var key in cssKeywords) {\r\n                reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\r\n            }\r\n        }, {}], 4: [function(require, module, exports) {\r\n            var conversions = require(3);\r\n\r\n            var convert = function() {\r\n                return new Converter();\r\n            }\r\n\r\n            for (var func in conversions) {\r\n                // export Raw versions\r\n                convert[func + \"Raw\"] = (function(func) {\r\n                    // accept array or plain args\r\n                    return function(arg) {\r\n                        if (typeof arg == \"number\")\r\n                            arg = Array.prototype.slice.call(arguments);\r\n                        return conversions[func](arg);\r\n                    }\r\n                })(func);\r\n\r\n                var pair = /(\\w+)2(\\w+)/.exec(func),\r\n                    from = pair[1],\r\n                    to = pair[2];\r\n\r\n                // export rgb2hsl and [\"rgb\"][\"hsl\"]\r\n                convert[from] = convert[from] || {};\r\n\r\n                convert[from][to] = convert[func] = (function(func) {\r\n                    return function(arg) {\r\n                        if (typeof arg == \"number\")\r\n                            arg = Array.prototype.slice.call(arguments);\r\n\r\n                        var val = conversions[func](arg);\r\n                        if (typeof val == \"string\" || val === undefined)\r\n                            return val; // keyword\r\n\r\n                        for (var i = 0; i < val.length; i++)\r\n                            val[i] = Math.round(val[i]);\r\n                        return val;\r\n                    }\r\n                })(func);\r\n            }\r\n\r\n            /* Converter does lazy conversion and caching */\r\n            var Converter = function() {\r\n                this.convs = {};\r\n            };\r\n\r\n            /* Either get the values for a space or\r\n              set the values for a space, depending on args */\r\n            Converter.prototype.routeSpace = function(space, args) {\r\n                var values = args[0];\r\n                if (values === undefined) {\r\n                    // color.rgb()\r\n                    return this.getValues(space);\r\n                }\r\n                // color.rgb(10, 10, 10)\r\n                if (typeof values == \"number\") {\r\n                    values = Array.prototype.slice.call(args);\r\n                }\r\n\r\n                return this.setValues(space, values);\r\n            };\r\n\r\n            /* Set the values for a space, invalidating cache */\r\n            Converter.prototype.setValues = function(space, values) {\r\n                this.space = space;\r\n                this.convs = {};\r\n                this.convs[space] = values;\r\n                return this;\r\n            };\r\n\r\n            /* Get the values for a space. If there's already\r\n              a conversion for the space, fetch it, otherwise\r\n              compute it */\r\n            Converter.prototype.getValues = function(space) {\r\n                var vals = this.convs[space];\r\n                if (!vals) {\r\n                    var fspace = this.space,\r\n                        from = this.convs[fspace];\r\n                    vals = convert[fspace][space](from);\r\n\r\n                    this.convs[space] = vals;\r\n                }\r\n                return vals;\r\n            };\r\n\r\n            [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\r\n                Converter.prototype[space] = function(vals) {\r\n                    return this.routeSpace(space, arguments);\r\n                }\r\n            });\r\n\r\n            module.exports = convert;\r\n        }, { \"3\": 3 }], 5: [function(require, module, exports) {\r\n            'use strict'\r\n\r\n            module.exports = {\r\n                \"aliceblue\": [240, 248, 255],\r\n                \"antiquewhite\": [250, 235, 215],\r\n                \"aqua\": [0, 255, 255],\r\n                \"aquamarine\": [127, 255, 212],\r\n                \"azure\": [240, 255, 255],\r\n                \"beige\": [245, 245, 220],\r\n                \"bisque\": [255, 228, 196],\r\n                \"black\": [0, 0, 0],\r\n                \"blanchedalmond\": [255, 235, 205],\r\n                \"blue\": [0, 0, 255],\r\n                \"blueviolet\": [138, 43, 226],\r\n                \"brown\": [165, 42, 42],\r\n                \"burlywood\": [222, 184, 135],\r\n                \"cadetblue\": [95, 158, 160],\r\n                \"chartreuse\": [127, 255, 0],\r\n                \"chocolate\": [210, 105, 30],\r\n                \"coral\": [255, 127, 80],\r\n                \"cornflowerblue\": [100, 149, 237],\r\n                \"cornsilk\": [255, 248, 220],\r\n                \"crimson\": [220, 20, 60],\r\n                \"cyan\": [0, 255, 255],\r\n                \"darkblue\": [0, 0, 139],\r\n                \"darkcyan\": [0, 139, 139],\r\n                \"darkgoldenrod\": [184, 134, 11],\r\n                \"darkgray\": [169, 169, 169],\r\n                \"darkgreen\": [0, 100, 0],\r\n                \"darkgrey\": [169, 169, 169],\r\n                \"darkkhaki\": [189, 183, 107],\r\n                \"darkmagenta\": [139, 0, 139],\r\n                \"darkolivegreen\": [85, 107, 47],\r\n                \"darkorange\": [255, 140, 0],\r\n                \"darkorchid\": [153, 50, 204],\r\n                \"darkred\": [139, 0, 0],\r\n                \"darksalmon\": [233, 150, 122],\r\n                \"darkseagreen\": [143, 188, 143],\r\n                \"darkslateblue\": [72, 61, 139],\r\n                \"darkslategray\": [47, 79, 79],\r\n                \"darkslategrey\": [47, 79, 79],\r\n                \"darkturquoise\": [0, 206, 209],\r\n                \"darkviolet\": [148, 0, 211],\r\n                \"deeppink\": [255, 20, 147],\r\n                \"deepskyblue\": [0, 191, 255],\r\n                \"dimgray\": [105, 105, 105],\r\n                \"dimgrey\": [105, 105, 105],\r\n                \"dodgerblue\": [30, 144, 255],\r\n                \"firebrick\": [178, 34, 34],\r\n                \"floralwhite\": [255, 250, 240],\r\n                \"forestgreen\": [34, 139, 34],\r\n                \"fuchsia\": [255, 0, 255],\r\n                \"gainsboro\": [220, 220, 220],\r\n                \"ghostwhite\": [248, 248, 255],\r\n                \"gold\": [255, 215, 0],\r\n                \"goldenrod\": [218, 165, 32],\r\n                \"gray\": [128, 128, 128],\r\n                \"green\": [0, 128, 0],\r\n                \"greenyellow\": [173, 255, 47],\r\n                \"grey\": [128, 128, 128],\r\n                \"honeydew\": [240, 255, 240],\r\n                \"hotpink\": [255, 105, 180],\r\n                \"indianred\": [205, 92, 92],\r\n                \"indigo\": [75, 0, 130],\r\n                \"ivory\": [255, 255, 240],\r\n                \"khaki\": [240, 230, 140],\r\n                \"lavender\": [230, 230, 250],\r\n                \"lavenderblush\": [255, 240, 245],\r\n                \"lawngreen\": [124, 252, 0],\r\n                \"lemonchiffon\": [255, 250, 205],\r\n                \"lightblue\": [173, 216, 230],\r\n                \"lightcoral\": [240, 128, 128],\r\n                \"lightcyan\": [224, 255, 255],\r\n                \"lightgoldenrodyellow\": [250, 250, 210],\r\n                \"lightgray\": [211, 211, 211],\r\n                \"lightgreen\": [144, 238, 144],\r\n                \"lightgrey\": [211, 211, 211],\r\n                \"lightpink\": [255, 182, 193],\r\n                \"lightsalmon\": [255, 160, 122],\r\n                \"lightseagreen\": [32, 178, 170],\r\n                \"lightskyblue\": [135, 206, 250],\r\n                \"lightslategray\": [119, 136, 153],\r\n                \"lightslategrey\": [119, 136, 153],\r\n                \"lightsteelblue\": [176, 196, 222],\r\n                \"lightyellow\": [255, 255, 224],\r\n                \"lime\": [0, 255, 0],\r\n                \"limegreen\": [50, 205, 50],\r\n                \"linen\": [250, 240, 230],\r\n                \"magenta\": [255, 0, 255],\r\n                \"maroon\": [128, 0, 0],\r\n                \"mediumaquamarine\": [102, 205, 170],\r\n                \"mediumblue\": [0, 0, 205],\r\n                \"mediumorchid\": [186, 85, 211],\r\n                \"mediumpurple\": [147, 112, 219],\r\n                \"mediumseagreen\": [60, 179, 113],\r\n                \"mediumslateblue\": [123, 104, 238],\r\n                \"mediumspringgreen\": [0, 250, 154],\r\n                \"mediumturquoise\": [72, 209, 204],\r\n                \"mediumvioletred\": [199, 21, 133],\r\n                \"midnightblue\": [25, 25, 112],\r\n                \"mintcream\": [245, 255, 250],\r\n                \"mistyrose\": [255, 228, 225],\r\n                \"moccasin\": [255, 228, 181],\r\n                \"navajowhite\": [255, 222, 173],\r\n                \"navy\": [0, 0, 128],\r\n                \"oldlace\": [253, 245, 230],\r\n                \"olive\": [128, 128, 0],\r\n                \"olivedrab\": [107, 142, 35],\r\n                \"orange\": [255, 165, 0],\r\n                \"orangered\": [255, 69, 0],\r\n                \"orchid\": [218, 112, 214],\r\n                \"palegoldenrod\": [238, 232, 170],\r\n                \"palegreen\": [152, 251, 152],\r\n                \"paleturquoise\": [175, 238, 238],\r\n                \"palevioletred\": [219, 112, 147],\r\n                \"papayawhip\": [255, 239, 213],\r\n                \"peachpuff\": [255, 218, 185],\r\n                \"peru\": [205, 133, 63],\r\n                \"pink\": [255, 192, 203],\r\n                \"plum\": [221, 160, 221],\r\n                \"powderblue\": [176, 224, 230],\r\n                \"purple\": [128, 0, 128],\r\n                \"rebeccapurple\": [102, 51, 153],\r\n                \"red\": [255, 0, 0],\r\n                \"rosybrown\": [188, 143, 143],\r\n                \"royalblue\": [65, 105, 225],\r\n                \"saddlebrown\": [139, 69, 19],\r\n                \"salmon\": [250, 128, 114],\r\n                \"sandybrown\": [244, 164, 96],\r\n                \"seagreen\": [46, 139, 87],\r\n                \"seashell\": [255, 245, 238],\r\n                \"sienna\": [160, 82, 45],\r\n                \"silver\": [192, 192, 192],\r\n                \"skyblue\": [135, 206, 235],\r\n                \"slateblue\": [106, 90, 205],\r\n                \"slategray\": [112, 128, 144],\r\n                \"slategrey\": [112, 128, 144],\r\n                \"snow\": [255, 250, 250],\r\n                \"springgreen\": [0, 255, 127],\r\n                \"steelblue\": [70, 130, 180],\r\n                \"tan\": [210, 180, 140],\r\n                \"teal\": [0, 128, 128],\r\n                \"thistle\": [216, 191, 216],\r\n                \"tomato\": [255, 99, 71],\r\n                \"turquoise\": [64, 224, 208],\r\n                \"violet\": [238, 130, 238],\r\n                \"wheat\": [245, 222, 179],\r\n                \"white\": [255, 255, 255],\r\n                \"whitesmoke\": [245, 245, 245],\r\n                \"yellow\": [255, 255, 0],\r\n                \"yellowgreen\": [154, 205, 50]\r\n            };\r\n        }, {}], 6: [function(require, module, exports) {\r\n            /**\r\n             * @namespace Chart\r\n             */\r\n            var Chart = require(20)();\r\n\r\n            Chart.helpers = require(36);\r\n\r\n            // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\r\n            require(18)(Chart);\r\n\r\n            Chart.defaults = require(16);\r\n            Chart.Element = require(17);\r\n            Chart.elements = require(31);\r\n            Chart.Interaction = require(19);\r\n            Chart.layouts = require(21);\r\n            Chart.platform = require(39);\r\n            Chart.plugins = require(22);\r\n            Chart.Ticks = require(25);\r\n\r\n            require(13)(Chart);\r\n            require(14)(Chart);\r\n            require(15)(Chart);\r\n            require(24)(Chart);\r\n            require(23)(Chart);\r\n            require(26)(Chart);\r\n\r\n            require(46)(Chart);\r\n            require(44)(Chart);\r\n            require(45)(Chart);\r\n            // require('./scales/scale.logarithmic')(Chart);\r\n            // require('./scales/scale.radialLinear')(Chart);\r\n            // require('./scales/scale.time')(Chart);\r\n\r\n            // Controllers must be loaded after elements\r\n            // See Chart.core.datasetController.dataElementType\r\n            require(10)(Chart);\r\n            // require('./controllers/controller.bubble')(Chart);\r\n            require(11)(Chart);\r\n            require(12)(Chart);\r\n            // require('./controllers/controller.polarArea')(Chart);\r\n            // require('./controllers/controller.radar')(Chart);\r\n            // require('./controllers/controller.scatter')(Chart);\r\n\r\n            require(7)(Chart);\r\n            // require('./charts/Chart.Bubble')(Chart);\r\n            require(8)(Chart);\r\n            require(9)(Chart);\r\n            // require('./charts/Chart.PolarArea')(Chart);\r\n            // require('./charts/Chart.Radar')(Chart);\r\n            // require('./charts/Chart.Scatter')(Chart);\r\n\r\n            // Loading built-it plugins\r\n            var plugins = require(40);\r\n            for (var k in plugins) {\r\n                if (plugins.hasOwnProperty(k)) {\r\n                    Chart.plugins.register(plugins[k]);\r\n                }\r\n            }\r\n\r\n            Chart.platform.initialize();\r\n\r\n            module.exports = Chart;\r\n            if (typeof window !== 'undefined') {\r\n                window.Chart = Chart;\r\n            }\r\n        }, { \"10\": 10, \"11\": 11, \"12\": 12, \"13\": 13, \"14\": 14, \"15\": 15, \"16\": 16, \"17\": 17, \"18\": 18, \"19\": 19, \"20\": 20, \"21\": 21, \"22\": 22, \"23\": 23, \"24\": 24, \"25\": 25, \"26\": 26, \"31\": 31, \"36\": 36, \"39\": 39, \"40\": 40, \"44\": 44, \"45\": 45, \"46\": 46, \"7\": 7, \"8\": 8, \"9\": 9 }], 7: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Bar = function(context, config) {\r\n                    config.type = 'bar';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 8: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Doughnut = function(context, config) {\r\n                    config.type = 'doughnut';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 9: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Line = function(context, config) {\r\n                    config.type = 'line';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 10: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('bar', {\r\n                hover: {\r\n                    mode: 'label'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'category',\r\n\r\n                        // Specific to Bar Controller\r\n                        categoryPercentage: 0.8,\r\n                        barPercentage: 0.9,\r\n\r\n                        // offset settings\r\n                        offset: true,\r\n\r\n                        // grid line settings\r\n                        gridLines: {\r\n                            offsetGridLines: true\r\n                        }\r\n                    }],\r\n\r\n                    yAxes: [{\r\n                        type: 'linear'\r\n                    }]\r\n                }\r\n            });\r\n\r\n            defaults._set('horizontalBar', {\r\n                hover: {\r\n                    mode: 'index',\r\n                    axis: 'y'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'linear',\r\n                        position: 'bottom'\r\n                    }],\r\n\r\n                    yAxes: [{\r\n                        position: 'left',\r\n                        type: 'category',\r\n\r\n                        // Specific to Horizontal Bar Controller\r\n                        categoryPercentage: 0.8,\r\n                        barPercentage: 0.9,\r\n\r\n                        // offset settings\r\n                        offset: true,\r\n\r\n                        // grid line settings\r\n                        gridLines: {\r\n                            offsetGridLines: true\r\n                        }\r\n                    }]\r\n                },\r\n\r\n                elements: {\r\n                    rectangle: {\r\n                        borderSkipped: 'left'\r\n                    }\r\n                },\r\n\r\n                tooltips: {\r\n                    callbacks: {\r\n                        title: function(item, data) {\r\n                            // Pick first xLabel for now\r\n                            var title = '';\r\n\r\n                            if (item.length > 0) {\r\n                                if (item[0].yLabel) {\r\n                                    title = item[0].yLabel;\r\n                                } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\r\n                                    title = data.labels[item[0].index];\r\n                                }\r\n                            }\r\n\r\n                            return title;\r\n                        },\r\n\r\n                        label: function(item, data) {\r\n                            var datasetLabel = data.datasets[item.datasetIndex].label || '';\r\n                            return datasetLabel + ': ' + item.xLabel;\r\n                        }\r\n                    },\r\n                    mode: 'index',\r\n                    axis: 'y'\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\r\n             * @private\r\n             */\r\n            function computeMinSampleSize(scale, pixels) {\r\n                var min = scale.isHorizontal() ? scale.width : scale.height;\r\n                var ticks = scale.getTicks();\r\n                var prev, curr, i, ilen;\r\n\r\n                for (i = 1, ilen = pixels.length; i < ilen; ++i) {\r\n                    min = Math.min(min, pixels[i] - pixels[i - 1]);\r\n                }\r\n\r\n                for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n                    curr = scale.getPixelForTick(i);\r\n                    min = i > 0 ? Math.min(min, curr - prev) : min;\r\n                    prev = curr;\r\n                }\r\n\r\n                return min;\r\n            }\r\n\r\n            /**\r\n             * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\r\n             * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\r\n             * mode currently always generates bars equally sized (until we introduce scriptable options?).\r\n             * @private\r\n             */\r\n            function computeFitCategoryTraits(index, ruler, options) {\r\n                var thickness = options.barThickness;\r\n                var count = ruler.stackCount;\r\n                var curr = ruler.pixels[index];\r\n                var size, ratio;\r\n\r\n                if (helpers.isNullOrUndef(thickness)) {\r\n                    size = ruler.min * options.categoryPercentage;\r\n                    ratio = options.barPercentage;\r\n                } else {\r\n                    // When bar thickness is enforced, category and bar percentages are ignored.\r\n                    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\r\n                    // and deprecate barPercentage since this value is ignored when thickness is absolute.\r\n                    size = thickness * count;\r\n                    ratio = 1;\r\n                }\r\n\r\n                return {\r\n                    chunk: size / count,\r\n                    ratio: ratio,\r\n                    start: curr - (size / 2)\r\n                };\r\n            }\r\n\r\n            /**\r\n             * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\r\n             * percentage options are 1), based on the previous and following categories. This mode\r\n             * generates bars with different widths when data are not evenly spaced.\r\n             * @private\r\n             */\r\n            function computeFlexCategoryTraits(index, ruler, options) {\r\n                var pixels = ruler.pixels;\r\n                var curr = pixels[index];\r\n                var prev = index > 0 ? pixels[index - 1] : null;\r\n                var next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n                var percent = options.categoryPercentage;\r\n                var start, size;\r\n\r\n                if (prev === null) {\r\n                    // first data: its size is double based on the next point or,\r\n                    // if it's also the last data, we use the scale end extremity.\r\n                    prev = curr - (next === null ? ruler.end - curr : next - curr);\r\n                }\r\n\r\n                if (next === null) {\r\n                    // last data: its size is also double based on the previous point.\r\n                    next = curr + curr - prev;\r\n                }\r\n\r\n                start = curr - ((curr - prev) / 2) * percent;\r\n                size = ((next - prev) / 2) * percent;\r\n\r\n                return {\r\n                    chunk: size / ruler.stackCount,\r\n                    ratio: options.barPercentage,\r\n                    start: start\r\n                };\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.controllers.bar = Chart.DatasetController.extend({\r\n                    dataElementType: elements.Rectangle,\r\n\r\n                    initialize: function() {\r\n                        var me = this;\r\n                        var meta;\r\n\r\n                        Chart.DatasetController.prototype.initialize.apply(me, arguments);\r\n\r\n                        meta = me.getMeta();\r\n                        meta.stack = me.getDataset().stack;\r\n                        meta.bar = true;\r\n                    },\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var rects = me.getMeta().data;\r\n                        var i, ilen;\r\n\r\n                        me._ruler = me.getRuler();\r\n\r\n                        for (i = 0, ilen = rects.length; i < ilen; ++i) {\r\n                            me.updateElement(rects[i], i, reset);\r\n                        }\r\n                    },\r\n\r\n                    updateElement: function(rectangle, index, reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var dataset = me.getDataset();\r\n                        var custom = rectangle.custom || {};\r\n                        var rectangleOptions = chart.options.elements.rectangle;\r\n\r\n                        rectangle._xScale = me.getScaleForId(meta.xAxisID);\r\n                        rectangle._yScale = me.getScaleForId(meta.yAxisID);\r\n                        rectangle._datasetIndex = me.index;\r\n                        rectangle._index = index;\r\n\r\n                        rectangle._model = {\r\n                            datasetLabel: dataset.label,\r\n                            label: chart.data.labels[index],\r\n                            borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\r\n                            backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\r\n                            borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\r\n                            borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\r\n                        };\r\n\r\n                        me.updateElementGeometry(rectangle, index, reset);\r\n\r\n                        rectangle.pivot();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    updateElementGeometry: function(rectangle, index, reset) {\r\n                        var me = this;\r\n                        var model = rectangle._model;\r\n                        var vscale = me.getValueScale();\r\n                        var base = vscale.getBasePixel();\r\n                        var horizontal = vscale.isHorizontal();\r\n                        var ruler = me._ruler || me.getRuler();\r\n                        var vpixels = me.calculateBarValuePixels(me.index, index);\r\n                        var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\r\n\r\n                        model.horizontal = horizontal;\r\n                        model.base = reset ? base : vpixels.base;\r\n                        model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\r\n                        model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\r\n                        model.height = horizontal ? ipixels.size : undefined;\r\n                        model.width = horizontal ? undefined : ipixels.size;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScaleId: function() {\r\n                        return this.getMeta().yAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScaleId: function() {\r\n                        return this.getMeta().xAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScale: function() {\r\n                        return this.getScaleForId(this.getValueScaleId());\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScale: function() {\r\n                        return this.getScaleForId(this.getIndexScaleId());\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the stacks based on groups and bar visibility.\r\n                     * @param {Number} [last] - The dataset index\r\n                     * @returns {Array} The stack list\r\n                     * @private\r\n                     */\r\n                    _getStacks: function(last) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var scale = me.getIndexScale();\r\n                        var stacked = scale.options.stacked;\r\n                        var ilen = last === undefined ? chart.data.datasets.length : last + 1;\r\n                        var stacks = [];\r\n                        var i, meta;\r\n\r\n                        for (i = 0; i < ilen; ++i) {\r\n                            meta = chart.getDatasetMeta(i);\r\n                            if (meta.bar && chart.isDatasetVisible(i) &&\r\n                                (stacked === false ||\r\n                                    (stacked === true && stacks.indexOf(meta.stack) === -1) ||\r\n                                    (stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\r\n                                stacks.push(meta.stack);\r\n                            }\r\n                        }\r\n\r\n                        return stacks;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the effective number of stacks based on groups and bar visibility.\r\n                     * @private\r\n                     */\r\n                    getStackCount: function() {\r\n                        return this._getStacks().length;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the stack index for the given dataset based on groups and bar visibility.\r\n                     * @param {Number} [datasetIndex] - The dataset index\r\n                     * @param {String} [name] - The stack name to find\r\n                     * @returns {Number} The stack index\r\n                     * @private\r\n                     */\r\n                    getStackIndex: function(datasetIndex, name) {\r\n                        var stacks = this._getStacks(datasetIndex);\r\n                        var index = (name !== undefined)\r\n                            ? stacks.indexOf(name)\r\n                            : -1; // indexOf returns -1 if element is not present\r\n\r\n                        return (index === -1)\r\n                            ? stacks.length - 1\r\n                            : index;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getRuler: function() {\r\n                        var me = this;\r\n                        var scale = me.getIndexScale();\r\n                        var stackCount = me.getStackCount();\r\n                        var datasetIndex = me.index;\r\n                        var isHorizontal = scale.isHorizontal();\r\n                        var start = isHorizontal ? scale.left : scale.top;\r\n                        var end = start + (isHorizontal ? scale.width : scale.height);\r\n                        var pixels = [];\r\n                        var i, ilen, min;\r\n\r\n                        for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\r\n                            pixels.push(scale.getPixelForValue(null, i, datasetIndex));\r\n                        }\r\n\r\n                        min = helpers.isNullOrUndef(scale.options.barThickness)\r\n                            ? computeMinSampleSize(scale, pixels)\r\n                            : -1;\r\n\r\n                        return {\r\n                            min: min,\r\n                            pixels: pixels,\r\n                            start: start,\r\n                            end: end,\r\n                            stackCount: stackCount,\r\n                            scale: scale\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Note: pixel values are not clamped to the scale area.\r\n                     * @private\r\n                     */\r\n                    calculateBarValuePixels: function(datasetIndex, index) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var scale = me.getValueScale();\r\n                        var datasets = chart.data.datasets;\r\n                        var value = scale.getRightValue(datasets[datasetIndex].data[index]);\r\n                        var stacked = scale.options.stacked;\r\n                        var stack = meta.stack;\r\n                        var start = 0;\r\n                        var i, imeta, ivalue, base, head, size;\r\n\r\n                        if (stacked || (stacked === undefined && stack !== undefined)) {\r\n                            for (i = 0; i < datasetIndex; ++i) {\r\n                                imeta = chart.getDatasetMeta(i);\r\n\r\n                                if (imeta.bar &&\r\n                                    imeta.stack === stack &&\r\n                                    imeta.controller.getValueScaleId() === scale.id &&\r\n                                    chart.isDatasetVisible(i)) {\r\n                                    ivalue = scale.getRightValue(datasets[i].data[index]);\r\n                                    if ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\r\n                                        start += ivalue;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        base = scale.getPixelForValue(start);\r\n                        head = scale.getPixelForValue(start + value);\r\n                        size = (head - base) / 2;\r\n\r\n                        return {\r\n                            size: size,\r\n                            base: base,\r\n                            head: head,\r\n                            center: head + size / 2\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    calculateBarIndexPixels: function(datasetIndex, index, ruler) {\r\n                        var me = this;\r\n                        var options = ruler.scale.options;\r\n                        var range = options.barThickness === 'flex'\r\n                            ? computeFlexCategoryTraits(index, ruler, options)\r\n                            : computeFitCategoryTraits(index, ruler, options);\r\n\r\n                        var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\r\n                        var center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\r\n                        var size = Math.min(\r\n                            helpers.valueOrDefault(options.maxBarThickness, Infinity),\r\n                            range.chunk * range.ratio);\r\n\r\n                        return {\r\n                            base: center - size / 2,\r\n                            head: center + size / 2,\r\n                            center: center,\r\n                            size: size\r\n                        };\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var scale = me.getValueScale();\r\n                        var rects = me.getMeta().data;\r\n                        var dataset = me.getDataset();\r\n                        var ilen = rects.length;\r\n                        var i = 0;\r\n\r\n                        helpers.canvas.clipArea(chart.ctx, chart.chartArea);\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            if (!isNaN(scale.getRightValue(dataset.data[i]))) {\r\n                                rects[i].draw();\r\n                            }\r\n                        }\r\n\r\n                        helpers.canvas.unclipArea(chart.ctx);\r\n                    },\r\n\r\n                    setHoverStyle: function(rectangle) {\r\n                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n                        var index = rectangle._index;\r\n                        var custom = rectangle.custom || {};\r\n                        var model = rectangle._model;\r\n\r\n                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    removeHoverStyle: function(rectangle) {\r\n                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n                        var index = rectangle._index;\r\n                        var custom = rectangle.custom || {};\r\n                        var model = rectangle._model;\r\n                        var rectangleElementOptions = this.chart.options.elements.rectangle;\r\n\r\n                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\r\n                        model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\r\n                        model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\r\n                    }\r\n                });\r\n\r\n                Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScaleId: function() {\r\n                        return this.getMeta().xAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScaleId: function() {\r\n                        return this.getMeta().yAxisID;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 11: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('doughnut', {\r\n                animation: {\r\n                    // Boolean - Whether we animate the rotation of the Doughnut\r\n                    animateRotate: true,\r\n                    // Boolean - Whether we animate scaling the Doughnut from the centre\r\n                    animateScale: false\r\n                },\r\n                hover: {\r\n                    mode: 'single'\r\n                },\r\n                legendCallback: function(chart) {\r\n                    var text = [];\r\n                    text.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n                    var data = chart.data;\r\n                    var datasets = data.datasets;\r\n                    var labels = data.labels;\r\n\r\n                    if (datasets.length) {\r\n                        for (var i = 0; i < datasets[0].data.length; ++i) {\r\n                            text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\r\n                            if (labels[i]) {\r\n                                text.push(labels[i]);\r\n                            }\r\n                            text.push('</li>');\r\n                        }\r\n                    }\r\n\r\n                    text.push('</ul>');\r\n                    return text.join('');\r\n                },\r\n                legend: {\r\n                    labels: {\r\n                        generateLabels: function(chart) {\r\n                            var data = chart.data;\r\n                            if (data.labels.length && data.datasets.length) {\r\n                                return data.labels.map(function(label, i) {\r\n                                    var meta = chart.getDatasetMeta(0);\r\n                                    var ds = data.datasets[0];\r\n                                    var arc = meta.data[i];\r\n                                    var custom = arc && arc.custom || {};\r\n                                    var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n                                    var arcOpts = chart.options.elements.arc;\r\n                                    var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n                                    var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n                                    var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\r\n                                    return {\r\n                                        text: label,\r\n                                        fillStyle: fill,\r\n                                        strokeStyle: stroke,\r\n                                        lineWidth: bw,\r\n                                        hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n                                        // Extra data used for toggling the correct item\r\n                                        index: i\r\n                                    };\r\n                                });\r\n                            }\r\n                            return [];\r\n                        }\r\n                    },\r\n\r\n                    onClick: function(e, legendItem) {\r\n                        var index = legendItem.index;\r\n                        var chart = this.chart;\r\n                        var i, ilen, meta;\r\n\r\n                        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n                            meta = chart.getDatasetMeta(i);\r\n                            // toggle visibility of index if exists\r\n                            if (meta.data[index]) {\r\n                                meta.data[index].hidden = !meta.data[index].hidden;\r\n                            }\r\n                        }\r\n\r\n                        chart.update();\r\n                    }\r\n                },\r\n\r\n                // The percentage of the chart that we cut out of the middle.\r\n                cutoutPercentage: 50,\r\n\r\n                // The rotation of the chart, where the first data arc begins.\r\n                rotation: Math.PI * -0.5,\r\n\r\n                // The total circumference of the chart.\r\n                circumference: Math.PI * 2.0,\r\n\r\n                // Need to override these to give a nice default\r\n                tooltips: {\r\n                    callbacks: {\r\n                        title: function() {\r\n                            return '';\r\n                        },\r\n                        label: function(tooltipItem, data) {\r\n                            var dataLabel = data.labels[tooltipItem.index];\r\n                            var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\r\n                            if (helpers.isArray(dataLabel)) {\r\n                                // show value on first line of multiline label\r\n                                // need to clone because we are changing the value\r\n                                dataLabel = dataLabel.slice();\r\n                                dataLabel[0] += value;\r\n                            } else {\r\n                                dataLabel += value;\r\n                            }\r\n\r\n                            return dataLabel;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            defaults._set('pie', helpers.clone(defaults.doughnut));\r\n            defaults._set('pie', {\r\n                cutoutPercentage: 0\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\r\n                    dataElementType: elements.Arc,\r\n\r\n                    linkScales: helpers.noop,\r\n\r\n                    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\r\n                    getRingIndex: function(datasetIndex) {\r\n                        var ringIndex = 0;\r\n\r\n                        for (var j = 0; j < datasetIndex; ++j) {\r\n                            if (this.chart.isDatasetVisible(j)) {\r\n                                ++ringIndex;\r\n                            }\r\n                        }\r\n\r\n                        return ringIndex;\r\n                    },\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var chartArea = chart.chartArea;\r\n                        var opts = chart.options;\r\n                        var arcOpts = opts.elements.arc;\r\n                        var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\r\n                        var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\r\n                        var minSize = Math.min(availableWidth, availableHeight);\r\n                        var offset = { x: 0, y: 0 };\r\n                        var meta = me.getMeta();\r\n                        var cutoutPercentage = opts.cutoutPercentage;\r\n                        var circumference = opts.circumference;\r\n\r\n                        // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\r\n                        if (circumference < Math.PI * 2.0) {\r\n                            var startAngle = opts.rotation % (Math.PI * 2.0);\r\n                            startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\r\n                            var endAngle = startAngle + circumference;\r\n                            var start = { x: Math.cos(startAngle), y: Math.sin(startAngle) };\r\n                            var end = { x: Math.cos(endAngle), y: Math.sin(endAngle) };\r\n                            var contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\r\n                            var contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\r\n                            var contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\r\n                            var contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\r\n                            var cutout = cutoutPercentage / 100.0;\r\n                            var min = { x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout)) };\r\n                            var max = { x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout)) };\r\n                            var size = { width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5 };\r\n                            minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\r\n                            offset = { x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5 };\r\n                        }\r\n\r\n                        chart.borderWidth = me.getMaxBorderWidth(meta.data);\r\n                        chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\r\n                        chart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\r\n                        chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n                        chart.offsetX = offset.x * chart.outerRadius;\r\n                        chart.offsetY = offset.y * chart.outerRadius;\r\n\r\n                        meta.total = me.calculateTotal();\r\n\r\n                        me.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\r\n                        me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\r\n\r\n                        helpers.each(meta.data, function(arc, index) {\r\n                            me.updateElement(arc, index, reset);\r\n                        });\r\n                    },\r\n\r\n                    updateElement: function(arc, index, reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var chartArea = chart.chartArea;\r\n                        var opts = chart.options;\r\n                        var animationOpts = opts.animation;\r\n                        var centerX = (chartArea.left + chartArea.right) / 2;\r\n                        var centerY = (chartArea.top + chartArea.bottom) / 2;\r\n                        var startAngle = opts.rotation; // non reset case handled later\r\n                        var endAngle = opts.rotation; // non reset case handled later\r\n                        var dataset = me.getDataset();\r\n                        var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\r\n                        var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\r\n                        var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\r\n                        var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n\r\n                        helpers.extend(arc, {\r\n                            // Utility\r\n                            _datasetIndex: me.index,\r\n                            _index: index,\r\n\r\n                            // Desired view properties\r\n                            _model: {\r\n                                x: centerX + chart.offsetX,\r\n                                y: centerY + chart.offsetY,\r\n                                startAngle: startAngle,\r\n                                endAngle: endAngle,\r\n                                circumference: circumference,\r\n                                outerRadius: outerRadius,\r\n                                innerRadius: innerRadius,\r\n                                label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\r\n                            }\r\n                        });\r\n\r\n                        var model = arc._model;\r\n                        // Resets the visual styles\r\n                        this.removeHoverStyle(arc);\r\n\r\n                        // Set correct angles if not resetting\r\n                        if (!reset || !animationOpts.animateRotate) {\r\n                            if (index === 0) {\r\n                                model.startAngle = opts.rotation;\r\n                            } else {\r\n                                model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\r\n                            }\r\n\r\n                            model.endAngle = model.startAngle + model.circumference;\r\n                        }\r\n\r\n                        arc.pivot();\r\n                    },\r\n\r\n                    removeHoverStyle: function(arc) {\r\n                        Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n                    },\r\n\r\n                    calculateTotal: function() {\r\n                        var dataset = this.getDataset();\r\n                        var meta = this.getMeta();\r\n                        var total = 0;\r\n                        var value;\r\n\r\n                        helpers.each(meta.data, function(element, index) {\r\n                            value = dataset.data[index];\r\n                            if (!isNaN(value) && !element.hidden) {\r\n                                total += Math.abs(value);\r\n                            }\r\n                        });\r\n\r\n                        /* if (total === 0) {\r\n                            total = NaN;\r\n                        }*/\r\n\r\n                        return total;\r\n                    },\r\n\r\n                    calculateCircumference: function(value) {\r\n                        var total = this.getMeta().total;\r\n                        if (total > 0 && !isNaN(value)) {\r\n                            return (Math.PI * 2.0) * (Math.abs(value) / total);\r\n                        }\r\n                        return 0;\r\n                    },\r\n\r\n                    // gets the max border or hover width to properly scale pie charts\r\n                    getMaxBorderWidth: function(arcs) {\r\n                        var max = 0;\r\n                        var index = this.index;\r\n                        var length = arcs.length;\r\n                        var borderWidth;\r\n                        var hoverWidth;\r\n\r\n                        for (var i = 0; i < length; i++) {\r\n                            borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\r\n                            hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\r\n\r\n                            max = borderWidth > max ? borderWidth : max;\r\n                            max = hoverWidth > max ? hoverWidth : max;\r\n                        }\r\n                        return max;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 12: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('line', {\r\n                showLines: true,\r\n                spanGaps: false,\r\n\r\n                hover: {\r\n                    mode: 'label'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'category',\r\n                        id: 'x-axis-0'\r\n                    }],\r\n                    yAxes: [{\r\n                        type: 'linear',\r\n                        id: 'y-axis-0'\r\n                    }]\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                function lineEnabled(dataset, options) {\r\n                    return helpers.valueOrDefault(dataset.showLine, options.showLines);\r\n                }\r\n\r\n                Chart.controllers.line = Chart.DatasetController.extend({\r\n                    datasetElementType: elements.Line,\r\n\r\n                    dataElementType: elements.Point,\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var line = meta.dataset;\r\n                        var points = meta.data || [];\r\n                        var options = me.chart.options;\r\n                        var lineElementOptions = options.elements.line;\r\n                        var scale = me.getScaleForId(meta.yAxisID);\r\n                        var i, ilen, custom;\r\n                        var dataset = me.getDataset();\r\n                        var showLine = lineEnabled(dataset, options);\r\n\r\n                        // Update Line\r\n                        if (showLine) {\r\n                            custom = line.custom || {};\r\n\r\n                            // Compatibility: If the properties are defined with only the old name, use those values\r\n                            if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n                                dataset.lineTension = dataset.tension;\r\n                            }\r\n\r\n                            // Utility\r\n                            line._scale = scale;\r\n                            line._datasetIndex = me.index;\r\n                            // Data\r\n                            line._children = points;\r\n                            // Model\r\n                            line._model = {\r\n                                // Appearance\r\n                                // The default behavior of lines is to break at null values, according\r\n                                // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\r\n                                // This option gives lines the ability to span gaps\r\n                                spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\r\n                                tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n                                backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n                                borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n                                borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n                                borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n                                borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n                                borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n                                borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n                                fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n                                steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\r\n                                cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\r\n                            };\r\n\r\n                            line.pivot();\r\n                        }\r\n\r\n                        // Update Points\r\n                        for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                            me.updateElement(points[i], i, reset);\r\n                        }\r\n\r\n                        if (showLine && line._model.tension !== 0) {\r\n                            me.updateBezierControlPoints();\r\n                        }\r\n\r\n                        // Now pivot the point for animation\r\n                        for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                            points[i].pivot();\r\n                        }\r\n                    },\r\n\r\n                    getPointBackgroundColor: function(point, index) {\r\n                        var backgroundColor = this.chart.options.elements.point.backgroundColor;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (custom.backgroundColor) {\r\n                            backgroundColor = custom.backgroundColor;\r\n                        } else if (dataset.pointBackgroundColor) {\r\n                            backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\r\n                        } else if (dataset.backgroundColor) {\r\n                            backgroundColor = dataset.backgroundColor;\r\n                        }\r\n\r\n                        return backgroundColor;\r\n                    },\r\n\r\n                    getPointBorderColor: function(point, index) {\r\n                        var borderColor = this.chart.options.elements.point.borderColor;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (custom.borderColor) {\r\n                            borderColor = custom.borderColor;\r\n                        } else if (dataset.pointBorderColor) {\r\n                            borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\r\n                        } else if (dataset.borderColor) {\r\n                            borderColor = dataset.borderColor;\r\n                        }\r\n\r\n                        return borderColor;\r\n                    },\r\n\r\n                    getPointBorderWidth: function(point, index) {\r\n                        var borderWidth = this.chart.options.elements.point.borderWidth;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (!isNaN(custom.borderWidth)) {\r\n                            borderWidth = custom.borderWidth;\r\n                        } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\r\n                            borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\r\n                        } else if (!isNaN(dataset.borderWidth)) {\r\n                            borderWidth = dataset.borderWidth;\r\n                        }\r\n\r\n                        return borderWidth;\r\n                    },\r\n\r\n                    updateElement: function(point, index, reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var custom = point.custom || {};\r\n                        var dataset = me.getDataset();\r\n                        var datasetIndex = me.index;\r\n                        var value = dataset.data[index];\r\n                        var yScale = me.getScaleForId(meta.yAxisID);\r\n                        var xScale = me.getScaleForId(meta.xAxisID);\r\n                        var pointOptions = me.chart.options.elements.point;\r\n                        var x, y;\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n                            dataset.pointRadius = dataset.radius;\r\n                        }\r\n                        if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\r\n                            dataset.pointHitRadius = dataset.hitRadius;\r\n                        }\r\n\r\n                        x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\r\n                        y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\r\n\r\n                        // Utility\r\n                        point._xScale = xScale;\r\n                        point._yScale = yScale;\r\n                        point._datasetIndex = datasetIndex;\r\n                        point._index = index;\r\n\r\n                        // Desired view properties\r\n                        point._model = {\r\n                            x: x,\r\n                            y: y,\r\n                            skip: custom.skip || isNaN(x) || isNaN(y),\r\n                            // Appearance\r\n                            radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\r\n                            pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\r\n                            backgroundColor: me.getPointBackgroundColor(point, index),\r\n                            borderColor: me.getPointBorderColor(point, index),\r\n                            borderWidth: me.getPointBorderWidth(point, index),\r\n                            tension: meta.dataset._model ? meta.dataset._model.tension : 0,\r\n                            steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\r\n                            // Tooltip\r\n                            hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\r\n                        };\r\n                    },\r\n\r\n                    calculatePointY: function(value, index, datasetIndex) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var yScale = me.getScaleForId(meta.yAxisID);\r\n                        var sumPos = 0;\r\n                        var sumNeg = 0;\r\n                        var i, ds, dsMeta;\r\n\r\n                        if (yScale.options.stacked) {\r\n                            for (i = 0; i < datasetIndex; i++) {\r\n                                ds = chart.data.datasets[i];\r\n                                dsMeta = chart.getDatasetMeta(i);\r\n                                if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\r\n                                    var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\r\n                                    if (stackedRightValue < 0) {\r\n                                        sumNeg += stackedRightValue || 0;\r\n                                    } else {\r\n                                        sumPos += stackedRightValue || 0;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            var rightValue = Number(yScale.getRightValue(value));\r\n                            if (rightValue < 0) {\r\n                                return yScale.getPixelForValue(sumNeg + rightValue);\r\n                            }\r\n                            return yScale.getPixelForValue(sumPos + rightValue);\r\n                        }\r\n\r\n                        return yScale.getPixelForValue(value);\r\n                    },\r\n\r\n                    updateBezierControlPoints: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var area = me.chart.chartArea;\r\n                        var points = (meta.data || []);\r\n                        var i, ilen, point, model, controlPoints;\r\n\r\n                        // Only consider points that are drawn in case the spanGaps option is used\r\n                        if (meta.dataset._model.spanGaps) {\r\n                            points = points.filter(function(pt) {\r\n                                return !pt._model.skip;\r\n                            });\r\n                        }\r\n\r\n                        function capControlPoint(pt, min, max) {\r\n                            return Math.max(Math.min(pt, max), min);\r\n                        }\r\n\r\n                        if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\r\n                            helpers.splineCurveMonotone(points);\r\n                        } else {\r\n                            for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                                point = points[i];\r\n                                model = point._model;\r\n                                controlPoints = helpers.splineCurve(\r\n                                    helpers.previousItem(points, i)._model,\r\n                                    model,\r\n                                    helpers.nextItem(points, i)._model,\r\n                                    meta.dataset._model.tension\r\n                                );\r\n                                model.controlPointPreviousX = controlPoints.previous.x;\r\n                                model.controlPointPreviousY = controlPoints.previous.y;\r\n                                model.controlPointNextX = controlPoints.next.x;\r\n                                model.controlPointNextY = controlPoints.next.y;\r\n                            }\r\n                        }\r\n\r\n                        if (me.chart.options.elements.line.capBezierPoints) {\r\n                            for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                                model = points[i]._model;\r\n                                model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\r\n                                model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\r\n                                model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\r\n                                model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var points = meta.data || [];\r\n                        var area = chart.chartArea;\r\n                        var ilen = points.length;\r\n                        var i = 0;\r\n\r\n                        helpers.canvas.clipArea(chart.ctx, area);\r\n\r\n                        if (lineEnabled(me.getDataset(), chart.options)) {\r\n                            meta.dataset.draw();\r\n                        }\r\n\r\n                        helpers.canvas.unclipArea(chart.ctx);\r\n\r\n                        // Draw the points\r\n                        for (; i < ilen; ++i) {\r\n                            points[i].draw(area);\r\n                        }\r\n                    },\r\n\r\n                    setHoverStyle: function(point) {\r\n                        // Point\r\n                        var dataset = this.chart.data.datasets[point._datasetIndex];\r\n                        var index = point._index;\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n\r\n                        model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n                        model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    removeHoverStyle: function(point) {\r\n                        var me = this;\r\n                        var dataset = me.chart.data.datasets[point._datasetIndex];\r\n                        var index = point._index;\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n                            dataset.pointRadius = dataset.radius;\r\n                        }\r\n\r\n                        model.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\r\n                        model.backgroundColor = me.getPointBackgroundColor(point, index);\r\n                        model.borderColor = me.getPointBorderColor(point, index);\r\n                        model.borderWidth = me.getPointBorderWidth(point, index);\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 13: [function(require, module, exports) {\r\n            /* global window: false */\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                animation: {\r\n                    duration: 1000,\r\n                    easing: 'easeOutQuart',\r\n                    onProgress: helpers.noop,\r\n                    onComplete: helpers.noop\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Animation = Element.extend({\r\n                    chart: null, // the animation associated chart instance\r\n                    currentStep: 0, // the current animation step\r\n                    numSteps: 60, // default number of steps\r\n                    easing: '', // the easing to use for this animation\r\n                    render: null, // render function used by the animation service\r\n\r\n                    onAnimationProgress: null, // user specified callback to fire on each step of the animation\r\n                    onAnimationComplete: null, // user specified callback to fire when the animation finishes\r\n                });\r\n\r\n                Chart.animationService = {\r\n                    frameDuration: 17,\r\n                    animations: [],\r\n                    dropFrames: 0,\r\n                    request: null,\r\n\r\n                    /**\r\n                     * @param {Chart} chart - The chart to animate.\r\n                     * @param {Chart.Animation} animation - The animation that we will animate.\r\n                     * @param {Number} duration - The animation duration in ms.\r\n                     * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\r\n                     */\r\n                    addAnimation: function(chart, animation, duration, lazy) {\r\n                        var animations = this.animations;\r\n                        var i, ilen;\r\n\r\n                        animation.chart = chart;\r\n\r\n                        if (!lazy) {\r\n                            chart.animating = true;\r\n                        }\r\n\r\n                        for (i = 0, ilen = animations.length; i < ilen; ++i) {\r\n                            if (animations[i].chart === chart) {\r\n                                animations[i] = animation;\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        animations.push(animation);\r\n\r\n                        // If there are no animations queued, manually kickstart a digest, for lack of a better word\r\n                        if (animations.length === 1) {\r\n                            this.requestAnimationFrame();\r\n                        }\r\n                    },\r\n\r\n                    cancelAnimation: function(chart) {\r\n                        var index = helpers.findIndex(this.animations, function(animation) {\r\n                            return animation.chart === chart;\r\n                        });\r\n\r\n                        if (index !== -1) {\r\n                            this.animations.splice(index, 1);\r\n                            chart.animating = false;\r\n                        }\r\n                    },\r\n\r\n                    requestAnimationFrame: function() {\r\n                        var me = this;\r\n                        if (me.request === null) {\r\n                            // Skip animation frame requests until the active one is executed.\r\n                            // This can happen when processing mouse events, e.g. 'mousemove'\r\n                            // and 'mouseout' events will trigger multiple renders.\r\n                            me.request = helpers.requestAnimFrame.call(window, function() {\r\n                                me.request = null;\r\n                                me.startDigest();\r\n                            });\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    startDigest: function() {\r\n                        var me = this;\r\n                        var startTime = Date.now();\r\n                        var framesToDrop = 0;\r\n\r\n                        if (me.dropFrames > 1) {\r\n                            framesToDrop = Math.floor(me.dropFrames);\r\n                            me.dropFrames = me.dropFrames % 1;\r\n                        }\r\n\r\n                        me.advance(1 + framesToDrop);\r\n\r\n                        var endTime = Date.now();\r\n\r\n                        me.dropFrames += (endTime - startTime) / me.frameDuration;\r\n\r\n                        // Do we have more stuff to animate?\r\n                        if (me.animations.length > 0) {\r\n                            me.requestAnimationFrame();\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    advance: function(count) {\r\n                        var animations = this.animations;\r\n                        var animation, chart;\r\n                        var i = 0;\r\n\r\n                        while (i < animations.length) {\r\n                            animation = animations[i];\r\n                            chart = animation.chart;\r\n\r\n                            animation.currentStep = (animation.currentStep || 0) + count;\r\n                            animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\r\n\r\n                            helpers.callback(animation.render, [chart, animation], chart);\r\n                            helpers.callback(animation.onAnimationProgress, [animation], chart);\r\n\r\n                            if (animation.currentStep >= animation.numSteps) {\r\n                                helpers.callback(animation.onAnimationComplete, [animation], chart);\r\n                                chart.animating = false;\r\n                                animations.splice(i, 1);\r\n                            } else {\r\n                                ++i;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.Animation instead\r\n                 * @prop Chart.Animation#animationObject\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 */\r\n                Object.defineProperty(Chart.Animation.prototype, 'animationObject', {\r\n                    get: function() {\r\n                        return this;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.Animation#chart instead\r\n                 * @prop Chart.Animation#chartInstance\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 */\r\n                Object.defineProperty(Chart.Animation.prototype, 'chartInstance', {\r\n                    get: function() {\r\n                        return this.chart;\r\n                    },\r\n                    set: function(value) {\r\n                        this.chart = value;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 14: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var Interaction = require(19);\r\n            var layouts = require(21);\r\n            var platform = require(39);\r\n            var plugins = require(22);\r\n\r\n            module.exports = function(Chart) {\r\n                // Create a dictionary of chart types, to allow for extension of existing types\r\n                Chart.types = {};\r\n\r\n                // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\r\n                // Destroy method on the chart will remove the instance of the chart from this reference.\r\n                Chart.instances = {};\r\n\r\n                // Controllers available for dataset visualization eg. bar, line, slice, etc.\r\n                Chart.controllers = {};\r\n\r\n                /**\r\n                 * Initializes the given config with global and chart default values.\r\n                 */\r\n                function initConfig(config) {\r\n                    config = config || {};\r\n\r\n                    // Do NOT use configMerge() for the data object because this method merges arrays\r\n                    // and so would change references to labels and datasets, preventing data updates.\r\n                    var data = config.data = config.data || {};\r\n                    data.datasets = data.datasets || [];\r\n                    data.labels = data.labels || [];\r\n\r\n                    config.options = helpers.configMerge(\r\n                        defaults.global,\r\n                        defaults[config.type],\r\n                        config.options || {});\r\n\r\n                    return config;\r\n                }\r\n\r\n                /**\r\n                 * Updates the config of the chart\r\n                 * @param chart {Chart} chart to update the options for\r\n                 */\r\n                function updateConfig(chart) {\r\n                    var newOptions = chart.options;\r\n\r\n                    helpers.each(chart.scales, function(scale) {\r\n                        layouts.removeBox(chart, scale);\r\n                    });\r\n\r\n                    newOptions = helpers.configMerge(\r\n                        Chart.defaults.global,\r\n                        Chart.defaults[chart.config.type],\r\n                        newOptions);\r\n\r\n                    chart.options = chart.config.options = newOptions;\r\n                    chart.ensureScalesHaveIDs();\r\n                    chart.buildOrUpdateScales();\r\n                    // Tooltip\r\n                    chart.tooltip._options = newOptions.tooltips;\r\n                    chart.tooltip.initialize();\r\n                }\r\n\r\n                function positionIsHorizontal(position) {\r\n                    return position === 'top' || position === 'bottom';\r\n                }\r\n\r\n                helpers.extend(Chart.prototype, /** @lends Chart */ {\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    construct: function(item, config) {\r\n                        var me = this;\r\n\r\n                        config = initConfig(config);\r\n\r\n                        var context = platform.acquireContext(item, config);\r\n                        var canvas = context && context.canvas;\r\n                        var height = canvas && canvas.height;\r\n                        var width = canvas && canvas.width;\r\n\r\n                        me.id = helpers.uid();\r\n                        me.ctx = context;\r\n                        me.canvas = canvas;\r\n                        me.config = config;\r\n                        me.width = width;\r\n                        me.height = height;\r\n                        me.aspectRatio = height ? width / height : null;\r\n                        me.options = config.options;\r\n                        me._bufferedRender = false;\r\n\r\n                        /**\r\n                         * Provided for backward compatibility, Chart and Chart.Controller have been merged,\r\n                         * the \"instance\" still need to be defined since it might be called from plugins.\r\n                         * @prop Chart#chart\r\n                         * @deprecated since version 2.6.0\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        me.chart = me;\r\n                        me.controller = me; // chart.chart.controller #inception\r\n\r\n                        // Add the chart instance to the global namespace\r\n                        Chart.instances[me.id] = me;\r\n\r\n                        // Define alias to the config data: `chart.data === chart.config.data`\r\n                        Object.defineProperty(me, 'data', {\r\n                            get: function() {\r\n                                return me.config.data;\r\n                            },\r\n                            set: function(value) {\r\n                                me.config.data = value;\r\n                            }\r\n                        });\r\n\r\n                        if (!context || !canvas) {\r\n                            // The given item is not a compatible context2d element, let's return before finalizing\r\n                            // the chart initialization but after setting basic chart / controller properties that\r\n                            // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\r\n                            // https://github.com/chartjs/Chart.js/issues/2807\r\n                            console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n                            return;\r\n                        }\r\n\r\n                        me.initialize();\r\n                        me.update();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    initialize: function() {\r\n                        var me = this;\r\n\r\n                        // Before init plugin notification\r\n                        plugins.notify(me, 'beforeInit');\r\n\r\n                        helpers.retinaScale(me, me.options.devicePixelRatio);\r\n\r\n                        me.bindEvents();\r\n\r\n                        if (me.options.responsive) {\r\n                            // Initial resize before chart draws (must be silent to preserve initial animations).\r\n                            me.resize(true);\r\n                        }\r\n\r\n                        // Make sure scales have IDs and are built before we build any controllers.\r\n                        me.ensureScalesHaveIDs();\r\n                        me.buildOrUpdateScales();\r\n                        me.initToolTip();\r\n\r\n                        // After init plugin notification\r\n                        plugins.notify(me, 'afterInit');\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    clear: function() {\r\n                        helpers.canvas.clear(this);\r\n                        return this;\r\n                    },\r\n\r\n                    stop: function() {\r\n                        // Stops any current animation loop occurring\r\n                        Chart.animationService.cancelAnimation(this);\r\n                        return this;\r\n                    },\r\n\r\n                    resize: function(silent) {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        var canvas = me.canvas;\r\n                        var aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\r\n\r\n                        // the canvas render width and height will be casted to integers so make sure that\r\n                        // the canvas display style uses the same integer values to avoid blurring effect.\r\n\r\n                        // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\r\n                        var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\r\n                        var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\r\n\r\n                        if (me.width === newWidth && me.height === newHeight) {\r\n                            return;\r\n                        }\r\n\r\n                        canvas.width = me.width = newWidth;\r\n                        canvas.height = me.height = newHeight;\r\n                        canvas.style.width = newWidth + 'px';\r\n                        canvas.style.height = newHeight + 'px';\r\n\r\n                        helpers.retinaScale(me, options.devicePixelRatio);\r\n\r\n                        if (!silent) {\r\n                            // Notify any plugins about the resize\r\n                            var newSize = { width: newWidth, height: newHeight };\r\n                            plugins.notify(me, 'resize', [newSize]);\r\n\r\n                            // Notify of resize\r\n                            if (me.options.onResize) {\r\n                                me.options.onResize(me, newSize);\r\n                            }\r\n\r\n                            me.stop();\r\n                            me.update(me.options.responsiveAnimationDuration);\r\n                        }\r\n                    },\r\n\r\n                    ensureScalesHaveIDs: function() {\r\n                        var options = this.options;\r\n                        var scalesOptions = options.scales || {};\r\n                        var scaleOptions = options.scale;\r\n\r\n                        helpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\r\n                            xAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\r\n                        });\r\n\r\n                        helpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\r\n                            yAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\r\n                        });\r\n\r\n                        if (scaleOptions) {\r\n                            scaleOptions.id = scaleOptions.id || 'scale';\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Builds a map of scale ID to scale object for future lookup.\r\n                     */\r\n                    buildOrUpdateScales: function() {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        var scales = me.scales || {};\r\n                        var items = [];\r\n                        var updated = Object.keys(scales).reduce(function(obj, id) {\r\n                            obj[id] = false;\r\n                            return obj;\r\n                        }, {});\r\n\r\n                        if (options.scales) {\r\n                            items = items.concat(\r\n                                (options.scales.xAxes || []).map(function(xAxisOptions) {\r\n                                    return { options: xAxisOptions, dtype: 'category', dposition: 'bottom' };\r\n                                }),\r\n                                (options.scales.yAxes || []).map(function(yAxisOptions) {\r\n                                    return { options: yAxisOptions, dtype: 'linear', dposition: 'left' };\r\n                                })\r\n                            );\r\n                        }\r\n\r\n                        if (options.scale) {\r\n                            items.push({\r\n                                options: options.scale,\r\n                                dtype: 'radialLinear',\r\n                                isDefault: true,\r\n                                dposition: 'chartArea'\r\n                            });\r\n                        }\r\n\r\n                        helpers.each(items, function(item) {\r\n                            var scaleOptions = item.options;\r\n                            var id = scaleOptions.id;\r\n                            var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\r\n\r\n                            if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\r\n                                scaleOptions.position = item.dposition;\r\n                            }\r\n\r\n                            updated[id] = true;\r\n                            var scale = null;\r\n                            if (id in scales && scales[id].type === scaleType) {\r\n                                scale = scales[id];\r\n                                scale.options = scaleOptions;\r\n                                scale.ctx = me.ctx;\r\n                                scale.chart = me;\r\n                            } else {\r\n                                var scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\r\n                                if (!scaleClass) {\r\n                                    return;\r\n                                }\r\n                                scale = new scaleClass({\r\n                                    id: id,\r\n                                    type: scaleType,\r\n                                    options: scaleOptions,\r\n                                    ctx: me.ctx,\r\n                                    chart: me\r\n                                });\r\n                                scales[scale.id] = scale;\r\n                            }\r\n\r\n                            scale.mergeTicksOptions();\r\n\r\n                            // TODO(SB): I think we should be able to remove this custom case (options.scale)\r\n                            // and consider it as a regular scale part of the \"scales\"\" map only! This would\r\n                            // make the logic easier and remove some useless? custom code.\r\n                            if (item.isDefault) {\r\n                                me.scale = scale;\r\n                            }\r\n                        });\r\n                        // clear up discarded scales\r\n                        helpers.each(updated, function(hasUpdated, id) {\r\n                            if (!hasUpdated) {\r\n                                delete scales[id];\r\n                            }\r\n                        });\r\n\r\n                        me.scales = scales;\r\n\r\n                        Chart.scaleService.addScalesToLayout(this);\r\n                    },\r\n\r\n                    buildOrUpdateControllers: function() {\r\n                        var me = this;\r\n                        var types = [];\r\n                        var newControllers = [];\r\n\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            var meta = me.getDatasetMeta(datasetIndex);\r\n                            var type = dataset.type || me.config.type;\r\n\r\n                            if (meta.type && meta.type !== type) {\r\n                                me.destroyDatasetMeta(datasetIndex);\r\n                                meta = me.getDatasetMeta(datasetIndex);\r\n                            }\r\n                            meta.type = type;\r\n\r\n                            types.push(meta.type);\r\n\r\n                            if (meta.controller) {\r\n                                meta.controller.updateIndex(datasetIndex);\r\n                                meta.controller.linkScales();\r\n                            } else {\r\n                                var ControllerClass = Chart.controllers[meta.type];\r\n                                if (ControllerClass === undefined) {\r\n                                    throw new Error('\"' + meta.type + '\" is not a chart type.');\r\n                                }\r\n\r\n                                meta.controller = new ControllerClass(me, datasetIndex);\r\n                                newControllers.push(meta.controller);\r\n                            }\r\n                        }, me);\r\n\r\n                        return newControllers;\r\n                    },\r\n\r\n                    /**\r\n                     * Reset the elements of all datasets\r\n                     * @private\r\n                     */\r\n                    resetElements: function() {\r\n                        var me = this;\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            me.getDatasetMeta(datasetIndex).controller.reset();\r\n                        }, me);\r\n                    },\r\n\r\n                    /**\r\n                    * Resets the chart back to it's state before the initial animation\r\n                    */\r\n                    reset: function() {\r\n                        this.resetElements();\r\n                        this.tooltip.initialize();\r\n                    },\r\n\r\n                    update: function(config) {\r\n                        var me = this;\r\n\r\n                        if (!config || typeof config !== 'object') {\r\n                            // backwards compatibility\r\n                            config = {\r\n                                duration: config,\r\n                                lazy: arguments[1]\r\n                            };\r\n                        }\r\n\r\n                        updateConfig(me);\r\n\r\n                        // plugins options references might have change, let's invalidate the cache\r\n                        // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\r\n                        plugins._invalidate(me);\r\n\r\n                        if (plugins.notify(me, 'beforeUpdate') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // In case the entire data object changed\r\n                        me.tooltip._data = me.data;\r\n\r\n                        // Make sure dataset controllers are updated and new controllers are reset\r\n                        var newControllers = me.buildOrUpdateControllers();\r\n\r\n                        // Make sure all dataset controllers have correct meta data counts\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\r\n                        }, me);\r\n\r\n                        me.updateLayout();\r\n\r\n                        // Can only reset the new controllers after the scales have been updated\r\n                        if (me.options.animation && me.options.animation.duration) {\r\n                            helpers.each(newControllers, function(controller) {\r\n                                controller.reset();\r\n                            });\r\n                        }\r\n\r\n                        me.updateDatasets();\r\n\r\n                        // Need to reset tooltip in case it is displayed with elements that are removed\r\n                        // after update.\r\n                        me.tooltip.initialize();\r\n\r\n                        // Last active contains items that were previously in the tooltip.\r\n                        // When we reset the tooltip, we need to clear it\r\n                        me.lastActive = [];\r\n\r\n                        // Do this before render so that any plugins that need final scale updates can use it\r\n                        plugins.notify(me, 'afterUpdate');\r\n\r\n                        if (me._bufferedRender) {\r\n                            me._bufferedRequest = {\r\n                                duration: config.duration,\r\n                                easing: config.easing,\r\n                                lazy: config.lazy\r\n                            };\r\n                        } else {\r\n                            me.render(config);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\r\n                     * hook, in which case, plugins will not be called on `afterLayout`.\r\n                     * @private\r\n                     */\r\n                    updateLayout: function() {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeLayout') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        layouts.update(this, this.width, this.height);\r\n\r\n                        /**\r\n                         * Provided for backward compatibility, use `afterLayout` instead.\r\n                         * @method IPlugin#afterScaleUpdate\r\n                         * @deprecated since version 2.5.0\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        plugins.notify(me, 'afterScaleUpdate');\r\n                        plugins.notify(me, 'afterLayout');\r\n                    },\r\n\r\n                    /**\r\n                     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\r\n                     * @private\r\n                     */\r\n                    updateDatasets: function() {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                            me.updateDataset(i);\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterDatasetsUpdate');\r\n                    },\r\n\r\n                    /**\r\n                     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\r\n                     * @private\r\n                     */\r\n                    updateDataset: function(index) {\r\n                        var me = this;\r\n                        var meta = me.getDatasetMeta(index);\r\n                        var args = {\r\n                            meta: meta,\r\n                            index: index\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        meta.controller.update();\r\n\r\n                        plugins.notify(me, 'afterDatasetUpdate', [args]);\r\n                    },\r\n\r\n                    render: function(config) {\r\n                        var me = this;\r\n\r\n                        if (!config || typeof config !== 'object') {\r\n                            // backwards compatibility\r\n                            config = {\r\n                                duration: config,\r\n                                lazy: arguments[1]\r\n                            };\r\n                        }\r\n\r\n                        var duration = config.duration;\r\n                        var lazy = config.lazy;\r\n\r\n                        if (plugins.notify(me, 'beforeRender') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        var animationOptions = me.options.animation;\r\n                        var onComplete = function(animation) {\r\n                            plugins.notify(me, 'afterRender');\r\n                            helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\r\n                        };\r\n\r\n                        if (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\r\n                            var animation = new Chart.Animation({\r\n                                numSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\r\n                                easing: config.easing || animationOptions.easing,\r\n\r\n                                render: function(chart, animationObject) {\r\n                                    var easingFunction = helpers.easing.effects[animationObject.easing];\r\n                                    var currentStep = animationObject.currentStep;\r\n                                    var stepDecimal = currentStep / animationObject.numSteps;\r\n\r\n                                    chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\r\n                                },\r\n\r\n                                onAnimationProgress: animationOptions.onProgress,\r\n                                onAnimationComplete: onComplete\r\n                            });\r\n\r\n                            Chart.animationService.addAnimation(me, animation, duration, lazy);\r\n                        } else {\r\n                            me.draw();\r\n\r\n                            // See https://github.com/chartjs/Chart.js/issues/3781\r\n                            onComplete(new Chart.Animation({ numSteps: 0, chart: me }));\r\n                        }\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    draw: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        me.clear();\r\n\r\n                        if (helpers.isNullOrUndef(easingValue)) {\r\n                            easingValue = 1;\r\n                        }\r\n\r\n                        me.transition(easingValue);\r\n\r\n                        if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Draw all the scales\r\n                        helpers.each(me.boxes, function(box) {\r\n                            box.draw(me.chartArea);\r\n                        }, me);\r\n\r\n                        if (me.scale) {\r\n                            me.scale.draw();\r\n                        }\r\n\r\n                        me.drawDatasets(easingValue);\r\n                        me._drawTooltip(easingValue);\r\n\r\n                        plugins.notify(me, 'afterDraw', [easingValue]);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    transition: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\r\n                            if (me.isDatasetVisible(i)) {\r\n                                me.getDatasetMeta(i).controller.transition(easingValue);\r\n                            }\r\n                        }\r\n\r\n                        me.tooltip.transition(easingValue);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\r\n                     * @private\r\n                     */\r\n                    drawDatasets: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Draw datasets reversed to support proper line stacking\r\n                        for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\r\n                            if (me.isDatasetVisible(i)) {\r\n                                me.drawDataset(i, easingValue);\r\n                            }\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\r\n                     * @private\r\n                     */\r\n                    drawDataset: function(index, easingValue) {\r\n                        var me = this;\r\n                        var meta = me.getDatasetMeta(index);\r\n                        var args = {\r\n                            meta: meta,\r\n                            index: index,\r\n                            easingValue: easingValue\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        meta.controller.draw(easingValue);\r\n\r\n                        plugins.notify(me, 'afterDatasetDraw', [args]);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\r\n                     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\r\n                     * @private\r\n                     */\r\n                    _drawTooltip: function(easingValue) {\r\n                        var me = this;\r\n                        var tooltip = me.tooltip;\r\n                        var args = {\r\n                            tooltip: tooltip,\r\n                            easingValue: easingValue\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        tooltip.draw();\r\n\r\n                        plugins.notify(me, 'afterTooltipDraw', [args]);\r\n                    },\r\n\r\n                    // Get the single element that was clicked on\r\n                    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\r\n                    getElementAtEvent: function(e) {\r\n                        return Interaction.modes.single(this, e);\r\n                    },\r\n\r\n                    getElementsAtEvent: function(e) {\r\n                        return Interaction.modes.label(this, e, { intersect: true });\r\n                    },\r\n\r\n                    getElementsAtXAxis: function(e) {\r\n                        return Interaction.modes['x-axis'](this, e, { intersect: true });\r\n                    },\r\n\r\n                    getElementsAtEventForMode: function(e, mode, options) {\r\n                        var method = Interaction.modes[mode];\r\n                        if (typeof method === 'function') {\r\n                            return method(this, e, options);\r\n                        }\r\n\r\n                        return [];\r\n                    },\r\n\r\n                    getDatasetAtEvent: function(e) {\r\n                        return Interaction.modes.dataset(this, e, { intersect: true });\r\n                    },\r\n\r\n                    getDatasetMeta: function(datasetIndex) {\r\n                        var me = this;\r\n                        var dataset = me.data.datasets[datasetIndex];\r\n                        if (!dataset._meta) {\r\n                            dataset._meta = {};\r\n                        }\r\n\r\n                        var meta = dataset._meta[me.id];\r\n                        if (!meta) {\r\n                            meta = dataset._meta[me.id] = {\r\n                                type: null,\r\n                                data: [],\r\n                                dataset: null,\r\n                                controller: null,\r\n                                hidden: null,\t\t\t// See isDatasetVisible() comment\r\n                                xAxisID: null,\r\n                                yAxisID: null\r\n                            };\r\n                        }\r\n\r\n                        return meta;\r\n                    },\r\n\r\n                    getVisibleDatasetCount: function() {\r\n                        var count = 0;\r\n                        for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n                            if (this.isDatasetVisible(i)) {\r\n                                count++;\r\n                            }\r\n                        }\r\n                        return count;\r\n                    },\r\n\r\n                    isDatasetVisible: function(datasetIndex) {\r\n                        var meta = this.getDatasetMeta(datasetIndex);\r\n\r\n                        // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\r\n                        // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\r\n                        return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\r\n                    },\r\n\r\n                    generateLegend: function() {\r\n                        return this.options.legendCallback(this);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    destroyDatasetMeta: function(datasetIndex) {\r\n                        var id = this.id;\r\n                        var dataset = this.data.datasets[datasetIndex];\r\n                        var meta = dataset._meta && dataset._meta[id];\r\n\r\n                        if (meta) {\r\n                            meta.controller.destroy();\r\n                            delete dataset._meta[id];\r\n                        }\r\n                    },\r\n\r\n                    destroy: function() {\r\n                        var me = this;\r\n                        var canvas = me.canvas;\r\n                        var i, ilen;\r\n\r\n                        me.stop();\r\n\r\n                        // dataset controllers need to cleanup associated data\r\n                        for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                            me.destroyDatasetMeta(i);\r\n                        }\r\n\r\n                        if (canvas) {\r\n                            me.unbindEvents();\r\n                            helpers.canvas.clear(me);\r\n                            platform.releaseContext(me.ctx);\r\n                            me.canvas = null;\r\n                            me.ctx = null;\r\n                        }\r\n\r\n                        plugins.notify(me, 'destroy');\r\n\r\n                        delete Chart.instances[me.id];\r\n                    },\r\n\r\n                    toBase64Image: function() {\r\n                        return this.canvas.toDataURL.apply(this.canvas, arguments);\r\n                    },\r\n\r\n                    initToolTip: function() {\r\n                        var me = this;\r\n                        me.tooltip = new Chart.Tooltip({\r\n                            _chart: me,\r\n                            _chartInstance: me, // deprecated, backward compatibility\r\n                            _data: me.data,\r\n                            _options: me.options.tooltips\r\n                        }, me);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    bindEvents: function() {\r\n                        var me = this;\r\n                        var listeners = me._listeners = {};\r\n                        var listener = function() {\r\n                            me.eventHandler.apply(me, arguments);\r\n                        };\r\n\r\n                        helpers.each(me.options.events, function(type) {\r\n                            platform.addEventListener(me, type, listener);\r\n                            listeners[type] = listener;\r\n                        });\r\n\r\n                        // Elements used to detect size change should not be injected for non responsive charts.\r\n                        // See https://github.com/chartjs/Chart.js/issues/2210\r\n                        if (me.options.responsive) {\r\n                            listener = function() {\r\n                                me.resize();\r\n                            };\r\n\r\n                            platform.addEventListener(me, 'resize', listener);\r\n                            listeners.resize = listener;\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    unbindEvents: function() {\r\n                        var me = this;\r\n                        var listeners = me._listeners;\r\n                        if (!listeners) {\r\n                            return;\r\n                        }\r\n\r\n                        delete me._listeners;\r\n                        helpers.each(listeners, function(listener, type) {\r\n                            platform.removeEventListener(me, type, listener);\r\n                        });\r\n                    },\r\n\r\n                    updateHoverStyle: function(elements, mode, enabled) {\r\n                        var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\r\n                        var element, i, ilen;\r\n\r\n                        for (i = 0, ilen = elements.length; i < ilen; ++i) {\r\n                            element = elements[i];\r\n                            if (element) {\r\n                                this.getDatasetMeta(element._datasetIndex).controller[method](element);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    eventHandler: function(e) {\r\n                        var me = this;\r\n                        var tooltip = me.tooltip;\r\n\r\n                        if (plugins.notify(me, 'beforeEvent', [e]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Buffer any update calls so that renders do not occur\r\n                        me._bufferedRender = true;\r\n                        me._bufferedRequest = null;\r\n\r\n                        var changed = me.handleEvent(e);\r\n                        // for smooth tooltip animations issue #4989\r\n                        // the tooltip should be the source of change\r\n                        // Animation check workaround:\r\n                        // tooltip._start will be null when tooltip isn't animating\r\n                        if (tooltip) {\r\n                            changed = tooltip._start\r\n                                ? tooltip.handleEvent(e)\r\n                                : changed | tooltip.handleEvent(e);\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterEvent', [e]);\r\n\r\n                        var bufferedRequest = me._bufferedRequest;\r\n                        if (bufferedRequest) {\r\n                            // If we have an update that was triggered, we need to do a normal render\r\n                            me.render(bufferedRequest);\r\n                        } else if (changed && !me.animating) {\r\n                            // If entering, leaving, or changing elements, animate the change via pivot\r\n                            me.stop();\r\n\r\n                            // We only need to render at this point. Updating will cause scales to be\r\n                            // recomputed generating flicker & using more memory than necessary.\r\n                            me.render(me.options.hover.animationDuration, true);\r\n                        }\r\n\r\n                        me._bufferedRender = false;\r\n                        me._bufferedRequest = null;\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    /**\r\n                     * Handle an event\r\n                     * @private\r\n                     * @param {IEvent} event the event to handle\r\n                     * @return {Boolean} true if the chart needs to re-render\r\n                     */\r\n                    handleEvent: function(e) {\r\n                        var me = this;\r\n                        var options = me.options || {};\r\n                        var hoverOptions = options.hover;\r\n                        var changed = false;\r\n\r\n                        me.lastActive = me.lastActive || [];\r\n\r\n                        // Find Active Elements for hover and tooltips\r\n                        if (e.type === 'mouseout') {\r\n                            me.active = [];\r\n                        } else {\r\n                            me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\r\n                        }\r\n\r\n                        // Invoke onHover hook\r\n                        // Need to call with native event here to not break backwards compatibility\r\n                        helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\r\n\r\n                        if (e.type === 'mouseup' || e.type === 'click') {\r\n                            if (options.onClick) {\r\n                                // Use e.native here for backwards compatibility\r\n                                options.onClick.call(me, e.native, me.active);\r\n                            }\r\n                        }\r\n\r\n                        // Remove styling for last active (even if it may still be active)\r\n                        if (me.lastActive.length) {\r\n                            me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\r\n                        }\r\n\r\n                        // Built in hover styling\r\n                        if (me.active.length && hoverOptions.mode) {\r\n                            me.updateHoverStyle(me.active, hoverOptions.mode, true);\r\n                        }\r\n\r\n                        changed = !helpers.arrayEquals(me.active, me.lastActive);\r\n\r\n                        // Remember Last Actives\r\n                        me.lastActive = me.active;\r\n\r\n                        return changed;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart instead.\r\n                 * @class Chart.Controller\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 * @private\r\n                 */\r\n                Chart.Controller = Chart;\r\n            };\r\n        }, { \"16\": 16, \"19\": 19, \"21\": 21, \"22\": 22, \"36\": 36, \"39\": 39 }], 15: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            module.exports = function(Chart) {\r\n                var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\r\n\r\n                /**\r\n                 * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\r\n                 * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\r\n                 * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\r\n                 */\r\n                function listenArrayEvents(array, listener) {\r\n                    if (array._chartjs) {\r\n                        array._chartjs.listeners.push(listener);\r\n                        return;\r\n                    }\r\n\r\n                    Object.defineProperty(array, '_chartjs', {\r\n                        configurable: true,\r\n                        enumerable: false,\r\n                        value: {\r\n                            listeners: [listener]\r\n                        }\r\n                    });\r\n\r\n                    arrayEvents.forEach(function(key) {\r\n                        var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\r\n                        var base = array[key];\r\n\r\n                        Object.defineProperty(array, key, {\r\n                            configurable: true,\r\n                            enumerable: false,\r\n                            value: function() {\r\n                                var args = Array.prototype.slice.call(arguments);\r\n                                var res = base.apply(this, args);\r\n\r\n                                helpers.each(array._chartjs.listeners, function(object) {\r\n                                    if (typeof object[method] === 'function') {\r\n                                        object[method].apply(object, args);\r\n                                    }\r\n                                });\r\n\r\n                                return res;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Removes the given array event listener and cleanup extra attached properties (such as\r\n                 * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\r\n                 */\r\n                function unlistenArrayEvents(array, listener) {\r\n                    var stub = array._chartjs;\r\n                    if (!stub) {\r\n                        return;\r\n                    }\r\n\r\n                    var listeners = stub.listeners;\r\n                    var index = listeners.indexOf(listener);\r\n                    if (index !== -1) {\r\n                        listeners.splice(index, 1);\r\n                    }\r\n\r\n                    if (listeners.length > 0) {\r\n                        return;\r\n                    }\r\n\r\n                    arrayEvents.forEach(function(key) {\r\n                        delete array[key];\r\n                    });\r\n\r\n                    delete array._chartjs;\r\n                }\r\n\r\n                // Base class for all dataset controllers (line, bar, etc)\r\n                Chart.DatasetController = function(chart, datasetIndex) {\r\n                    this.initialize(chart, datasetIndex);\r\n                };\r\n\r\n                helpers.extend(Chart.DatasetController.prototype, {\r\n                    /**\r\n                     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\r\n                     * @type {Chart.core.element}\r\n                     */\r\n                    datasetElementType: null,\r\n\r\n                    /**\r\n                     * Element type used to generate a meta data (e.g. Chart.element.Point).\r\n                     * @type {Chart.core.element}\r\n                     */\r\n                    dataElementType: null,\r\n\r\n                    initialize: function(chart, datasetIndex) {\r\n                        var me = this;\r\n                        me.chart = chart;\r\n                        me.index = datasetIndex;\r\n                        me.linkScales();\r\n                        me.addElements();\r\n                    },\r\n\r\n                    updateIndex: function(datasetIndex) {\r\n                        this.index = datasetIndex;\r\n                    },\r\n\r\n                    linkScales: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var dataset = me.getDataset();\r\n\r\n                        if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\r\n                            meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\r\n                        }\r\n                        if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\r\n                            meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\r\n                        }\r\n                    },\r\n\r\n                    getDataset: function() {\r\n                        return this.chart.data.datasets[this.index];\r\n                    },\r\n\r\n                    getMeta: function() {\r\n                        return this.chart.getDatasetMeta(this.index);\r\n                    },\r\n\r\n                    getScaleForId: function(scaleID) {\r\n                        return this.chart.scales[scaleID];\r\n                    },\r\n\r\n                    reset: function() {\r\n                        this.update(true);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    destroy: function() {\r\n                        if (this._data) {\r\n                            unlistenArrayEvents(this._data, this);\r\n                        }\r\n                    },\r\n\r\n                    createMetaDataset: function() {\r\n                        var me = this;\r\n                        var type = me.datasetElementType;\r\n                        return type && new type({\r\n                            _chart: me.chart,\r\n                            _datasetIndex: me.index\r\n                        });\r\n                    },\r\n\r\n                    createMetaData: function(index) {\r\n                        var me = this;\r\n                        var type = me.dataElementType;\r\n                        return type && new type({\r\n                            _chart: me.chart,\r\n                            _datasetIndex: me.index,\r\n                            _index: index\r\n                        });\r\n                    },\r\n\r\n                    addElements: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var data = me.getDataset().data || [];\r\n                        var metaData = meta.data;\r\n                        var i, ilen;\r\n\r\n                        for (i = 0, ilen = data.length; i < ilen; ++i) {\r\n                            metaData[i] = metaData[i] || me.createMetaData(i);\r\n                        }\r\n\r\n                        meta.dataset = meta.dataset || me.createMetaDataset();\r\n                    },\r\n\r\n                    addElementAndReset: function(index) {\r\n                        var element = this.createMetaData(index);\r\n                        this.getMeta().data.splice(index, 0, element);\r\n                        this.updateElement(element, index, true);\r\n                    },\r\n\r\n                    buildOrUpdateElements: function() {\r\n                        var me = this;\r\n                        var dataset = me.getDataset();\r\n                        var data = dataset.data || (dataset.data = []);\r\n\r\n                        // In order to correctly handle data addition/deletion animation (an thus simulate\r\n                        // real-time charts), we need to monitor these data modifications and synchronize\r\n                        // the internal meta data accordingly.\r\n                        if (me._data !== data) {\r\n                            if (me._data) {\r\n                                // This case happens when the user replaced the data array instance.\r\n                                unlistenArrayEvents(me._data, me);\r\n                            }\r\n\r\n                            listenArrayEvents(data, me);\r\n                            me._data = data;\r\n                        }\r\n\r\n                        // Re-sync meta data in case the user replaced the data array or if we missed\r\n                        // any updates and so make sure that we handle number of datapoints changing.\r\n                        me.resyncElements();\r\n                    },\r\n\r\n                    update: helpers.noop,\r\n\r\n                    transition: function(easingValue) {\r\n                        var meta = this.getMeta();\r\n                        var elements = meta.data || [];\r\n                        var ilen = elements.length;\r\n                        var i = 0;\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            elements[i].transition(easingValue);\r\n                        }\r\n\r\n                        if (meta.dataset) {\r\n                            meta.dataset.transition(easingValue);\r\n                        }\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var meta = this.getMeta();\r\n                        var elements = meta.data || [];\r\n                        var ilen = elements.length;\r\n                        var i = 0;\r\n\r\n                        if (meta.dataset) {\r\n                            meta.dataset.draw();\r\n                        }\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            elements[i].draw();\r\n                        }\r\n                    },\r\n\r\n                    removeHoverStyle: function(element, elementOpts) {\r\n                        var dataset = this.chart.data.datasets[element._datasetIndex];\r\n                        var index = element._index;\r\n                        var custom = element.custom || {};\r\n                        var valueOrDefault = helpers.valueAtIndexOrDefault;\r\n                        var model = element._model;\r\n\r\n                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\r\n                        model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\r\n                        model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\r\n                    },\r\n\r\n                    setHoverStyle: function(element) {\r\n                        var dataset = this.chart.data.datasets[element._datasetIndex];\r\n                        var index = element._index;\r\n                        var custom = element.custom || {};\r\n                        var valueOrDefault = helpers.valueAtIndexOrDefault;\r\n                        var getHoverColor = helpers.getHoverColor;\r\n                        var model = element._model;\r\n\r\n                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    resyncElements: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var data = me.getDataset().data;\r\n                        var numMeta = meta.data.length;\r\n                        var numData = data.length;\r\n\r\n                        if (numData < numMeta) {\r\n                            meta.data.splice(numData, numMeta - numData);\r\n                        } else if (numData > numMeta) {\r\n                            me.insertElements(numMeta, numData - numMeta);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    insertElements: function(start, count) {\r\n                        for (var i = 0; i < count; ++i) {\r\n                            this.addElementAndReset(start + i);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataPush: function() {\r\n                        this.insertElements(this.getDataset().data.length - 1, arguments.length);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataPop: function() {\r\n                        this.getMeta().data.pop();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataShift: function() {\r\n                        this.getMeta().data.shift();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataSplice: function(start, count) {\r\n                        this.getMeta().data.splice(start, count);\r\n                        this.insertElements(start, arguments.length - 2);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataUnshift: function() {\r\n                        this.insertElements(0, arguments.length);\r\n                    }\r\n                });\r\n\r\n                Chart.DatasetController.extend = helpers.inherits;\r\n            };\r\n        }, { \"36\": 36 }], 16: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            module.exports = {\r\n                /**\r\n                 * @private\r\n                 */\r\n                _set: function(scope, values) {\r\n                    return helpers.merge(this[scope] || (this[scope] = {}), values);\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 17: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var color = require(2);\r\n            var helpers = require(36);\r\n\r\n            function interpolate(start, view, model, ease) {\r\n                var keys = Object.keys(model);\r\n                var i, ilen, key, actual, origin, target, type, c0, c1;\r\n\r\n                for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n                    key = keys[i];\r\n\r\n                    target = model[key];\r\n\r\n                    // if a value is added to the model after pivot() has been called, the view\r\n                    // doesn't contain it, so let's initialize the view to the target value.\r\n                    if (!view.hasOwnProperty(key)) {\r\n                        view[key] = target;\r\n                    }\r\n\r\n                    actual = view[key];\r\n\r\n                    if (actual === target || key[0] === '_') {\r\n                        continue;\r\n                    }\r\n\r\n                    if (!start.hasOwnProperty(key)) {\r\n                        start[key] = actual;\r\n                    }\r\n\r\n                    origin = start[key];\r\n\r\n                    type = typeof target;\r\n\r\n                    if (type === typeof origin) {\r\n                        if (type === 'string') {\r\n                            c0 = color(origin);\r\n                            if (c0.valid) {\r\n                                c1 = color(target);\r\n                                if (c1.valid) {\r\n                                    view[key] = c1.mix(c0, ease).rgbString();\r\n                                    continue;\r\n                                }\r\n                            }\r\n                        } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\r\n                            view[key] = origin + (target - origin) * ease;\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    view[key] = target;\r\n                }\r\n            }\r\n\r\n            var Element = function(configuration) {\r\n                helpers.extend(this, configuration);\r\n                this.initialize.apply(this, arguments);\r\n            };\r\n\r\n            helpers.extend(Element.prototype, {\r\n                initialize: function() {\r\n                    this.hidden = false;\r\n                },\r\n\r\n                pivot: function() {\r\n                    var me = this;\r\n                    if (!me._view) {\r\n                        me._view = helpers.clone(me._model);\r\n                    }\r\n                    me._start = {};\r\n                    return me;\r\n                },\r\n\r\n                transition: function(ease) {\r\n                    var me = this;\r\n                    var model = me._model;\r\n                    var start = me._start;\r\n                    var view = me._view;\r\n\r\n                    // No animation -> No Transition\r\n                    if (!model || ease === 1) {\r\n                        me._view = model;\r\n                        me._start = null;\r\n                        return me;\r\n                    }\r\n\r\n                    if (!view) {\r\n                        view = me._view = {};\r\n                    }\r\n\r\n                    if (!start) {\r\n                        start = me._start = {};\r\n                    }\r\n\r\n                    interpolate(start, view, model, ease);\r\n\r\n                    return me;\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    return {\r\n                        x: this._model.x,\r\n                        y: this._model.y\r\n                    };\r\n                },\r\n\r\n                hasValue: function() {\r\n                    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\r\n                }\r\n            });\r\n\r\n            Element.extend = helpers.inherits;\r\n\r\n            module.exports = Element;\r\n        }, { \"2\": 2, \"36\": 36 }], 18: [function(require, module, exports) {\r\n            /* global window: false */\r\n            /* global document: false */\r\n            'use strict';\r\n\r\n            var color = require(2);\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n\r\n            module.exports = function(Chart) {\r\n                // -- Basic js utility methods\r\n\r\n                helpers.configMerge = function(/* objects ... */) {\r\n                    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\r\n                        merger: function(key, target, source, options) {\r\n                            var tval = target[key] || {};\r\n                            var sval = source[key];\r\n\r\n                            if (key === 'scales') {\r\n                                // scale config merging is complex. Add our own function here for that\r\n                                target[key] = helpers.scaleMerge(tval, sval);\r\n                            } else if (key === 'scale') {\r\n                                // used in polar area & radar charts since there is only one scale\r\n                                target[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\r\n                            } else {\r\n                                helpers._merger(key, target, source, options);\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n\r\n                helpers.scaleMerge = function(/* objects ... */) {\r\n                    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\r\n                        merger: function(key, target, source, options) {\r\n                            if (key === 'xAxes' || key === 'yAxes') {\r\n                                var slen = source[key].length;\r\n                                var i, type, scale;\r\n\r\n                                if (!target[key]) {\r\n                                    target[key] = [];\r\n                                }\r\n\r\n                                for (i = 0; i < slen; ++i) {\r\n                                    scale = source[key][i];\r\n                                    type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\r\n\r\n                                    if (i >= target[key].length) {\r\n                                        target[key].push({});\r\n                                    }\r\n\r\n                                    if (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\r\n                                        // new/untyped scale or type changed: let's apply the new defaults\r\n                                        // then merge source scale to correctly overwrite the defaults.\r\n                                        helpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\r\n                                    } else {\r\n                                        // scales type are the same\r\n                                        helpers.merge(target[key][i], scale);\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                helpers._merger(key, target, source, options);\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n\r\n                helpers.where = function(collection, filterCallback) {\r\n                    if (helpers.isArray(collection) && Array.prototype.filter) {\r\n                        return collection.filter(filterCallback);\r\n                    }\r\n                    var filtered = [];\r\n\r\n                    helpers.each(collection, function(item) {\r\n                        if (filterCallback(item)) {\r\n                            filtered.push(item);\r\n                        }\r\n                    });\r\n\r\n                    return filtered;\r\n                };\r\n                helpers.findIndex = Array.prototype.findIndex ?\r\n                    function(array, callback, scope) {\r\n                        return array.findIndex(callback, scope);\r\n                    } :\r\n                    function(array, callback, scope) {\r\n                        scope = scope === undefined ? array : scope;\r\n                        for (var i = 0, ilen = array.length; i < ilen; ++i) {\r\n                            if (callback.call(scope, array[i], i, array)) {\r\n                                return i;\r\n                            }\r\n                        }\r\n                        return -1;\r\n                    };\r\n                helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n                    // Default to start of the array\r\n                    if (helpers.isNullOrUndef(startIndex)) {\r\n                        startIndex = -1;\r\n                    }\r\n                    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\r\n                        var currentItem = arrayToSearch[i];\r\n                        if (filterCallback(currentItem)) {\r\n                            return currentItem;\r\n                        }\r\n                    }\r\n                };\r\n                helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n                    // Default to end of the array\r\n                    if (helpers.isNullOrUndef(startIndex)) {\r\n                        startIndex = arrayToSearch.length;\r\n                    }\r\n                    for (var i = startIndex - 1; i >= 0; i--) {\r\n                        var currentItem = arrayToSearch[i];\r\n                        if (filterCallback(currentItem)) {\r\n                            return currentItem;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // -- Math methods\r\n                helpers.isNumber = function(n) {\r\n                    return !isNaN(parseFloat(n)) && isFinite(n);\r\n                };\r\n                helpers.almostEquals = function(x, y, epsilon) {\r\n                    return Math.abs(x - y) < epsilon;\r\n                };\r\n                helpers.almostWhole = function(x, epsilon) {\r\n                    var rounded = Math.round(x);\r\n                    return (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\r\n                };\r\n                helpers.max = function(array) {\r\n                    return array.reduce(function(max, value) {\r\n                        if (!isNaN(value)) {\r\n                            return Math.max(max, value);\r\n                        }\r\n                        return max;\r\n                    }, Number.NEGATIVE_INFINITY);\r\n                };\r\n                helpers.min = function(array) {\r\n                    return array.reduce(function(min, value) {\r\n                        if (!isNaN(value)) {\r\n                            return Math.min(min, value);\r\n                        }\r\n                        return min;\r\n                    }, Number.POSITIVE_INFINITY);\r\n                };\r\n                helpers.sign = Math.sign ?\r\n                    function(x) {\r\n                        return Math.sign(x);\r\n                    } :\r\n                    function(x) {\r\n                        x = +x; // convert to a number\r\n                        if (x === 0 || isNaN(x)) {\r\n                            return x;\r\n                        }\r\n                        return x > 0 ? 1 : -1;\r\n                    };\r\n                helpers.log10 = Math.log10 ?\r\n                    function(x) {\r\n                        return Math.log10(x);\r\n                    } :\r\n                    function(x) {\r\n                        var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\r\n                        // Check for whole powers of 10,\r\n                        // which due to floating point rounding error should be corrected.\r\n                        var powerOf10 = Math.round(exponent);\r\n                        var isPowerOf10 = x === Math.pow(10, powerOf10);\r\n\r\n                        return isPowerOf10 ? powerOf10 : exponent;\r\n                    };\r\n                helpers.toRadians = function(degrees) {\r\n                    return degrees * (Math.PI / 180);\r\n                };\r\n                helpers.toDegrees = function(radians) {\r\n                    return radians * (180 / Math.PI);\r\n                };\r\n                // Gets the angle from vertical upright to the point about a centre.\r\n                helpers.getAngleFromPoint = function(centrePoint, anglePoint) {\r\n                    var distanceFromXCenter = anglePoint.x - centrePoint.x;\r\n                    var distanceFromYCenter = anglePoint.y - centrePoint.y;\r\n                    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n\r\n                    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n\r\n                    if (angle < (-0.5 * Math.PI)) {\r\n                        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\r\n                    }\r\n\r\n                    return {\r\n                        angle: angle,\r\n                        distance: radialDistanceFromCenter\r\n                    };\r\n                };\r\n                helpers.distanceBetweenPoints = function(pt1, pt2) {\r\n                    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\r\n                };\r\n                helpers.aliasPixel = function(pixelWidth) {\r\n                    return (pixelWidth % 2 === 0) ? 0 : 0.5;\r\n                };\r\n                helpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\r\n                    // Props to Rob Spencer at scaled innovation for his post on splining between points\r\n                    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\r\n\r\n                    // This function must also respect \"skipped\" points\r\n\r\n                    var previous = firstPoint.skip ? middlePoint : firstPoint;\r\n                    var current = middlePoint;\r\n                    var next = afterPoint.skip ? middlePoint : afterPoint;\r\n\r\n                    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\r\n                    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\r\n\r\n                    var s01 = d01 / (d01 + d12);\r\n                    var s12 = d12 / (d01 + d12);\r\n\r\n                    // If all points are the same, s01 & s02 will be inf\r\n                    s01 = isNaN(s01) ? 0 : s01;\r\n                    s12 = isNaN(s12) ? 0 : s12;\r\n\r\n                    var fa = t * s01; // scaling factor for triangle Ta\r\n                    var fb = t * s12;\r\n\r\n                    return {\r\n                        previous: {\r\n                            x: current.x - fa * (next.x - previous.x),\r\n                            y: current.y - fa * (next.y - previous.y)\r\n                        },\r\n                        next: {\r\n                            x: current.x + fb * (next.x - previous.x),\r\n                            y: current.y + fb * (next.y - previous.y)\r\n                        }\r\n                    };\r\n                };\r\n                helpers.EPSILON = Number.EPSILON || 1e-14;\r\n                helpers.splineCurveMonotone = function(points) {\r\n                    // This function calculates Bézier control points in a similar way than |splineCurve|,\r\n                    // but preserves monotonicity of the provided data and ensures no local extremums are added\r\n                    // between the dataset discrete points due to the interpolation.\r\n                    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\r\n\r\n                    var pointsWithTangents = (points || []).map(function(point) {\r\n                        return {\r\n                            model: point._model,\r\n                            deltaK: 0,\r\n                            mK: 0\r\n                        };\r\n                    });\r\n\r\n                    // Calculate slopes (deltaK) and initialize tangents (mK)\r\n                    var pointsLen = pointsWithTangents.length;\r\n                    var i, pointBefore, pointCurrent, pointAfter;\r\n                    for (i = 0; i < pointsLen; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        if (pointCurrent.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n                        if (pointAfter && !pointAfter.model.skip) {\r\n                            var slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\r\n\r\n                            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\r\n                            pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\r\n                        }\r\n\r\n                        if (!pointBefore || pointBefore.model.skip) {\r\n                            pointCurrent.mK = pointCurrent.deltaK;\r\n                        } else if (!pointAfter || pointAfter.model.skip) {\r\n                            pointCurrent.mK = pointBefore.deltaK;\r\n                        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\r\n                            pointCurrent.mK = 0;\r\n                        } else {\r\n                            pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\r\n                        }\r\n                    }\r\n\r\n                    // Adjust tangents to ensure monotonic properties\r\n                    var alphaK, betaK, tauK, squaredMagnitude;\r\n                    for (i = 0; i < pointsLen - 1; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        pointAfter = pointsWithTangents[i + 1];\r\n                        if (pointCurrent.model.skip || pointAfter.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\r\n                            pointCurrent.mK = pointAfter.mK = 0;\r\n                            continue;\r\n                        }\r\n\r\n                        alphaK = pointCurrent.mK / pointCurrent.deltaK;\r\n                        betaK = pointAfter.mK / pointCurrent.deltaK;\r\n                        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\r\n                        if (squaredMagnitude <= 9) {\r\n                            continue;\r\n                        }\r\n\r\n                        tauK = 3 / Math.sqrt(squaredMagnitude);\r\n                        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\r\n                        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\r\n                    }\r\n\r\n                    // Compute control points\r\n                    var deltaX;\r\n                    for (i = 0; i < pointsLen; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        if (pointCurrent.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n                        if (pointBefore && !pointBefore.model.skip) {\r\n                            deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\r\n                            pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\r\n                            pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\r\n                        }\r\n                        if (pointAfter && !pointAfter.model.skip) {\r\n                            deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\r\n                            pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\r\n                            pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\r\n                        }\r\n                    }\r\n                };\r\n                helpers.nextItem = function(collection, index, loop) {\r\n                    if (loop) {\r\n                        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\r\n                    }\r\n                    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\r\n                };\r\n                helpers.previousItem = function(collection, index, loop) {\r\n                    if (loop) {\r\n                        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\r\n                    }\r\n                    return index <= 0 ? collection[0] : collection[index - 1];\r\n                };\r\n                // Implementation of the nice number algorithm used in determining where axis labels will go\r\n                helpers.niceNum = function(range, round) {\r\n                    var exponent = Math.floor(helpers.log10(range));\r\n                    var fraction = range / Math.pow(10, exponent);\r\n                    var niceFraction;\r\n\r\n                    if (round) {\r\n                        if (fraction < 1.5) {\r\n                            niceFraction = 1;\r\n                        } else if (fraction < 3) {\r\n                            niceFraction = 2;\r\n                        } else if (fraction < 7) {\r\n                            niceFraction = 5;\r\n                        } else {\r\n                            niceFraction = 10;\r\n                        }\r\n                    } else if (fraction <= 1.0) {\r\n                        niceFraction = 1;\r\n                    } else if (fraction <= 2) {\r\n                        niceFraction = 2;\r\n                    } else if (fraction <= 5) {\r\n                        niceFraction = 5;\r\n                    } else {\r\n                        niceFraction = 10;\r\n                    }\r\n\r\n                    return niceFraction * Math.pow(10, exponent);\r\n                };\r\n                // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n                helpers.requestAnimFrame = (function() {\r\n                    if (typeof window === 'undefined') {\r\n                        return function(callback) {\r\n                            callback();\r\n                        };\r\n                    }\r\n                    return window.requestAnimationFrame ||\r\n                        window.webkitRequestAnimationFrame ||\r\n                        window.mozRequestAnimationFrame ||\r\n                        window.oRequestAnimationFrame ||\r\n                        window.msRequestAnimationFrame ||\r\n                        function(callback) {\r\n                            return window.setTimeout(callback, 1000 / 60);\r\n                        };\r\n                }());\r\n                // -- DOM methods\r\n                helpers.getRelativePosition = function(evt, chart) {\r\n                    var mouseX, mouseY;\r\n                    var e = evt.originalEvent || evt;\r\n                    var canvas = evt.currentTarget || evt.srcElement;\r\n                    var boundingRect = canvas.getBoundingClientRect();\r\n\r\n                    var touches = e.touches;\r\n                    if (touches && touches.length > 0) {\r\n                        mouseX = touches[0].clientX;\r\n                        mouseY = touches[0].clientY;\r\n                    } else {\r\n                        mouseX = e.clientX;\r\n                        mouseY = e.clientY;\r\n                    }\r\n\r\n                    // Scale mouse coordinates into canvas coordinates\r\n                    // by following the pattern laid out by 'jerryj' in the comments of\r\n                    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\r\n                    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\r\n                    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\r\n                    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\r\n                    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\r\n                    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\r\n                    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\r\n\r\n                    // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\r\n                    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\r\n                    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\r\n                    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\r\n\r\n                    return {\r\n                        x: mouseX,\r\n                        y: mouseY\r\n                    };\r\n                };\r\n\r\n                // Private helper function to convert max-width/max-height values that may be percentages into a number\r\n                function parseMaxStyle(styleValue, node, parentProperty) {\r\n                    var valueInPixels;\r\n                    if (typeof styleValue === 'string') {\r\n                        valueInPixels = parseInt(styleValue, 10);\r\n\r\n                        if (styleValue.indexOf('%') !== -1) {\r\n                            // percentage * size in dimension\r\n                            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\r\n                        }\r\n                    } else {\r\n                        valueInPixels = styleValue;\r\n                    }\r\n\r\n                    return valueInPixels;\r\n                }\r\n\r\n                /**\r\n                 * Returns if the given value contains an effective constraint.\r\n                 * @private\r\n                 */\r\n                function isConstrainedValue(value) {\r\n                    return value !== undefined && value !== null && value !== 'none';\r\n                }\r\n\r\n                // Private helper to get a constraint dimension\r\n                // @param domNode : the node to check the constraint on\r\n                // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\r\n                // @param percentageProperty : property of parent to use when calculating width as a percentage\r\n                // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\r\n                function getConstraintDimension(domNode, maxStyle, percentageProperty) {\r\n                    var view = document.defaultView;\r\n                    var parentNode = domNode.parentNode;\r\n                    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\r\n                    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\r\n                    var hasCNode = isConstrainedValue(constrainedNode);\r\n                    var hasCContainer = isConstrainedValue(constrainedContainer);\r\n                    var infinity = Number.POSITIVE_INFINITY;\r\n\r\n                    if (hasCNode || hasCContainer) {\r\n                        return Math.min(\r\n                            hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\r\n                            hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\r\n                    }\r\n\r\n                    return 'none';\r\n                }\r\n                // returns Number or undefined if no constraint\r\n                helpers.getConstraintWidth = function(domNode) {\r\n                    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\r\n                };\r\n                // returns Number or undefined if no constraint\r\n                helpers.getConstraintHeight = function(domNode) {\r\n                    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\r\n                };\r\n                helpers.getMaximumWidth = function(domNode) {\r\n                    var container = domNode.parentNode;\r\n                    if (!container) {\r\n                        return domNode.clientWidth;\r\n                    }\r\n\r\n                    var paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\r\n                    var paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\r\n                    var w = container.clientWidth - paddingLeft - paddingRight;\r\n                    var cw = helpers.getConstraintWidth(domNode);\r\n                    return isNaN(cw) ? w : Math.min(w, cw);\r\n                };\r\n                helpers.getMaximumHeight = function(domNode) {\r\n                    var container = domNode.parentNode;\r\n                    if (!container) {\r\n                        return domNode.clientHeight;\r\n                    }\r\n\r\n                    var paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\r\n                    var paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\r\n                    var h = container.clientHeight - paddingTop - paddingBottom;\r\n                    var ch = helpers.getConstraintHeight(domNode);\r\n                    return isNaN(ch) ? h : Math.min(h, ch);\r\n                };\r\n                helpers.getStyle = function(el, property) {\r\n                    return el.currentStyle ?\r\n                        el.currentStyle[property] :\r\n                        document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\r\n                };\r\n                helpers.retinaScale = function(chart, forceRatio) {\r\n                    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\r\n                    if (pixelRatio === 1) {\r\n                        return;\r\n                    }\r\n\r\n                    var canvas = chart.canvas;\r\n                    var height = chart.height;\r\n                    var width = chart.width;\r\n\r\n                    canvas.height = height * pixelRatio;\r\n                    canvas.width = width * pixelRatio;\r\n                    chart.ctx.scale(pixelRatio, pixelRatio);\r\n\r\n                    // If no style has been set on the canvas, the render size is used as display size,\r\n                    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\r\n                    // See https://github.com/chartjs/Chart.js/issues/3575\r\n                    if (!canvas.style.height && !canvas.style.width) {\r\n                        canvas.style.height = height + 'px';\r\n                        canvas.style.width = width + 'px';\r\n                    }\r\n                };\r\n                // -- Canvas methods\r\n                helpers.fontString = function(pixelSize, fontStyle, fontFamily) {\r\n                    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\r\n                };\r\n                helpers.longestText = function(ctx, font, arrayOfThings, cache) {\r\n                    cache = cache || {};\r\n                    var data = cache.data = cache.data || {};\r\n                    var gc = cache.garbageCollect = cache.garbageCollect || [];\r\n\r\n                    if (cache.font !== font) {\r\n                        data = cache.data = {};\r\n                        gc = cache.garbageCollect = [];\r\n                        cache.font = font;\r\n                    }\r\n\r\n                    ctx.font = font;\r\n                    var longest = 0;\r\n                    helpers.each(arrayOfThings, function(thing) {\r\n                        // Undefined strings and arrays should not be measured\r\n                        if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\r\n                            longest = helpers.measureText(ctx, data, gc, longest, thing);\r\n                        } else if (helpers.isArray(thing)) {\r\n                            // if it is an array lets measure each element\r\n                            // to do maybe simplify this function a bit so we can do this more recursively?\r\n                            helpers.each(thing, function(nestedThing) {\r\n                                // Undefined strings and arrays should not be measured\r\n                                if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\r\n                                    longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    var gcLen = gc.length / 2;\r\n                    if (gcLen > arrayOfThings.length) {\r\n                        for (var i = 0; i < gcLen; i++) {\r\n                            delete data[gc[i]];\r\n                        }\r\n                        gc.splice(0, gcLen);\r\n                    }\r\n                    return longest;\r\n                };\r\n                helpers.measureText = function(ctx, data, gc, longest, string) {\r\n                    var textWidth = data[string];\r\n                    if (!textWidth) {\r\n                        textWidth = data[string] = ctx.measureText(string).width;\r\n                        gc.push(string);\r\n                    }\r\n                    if (textWidth > longest) {\r\n                        longest = textWidth;\r\n                    }\r\n                    return longest;\r\n                };\r\n                helpers.numberOfLabelLines = function(arrayOfThings) {\r\n                    var numberOfLines = 1;\r\n                    helpers.each(arrayOfThings, function(thing) {\r\n                        if (helpers.isArray(thing)) {\r\n                            if (thing.length > numberOfLines) {\r\n                                numberOfLines = thing.length;\r\n                            }\r\n                        }\r\n                    });\r\n                    return numberOfLines;\r\n                };\r\n\r\n                helpers.color = !color ?\r\n                    function(value) {\r\n                        console.error('Color.js not found!');\r\n                        return value;\r\n                    } :\r\n                    function(value) {\r\n                        /* global CanvasGradient */\r\n                        if (value instanceof CanvasGradient) {\r\n                            value = defaults.global.defaultColor;\r\n                        }\r\n\r\n                        return color(value);\r\n                    };\r\n\r\n                helpers.getHoverColor = function(colorValue) {\r\n                    /* global CanvasPattern */\r\n                    return (colorValue instanceof CanvasPattern) ?\r\n                        colorValue :\r\n                        helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"2\": 2, \"36\": 36 }], 19: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Helper function to get relative position for an event\r\n             * @param {Event|IEvent} event - The event to get the position for\r\n             * @param {Chart} chart - The chart\r\n             * @returns {Point} the event position\r\n             */\r\n            function getRelativePosition(e, chart) {\r\n                if (e.native) {\r\n                    return {\r\n                        x: e.x,\r\n                        y: e.y\r\n                    };\r\n                }\r\n\r\n                return helpers.getRelativePosition(e, chart);\r\n            }\r\n\r\n            /**\r\n             * Helper function to traverse all of the visible elements in the chart\r\n             * @param chart {chart} the chart\r\n             * @param handler {Function} the callback to execute for each visible item\r\n             */\r\n            function parseVisibleItems(chart, handler) {\r\n                var datasets = chart.data.datasets;\r\n                var meta, i, j, ilen, jlen;\r\n\r\n                for (i = 0, ilen = datasets.length; i < ilen; ++i) {\r\n                    if (!chart.isDatasetVisible(i)) {\r\n                        continue;\r\n                    }\r\n\r\n                    meta = chart.getDatasetMeta(i);\r\n                    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\r\n                        var element = meta.data[j];\r\n                        if (!element._view.skip) {\r\n                            handler(element);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the items that intersect the event position\r\n             * @param items {ChartElement[]} elements to filter\r\n             * @param position {Point} the point to be nearest to\r\n             * @return {ChartElement[]} the nearest items\r\n             */\r\n            function getIntersectItems(chart, position) {\r\n                var elements = [];\r\n\r\n                parseVisibleItems(chart, function(element) {\r\n                    if (element.inRange(position.x, position.y)) {\r\n                        elements.push(element);\r\n                    }\r\n                });\r\n\r\n                return elements;\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the items nearest to the event position considering all visible items in teh chart\r\n             * @param chart {Chart} the chart to look at elements from\r\n             * @param position {Point} the point to be nearest to\r\n             * @param intersect {Boolean} if true, only consider items that intersect the position\r\n             * @param distanceMetric {Function} function to provide the distance between points\r\n             * @return {ChartElement[]} the nearest items\r\n             */\r\n            function getNearestItems(chart, position, intersect, distanceMetric) {\r\n                var minDistance = Number.POSITIVE_INFINITY;\r\n                var nearestItems = [];\r\n\r\n                parseVisibleItems(chart, function(element) {\r\n                    if (intersect && !element.inRange(position.x, position.y)) {\r\n                        return;\r\n                    }\r\n\r\n                    var center = element.getCenterPoint();\r\n                    var distance = distanceMetric(position, center);\r\n\r\n                    if (distance < minDistance) {\r\n                        nearestItems = [element];\r\n                        minDistance = distance;\r\n                    } else if (distance === minDistance) {\r\n                        // Can have multiple items at the same distance in which case we sort by size\r\n                        nearestItems.push(element);\r\n                    }\r\n                });\r\n\r\n                return nearestItems;\r\n            }\r\n\r\n            /**\r\n             * Get a distance metric function for two points based on the\r\n             * axis mode setting\r\n             * @param {String} axis the axis mode. x|y|xy\r\n             */\r\n            function getDistanceMetricForAxis(axis) {\r\n                var useX = axis.indexOf('x') !== -1;\r\n                var useY = axis.indexOf('y') !== -1;\r\n\r\n                return function(pt1, pt2) {\r\n                    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n                    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n                    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n                };\r\n            }\r\n\r\n            function indexMode(chart, e, options) {\r\n                var position = getRelativePosition(e, chart);\r\n                // Default axis for index mode is 'x' to match old behaviour\r\n                options.axis = options.axis || 'x';\r\n                var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\r\n                var elements = [];\r\n\r\n                if (!items.length) {\r\n                    return [];\r\n                }\r\n\r\n                chart.data.datasets.forEach(function(dataset, datasetIndex) {\r\n                    if (chart.isDatasetVisible(datasetIndex)) {\r\n                        var meta = chart.getDatasetMeta(datasetIndex);\r\n                        var element = meta.data[items[0]._index];\r\n\r\n                        // don't count items that are skipped (null data)\r\n                        if (element && !element._view.skip) {\r\n                            elements.push(element);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                return elements;\r\n            }\r\n\r\n            /**\r\n             * @interface IInteractionOptions\r\n             */\r\n            /**\r\n             * If true, only consider items that intersect the point\r\n             * @name IInterfaceOptions#boolean\r\n             * @type Boolean\r\n             */\r\n\r\n            /**\r\n             * Contains interaction related functions\r\n             * @namespace Chart.Interaction\r\n             */\r\n            module.exports = {\r\n                // Helper function for different modes\r\n                modes: {\r\n                    single: function(chart, e) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var elements = [];\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                elements.push(element);\r\n                                return elements;\r\n                            }\r\n                        });\r\n\r\n                        return elements.slice(0, 1);\r\n                    },\r\n\r\n                    /**\r\n                     * @function Chart.Interaction.modes.label\r\n                     * @deprecated since version 2.4.0\r\n                     * @todo remove at version 3\r\n                     * @private\r\n                     */\r\n                    label: indexMode,\r\n\r\n                    /**\r\n                     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\r\n                     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\r\n                     * @function Chart.Interaction.modes.index\r\n                     * @since v2.4.0\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use during interaction\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    index: indexMode,\r\n\r\n                    /**\r\n                     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\r\n                     * If the options.intersect is false, we find the nearest item and return the items in that dataset\r\n                     * @function Chart.Interaction.modes.dataset\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use during interaction\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    dataset: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        options.axis = options.axis || 'xy';\r\n                        var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\r\n\r\n                        if (items.length > 0) {\r\n                            items = chart.getDatasetMeta(items[0]._datasetIndex).data;\r\n                        }\r\n\r\n                        return items;\r\n                    },\r\n\r\n                    /**\r\n                     * @function Chart.Interaction.modes.x-axis\r\n                     * @deprecated since version 2.4.0. Use index mode and intersect == true\r\n                     * @todo remove at version 3\r\n                     * @private\r\n                     */\r\n                    'x-axis': function(chart, e) {\r\n                        return indexMode(chart, e, { intersect: false });\r\n                    },\r\n\r\n                    /**\r\n                     * Point mode returns all elements that hit test based on the event position\r\n                     * of the event\r\n                     * @function Chart.Interaction.modes.intersect\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    point: function(chart, e) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        return getIntersectItems(chart, position);\r\n                    },\r\n\r\n                    /**\r\n                     * nearest mode returns the element closest to the point\r\n                     * @function Chart.Interaction.modes.intersect\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    nearest: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        options.axis = options.axis || 'xy';\r\n                        var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                        var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\r\n\r\n                        // We have multiple items at the same distance from the event. Now sort by smallest\r\n                        if (nearestItems.length > 1) {\r\n                            nearestItems.sort(function(a, b) {\r\n                                var sizeA = a.getArea();\r\n                                var sizeB = b.getArea();\r\n                                var ret = sizeA - sizeB;\r\n\r\n                                if (ret === 0) {\r\n                                    // if equal sort by dataset index\r\n                                    ret = a._datasetIndex - b._datasetIndex;\r\n                                }\r\n\r\n                                return ret;\r\n                            });\r\n                        }\r\n\r\n                        // Return only 1 item\r\n                        return nearestItems.slice(0, 1);\r\n                    },\r\n\r\n                    /**\r\n                     * x mode returns the elements that hit-test at the current x coordinate\r\n                     * @function Chart.Interaction.modes.x\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    x: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var items = [];\r\n                        var intersectsItem = false;\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inXRange(position.x)) {\r\n                                items.push(element);\r\n                            }\r\n\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                intersectsItem = true;\r\n                            }\r\n                        });\r\n\r\n                        // If we want to trigger on an intersect and we don't have any items\r\n                        // that intersect the position, return nothing\r\n                        if (options.intersect && !intersectsItem) {\r\n                            items = [];\r\n                        }\r\n                        return items;\r\n                    },\r\n\r\n                    /**\r\n                     * y mode returns the elements that hit-test at the current y coordinate\r\n                     * @function Chart.Interaction.modes.y\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    y: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var items = [];\r\n                        var intersectsItem = false;\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inYRange(position.y)) {\r\n                                items.push(element);\r\n                            }\r\n\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                intersectsItem = true;\r\n                            }\r\n                        });\r\n\r\n                        // If we want to trigger on an intersect and we don't have any items\r\n                        // that intersect the position, return nothing\r\n                        if (options.intersect && !intersectsItem) {\r\n                            items = [];\r\n                        }\r\n                        return items;\r\n                    }\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 20: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n\r\n            defaults._set('global', {\r\n                responsive: true,\r\n                responsiveAnimationDuration: 0,\r\n                maintainAspectRatio: true,\r\n                events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\r\n                hover: {\r\n                    onHover: null,\r\n                    mode: 'nearest',\r\n                    intersect: true,\r\n                    animationDuration: 400\r\n                },\r\n                onClick: null,\r\n                defaultColor: 'rgba(0,0,0,0.1)',\r\n                defaultFontColor: '#666',\r\n                defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n                defaultFontSize: 12,\r\n                defaultFontStyle: 'normal',\r\n                showLines: true,\r\n\r\n                // Element defaults defined in element extensions\r\n                elements: {},\r\n\r\n                // Layout options such as padding\r\n                layout: {\r\n                    padding: {\r\n                        top: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        left: 0\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = function() {\r\n                // Occupy the global variable of Chart, and create a simple base class\r\n                var Chart = function(item, config) {\r\n                    this.construct(item, config);\r\n                    return this;\r\n                };\r\n\r\n                Chart.Chart = Chart;\r\n\r\n                return Chart;\r\n            };\r\n        }, { \"16\": 16 }], 21: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            function filterByPosition(array, position) {\r\n                return helpers.where(array, function(v) {\r\n                    return v.position === position;\r\n                });\r\n            }\r\n\r\n            function sortByWeight(array, reverse) {\r\n                array.forEach(function(v, i) {\r\n                    v._tmpIndex_ = i;\r\n                    return v;\r\n                });\r\n                array.sort(function(a, b) {\r\n                    var v0 = reverse ? b : a;\r\n                    var v1 = reverse ? a : b;\r\n                    return v0.weight === v1.weight ?\r\n                        v0._tmpIndex_ - v1._tmpIndex_ :\r\n                        v0.weight - v1.weight;\r\n                });\r\n                array.forEach(function(v) {\r\n                    delete v._tmpIndex_;\r\n                });\r\n            }\r\n\r\n            /**\r\n             * @interface ILayoutItem\r\n             * @prop {String} position - The position of the item in the chart layout. Possible values are\r\n             * 'left', 'top', 'right', 'bottom', and 'chartArea'\r\n             * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\r\n             * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\r\n             * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\r\n             * @prop {Function} update - Takes two parameters: width and height. Returns size of item\r\n             * @prop {Function} getPadding -  Returns an object with padding on the edges\r\n             * @prop {Number} width - Width of item. Must be valid after update()\r\n             * @prop {Number} height - Height of item. Must be valid after update()\r\n             * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\r\n             */\r\n\r\n            // The layout service is very self explanatory.  It's responsible for the layout within a chart.\r\n            // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\r\n            // It is this service's responsibility of carrying out that layout.\r\n            module.exports = {\r\n                defaults: {},\r\n\r\n                /**\r\n                 * Register a box to a chart.\r\n                 * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\r\n                 * @param {Chart} chart - the chart to use\r\n                 * @param {ILayoutItem} item - the item to add to be layed out\r\n                 */\r\n                addBox: function(chart, item) {\r\n                    if (!chart.boxes) {\r\n                        chart.boxes = [];\r\n                    }\r\n\r\n                    // initialize item with default values\r\n                    item.fullWidth = item.fullWidth || false;\r\n                    item.position = item.position || 'top';\r\n                    item.weight = item.weight || 0;\r\n\r\n                    chart.boxes.push(item);\r\n                },\r\n\r\n                /**\r\n                 * Remove a layoutItem from a chart\r\n                 * @param {Chart} chart - the chart to remove the box from\r\n                 * @param {Object} layoutItem - the item to remove from the layout\r\n                 */\r\n                removeBox: function(chart, layoutItem) {\r\n                    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n                    if (index !== -1) {\r\n                        chart.boxes.splice(index, 1);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Sets (or updates) options on the given `item`.\r\n                 * @param {Chart} chart - the chart in which the item lives (or will be added to)\r\n                 * @param {Object} item - the item to configure with the given options\r\n                 * @param {Object} options - the new item options.\r\n                 */\r\n                configure: function(chart, item, options) {\r\n                    var props = ['fullWidth', 'position', 'weight'];\r\n                    var ilen = props.length;\r\n                    var i = 0;\r\n                    var prop;\r\n\r\n                    for (; i < ilen; ++i) {\r\n                        prop = props[i];\r\n                        if (options.hasOwnProperty(prop)) {\r\n                            item[prop] = options[prop];\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Fits boxes of the given chart into the given size by having each box measure itself\r\n                 * then running a fitting algorithm\r\n                 * @param {Chart} chart - the chart\r\n                 * @param {Number} width - the width to fit into\r\n                 * @param {Number} height - the height to fit into\r\n                 */\r\n                update: function(chart, width, height) {\r\n                    if (!chart) {\r\n                        return;\r\n                    }\r\n\r\n                    var layoutOptions = chart.options.layout || {};\r\n                    var padding = helpers.options.toPadding(layoutOptions.padding);\r\n                    var leftPadding = padding.left;\r\n                    var rightPadding = padding.right;\r\n                    var topPadding = padding.top;\r\n                    var bottomPadding = padding.bottom;\r\n\r\n                    var leftBoxes = filterByPosition(chart.boxes, 'left');\r\n                    var rightBoxes = filterByPosition(chart.boxes, 'right');\r\n                    var topBoxes = filterByPosition(chart.boxes, 'top');\r\n                    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\r\n                    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\r\n\r\n                    // Sort boxes by weight. A higher weight is further away from the chart area\r\n                    sortByWeight(leftBoxes, true);\r\n                    sortByWeight(rightBoxes, false);\r\n                    sortByWeight(topBoxes, true);\r\n                    sortByWeight(bottomBoxes, false);\r\n\r\n                    // Essentially we now have any number of boxes on each of the 4 sides.\r\n                    // Our canvas looks like the following.\r\n                    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\r\n                    // B1 is the bottom axis\r\n                    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\r\n                    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\r\n                    // an error will be thrown.\r\n                    //\r\n                    // |----------------------------------------------------|\r\n                    // |                  T1 (Full Width)                   |\r\n                    // |----------------------------------------------------|\r\n                    // |    |    |                 T2                  |    |\r\n                    // |    |----|-------------------------------------|----|\r\n                    // |    |    | C1 |                           | C2 |    |\r\n                    // |    |    |----|                           |----|    |\r\n                    // |    |    |                                     |    |\r\n                    // | L1 | L2 |           ChartArea (C0)            | R1 |\r\n                    // |    |    |                                     |    |\r\n                    // |    |    |----|                           |----|    |\r\n                    // |    |    | C3 |                           | C4 |    |\r\n                    // |    |----|-------------------------------------|----|\r\n                    // |    |    |                 B1                  |    |\r\n                    // |----------------------------------------------------|\r\n                    // |                  B2 (Full Width)                   |\r\n                    // |----------------------------------------------------|\r\n                    //\r\n                    // What we do to find the best sizing, we do the following\r\n                    // 1. Determine the minimum size of the chart area.\r\n                    // 2. Split the remaining width equally between each vertical axis\r\n                    // 3. Split the remaining height equally between each horizontal axis\r\n                    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\r\n                    // 5. Adjust the sizes of each axis based on it's minimum reported size.\r\n                    // 6. Refit each axis\r\n                    // 7. Position each axis in the final location\r\n                    // 8. Tell the chart the final location of the chart area\r\n                    // 9. Tell any axes that overlay the chart area the positions of the chart area\r\n\r\n                    // Step 1\r\n                    var chartWidth = width - leftPadding - rightPadding;\r\n                    var chartHeight = height - topPadding - bottomPadding;\r\n                    var chartAreaWidth = chartWidth / 2; // min 50%\r\n                    var chartAreaHeight = chartHeight / 2; // min 50%\r\n\r\n                    // Step 2\r\n                    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\r\n\r\n                    // Step 3\r\n                    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\r\n\r\n                    // Step 4\r\n                    var maxChartAreaWidth = chartWidth;\r\n                    var maxChartAreaHeight = chartHeight;\r\n                    var minBoxSizes = [];\r\n\r\n                    function getMinimumBoxSize(box) {\r\n                        var minSize;\r\n                        var isHorizontal = box.isHorizontal();\r\n\r\n                        if (isHorizontal) {\r\n                            minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\r\n                            maxChartAreaHeight -= minSize.height;\r\n                        } else {\r\n                            minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\r\n                            maxChartAreaWidth -= minSize.width;\r\n                        }\r\n\r\n                        minBoxSizes.push({\r\n                            horizontal: isHorizontal,\r\n                            minSize: minSize,\r\n                            box: box,\r\n                        });\r\n                    }\r\n\r\n                    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\r\n\r\n                    // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\r\n                    var maxHorizontalLeftPadding = 0;\r\n                    var maxHorizontalRightPadding = 0;\r\n                    var maxVerticalTopPadding = 0;\r\n                    var maxVerticalBottomPadding = 0;\r\n\r\n                    helpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\r\n                        if (horizontalBox.getPadding) {\r\n                            var boxPadding = horizontalBox.getPadding();\r\n                            maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\r\n                            maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\r\n                        }\r\n                    });\r\n\r\n                    helpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\r\n                        if (verticalBox.getPadding) {\r\n                            var boxPadding = verticalBox.getPadding();\r\n                            maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\r\n                            maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\r\n                        }\r\n                    });\r\n\r\n                    // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\r\n                    // be if the axes are drawn at their minimum sizes.\r\n                    // Steps 5 & 6\r\n                    var totalLeftBoxesWidth = leftPadding;\r\n                    var totalRightBoxesWidth = rightPadding;\r\n                    var totalTopBoxesHeight = topPadding;\r\n                    var totalBottomBoxesHeight = bottomPadding;\r\n\r\n                    // Function to fit a box\r\n                    function fitBox(box) {\r\n                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\r\n                            return minBox.box === box;\r\n                        });\r\n\r\n                        if (minBoxSize) {\r\n                            if (box.isHorizontal()) {\r\n                                var scaleMargin = {\r\n                                    left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\r\n                                    right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\r\n                                    top: 0,\r\n                                    bottom: 0\r\n                                };\r\n\r\n                                // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\r\n                                // on the margin. Sometimes they need to increase in size slightly\r\n                                box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\r\n                            } else {\r\n                                box.update(minBoxSize.minSize.width, maxChartAreaHeight);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Update, and calculate the left and right margins for the horizontal boxes\r\n                    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\r\n\r\n                    helpers.each(leftBoxes, function(box) {\r\n                        totalLeftBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(rightBoxes, function(box) {\r\n                        totalRightBoxesWidth += box.width;\r\n                    });\r\n\r\n                    // Set the Left and Right margins for the horizontal boxes\r\n                    helpers.each(topBoxes.concat(bottomBoxes), fitBox);\r\n\r\n                    // Figure out how much margin is on the top and bottom of the vertical boxes\r\n                    helpers.each(topBoxes, function(box) {\r\n                        totalTopBoxesHeight += box.height;\r\n                    });\r\n\r\n                    helpers.each(bottomBoxes, function(box) {\r\n                        totalBottomBoxesHeight += box.height;\r\n                    });\r\n\r\n                    function finalFitVerticalBox(box) {\r\n                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\r\n                            return minSize.box === box;\r\n                        });\r\n\r\n                        var scaleMargin = {\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: totalTopBoxesHeight,\r\n                            bottom: totalBottomBoxesHeight\r\n                        };\r\n\r\n                        if (minBoxSize) {\r\n                            box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\r\n                        }\r\n                    }\r\n\r\n                    // Let the left layout know the final margin\r\n                    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\r\n\r\n                    // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\r\n                    totalLeftBoxesWidth = leftPadding;\r\n                    totalRightBoxesWidth = rightPadding;\r\n                    totalTopBoxesHeight = topPadding;\r\n                    totalBottomBoxesHeight = bottomPadding;\r\n\r\n                    helpers.each(leftBoxes, function(box) {\r\n                        totalLeftBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(rightBoxes, function(box) {\r\n                        totalRightBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(topBoxes, function(box) {\r\n                        totalTopBoxesHeight += box.height;\r\n                    });\r\n                    helpers.each(bottomBoxes, function(box) {\r\n                        totalBottomBoxesHeight += box.height;\r\n                    });\r\n\r\n                    // We may be adding some padding to account for rotated x axis labels\r\n                    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\r\n                    totalLeftBoxesWidth += leftPaddingAddition;\r\n                    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\r\n\r\n                    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\r\n                    totalTopBoxesHeight += topPaddingAddition;\r\n                    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\r\n\r\n                    // Figure out if our chart area changed. This would occur if the dataset layout label rotation\r\n                    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\r\n                    // without calling `fit` again\r\n                    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\r\n                    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\r\n\r\n                    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\r\n                        helpers.each(leftBoxes, function(box) {\r\n                            box.height = newMaxChartAreaHeight;\r\n                        });\r\n\r\n                        helpers.each(rightBoxes, function(box) {\r\n                            box.height = newMaxChartAreaHeight;\r\n                        });\r\n\r\n                        helpers.each(topBoxes, function(box) {\r\n                            if (!box.fullWidth) {\r\n                                box.width = newMaxChartAreaWidth;\r\n                            }\r\n                        });\r\n\r\n                        helpers.each(bottomBoxes, function(box) {\r\n                            if (!box.fullWidth) {\r\n                                box.width = newMaxChartAreaWidth;\r\n                            }\r\n                        });\r\n\r\n                        maxChartAreaHeight = newMaxChartAreaHeight;\r\n                        maxChartAreaWidth = newMaxChartAreaWidth;\r\n                    }\r\n\r\n                    // Step 7 - Position the boxes\r\n                    var left = leftPadding + leftPaddingAddition;\r\n                    var top = topPadding + topPaddingAddition;\r\n\r\n                    function placeBox(box) {\r\n                        if (box.isHorizontal()) {\r\n                            box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\r\n                            box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\r\n                            box.top = top;\r\n                            box.bottom = top + box.height;\r\n\r\n                            // Move to next point\r\n                            top = box.bottom;\r\n                        } else {\r\n                            box.left = left;\r\n                            box.right = left + box.width;\r\n                            box.top = totalTopBoxesHeight;\r\n                            box.bottom = totalTopBoxesHeight + maxChartAreaHeight;\r\n\r\n                            // Move to next point\r\n                            left = box.right;\r\n                        }\r\n                    }\r\n\r\n                    helpers.each(leftBoxes.concat(topBoxes), placeBox);\r\n\r\n                    // Account for chart width and height\r\n                    left += maxChartAreaWidth;\r\n                    top += maxChartAreaHeight;\r\n\r\n                    helpers.each(rightBoxes, placeBox);\r\n                    helpers.each(bottomBoxes, placeBox);\r\n\r\n                    // Step 8\r\n                    chart.chartArea = {\r\n                        left: totalLeftBoxesWidth,\r\n                        top: totalTopBoxesHeight,\r\n                        right: totalLeftBoxesWidth + maxChartAreaWidth,\r\n                        bottom: totalTopBoxesHeight + maxChartAreaHeight\r\n                    };\r\n\r\n                    // Step 9\r\n                    helpers.each(chartAreaBoxes, function(box) {\r\n                        box.left = chart.chartArea.left;\r\n                        box.top = chart.chartArea.top;\r\n                        box.right = chart.chartArea.right;\r\n                        box.bottom = chart.chartArea.bottom;\r\n\r\n                        box.update(maxChartAreaWidth, maxChartAreaHeight);\r\n                    });\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 22: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                plugins: {}\r\n            });\r\n\r\n            /**\r\n             * The plugin service singleton\r\n             * @namespace Chart.plugins\r\n             * @since 2.1.0\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Globally registered plugins.\r\n                 * @private\r\n                 */\r\n                _plugins: [],\r\n\r\n                /**\r\n                 * This identifier is used to invalidate the descriptors cache attached to each chart\r\n                 * when a global plugin is registered or unregistered. In this case, the cache ID is\r\n                 * incremented and descriptors are regenerated during following API calls.\r\n                 * @private\r\n                 */\r\n                _cacheId: 0,\r\n\r\n                /**\r\n                 * Registers the given plugin(s) if not already registered.\r\n                 * @param {Array|Object} plugins plugin instance(s).\r\n                 */\r\n                register: function(plugins) {\r\n                    var p = this._plugins;\r\n                    ([]).concat(plugins).forEach(function(plugin) {\r\n                        if (p.indexOf(plugin) === -1) {\r\n                            p.push(plugin);\r\n                        }\r\n                    });\r\n\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Unregisters the given plugin(s) only if registered.\r\n                 * @param {Array|Object} plugins plugin instance(s).\r\n                 */\r\n                unregister: function(plugins) {\r\n                    var p = this._plugins;\r\n                    ([]).concat(plugins).forEach(function(plugin) {\r\n                        var idx = p.indexOf(plugin);\r\n                        if (idx !== -1) {\r\n                            p.splice(idx, 1);\r\n                        }\r\n                    });\r\n\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Remove all registered plugins.\r\n                 * @since 2.1.5\r\n                 */\r\n                clear: function() {\r\n                    this._plugins = [];\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Returns the number of registered plugins?\r\n                 * @returns {Number}\r\n                 * @since 2.1.5\r\n                 */\r\n                count: function() {\r\n                    return this._plugins.length;\r\n                },\r\n\r\n                /**\r\n                 * Returns all registered plugin instances.\r\n                 * @returns {Array} array of plugin objects.\r\n                 * @since 2.1.5\r\n                 */\r\n                getAll: function() {\r\n                    return this._plugins;\r\n                },\r\n\r\n                /**\r\n                 * Calls enabled plugins for `chart` on the specified hook and with the given args.\r\n                 * This method immediately returns as soon as a plugin explicitly returns false. The\r\n                 * returned value can be used, for instance, to interrupt the current action.\r\n                 * @param {Object} chart - The chart instance for which plugins should be called.\r\n                 * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\r\n                 * @param {Array} [args] - Extra arguments to apply to the hook call.\r\n                 * @returns {Boolean} false if any of the plugins return false, else returns true.\r\n                 */\r\n                notify: function(chart, hook, args) {\r\n                    var descriptors = this.descriptors(chart);\r\n                    var ilen = descriptors.length;\r\n                    var i, descriptor, plugin, params, method;\r\n\r\n                    for (i = 0; i < ilen; ++i) {\r\n                        descriptor = descriptors[i];\r\n                        plugin = descriptor.plugin;\r\n                        method = plugin[hook];\r\n                        if (typeof method === 'function') {\r\n                            params = [chart].concat(args || []);\r\n                            params.push(descriptor.options);\r\n                            if (method.apply(plugin, params) === false) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                },\r\n\r\n                /**\r\n                 * Returns descriptors of enabled plugins for the given chart.\r\n                 * @returns {Array} [{ plugin, options }]\r\n                 * @private\r\n                 */\r\n                descriptors: function(chart) {\r\n                    var cache = chart.$plugins || (chart.$plugins = {});\r\n                    if (cache.id === this._cacheId) {\r\n                        return cache.descriptors;\r\n                    }\r\n\r\n                    var plugins = [];\r\n                    var descriptors = [];\r\n                    var config = (chart && chart.config) || {};\r\n                    var options = (config.options && config.options.plugins) || {};\r\n\r\n                    this._plugins.concat(config.plugins || []).forEach(function(plugin) {\r\n                        var idx = plugins.indexOf(plugin);\r\n                        if (idx !== -1) {\r\n                            return;\r\n                        }\r\n\r\n                        var id = plugin.id;\r\n                        var opts = options[id];\r\n                        if (opts === false) {\r\n                            return;\r\n                        }\r\n\r\n                        if (opts === true) {\r\n                            opts = helpers.clone(defaults.global.plugins[id]);\r\n                        }\r\n\r\n                        plugins.push(plugin);\r\n                        descriptors.push({\r\n                            plugin: plugin,\r\n                            options: opts || {}\r\n                        });\r\n                    });\r\n\r\n                    cache.descriptors = descriptors;\r\n                    cache.id = this._cacheId;\r\n                    return descriptors;\r\n                },\r\n\r\n                /**\r\n                 * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\r\n                 * but in some cases, this reference can be changed by the user when updating options.\r\n                 * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\r\n                 * @private\r\n                 */\r\n                _invalidate: function(chart) {\r\n                    delete chart.$plugins;\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Plugin extension hooks.\r\n             * @interface IPlugin\r\n             * @since 2.1.0\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeInit\r\n             * @desc Called before initializing `chart`.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterInit\r\n             * @desc Called after `chart` has been initialized and before the first update.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeUpdate\r\n             * @desc Called before updating `chart`. If any plugin returns `false`, the update\r\n             * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart update.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterUpdate\r\n             * @desc Called after `chart` has been updated and before rendering. Note that this\r\n             * hook will not be called if the chart update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetsUpdate\r\n             * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\r\n             * the datasets update is cancelled until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} false to cancel the datasets update.\r\n             * @since version 2.1.5\r\n            */\r\n            /**\r\n             * @method IPlugin#afterDatasetsUpdate\r\n             * @desc Called after the `chart` datasets have been updated. Note that this hook\r\n             * will not be called if the datasets update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @since version 2.1.5\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetUpdate\r\n             * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\r\n             * returns `false`, the datasets update is cancelled until another `update` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetUpdate\r\n             * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\r\n             * that this hook will not be called if the datasets update has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeLayout\r\n             * @desc Called before laying out `chart`. If any plugin returns `false`,\r\n             * the layout update is cancelled until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart layout.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterLayout\r\n             * @desc Called after the `chart` has been layed out. Note that this hook will not\r\n             * be called if the layout update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeRender\r\n             * @desc Called before rendering `chart`. If any plugin returns `false`,\r\n             * the rendering is cancelled until another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart rendering.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterRender\r\n             * @desc Called after the `chart` has been fully rendered (and animation completed). Note\r\n             * that this hook will not be called if the rendering has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDraw\r\n             * @desc Called before drawing `chart` at every animation frame specified by the given\r\n             * easing value. If any plugin returns `false`, the frame drawing is cancelled until\r\n             * another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDraw\r\n             * @desc Called after the `chart` has been drawn for the specific easing value. Note\r\n             * that this hook will not be called if the drawing has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetsDraw\r\n             * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\r\n             * the datasets drawing is cancelled until another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetsDraw\r\n             * @desc Called after the `chart` datasets have been drawn. Note that this hook\r\n             * will not be called if the datasets drawing has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetDraw\r\n             * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\r\n             * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\r\n             * is cancelled until another `render` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetDraw\r\n             * @desc Called after the `chart` datasets at the given `args.index` have been drawn\r\n             * (datasets are drawn in the reverse order). Note that this hook will not be called\r\n             * if the datasets drawing has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeTooltipDraw\r\n             * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\r\n             * the tooltip drawing is cancelled until another `render` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Object} args.tooltip - The tooltip.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart tooltip drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterTooltipDraw\r\n             * @desc Called after drawing the `tooltip`. Note that this hook will not\r\n             * be called if the tooltip drawing has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Object} args.tooltip - The tooltip.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeEvent\r\n             * @desc Called before processing the specified `event`. If any plugin returns `false`,\r\n             * the event will be discarded.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {IEvent} event - The event object.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterEvent\r\n             * @desc Called after the `event` has been consumed. Note that this hook\r\n             * will not be called if the `event` has been previously discarded.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {IEvent} event - The event object.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#resize\r\n             * @desc Called after the chart as been resized.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#destroy\r\n             * @desc Called after the chart as been destroyed.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n        }, { \"16\": 16, \"36\": 36 }], 23: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var Ticks = require(25);\r\n\r\n            defaults._set('scale', {\r\n                display: true,\r\n                position: 'left',\r\n                offset: false,\r\n\r\n                // grid line settings\r\n                gridLines: {\r\n                    display: true,\r\n                    color: 'rgba(0, 0, 0, 0.1)',\r\n                    lineWidth: 1,\r\n                    drawBorder: true,\r\n                    drawOnChartArea: true,\r\n                    drawTicks: true,\r\n                    tickMarkLength: 10,\r\n                    zeroLineWidth: 1,\r\n                    zeroLineColor: 'rgba(0,0,0,0.25)',\r\n                    zeroLineBorderDash: [],\r\n                    zeroLineBorderDashOffset: 0.0,\r\n                    offsetGridLines: false,\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0\r\n                },\r\n\r\n                // scale label\r\n                scaleLabel: {\r\n                    // display property\r\n                    display: false,\r\n\r\n                    // actual label\r\n                    labelString: '',\r\n\r\n                    // line height\r\n                    lineHeight: 1.2,\r\n\r\n                    // top/bottom padding\r\n                    padding: {\r\n                        top: 4,\r\n                        bottom: 4\r\n                    }\r\n                },\r\n\r\n                // label settings\r\n                ticks: {\r\n                    beginAtZero: false,\r\n                    minRotation: 0,\r\n                    maxRotation: 50,\r\n                    mirror: false,\r\n                    padding: 0,\r\n                    reverse: false,\r\n                    display: true,\r\n                    autoSkip: true,\r\n                    autoSkipPadding: 0,\r\n                    labelOffset: 0,\r\n                    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\r\n                    callback: Ticks.formatters.values,\r\n                    minor: {},\r\n                    major: {}\r\n                }\r\n            });\r\n\r\n            function labelsFromTicks(ticks) {\r\n                var labels = [];\r\n                var i, ilen;\r\n\r\n                for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n                    labels.push(ticks[i].label);\r\n                }\r\n\r\n                return labels;\r\n            }\r\n\r\n            function getLineValue(scale, index, offsetGridLines) {\r\n                var lineValue = scale.getPixelForTick(index);\r\n\r\n                if (offsetGridLines) {\r\n                    if (index === 0) {\r\n                        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\r\n                    } else {\r\n                        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\r\n                    }\r\n                }\r\n                return lineValue;\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                function computeTextSize(context, tick, font) {\r\n                    return helpers.isArray(tick) ?\r\n                        helpers.longestText(context, font, tick) :\r\n                        context.measureText(tick).width;\r\n                }\r\n\r\n                function parseFontOptions(options) {\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var globalDefaults = defaults.global;\r\n                    var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\r\n                    var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\r\n                    var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\r\n\r\n                    return {\r\n                        size: size,\r\n                        style: style,\r\n                        family: family,\r\n                        font: helpers.fontString(size, style, family)\r\n                    };\r\n                }\r\n\r\n                function parseLineHeight(options) {\r\n                    return helpers.options.toLineHeight(\r\n                        helpers.valueOrDefault(options.lineHeight, 1.2),\r\n                        helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\r\n                }\r\n\r\n                Chart.Scale = Element.extend({\r\n                    /**\r\n                     * Get the padding needed for the scale\r\n                     * @method getPadding\r\n                     * @private\r\n                     * @returns {Padding} the necessary padding\r\n                     */\r\n                    getPadding: function() {\r\n                        var me = this;\r\n                        return {\r\n                            left: me.paddingLeft || 0,\r\n                            top: me.paddingTop || 0,\r\n                            right: me.paddingRight || 0,\r\n                            bottom: me.paddingBottom || 0\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the scale tick objects ({label, major})\r\n                     * @since 2.7\r\n                     */\r\n                    getTicks: function() {\r\n                        return this._ticks;\r\n                    },\r\n\r\n                    // These methods are ordered by lifecyle. Utilities then follow.\r\n                    // Any function defined here is inherited by all scale types.\r\n                    // Any function can be extended by the scale type\r\n\r\n                    mergeTicksOptions: function() {\r\n                        var ticks = this.options.ticks;\r\n                        if (ticks.minor === false) {\r\n                            ticks.minor = {\r\n                                display: false\r\n                            };\r\n                        }\r\n                        if (ticks.major === false) {\r\n                            ticks.major = {\r\n                                display: false\r\n                            };\r\n                        }\r\n                        for (var key in ticks) {\r\n                            if (key !== 'major' && key !== 'minor') {\r\n                                if (typeof ticks.minor[key] === 'undefined') {\r\n                                    ticks.minor[key] = ticks[key];\r\n                                }\r\n                                if (typeof ticks.major[key] === 'undefined') {\r\n                                    ticks.major[key] = ticks[key];\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    beforeUpdate: function() {\r\n                        helpers.callback(this.options.beforeUpdate, [this]);\r\n                    },\r\n                    update: function(maxWidth, maxHeight, margins) {\r\n                        var me = this;\r\n                        var i, ilen, labels, label, ticks, tick;\r\n\r\n                        // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                        me.beforeUpdate();\r\n\r\n                        // Absorb the master measurements\r\n                        me.maxWidth = maxWidth;\r\n                        me.maxHeight = maxHeight;\r\n                        me.margins = helpers.extend({\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: 0,\r\n                            bottom: 0\r\n                        }, margins);\r\n                        me.longestTextCache = me.longestTextCache || {};\r\n\r\n                        // Dimensions\r\n                        me.beforeSetDimensions();\r\n                        me.setDimensions();\r\n                        me.afterSetDimensions();\r\n\r\n                        // Data min/max\r\n                        me.beforeDataLimits();\r\n                        me.determineDataLimits();\r\n                        me.afterDataLimits();\r\n\r\n                        // Ticks - `this.ticks` is now DEPRECATED!\r\n                        // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\r\n                        // and must not be accessed directly from outside this class. `this.ticks` being\r\n                        // around for long time and not marked as private, we can't change its structure\r\n                        // without unexpected breaking changes. If you need to access the scale ticks,\r\n                        // use scale.getTicks() instead.\r\n\r\n                        me.beforeBuildTicks();\r\n\r\n                        // New implementations should return an array of objects but for BACKWARD COMPAT,\r\n                        // we still support no return (`this.ticks` internally set by calling this method).\r\n                        ticks = me.buildTicks() || [];\r\n\r\n                        me.afterBuildTicks();\r\n\r\n                        me.beforeTickToLabelConversion();\r\n\r\n                        // New implementations should return the formatted tick labels but for BACKWARD\r\n                        // COMPAT, we still support no return (`this.ticks` internally changed by calling\r\n                        // this method and supposed to contain only string values).\r\n                        labels = me.convertTicksToLabels(ticks) || me.ticks;\r\n\r\n                        me.afterTickToLabelConversion();\r\n\r\n                        me.ticks = labels;   // BACKWARD COMPATIBILITY\r\n\r\n                        // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\r\n\r\n                        // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\r\n                        for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n                            label = labels[i];\r\n                            tick = ticks[i];\r\n                            if (!tick) {\r\n                                ticks.push(tick = {\r\n                                    label: label,\r\n                                    major: false\r\n                                });\r\n                            } else {\r\n                                tick.label = label;\r\n                            }\r\n                        }\r\n\r\n                        me._ticks = ticks;\r\n\r\n                        // Tick Rotation\r\n                        me.beforeCalculateTickRotation();\r\n                        me.calculateTickRotation();\r\n                        me.afterCalculateTickRotation();\r\n                        // Fit\r\n                        me.beforeFit();\r\n                        me.fit();\r\n                        me.afterFit();\r\n                        //\r\n                        me.afterUpdate();\r\n\r\n                        return me.minSize;\r\n                    },\r\n                    afterUpdate: function() {\r\n                        helpers.callback(this.options.afterUpdate, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeSetDimensions: function() {\r\n                        helpers.callback(this.options.beforeSetDimensions, [this]);\r\n                    },\r\n                    setDimensions: function() {\r\n                        var me = this;\r\n                        // Set the unconstrained dimension before label rotation\r\n                        if (me.isHorizontal()) {\r\n                            // Reset position before calculating rotation\r\n                            me.width = me.maxWidth;\r\n                            me.left = 0;\r\n                            me.right = me.width;\r\n                        } else {\r\n                            me.height = me.maxHeight;\r\n\r\n                            // Reset position before calculating rotation\r\n                            me.top = 0;\r\n                            me.bottom = me.height;\r\n                        }\r\n\r\n                        // Reset padding\r\n                        me.paddingLeft = 0;\r\n                        me.paddingTop = 0;\r\n                        me.paddingRight = 0;\r\n                        me.paddingBottom = 0;\r\n                    },\r\n                    afterSetDimensions: function() {\r\n                        helpers.callback(this.options.afterSetDimensions, [this]);\r\n                    },\r\n\r\n                    // Data limits\r\n                    beforeDataLimits: function() {\r\n                        helpers.callback(this.options.beforeDataLimits, [this]);\r\n                    },\r\n                    determineDataLimits: helpers.noop,\r\n                    afterDataLimits: function() {\r\n                        helpers.callback(this.options.afterDataLimits, [this]);\r\n                    },\r\n\r\n                    //\r\n                    beforeBuildTicks: function() {\r\n                        helpers.callback(this.options.beforeBuildTicks, [this]);\r\n                    },\r\n                    buildTicks: helpers.noop,\r\n                    afterBuildTicks: function() {\r\n                        helpers.callback(this.options.afterBuildTicks, [this]);\r\n                    },\r\n\r\n                    beforeTickToLabelConversion: function() {\r\n                        helpers.callback(this.options.beforeTickToLabelConversion, [this]);\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        // Convert ticks to strings\r\n                        var tickOpts = me.options.ticks;\r\n                        me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\r\n                    },\r\n                    afterTickToLabelConversion: function() {\r\n                        helpers.callback(this.options.afterTickToLabelConversion, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeCalculateTickRotation: function() {\r\n                        helpers.callback(this.options.beforeCalculateTickRotation, [this]);\r\n                    },\r\n                    calculateTickRotation: function() {\r\n                        var me = this;\r\n                        var context = me.ctx;\r\n                        var tickOpts = me.options.ticks;\r\n                        var labels = labelsFromTicks(me._ticks);\r\n\r\n                        // Get the width of each grid by calculating the difference\r\n                        // between x offsets between 0 and 1.\r\n                        var tickFont = parseFontOptions(tickOpts);\r\n                        context.font = tickFont.font;\r\n\r\n                        var labelRotation = tickOpts.minRotation || 0;\r\n\r\n                        if (labels.length && me.options.display && me.isHorizontal()) {\r\n                            var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\r\n                            var labelWidth = originalLabelWidth;\r\n                            var cosRotation, sinRotation;\r\n\r\n                            // Allow 3 pixels x2 padding either side for label readability\r\n                            var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\r\n\r\n                            // Max label rotation can be set or default to 90 - also act as a loop counter\r\n                            while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\r\n                                var angleRadians = helpers.toRadians(labelRotation);\r\n                                cosRotation = Math.cos(angleRadians);\r\n                                sinRotation = Math.sin(angleRadians);\r\n\r\n                                if (sinRotation * originalLabelWidth > me.maxHeight) {\r\n                                    // go back one step\r\n                                    labelRotation--;\r\n                                    break;\r\n                                }\r\n\r\n                                labelRotation++;\r\n                                labelWidth = cosRotation * originalLabelWidth;\r\n                            }\r\n                        }\r\n\r\n                        me.labelRotation = labelRotation;\r\n                    },\r\n                    afterCalculateTickRotation: function() {\r\n                        helpers.callback(this.options.afterCalculateTickRotation, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeFit: function() {\r\n                        helpers.callback(this.options.beforeFit, [this]);\r\n                    },\r\n                    fit: function() {\r\n                        var me = this;\r\n                        // Reset\r\n                        var minSize = me.minSize = {\r\n                            width: 0,\r\n                            height: 0\r\n                        };\r\n\r\n                        var labels = labelsFromTicks(me._ticks);\r\n\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n                        var scaleLabelOpts = opts.scaleLabel;\r\n                        var gridLineOpts = opts.gridLines;\r\n                        var display = opts.display;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        var tickFont = parseFontOptions(tickOpts);\r\n                        var tickMarkLength = opts.gridLines.tickMarkLength;\r\n\r\n                        // Width\r\n                        if (isHorizontal) {\r\n                            // subtract the margins to line up with the chartArea if we are a full width scale\r\n                            minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\r\n                        } else {\r\n                            minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n                        }\r\n\r\n                        // height\r\n                        if (isHorizontal) {\r\n                            minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n                        } else {\r\n                            minSize.height = me.maxHeight; // fill all the height\r\n                        }\r\n\r\n                        // Are we showing a title for the scale?\r\n                        if (scaleLabelOpts.display && display) {\r\n                            var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\r\n                            var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\r\n                            var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\r\n\r\n                            if (isHorizontal) {\r\n                                minSize.height += deltaHeight;\r\n                            } else {\r\n                                minSize.width += deltaHeight;\r\n                            }\r\n                        }\r\n\r\n                        // Don't bother fitting the ticks if we are not showing them\r\n                        if (tickOpts.display && display) {\r\n                            var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\r\n                            var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\r\n                            var lineSpace = tickFont.size * 0.5;\r\n                            var tickPadding = me.options.ticks.padding;\r\n\r\n                            if (isHorizontal) {\r\n                                // A horizontal axis is more constrained by the height.\r\n                                me.longestLabelWidth = largestTextWidth;\r\n\r\n                                var angleRadians = helpers.toRadians(me.labelRotation);\r\n                                var cosRotation = Math.cos(angleRadians);\r\n                                var sinRotation = Math.sin(angleRadians);\r\n\r\n                                // TODO - improve this calculation\r\n                                var labelHeight = (sinRotation * largestTextWidth)\r\n                                    + (tickFont.size * tallestLabelHeightInLines)\r\n                                    + (lineSpace * (tallestLabelHeightInLines - 1))\r\n                                    + lineSpace; // padding\r\n\r\n                                minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\r\n\r\n                                me.ctx.font = tickFont.font;\r\n                                var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\r\n                                var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\r\n\r\n                                // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\r\n                                // which means that the right padding is dominated by the font height\r\n                                if (me.labelRotation !== 0) {\r\n                                    me.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\r\n                                    me.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\r\n                                } else {\r\n                                    me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\r\n                                    me.paddingRight = lastLabelWidth / 2 + 3;\r\n                                }\r\n                            } else {\r\n                                // A vertical axis is more constrained by the width. Labels are the\r\n                                // dominant factor here, so get that length first and account for padding\r\n                                if (tickOpts.mirror) {\r\n                                    largestTextWidth = 0;\r\n                                } else {\r\n                                    // use lineSpace for consistency with horizontal axis\r\n                                    // tickPadding is not implemented for horizontal\r\n                                    largestTextWidth += tickPadding + lineSpace;\r\n                                }\r\n\r\n                                minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\r\n\r\n                                me.paddingTop = tickFont.size / 2;\r\n                                me.paddingBottom = tickFont.size / 2;\r\n                            }\r\n                        }\r\n\r\n                        me.handleMargins();\r\n\r\n                        me.width = minSize.width;\r\n                        me.height = minSize.height;\r\n                    },\r\n\r\n                    /**\r\n                     * Handle margins and padding interactions\r\n                     * @private\r\n                     */\r\n                    handleMargins: function() {\r\n                        var me = this;\r\n                        if (me.margins) {\r\n                            me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\r\n                            me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\r\n                            me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\r\n                            me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\r\n                        }\r\n                    },\r\n\r\n                    afterFit: function() {\r\n                        helpers.callback(this.options.afterFit, [this]);\r\n                    },\r\n\r\n                    // Shared Methods\r\n                    isHorizontal: function() {\r\n                        return this.options.position === 'top' || this.options.position === 'bottom';\r\n                    },\r\n                    isFullWidth: function() {\r\n                        return (this.options.fullWidth);\r\n                    },\r\n\r\n                    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\r\n                    getRightValue: function(rawValue) {\r\n                        // Null and undefined values first\r\n                        if (helpers.isNullOrUndef(rawValue)) {\r\n                            return NaN;\r\n                        }\r\n                        // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\r\n                        if (typeof rawValue === 'number' && !isFinite(rawValue)) {\r\n                            return NaN;\r\n                        }\r\n                        // If it is in fact an object, dive in one more level\r\n                        if (rawValue) {\r\n                            if (this.isHorizontal()) {\r\n                                if (rawValue.x !== undefined) {\r\n                                    return this.getRightValue(rawValue.x);\r\n                                }\r\n                            } else if (rawValue.y !== undefined) {\r\n                                return this.getRightValue(rawValue.y);\r\n                            }\r\n                        }\r\n\r\n                        // Value is good, return it\r\n                        return rawValue;\r\n                    },\r\n\r\n                    /**\r\n                     * Used to get the value to display in the tooltip for the data at the given index\r\n                     * @param index\r\n                     * @param datasetIndex\r\n                     */\r\n                    getLabelForIndex: helpers.noop,\r\n\r\n                    /**\r\n                     * Returns the location of the given data point. Value can either be an index or a numerical value\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     * @param value\r\n                     * @param index\r\n                     * @param datasetIndex\r\n                     */\r\n                    getPixelForValue: helpers.noop,\r\n\r\n                    /**\r\n                     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     * @param pixel\r\n                     */\r\n                    getValueForPixel: helpers.noop,\r\n\r\n                    /**\r\n                     * Returns the location of the tick at the given index\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getPixelForTick: function(index) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        if (me.isHorizontal()) {\r\n                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n                            var tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\r\n                            var pixel = (tickWidth * index) + me.paddingLeft;\r\n\r\n                            if (offset) {\r\n                                pixel += tickWidth / 2;\r\n                            }\r\n\r\n                            var finalVal = me.left + Math.round(pixel);\r\n                            finalVal += me.isFullWidth() ? me.margins.left : 0;\r\n                            return finalVal;\r\n                        }\r\n                        var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\r\n                        return me.top + (index * (innerHeight / (me._ticks.length - 1)));\r\n                    },\r\n\r\n                    /**\r\n                     * Utility for getting the pixel location of a percentage of scale\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getPixelForDecimal: function(decimal) {\r\n                        var me = this;\r\n                        if (me.isHorizontal()) {\r\n                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n                            var valueOffset = (innerWidth * decimal) + me.paddingLeft;\r\n\r\n                            var finalVal = me.left + Math.round(valueOffset);\r\n                            finalVal += me.isFullWidth() ? me.margins.left : 0;\r\n                            return finalVal;\r\n                        }\r\n                        return me.top + (decimal * me.height);\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the pixel for the minimum chart value\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getBasePixel: function() {\r\n                        return this.getPixelForValue(this.getBaseValue());\r\n                    },\r\n\r\n                    getBaseValue: function() {\r\n                        var me = this;\r\n                        var min = me.min;\r\n                        var max = me.max;\r\n\r\n                        return me.beginAtZero ? 0 :\r\n                            min < 0 && max < 0 ? max :\r\n                                min > 0 && max > 0 ? min :\r\n                                    0;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns a subset of ticks to be plotted to avoid overlapping labels.\r\n                     * @private\r\n                     */\r\n                    _autoSkip: function(ticks) {\r\n                        var skipRatio;\r\n                        var me = this;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var optionTicks = me.options.ticks.minor;\r\n                        var tickCount = ticks.length;\r\n                        var labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n                        var cosRotation = Math.cos(labelRotationRadians);\r\n                        var longestRotatedLabel = me.longestLabelWidth * cosRotation;\r\n                        var result = [];\r\n                        var i, tick, shouldSkip;\r\n\r\n                        // figure out the maximum number of gridlines to show\r\n                        var maxTicks;\r\n                        if (optionTicks.maxTicksLimit) {\r\n                            maxTicks = optionTicks.maxTicksLimit;\r\n                        }\r\n\r\n                        if (isHorizontal) {\r\n                            skipRatio = false;\r\n\r\n                            if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\r\n                                skipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\r\n                            }\r\n\r\n                            // if they defined a max number of optionTicks,\r\n                            // increase skipRatio until that number is met\r\n                            if (maxTicks && tickCount > maxTicks) {\r\n                                skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\r\n                            }\r\n                        }\r\n\r\n                        for (i = 0; i < tickCount; i++) {\r\n                            tick = ticks[i];\r\n\r\n                            // Since we always show the last tick,we need may need to hide the last shown one before\r\n                            shouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\r\n                            if (shouldSkip && i !== tickCount - 1) {\r\n                                // leave tick in place but make sure it's not displayed (#4635)\r\n                                delete tick.label;\r\n                            }\r\n                            result.push(tick);\r\n                        }\r\n                        return result;\r\n                    },\r\n\r\n                    // Actually draw the scale on the canvas\r\n                    // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\r\n                    draw: function(chartArea) {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        if (!options.display) {\r\n                            return;\r\n                        }\r\n\r\n                        var context = me.ctx;\r\n                        var globalDefaults = defaults.global;\r\n                        var optionTicks = options.ticks.minor;\r\n                        var optionMajorTicks = options.ticks.major || optionTicks;\r\n                        var gridLines = options.gridLines;\r\n                        var scaleLabel = options.scaleLabel;\r\n\r\n                        var isRotated = me.labelRotation !== 0;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\r\n                        var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\r\n                        var tickFont = parseFontOptions(optionTicks);\r\n                        var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\r\n                        var majorTickFont = parseFontOptions(optionMajorTicks);\r\n\r\n                        var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\r\n\r\n                        var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\r\n                        var scaleLabelFont = parseFontOptions(scaleLabel);\r\n                        var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\r\n                        var labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n\r\n                        var itemsToDraw = [];\r\n\r\n                        var axisWidth = me.options.gridLines.lineWidth;\r\n                        var xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\r\n                        var xTickEnd = options.position === 'right' ? me.right + tl : me.right;\r\n                        var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\r\n                        var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\r\n\r\n                        helpers.each(ticks, function(tick, index) {\r\n                            // autoskipper skipped this tick (#4635)\r\n                            if (helpers.isNullOrUndef(tick.label)) {\r\n                                return;\r\n                            }\r\n\r\n                            var label = tick.label;\r\n                            var lineWidth, lineColor, borderDash, borderDashOffset;\r\n                            if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\r\n                                // Draw the first index specially\r\n                                lineWidth = gridLines.zeroLineWidth;\r\n                                lineColor = gridLines.zeroLineColor;\r\n                                borderDash = gridLines.zeroLineBorderDash;\r\n                                borderDashOffset = gridLines.zeroLineBorderDashOffset;\r\n                            } else {\r\n                                lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\r\n                                lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\r\n                                borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\r\n                                borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\r\n                            }\r\n\r\n                            // Common properties\r\n                            var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\r\n                            var textAlign = 'middle';\r\n                            var textBaseline = 'middle';\r\n                            var tickPadding = optionTicks.padding;\r\n\r\n                            if (isHorizontal) {\r\n                                var labelYOffset = tl + tickPadding;\r\n\r\n                                if (options.position === 'bottom') {\r\n                                    // bottom\r\n                                    textBaseline = !isRotated ? 'top' : 'middle';\r\n                                    textAlign = !isRotated ? 'center' : 'right';\r\n                                    labelY = me.top + labelYOffset;\r\n                                } else {\r\n                                    // top\r\n                                    textBaseline = !isRotated ? 'bottom' : 'middle';\r\n                                    textAlign = !isRotated ? 'center' : 'left';\r\n                                    labelY = me.bottom - labelYOffset;\r\n                                }\r\n\r\n                                var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\r\n                                if (xLineValue < me.left) {\r\n                                    lineColor = 'rgba(0,0,0,0)';\r\n                                }\r\n                                xLineValue += helpers.aliasPixel(lineWidth);\r\n\r\n                                labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\r\n\r\n                                tx1 = tx2 = x1 = x2 = xLineValue;\r\n                                ty1 = yTickStart;\r\n                                ty2 = yTickEnd;\r\n                                y1 = chartArea.top;\r\n                                y2 = chartArea.bottom + axisWidth;\r\n                            } else {\r\n                                var isLeft = options.position === 'left';\r\n                                var labelXOffset;\r\n\r\n                                if (optionTicks.mirror) {\r\n                                    textAlign = isLeft ? 'left' : 'right';\r\n                                    labelXOffset = tickPadding;\r\n                                } else {\r\n                                    textAlign = isLeft ? 'right' : 'left';\r\n                                    labelXOffset = tl + tickPadding;\r\n                                }\r\n\r\n                                labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\r\n\r\n                                var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\r\n                                if (yLineValue < me.top) {\r\n                                    lineColor = 'rgba(0,0,0,0)';\r\n                                }\r\n                                yLineValue += helpers.aliasPixel(lineWidth);\r\n\r\n                                labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\r\n\r\n                                tx1 = xTickStart;\r\n                                tx2 = xTickEnd;\r\n                                x1 = chartArea.left;\r\n                                x2 = chartArea.right + axisWidth;\r\n                                ty1 = ty2 = y1 = y2 = yLineValue;\r\n                            }\r\n\r\n                            itemsToDraw.push({\r\n                                tx1: tx1,\r\n                                ty1: ty1,\r\n                                tx2: tx2,\r\n                                ty2: ty2,\r\n                                x1: x1,\r\n                                y1: y1,\r\n                                x2: x2,\r\n                                y2: y2,\r\n                                labelX: labelX,\r\n                                labelY: labelY,\r\n                                glWidth: lineWidth,\r\n                                glColor: lineColor,\r\n                                glBorderDash: borderDash,\r\n                                glBorderDashOffset: borderDashOffset,\r\n                                rotation: -1 * labelRotationRadians,\r\n                                label: label,\r\n                                major: tick.major,\r\n                                textBaseline: textBaseline,\r\n                                textAlign: textAlign\r\n                            });\r\n                        });\r\n\r\n                        // Draw all of the tick labels, tick marks, and grid lines at the correct places\r\n                        helpers.each(itemsToDraw, function(itemToDraw) {\r\n                            if (gridLines.display) {\r\n                                context.save();\r\n                                context.lineWidth = itemToDraw.glWidth;\r\n                                context.strokeStyle = itemToDraw.glColor;\r\n                                if (context.setLineDash) {\r\n                                    context.setLineDash(itemToDraw.glBorderDash);\r\n                                    context.lineDashOffset = itemToDraw.glBorderDashOffset;\r\n                                }\r\n\r\n                                context.beginPath();\r\n\r\n                                if (gridLines.drawTicks) {\r\n                                    context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\r\n                                    context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\r\n                                }\r\n\r\n                                if (gridLines.drawOnChartArea) {\r\n                                    context.moveTo(itemToDraw.x1, itemToDraw.y1);\r\n                                    context.lineTo(itemToDraw.x2, itemToDraw.y2);\r\n                                }\r\n\r\n                                context.stroke();\r\n                                context.restore();\r\n                            }\r\n\r\n                            if (optionTicks.display) {\r\n                                // Make sure we draw text in the correct color and font\r\n                                context.save();\r\n                                context.translate(itemToDraw.labelX, itemToDraw.labelY);\r\n                                context.rotate(itemToDraw.rotation);\r\n                                context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\r\n                                context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\r\n                                context.textBaseline = itemToDraw.textBaseline;\r\n                                context.textAlign = itemToDraw.textAlign;\r\n\r\n                                var label = itemToDraw.label;\r\n                                if (helpers.isArray(label)) {\r\n                                    var lineCount = label.length;\r\n                                    var lineHeight = tickFont.size * 1.5;\r\n                                    var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\r\n\r\n                                    for (var i = 0; i < lineCount; ++i) {\r\n                                        // We just make sure the multiline element is a string here..\r\n                                        context.fillText('' + label[i], 0, y);\r\n                                        // apply same lineSpacing as calculated @ L#320\r\n                                        y += lineHeight;\r\n                                    }\r\n                                } else {\r\n                                    context.fillText(label, 0, 0);\r\n                                }\r\n                                context.restore();\r\n                            }\r\n                        });\r\n\r\n                        if (scaleLabel.display) {\r\n                            // Draw the scale label\r\n                            var scaleLabelX;\r\n                            var scaleLabelY;\r\n                            var rotation = 0;\r\n                            var halfLineHeight = parseLineHeight(scaleLabel) / 2;\r\n\r\n                            if (isHorizontal) {\r\n                                scaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\r\n                                scaleLabelY = options.position === 'bottom'\r\n                                    ? me.bottom - halfLineHeight - scaleLabelPadding.bottom\r\n                                    : me.top + halfLineHeight + scaleLabelPadding.top;\r\n                            } else {\r\n                                var isLeft = options.position === 'left';\r\n                                scaleLabelX = isLeft\r\n                                    ? me.left + halfLineHeight + scaleLabelPadding.top\r\n                                    : me.right - halfLineHeight - scaleLabelPadding.top;\r\n                                scaleLabelY = me.top + ((me.bottom - me.top) / 2);\r\n                                rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\r\n                            }\r\n\r\n                            context.save();\r\n                            context.translate(scaleLabelX, scaleLabelY);\r\n                            context.rotate(rotation);\r\n                            context.textAlign = 'center';\r\n                            context.textBaseline = 'middle';\r\n                            context.fillStyle = scaleLabelFontColor; // render in correct colour\r\n                            context.font = scaleLabelFont.font;\r\n                            context.fillText(scaleLabel.labelString, 0, 0);\r\n                            context.restore();\r\n                        }\r\n\r\n                        if (gridLines.drawBorder) {\r\n                            // Draw the line at the edge of the axis\r\n                            context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\r\n                            context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\r\n                            var x1 = me.left;\r\n                            var x2 = me.right + axisWidth;\r\n                            var y1 = me.top;\r\n                            var y2 = me.bottom + axisWidth;\r\n\r\n                            var aliasPixel = helpers.aliasPixel(context.lineWidth);\r\n                            if (isHorizontal) {\r\n                                y1 = y2 = options.position === 'top' ? me.bottom : me.top;\r\n                                y1 += aliasPixel;\r\n                                y2 += aliasPixel;\r\n                            } else {\r\n                                x1 = x2 = options.position === 'left' ? me.right : me.left;\r\n                                x1 += aliasPixel;\r\n                                x2 += aliasPixel;\r\n                            }\r\n\r\n                            context.beginPath();\r\n                            context.moveTo(x1, y1);\r\n                            context.lineTo(x2, y2);\r\n                            context.stroke();\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"25\": 25, \"36\": 36 }], 24: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.scaleService = {\r\n                    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\r\n                    // use the new chart options to grab the correct scale\r\n                    constructors: {},\r\n                    // Use a registration function so that we can move to an ES6 map when we no longer need to support\r\n                    // old browsers\r\n\r\n                    // Scale config defaults\r\n                    defaults: {},\r\n                    registerScaleType: function(type, scaleConstructor, scaleDefaults) {\r\n                        this.constructors[type] = scaleConstructor;\r\n                        this.defaults[type] = helpers.clone(scaleDefaults);\r\n                    },\r\n                    getScaleConstructor: function(type) {\r\n                        return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\r\n                    },\r\n                    getScaleDefaults: function(type) {\r\n                        // Return the scale defaults merged with the global settings so that we always use the latest ones\r\n                        return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\r\n                    },\r\n                    updateScaleDefaults: function(type, additions) {\r\n                        var me = this;\r\n                        if (me.defaults.hasOwnProperty(type)) {\r\n                            me.defaults[type] = helpers.extend(me.defaults[type], additions);\r\n                        }\r\n                    },\r\n                    addScalesToLayout: function(chart) {\r\n                        // Adds each scale to the chart.boxes array to be sized accordingly\r\n                        helpers.each(chart.scales, function(scale) {\r\n                            // Set ILayoutItem parameters for backwards compatibility\r\n                            scale.fullWidth = scale.options.fullWidth;\r\n                            scale.position = scale.options.position;\r\n                            scale.weight = scale.options.weight;\r\n                            layouts.addBox(chart, scale);\r\n                        });\r\n                    }\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"21\": 21, \"36\": 36 }], 25: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Namespace to hold static tick generation functions\r\n             * @namespace Chart.Ticks\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Namespace to hold formatters for different types of ticks\r\n                 * @namespace Chart.Ticks.formatters\r\n                 */\r\n                formatters: {\r\n                    /**\r\n                     * Formatter for value labels\r\n                     * @method Chart.Ticks.formatters.values\r\n                     * @param value the value to display\r\n                     * @return {String|Array} the label to display\r\n                     */\r\n                    values: function(value) {\r\n                        return helpers.isArray(value) ? value : '' + value;\r\n                    },\r\n\r\n                    /**\r\n                     * Formatter for linear numeric ticks\r\n                     * @method Chart.Ticks.formatters.linear\r\n                     * @param tickValue {Number} the value to be formatted\r\n                     * @param index {Number} the position of the tickValue parameter in the ticks array\r\n                     * @param ticks {Array<Number>} the list of ticks being converted\r\n                     * @return {String} string representation of the tickValue parameter\r\n                     */\r\n                    linear: function(tickValue, index, ticks) {\r\n                        // If we have lots of ticks, don't use the ones\r\n                        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\r\n\r\n                        // If we have a number like 2.5 as the delta, figure out how many decimal places we need\r\n                        if (Math.abs(delta) > 1) {\r\n                            if (tickValue !== Math.floor(tickValue)) {\r\n                                // not an integer\r\n                                delta = tickValue - Math.floor(tickValue);\r\n                            }\r\n                        }\r\n\r\n                        var logDelta = helpers.log10(Math.abs(delta));\r\n                        var tickString = '';\r\n\r\n                        if (tickValue !== 0) {\r\n                            var numDecimal = -1 * Math.floor(logDelta);\r\n                            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\r\n                            tickString = tickValue.toFixed(numDecimal);\r\n                        } else {\r\n                            tickString = '0'; // never show decimal places for 0\r\n                        }\r\n\r\n                        return tickString;\r\n                    },\r\n\r\n                    logarithmic: function(tickValue, index, ticks) {\r\n                        var remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\r\n\r\n                        if (tickValue === 0) {\r\n                            return '0';\r\n                        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\r\n                            return tickValue.toExponential();\r\n                        }\r\n                        return '';\r\n                    }\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 26: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                tooltips: {\r\n                    enabled: true,\r\n                    custom: null,\r\n                    mode: 'nearest',\r\n                    position: 'average',\r\n                    intersect: true,\r\n                    backgroundColor: 'rgba(0,0,0,0.8)',\r\n                    titleFontStyle: 'bold',\r\n                    titleSpacing: 2,\r\n                    titleMarginBottom: 6,\r\n                    titleFontColor: '#fff',\r\n                    titleAlign: 'left',\r\n                    bodySpacing: 2,\r\n                    bodyFontColor: '#fff',\r\n                    bodyAlign: 'left',\r\n                    footerFontStyle: 'bold',\r\n                    footerSpacing: 2,\r\n                    footerMarginTop: 6,\r\n                    footerFontColor: '#fff',\r\n                    footerAlign: 'left',\r\n                    yPadding: 6,\r\n                    xPadding: 6,\r\n                    caretPadding: 2,\r\n                    caretSize: 5,\r\n                    cornerRadius: 6,\r\n                    multiKeyBackground: '#fff',\r\n                    displayColors: true,\r\n                    borderColor: 'rgba(0,0,0,0)',\r\n                    borderWidth: 0,\r\n                    callbacks: {\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeTitle: helpers.noop,\r\n                        title: function(tooltipItems, data) {\r\n                            // Pick first xLabel for now\r\n                            var title = '';\r\n                            var labels = data.labels;\r\n                            var labelCount = labels ? labels.length : 0;\r\n\r\n                            if (tooltipItems.length > 0) {\r\n                                var item = tooltipItems[0];\r\n\r\n                                if (item.xLabel) {\r\n                                    title = item.xLabel;\r\n                                } else if (labelCount > 0 && item.index < labelCount) {\r\n                                    title = labels[item.index];\r\n                                }\r\n                            }\r\n\r\n                            return title;\r\n                        },\r\n                        afterTitle: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeBody: helpers.noop,\r\n\r\n                        // Args are: (tooltipItem, data)\r\n                        beforeLabel: helpers.noop,\r\n                        label: function(tooltipItem, data) {\r\n                            var label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\r\n                            if (label) {\r\n                                label += ': ';\r\n                            }\r\n                            label += tooltipItem.yLabel;\r\n                            return label;\r\n                        },\r\n                        labelColor: function(tooltipItem, chart) {\r\n                            var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n                            var activeElement = meta.data[tooltipItem.index];\r\n                            var view = activeElement._view;\r\n                            return {\r\n                                borderColor: view.borderColor,\r\n                                backgroundColor: view.backgroundColor\r\n                            };\r\n                        },\r\n                        labelTextColor: function() {\r\n                            return this._options.bodyFontColor;\r\n                        },\r\n                        afterLabel: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        afterBody: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeFooter: helpers.noop,\r\n                        footer: helpers.noop,\r\n                        afterFooter: helpers.noop\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                /**\r\n                   * Helper method to merge the opacity into a color\r\n                   */\r\n                function mergeOpacity(colorString, opacity) {\r\n                    var color = helpers.color(colorString);\r\n                    return color.alpha(opacity * color.alpha()).rgbaString();\r\n                }\r\n\r\n                // Helper to push or concat based on if the 2nd parameter is an array or not\r\n                function pushOrConcat(base, toPush) {\r\n                    if (toPush) {\r\n                        if (helpers.isArray(toPush)) {\r\n                            // base = base.concat(toPush);\r\n                            Array.prototype.push.apply(base, toPush);\r\n                        } else {\r\n                            base.push(toPush);\r\n                        }\r\n                    }\r\n\r\n                    return base;\r\n                }\r\n\r\n                // Private helper to create a tooltip item model\r\n                // @param element : the chart element (point, arc, bar) to create the tooltip item for\r\n                // @return : new tooltip item\r\n                function createTooltipItem(element) {\r\n                    var xScale = element._xScale;\r\n                    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\r\n                    var index = element._index;\r\n                    var datasetIndex = element._datasetIndex;\r\n\r\n                    return {\r\n                        xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\r\n                        yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\r\n                        index: index,\r\n                        datasetIndex: datasetIndex,\r\n                        x: element._model.x,\r\n                        y: element._model.y\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Helper to get the reset model for the tooltip\r\n                 * @param tooltipOpts {Object} the tooltip options\r\n                 */\r\n                function getBaseModel(tooltipOpts) {\r\n                    var globalDefaults = defaults.global;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n\r\n                    return {\r\n                        // Positioning\r\n                        xPadding: tooltipOpts.xPadding,\r\n                        yPadding: tooltipOpts.yPadding,\r\n                        xAlign: tooltipOpts.xAlign,\r\n                        yAlign: tooltipOpts.yAlign,\r\n\r\n                        // Body\r\n                        bodyFontColor: tooltipOpts.bodyFontColor,\r\n                        _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\r\n                        _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\r\n                        _bodyAlign: tooltipOpts.bodyAlign,\r\n                        bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\r\n                        bodySpacing: tooltipOpts.bodySpacing,\r\n\r\n                        // Title\r\n                        titleFontColor: tooltipOpts.titleFontColor,\r\n                        _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\r\n                        _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\r\n                        titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\r\n                        _titleAlign: tooltipOpts.titleAlign,\r\n                        titleSpacing: tooltipOpts.titleSpacing,\r\n                        titleMarginBottom: tooltipOpts.titleMarginBottom,\r\n\r\n                        // Footer\r\n                        footerFontColor: tooltipOpts.footerFontColor,\r\n                        _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\r\n                        _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\r\n                        footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\r\n                        _footerAlign: tooltipOpts.footerAlign,\r\n                        footerSpacing: tooltipOpts.footerSpacing,\r\n                        footerMarginTop: tooltipOpts.footerMarginTop,\r\n\r\n                        // Appearance\r\n                        caretSize: tooltipOpts.caretSize,\r\n                        cornerRadius: tooltipOpts.cornerRadius,\r\n                        backgroundColor: tooltipOpts.backgroundColor,\r\n                        opacity: 0,\r\n                        legendColorBackground: tooltipOpts.multiKeyBackground,\r\n                        displayColors: tooltipOpts.displayColors,\r\n                        borderColor: tooltipOpts.borderColor,\r\n                        borderWidth: tooltipOpts.borderWidth\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Get the size of the tooltip\r\n                 */\r\n                function getTooltipSize(tooltip, model) {\r\n                    var ctx = tooltip._chart.ctx;\r\n\r\n                    var height = model.yPadding * 2; // Tooltip Padding\r\n                    var width = 0;\r\n\r\n                    // Count of all lines in the body\r\n                    var body = model.body;\r\n                    var combinedBodyLength = body.reduce(function(count, bodyItem) {\r\n                        return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\r\n                    }, 0);\r\n                    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\r\n\r\n                    var titleLineCount = model.title.length;\r\n                    var footerLineCount = model.footer.length;\r\n                    var titleFontSize = model.titleFontSize;\r\n                    var bodyFontSize = model.bodyFontSize;\r\n                    var footerFontSize = model.footerFontSize;\r\n\r\n                    height += titleLineCount * titleFontSize; // Title Lines\r\n                    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\r\n                    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\r\n                    height += combinedBodyLength * bodyFontSize; // Body Lines\r\n                    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\r\n                    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\r\n                    height += footerLineCount * (footerFontSize); // Footer Lines\r\n                    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\r\n\r\n                    // Title width\r\n                    var widthPadding = 0;\r\n                    var maxLineWidth = function(line) {\r\n                        width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n                    };\r\n\r\n                    ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\r\n                    helpers.each(model.title, maxLineWidth);\r\n\r\n                    // Body width\r\n                    ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\r\n                    helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\r\n\r\n                    // Body lines may include some extra width due to the color box\r\n                    widthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\r\n                    helpers.each(body, function(bodyItem) {\r\n                        helpers.each(bodyItem.before, maxLineWidth);\r\n                        helpers.each(bodyItem.lines, maxLineWidth);\r\n                        helpers.each(bodyItem.after, maxLineWidth);\r\n                    });\r\n\r\n                    // Reset back to 0\r\n                    widthPadding = 0;\r\n\r\n                    // Footer width\r\n                    ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\r\n                    helpers.each(model.footer, maxLineWidth);\r\n\r\n                    // Add padding\r\n                    width += 2 * model.xPadding;\r\n\r\n                    return {\r\n                        width: width,\r\n                        height: height\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Helper to get the alignment of a tooltip given the size\r\n                 */\r\n                function determineAlignment(tooltip, size) {\r\n                    var model = tooltip._model;\r\n                    var chart = tooltip._chart;\r\n                    var chartArea = tooltip._chart.chartArea;\r\n                    var xAlign = 'center';\r\n                    var yAlign = 'center';\r\n\r\n                    if (model.y < size.height) {\r\n                        yAlign = 'top';\r\n                    } else if (model.y > (chart.height - size.height)) {\r\n                        yAlign = 'bottom';\r\n                    }\r\n\r\n                    var lf, rf; // functions to determine left, right alignment\r\n                    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\r\n                    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\r\n                    var midX = (chartArea.left + chartArea.right) / 2;\r\n                    var midY = (chartArea.top + chartArea.bottom) / 2;\r\n\r\n                    if (yAlign === 'center') {\r\n                        lf = function(x) {\r\n                            return x <= midX;\r\n                        };\r\n                        rf = function(x) {\r\n                            return x > midX;\r\n                        };\r\n                    } else {\r\n                        lf = function(x) {\r\n                            return x <= (size.width / 2);\r\n                        };\r\n                        rf = function(x) {\r\n                            return x >= (chart.width - (size.width / 2));\r\n                        };\r\n                    }\r\n\r\n                    olf = function(x) {\r\n                        return x + size.width + model.caretSize + model.caretPadding > chart.width;\r\n                    };\r\n                    orf = function(x) {\r\n                        return x - size.width - model.caretSize - model.caretPadding < 0;\r\n                    };\r\n                    yf = function(y) {\r\n                        return y <= midY ? 'top' : 'bottom';\r\n                    };\r\n\r\n                    if (lf(model.x)) {\r\n                        xAlign = 'left';\r\n\r\n                        // Is tooltip too wide and goes over the right side of the chart.?\r\n                        if (olf(model.x)) {\r\n                            xAlign = 'center';\r\n                            yAlign = yf(model.y);\r\n                        }\r\n                    } else if (rf(model.x)) {\r\n                        xAlign = 'right';\r\n\r\n                        // Is tooltip too wide and goes outside left edge of canvas?\r\n                        if (orf(model.x)) {\r\n                            xAlign = 'center';\r\n                            yAlign = yf(model.y);\r\n                        }\r\n                    }\r\n\r\n                    var opts = tooltip._options;\r\n                    return {\r\n                        xAlign: opts.xAlign ? opts.xAlign : xAlign,\r\n                        yAlign: opts.yAlign ? opts.yAlign : yAlign\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\r\n                 */\r\n                function getBackgroundPoint(vm, size, alignment, chart) {\r\n                    // Background Position\r\n                    var x = vm.x;\r\n                    var y = vm.y;\r\n\r\n                    var caretSize = vm.caretSize;\r\n                    var caretPadding = vm.caretPadding;\r\n                    var cornerRadius = vm.cornerRadius;\r\n                    var xAlign = alignment.xAlign;\r\n                    var yAlign = alignment.yAlign;\r\n                    var paddingAndSize = caretSize + caretPadding;\r\n                    var radiusAndPadding = cornerRadius + caretPadding;\r\n\r\n                    if (xAlign === 'right') {\r\n                        x -= size.width;\r\n                    } else if (xAlign === 'center') {\r\n                        x -= (size.width / 2);\r\n                        if (x + size.width > chart.width) {\r\n                            x = chart.width - size.width;\r\n                        }\r\n                        if (x < 0) {\r\n                            x = 0;\r\n                        }\r\n                    }\r\n\r\n                    if (yAlign === 'top') {\r\n                        y += paddingAndSize;\r\n                    } else if (yAlign === 'bottom') {\r\n                        y -= size.height + paddingAndSize;\r\n                    } else {\r\n                        y -= (size.height / 2);\r\n                    }\r\n\r\n                    if (yAlign === 'center') {\r\n                        if (xAlign === 'left') {\r\n                            x += paddingAndSize;\r\n                        } else if (xAlign === 'right') {\r\n                            x -= paddingAndSize;\r\n                        }\r\n                    } else if (xAlign === 'left') {\r\n                        x -= radiusAndPadding;\r\n                    } else if (xAlign === 'right') {\r\n                        x += radiusAndPadding;\r\n                    }\r\n\r\n                    return {\r\n                        x: x,\r\n                        y: y\r\n                    };\r\n                }\r\n\r\n                Chart.Tooltip = Element.extend({\r\n                    initialize: function() {\r\n                        this._model = getBaseModel(this._options);\r\n                        this._lastActive = [];\r\n                    },\r\n\r\n                    // Get the title\r\n                    // Args are: (tooltipItem, data)\r\n                    getTitle: function() {\r\n                        var me = this;\r\n                        var opts = me._options;\r\n                        var callbacks = opts.callbacks;\r\n\r\n                        var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\r\n                        var title = callbacks.title.apply(me, arguments);\r\n                        var afterTitle = callbacks.afterTitle.apply(me, arguments);\r\n\r\n                        var lines = [];\r\n                        lines = pushOrConcat(lines, beforeTitle);\r\n                        lines = pushOrConcat(lines, title);\r\n                        lines = pushOrConcat(lines, afterTitle);\r\n\r\n                        return lines;\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getBeforeBody: function() {\r\n                        var lines = this._options.callbacks.beforeBody.apply(this, arguments);\r\n                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getBody: function(tooltipItems, data) {\r\n                        var me = this;\r\n                        var callbacks = me._options.callbacks;\r\n                        var bodyItems = [];\r\n\r\n                        helpers.each(tooltipItems, function(tooltipItem) {\r\n                            var bodyItem = {\r\n                                before: [],\r\n                                lines: [],\r\n                                after: []\r\n                            };\r\n                            pushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\r\n                            pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\r\n                            pushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\r\n\r\n                            bodyItems.push(bodyItem);\r\n                        });\r\n\r\n                        return bodyItems;\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getAfterBody: function() {\r\n                        var lines = this._options.callbacks.afterBody.apply(this, arguments);\r\n                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n                    },\r\n\r\n                    // Get the footer and beforeFooter and afterFooter lines\r\n                    // Args are: (tooltipItem, data)\r\n                    getFooter: function() {\r\n                        var me = this;\r\n                        var callbacks = me._options.callbacks;\r\n\r\n                        var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\r\n                        var footer = callbacks.footer.apply(me, arguments);\r\n                        var afterFooter = callbacks.afterFooter.apply(me, arguments);\r\n\r\n                        var lines = [];\r\n                        lines = pushOrConcat(lines, beforeFooter);\r\n                        lines = pushOrConcat(lines, footer);\r\n                        lines = pushOrConcat(lines, afterFooter);\r\n\r\n                        return lines;\r\n                    },\r\n\r\n                    update: function(changed) {\r\n                        var me = this;\r\n                        var opts = me._options;\r\n\r\n                        // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\r\n                        // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\r\n                        // which breaks any animations.\r\n                        var existingModel = me._model;\r\n                        var model = me._model = getBaseModel(opts);\r\n                        var active = me._active;\r\n\r\n                        var data = me._data;\r\n\r\n                        // In the case where active.length === 0 we need to keep these at existing values for good animations\r\n                        var alignment = {\r\n                            xAlign: existingModel.xAlign,\r\n                            yAlign: existingModel.yAlign\r\n                        };\r\n                        var backgroundPoint = {\r\n                            x: existingModel.x,\r\n                            y: existingModel.y\r\n                        };\r\n                        var tooltipSize = {\r\n                            width: existingModel.width,\r\n                            height: existingModel.height\r\n                        };\r\n                        var tooltipPosition = {\r\n                            x: existingModel.caretX,\r\n                            y: existingModel.caretY\r\n                        };\r\n\r\n                        var i, len;\r\n\r\n                        if (active.length) {\r\n                            model.opacity = 1;\r\n\r\n                            var labelColors = [];\r\n                            var labelTextColors = [];\r\n                            tooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\r\n\r\n                            var tooltipItems = [];\r\n                            for (i = 0, len = active.length; i < len; ++i) {\r\n                                tooltipItems.push(createTooltipItem(active[i]));\r\n                            }\r\n\r\n                            // If the user provided a filter function, use it to modify the tooltip items\r\n                            if (opts.filter) {\r\n                                tooltipItems = tooltipItems.filter(function(a) {\r\n                                    return opts.filter(a, data);\r\n                                });\r\n                            }\r\n\r\n                            // If the user provided a sorting function, use it to modify the tooltip items\r\n                            if (opts.itemSort) {\r\n                                tooltipItems = tooltipItems.sort(function(a, b) {\r\n                                    return opts.itemSort(a, b, data);\r\n                                });\r\n                            }\r\n\r\n                            // Determine colors for boxes\r\n                            helpers.each(tooltipItems, function(tooltipItem) {\r\n                                labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\r\n                                labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\r\n                            });\r\n\r\n                            // Build the Text Lines\r\n                            model.title = me.getTitle(tooltipItems, data);\r\n                            model.beforeBody = me.getBeforeBody(tooltipItems, data);\r\n                            model.body = me.getBody(tooltipItems, data);\r\n                            model.afterBody = me.getAfterBody(tooltipItems, data);\r\n                            model.footer = me.getFooter(tooltipItems, data);\r\n\r\n                            // Initial positioning and colors\r\n                            model.x = Math.round(tooltipPosition.x);\r\n                            model.y = Math.round(tooltipPosition.y);\r\n                            model.caretPadding = opts.caretPadding;\r\n                            model.labelColors = labelColors;\r\n                            model.labelTextColors = labelTextColors;\r\n\r\n                            // data points\r\n                            model.dataPoints = tooltipItems;\r\n\r\n                            // We need to determine alignment of the tooltip\r\n                            tooltipSize = getTooltipSize(this, model);\r\n                            alignment = determineAlignment(this, tooltipSize);\r\n                            // Final Size and Position\r\n                            backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\r\n                        } else {\r\n                            model.opacity = 0;\r\n                        }\r\n\r\n                        model.xAlign = alignment.xAlign;\r\n                        model.yAlign = alignment.yAlign;\r\n                        model.x = backgroundPoint.x;\r\n                        model.y = backgroundPoint.y;\r\n                        model.width = tooltipSize.width;\r\n                        model.height = tooltipSize.height;\r\n\r\n                        // Point where the caret on the tooltip points to\r\n                        model.caretX = tooltipPosition.x;\r\n                        model.caretY = tooltipPosition.y;\r\n\r\n                        me._model = model;\r\n\r\n                        if (changed && opts.custom) {\r\n                            opts.custom.call(me, model);\r\n                        }\r\n\r\n                        return me;\r\n                    },\r\n                    drawCaret: function(tooltipPoint, size) {\r\n                        var ctx = this._chart.ctx;\r\n                        var vm = this._view;\r\n                        var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\r\n\r\n                        ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n                        ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n                        ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n                    },\r\n                    getCaretPosition: function(tooltipPoint, size, vm) {\r\n                        var x1, x2, x3, y1, y2, y3;\r\n                        var caretSize = vm.caretSize;\r\n                        var cornerRadius = vm.cornerRadius;\r\n                        var xAlign = vm.xAlign;\r\n                        var yAlign = vm.yAlign;\r\n                        var ptX = tooltipPoint.x;\r\n                        var ptY = tooltipPoint.y;\r\n                        var width = size.width;\r\n                        var height = size.height;\r\n\r\n                        if (yAlign === 'center') {\r\n                            y2 = ptY + (height / 2);\r\n\r\n                            if (xAlign === 'left') {\r\n                                x1 = ptX;\r\n                                x2 = x1 - caretSize;\r\n                                x3 = x1;\r\n\r\n                                y1 = y2 + caretSize;\r\n                                y3 = y2 - caretSize;\r\n                            } else {\r\n                                x1 = ptX + width;\r\n                                x2 = x1 + caretSize;\r\n                                x3 = x1;\r\n\r\n                                y1 = y2 - caretSize;\r\n                                y3 = y2 + caretSize;\r\n                            }\r\n                        } else {\r\n                            if (xAlign === 'left') {\r\n                                x2 = ptX + cornerRadius + (caretSize);\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            } else if (xAlign === 'right') {\r\n                                x2 = ptX + width - cornerRadius - caretSize;\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            } else {\r\n                                x2 = vm.caretX;\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            }\r\n                            if (yAlign === 'top') {\r\n                                y1 = ptY;\r\n                                y2 = y1 - caretSize;\r\n                                y3 = y1;\r\n                            } else {\r\n                                y1 = ptY + height;\r\n                                y2 = y1 + caretSize;\r\n                                y3 = y1;\r\n                                // invert drawing order\r\n                                var tmp = x3;\r\n                                x3 = x1;\r\n                                x1 = tmp;\r\n                            }\r\n                        }\r\n                        return { x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3 };\r\n                    },\r\n                    drawTitle: function(pt, vm, ctx, opacity) {\r\n                        var title = vm.title;\r\n\r\n                        if (title.length) {\r\n                            ctx.textAlign = vm._titleAlign;\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            var titleFontSize = vm.titleFontSize;\r\n                            var titleSpacing = vm.titleSpacing;\r\n\r\n                            ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\r\n                            ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\r\n                            var i, len;\r\n                            for (i = 0, len = title.length; i < len; ++i) {\r\n                                ctx.fillText(title[i], pt.x, pt.y);\r\n                                pt.y += titleFontSize + titleSpacing; // Line Height and spacing\r\n\r\n                                if (i + 1 === title.length) {\r\n                                    pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    drawBody: function(pt, vm, ctx, opacity) {\r\n                        var bodyFontSize = vm.bodyFontSize;\r\n                        var bodySpacing = vm.bodySpacing;\r\n                        var body = vm.body;\r\n\r\n                        ctx.textAlign = vm._bodyAlign;\r\n                        ctx.textBaseline = 'top';\r\n                        ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\r\n                        // Before Body\r\n                        var xLinePadding = 0;\r\n                        var fillLineOfText = function(line) {\r\n                            ctx.fillText(line, pt.x + xLinePadding, pt.y);\r\n                            pt.y += bodyFontSize + bodySpacing;\r\n                        };\r\n\r\n                        // Before body lines\r\n                        ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\r\n                        helpers.each(vm.beforeBody, fillLineOfText);\r\n\r\n                        var drawColorBoxes = vm.displayColors;\r\n                        xLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\r\n\r\n                        // Draw body lines now\r\n                        helpers.each(body, function(bodyItem, i) {\r\n                            var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\r\n                            ctx.fillStyle = textColor;\r\n                            helpers.each(bodyItem.before, fillLineOfText);\r\n\r\n                            helpers.each(bodyItem.lines, function(line) {\r\n                                // Draw Legend-like boxes if needed\r\n                                if (drawColorBoxes) {\r\n                                    // Fill a white rect so that colours merge nicely if the opacity is < 1\r\n                                    ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\r\n                                    ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n                                    // Border\r\n                                    ctx.lineWidth = 1;\r\n                                    ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\r\n                                    ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n                                    // Inner square\r\n                                    ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\r\n                                    ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\r\n                                    ctx.fillStyle = textColor;\r\n                                }\r\n\r\n                                fillLineOfText(line);\r\n                            });\r\n\r\n                            helpers.each(bodyItem.after, fillLineOfText);\r\n                        });\r\n\r\n                        // Reset back to 0 for after body\r\n                        xLinePadding = 0;\r\n\r\n                        // After body lines\r\n                        helpers.each(vm.afterBody, fillLineOfText);\r\n                        pt.y -= bodySpacing; // Remove last body spacing\r\n                    },\r\n                    drawFooter: function(pt, vm, ctx, opacity) {\r\n                        var footer = vm.footer;\r\n\r\n                        if (footer.length) {\r\n                            pt.y += vm.footerMarginTop;\r\n\r\n                            ctx.textAlign = vm._footerAlign;\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\r\n                            ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\r\n                            helpers.each(footer, function(line) {\r\n                                ctx.fillText(line, pt.x, pt.y);\r\n                                pt.y += vm.footerFontSize + vm.footerSpacing;\r\n                            });\r\n                        }\r\n                    },\r\n                    drawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\r\n                        ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\r\n                        ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\r\n                        ctx.lineWidth = vm.borderWidth;\r\n                        var xAlign = vm.xAlign;\r\n                        var yAlign = vm.yAlign;\r\n                        var x = pt.x;\r\n                        var y = pt.y;\r\n                        var width = tooltipSize.width;\r\n                        var height = tooltipSize.height;\r\n                        var radius = vm.cornerRadius;\r\n\r\n                        ctx.beginPath();\r\n                        ctx.moveTo(x + radius, y);\r\n                        if (yAlign === 'top') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + width - radius, y);\r\n                        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n                        if (yAlign === 'center' && xAlign === 'right') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + width, y + height - radius);\r\n                        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n                        if (yAlign === 'bottom') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + radius, y + height);\r\n                        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n                        if (yAlign === 'center' && xAlign === 'left') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x, y + radius);\r\n                        ctx.quadraticCurveTo(x, y, x + radius, y);\r\n                        ctx.closePath();\r\n\r\n                        ctx.fill();\r\n\r\n                        if (vm.borderWidth > 0) {\r\n                            ctx.stroke();\r\n                        }\r\n                    },\r\n                    draw: function() {\r\n                        var ctx = this._chart.ctx;\r\n                        var vm = this._view;\r\n\r\n                        if (vm.opacity === 0) {\r\n                            return;\r\n                        }\r\n\r\n                        var tooltipSize = {\r\n                            width: vm.width,\r\n                            height: vm.height\r\n                        };\r\n                        var pt = {\r\n                            x: vm.x,\r\n                            y: vm.y\r\n                        };\r\n\r\n                        // IE11/Edge does not like very small opacities, so snap to 0\r\n                        var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\r\n\r\n                        // Truthy/falsey value for empty tooltip\r\n                        var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\r\n\r\n                        if (this._options.enabled && hasTooltipContent) {\r\n                            // Draw Background\r\n                            this.drawBackground(pt, vm, ctx, tooltipSize, opacity);\r\n\r\n                            // Draw Title, Body, and Footer\r\n                            pt.x += vm.xPadding;\r\n                            pt.y += vm.yPadding;\r\n\r\n                            // Titles\r\n                            this.drawTitle(pt, vm, ctx, opacity);\r\n\r\n                            // Body\r\n                            this.drawBody(pt, vm, ctx, opacity);\r\n\r\n                            // Footer\r\n                            this.drawFooter(pt, vm, ctx, opacity);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Handle an event\r\n                     * @private\r\n                     * @param {IEvent} event - The event to handle\r\n                     * @returns {Boolean} true if the tooltip changed\r\n                     */\r\n                    handleEvent: function(e) {\r\n                        var me = this;\r\n                        var options = me._options;\r\n                        var changed = false;\r\n\r\n                        me._lastActive = me._lastActive || [];\r\n\r\n                        // Find Active Elements for tooltips\r\n                        if (e.type === 'mouseout') {\r\n                            me._active = [];\r\n                        } else {\r\n                            me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\r\n                        }\r\n\r\n                        // Remember Last Actives\r\n                        changed = !helpers.arrayEquals(me._active, me._lastActive);\r\n\r\n                        // Only handle target event on tooltip change\r\n                        if (changed) {\r\n                            me._lastActive = me._active;\r\n\r\n                            if (options.enabled || options.custom) {\r\n                                me._eventPosition = {\r\n                                    x: e.x,\r\n                                    y: e.y\r\n                                };\r\n\r\n                                me.update(true);\r\n                                me.pivot();\r\n                            }\r\n                        }\r\n\r\n                        return changed;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * @namespace Chart.Tooltip.positioners\r\n                 */\r\n                Chart.Tooltip.positioners = {\r\n                    /**\r\n                     * Average mode places the tooltip at the average position of the elements shown\r\n                     * @function Chart.Tooltip.positioners.average\r\n                     * @param elements {ChartElement[]} the elements being displayed in the tooltip\r\n                     * @returns {Point} tooltip position\r\n                     */\r\n                    average: function(elements) {\r\n                        if (!elements.length) {\r\n                            return false;\r\n                        }\r\n\r\n                        var i, len;\r\n                        var x = 0;\r\n                        var y = 0;\r\n                        var count = 0;\r\n\r\n                        for (i = 0, len = elements.length; i < len; ++i) {\r\n                            var el = elements[i];\r\n                            if (el && el.hasValue()) {\r\n                                var pos = el.tooltipPosition();\r\n                                x += pos.x;\r\n                                y += pos.y;\r\n                                ++count;\r\n                            }\r\n                        }\r\n\r\n                        return {\r\n                            x: Math.round(x / count),\r\n                            y: Math.round(y / count)\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Gets the tooltip position nearest of the item nearest to the event position\r\n                     * @function Chart.Tooltip.positioners.nearest\r\n                     * @param elements {Chart.Element[]} the tooltip elements\r\n                     * @param eventPosition {Point} the position of the event in canvas coordinates\r\n                     * @returns {Point} the tooltip position\r\n                     */\r\n                    nearest: function(elements, eventPosition) {\r\n                        var x = eventPosition.x;\r\n                        var y = eventPosition.y;\r\n                        var minDistance = Number.POSITIVE_INFINITY;\r\n                        var i, len, nearestElement;\r\n\r\n                        for (i = 0, len = elements.length; i < len; ++i) {\r\n                            var el = elements[i];\r\n                            if (el && el.hasValue()) {\r\n                                var center = el.getCenterPoint();\r\n                                var d = helpers.distanceBetweenPoints(eventPosition, center);\r\n\r\n                                if (d < minDistance) {\r\n                                    minDistance = d;\r\n                                    nearestElement = el;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (nearestElement) {\r\n                            var tp = nearestElement.tooltipPosition();\r\n                            x = tp.x;\r\n                            y = tp.y;\r\n                        }\r\n\r\n                        return {\r\n                            x: x,\r\n                            y: y\r\n                        };\r\n                    }\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 27: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    arc: {\r\n                        backgroundColor: defaults.global.defaultColor,\r\n                        borderColor: '#fff',\r\n                        borderWidth: 2\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = Element.extend({\r\n                inLabelRange: function(mouseX) {\r\n                    var vm = this._view;\r\n\r\n                    if (vm) {\r\n                        return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                inRange: function(chartX, chartY) {\r\n                    var vm = this._view;\r\n\r\n                    if (vm) {\r\n                        var pointRelativePosition = helpers.getAngleFromPoint(vm, { x: chartX, y: chartY });\r\n                        var angle = pointRelativePosition.angle;\r\n                        var distance = pointRelativePosition.distance;\r\n\r\n                        // Sanitise angle range\r\n                        var startAngle = vm.startAngle;\r\n                        var endAngle = vm.endAngle;\r\n                        while (endAngle < startAngle) {\r\n                            endAngle += 2.0 * Math.PI;\r\n                        }\r\n                        while (angle > endAngle) {\r\n                            angle -= 2.0 * Math.PI;\r\n                        }\r\n                        while (angle < startAngle) {\r\n                            angle += 2.0 * Math.PI;\r\n                        }\r\n\r\n                        // Check if within the range of the open/close angle\r\n                        var betweenAngles = (angle >= startAngle && angle <= endAngle);\r\n                        var withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\r\n\r\n                        return (betweenAngles && withinRadius);\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\r\n                    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\r\n                    return {\r\n                        x: vm.x + Math.cos(halfAngle) * halfRadius,\r\n                        y: vm.y + Math.sin(halfAngle) * halfRadius\r\n                    };\r\n                },\r\n\r\n                getArea: function() {\r\n                    var vm = this._view;\r\n                    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\r\n                    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\r\n\r\n                    return {\r\n                        x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\r\n                        y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\r\n                    };\r\n                },\r\n\r\n                draw: function() {\r\n                    var ctx = this._chart.ctx;\r\n                    var vm = this._view;\r\n                    var sA = vm.startAngle;\r\n                    var eA = vm.endAngle;\r\n\r\n                    ctx.beginPath();\r\n\r\n                    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\r\n                    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\r\n\r\n                    ctx.closePath();\r\n                    ctx.strokeStyle = vm.borderColor;\r\n                    ctx.lineWidth = vm.borderWidth;\r\n\r\n                    ctx.fillStyle = vm.backgroundColor;\r\n\r\n                    ctx.fill();\r\n                    ctx.lineJoin = 'bevel';\r\n\r\n                    if (vm.borderWidth) {\r\n                        ctx.stroke();\r\n                    }\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 28: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            var globalDefaults = defaults.global;\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    line: {\r\n                        tension: 0.4,\r\n                        backgroundColor: globalDefaults.defaultColor,\r\n                        borderWidth: 3,\r\n                        borderColor: globalDefaults.defaultColor,\r\n                        borderCapStyle: 'butt',\r\n                        borderDash: [],\r\n                        borderDashOffset: 0.0,\r\n                        borderJoinStyle: 'miter',\r\n                        capBezierPoints: true,\r\n                        fill: true, // do we fill in the area between the line and its base axis\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = Element.extend({\r\n                draw: function() {\r\n                    var me = this;\r\n                    var vm = me._view;\r\n                    var ctx = me._chart.ctx;\r\n                    var spanGaps = vm.spanGaps;\r\n                    var points = me._children.slice(); // clone array\r\n                    var globalOptionLineElements = globalDefaults.elements.line;\r\n                    var lastDrawnIndex = -1;\r\n                    var index, current, previous, currentVM;\r\n\r\n                    // If we are looping, adding the first point again\r\n                    if (me._loop && points.length) {\r\n                        points.push(points[0]);\r\n                    }\r\n\r\n                    ctx.save();\r\n\r\n                    // Stroke Line Options\r\n                    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\r\n\r\n                    // IE 9 and 10 do not support line dash\r\n                    if (ctx.setLineDash) {\r\n                        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\r\n                    }\r\n\r\n                    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\r\n                    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\r\n                    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\r\n                    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\r\n\r\n                    // Stroke Line\r\n                    ctx.beginPath();\r\n                    lastDrawnIndex = -1;\r\n\r\n                    for (index = 0; index < points.length; ++index) {\r\n                        current = points[index];\r\n                        previous = helpers.previousItem(points, index);\r\n                        currentVM = current._view;\r\n\r\n                        // First point moves to it's starting position no matter what\r\n                        if (index === 0) {\r\n                            if (!currentVM.skip) {\r\n                                ctx.moveTo(currentVM.x, currentVM.y);\r\n                                lastDrawnIndex = index;\r\n                            }\r\n                        } else {\r\n                            previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\r\n\r\n                            if (!currentVM.skip) {\r\n                                if ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\r\n                                    // There was a gap and this is the first point after the gap\r\n                                    ctx.moveTo(currentVM.x, currentVM.y);\r\n                                } else {\r\n                                    // Line to next point\r\n                                    helpers.canvas.lineTo(ctx, previous._view, current._view);\r\n                                }\r\n                                lastDrawnIndex = index;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    ctx.stroke();\r\n                    ctx.restore();\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 29: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            var defaultColor = defaults.global.defaultColor;\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    point: {\r\n                        radius: 3,\r\n                        pointStyle: 'circle',\r\n                        backgroundColor: defaultColor,\r\n                        borderColor: defaultColor,\r\n                        borderWidth: 1,\r\n                        // Hover\r\n                        hitRadius: 1,\r\n                        hoverRadius: 4,\r\n                        hoverBorderWidth: 1\r\n                    }\r\n                }\r\n            });\r\n\r\n            function xRange(mouseX) {\r\n                var vm = this._view;\r\n                return vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\r\n            }\r\n\r\n            function yRange(mouseY) {\r\n                var vm = this._view;\r\n                return vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\r\n            }\r\n\r\n            module.exports = Element.extend({\r\n                inRange: function(mouseX, mouseY) {\r\n                    var vm = this._view;\r\n                    return vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\r\n                },\r\n\r\n                inLabelRange: xRange,\r\n                inXRange: xRange,\r\n                inYRange: yRange,\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y\r\n                    };\r\n                },\r\n\r\n                getArea: function() {\r\n                    return Math.PI * Math.pow(this._view.radius, 2);\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y,\r\n                        padding: vm.radius + vm.borderWidth\r\n                    };\r\n                },\r\n\r\n                draw: function(chartArea) {\r\n                    var vm = this._view;\r\n                    var model = this._model;\r\n                    var ctx = this._chart.ctx;\r\n                    var pointStyle = vm.pointStyle;\r\n                    var radius = vm.radius;\r\n                    var x = vm.x;\r\n                    var y = vm.y;\r\n                    var color = helpers.color;\r\n                    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\r\n                    var ratio = 0;\r\n\r\n                    if (vm.skip) {\r\n                        return;\r\n                    }\r\n\r\n                    ctx.strokeStyle = vm.borderColor || defaultColor;\r\n                    ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\r\n                    ctx.fillStyle = vm.backgroundColor || defaultColor;\r\n\r\n                    // Cliping for Points.\r\n                    // going out from inner charArea?\r\n                    if ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\r\n                        // Point fade out\r\n                        if (model.x < chartArea.left) {\r\n                            ratio = (x - model.x) / (chartArea.left - model.x);\r\n                        } else if (chartArea.right * errMargin < model.x) {\r\n                            ratio = (model.x - x) / (model.x - chartArea.right);\r\n                        } else if (model.y < chartArea.top) {\r\n                            ratio = (y - model.y) / (chartArea.top - model.y);\r\n                        } else if (chartArea.bottom * errMargin < model.y) {\r\n                            ratio = (model.y - y) / (model.y - chartArea.bottom);\r\n                        }\r\n                        ratio = Math.round(ratio * 100) / 100;\r\n                        ctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\r\n                        ctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\r\n                    }\r\n\r\n                    helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 30: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    rectangle: {\r\n                        backgroundColor: defaults.global.defaultColor,\r\n                        borderColor: defaults.global.defaultColor,\r\n                        borderSkipped: 'bottom',\r\n                        borderWidth: 0\r\n                    }\r\n                }\r\n            });\r\n\r\n            function isVertical(bar) {\r\n                return bar._view.width !== undefined;\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the bounds of the bar regardless of the orientation\r\n             * @param bar {Chart.Element.Rectangle} the bar\r\n             * @return {Bounds} bounds of the bar\r\n             * @private\r\n             */\r\n            function getBarBounds(bar) {\r\n                var vm = bar._view;\r\n                var x1, x2, y1, y2;\r\n\r\n                if (isVertical(bar)) {\r\n                    // vertical\r\n                    var halfWidth = vm.width / 2;\r\n                    x1 = vm.x - halfWidth;\r\n                    x2 = vm.x + halfWidth;\r\n                    y1 = Math.min(vm.y, vm.base);\r\n                    y2 = Math.max(vm.y, vm.base);\r\n                } else {\r\n                    // horizontal bar\r\n                    var halfHeight = vm.height / 2;\r\n                    x1 = Math.min(vm.x, vm.base);\r\n                    x2 = Math.max(vm.x, vm.base);\r\n                    y1 = vm.y - halfHeight;\r\n                    y2 = vm.y + halfHeight;\r\n                }\r\n\r\n                return {\r\n                    left: x1,\r\n                    top: y1,\r\n                    right: x2,\r\n                    bottom: y2\r\n                };\r\n            }\r\n\r\n            module.exports = Element.extend({\r\n                draw: function() {\r\n                    var ctx = this._chart.ctx;\r\n                    var vm = this._view;\r\n                    var left, right, top, bottom, signX, signY, borderSkipped;\r\n                    var borderWidth = vm.borderWidth;\r\n\r\n                    if (!vm.horizontal) {\r\n                        // bar\r\n                        left = vm.x - vm.width / 2;\r\n                        right = vm.x + vm.width / 2;\r\n                        top = vm.y;\r\n                        bottom = vm.base;\r\n                        signX = 1;\r\n                        signY = bottom > top ? 1 : -1;\r\n                        borderSkipped = vm.borderSkipped || 'bottom';\r\n                    } else {\r\n                        // horizontal bar\r\n                        left = vm.base;\r\n                        right = vm.x;\r\n                        top = vm.y - vm.height / 2;\r\n                        bottom = vm.y + vm.height / 2;\r\n                        signX = right > left ? 1 : -1;\r\n                        signY = 1;\r\n                        borderSkipped = vm.borderSkipped || 'left';\r\n                    }\r\n\r\n                    // Canvas doesn't allow us to stroke inside the width so we can\r\n                    // adjust the sizes to fit if we're setting a stroke on the line\r\n                    if (borderWidth) {\r\n                        // borderWidth shold be less than bar width and bar height.\r\n                        var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n                        borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n                        var halfStroke = borderWidth / 2;\r\n                        // Adjust borderWidth when bar top position is near vm.base(zero).\r\n                        var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n                        var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n                        var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n                        var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n                        // not become a vertical line?\r\n                        if (borderLeft !== borderRight) {\r\n                            top = borderTop;\r\n                            bottom = borderBottom;\r\n                        }\r\n                        // not become a horizontal line?\r\n                        if (borderTop !== borderBottom) {\r\n                            left = borderLeft;\r\n                            right = borderRight;\r\n                        }\r\n                    }\r\n\r\n                    ctx.beginPath();\r\n                    ctx.fillStyle = vm.backgroundColor;\r\n                    ctx.strokeStyle = vm.borderColor;\r\n                    ctx.lineWidth = borderWidth;\r\n\r\n                    // Corner points, from bottom-left to bottom-right clockwise\r\n                    // | 1 2 |\r\n                    // | 0 3 |\r\n                    var corners = [\r\n                        [left, bottom],\r\n                        [left, top],\r\n                        [right, top],\r\n                        [right, bottom]\r\n                    ];\r\n\r\n                    // Find first (starting) corner with fallback to 'bottom'\r\n                    var borders = ['bottom', 'left', 'top', 'right'];\r\n                    var startCorner = borders.indexOf(borderSkipped, 0);\r\n                    if (startCorner === -1) {\r\n                        startCorner = 0;\r\n                    }\r\n\r\n                    function cornerAt(index) {\r\n                        return corners[(startCorner + index) % 4];\r\n                    }\r\n\r\n                    // Draw rectangle from 'startCorner'\r\n                    var corner = cornerAt(0);\r\n                    ctx.moveTo(corner[0], corner[1]);\r\n\r\n                    for (var i = 1; i < 4; i++) {\r\n                        corner = cornerAt(i);\r\n                        ctx.lineTo(corner[0], corner[1]);\r\n                    }\r\n\r\n                    ctx.fill();\r\n                    if (borderWidth) {\r\n                        ctx.stroke();\r\n                    }\r\n                },\r\n\r\n                height: function() {\r\n                    var vm = this._view;\r\n                    return vm.base - vm.y;\r\n                },\r\n\r\n                inRange: function(mouseX, mouseY) {\r\n                    var inRange = false;\r\n\r\n                    if (this._view) {\r\n                        var bounds = getBarBounds(this);\r\n                        inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                    }\r\n\r\n                    return inRange;\r\n                },\r\n\r\n                inLabelRange: function(mouseX, mouseY) {\r\n                    var me = this;\r\n                    if (!me._view) {\r\n                        return false;\r\n                    }\r\n\r\n                    var inRange = false;\r\n                    var bounds = getBarBounds(me);\r\n\r\n                    if (isVertical(me)) {\r\n                        inRange = mouseX >= bounds.left && mouseX <= bounds.right;\r\n                    } else {\r\n                        inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                    }\r\n\r\n                    return inRange;\r\n                },\r\n\r\n                inXRange: function(mouseX) {\r\n                    var bounds = getBarBounds(this);\r\n                    return mouseX >= bounds.left && mouseX <= bounds.right;\r\n                },\r\n\r\n                inYRange: function(mouseY) {\r\n                    var bounds = getBarBounds(this);\r\n                    return mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                },\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    var x, y;\r\n                    if (isVertical(this)) {\r\n                        x = vm.x;\r\n                        y = (vm.y + vm.base) / 2;\r\n                    } else {\r\n                        x = (vm.x + vm.base) / 2;\r\n                        y = vm.y;\r\n                    }\r\n\r\n                    return { x: x, y: y };\r\n                },\r\n\r\n                getArea: function() {\r\n                    var vm = this._view;\r\n                    return vm.width * Math.abs(vm.y - vm.base);\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y\r\n                    };\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17 }], 31: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = {};\r\n            module.exports.Arc = require(27);\r\n            module.exports.Line = require(28);\r\n            module.exports.Point = require(29);\r\n            module.exports.Rectangle = require(30);\r\n        }, { \"27\": 27, \"28\": 28, \"29\": 29, \"30\": 30 }], 32: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * @namespace Chart.helpers.canvas\r\n             */\r\n            var exports = module.exports = {\r\n                /**\r\n                 * Clears the entire canvas associated to the given `chart`.\r\n                 * @param {Chart} chart - The chart for which to clear the canvas.\r\n                 */\r\n                clear: function(chart) {\r\n                    chart.ctx.clearRect(0, 0, chart.width, chart.height);\r\n                },\r\n\r\n                /**\r\n                 * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\r\n                 * given size (width, height) and the same `radius` for all corners.\r\n                 * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\r\n                 * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\r\n                 * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\r\n                 * @param {Number} width - The rectangle's width.\r\n                 * @param {Number} height - The rectangle's height.\r\n                 * @param {Number} radius - The rounded amount (in pixels) for the four corners.\r\n                 * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\r\n                 */\r\n                roundedRect: function(ctx, x, y, width, height, radius) {\r\n                    if (radius) {\r\n                        var rx = Math.min(radius, width / 2);\r\n                        var ry = Math.min(radius, height / 2);\r\n\r\n                        ctx.moveTo(x + rx, y);\r\n                        ctx.lineTo(x + width - rx, y);\r\n                        ctx.quadraticCurveTo(x + width, y, x + width, y + ry);\r\n                        ctx.lineTo(x + width, y + height - ry);\r\n                        ctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\r\n                        ctx.lineTo(x + rx, y + height);\r\n                        ctx.quadraticCurveTo(x, y + height, x, y + height - ry);\r\n                        ctx.lineTo(x, y + ry);\r\n                        ctx.quadraticCurveTo(x, y, x + rx, y);\r\n                    } else {\r\n                        ctx.rect(x, y, width, height);\r\n                    }\r\n                },\r\n\r\n                drawPoint: function(ctx, style, radius, x, y) {\r\n                    var type, edgeLength, xOffset, yOffset, height, size;\r\n\r\n                    if (style && typeof style === 'object') {\r\n                        type = style.toString();\r\n                        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n                            ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    if (isNaN(radius) || radius <= 0) {\r\n                        return;\r\n                    }\r\n\r\n                    switch (style) {\r\n                        // Default includes circle\r\n                        default:\r\n                            ctx.beginPath();\r\n                            ctx.arc(x, y, radius, 0, Math.PI * 2);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'triangle':\r\n                            ctx.beginPath();\r\n                            edgeLength = 3 * radius / Math.sqrt(3);\r\n                            height = edgeLength * Math.sqrt(3) / 2;\r\n                            ctx.moveTo(x - edgeLength / 2, y + height / 3);\r\n                            ctx.lineTo(x + edgeLength / 2, y + height / 3);\r\n                            ctx.lineTo(x, y - 2 * height / 3);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'rect':\r\n                            size = 1 / Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            ctx.fillRect(x - size, y - size, 2 * size, 2 * size);\r\n                            ctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\r\n                            break;\r\n                        case 'rectRounded':\r\n                            var offset = radius / Math.SQRT2;\r\n                            var leftX = x - offset;\r\n                            var topY = y - offset;\r\n                            var sideSize = Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'rectRot':\r\n                            size = 1 / Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x - size, y);\r\n                            ctx.lineTo(x, y + size);\r\n                            ctx.lineTo(x + size, y);\r\n                            ctx.lineTo(x, y - size);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'cross':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y + radius);\r\n                            ctx.lineTo(x, y - radius);\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'crossRot':\r\n                            ctx.beginPath();\r\n                            xOffset = Math.cos(Math.PI / 4) * radius;\r\n                            yOffset = Math.sin(Math.PI / 4) * radius;\r\n                            ctx.moveTo(x - xOffset, y - yOffset);\r\n                            ctx.lineTo(x + xOffset, y + yOffset);\r\n                            ctx.moveTo(x - xOffset, y + yOffset);\r\n                            ctx.lineTo(x + xOffset, y - yOffset);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'star':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y + radius);\r\n                            ctx.lineTo(x, y - radius);\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            xOffset = Math.cos(Math.PI / 4) * radius;\r\n                            yOffset = Math.sin(Math.PI / 4) * radius;\r\n                            ctx.moveTo(x - xOffset, y - yOffset);\r\n                            ctx.lineTo(x + xOffset, y + yOffset);\r\n                            ctx.moveTo(x - xOffset, y + yOffset);\r\n                            ctx.lineTo(x + xOffset, y - yOffset);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'line':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'dash':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                    }\r\n\r\n                    ctx.stroke();\r\n                },\r\n\r\n                clipArea: function(ctx, area) {\r\n                    ctx.save();\r\n                    ctx.beginPath();\r\n                    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\r\n                    ctx.clip();\r\n                },\r\n\r\n                unclipArea: function(ctx) {\r\n                    ctx.restore();\r\n                },\r\n\r\n                lineTo: function(ctx, previous, target, flip) {\r\n                    if (target.steppedLine) {\r\n                        if ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\r\n                            ctx.lineTo(previous.x, target.y);\r\n                        } else {\r\n                            ctx.lineTo(target.x, previous.y);\r\n                        }\r\n                        ctx.lineTo(target.x, target.y);\r\n                        return;\r\n                    }\r\n\r\n                    if (!target.tension) {\r\n                        ctx.lineTo(target.x, target.y);\r\n                        return;\r\n                    }\r\n\r\n                    ctx.bezierCurveTo(\r\n                        flip ? previous.controlPointPreviousX : previous.controlPointNextX,\r\n                        flip ? previous.controlPointPreviousY : previous.controlPointNextY,\r\n                        flip ? target.controlPointNextX : target.controlPointPreviousX,\r\n                        flip ? target.controlPointNextY : target.controlPointPreviousY,\r\n                        target.x,\r\n                        target.y);\r\n                }\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\r\n             * @namespace Chart.helpers.clear\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.clear = exports.clear;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\r\n             * @namespace Chart.helpers.drawRoundedRectangle\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.drawRoundedRectangle = function(ctx) {\r\n                ctx.beginPath();\r\n                exports.roundedRect.apply(exports, arguments);\r\n                ctx.closePath();\r\n            };\r\n        }, { \"33\": 33 }], 33: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            /**\r\n             * @namespace Chart.helpers\r\n             */\r\n            var helpers = {\r\n                /**\r\n                 * An empty function that can be used, for example, for optional callback.\r\n                 */\r\n                noop: function() { },\r\n\r\n                /**\r\n                 * Returns a unique id, sequentially generated from a global variable.\r\n                 * @returns {Number}\r\n                 * @function\r\n                 */\r\n                uid: (function() {\r\n                    var id = 0;\r\n                    return function() {\r\n                        return id++;\r\n                    };\r\n                }()),\r\n\r\n                /**\r\n                 * Returns true if `value` is neither null nor undefined, else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @since 2.7.0\r\n                 */\r\n                isNullOrUndef: function(value) {\r\n                    return value === null || typeof value === 'undefined';\r\n                },\r\n\r\n                /**\r\n                 * Returns true if `value` is an array, else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @function\r\n                 */\r\n                isArray: Array.isArray ? Array.isArray : function(value) {\r\n                    return Object.prototype.toString.call(value) === '[object Array]';\r\n                },\r\n\r\n                /**\r\n                 * Returns true if `value` is an object (excluding null), else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @since 2.7.0\r\n                 */\r\n                isObject: function(value) {\r\n                    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\r\n                },\r\n\r\n                /**\r\n                 * Returns `value` if defined, else returns `defaultValue`.\r\n                 * @param {*} value - The value to return if defined.\r\n                 * @param {*} defaultValue - The value to return if `value` is undefined.\r\n                 * @returns {*}\r\n                 */\r\n                valueOrDefault: function(value, defaultValue) {\r\n                    return typeof value === 'undefined' ? defaultValue : value;\r\n                },\r\n\r\n                /**\r\n                 * Returns value at the given `index` in array if defined, else returns `defaultValue`.\r\n                 * @param {Array} value - The array to lookup for value at `index`.\r\n                 * @param {Number} index - The index in `value` to lookup for value.\r\n                 * @param {*} defaultValue - The value to return if `value[index]` is undefined.\r\n                 * @returns {*}\r\n                 */\r\n                valueAtIndexOrDefault: function(value, index, defaultValue) {\r\n                    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\r\n                },\r\n\r\n                /**\r\n                 * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\r\n                 * value returned by `fn`. If `fn` is not a function, this method returns undefined.\r\n                 * @param {Function} fn - The function to call.\r\n                 * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\r\n                 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\r\n                 * @returns {*}\r\n                 */\r\n                callback: function(fn, args, thisArg) {\r\n                    if (fn && typeof fn.call === 'function') {\r\n                        return fn.apply(thisArg, args);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Note(SB) for performance sake, this method should only be used when loopable type\r\n                 * is unknown or in none intensive code (not called often and small loopable). Else\r\n                 * it's preferable to use a regular for() loop and save extra function calls.\r\n                 * @param {Object|Array} loopable - The object or array to be iterated.\r\n                 * @param {Function} fn - The function to call for each item.\r\n                 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\r\n                 * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\r\n                 */\r\n                each: function(loopable, fn, thisArg, reverse) {\r\n                    var i, len, keys;\r\n                    if (helpers.isArray(loopable)) {\r\n                        len = loopable.length;\r\n                        if (reverse) {\r\n                            for (i = len - 1; i >= 0; i--) {\r\n                                fn.call(thisArg, loopable[i], i);\r\n                            }\r\n                        } else {\r\n                            for (i = 0; i < len; i++) {\r\n                                fn.call(thisArg, loopable[i], i);\r\n                            }\r\n                        }\r\n                    } else if (helpers.isObject(loopable)) {\r\n                        keys = Object.keys(loopable);\r\n                        len = keys.length;\r\n                        for (i = 0; i < len; i++) {\r\n                            fn.call(thisArg, loopable[keys[i]], keys[i]);\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\r\n                 * @see http://stackoverflow.com/a/14853974\r\n                 * @param {Array} a0 - The array to compare\r\n                 * @param {Array} a1 - The array to compare\r\n                 * @returns {Boolean}\r\n                 */\r\n                arrayEquals: function(a0, a1) {\r\n                    var i, ilen, v0, v1;\r\n\r\n                    if (!a0 || !a1 || a0.length !== a1.length) {\r\n                        return false;\r\n                    }\r\n\r\n                    for (i = 0, ilen = a0.length; i < ilen; ++i) {\r\n                        v0 = a0[i];\r\n                        v1 = a1[i];\r\n\r\n                        if (v0 instanceof Array && v1 instanceof Array) {\r\n                            if (!helpers.arrayEquals(v0, v1)) {\r\n                                return false;\r\n                            }\r\n                        } else if (v0 !== v1) {\r\n                            // NOTE: two different object instances will never be equal: {x:20} != {x:20}\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                },\r\n\r\n                /**\r\n                 * Returns a deep copy of `source` without keeping references on objects and arrays.\r\n                 * @param {*} source - The value to clone.\r\n                 * @returns {*}\r\n                 */\r\n                clone: function(source) {\r\n                    if (helpers.isArray(source)) {\r\n                        return source.map(helpers.clone);\r\n                    }\r\n\r\n                    if (helpers.isObject(source)) {\r\n                        var target = {};\r\n                        var keys = Object.keys(source);\r\n                        var klen = keys.length;\r\n                        var k = 0;\r\n\r\n                        for (; k < klen; ++k) {\r\n                            target[keys[k]] = helpers.clone(source[keys[k]]);\r\n                        }\r\n\r\n                        return target;\r\n                    }\r\n\r\n                    return source;\r\n                },\r\n\r\n                /**\r\n                 * The default merger when Chart.helpers.merge is called without merger option.\r\n                 * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\r\n                 * @private\r\n                 */\r\n                _merger: function(key, target, source, options) {\r\n                    var tval = target[key];\r\n                    var sval = source[key];\r\n\r\n                    if (helpers.isObject(tval) && helpers.isObject(sval)) {\r\n                        helpers.merge(tval, sval, options);\r\n                    } else {\r\n                        target[key] = helpers.clone(sval);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Merges source[key] in target[key] only if target[key] is undefined.\r\n                 * @private\r\n                 */\r\n                _mergerIf: function(key, target, source) {\r\n                    var tval = target[key];\r\n                    var sval = source[key];\r\n\r\n                    if (helpers.isObject(tval) && helpers.isObject(sval)) {\r\n                        helpers.mergeIf(tval, sval);\r\n                    } else if (!target.hasOwnProperty(key)) {\r\n                        target[key] = helpers.clone(sval);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Recursively deep copies `source` properties into `target` with the given `options`.\r\n                 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n                 * @param {Object} target - The target object in which all sources are merged into.\r\n                 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\r\n                 * @param {Object} [options] - Merging options:\r\n                 * @param {Function} [options.merger] - The merge method (key, target, source, options)\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                merge: function(target, source, options) {\r\n                    var sources = helpers.isArray(source) ? source : [source];\r\n                    var ilen = sources.length;\r\n                    var merge, i, keys, klen, k;\r\n\r\n                    if (!helpers.isObject(target)) {\r\n                        return target;\r\n                    }\r\n\r\n                    options = options || {};\r\n                    merge = options.merger || helpers._merger;\r\n\r\n                    for (i = 0; i < ilen; ++i) {\r\n                        source = sources[i];\r\n                        if (!helpers.isObject(source)) {\r\n                            continue;\r\n                        }\r\n\r\n                        keys = Object.keys(source);\r\n                        for (k = 0, klen = keys.length; k < klen; ++k) {\r\n                            merge(keys[k], target, source, options);\r\n                        }\r\n                    }\r\n\r\n                    return target;\r\n                },\r\n\r\n                /**\r\n                 * Recursively deep copies `source` properties into `target` *only* if not defined in target.\r\n                 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n                 * @param {Object} target - The target object in which all sources are merged into.\r\n                 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                mergeIf: function(target, source) {\r\n                    return helpers.merge(target, source, { merger: helpers._mergerIf });\r\n                },\r\n\r\n                /**\r\n                 * Applies the contents of two or more objects together into the first object.\r\n                 * @param {Object} target - The target object in which all objects are merged into.\r\n                 * @param {Object} arg1 - Object containing additional properties to merge in target.\r\n                 * @param {Object} argN - Additional objects containing properties to merge in target.\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                extend: function(target) {\r\n                    var setFn = function(value, key) {\r\n                        target[key] = value;\r\n                    };\r\n                    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\r\n                        helpers.each(arguments[i], setFn);\r\n                    }\r\n                    return target;\r\n                },\r\n\r\n                /**\r\n                 * Basic javascript inheritance based on the model created in Backbone.js\r\n                 */\r\n                inherits: function(extensions) {\r\n                    var me = this;\r\n                    var ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\r\n                        return me.apply(this, arguments);\r\n                    };\r\n\r\n                    var Surrogate = function() {\r\n                        this.constructor = ChartElement;\r\n                    };\r\n\r\n                    Surrogate.prototype = me.prototype;\r\n                    ChartElement.prototype = new Surrogate();\r\n                    ChartElement.extend = helpers.inherits;\r\n\r\n                    if (extensions) {\r\n                        helpers.extend(ChartElement.prototype, extensions);\r\n                    }\r\n\r\n                    ChartElement.__super__ = me.prototype;\r\n                    return ChartElement;\r\n                }\r\n            };\r\n\r\n            module.exports = helpers;\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.callback instead.\r\n             * @function Chart.helpers.callCallback\r\n             * @deprecated since version 2.6.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.callCallback = helpers.callback;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Array.prototype.indexOf instead.\r\n             * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\r\n             * @function Chart.helpers.indexOf\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.indexOf = function(array, item, fromIndex) {\r\n                return Array.prototype.indexOf.call(array, item, fromIndex);\r\n            };\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\r\n             * @function Chart.helpers.getValueOrDefault\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.getValueOrDefault = helpers.valueOrDefault;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\r\n             * @function Chart.helpers.getValueAtIndexOrDefault\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n        }, {}], 34: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * Easing functions adapted from Robert Penner's easing equations.\r\n             * @namespace Chart.helpers.easingEffects\r\n             * @see http://www.robertpenner.com/easing/\r\n             */\r\n            var effects = {\r\n                linear: function(t) {\r\n                    return t;\r\n                },\r\n\r\n                easeInQuad: function(t) {\r\n                    return t * t;\r\n                },\r\n\r\n                easeOutQuad: function(t) {\r\n                    return -t * (t - 2);\r\n                },\r\n\r\n                easeInOutQuad: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t;\r\n                    }\r\n                    return -0.5 * ((--t) * (t - 2) - 1);\r\n                },\r\n\r\n                easeInCubic: function(t) {\r\n                    return t * t * t;\r\n                },\r\n\r\n                easeOutCubic: function(t) {\r\n                    return (t = t - 1) * t * t + 1;\r\n                },\r\n\r\n                easeInOutCubic: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t;\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * t + 2);\r\n                },\r\n\r\n                easeInQuart: function(t) {\r\n                    return t * t * t * t;\r\n                },\r\n\r\n                easeOutQuart: function(t) {\r\n                    return -((t = t - 1) * t * t * t - 1);\r\n                },\r\n\r\n                easeInOutQuart: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t * t;\r\n                    }\r\n                    return -0.5 * ((t -= 2) * t * t * t - 2);\r\n                },\r\n\r\n                easeInQuint: function(t) {\r\n                    return t * t * t * t * t;\r\n                },\r\n\r\n                easeOutQuint: function(t) {\r\n                    return (t = t - 1) * t * t * t * t + 1;\r\n                },\r\n\r\n                easeInOutQuint: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t * t * t;\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * t * t * t + 2);\r\n                },\r\n\r\n                easeInSine: function(t) {\r\n                    return -Math.cos(t * (Math.PI / 2)) + 1;\r\n                },\r\n\r\n                easeOutSine: function(t) {\r\n                    return Math.sin(t * (Math.PI / 2));\r\n                },\r\n\r\n                easeInOutSine: function(t) {\r\n                    return -0.5 * (Math.cos(Math.PI * t) - 1);\r\n                },\r\n\r\n                easeInExpo: function(t) {\r\n                    return (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\r\n                },\r\n\r\n                easeOutExpo: function(t) {\r\n                    return (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\r\n                },\r\n\r\n                easeInOutExpo: function(t) {\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * Math.pow(2, 10 * (t - 1));\r\n                    }\r\n                    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\r\n                },\r\n\r\n                easeInCirc: function(t) {\r\n                    if (t >= 1) {\r\n                        return t;\r\n                    }\r\n                    return -(Math.sqrt(1 - t * t) - 1);\r\n                },\r\n\r\n                easeOutCirc: function(t) {\r\n                    return Math.sqrt(1 - (t = t - 1) * t);\r\n                },\r\n\r\n                easeInOutCirc: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return -0.5 * (Math.sqrt(1 - t * t) - 1);\r\n                    }\r\n                    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\r\n                },\r\n\r\n                easeInElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.3;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\r\n                },\r\n\r\n                easeOutElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.3;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\r\n                },\r\n\r\n                easeInOutElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if ((t /= 0.5) === 2) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.45;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    if (t < 1) {\r\n                        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\r\n                    }\r\n                    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n                },\r\n                easeInBack: function(t) {\r\n                    var s = 1.70158;\r\n                    return t * t * ((s + 1) * t - s);\r\n                },\r\n\r\n                easeOutBack: function(t) {\r\n                    var s = 1.70158;\r\n                    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\r\n                },\r\n\r\n                easeInOutBack: function(t) {\r\n                    var s = 1.70158;\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n                },\r\n\r\n                easeInBounce: function(t) {\r\n                    return 1 - effects.easeOutBounce(1 - t);\r\n                },\r\n\r\n                easeOutBounce: function(t) {\r\n                    if (t < (1 / 2.75)) {\r\n                        return 7.5625 * t * t;\r\n                    }\r\n                    if (t < (2 / 2.75)) {\r\n                        return 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\r\n                    }\r\n                    if (t < (2.5 / 2.75)) {\r\n                        return 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\r\n                    }\r\n                    return 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\r\n                },\r\n\r\n                easeInOutBounce: function(t) {\r\n                    if (t < 0.5) {\r\n                        return effects.easeInBounce(t * 2) * 0.5;\r\n                    }\r\n                    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\r\n                }\r\n            };\r\n\r\n            module.exports = {\r\n                effects: effects\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\r\n             * @function Chart.helpers.easingEffects\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.easingEffects = effects;\r\n        }, { \"33\": 33 }], 35: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * @alias Chart.helpers.options\r\n             * @namespace\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Converts the given line height `value` in pixels for a specific font `size`.\r\n                 * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\r\n                 * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\r\n                 * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\r\n                 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\r\n                 * @since 2.7.0\r\n                 */\r\n                toLineHeight: function(value, size) {\r\n                    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\r\n                    if (!matches || matches[1] === 'normal') {\r\n                        return size * 1.2;\r\n                    }\r\n\r\n                    value = +matches[2];\r\n\r\n                    switch (matches[3]) {\r\n                        case 'px':\r\n                            return value;\r\n                        case '%':\r\n                            value /= 100;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n\r\n                    return size * value;\r\n                },\r\n\r\n                /**\r\n                 * Converts the given value into a padding object with pre-computed width/height.\r\n                 * @param {Number|Object} value - If a number, set the value to all TRBL component,\r\n                 *  else, if and object, use defined properties and sets undefined ones to 0.\r\n                 * @returns {Object} The padding values (top, right, bottom, left, width, height)\r\n                 * @since 2.7.0\r\n                 */\r\n                toPadding: function(value) {\r\n                    var t, r, b, l;\r\n\r\n                    if (helpers.isObject(value)) {\r\n                        t = +value.top || 0;\r\n                        r = +value.right || 0;\r\n                        b = +value.bottom || 0;\r\n                        l = +value.left || 0;\r\n                    } else {\r\n                        t = r = b = l = +value || 0;\r\n                    }\r\n\r\n                    return {\r\n                        top: t,\r\n                        right: r,\r\n                        bottom: b,\r\n                        left: l,\r\n                        height: t + b,\r\n                        width: l + r\r\n                    };\r\n                },\r\n\r\n                /**\r\n                 * Evaluates the given `inputs` sequentially and returns the first defined value.\r\n                 * @param {Array[]} inputs - An array of values, falling back to the last value.\r\n                 * @param {Object} [context] - If defined and the current value is a function, the value\r\n                 * is called with `context` as first argument and the result becomes the new input.\r\n                 * @param {Number} [index] - If defined and the current value is an array, the value\r\n                 * at `index` become the new input.\r\n                 * @since 2.7.0\r\n                 */\r\n                resolve: function(inputs, context, index) {\r\n                    var i, ilen, value;\r\n\r\n                    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\r\n                        value = inputs[i];\r\n                        if (value === undefined) {\r\n                            continue;\r\n                        }\r\n                        if (context !== undefined && typeof value === 'function') {\r\n                            value = value(context);\r\n                        }\r\n                        if (index !== undefined && helpers.isArray(value)) {\r\n                            value = value[index];\r\n                        }\r\n                        if (value !== undefined) {\r\n                            return value;\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }, { \"33\": 33 }], 36: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = require(33);\r\n            module.exports.easing = require(34);\r\n            module.exports.canvas = require(32);\r\n            module.exports.options = require(35);\r\n        }, { \"32\": 32, \"33\": 33, \"34\": 34, \"35\": 35 }], 37: [function(require, module, exports) {\r\n            /**\r\n             * Platform fallback implementation (minimal).\r\n             * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\r\n             */\r\n\r\n            module.exports = {\r\n                acquireContext: function(item) {\r\n                    if (item && item.canvas) {\r\n                        // Support for any object associated to a canvas (including a context2d)\r\n                        item = item.canvas;\r\n                    }\r\n\r\n                    return item && item.getContext('2d') || null;\r\n                }\r\n            };\r\n        }, {}], 38: [function(require, module, exports) {\r\n            /**\r\n             * Chart.Platform implementation for targeting a web browser\r\n             */\r\n\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            var EXPANDO_KEY = '$chartjs';\r\n            var CSS_PREFIX = 'chartjs-';\r\n            var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\r\n            var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\r\n            var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\r\n\r\n            /**\r\n             * DOM event types -> Chart.js event types.\r\n             * Note: only events with different types are mapped.\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/Events\r\n             */\r\n            var EVENT_TYPES = {\r\n                touchstart: 'mousedown',\r\n                touchmove: 'mousemove',\r\n                touchend: 'mouseup',\r\n                pointerenter: 'mouseenter',\r\n                pointerdown: 'mousedown',\r\n                pointermove: 'mousemove',\r\n                pointerup: 'mouseup',\r\n                pointerleave: 'mouseout',\r\n                pointerout: 'mouseout'\r\n            };\r\n\r\n            /**\r\n             * The \"used\" size is the final value of a dimension property after all calculations have\r\n             * been performed. This method uses the computed style of `element` but returns undefined\r\n             * if the computed style is not expressed in pixels. That can happen in some cases where\r\n             * `element` has a size relative to its parent and this last one is not yet displayed,\r\n             * for example because of `display: none` on a parent node.\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\r\n             * @returns {Number} Size in pixels or undefined if unknown.\r\n             */\r\n            function readUsedSize(element, property) {\r\n                var value = helpers.getStyle(element, property);\r\n                var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\r\n                return matches ? Number(matches[1]) : undefined;\r\n            }\r\n\r\n            /**\r\n             * Initializes the canvas style and render size without modifying the canvas display size,\r\n             * since responsiveness is handled by the controller.resize() method. The config is used\r\n             * to determine the aspect ratio to apply in case no explicit height has been specified.\r\n             */\r\n            function initCanvas(canvas, config) {\r\n                var style = canvas.style;\r\n\r\n                // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\r\n                // returns null or '' if no explicit value has been set to the canvas attribute.\r\n                var renderHeight = canvas.getAttribute('height');\r\n                var renderWidth = canvas.getAttribute('width');\r\n\r\n                // Chart.js modifies some canvas values that we want to restore on destroy\r\n                canvas[EXPANDO_KEY] = {\r\n                    initial: {\r\n                        height: renderHeight,\r\n                        width: renderWidth,\r\n                        style: {\r\n                            display: style.display,\r\n                            height: style.height,\r\n                            width: style.width\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // Force canvas to display as block to avoid extra space caused by inline\r\n                // elements, which would interfere with the responsive resize process.\r\n                // https://github.com/chartjs/Chart.js/issues/2538\r\n                style.display = style.display || 'block';\r\n\r\n                if (renderWidth === null || renderWidth === '') {\r\n                    var displayWidth = readUsedSize(canvas, 'width');\r\n                    if (displayWidth !== undefined) {\r\n                        canvas.width = displayWidth;\r\n                    }\r\n                }\r\n\r\n                if (renderHeight === null || renderHeight === '') {\r\n                    if (canvas.style.height === '') {\r\n                        // If no explicit render height and style height, let's apply the aspect ratio,\r\n                        // which one can be specified by the user but also by charts as default option\r\n                        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\r\n                        canvas.height = canvas.width / (config.options.aspectRatio || 2);\r\n                    } else {\r\n                        var displayHeight = readUsedSize(canvas, 'height');\r\n                        if (displayWidth !== undefined) {\r\n                            canvas.height = displayHeight;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return canvas;\r\n            }\r\n\r\n            /**\r\n             * Detects support for options object argument in addEventListener.\r\n             * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\r\n             * @private\r\n             */\r\n            var supportsEventListenerOptions = (function() {\r\n                var supports = false;\r\n                try {\r\n                    var options = Object.defineProperty({}, 'passive', {\r\n                        get: function() {\r\n                            supports = true;\r\n                        }\r\n                    });\r\n                    window.addEventListener('e', null, options);\r\n                } catch (e) {\r\n                    // continue regardless of error\r\n                }\r\n                return supports;\r\n            }());\r\n\r\n            // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\r\n            // https://github.com/chartjs/Chart.js/issues/4287\r\n            var eventListenerOptions = supportsEventListenerOptions ? { passive: true } : false;\r\n\r\n            function addEventListener(node, type, listener) {\r\n                node.addEventListener(type, listener, eventListenerOptions);\r\n            }\r\n\r\n            function removeEventListener(node, type, listener) {\r\n                node.removeEventListener(type, listener, eventListenerOptions);\r\n            }\r\n\r\n            function createEvent(type, chart, x, y, nativeEvent) {\r\n                return {\r\n                    type: type,\r\n                    chart: chart,\r\n                    native: nativeEvent || null,\r\n                    x: x !== undefined ? x : null,\r\n                    y: y !== undefined ? y : null,\r\n                };\r\n            }\r\n\r\n            function fromNativeEvent(event, chart) {\r\n                var type = EVENT_TYPES[event.type] || event.type;\r\n                var pos = helpers.getRelativePosition(event, chart);\r\n                return createEvent(type, chart, pos.x, pos.y, event);\r\n            }\r\n\r\n            function throttled(fn, thisArg) {\r\n                var ticking = false;\r\n                var args = [];\r\n\r\n                return function() {\r\n                    args = Array.prototype.slice.call(arguments);\r\n                    thisArg = thisArg || this;\r\n\r\n                    if (!ticking) {\r\n                        ticking = true;\r\n                        helpers.requestAnimFrame.call(window, function() {\r\n                            ticking = false;\r\n                            fn.apply(thisArg, args);\r\n                        });\r\n                    }\r\n                };\r\n            }\r\n\r\n            // Implementation based on https://github.com/marcj/css-element-queries\r\n            function createResizer(handler) {\r\n                var resizer = document.createElement('div');\r\n                var cls = CSS_PREFIX + 'size-monitor';\r\n                var maxSize = 1000000;\r\n                var style =\r\n                    'position:absolute;' +\r\n                    'left:0;' +\r\n                    'top:0;' +\r\n                    'right:0;' +\r\n                    'bottom:0;' +\r\n                    'overflow:hidden;' +\r\n                    'pointer-events:none;' +\r\n                    'visibility:hidden;' +\r\n                    'z-index:-1;';\r\n\r\n                resizer.style.cssText = style;\r\n                resizer.className = cls;\r\n                resizer.innerHTML =\r\n                    '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\r\n                    '<div style=\"' +\r\n                    'position:absolute;' +\r\n                    'width:' + maxSize + 'px;' +\r\n                    'height:' + maxSize + 'px;' +\r\n                    'left:0;' +\r\n                    'top:0\">' +\r\n                    '</div>' +\r\n                    '</div>' +\r\n                    '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\r\n                    '<div style=\"' +\r\n                    'position:absolute;' +\r\n                    'width:200%;' +\r\n                    'height:200%;' +\r\n                    'left:0; ' +\r\n                    'top:0\">' +\r\n                    '</div>' +\r\n                    '</div>';\r\n\r\n                var expand = resizer.childNodes[0];\r\n                var shrink = resizer.childNodes[1];\r\n\r\n                resizer._reset = function() {\r\n                    expand.scrollLeft = maxSize;\r\n                    expand.scrollTop = maxSize;\r\n                    shrink.scrollLeft = maxSize;\r\n                    shrink.scrollTop = maxSize;\r\n                };\r\n                var onScroll = function() {\r\n                    resizer._reset();\r\n                    handler();\r\n                };\r\n\r\n                addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\r\n                addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\r\n\r\n                return resizer;\r\n            }\r\n\r\n            // https://davidwalsh.name/detect-node-insertion\r\n            function watchForRender(node, handler) {\r\n                var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\r\n                var proxy = expando.renderProxy = function(e) {\r\n                    if (e.animationName === CSS_RENDER_ANIMATION) {\r\n                        handler();\r\n                    }\r\n                };\r\n\r\n                helpers.each(ANIMATION_START_EVENTS, function(type) {\r\n                    addEventListener(node, type, proxy);\r\n                });\r\n\r\n                // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\r\n                // is removed then added back immediately (same animation frame?). Accessing the\r\n                // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\r\n                // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\r\n                // https://github.com/chartjs/Chart.js/issues/4737\r\n                expando.reflow = !!node.offsetParent;\r\n\r\n                node.classList.add(CSS_RENDER_MONITOR);\r\n            }\r\n\r\n            function unwatchForRender(node) {\r\n                var expando = node[EXPANDO_KEY] || {};\r\n                var proxy = expando.renderProxy;\r\n\r\n                if (proxy) {\r\n                    helpers.each(ANIMATION_START_EVENTS, function(type) {\r\n                        removeEventListener(node, type, proxy);\r\n                    });\r\n\r\n                    delete expando.renderProxy;\r\n                }\r\n\r\n                node.classList.remove(CSS_RENDER_MONITOR);\r\n            }\r\n\r\n            function addResizeListener(node, listener, chart) {\r\n                var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\r\n\r\n                // Let's keep track of this added resizer and thus avoid DOM query when removing it.\r\n                var resizer = expando.resizer = createResizer(throttled(function() {\r\n                    if (expando.resizer) {\r\n                        return listener(createEvent('resize', chart));\r\n                    }\r\n                }));\r\n\r\n                // The resizer needs to be attached to the node parent, so we first need to be\r\n                // sure that `node` is attached to the DOM before injecting the resizer element.\r\n                watchForRender(node, function() {\r\n                    if (expando.resizer) {\r\n                        var container = node.parentNode;\r\n                        if (container && container !== resizer.parentNode) {\r\n                            container.insertBefore(resizer, container.firstChild);\r\n                        }\r\n\r\n                        // The container size might have changed, let's reset the resizer state.\r\n                        resizer._reset();\r\n                    }\r\n                });\r\n            }\r\n\r\n            function removeResizeListener(node) {\r\n                var expando = node[EXPANDO_KEY] || {};\r\n                var resizer = expando.resizer;\r\n\r\n                delete expando.resizer;\r\n                unwatchForRender(node);\r\n\r\n                if (resizer && resizer.parentNode) {\r\n                    resizer.parentNode.removeChild(resizer);\r\n                }\r\n            }\r\n\r\n            //function injectCSS(platform, css) {\r\n            //    // http://stackoverflow.com/q/3922139\r\n            //    var style = platform._style || document.createElement('style');\r\n            //    if (!platform._style) {\r\n            //        platform._style = style;\r\n            //        css = '/* Chart.js */\\n' + css;\r\n            //        style.setAttribute('type', 'text/css');\r\n            //        document.getElementsByTagName('head')[0].appendChild(style);\r\n            //    }\r\n\r\n            //    style.appendChild(document.createTextNode(css));\r\n            //}\r\n\r\n            module.exports = {\r\n                /**\r\n                 * This property holds whether this platform is enabled for the current environment.\r\n                 * Currently used by platform.js to select the proper implementation.\r\n                 * @private\r\n                 */\r\n                _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\r\n\r\n                initialize: function() {\r\n                    var keyframes = 'from{opacity:0.99}to{opacity:1}';\r\n                    //injectCSS(this,\r\n                    //    // DOM rendering detection\r\n                    //    // https://davidwalsh.name/detect-node-insertion\r\n                    //    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\r\n                    //    '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\r\n                    //    '.' + CSS_RENDER_MONITOR + '{' +\r\n                    //    '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\r\n                    //    'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\r\n                    //    '}'\r\n                    //);\r\n                },\r\n\r\n                acquireContext: function(item, config) {\r\n                    if (typeof item === 'string') {\r\n                        item = document.getElementById(item);\r\n                    } else if (item.length) {\r\n                        // Support for array based queries (such as jQuery)\r\n                        item = item[0];\r\n                    }\r\n\r\n                    if (item && item.canvas) {\r\n                        // Support for any object associated to a canvas (including a context2d)\r\n                        item = item.canvas;\r\n                    }\r\n\r\n                    // To prevent canvas fingerprinting, some add-ons undefine the getContext\r\n                    // method, for example: https://github.com/kkapsner/CanvasBlocker\r\n                    // https://github.com/chartjs/Chart.js/issues/2807\r\n                    var context = item && item.getContext && item.getContext('2d');\r\n\r\n                    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\r\n                    // inside an iframe or when running in a protected environment. We could guess the\r\n                    // types from their toString() value but let's keep things flexible and assume it's\r\n                    // a sufficient condition if the item has a context2D which has item as `canvas`.\r\n                    // https://github.com/chartjs/Chart.js/issues/3887\r\n                    // https://github.com/chartjs/Chart.js/issues/4102\r\n                    // https://github.com/chartjs/Chart.js/issues/4152\r\n                    if (context && context.canvas === item) {\r\n                        initCanvas(item, config);\r\n                        return context;\r\n                    }\r\n\r\n                    return null;\r\n                },\r\n\r\n                releaseContext: function(context) {\r\n                    var canvas = context.canvas;\r\n                    if (!canvas[EXPANDO_KEY]) {\r\n                        return;\r\n                    }\r\n\r\n                    var initial = canvas[EXPANDO_KEY].initial;\r\n                    ['height', 'width'].forEach(function(prop) {\r\n                        var value = initial[prop];\r\n                        if (helpers.isNullOrUndef(value)) {\r\n                            canvas.removeAttribute(prop);\r\n                        } else {\r\n                            canvas.setAttribute(prop, value);\r\n                        }\r\n                    });\r\n\r\n                    helpers.each(initial.style || {}, function(value, key) {\r\n                        canvas.style[key] = value;\r\n                    });\r\n\r\n                    // The canvas render size might have been changed (and thus the state stack discarded),\r\n                    // we can't use save() and restore() to restore the initial state. So make sure that at\r\n                    // least the canvas context is reset to the default state by setting the canvas width.\r\n                    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\r\n                    canvas.width = canvas.width;\r\n\r\n                    delete canvas[EXPANDO_KEY];\r\n                },\r\n\r\n                addEventListener: function(chart, type, listener) {\r\n                    var canvas = chart.canvas;\r\n                    if (type === 'resize') {\r\n                        // Note: the resize event is not supported on all browsers.\r\n                        addResizeListener(canvas, listener, chart);\r\n                        return;\r\n                    }\r\n\r\n                    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\r\n                    var proxies = expando.proxies || (expando.proxies = {});\r\n                    var proxy = proxies[chart.id + '_' + type] = function(event) {\r\n                        listener(fromNativeEvent(event, chart));\r\n                    };\r\n\r\n                    addEventListener(canvas, type, proxy);\r\n                },\r\n\r\n                removeEventListener: function(chart, type, listener) {\r\n                    var canvas = chart.canvas;\r\n                    if (type === 'resize') {\r\n                        // Note: the resize event is not supported on all browsers.\r\n                        removeResizeListener(canvas, listener);\r\n                        return;\r\n                    }\r\n\r\n                    var expando = listener[EXPANDO_KEY] || {};\r\n                    var proxies = expando.proxies || {};\r\n                    var proxy = proxies[chart.id + '_' + type];\r\n                    if (!proxy) {\r\n                        return;\r\n                    }\r\n\r\n                    removeEventListener(canvas, type, proxy);\r\n                }\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use EventTarget.addEventListener instead.\r\n             * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\r\n             * @function Chart.helpers.addEvent\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.addEvent = addEventListener;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use EventTarget.removeEventListener instead.\r\n             * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\r\n             * @function Chart.helpers.removeEvent\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.removeEvent = removeEventListener;\r\n        }, { \"36\": 36 }], 39: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n            var basic = require(37);\r\n            var dom = require(38);\r\n\r\n            // @TODO Make possible to select another platform at build time.\r\n            var implementation = dom._enabled ? dom : basic;\r\n\r\n            /**\r\n             * @namespace Chart.platform\r\n             * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\r\n             * @since 2.4.0\r\n             */\r\n            module.exports = helpers.extend({\r\n                /**\r\n                 * @since 2.7.0\r\n                 */\r\n                initialize: function() { },\r\n\r\n                /**\r\n                 * Called at chart construction time, returns a context2d instance implementing\r\n                 * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\r\n                 * @param {*} item - The native item from which to acquire context (platform specific)\r\n                 * @param {Object} options - The chart options\r\n                 * @returns {CanvasRenderingContext2D} context2d instance\r\n                 */\r\n                acquireContext: function() { },\r\n\r\n                /**\r\n                 * Called at chart destruction time, releases any resources associated to the context\r\n                 * previously returned by the acquireContext() method.\r\n                 * @param {CanvasRenderingContext2D} context - The context2d instance\r\n                 * @returns {Boolean} true if the method succeeded, else false\r\n                 */\r\n                releaseContext: function() { },\r\n\r\n                /**\r\n                 * Registers the specified listener on the given chart.\r\n                 * @param {Chart} chart - Chart from which to listen for event\r\n                 * @param {String} type - The ({@link IEvent}) type to listen for\r\n                 * @param {Function} listener - Receives a notification (an object that implements\r\n                 * the {@link IEvent} interface) when an event of the specified type occurs.\r\n                 */\r\n                addEventListener: function() { },\r\n\r\n                /**\r\n                 * Removes the specified listener previously registered with addEventListener.\r\n                 * @param {Chart} chart -Chart from which to remove the listener\r\n                 * @param {String} type - The ({@link IEvent}) type to remove\r\n                 * @param {Function} listener - The listener function to remove from the event target.\r\n                 */\r\n                removeEventListener: function() { }\r\n            }, implementation);\r\n\r\n            /**\r\n             * @interface IPlatform\r\n             * Allows abstracting platform dependencies away from the chart\r\n             * @borrows Chart.platform.acquireContext as acquireContext\r\n             * @borrows Chart.platform.releaseContext as releaseContext\r\n             * @borrows Chart.platform.addEventListener as addEventListener\r\n             * @borrows Chart.platform.removeEventListener as removeEventListener\r\n             */\r\n\r\n            /**\r\n             * @interface IEvent\r\n             * @prop {String} type - The event type name, possible values are:\r\n             * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\r\n             * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\r\n             * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\r\n             * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\r\n             * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\r\n             */\r\n        }, { \"36\": 36, \"37\": 37, \"38\": 38 }], 40: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = {};\r\n            module.exports.filler = require(41);\r\n            module.exports.legend = require(42);\r\n            module.exports.title = require(43);\r\n        }, { \"41\": 41, \"42\": 42, \"43\": 43 }], 41: [function(require, module, exports) {\r\n            /**\r\n             * Plugin based on discussion from the following Chart.js issues:\r\n             * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\r\n             * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\r\n             */\r\n\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                plugins: {\r\n                    filler: {\r\n                        propagate: true\r\n                    }\r\n                }\r\n            });\r\n\r\n            var mappers = {\r\n                dataset: function(source) {\r\n                    var index = source.fill;\r\n                    var chart = source.chart;\r\n                    var meta = chart.getDatasetMeta(index);\r\n                    var visible = meta && chart.isDatasetVisible(index);\r\n                    var points = (visible && meta.dataset._children) || [];\r\n                    var length = points.length || 0;\r\n\r\n                    return !length ? null : function(point, i) {\r\n                        return (i < length && points[i]._view) || null;\r\n                    };\r\n                },\r\n\r\n                boundary: function(source) {\r\n                    var boundary = source.boundary;\r\n                    var x = boundary ? boundary.x : null;\r\n                    var y = boundary ? boundary.y : null;\r\n\r\n                    return function(point) {\r\n                        return {\r\n                            x: x === null ? point.x : x,\r\n                            y: y === null ? point.y : y,\r\n                        };\r\n                    };\r\n                }\r\n            };\r\n\r\n            // @todo if (fill[0] === '#')\r\n            function decodeFill(el, index, count) {\r\n                var model = el._model || {};\r\n                var fill = model.fill;\r\n                var target;\r\n\r\n                if (fill === undefined) {\r\n                    fill = !!model.backgroundColor;\r\n                }\r\n\r\n                if (fill === false || fill === null) {\r\n                    return false;\r\n                }\r\n\r\n                if (fill === true) {\r\n                    return 'origin';\r\n                }\r\n\r\n                target = parseFloat(fill, 10);\r\n                if (isFinite(target) && Math.floor(target) === target) {\r\n                    if (fill[0] === '-' || fill[0] === '+') {\r\n                        target = index + target;\r\n                    }\r\n\r\n                    if (target === index || target < 0 || target >= count) {\r\n                        return false;\r\n                    }\r\n\r\n                    return target;\r\n                }\r\n\r\n                switch (fill) {\r\n                    // compatibility\r\n                    case 'bottom':\r\n                        return 'start';\r\n                    case 'top':\r\n                        return 'end';\r\n                    case 'zero':\r\n                        return 'origin';\r\n                    // supported boundaries\r\n                    case 'origin':\r\n                    case 'start':\r\n                    case 'end':\r\n                        return fill;\r\n                    // invalid fill values\r\n                    default:\r\n                        return false;\r\n                }\r\n            }\r\n\r\n            function computeBoundary(source) {\r\n                var model = source.el._model || {};\r\n                var scale = source.el._scale || {};\r\n                var fill = source.fill;\r\n                var target = null;\r\n                var horizontal;\r\n\r\n                if (isFinite(fill)) {\r\n                    return null;\r\n                }\r\n\r\n                // Backward compatibility: until v3, we still need to support boundary values set on\r\n                // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\r\n                // controllers might still use it (e.g. the Smith chart).\r\n\r\n                if (fill === 'start') {\r\n                    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\r\n                } else if (fill === 'end') {\r\n                    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\r\n                } else if (model.scaleZero !== undefined) {\r\n                    target = model.scaleZero;\r\n                } else if (scale.getBasePosition) {\r\n                    target = scale.getBasePosition();\r\n                } else if (scale.getBasePixel) {\r\n                    target = scale.getBasePixel();\r\n                }\r\n\r\n                if (target !== undefined && target !== null) {\r\n                    if (target.x !== undefined && target.y !== undefined) {\r\n                        return target;\r\n                    }\r\n\r\n                    if (typeof target === 'number' && isFinite(target)) {\r\n                        horizontal = scale.isHorizontal();\r\n                        return {\r\n                            x: horizontal ? target : null,\r\n                            y: horizontal ? null : target\r\n                        };\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n\r\n            function resolveTarget(sources, index, propagate) {\r\n                var source = sources[index];\r\n                var fill = source.fill;\r\n                var visited = [index];\r\n                var target;\r\n\r\n                if (!propagate) {\r\n                    return fill;\r\n                }\r\n\r\n                while (fill !== false && visited.indexOf(fill) === -1) {\r\n                    if (!isFinite(fill)) {\r\n                        return fill;\r\n                    }\r\n\r\n                    target = sources[fill];\r\n                    if (!target) {\r\n                        return false;\r\n                    }\r\n\r\n                    if (target.visible) {\r\n                        return fill;\r\n                    }\r\n\r\n                    visited.push(fill);\r\n                    fill = target.fill;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            function createMapper(source) {\r\n                var fill = source.fill;\r\n                var type = 'dataset';\r\n\r\n                if (fill === false) {\r\n                    return null;\r\n                }\r\n\r\n                if (!isFinite(fill)) {\r\n                    type = 'boundary';\r\n                }\r\n\r\n                return mappers[type](source);\r\n            }\r\n\r\n            function isDrawable(point) {\r\n                return point && !point.skip;\r\n            }\r\n\r\n            function drawArea(ctx, curve0, curve1, len0, len1) {\r\n                var i;\r\n\r\n                if (!len0 || !len1) {\r\n                    return;\r\n                }\r\n\r\n                // building first area curve (normal)\r\n                ctx.moveTo(curve0[0].x, curve0[0].y);\r\n                for (i = 1; i < len0; ++i) {\r\n                    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\r\n                }\r\n\r\n                // joining the two area curves\r\n                ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\r\n\r\n                // building opposite area curve (reverse)\r\n                for (i = len1 - 1; i > 0; --i) {\r\n                    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\r\n                }\r\n            }\r\n\r\n            function doFill(ctx, points, mapper, view, color, loop) {\r\n                var count = points.length;\r\n                var span = view.spanGaps;\r\n                var curve0 = [];\r\n                var curve1 = [];\r\n                var len0 = 0;\r\n                var len1 = 0;\r\n                var i, ilen, index, p0, p1, d0, d1;\r\n\r\n                ctx.beginPath();\r\n\r\n                for (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\r\n                    index = i % count;\r\n                    p0 = points[index]._view;\r\n                    p1 = mapper(p0, index, view);\r\n                    d0 = isDrawable(p0);\r\n                    d1 = isDrawable(p1);\r\n\r\n                    if (d0 && d1) {\r\n                        len0 = curve0.push(p0);\r\n                        len1 = curve1.push(p1);\r\n                    } else if (len0 && len1) {\r\n                        if (!span) {\r\n                            drawArea(ctx, curve0, curve1, len0, len1);\r\n                            len0 = len1 = 0;\r\n                            curve0 = [];\r\n                            curve1 = [];\r\n                        } else {\r\n                            if (d0) {\r\n                                curve0.push(p0);\r\n                            }\r\n                            if (d1) {\r\n                                curve1.push(p1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                drawArea(ctx, curve0, curve1, len0, len1);\r\n\r\n                ctx.closePath();\r\n                ctx.fillStyle = color;\r\n                ctx.fill();\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'filler',\r\n\r\n                afterDatasetsUpdate: function(chart, options) {\r\n                    var count = (chart.data.datasets || []).length;\r\n                    var propagate = options.propagate;\r\n                    var sources = [];\r\n                    var meta, i, el, source;\r\n\r\n                    for (i = 0; i < count; ++i) {\r\n                        meta = chart.getDatasetMeta(i);\r\n                        el = meta.dataset;\r\n                        source = null;\r\n\r\n                        if (el && el._model && el instanceof elements.Line) {\r\n                            source = {\r\n                                visible: chart.isDatasetVisible(i),\r\n                                fill: decodeFill(el, i, count),\r\n                                chart: chart,\r\n                                el: el\r\n                            };\r\n                        }\r\n\r\n                        meta.$filler = source;\r\n                        sources.push(source);\r\n                    }\r\n\r\n                    for (i = 0; i < count; ++i) {\r\n                        source = sources[i];\r\n                        if (!source) {\r\n                            continue;\r\n                        }\r\n\r\n                        source.fill = resolveTarget(sources, i, propagate);\r\n                        source.boundary = computeBoundary(source);\r\n                        source.mapper = createMapper(source);\r\n                    }\r\n                },\r\n\r\n                beforeDatasetDraw: function(chart, args) {\r\n                    var meta = args.meta.$filler;\r\n                    if (!meta) {\r\n                        return;\r\n                    }\r\n\r\n                    var ctx = chart.ctx;\r\n                    var el = meta.el;\r\n                    var view = el._view;\r\n                    var points = el._children || [];\r\n                    var mapper = meta.mapper;\r\n                    var color = view.backgroundColor || defaults.global.defaultColor;\r\n\r\n                    if (mapper && color && points.length) {\r\n                        helpers.canvas.clipArea(ctx, chart.chartArea);\r\n                        doFill(ctx, points, mapper, view, color, el._loop);\r\n                        helpers.canvas.unclipArea(ctx);\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 42: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            var noop = helpers.noop;\r\n\r\n            defaults._set('global', {\r\n                legend: {\r\n                    display: true,\r\n                    position: 'top',\r\n                    fullWidth: true,\r\n                    reverse: false,\r\n                    weight: 1000,\r\n\r\n                    // a callback that will handle\r\n                    onClick: function(e, legendItem) {\r\n                        var index = legendItem.datasetIndex;\r\n                        var ci = this.chart;\r\n                        var meta = ci.getDatasetMeta(index);\r\n\r\n                        // See controller.isDatasetVisible comment\r\n                        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\r\n\r\n                        // We hid a dataset ... rerender the chart\r\n                        ci.update();\r\n                    },\r\n\r\n                    onHover: null,\r\n\r\n                    labels: {\r\n                        boxWidth: 40,\r\n                        padding: 10,\r\n                        // Generates labels shown in the legend\r\n                        // Valid properties to return:\r\n                        // text : text to display\r\n                        // fillStyle : fill of coloured box\r\n                        // strokeStyle: stroke of coloured box\r\n                        // hidden : if this legend item refers to a hidden item\r\n                        // lineCap : cap style for line\r\n                        // lineDash\r\n                        // lineDashOffset :\r\n                        // lineJoin :\r\n                        // lineWidth :\r\n                        generateLabels: function(chart) {\r\n                            var data = chart.data;\r\n                            return helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\r\n                                return {\r\n                                    text: dataset.label,\r\n                                    fillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\r\n                                    hidden: !chart.isDatasetVisible(i),\r\n                                    lineCap: dataset.borderCapStyle,\r\n                                    lineDash: dataset.borderDash,\r\n                                    lineDashOffset: dataset.borderDashOffset,\r\n                                    lineJoin: dataset.borderJoinStyle,\r\n                                    lineWidth: dataset.borderWidth,\r\n                                    strokeStyle: dataset.borderColor,\r\n                                    pointStyle: dataset.pointStyle,\r\n\r\n                                    // Below is extra data used for toggling the datasets\r\n                                    datasetIndex: i\r\n                                };\r\n                            }, this) : [];\r\n                        }\r\n                    }\r\n                },\r\n\r\n                legendCallback: function(chart) {\r\n                    var text = [];\r\n                    text.push('<ul class=\"' + chart.id + '-legend\">');\r\n                    for (var i = 0; i < chart.data.datasets.length; i++) {\r\n                        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\r\n                        if (chart.data.datasets[i].label) {\r\n                            text.push(chart.data.datasets[i].label);\r\n                        }\r\n                        text.push('</li>');\r\n                    }\r\n                    text.push('</ul>');\r\n                    return text.join('');\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Helper function to get the box width based on the usePointStyle option\r\n             * @param labelopts {Object} the label options on the legend\r\n             * @param fontSize {Number} the label font size\r\n             * @return {Number} width of the color box area\r\n             */\r\n            function getBoxWidth(labelOpts, fontSize) {\r\n                return labelOpts.usePointStyle ?\r\n                    fontSize * Math.SQRT2 :\r\n                    labelOpts.boxWidth;\r\n            }\r\n\r\n            /**\r\n             * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\r\n             */\r\n            var Legend = Element.extend({\r\n                initialize: function(config) {\r\n                    helpers.extend(this, config);\r\n\r\n                    // Contains hit boxes for each dataset (in dataset order)\r\n                    this.legendHitBoxes = [];\r\n\r\n                    // Are we in doughnut mode which has a different data type\r\n                    this.doughnutMode = false;\r\n                },\r\n\r\n                // These methods are ordered by lifecycle. Utilities then follow.\r\n                // Any function defined here is inherited by all legend types.\r\n                // Any function can be extended by the legend type\r\n\r\n                beforeUpdate: noop,\r\n                update: function(maxWidth, maxHeight, margins) {\r\n                    var me = this;\r\n\r\n                    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                    me.beforeUpdate();\r\n\r\n                    // Absorb the master measurements\r\n                    me.maxWidth = maxWidth;\r\n                    me.maxHeight = maxHeight;\r\n                    me.margins = margins;\r\n\r\n                    // Dimensions\r\n                    me.beforeSetDimensions();\r\n                    me.setDimensions();\r\n                    me.afterSetDimensions();\r\n                    // Labels\r\n                    me.beforeBuildLabels();\r\n                    me.buildLabels();\r\n                    me.afterBuildLabels();\r\n\r\n                    // Fit\r\n                    me.beforeFit();\r\n                    me.fit();\r\n                    me.afterFit();\r\n                    //\r\n                    me.afterUpdate();\r\n\r\n                    return me.minSize;\r\n                },\r\n                afterUpdate: noop,\r\n\r\n                //\r\n\r\n                beforeSetDimensions: noop,\r\n                setDimensions: function() {\r\n                    var me = this;\r\n                    // Set the unconstrained dimension before label rotation\r\n                    if (me.isHorizontal()) {\r\n                        // Reset position before calculating rotation\r\n                        me.width = me.maxWidth;\r\n                        me.left = 0;\r\n                        me.right = me.width;\r\n                    } else {\r\n                        me.height = me.maxHeight;\r\n\r\n                        // Reset position before calculating rotation\r\n                        me.top = 0;\r\n                        me.bottom = me.height;\r\n                    }\r\n\r\n                    // Reset padding\r\n                    me.paddingLeft = 0;\r\n                    me.paddingTop = 0;\r\n                    me.paddingRight = 0;\r\n                    me.paddingBottom = 0;\r\n\r\n                    // Reset minSize\r\n                    me.minSize = {\r\n                        width: 0,\r\n                        height: 0\r\n                    };\r\n                },\r\n                afterSetDimensions: noop,\r\n\r\n                //\r\n\r\n                beforeBuildLabels: noop,\r\n                buildLabels: function() {\r\n                    var me = this;\r\n                    var labelOpts = me.options.labels || {};\r\n                    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\r\n\r\n                    if (labelOpts.filter) {\r\n                        legendItems = legendItems.filter(function(item) {\r\n                            return labelOpts.filter(item, me.chart.data);\r\n                        });\r\n                    }\r\n\r\n                    if (me.options.reverse) {\r\n                        legendItems.reverse();\r\n                    }\r\n\r\n                    me.legendItems = legendItems;\r\n                },\r\n                afterBuildLabels: noop,\r\n\r\n                //\r\n\r\n                beforeFit: noop,\r\n                fit: function() {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var labelOpts = opts.labels;\r\n                    var display = opts.display;\r\n\r\n                    var ctx = me.ctx;\r\n\r\n                    var globalDefault = defaults.global;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\r\n                    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\r\n                    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\r\n                    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n                    // Reset hit boxes\r\n                    var hitboxes = me.legendHitBoxes = [];\r\n\r\n                    var minSize = me.minSize;\r\n                    var isHorizontal = me.isHorizontal();\r\n\r\n                    if (isHorizontal) {\r\n                        minSize.width = me.maxWidth; // fill all the width\r\n                        minSize.height = display ? 10 : 0;\r\n                    } else {\r\n                        minSize.width = display ? 10 : 0;\r\n                        minSize.height = me.maxHeight; // fill all the height\r\n                    }\r\n\r\n                    // Increase sizes here\r\n                    if (display) {\r\n                        ctx.font = labelFont;\r\n\r\n                        if (isHorizontal) {\r\n                            // Labels\r\n\r\n                            // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\r\n                            var lineWidths = me.lineWidths = [0];\r\n                            var totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\r\n\r\n                            ctx.textAlign = 'left';\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            helpers.each(me.legendItems, function(legendItem, i) {\r\n                                var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                                var width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n                                if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\r\n                                    totalHeight += fontSize + (labelOpts.padding);\r\n                                    lineWidths[lineWidths.length] = me.left;\r\n                                }\r\n\r\n                                // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                                hitboxes[i] = {\r\n                                    left: 0,\r\n                                    top: 0,\r\n                                    width: width,\r\n                                    height: fontSize\r\n                                };\r\n\r\n                                lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\r\n                            });\r\n\r\n                            minSize.height += totalHeight;\r\n                        } else {\r\n                            var vPadding = labelOpts.padding;\r\n                            var columnWidths = me.columnWidths = [];\r\n                            var totalWidth = labelOpts.padding;\r\n                            var currentColWidth = 0;\r\n                            var currentColHeight = 0;\r\n                            var itemHeight = fontSize + vPadding;\r\n\r\n                            helpers.each(me.legendItems, function(legendItem, i) {\r\n                                var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                                var itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n                                // If too tall, go to new column\r\n                                if (currentColHeight + itemHeight > minSize.height) {\r\n                                    totalWidth += currentColWidth + labelOpts.padding;\r\n                                    columnWidths.push(currentColWidth); // previous column width\r\n\r\n                                    currentColWidth = 0;\r\n                                    currentColHeight = 0;\r\n                                }\r\n\r\n                                // Get max width\r\n                                currentColWidth = Math.max(currentColWidth, itemWidth);\r\n                                currentColHeight += itemHeight;\r\n\r\n                                // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                                hitboxes[i] = {\r\n                                    left: 0,\r\n                                    top: 0,\r\n                                    width: itemWidth,\r\n                                    height: fontSize\r\n                                };\r\n                            });\r\n\r\n                            totalWidth += currentColWidth;\r\n                            columnWidths.push(currentColWidth);\r\n                            minSize.width += totalWidth;\r\n                        }\r\n                    }\r\n\r\n                    me.width = minSize.width;\r\n                    me.height = minSize.height;\r\n                },\r\n                afterFit: noop,\r\n\r\n                // Shared Methods\r\n                isHorizontal: function() {\r\n                    return this.options.position === 'top' || this.options.position === 'bottom';\r\n                },\r\n\r\n                // Actually draw the legend on the canvas\r\n                draw: function() {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var labelOpts = opts.labels;\r\n                    var globalDefault = defaults.global;\r\n                    var lineDefault = globalDefault.elements.line;\r\n                    var legendWidth = me.width;\r\n                    var lineWidths = me.lineWidths;\r\n\r\n                    if (opts.display) {\r\n                        var ctx = me.ctx;\r\n                        var valueOrDefault = helpers.valueOrDefault;\r\n                        var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\r\n                        var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\r\n                        var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\r\n                        var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\r\n                        var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n                        var cursor;\r\n\r\n                        // Canvas setup\r\n                        ctx.textAlign = 'left';\r\n                        ctx.textBaseline = 'middle';\r\n                        ctx.lineWidth = 0.5;\r\n                        ctx.strokeStyle = fontColor; // for strikethrough effect\r\n                        ctx.fillStyle = fontColor; // render in correct colour\r\n                        ctx.font = labelFont;\r\n\r\n                        var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                        var hitboxes = me.legendHitBoxes;\r\n\r\n                        // current position\r\n                        var drawLegendBox = function(x, y, legendItem) {\r\n                            if (isNaN(boxWidth) || boxWidth <= 0) {\r\n                                return;\r\n                            }\r\n\r\n                            // Set the ctx for the box\r\n                            ctx.save();\r\n\r\n                            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\r\n                            ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\r\n                            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\r\n                            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\r\n                            ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\r\n                            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\r\n                            var isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\r\n\r\n                            if (ctx.setLineDash) {\r\n                                // IE 9 and 10 do not support line dash\r\n                                ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\r\n                            }\r\n\r\n                            if (opts.labels && opts.labels.usePointStyle) {\r\n                                // Recalculate x and y for drawPoint() because its expecting\r\n                                // x and y to be center of figure (instead of top left)\r\n                                var radius = fontSize * Math.SQRT2 / 2;\r\n                                var offSet = radius / Math.SQRT2;\r\n                                var centerX = x + offSet;\r\n                                var centerY = y + offSet;\r\n\r\n                                // Draw pointStyle as legend symbol\r\n                                helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\r\n                            } else {\r\n                                // Draw box as legend symbol\r\n                                if (!isLineWidthZero) {\r\n                                    ctx.strokeRect(x, y, boxWidth, fontSize);\r\n                                }\r\n                                ctx.fillRect(x, y, boxWidth, fontSize);\r\n                            }\r\n\r\n                            ctx.restore();\r\n                        };\r\n                        var fillText = function(x, y, legendItem, textWidth) {\r\n                            var halfFontSize = fontSize / 2;\r\n                            var xLeft = boxWidth + halfFontSize + x;\r\n                            var yMiddle = y + halfFontSize;\r\n\r\n                            ctx.fillText(legendItem.text, xLeft, yMiddle);\r\n\r\n                            if (legendItem.hidden) {\r\n                                // Strikethrough the text if hidden\r\n                                ctx.beginPath();\r\n                                ctx.lineWidth = 2;\r\n                                ctx.moveTo(xLeft, yMiddle);\r\n                                ctx.lineTo(xLeft + textWidth, yMiddle);\r\n                                ctx.stroke();\r\n                            }\r\n                        };\r\n\r\n                        // Horizontal\r\n                        var isHorizontal = me.isHorizontal();\r\n                        if (isHorizontal) {\r\n                            cursor = {\r\n                                x: me.left + ((legendWidth - lineWidths[0]) / 2),\r\n                                y: me.top + labelOpts.padding,\r\n                                line: 0\r\n                            };\r\n                        } else {\r\n                            cursor = {\r\n                                x: me.left + labelOpts.padding,\r\n                                y: me.top + labelOpts.padding,\r\n                                line: 0\r\n                            };\r\n                        }\r\n\r\n                        var itemHeight = fontSize + labelOpts.padding;\r\n                        helpers.each(me.legendItems, function(legendItem, i) {\r\n                            var textWidth = ctx.measureText(legendItem.text).width;\r\n                            var width = boxWidth + (fontSize / 2) + textWidth;\r\n                            var x = cursor.x;\r\n                            var y = cursor.y;\r\n\r\n                            if (isHorizontal) {\r\n                                if (x + width >= legendWidth) {\r\n                                    y = cursor.y += itemHeight;\r\n                                    cursor.line++;\r\n                                    x = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\r\n                                }\r\n                            } else if (y + itemHeight > me.bottom) {\r\n                                x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\r\n                                y = cursor.y = me.top + labelOpts.padding;\r\n                                cursor.line++;\r\n                            }\r\n\r\n                            drawLegendBox(x, y, legendItem);\r\n\r\n                            hitboxes[i].left = x;\r\n                            hitboxes[i].top = y;\r\n\r\n                            // Fill the actual label\r\n                            fillText(x, y, legendItem, textWidth);\r\n\r\n                            if (isHorizontal) {\r\n                                cursor.x += width + (labelOpts.padding);\r\n                            } else {\r\n                                cursor.y += itemHeight;\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Handle an event\r\n                 * @private\r\n                 * @param {IEvent} event - The event to handle\r\n                 * @return {Boolean} true if a change occured\r\n                 */\r\n                handleEvent: function(e) {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var type = e.type === 'mouseup' ? 'click' : e.type;\r\n                    var changed = false;\r\n\r\n                    if (type === 'mousemove') {\r\n                        if (!opts.onHover) {\r\n                            return;\r\n                        }\r\n                    } else if (type === 'click') {\r\n                        if (!opts.onClick) {\r\n                            return;\r\n                        }\r\n                    } else {\r\n                        return;\r\n                    }\r\n\r\n                    // Chart event already has relative position in it\r\n                    var x = e.x;\r\n                    var y = e.y;\r\n\r\n                    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\r\n                        // See if we are touching one of the dataset boxes\r\n                        var lh = me.legendHitBoxes;\r\n                        for (var i = 0; i < lh.length; ++i) {\r\n                            var hitBox = lh[i];\r\n\r\n                            if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n                                // Touching an element\r\n                                if (type === 'click') {\r\n                                    // use e.native for backwards compatibility\r\n                                    opts.onClick.call(me, e.native, me.legendItems[i]);\r\n                                    changed = true;\r\n                                    break;\r\n                                } else if (type === 'mousemove') {\r\n                                    // use e.native for backwards compatibility\r\n                                    opts.onHover.call(me, e.native, me.legendItems[i]);\r\n                                    changed = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return changed;\r\n                }\r\n            });\r\n\r\n            function createNewLegendAndAttach(chart, legendOpts) {\r\n                var legend = new Legend({\r\n                    ctx: chart.ctx,\r\n                    options: legendOpts,\r\n                    chart: chart\r\n                });\r\n\r\n                layouts.configure(chart, legend, legendOpts);\r\n                layouts.addBox(chart, legend);\r\n                chart.legend = legend;\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'legend',\r\n\r\n                /**\r\n                 * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\r\n                 * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\r\n                 * the plugin, which one will be re-exposed in the chart.js file.\r\n                 * https://github.com/chartjs/Chart.js/pull/2640\r\n                 * @private\r\n                 */\r\n                _element: Legend,\r\n\r\n                beforeInit: function(chart) {\r\n                    var legendOpts = chart.options.legend;\r\n\r\n                    if (legendOpts) {\r\n                        createNewLegendAndAttach(chart, legendOpts);\r\n                    }\r\n                },\r\n\r\n                beforeUpdate: function(chart) {\r\n                    var legendOpts = chart.options.legend;\r\n                    var legend = chart.legend;\r\n\r\n                    if (legendOpts) {\r\n                        helpers.mergeIf(legendOpts, defaults.global.legend);\r\n\r\n                        if (legend) {\r\n                            layouts.configure(chart, legend, legendOpts);\r\n                            legend.options = legendOpts;\r\n                        } else {\r\n                            createNewLegendAndAttach(chart, legendOpts);\r\n                        }\r\n                    } else if (legend) {\r\n                        layouts.removeBox(chart, legend);\r\n                        delete chart.legend;\r\n                    }\r\n                },\r\n\r\n                afterEvent: function(chart, e) {\r\n                    var legend = chart.legend;\r\n                    if (legend) {\r\n                        legend.handleEvent(e);\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"21\": 21, \"36\": 36 }], 43: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            var noop = helpers.noop;\r\n\r\n            defaults._set('global', {\r\n                title: {\r\n                    display: false,\r\n                    fontStyle: 'bold',\r\n                    fullWidth: true,\r\n                    lineHeight: 1.2,\r\n                    padding: 10,\r\n                    position: 'top',\r\n                    text: '',\r\n                    weight: 2000         // by default greater than legend (1000) to be above\r\n                }\r\n            });\r\n\r\n            /**\r\n             * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\r\n             */\r\n            var Title = Element.extend({\r\n                initialize: function(config) {\r\n                    var me = this;\r\n                    helpers.extend(me, config);\r\n\r\n                    // Contains hit boxes for each dataset (in dataset order)\r\n                    me.legendHitBoxes = [];\r\n                },\r\n\r\n                // These methods are ordered by lifecycle. Utilities then follow.\r\n\r\n                beforeUpdate: noop,\r\n                update: function(maxWidth, maxHeight, margins) {\r\n                    var me = this;\r\n\r\n                    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                    me.beforeUpdate();\r\n\r\n                    // Absorb the master measurements\r\n                    me.maxWidth = maxWidth;\r\n                    me.maxHeight = maxHeight;\r\n                    me.margins = margins;\r\n\r\n                    // Dimensions\r\n                    me.beforeSetDimensions();\r\n                    me.setDimensions();\r\n                    me.afterSetDimensions();\r\n                    // Labels\r\n                    me.beforeBuildLabels();\r\n                    me.buildLabels();\r\n                    me.afterBuildLabels();\r\n\r\n                    // Fit\r\n                    me.beforeFit();\r\n                    me.fit();\r\n                    me.afterFit();\r\n                    //\r\n                    me.afterUpdate();\r\n\r\n                    return me.minSize;\r\n                },\r\n                afterUpdate: noop,\r\n\r\n                //\r\n\r\n                beforeSetDimensions: noop,\r\n                setDimensions: function() {\r\n                    var me = this;\r\n                    // Set the unconstrained dimension before label rotation\r\n                    if (me.isHorizontal()) {\r\n                        // Reset position before calculating rotation\r\n                        me.width = me.maxWidth;\r\n                        me.left = 0;\r\n                        me.right = me.width;\r\n                    } else {\r\n                        me.height = me.maxHeight;\r\n\r\n                        // Reset position before calculating rotation\r\n                        me.top = 0;\r\n                        me.bottom = me.height;\r\n                    }\r\n\r\n                    // Reset padding\r\n                    me.paddingLeft = 0;\r\n                    me.paddingTop = 0;\r\n                    me.paddingRight = 0;\r\n                    me.paddingBottom = 0;\r\n\r\n                    // Reset minSize\r\n                    me.minSize = {\r\n                        width: 0,\r\n                        height: 0\r\n                    };\r\n                },\r\n                afterSetDimensions: noop,\r\n\r\n                //\r\n\r\n                beforeBuildLabels: noop,\r\n                buildLabels: noop,\r\n                afterBuildLabels: noop,\r\n\r\n                //\r\n\r\n                beforeFit: noop,\r\n                fit: function() {\r\n                    var me = this;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var opts = me.options;\r\n                    var display = opts.display;\r\n                    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\r\n                    var minSize = me.minSize;\r\n                    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\r\n                    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\r\n                    var textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\r\n\r\n                    if (me.isHorizontal()) {\r\n                        minSize.width = me.maxWidth; // fill all the width\r\n                        minSize.height = textSize;\r\n                    } else {\r\n                        minSize.width = textSize;\r\n                        minSize.height = me.maxHeight; // fill all the height\r\n                    }\r\n\r\n                    me.width = minSize.width;\r\n                    me.height = minSize.height;\r\n                },\r\n                afterFit: noop,\r\n\r\n                // Shared Methods\r\n                isHorizontal: function() {\r\n                    var pos = this.options.position;\r\n                    return pos === 'top' || pos === 'bottom';\r\n                },\r\n\r\n                // Actually draw the title block on the canvas\r\n                draw: function() {\r\n                    var me = this;\r\n                    var ctx = me.ctx;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var opts = me.options;\r\n                    var globalDefaults = defaults.global;\r\n\r\n                    if (opts.display) {\r\n                        var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\r\n                        var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\r\n                        var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\r\n                        var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n                        var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\r\n                        var offset = lineHeight / 2 + opts.padding;\r\n                        var rotation = 0;\r\n                        var top = me.top;\r\n                        var left = me.left;\r\n                        var bottom = me.bottom;\r\n                        var right = me.right;\r\n                        var maxWidth, titleX, titleY;\r\n\r\n                        ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\r\n                        ctx.font = titleFont;\r\n\r\n                        // Horizontal\r\n                        if (me.isHorizontal()) {\r\n                            titleX = left + ((right - left) / 2); // midpoint of the width\r\n                            titleY = top + offset;\r\n                            maxWidth = right - left;\r\n                        } else {\r\n                            titleX = opts.position === 'left' ? left + offset : right - offset;\r\n                            titleY = top + ((bottom - top) / 2);\r\n                            maxWidth = bottom - top;\r\n                            rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\r\n                        }\r\n\r\n                        ctx.save();\r\n                        ctx.translate(titleX, titleY);\r\n                        ctx.rotate(rotation);\r\n                        ctx.textAlign = 'center';\r\n                        ctx.textBaseline = 'middle';\r\n\r\n                        var text = opts.text;\r\n                        if (helpers.isArray(text)) {\r\n                            var y = 0;\r\n                            for (var i = 0; i < text.length; ++i) {\r\n                                ctx.fillText(text[i], 0, y, maxWidth);\r\n                                y += lineHeight;\r\n                            }\r\n                        } else {\r\n                            ctx.fillText(text, 0, 0, maxWidth);\r\n                        }\r\n\r\n                        ctx.restore();\r\n                    }\r\n                }\r\n            });\r\n\r\n            function createNewTitleBlockAndAttach(chart, titleOpts) {\r\n                var title = new Title({\r\n                    ctx: chart.ctx,\r\n                    options: titleOpts,\r\n                    chart: chart\r\n                });\r\n\r\n                layouts.configure(chart, title, titleOpts);\r\n                layouts.addBox(chart, title);\r\n                chart.titleBlock = title;\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'title',\r\n\r\n                /**\r\n                 * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\r\n                 * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\r\n                 * the plugin, which one will be re-exposed in the chart.js file.\r\n                 * https://github.com/chartjs/Chart.js/pull/2640\r\n                 * @private\r\n                 */\r\n                _element: Title,\r\n\r\n                beforeInit: function(chart) {\r\n                    var titleOpts = chart.options.title;\r\n\r\n                    if (titleOpts) {\r\n                        createNewTitleBlockAndAttach(chart, titleOpts);\r\n                    }\r\n                },\r\n\r\n                beforeUpdate: function(chart) {\r\n                    var titleOpts = chart.options.title;\r\n                    var titleBlock = chart.titleBlock;\r\n\r\n                    if (titleOpts) {\r\n                        helpers.mergeIf(titleOpts, defaults.global.title);\r\n\r\n                        if (titleBlock) {\r\n                            layouts.configure(chart, titleBlock, titleOpts);\r\n                            titleBlock.options = titleOpts;\r\n                        } else {\r\n                            createNewTitleBlockAndAttach(chart, titleOpts);\r\n                        }\r\n                    } else if (titleBlock) {\r\n                        layouts.removeBox(chart, titleBlock);\r\n                        delete chart.titleBlock;\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"21\": 21, \"36\": 36 }], 44: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                // Default config for a category scale\r\n                var defaultConfig = {\r\n                    position: 'bottom'\r\n                };\r\n\r\n                var DatasetScale = Chart.Scale.extend({\r\n                    /**\r\n                    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\r\n                    * else fall back to data.labels\r\n                    * @private\r\n                    */\r\n                    getLabels: function() {\r\n                        var data = this.chart.data;\r\n                        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\r\n                    },\r\n\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var labels = me.getLabels();\r\n                        me.minIndex = 0;\r\n                        me.maxIndex = labels.length - 1;\r\n                        var findIndex;\r\n\r\n                        if (me.options.ticks.min !== undefined) {\r\n                            // user specified min value\r\n                            findIndex = labels.indexOf(me.options.ticks.min);\r\n                            me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\r\n                        }\r\n\r\n                        if (me.options.ticks.max !== undefined) {\r\n                            // user specified max value\r\n                            findIndex = labels.indexOf(me.options.ticks.max);\r\n                            me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\r\n                        }\r\n\r\n                        me.min = labels[me.minIndex];\r\n                        me.max = labels[me.maxIndex];\r\n                    },\r\n\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var labels = me.getLabels();\r\n                        // If we are viewing some subset of labels, slice the original array\r\n                        me.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\r\n                    },\r\n\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        var me = this;\r\n                        var data = me.chart.data;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        if (data.yLabels && !isHorizontal) {\r\n                            return me.getRightValue(data.datasets[datasetIndex].data[index]);\r\n                        }\r\n                        return me.ticks[index - me.minIndex];\r\n                    },\r\n\r\n                    // Used to get data value locations.  Value can either be an index or a numerical value\r\n                    getPixelForValue: function(value, index) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        // 1 is added because we need the length but we have the indexes\r\n                        var offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\r\n\r\n                        // If value is a data object, then index is the index in the data array,\r\n                        // not the index of the scale. We need to change that.\r\n                        var valueCategory;\r\n                        if (value !== undefined && value !== null) {\r\n                            valueCategory = me.isHorizontal() ? value.x : value.y;\r\n                        }\r\n                        if (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\r\n                            var labels = me.getLabels();\r\n                            value = valueCategory || value;\r\n                            var idx = labels.indexOf(value);\r\n                            index = idx !== -1 ? idx : index;\r\n                        }\r\n\r\n                        if (me.isHorizontal()) {\r\n                            var valueWidth = me.width / offsetAmt;\r\n                            var widthOffset = (valueWidth * (index - me.minIndex));\r\n\r\n                            if (offset) {\r\n                                widthOffset += (valueWidth / 2);\r\n                            }\r\n\r\n                            return me.left + Math.round(widthOffset);\r\n                        }\r\n                        var valueHeight = me.height / offsetAmt;\r\n                        var heightOffset = (valueHeight * (index - me.minIndex));\r\n\r\n                        if (offset) {\r\n                            heightOffset += (valueHeight / 2);\r\n                        }\r\n\r\n                        return me.top + Math.round(heightOffset);\r\n                    },\r\n                    getPixelForTick: function(index) {\r\n                        return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        var value;\r\n                        var offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\r\n                        var horz = me.isHorizontal();\r\n                        var valueDimension = (horz ? me.width : me.height) / offsetAmt;\r\n\r\n                        pixel -= horz ? me.left : me.top;\r\n\r\n                        if (offset) {\r\n                            pixel -= (valueDimension / 2);\r\n                        }\r\n\r\n                        if (pixel <= 0) {\r\n                            value = 0;\r\n                        } else {\r\n                            value = Math.round(pixel / valueDimension);\r\n                        }\r\n\r\n                        return value + me.minIndex;\r\n                    },\r\n                    getBasePixel: function() {\r\n                        return this.bottom;\r\n                    }\r\n                });\r\n\r\n                Chart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\r\n            };\r\n        }, {}], 45: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var Ticks = require(25);\r\n\r\n            module.exports = function(Chart) {\r\n                var defaultConfig = {\r\n                    position: 'left',\r\n                    ticks: {\r\n                        callback: Ticks.formatters.linear\r\n                    }\r\n                };\r\n\r\n                var LinearScale = Chart.LinearScaleBase.extend({\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var chart = me.chart;\r\n                        var data = chart.data;\r\n                        var datasets = data.datasets;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var DEFAULT_MIN = 0;\r\n                        var DEFAULT_MAX = 1;\r\n\r\n                        function IDMatches(meta) {\r\n                            return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\r\n                        }\r\n\r\n                        // First Calculate the range\r\n                        me.min = null;\r\n                        me.max = null;\r\n\r\n                        var hasStacks = opts.stacked;\r\n                        if (hasStacks === undefined) {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                if (hasStacks) {\r\n                                    return;\r\n                                }\r\n\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\r\n                                    meta.stack !== undefined) {\r\n                                    hasStacks = true;\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        if (opts.stacked || hasStacks) {\r\n                            var valuesPerStack = {};\r\n\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                var key = [\r\n                                    meta.type,\r\n                                    // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\r\n                                    ((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\r\n                                    meta.stack\r\n                                ].join('.');\r\n\r\n                                if (valuesPerStack[key] === undefined) {\r\n                                    valuesPerStack[key] = {\r\n                                        positiveValues: [],\r\n                                        negativeValues: []\r\n                                    };\r\n                                }\r\n\r\n                                // Store these per type\r\n                                var positiveValues = valuesPerStack[key].positiveValues;\r\n                                var negativeValues = valuesPerStack[key].negativeValues;\r\n\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        positiveValues[index] = positiveValues[index] || 0;\r\n                                        negativeValues[index] = negativeValues[index] || 0;\r\n\r\n                                        if (opts.relativePoints) {\r\n                                            positiveValues[index] = 100;\r\n                                        } else if (value < 0) {\r\n                                            negativeValues[index] += value;\r\n                                        } else {\r\n                                            positiveValues[index] += value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n\r\n                            helpers.each(valuesPerStack, function(valuesForType) {\r\n                                var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\r\n                                var minVal = helpers.min(values);\r\n                                var maxVal = helpers.max(values);\r\n                                me.min = me.min === null ? minVal : Math.min(me.min, minVal);\r\n                                me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\r\n                            });\r\n                        } else {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        if (me.min === null) {\r\n                                            me.min = value;\r\n                                        } else if (value < me.min) {\r\n                                            me.min = value;\r\n                                        }\r\n\r\n                                        if (me.max === null) {\r\n                                            me.max = value;\r\n                                        } else if (value > me.max) {\r\n                                            me.max = value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\r\n                        me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\r\n\r\n                        // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\r\n                        this.handleTickRangeOptions();\r\n                    },\r\n                    getTickLimit: function() {\r\n                        var maxTicks;\r\n                        var me = this;\r\n                        var tickOpts = me.options.ticks;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\r\n                        } else {\r\n                            // The factor of 2 used to scale the font size has been experimentally determined.\r\n                            var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\r\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\r\n                        }\r\n\r\n                        return maxTicks;\r\n                    },\r\n                    // Called after the ticks are built. We need\r\n                    handleDirectionalChanges: function() {\r\n                        if (!this.isHorizontal()) {\r\n                            // We are in a vertical orientation. The top value is the highest. So reverse the array\r\n                            this.ticks.reverse();\r\n                        }\r\n                    },\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n                    },\r\n                    // Utils\r\n                    getPixelForValue: function(value) {\r\n                        // This must be called after fit has been run so that\r\n                        // this.left, this.top, this.right, and this.bottom have been defined\r\n                        var me = this;\r\n                        var start = me.start;\r\n\r\n                        var rightValue = +me.getRightValue(value);\r\n                        var pixel;\r\n                        var range = me.end - start;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            pixel = me.left + (me.width / range * (rightValue - start));\r\n                        } else {\r\n                            pixel = me.bottom - (me.height / range * (rightValue - start));\r\n                        }\r\n                        return pixel;\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var innerDimension = isHorizontal ? me.width : me.height;\r\n                        var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\r\n                        return me.start + ((me.end - me.start) * offset);\r\n                    },\r\n                    getPixelForTick: function(index) {\r\n                        return this.getPixelForValue(this.ticksAsNumbers[index]);\r\n                    }\r\n                });\r\n                Chart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\r\n            };\r\n        }, { \"16\": 16, \"25\": 25, \"36\": 36 }], 46: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Generate a set of linear ticks\r\n             * @param generationOptions the options used to generate the ticks\r\n             * @param dataRange the range of the data\r\n             * @returns {Array<Number>} array of tick values\r\n             */\r\n            function generateTicks(generationOptions, dataRange) {\r\n                var ticks = [];\r\n                // To get a \"nice\" value for the tick spacing, we will use the appropriately named\r\n                // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\r\n                // for details.\r\n\r\n                var spacing;\r\n                if (generationOptions.stepSize && generationOptions.stepSize > 0) {\r\n                    spacing = generationOptions.stepSize;\r\n                } else {\r\n                    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\r\n                    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\r\n                }\r\n                var niceMin = Math.floor(dataRange.min / spacing) * spacing;\r\n                var niceMax = Math.ceil(dataRange.max / spacing) * spacing;\r\n\r\n                // If min, max and stepSize is set and they make an evenly spaced scale use it.\r\n                if (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\r\n                    // If very close to our whole number, use it.\r\n                    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\r\n                        niceMin = generationOptions.min;\r\n                        niceMax = generationOptions.max;\r\n                    }\r\n                }\r\n\r\n                var numSpaces = (niceMax - niceMin) / spacing;\r\n                // If very close to our rounded value, use it.\r\n                if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n                    numSpaces = Math.round(numSpaces);\r\n                } else {\r\n                    numSpaces = Math.ceil(numSpaces);\r\n                }\r\n\r\n                var precision = 1;\r\n                if (spacing < 1) {\r\n                    precision = Math.pow(10, spacing.toString().length - 2);\r\n                    niceMin = Math.round(niceMin * precision) / precision;\r\n                    niceMax = Math.round(niceMax * precision) / precision;\r\n                }\r\n                ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\r\n                for (var j = 1; j < numSpaces; ++j) {\r\n                    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\r\n                }\r\n                ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\r\n\r\n                return ticks;\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                var noop = helpers.noop;\r\n\r\n                Chart.LinearScaleBase = Chart.Scale.extend({\r\n                    getRightValue: function(value) {\r\n                        if (typeof value === 'string') {\r\n                            return +value;\r\n                        }\r\n                        return Chart.Scale.prototype.getRightValue.call(this, value);\r\n                    },\r\n\r\n                    handleTickRangeOptions: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\r\n                        // do nothing since that would make the chart weird. If the user really wants a weird chart\r\n                        // axis, they can manually override it\r\n                        if (tickOpts.beginAtZero) {\r\n                            var minSign = helpers.sign(me.min);\r\n                            var maxSign = helpers.sign(me.max);\r\n\r\n                            if (minSign < 0 && maxSign < 0) {\r\n                                // move the top up to 0\r\n                                me.max = 0;\r\n                            } else if (minSign > 0 && maxSign > 0) {\r\n                                // move the bottom down to 0\r\n                                me.min = 0;\r\n                            }\r\n                        }\r\n\r\n                        var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\r\n                        var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\r\n\r\n                        if (tickOpts.min !== undefined) {\r\n                            me.min = tickOpts.min;\r\n                        } else if (tickOpts.suggestedMin !== undefined) {\r\n                            if (me.min === null) {\r\n                                me.min = tickOpts.suggestedMin;\r\n                            } else {\r\n                                me.min = Math.min(me.min, tickOpts.suggestedMin);\r\n                            }\r\n                        }\r\n\r\n                        if (tickOpts.max !== undefined) {\r\n                            me.max = tickOpts.max;\r\n                        } else if (tickOpts.suggestedMax !== undefined) {\r\n                            if (me.max === null) {\r\n                                me.max = tickOpts.suggestedMax;\r\n                            } else {\r\n                                me.max = Math.max(me.max, tickOpts.suggestedMax);\r\n                            }\r\n                        }\r\n\r\n                        if (setMin !== setMax) {\r\n                            // We set the min or the max but not both.\r\n                            // So ensure that our range is good\r\n                            // Inverted or 0 length range can happen when\r\n                            // ticks.min is set, and no datasets are visible\r\n                            if (me.min >= me.max) {\r\n                                if (setMin) {\r\n                                    me.max = me.min + 1;\r\n                                } else {\r\n                                    me.min = me.max - 1;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (me.min === me.max) {\r\n                            me.max++;\r\n\r\n                            if (!tickOpts.beginAtZero) {\r\n                                me.min--;\r\n                            }\r\n                        }\r\n                    },\r\n                    getTickLimit: noop,\r\n                    handleDirectionalChanges: noop,\r\n\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        // Figure out what the max number of ticks we can support it is based on the size of\r\n                        // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n                        // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n                        // the graph. Make sure we always have at least 2 ticks\r\n                        var maxTicks = me.getTickLimit();\r\n                        maxTicks = Math.max(2, maxTicks);\r\n\r\n                        var numericGeneratorOptions = {\r\n                            maxTicks: maxTicks,\r\n                            min: tickOpts.min,\r\n                            max: tickOpts.max,\r\n                            stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\r\n                        };\r\n                        var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\r\n\r\n                        me.handleDirectionalChanges();\r\n\r\n                        // At this point, we need to update our max and min given the tick values since we have expanded the\r\n                        // range of the scale\r\n                        me.max = helpers.max(ticks);\r\n                        me.min = helpers.min(ticks);\r\n\r\n                        if (tickOpts.reverse) {\r\n                            ticks.reverse();\r\n\r\n                            me.start = me.max;\r\n                            me.end = me.min;\r\n                        } else {\r\n                            me.start = me.min;\r\n                            me.end = me.max;\r\n                        }\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        me.ticksAsNumbers = me.ticks.slice();\r\n                        me.zeroLineIndex = me.ticks.indexOf(0);\r\n\r\n                        Chart.Scale.prototype.convertTicksToLabels.call(me);\r\n                    }\r\n                });\r\n            };\r\n        }, { \"36\": 36 }]\r\n    }, {}, [6])(6)\r\n});\r\n","/*!\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n * MIT license http://www.opensource.org/licenses/mit-license.php/\r\n * @author Lea Verou http://lea.verou.me\r\n */\r\n(function(root) {\r\n    // Private helper vars\r\n    var lang = /\\blang(?:uage)?-(?!\\*)(\\w+)\\b/i;\r\n\r\n    var _ = prism = {\r\n        util: {\r\n            encode: function(tokens) {\r\n                if (tokens instanceof Token) {\r\n                    return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\r\n                } else if (_.util.type(tokens) === 'Array') {\r\n                    return tokens.map(_.util.encode);\r\n                } else {\r\n                    return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\r\n                }\r\n            },\r\n\r\n            type: function(o) {\r\n                return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\r\n            },\r\n\r\n            // Deep clone a language definition (e.g. to extend it)\r\n            clone: function(o) {\r\n                var type = _.util.type(o);\r\n\r\n                switch (type) {\r\n                    case 'Object':\r\n                        var clone = {};\r\n\r\n                        for (var key in o) {\r\n                            if (o.hasOwnProperty(key)) {\r\n                                clone[key] = _.util.clone(o[key]);\r\n                            }\r\n                        }\r\n\r\n                        return clone;\r\n\r\n                    case 'Array':\r\n                        // Check for existence for IE8\r\n                        return o.map && o.map(function(v) { return _.util.clone(v); });\r\n                }\r\n\r\n                return o;\r\n            }\r\n        },\r\n\r\n        languages: {\r\n            extend: function(id, redef) {\r\n                var lang = _.util.clone(_.languages[id]);\r\n\r\n                for (var key in redef) {\r\n                    lang[key] = redef[key];\r\n                }\r\n\r\n                return lang;\r\n            },\r\n\r\n            /**\r\n             * Insert a token before another token in a language literal\r\n             * As this needs to recreate the object (we cannot actually insert before keys in object literals),\r\n             * we cannot just provide an object, we need anobject and a key.\r\n             * @param inside The key (or language id) of the parent\r\n             * @param before The key to insert before. If not provided, the function appends instead.\r\n             * @param insert Object with the key/value pairs to insert\r\n             * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\r\n             */\r\n            insertBefore: function(inside, before, insert, root) {\r\n                root = root || _.languages;\r\n                var grammar = root[inside];\r\n\r\n                if (arguments.length == 2) {\r\n                    insert = arguments[1];\r\n\r\n                    for (var newToken in insert) {\r\n                        if (insert.hasOwnProperty(newToken)) {\r\n                            grammar[newToken] = insert[newToken];\r\n                        }\r\n                    }\r\n\r\n                    return grammar;\r\n                }\r\n\r\n                var ret = {};\r\n\r\n                for (var token in grammar) {\r\n                    if (grammar.hasOwnProperty(token)) {\r\n                        if (token == before) {\r\n                            for (var newToken in insert) {\r\n                                if (insert.hasOwnProperty(newToken)) {\r\n                                    ret[newToken] = insert[newToken];\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        ret[token] = grammar[token];\r\n                    }\r\n                }\r\n\r\n                // Update references in other language definitions\r\n                _.languages.DFS(_.languages, function(key, value) {\r\n                    if (value === root[inside] && key != inside) {\r\n                        this[key] = ret;\r\n                    }\r\n                });\r\n\r\n                return root[inside] = ret;\r\n            },\r\n\r\n            // Traverse a language definition with Depth First Search\r\n            DFS: function(o, callback, type, visited) {\r\n                visited = visited || {};\r\n                for (var i in o) {\r\n                    if (o.hasOwnProperty(i)) {\r\n                        callback.call(o, i, o[i], type || i);\r\n\r\n                        if (_.util.type(o[i]) === 'Object' && !visited[o[i]]) {\r\n                            visited[o[i]] = true;\r\n                            _.languages.DFS(o[i], callback, null, visited);\r\n                        }\r\n                        else if (_.util.type(o[i]) === 'Array' && !visited[o[i]]) {\r\n                            visited[o[i]] = true;\r\n                            _.languages.DFS(o[i], callback, i, visited);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        plugins: {},\r\n\r\n        highlightAll: function(async, callback) {\r\n            var elements = document.querySelectorAll('code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code');\r\n\r\n            for (var i = 0, element; element = elements[i++];) {\r\n                _.highlightElement(element, async === true, callback);\r\n            }\r\n        },\r\n\r\n        highlightElement: function(element, async, callback) {\r\n            // Find language\r\n            var language, grammar, parent = element;\r\n\r\n            while (parent && !lang.test(parent.className)) {\r\n                parent = parent.parentNode;\r\n            }\r\n\r\n            if (parent) {\r\n                language = (parent.className.match(lang) || [, ''])[1];\r\n                grammar = _.languages[language];\r\n            }\r\n\r\n            // Set language on the element, if not present\r\n            element.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\r\n\r\n            // Set language on the parent, for styling\r\n            parent = element.parentNode;\r\n\r\n            if (/pre/i.test(parent.nodeName)) {\r\n                parent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\r\n            }\r\n\r\n            var code = element.textContent;\r\n\r\n            var env = {\r\n                element: element,\r\n                language: language,\r\n                grammar: grammar,\r\n                code: code\r\n            };\r\n\r\n            if (!code || !grammar) {\r\n                _.hooks.run('complete', env);\r\n                return;\r\n            }\r\n\r\n            _.hooks.run('before-highlight', env);\r\n\r\n            if (async && root.Worker) {\r\n                var worker = new Worker(_.filename);\r\n\r\n                worker.onmessage = function(evt) {\r\n                    env.highlightedCode = evt.data;\r\n\r\n                    _.hooks.run('before-insert', env);\r\n\r\n                    env.element.innerHTML = env.highlightedCode;\r\n\r\n                    callback && callback.call(env.element);\r\n                    _.hooks.run('after-highlight', env);\r\n                    _.hooks.run('complete', env);\r\n                };\r\n\r\n                worker.postMessage(JSON.stringify({\r\n                    language: env.language,\r\n                    code: env.code,\r\n                    immediateClose: true\r\n                }));\r\n            }\r\n            else {\r\n                env.highlightedCode = _.highlight(env.code, env.grammar, env.language);\r\n\r\n                _.hooks.run('before-insert', env);\r\n\r\n                env.element.innerHTML = env.highlightedCode;\r\n\r\n                callback && callback.call(element);\r\n\r\n                _.hooks.run('after-highlight', env);\r\n                _.hooks.run('complete', env);\r\n            }\r\n        },\r\n\r\n        highlight: function(text, grammar, language) {\r\n            var tokens = _.tokenize(text, grammar);\r\n            return Token.stringify(_.util.encode(tokens), language);\r\n        },\r\n\r\n        tokenize: function(text, grammar, language) {\r\n            var Token = _.Token;\r\n\r\n            var strarr = [text];\r\n\r\n            var rest = grammar.rest;\r\n\r\n            if (rest) {\r\n                for (var token in rest) {\r\n                    grammar[token] = rest[token];\r\n                }\r\n\r\n                delete grammar.rest;\r\n            }\r\n\r\n            tokenloop: for (var token in grammar) {\r\n                if (!grammar.hasOwnProperty(token) || !grammar[token]) {\r\n                    continue;\r\n                }\r\n\r\n                var patterns = grammar[token];\r\n                patterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\r\n\r\n                for (var j = 0; j < patterns.length; ++j) {\r\n                    var pattern = patterns[j],\r\n                        inside = pattern.inside,\r\n                        lookbehind = !!pattern.lookbehind,\r\n                        lookbehindLength = 0,\r\n                        alias = pattern.alias;\r\n\r\n                    pattern = pattern.pattern || pattern;\r\n\r\n                    for (var i = 0; i < strarr.length; i++) { // Don’t cache length as it changes during the loop\r\n                        var str = strarr[i];\r\n\r\n                        if (strarr.length > text.length) {\r\n                            // Something went terribly wrong, ABORT, ABORT!\r\n                            break tokenloop;\r\n                        }\r\n\r\n                        if (str instanceof Token) {\r\n                            continue;\r\n                        }\r\n\r\n                        pattern.lastIndex = 0;\r\n\r\n                        var match = pattern.exec(str);\r\n\r\n                        if (match) {\r\n                            if (lookbehind) {\r\n                                lookbehindLength = match[1].length;\r\n                            }\r\n\r\n                            var from = match.index - 1 + lookbehindLength,\r\n                                match = match[0].slice(lookbehindLength),\r\n                                len = match.length,\r\n                                to = from + len,\r\n                                before = str.slice(0, from + 1),\r\n                                after = str.slice(to + 1);\r\n\r\n                            var args = [i, 1];\r\n\r\n                            if (before) {\r\n                                args.push(before);\r\n                            }\r\n\r\n                            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias);\r\n\r\n                            args.push(wrapped);\r\n\r\n                            if (after) {\r\n                                args.push(after);\r\n                            }\r\n\r\n                            Array.prototype.splice.apply(strarr, args);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return strarr;\r\n        },\r\n\r\n        hooks: {\r\n            all: {},\r\n\r\n            add: function(name, callback) {\r\n                var hooks = _.hooks.all;\r\n\r\n                hooks[name] = hooks[name] || [];\r\n\r\n                hooks[name].push(callback);\r\n            },\r\n\r\n            run: function(name, env) {\r\n                var callbacks = _.hooks.all[name];\r\n\r\n                if (!callbacks || !callbacks.length) {\r\n                    return;\r\n                }\r\n\r\n                for (var i = 0, callback; callback = callbacks[i++];) {\r\n                    callback(env);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var Token = _.Token = function(type, content, alias) {\r\n        this.type = type;\r\n        this.content = content;\r\n        this.alias = alias;\r\n    };\r\n\r\n    Token.stringify = function(o, language, parent) {\r\n        if (typeof o == 'string') {\r\n            return o;\r\n        }\r\n\r\n        if (_.util.type(o) === 'Array') {\r\n            return o.map(function(element) {\r\n                return Token.stringify(element, language, o);\r\n            }).join('');\r\n        }\r\n\r\n        var env = {\r\n            type: o.type,\r\n            content: Token.stringify(o.content, language, parent),\r\n            tag: 'span',\r\n            classes: ['token', o.type],\r\n            attributes: {},\r\n            language: language,\r\n            parent: parent\r\n        };\r\n\r\n        if (env.type == 'comment') {\r\n            env.attributes['spellcheck'] = 'true';\r\n        }\r\n\r\n        if (o.alias) {\r\n            var aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\r\n            Array.prototype.push.apply(env.classes, aliases);\r\n        }\r\n\r\n        _.hooks.run('wrap', env);\r\n\r\n        var attributes = '';\r\n\r\n        for (var name in env.attributes) {\r\n            attributes += (attributes ? ' ' : '') + name + '=\"' + (env.attributes[name] || '') + '\"';\r\n        }\r\n\r\n        return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\" ' + attributes + '>' + env.content + '</' + env.tag + '>';\r\n    };\r\n\r\n    root.Prism = prism;\r\n})(this);\r\n\r\nPrism.languages.sql = {\r\n    'comment': {\r\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\w\\W]*?\\*\\/|(?:--|\\/\\/|#).*)/,\r\n        lookbehind: true\r\n    },\r\n    'string': {\r\n        pattern: /(^|[^@\\\\])(\"|')(?:\\\\?[\\s\\S])*?\\2/,\r\n        lookbehind: true\r\n    },\r\n    'variable': /@[\\w.$]+|@(\"|'|`)(?:\\\\?[\\s\\S])+?\\1/,\r\n    'function': /\\b(?:COUNT|SUM|AVG|MIN|MAX|FIRST|LAST|UCASE|LCASE|MID|LEN|ROUND|NOW|FORMAT)(?=\\s*\\()/i, // Should we highlight user defined functions too?\r\n    'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR VARYING|CHARACTER (?:SET|VARYING)|CHARSET|CHECK|CHECKPOINT|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMN|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS|CONTAINSTABLE|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|DATA(?:BASES?)?|DATETIME|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE(?: PRECISION)?|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE KEY|ELSE|ENABLE|ENCLOSED BY|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPE(?:D BY)?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTO|INVOKER|ISOLATION LEVEL|JOIN|KEYS?|KILL|LANGUAGE SQL|LAST|LEFT|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MODIFIES SQL DATA|MODIFY|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL(?: CHAR VARYING| CHARACTER(?: VARYING)?| VARCHAR)?|NATURAL|NCHAR(?: VARCHAR)?|NEXT|NO(?: SQL|CHECK|CYCLE)?|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READ(?:S SQL DATA|TEXT)?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEATABLE|REPLICATION|REQUIRE|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE MODE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|START(?:ING BY)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED BY|TEXT(?:SIZE)?|THEN|TIMESTAMP|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNPIVOT|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?)\\b/i,\r\n    'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\r\n    'number': /\\b-?(?:0x)?\\d*\\.?[\\da-f]+\\b/,\r\n    'operator': /[-+*\\/=%^~]|&&?|\\|?\\||!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\r\n    'punctuation': /[;[\\]()`,.]/\r\n};\r\n","/*!\r\n * Allowing lists to dynamically expand and collapse.\r\n * Created by Stephen Morley - http://code.stephenmorley.org/ - and released under the terms of the CC0 1.0 Universal legal code:\r\n * http://creativecommons.org/publicdomain/zero/1.0/legalcode\r\n *\r\n * Modified to work with bootstrap/fontAwesome and incorporate cascading checkboxes.\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    window.CollapsibleList = factory(root.$);\r\n})(this, function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare CollapsibleList class.\r\n     * @param {Node} element - Node to make collapsible.\r\n     */\r\n    var CollapsibleList = function(element) {\r\n        this.container = $.get(element);\r\n        this.init();\r\n    };\r\n\r\n    /**\r\n     * Declare CollapseCollapsibleList class methods.\r\n     */\r\n    CollapsibleList.prototype = {\r\n        /**\r\n         * Make the specified list collapsible.\r\n         */\r\n        init: function() {\r\n            var node = this.container;\r\n            // loop over the list items within this node\r\n            var lis = $.getAll('li', node);\r\n            for (var i = 0; i < lis.length; i++) {\r\n                // prevent text from being selected unintentionally\r\n                $.on(lis[i], 'mousedown', function(e) { e.preventDefault(); }, false);\r\n                // add the click listener\r\n                $.on(lis[i], 'click', this.createClickListener(lis[i]), false);\r\n                // close the unordered lists within this list item\r\n                this.toggle(lis[i]);\r\n\r\n                // check any parent items if this item is checked\r\n                node = $.get('input[type=\"checkbox\"]', lis[i]);\r\n                if (node.checked) {\r\n                    var p = node;\r\n                    while (this.container !== (p = p.parentNode)) {\r\n                        if (p.nodeName === 'LI') {\r\n                            var parent = p.parentNode.parentNode;\r\n                            if (parent.nodeName === 'LI') {\r\n                                var pi = $.get('input[type=\"checkbox\"]', parent);\r\n                                if (pi && pi !== node) {\r\n                                    pi.checked = true;\r\n                                }\r\n                                this.toggle(parent, true);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Toggles the display status of any unordered list elements within the specified node.\r\n         * @param {Node} node - Node containing the unordered list elements.\r\n         * @returns {Function} Click handler function.\r\n         */\r\n        createClickListener: function(node) {\r\n            var self = this;\r\n            return function(e) {\r\n                // ensure the event object is defined\r\n                e = $.coalesce(e, window.event);\r\n\r\n                // find the list item containing the target of the event\r\n                var elem = $.coalesce(e.target, e.srcElement);\r\n\r\n                // handle checking/unchecking buttons\r\n                if (elem.nodeName === 'INPUT') {\r\n                    var checked = elem.checked;\r\n\r\n                    // first toggle the check for all of the children\r\n                    var inputs = $.getAll('ul input[type=\"checkbox\"]', elem.parentNode.parentNode);\r\n                    i = inputs.length;\r\n                    while (i--) {\r\n                        inputs[i].checked = checked;\r\n                    }\r\n\r\n                    // then check all parents. if any of the children of a checkbox are checked, then it should be checked.\r\n                    var checkedRelative = false;\r\n                    var p = elem;\r\n                    while (self.container !== (p = p.parentNode)) {\r\n                        if (p.nodeName === 'LI') {\r\n                            // see if anybody else on this node level is checked\r\n                            var relatives = $.getAll('input[type=\"checkbox\"]', p.parentNode);\r\n                            var i = relatives.length;\r\n                            checkedRelative = false;\r\n                            while (i--) {\r\n                                if (relatives[i].checked) {\r\n                                    checkedRelative = true;\r\n                                }\r\n                            }\r\n\r\n                            if (p.parentNode.parentNode !== self.container) {\r\n                                var pi = $.get('input[type=\"checkbox\"]', p.parentNode.parentNode);\r\n                                if (pi && pi !== elem) {\r\n                                    pi.checked = checkedRelative || checked;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                if ($.hasClass(elem, 'custom-checkbox') || (elem.parentNode && $.hasClass(elem.parentNode, 'custom-checkbox'))) {\r\n                    // prevent toggling tree when checking/unchecking an element\r\n                    return;\r\n                }\r\n\r\n                // now handle the tree itself\r\n                while (elem.nodeName !== 'LI') {\r\n                    elem = elem.parentNode;\r\n                }\r\n\r\n                // toggle the state of the node if it was the target of the event\r\n                if (elem === node) {\r\n                    self.toggle(node);\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Opens or closes the unordered list elements directly within the specified node.\r\n         * @param {Node} node - Node containing the unordered list elements.\r\n         * @param {bool} forceOpen - Set to true to force the node to be open regardless of current status.\r\n         */\r\n        toggle: function(node, forceOpen) {\r\n            // determine whether to open or close the unordered lists\r\n            var open = $.coalesce(forceOpen, $.hasClass(node, 'collapsible-list-closed'));\r\n\r\n            // loop over the unordered list elements with the node\r\n            var uls = $.getAll('ul', node);\r\n            for (var i = 0; i < uls.length; i++) {\r\n                // find the parent list item of this unordered list\r\n                var li = uls[i];\r\n                while (li.nodeName !== 'LI') {\r\n                    li = li.parentNode;\r\n                }\r\n\r\n                // style the unordered list if it is directly within this node\r\n                if (li === node) {\r\n                    uls[i].style.display = open ? 'block' : 'none';\r\n                }\r\n            }\r\n\r\n            // remove the current class from the node\r\n            $.removeClass(node, 'collapsible-list-' + (open ? 'closed' : 'open'));\r\n\r\n            // if the node contains unordered lists, set its class\r\n            if (uls.length) {\r\n                $.addClass(node, 'collapsible-list-' + (open ? 'open' : 'closed'));\r\n            }\r\n        }\r\n    };\r\n\r\n    return CollapsibleList;\r\n});\r\n","/*!\r\n * Validator that converts HTML5 form validation errors into bootstrap friendly errors.\r\n * Based on the library below, but ported from jQuery to native js.\r\n *\r\n * Validator v0.9.0 for Bootstrap 3, by @1000hz\r\n * Copyright 2015 Cina Saffary\r\n * Licensed under http://opensource.org/licenses/MIT\r\n * https://github.com/1000hz/bootstrap-validator\r\n *\r\n * Modified to use Dash's core library instead of jQuery, with unneeded functionality removed.\r\n */\r\n(function(factory) {\r\n    // Assume a traditional browser.\r\n    window.Validator = factory($, Alertify);\r\n})(function($, Alertify) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare validator class.\r\n     * @param {Node} element - Form to validate.\r\n     * @param {Object} errorMsgs - Error messages for custom errors.\r\n     */\r\n    var Validator = function(element, errorMsgs) {\r\n        this.element = element;\r\n        this.element.setAttribute('novalidate', true); // disable automatic native validation\r\n        this.errorMsgs = $.extend({}, Validator._errors, errorMsgs || {});\r\n\r\n        var inputs = $.getAll('[data-match]', this.element);\r\n        for (var i = 0; i < inputs.length; i++) {\r\n            // add the data match attribute to the target if it doesn't already exist\r\n            var target = inputs[i].getAttribute('data-match');\r\n            if (target) {\r\n                var targetElement = $.get('#' + target, this.element);\r\n                if (targetElement && !targetElement.hasAttribute('data-match')) {\r\n                    targetElement.setAttribute('data-match', inputs[i].id);\r\n                }\r\n            }\r\n        }\r\n\r\n        // check for pre-existing error classes because razor is weird sometimes\r\n        this.resetAll();\r\n\r\n        $.on(this.element, 'input', this.validateInput.bind(this));\r\n        $.on(this.element, 'change', this.validateInput.bind(this));\r\n        $.on(this.element, 'focusout', this.validateInput.bind(this));\r\n        $.on(this.element, 'submit', this.onSubmit.bind(this));\r\n        $.on(this.element, 'formValidate', this.validate.bind(this));\r\n    };\r\n\r\n    /**\r\n     * Default error messages for custom errors.\r\n     * @type {Object}\r\n     */\r\n    Validator._errors = {\r\n        match: '{0} does not match {1}.',\r\n        minlength: 'This field is not long enough.'\r\n    };\r\n\r\n    /**\r\n     * Functions to validate inputs against.\r\n     * @type {Object}\r\n     */\r\n    Validator.VALIDATORS = {\r\n        'native': function(el) {\r\n            return el.checkValidity();\r\n        },\r\n        'match': function(el) {\r\n            var target = $.get('#' + el.getAttribute('data-match'), this.element);\r\n            var res = !target ? false : el.value === target.value;\r\n            if (res) {\r\n                el.setCustomValidity('');\r\n            } else {\r\n                el.setCustomValidity(this.errorMsgs.match.replace(\"{0}\", el.name).replace(\"{1}\", el.getAttribute('data-match')));\r\n            }\r\n            return res;\r\n        },\r\n        'minlength': function(el) {\r\n            var minlength = el.getAttribute('data-minlength');\r\n            var res = !el.value || el.value.length >= minlength;\r\n            if (res) {\r\n                el.setCustomValidity('');\r\n            } else {\r\n                el.setCustomValidity(this.errorMsgs.minlength);\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Declare validator class methods.\r\n     */\r\n    Validator.prototype = {\r\n        /**\r\n         * Validate a single input element.\r\n         * @param {Node} e - Element to validate\r\n         */\r\n        validateInput: function(e) {\r\n            var el;\r\n            if (this.isValidatableInput(e)) {\r\n                el = e;\r\n            } else if (e.target && this.isValidatableInput(e.target)) {\r\n                el = e.target;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            if (el.type === 'radio') {\r\n                el = $.getAll('input[name=\"' + el.getAttribute('name') + '\"]', self.element);\r\n            }\r\n\r\n            if (e.defaultPrevented) {\r\n                return;\r\n            }\r\n\r\n            var errors = this.runValidators(el);\r\n            if (errors.length) {\r\n                self.showErrors(el, errors);\r\n            } else {\r\n                self.clearErrors(el);\r\n                if (el.getAttribute('data-match')) {\r\n                    self.clearErrors($.get('#' + el.getAttribute('data-match'), self.element));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get all the validatable inputs in the form.\r\n         * @returns {Node[]} Array of input elements.\r\n         */\r\n        inputSelector: function() {\r\n            var inputs = $.getAll('input,select,textarea', this.element);\r\n            var length = inputs.length, i = 0, results = [];\r\n            for (; i < length; i++) {\r\n                var input = inputs[i];\r\n                if (input.type !== 'submit' && input.type !== 'button' && !input.getAttribute('disabled') && input.style.visibility !== 'hidden') {\r\n                    results.push(input);\r\n                } else if ($.hasClass(input, 'form-control-error')) {\r\n                    // remove error class on disabled items\r\n                    $.removeClass(input, 'form-control-error');\r\n                }\r\n            }\r\n            return results;\r\n        },\r\n\r\n        /**\r\n         * Get all the inputs in the form and remove error styling.\r\n         */\r\n        resetAll: function() {\r\n            $.getAll('input,select,textarea', this.element).forEach(function(x) {\r\n                $.removeClass(x, 'form-control-error');\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Check if a node is an input that can be validated.\r\n         * @param {Node} input - Node to check.\r\n         * @returns {bool} True if input is an input that can be validated.\r\n         */\r\n        isValidatableInput: function(input) {\r\n            return (input.tagName === 'INPUT' || input.tagName === 'SELECT' || input.tagName === 'TEXTAREA') && !input.getAttribute('disabled') && input.style.visibility !== 'hidden';\r\n        },\r\n\r\n        /**\r\n         * Run all of the validator functions against an element.\r\n         * @param {Node} el - Element to validate.\r\n         * @returns {string[]} Array of error messages.\r\n         */\r\n        runValidators: function(el) {\r\n            var errors = [];\r\n\r\n            for (var key in Validator.VALIDATORS) {\r\n                if (Validator.VALIDATORS.hasOwnProperty(key)) {\r\n                    var validator = Validator.VALIDATORS[key];\r\n                    var attr = el.getAttribute('data-' + key);\r\n                    if ((attr || key === 'native') && !validator.call(this, el)) {\r\n                        var error = el.getAttribute('data' + key + '-error') || el.getAttribute('data-error') || (key === 'native' ? el.validationMessage : this.errorMsgs[key]);\r\n                        if (key === \"match\") {\r\n                            error = error.replace(\"{0}\", el.name).replace(\"{1}\", attr);\r\n                        }\r\n                        !~errors.indexOf(error) && errors.push(error);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        /**\r\n         * Run validation for the form.\r\n         */\r\n        validate: function() {\r\n            var inputs = this.inputSelector();\r\n            var length = inputs.length, i = 0;\r\n            for (; i < length; i++) {\r\n                this.validateInput(inputs[i]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Display errors for an element.\r\n         * @param {Node} el - Element to display errors for.\r\n         * @param {string[]} errors - List of error messages.\r\n         */\r\n        showErrors: function(el, errors) {\r\n            if (!errors.length) {\r\n                return;\r\n            }\r\n\r\n            var group = $.closest('.form-group', el);\r\n            var block = $.get('.help-block.with-errors', group);\r\n\r\n            if (block) {\r\n                var errorElement = document.createElement('ul');\r\n                $.addClass(errorElement, 'list-unstyled');\r\n\r\n                var errHtml = '', i = 0; length = errors.length;\r\n                for (; i < length; i++) {\r\n                    errHtml += '<li>' + errors[i] + '</li>';\r\n                }\r\n                errorElement.innerHTML = errHtml;\r\n\r\n                block.innerHTML = '';\r\n                block.appendChild(errorElement);\r\n            }\r\n\r\n            $.addClass(el, 'form-control-error');\r\n\r\n            var tab = $.closest('.tab-pane', el);\r\n            if (tab) {\r\n                // add error class to tab\r\n                var id = tab.getAttribute('aria-labelledby');\r\n                if (id) {\r\n                    $.addClass($.get('#' + id), 'tab-validation-error');\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Hide all error messages for an element.\r\n         * @param {Node} el - Element to hide errors for.\r\n         */\r\n        clearErrors: function(el) {\r\n            $.removeClass(el, 'form-control-error');\r\n\r\n            var group = $.closest('.form-group', el);\r\n            if (group) {\r\n                var block = $.get('.help-block.with-errors', group);\r\n                if (block) {\r\n                    block.innerHTML = '';\r\n                }\r\n            }\r\n            var tab = $.closest('.tab-pane', el);\r\n            if (tab) {\r\n                if ($.getAll('.form-control-error', tab).length == 0) {\r\n                    var id = tab.getAttribute('aria-labelledby');\r\n                    if (id) {\r\n                        $.removeClass($.get('#' + id), 'tab-validation-error');\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check if the validator found any errors.\r\n         * @returns {bool} True if there are any errors.\r\n         */\r\n        hasErrors: function() {\r\n            return $.getAll('.form-control-error', this.element).length;\r\n        },\r\n\r\n        /**\r\n         * Validate the form and prevent submit if there are errors.\r\n         * @param {Event} e - Form submit event.\r\n         */\r\n        onSubmit: function(e) {\r\n            this.validate();\r\n            if (this.hasErrors()) {\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    };\r\n\r\n    return Validator;\r\n});\r\n","/*!\r\n * Color library\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Convert hex string to RGB.\r\n     * @param {string} hex - Hex string.\r\n     * @returns {Object} Object with RGB properties.\r\n     */\r\n    var hex2rgb = function(hex) {\r\n        return { r: parseInt(hex.substr(1, 2), 16), g: parseInt(hex.substr(3, 2), 16), b: parseInt(hex.substr(5, 2), 16) };\r\n    };\r\n\r\n    /**\r\n     * Converts an RGB color value to HSL. Conversion formula\r\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n     * Assumes r, g, and b are contained in the set [0, 255] and\r\n     * returns h, s, and l in the set [0, 1].\r\n     * @param {Object} rgb - Object with r, g, and b properties.\r\n     * @return {Number[]} The HSL representation.\r\n     */\r\n    var rgb2hsl = function(rgb) {\r\n        var r = rgb.r, g = rgb.g, b = rgb.b;\r\n        r /= 255, g /= 255, b /= 255;\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if (max === min) {\r\n            h = s = 0; // achromatic\r\n        } else {\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch (max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        return [h, s, l];\r\n    };\r\n\r\n    $.colors = {\r\n        hex2rgb: hex2rgb,\r\n        rgb2hsl: rgb2hsl,\r\n    };\r\n})(this.$);\r\n","/*!\r\n * ColorPicker mithril component.\r\n */\r\n(function(root, factory) {\r\n    root.ColorPicker = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    var _keys = {\r\n        ESC: 27,\r\n        DOWN: 40,\r\n        UP: 38,\r\n        LEFT: 37,\r\n        RIGHT: 39\r\n    };\r\n\r\n    var ColorPicker = {\r\n        /**\r\n         * Initialize the component.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            this.opts = {\r\n                value: attrs.value,\r\n                name: attrs.name,\r\n                active: false,\r\n                disabled: attrs.disabled,\r\n                onSelect: attrs.onSelect,\r\n                onCancel: attrs.onCancel,\r\n                container: null,\r\n                selectedIndex: -1,\r\n                colors: ['#4D4D4D', '#F44E3B', '#0000FF', '#FE9200', '#FCDC00', '#00FF00', '#A4DD00', '#68CCCA',\r\n                    '#73D8FF', '#AEA1FF', '#FDA1FF', '#D33115', '#E27300', '#FCC400', '#B0BC00', '#68BC00',\r\n                    '#16A5A5', '#009CE0', '#7B64FF', '#FA28FF', '#9F0500', '#C45100', '#FB9E00',\r\n                    '#808900', '#194D33', '#0C797D', '#0062B1', '#653294', '#AB149E'\r\n                ]\r\n            };\r\n            if (this.opts.value) {\r\n                this.opts.selectedIndex = this.opts.colors.indexOf(this.opts.value);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Grab the DOM containing node after it is created.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oncreate: function(vnode) {\r\n            this.opts.container = vnode.dom;\r\n        },\r\n\r\n        /**\r\n         * Update the opts in case the component name is changed.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         * @param vnode\r\n         */\r\n        onupdate: function(vnode) {\r\n            if (vnode.attrs) {\r\n                this.opts.name = vnode.attrs.name;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check special keys and respond accordingly.\r\n         * @param {Event} e - Keypress event.\r\n         */\r\n        onKeyDown: function(e) {\r\n            if (this.opts.disabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.opts.active) {\r\n                if (e.keyCode === _keys.ESC) {\r\n                    this.close();\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                } else if (e.keyCode === _keys.DOWN || e.keyCode === _keys.LEFT) {\r\n                    this.selectIndex(Math.min(this.opts.selectedIndex + 1, this.opts.colors.length - 1));\r\n                } else if (e.keyCode === _keys.UP || e.keyCode === _keys.RIGHT) {\r\n                    this.selectIndex(Math.max(this.opts.selectedIndex - 1, 0));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select an item from the list by index.\r\n         * @param {Event} e - Event that triggered this\r\n         * @param {Number} index - Index of the color being selected\r\n         */\r\n        selectColor: function(e, index) {\r\n            var target = e && e.target ? e.target : e;\r\n            if (target) {\r\n                this.opts.value = target.getAttribute('data-value') || target.parentNode.getAttribute('data-value');\r\n                target.scrollIntoView();\r\n\r\n                if (this.opts.onSelect) {\r\n                    this.opts.onSelect(this.opts.value);\r\n                }\r\n            }\r\n            if (index) {\r\n                this.opts.selectedIndex = index;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select an item from the list by index.\r\n         * @param {number} index - Filtered list item index.\r\n         */\r\n        selectIndex: function(index) {\r\n            var swatches = $.getAll('.swatch', this.opts.container);\r\n            if (swatches && swatches[index]) {\r\n                this.opts.selectedIndex = index;\r\n                swatches[index].focus();\r\n                if ($.hasClass(swatches[index], 'swatch-selectable')) {\r\n                    this.selectColor(swatches[index], index);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set value and close the picker.\r\n         */\r\n        close: function() {\r\n            this.opts.active = false;\r\n            var trigger = $.get('.colorpicker-trigger', this.opts.container);\r\n            if (trigger) {\r\n                trigger.focus();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Show the swatch list.\r\n         */\r\n        showEditor: function() {\r\n            if (this.opts.disabled) {\r\n                return;\r\n            }\r\n            this.opts.active = !this.opts.active;\r\n        },\r\n\r\n        /**\r\n         * Create HTML to display component.\r\n         * @returns {Object} Mithril vnode\r\n         */\r\n        view: function() {\r\n            var self = this;\r\n            return m('.mithril-colorpicker', {\r\n                class: this.opts.active ? 'active' : '', onkeydown: this.onKeyDown.bind(this)\r\n            }, m('button.btn.btn-secondary.colorpicker-trigger', {\r\n                type: 'button', role: 'button', disabled: this.opts.disabled,\r\n                onclick: this.showEditor.bind(this),\r\n                style: 'background-color: ' + this.opts.value\r\n            }, [m.trust('&nbsp;'), m('i.dash.colorpicker-indicator', { class: this.opts.active ? 'dash-sort-up' : 'dash-sort-down' })]), this.opts.active && m('.editor', [\r\n                m('.swatches',\r\n                    m('button.btn.btn-secondary.swatch', {\r\n                        type: 'button', role: 'button', onclick: this.close.bind(this)\r\n                    }, m('i.dash.dash-cancel')),\r\n                    this.opts.colors.map(function(x) {\r\n                        return m('button.btn.btn-secondary.swatch.swatch-selectable', {\r\n                            class: self.opts.value === x ? 'active' : '',\r\n                            type: 'button', role: 'button', 'data-value': x,\r\n                            style: 'background-color: ' + x + '; color: ' + x, onclick: self.selectColor.bind(self)\r\n                        }, m('i.dash.dash-cancel'));\r\n                    })\r\n                )\r\n            ]), m('input', { type: 'hidden', name: this.opts.name, value: this.opts.value }));\r\n        }\r\n    };\r\n\r\n    return ColorPicker;\r\n});\r\n","/*!\r\n * Mithril based table component. Supports ajax data, searching, sorting, paging, & resizing columns.\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Table = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare Table class.\r\n     * @param {Object} opts - Table settings\r\n     */\r\n    function Table(opts) {\r\n        opts = opts || {};\r\n\r\n        var data = null;\r\n        if (opts.data) {\r\n            data = opts.data;\r\n            delete opts.data;\r\n        }\r\n\r\n        this.opts = $.extend({\r\n            content: null,\r\n            id: null,\r\n            columns: [],\r\n            url: '',\r\n            requestMethod: 'GET',\r\n            requestUsePascalCase: true,\r\n            requestParams: {},\r\n            searchable: true,\r\n            loadAllData: true,\r\n            inputTimeout: 200,\r\n            columnMinWidth: 50,\r\n            width: 100,\r\n            editable: true,\r\n            pageDropdown: true,\r\n            headerButtons: null,\r\n            storageFunction: null,\r\n            itemsPerPage: null,\r\n            searchQuery: null,\r\n            currentStartItem: null,\r\n            sorting: null,\r\n            dataCallback: null,\r\n            errorCallback: null,\r\n            dataDateFormat: 'YYYY-MM-DD HH:mm:ss',\r\n            displayDateFormat: 'YYYY-MM-DD HH:mm',\r\n            displayCurrencyFormat: '{s:$} {[t:,][d:.][p:2]}',\r\n            resources: {\r\n                firstPage: $.resx('firstPage'),\r\n                previousPage: $.resx('previousPage'),\r\n                nextPage: $.resx('nextPage'),\r\n                lastPage: $.resx('lastPage'),\r\n                noData: $.resx('noData'),\r\n                showing: $.resx('showing'),\r\n                page: $.resx('page') || 'Page',\r\n                perPage: $.resx('perPage'),\r\n                loadingError: $.resx('loadingError'),\r\n                tryAgain: $.resx('tryAgain')\r\n            }\r\n        }, opts);\r\n\r\n        this.content = $.get(this.opts.content);\r\n        this.layoutSet = false;\r\n        this.data = null;\r\n        this.loading = true;\r\n        this.loadingError = false;\r\n        this.filteredTotal = 0;\r\n        this.results = [];\r\n        this.pageTotal = 0;\r\n        this.totalDistance = 0;\r\n        this.lastSeenAt = { x: null, y: null };\r\n        this.columnRenderer = {};\r\n        this.colGroups = [];\r\n        this.events = {};\r\n        this.intColumns = [];\r\n        this.dateColumns = [];\r\n        this.currencyColumns = [];\r\n\r\n        var self = this;\r\n        for (var i = 0; i < this.opts.columns.length; i++) {\r\n            var column = this.opts.columns[i];\r\n            column.width = $.hasPositiveValue(column.width) ? column.width : this.store(column.field + '.width');\r\n\r\n            var columnFunction = $.isNull(column.links) || column.links.length === 0 ?\r\n                function(obj, column) { return self.getDisplayValue(obj[column.field], column.dataType.toLowerCase()); } :\r\n                function(obj, column) {\r\n                    return column.links.filter(function(link) {\r\n                        return !$.isNull(link);\r\n                    }).map(function(link) {\r\n                        var label = $.coalesce(link.label, self.getDisplayValue(obj[column.field], column.dataType.toLowerCase()));\r\n                        var attr = $.clone(link.attributes) || {};\r\n                        var href = link.href || null;\r\n                        if (href) {\r\n                            for (var prop in obj) {\r\n                                if (href.indexOf('{' + prop + '}') > -1 && obj.hasOwnProperty(prop)) {\r\n                                    href = href.replace(new RegExp('{' + prop + '}', 'g'), obj[prop]);\r\n                                }\r\n                            }\r\n                        }\r\n                        var classes = attr['class'].split(' ');\r\n                        if (classes.indexOf('btn') === -1) {\r\n                            classes.push('btn');\r\n                            classes.push('btn-link');\r\n                        }\r\n                        if (classes.indexOf('dash-ajax') === -1) {\r\n                            classes.push('dash-ajax');\r\n                        }\r\n                        attr['class'] = classes.filter(function(x) { return x && x.length; }).join(' ');\r\n                        attr['data-method'] = link.method ? link.method.toUpperCase() : 'GET';\r\n                        attr['data-href'] = href;\r\n                        attr['title'] = label;\r\n                        attr['type'] = attr['role'] = 'button';\r\n                        return m('button', attr, $.isNull(link.icon) ? label : m('i', { class: 'dash dash-' + link.icon.toLowerCase() }));\r\n                    });\r\n                };\r\n\r\n            this.columnRenderer[column.field] = columnFunction;\r\n            this.colGroups.push(m('col'));\r\n\r\n            var type = column.dataType.toLowerCase();\r\n            if (type === 'int') {\r\n                this.intColumns.push(column.field);\r\n            } else if (type === 'date') {\r\n                this.dateColumns.push(column.field);\r\n            } else if (type === 'currency') {\r\n                this.currencyColumns.push(column.field);\r\n            }\r\n        }\r\n\r\n        this.itemsPerPage = this.store('itemsPerPage') * 1 || 10;\r\n        this.currentStartItem = this.store('currentStartItem') * 1 || 0;\r\n        this.searchQuery = this.store('searchQuery') || '';\r\n        this.width = this.store('width') * 1 || 100;\r\n        var sorting = this.store('sorting');\r\n        this.sorting = (typeof sorting === 'string' ? JSON.parse(sorting) : sorting) || [];\r\n\r\n        if (data) {\r\n            this.processData({ rows: data });\r\n        }\r\n\r\n        this.run();\r\n    }\r\n\r\n    Table.prototype = {\r\n        pageOptions: [m('option', { value: '10' }, '10'), m('option', { value: '20' }, '20'), m('option', { value: '50' }, '50'), m('option', { value: '100' }, '100')],\r\n\r\n        /**\r\n         * Get/set persistent values.\r\n         * @param {string} key - Key name of the value to get/set.\r\n         * @param {*} value - Value to set.\r\n         * @returns {string|undefined} Value if getting, else undefined.\r\n         */\r\n        store: function(key, value) {\r\n            var myKey = this.opts.id + '.' + key;\r\n            // getter\r\n            if ($.isUndefined(value)) {\r\n                return $.isNull(this.opts.storageFunction) ? localStorage[myKey] : $.coalesce(this.opts[key], null);\r\n            }\r\n\r\n            // setter\r\n            if ($.isNull(this.opts.storageFunction)) {\r\n                localStorage[myKey] = value;\r\n            } else {\r\n                // ignore the param actually passed and use the values from the object\r\n                // passing the whole object lets the storage function decide when to actually save using a debounce\r\n                if ($.isFunction(this.opts.storageFunction)) {\r\n                    this.opts.storageFunction({\r\n                        itemsPerPage: this.itemsPerPage,\r\n                        currentStartItem: this.currentStartItem,\r\n                        searchQuery: this.searchQuery,\r\n                        width: this.width,\r\n                        sorting: this.sorting,\r\n                        columnWidths: this.opts.columns.map(function(c) { return { field: c.field, width: c.width * 1.0 }; })\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Process the data array result from the ajax request.\r\n         * @param {Object[]} data - Array of records to display.\r\n         */\r\n        processData: function(data) {\r\n            if (this.opts.dataCallback) {\r\n                this.opts.dataCallback(data);\r\n            }\r\n\r\n            var i = 0, len = data.rows.length, j = 0;\r\n            for (; i < len; i++) {\r\n                // add an index to the data so we can reset to the default sort order later if the user wants\r\n                data.rows[i]._index = i;\r\n\r\n                var x;\r\n                // convert input to appropriate types\r\n                for (j = 0; j < this.intColumns.length; j++) {\r\n                    x = this.intColumns[j];\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : data.rows[i][x] * 1;\r\n                }\r\n                for (j = 0; j < this.dateColumns.length; j++) {\r\n                    x = this.dateColumns[j];\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : $.fecha.parse(data.rows[i][x], this.opts.dataDateFormat);\r\n                }\r\n                for (j = 0; j < this.currencyColumns.length; j++) {\r\n                    x = this.currencyColumns[j];\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : $.accounting.unformat(data.rows[i][x]);\r\n                }\r\n            }\r\n            this.data = data.rows;\r\n            this.filteredTotal = data.filteredTotal;\r\n\r\n            this.loading = false;\r\n            this.sort(false);\r\n            this.filterResults();\r\n        },\r\n\r\n        /**\r\n         * Load the data to populate the table.\r\n         */\r\n        loadData: function() {\r\n            this.loading = true;\r\n            this.loadingError = false;\r\n\r\n            var self = this;\r\n            $.ajax({\r\n                method: this.opts.requestMethod,\r\n                url: this.opts.url,\r\n                data: this.buildParams(),\r\n                block: false\r\n            }, this.processData.bind(this), function(data) {\r\n                self.loading = false;\r\n                self.loadingError = true;\r\n                if (self.opts.errorCallback) {\r\n                    self.opts.errorCallback(data);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Force the table to refresh its data.\r\n         */\r\n        refresh: function() {\r\n            this.loading = true;\r\n            this.loadingError = false;\r\n            this.loadData();\r\n        },\r\n\r\n        /**\r\n         * Build querystring params to fetch data from the server.\r\n         * @returns {Object} Request parameters.\r\n         */\r\n        buildParams: function() {\r\n            var sort = this.sorting.length > 0 ? this.sorting.map(function(obj, i) { return { field: obj.field, dir: obj.dir, index: i }; }) : null;\r\n            if (this.opts.requestUsePascalCase) {\r\n                return $.extend(this.opts.requestParams, {\r\n                    StartItem: this.currentStartItem,\r\n                    Items: this.itemsPerPage,\r\n                    Query: this.searchQuery,\r\n                    Sort: $.toPascalKeys(sort)\r\n                });\r\n            }\r\n            return $.extend(this.opts.requestParams, {\r\n                startItem: this.currentStartItem,\r\n                items: this.itemsPerPage,\r\n                query: this.searchQuery,\r\n                sort: sort\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Set the first item index to display.\r\n         * @param {type} index - Record index to start on.\r\n         */\r\n        setCurrentStartItem: function(index) {\r\n            this.currentStartItem = index;\r\n            this.store('currentStartItem', index);\r\n            this.filterResults(true);\r\n        },\r\n\r\n        /**\r\n         * Set the number of items to display per page.\r\n         * @param {number|Event} e - Number or items per page, or an event that triggered the change.\r\n         */\r\n        setItemsPerPage: function(e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var items = (isNaN(e) ? e.target.value : e) * 1;\r\n            if (this.itemsPerPage !== items) {\r\n                this.itemsPerPage = items;\r\n                this.store('itemsPerPage', items);\r\n                this.setCurrentStartItem(0);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set the search query for filtering table data.\r\n         * @param {string} val - New search text.\r\n         */\r\n        setSearchQuery: function(val) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var query = val.target ? val.target.value : val;\r\n            if (this.searchQuery !== query) {\r\n                this.searchQuery = query;\r\n                clearTimeout(this.requestTimer);\r\n                this.requestTimer = setTimeout(this.runSearch.bind(this, query), this.opts.inputTimeout);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change search query and filter results.\r\n         * @param {string} query - New search text.\r\n         */\r\n        runSearch: function(query) {\r\n            this.store('searchQuery', query);\r\n            this.requestTimer = null;\r\n            this.currentStartItem = 0;\r\n            this.filterResults(true);\r\n            m.redraw();\r\n        },\r\n\r\n        /**\r\n         * Filter the data based on the search query, current page, and items per page.\r\n         * @param {bool} refresh - Force it to refresh its data.\r\n         */\r\n        filterResults: function(refresh) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            if (refresh && !this.opts.loadAllData) {\r\n                // force the data to reload. filterResults will get called again after the data loads\r\n                this.loadData();\r\n            } else if (!this.opts.loadAllData) {\r\n                // we're not loading all the data to begin with. so whatever data we have should be displayed.\r\n                this.results = this.data;\r\n                this.pageTotal = Math.ceil(this.filteredTotal / this.itemsPerPage);\r\n            } else {\r\n                // we're loading all the data to begin with. so figure out what data to display.\r\n                var filteredTotal = 0;\r\n                if (this.data.constructor !== Array) {\r\n                    this.loading = true;\r\n                    this.results = [];\r\n                } else {\r\n                    var startItem = this.currentStartItem;\r\n                    var res = this.searchQuery ? this.data.filter(this.filterArray.bind(this.searchQuery.toLowerCase())) : this.data;\r\n                    filteredTotal = res.length;\r\n                    this.results = res.slice(startItem, startItem + this.itemsPerPage);\r\n                }\r\n\r\n                this.filteredTotal = filteredTotal;\r\n                this.pageTotal = Math.ceil(filteredTotal / this.itemsPerPage);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Page forward or backward.\r\n         * @param {number} d - Direction to move, 1 is forward, -1 is backward.\r\n         * @param {number} m - Move to end (first or last page) if true.\r\n         */\r\n        moveToPage: function(d, m) {\r\n            this.changePage(d === 1 ? m ? this.pageTotal : this.currentStartItem / this.itemsPerPage + 2 : m ? 1 : this.currentStartItem / this.itemsPerPage);\r\n        },\r\n\r\n        /**\r\n         * Move to the specified page number.\r\n         * @param {number|Event} e - New page number, or an event that triggered the change.\r\n         */\r\n        changePage: function(e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var page = (isNaN(e) ? e.target.value : e) * 1;\r\n            if (page <= this.pageTotal && page > 0) {\r\n                this.setCurrentStartItem((page - 1) * this.itemsPerPage);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change the sorting order.\r\n         * @param {string} fieldName - Name of the field to sort on.\r\n         * @param {string} dataType - Data type of the field.\r\n         * @param {Event} e - Event that triggered the change.\r\n         */\r\n        changeSort: function(fieldName, dataType, e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var val = $.findByKey(this.sorting, 'field', fieldName);\r\n            if (e.shiftKey) {\r\n                document.getSelection().removeAllRanges();\r\n            } else {\r\n                this.sorting = [];\r\n            }\r\n\r\n            if (val === null) {\r\n                this.sorting.push({ field: fieldName, dir: 'ASC', dataType: dataType || 'string' });\r\n            } else if (e.shiftKey) {\r\n                if (val.dir === 'DESC') {\r\n                    this.sorting.splice(val._i, 1);\r\n                } else {\r\n                    val.dir = 'DESC';\r\n                    this.sorting[val._i] = val;\r\n                }\r\n            } else {\r\n                val.dir = val.dir === 'ASC' ? 'DESC' : 'ASC';\r\n                this.sorting.push(val);\r\n            }\r\n\r\n            this.sort();\r\n            this.setCurrentStartItem(0);\r\n        },\r\n\r\n        /**\r\n         * Sort the underlying data.\r\n         * @param {bool} refresh - Refresh the data from the server.\r\n         */\r\n        sort: function(refresh) {\r\n            refresh = $.coalesce(refresh, true);\r\n            this.data.sort(this.sorting.length > 0 ? this.compare.bind(this) : this.defaultCompare);\r\n            this.filterResults(refresh);\r\n            this.store('sorting', JSON.stringify(this.sorting));\r\n        },\r\n\r\n        /**\r\n         * Set up the table and column styles and events.\r\n         */\r\n        setLayout: function() {\r\n            if (this.layoutSet) {\r\n                return;\r\n            }\r\n\r\n            this.layoutSet = true;\r\n            this.content = $.get(this.opts.content);\r\n            this.table = $.get('.table-data-table', this.content);\r\n            this.table.style.tableLayout = 'fixed';\r\n            this.tableHeaderRow = this.table.tHead.rows[0];\r\n\r\n            if (this.table !== null) {\r\n                this.clientWidth = this.content.clientWidth;\r\n                this.table.tHead.style.width = this.table.style.width = (this.width / 100 * this.table.offsetWidth) + 'px';\r\n\r\n                var hWidth = this.table.tHead.offsetWidth;\r\n                var tWidth = this.table.offsetWidth;\r\n                var i = 0;\r\n                var cells = this.tableHeaderRow.cells;\r\n                this.opts.columns.forEach(function(x) {\r\n                    if (!x.width) {\r\n                        x.width = cells[i].offsetWidth / hWidth * 100;\r\n                    }\r\n                    cells[i].style.width = x.width / 100 * tWidth + 'px';\r\n                    ++i;\r\n                });\r\n\r\n                if (this.opts.editable) {\r\n                    this.events = {\r\n                        resize: $.debounce(this.onResize.bind(this), 50),\r\n                        move: this.onMouseMove.bind(this),\r\n                        up: this.onMouseUp.bind(this),\r\n                        touch: this.touchHandler.bind(this)\r\n                    };\r\n                    $.on(window, 'resize', this.events.resize);\r\n                    $.on(window, 'mousemove', this.events.move);\r\n                    $.on(window, 'mouseup', this.events.up);\r\n\r\n                    var header = $.get('thead', this.table);\r\n                    if (header) {\r\n                        $.on(header, 'touchstart', this.events.touch);\r\n                        $.on(header, 'touchmove', this.events.touch);\r\n                        $.on(header, 'touchend', this.events.touch);\r\n                        $.on(header, 'touchcancel', this.events.touch);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Clean up our mess.\r\n         */\r\n        destroy: function() {\r\n            if (this.opts.editable) {\r\n                $.off(window, 'resize', this.events.resize);\r\n                $.off(window, 'mousemove', this.events.move);\r\n                $.off(window, 'mouseup', this.events.up);\r\n\r\n                var header = $.get('thead', this.table);\r\n                if (header) {\r\n                    $.off(header, 'touchstart', this.events.touch);\r\n                    $.off(header, 'touchmove', this.events.touch);\r\n                    $.off(header, 'touchend', this.events.touch);\r\n                    $.off(header, 'touchcancel', this.events.touch);\r\n                }\r\n            }\r\n            m.mount(this.content, null);\r\n        },\r\n\r\n        /**\r\n         * Update the table and column widths based on a window resize.\r\n         */\r\n        onResize: function() {\r\n            var cWidth = this.content.clientWidth;\r\n            if (cWidth === 0) {\r\n                return;\r\n            }\r\n            var scale = cWidth / this.clientWidth;\r\n            this.clientWidth = cWidth;\r\n            this.table.tHead.style.width = this.table.style.width = (this.pixelToFloat(this.table.style.width) * scale) + 'px';\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                this.tableHeaderRow.cells[i].style.width = (this.pixelToFloat(this.tableHeaderRow.cells[i].style.width) * scale) + 'px';\r\n            }\r\n            this.updateLayout();\r\n        },\r\n\r\n        /**\r\n         * Update the table header style.\r\n         */\r\n        updateLayout: function() {\r\n            if (!$.isVisible(this.table)) {\r\n                return;\r\n            }\r\n            $.get('.table-scrollable', this.content).style.paddingTop = this.table.tHead.offsetHeight + 'px';\r\n            var colGroup = $.get('.table-column-group', this.content);\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                colGroup.children[i].style.width = this.tableHeaderRow.cells[i].style.width;\r\n            }\r\n            if (this.clientWidth > 0 && this.content.clientWidth / this.clientWidth !== 1) {\r\n                this.onResize();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Make the table header scroll horizontally with the table\r\n         * @param {Event} e - Event that triggered the scroll.\r\n         */\r\n        onScroll: function(e) {\r\n            var head = this.table.tHead;\r\n            var scroll = e.target;\r\n            if (-head.offsetLeft !== scroll.scrollLeft) {\r\n                head.style.left = '-' + scroll.scrollLeft + 'px';\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handle dragging to change column widths.\r\n         * @param {type} e - Event that triggered the change.\r\n         */\r\n        onHeaderMouseDown: function(e) {\r\n            if (e.button !== 0) {\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            var callbackFunc = function(cellEl) {\r\n                e.stopImmediatePropagation();\r\n                e.preventDefault();\r\n\r\n                self.resizeContext = {\r\n                    colIndex: cellEl.cellIndex,\r\n                    initX: e.clientX,\r\n                    scrWidth: $.get('.table-scrollable', self.content).offsetWidth,\r\n                    initTblWidth: self.table.offsetWidth,\r\n                    initColWidth: self.pixelToFloat($.get('.table-column-group', self.content).children[cellEl.cellIndex].style.width),\r\n                    layoutTimer: null\r\n                };\r\n            };\r\n            self.inResizeArea(e, callbackFunc);\r\n        },\r\n\r\n        /**\r\n         * Handle resizing columns.\r\n         * @param {Event} e - Event that triggered the change.\r\n         */\r\n        onMouseMove: function(e) {\r\n            var newStyle = '';\r\n            var cursorFunc = function() {\r\n                newStyle = 'col-resize';\r\n            };\r\n            this.inResizeArea(e, cursorFunc);\r\n            if (this.table.tHead.style.cursor !== newStyle) {\r\n                this.table.tHead.style.cursor = newStyle;\r\n            }\r\n\r\n            var ctx = this.resizeContext;\r\n            if ($.isNull(ctx)) {\r\n                return;\r\n            }\r\n\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n\r\n            var newColWidth = Math.max(ctx.initColWidth + e.clientX - ctx.initX, this.opts.columnMinWidth);\r\n            this.table.tHead.style.width = this.table.style.width = (ctx.initTblWidth + (newColWidth - ctx.initColWidth)) + 'px';\r\n            $.get('.table-column-group', this.content).children[ctx.colIndex].style.width = this.tableHeaderRow.cells[ctx.colIndex].style.width = newColWidth + 'px';\r\n\r\n            if (ctx.layoutTimer === null) {\r\n                var self = this;\r\n                var timerFunc = function() {\r\n                    self.resizeContext.layoutTimer = null;\r\n                    self.updateLayout();\r\n                };\r\n                ctx.layoutTimer = setTimeout(timerFunc, 25);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update column widths and save them.\r\n         */\r\n        onMouseUp: function() {\r\n            var ctx = this.resizeContext;\r\n            if ($.isNull(ctx)) {\r\n                return;\r\n            }\r\n\r\n            if (ctx.layoutTimer !== null) {\r\n                clearTimeout(ctx.layoutTimer);\r\n            }\r\n            this.resizeContext = null;\r\n\r\n            var newTblWidth = this.table.offsetWidth;\r\n            this.width = (newTblWidth / ctx.scrWidth * 100).toFixed(2);\r\n            this.store('width', this.width);\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                this.opts.columns[i].width = (this.pixelToFloat(this.tableHeaderRow.cells[i].style.width) / newTblWidth * 100).toFixed(2);\r\n                this.store(this.opts.columns[i].field + '.width', this.opts.columns[i].width);\r\n            }\r\n\r\n            this.updateLayout();\r\n        },\r\n\r\n        /**\r\n         * Check if the cursor is in the area where the user can click to drag a column.\r\n         * @param {Event} e - Event that triggered the check.\r\n         * @param {Function} callback - Function to run if in the resize area.\r\n         */\r\n        inResizeArea: function(e, callback) {\r\n            var tblX = e.clientX;\r\n            var el;\r\n            for (el = this.table.tHead; el !== null; el = el.offsetParent) {\r\n                tblX -= el.offsetLeft + el.clientLeft - el.scrollLeft;\r\n            }\r\n\r\n            var cellEl = e.target;\r\n            while (cellEl !== this.table.tHead && cellEl !== null) {\r\n                if (cellEl.nodeName === 'TH') {\r\n                    break;\r\n                }\r\n                cellEl = cellEl.parentNode;\r\n            }\r\n\r\n            if (cellEl === this.table.tHead) {\r\n                for (var i = this.tableHeaderRow.cells.length - 1; i >= 0; i--) {\r\n                    cellEl = this.tableHeaderRow.cells[i];\r\n                    if (cellEl.offsetLeft <= tblX) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (cellEl !== null) {\r\n                var x = tblX;\r\n                for (el = cellEl; el !== this.table.tHead; el = el.offsetParent) {\r\n                    if (el === null) {\r\n                        break;\r\n                    }\r\n                    x -= el.offsetLeft - el.scrollLeft + el.clientLeft;\r\n                }\r\n                if (x < 10 && cellEl.cellIndex !== 0) {\r\n                    callback.call(this, cellEl.previousElementSibling);\r\n                } else if (x > cellEl.clientWidth - 10) {\r\n                    callback.call(this, cellEl);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Make column resizing play nice with touch. http://stackoverflow.com/questions/28218888/touch-event-handler-overrides-click-handlers\r\n         * @param {Event} e Event that triggered the handler.\r\n         */\r\n        touchHandler: function(e) {\r\n            var mouseEvent = null;\r\n            var simulatedEvent = document.createEvent('MouseEvent');\r\n            var touch = e.changedTouches[0];\r\n\r\n            switch (e.type) {\r\n                case 'touchstart':\r\n                    mouseEvent = 'mousedown';\r\n                    this.totalDistance = 0;\r\n                    this.lastSeenAt.x = touch.clientX;\r\n                    this.lastSeenAt.y = touch.clientY;\r\n                    break;\r\n                case 'touchmove':\r\n                    mouseEvent = 'mousemove';\r\n                    break;\r\n                case 'touchend':\r\n                    if (this.lastSeenAt.x) {\r\n                        this.totalDistance += Math.sqrt(Math.pow(this.lastSeenAt.y - touch.clientY, 2) + Math.pow(this.lastSeenAt.x - touch.clientX, 2));\r\n                    }\r\n                    mouseEvent = this.totalDistance > 5 ? 'mouseup' : 'click';\r\n                    this.lastSeenAt = { x: null, y: null };\r\n                    break;\r\n            }\r\n\r\n            simulatedEvent.initMouseEvent(mouseEvent, true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);\r\n            touch.target.dispatchEvent(simulatedEvent);\r\n            e.preventDefault();\r\n        },\r\n\r\n        /**\r\n         * Get the value for the field coverted to the correct data type.\r\n         * @param {string} value - Value to convert.\r\n         * @returns {*} Converted value.\r\n         */\r\n        getFieldValue: function(value) {\r\n            if ($.isNull(value)) {\r\n                return null;\r\n            }\r\n            return value.getMonth ? value : value.toLowerCase ? value.toLowerCase() : value;\r\n        },\r\n\r\n        /**\r\n         * Get the formatted value to display for the field.\r\n         * @param {string} value - Value to format.\r\n         * @param {string} dataType - Data type to format to.\r\n         * @returns {*} Converted value.\r\n         */\r\n        getDisplayValue: function(value, dataType) {\r\n            if (!dataType || $.isNull(value)) {\r\n                return value;\r\n            }\r\n\r\n            var val = value;\r\n            if (dataType === 'currency') {\r\n                val = $.accounting.formatMoney(val, this.opts.displayCurrencyFormat);\r\n            } else if (dataType === 'date') {\r\n                val = $.fecha.format(val, this.opts.displayDateFormat);\r\n            }\r\n            return val;\r\n        },\r\n\r\n        /**\r\n         * Default sorting function for the data - resets to order when data was loaded.\r\n         * @param {Object} a - First object to compare.\r\n         * @param {Object} b - Object to compare to.\r\n         * @returns {number} 1 if a comes first, -1 if b comes first, else 0.\r\n         */\r\n        defaultCompare: function(a, b) {\r\n            return a._index > b._index ? 1 : a._index < b._index ? -1 : 0;\r\n        },\r\n\r\n        /**\r\n         * Multi-sorting function for the data.\r\n         * @param {Object} a - First object to compare.\r\n         * @param {Object} b - Object to compare to.\r\n         * @returns {number} 1 if a comes first, -1 if b comes first, else 0.\r\n         */\r\n        compare: function(a, b) {\r\n            var sorting = this.sorting;\r\n            var i = 0, len = sorting.length;\r\n            for (; i < len; i++) {\r\n                var sort = sorting[i];\r\n                var aa = this.getFieldValue(a[sort.field]);\r\n                var bb = this.getFieldValue(b[sort.field]);\r\n\r\n                if (aa === null) {\r\n                    return 1;\r\n                }\r\n                if (bb === null) {\r\n                    return -1;\r\n                }\r\n                if (aa < bb) {\r\n                    return sort.dir === 'ASC' ? -1 : 1;\r\n                }\r\n                if (aa > bb) {\r\n                    return sort.dir === 'ASC' ? 1 : -1;\r\n                }\r\n            }\r\n            return 0;\r\n        },\r\n\r\n        /**\r\n         * Filter an array of objects to find objects where value contains the value of `this`\r\n         * @param {Object} obj - Object to search in.\r\n         * @returns {bool} True if object contains `this`.\r\n         */\r\n        filterArray: function(obj) {\r\n            for (var key in obj) {\r\n                if (key.indexOf('_') < 0 && obj.hasOwnProperty(key) && (obj[key] + '').toLowerCase().indexOf(this) > -1) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Convert a style with 'px' to a float.\r\n         * @param {string} val - CSS style to convert.\r\n         * @returns {number} Numeric value.\r\n         */\r\n        pixelToFloat: function(val) {\r\n            return val.replace('px', '').replace('%', '') * 1.0;\r\n        },\r\n\r\n        /**\r\n         * Build the table header tags.\r\n         * @param {Object} obj - Column to build the tag for.\r\n         * @returns {Object} Mithril TH node.\r\n         */\r\n        tableHeaders: function(obj) {\r\n            var field = obj.field;\r\n            var thAttrs = { class: obj.classes || '' }, divAttrs = {};\r\n\r\n            var divContent = [obj.label || field];\r\n            if ($.isUndefined(obj.sortable) || obj.sortable === true) {\r\n                var val = $.findByKey(this.sorting, 'field', field);\r\n                divContent.push(m('i.float-right.dash', { class: val ? (val.dir === 'ASC' ? 'dash-sort-up' : 'dash-sort-down') : this.opts.editable ? 'dash-sort' : '' }));\r\n                if (this.opts.editable) {\r\n                    divAttrs = { onclick: this.changeSort.bind(this, field, obj.dataType.toLowerCase()) };\r\n                }\r\n            } else {\r\n                thAttrs.class += ' disabled';\r\n            }\r\n            if (this.opts.editable) {\r\n                thAttrs.onmousedown = this.onHeaderMouseDown.bind(this);\r\n            }\r\n            return m('th', thAttrs, [m('div', divAttrs, divContent)]);\r\n        },\r\n\r\n        /**\r\n         * Build the view that actually shows the table.\r\n         * @returns {Object}  Mithril DIV node.\r\n         */\r\n        view: function() {\r\n            return m('.container-fluid.data-table', [\r\n                !this.opts.editable ? m('span#table-items-per-page') :\r\n                    m('.form-inline.pb-2', [\r\n                        m('.col-4',\r\n                            this.opts.searchable ? m('.input-group', [\r\n                                m('span.input-group-prepend', m('i.dash.dash-search.input-group-text')),\r\n                                m('input.form-control', { type: 'text', oninput: this.setSearchQuery.bind(this), value: this.searchQuery, disabled: this.loading })\r\n                            ]) : null\r\n                        ),\r\n                        m('.col-4', this.opts.headerButtons ? m('.float-right', this.opts.headerButtons) : null),\r\n                        m('.col-4',\r\n                            m('.input-group', [\r\n                                m('span.input-group-prepend', m('span.input-group-text', this.opts.resources.perPage)),\r\n                                m('select.form-control.custom-select', {\r\n                                    id: 'table-items-per-page', onchange: this.setItemsPerPage.bind(this),\r\n                                    value: this.itemsPerPage, disabled: this.loading\r\n                                }, this.pageOptions)\r\n                            ])\r\n                        )\r\n                    ]),\r\n                m('.table-scrollable', { class: this.opts.editable ? '' : ' table-no-edit' }, [\r\n                    m('.table-area', { onscroll: this.onScroll.bind(this) }, [\r\n                        m('table.table.table-hover.table-sm.table-striped.table-data-table', [\r\n                            m('colgroup.table-column-group', this.colGroups),\r\n                            m('thead', [m('tr', this.opts.columns.map(this.tableHeaders.bind(this)))]),\r\n                            m('tbody', this.tableBodyView())\r\n                        ])\r\n                    ])\r\n                ]),\r\n                this.tableFooterView()\r\n            ]);\r\n        },\r\n\r\n        /**\r\n         * Build a single table cell.\r\n         * @param {Object} obj - Table record to build cell for.\r\n         * @param {number} index - Row index of this row.\r\n         * @param {Object} column - Column to build cell for.\r\n         * @returns {Object} Mithril TD node.\r\n         */\r\n        tableCellView: function(obj, index, column) {\r\n            return m('td', this.columnRenderer[column.field](obj, column, index));\r\n        },\r\n\r\n        /**\r\n         * Build a table row.\r\n         * @param {Object} obj - Table record to build row for.\r\n         * @param {number} index - Row index of this row.\r\n         * @returns {Object} Mithril TR node.\r\n         */\r\n        tableRowView: function(obj, index) {\r\n            return m('tr', { key: obj._index }, this.opts.columns.map(this.tableCellView.bind(this, obj, index)));\r\n        },\r\n\r\n        /**\r\n         * Build the table footer nodes\r\n         * @returns {Object} Mithril TR node(s).\r\n         */\r\n        tableBodyView: function() {\r\n            if (this.loading) {\r\n                return m('tr', m('td', { colspan: this.opts.columns.length }, m('.table-spinner', [\r\n                    m('.rect1', ''), m('.rect2', ''), m('.rect3', ''), m('.rect4', ''), m('.rect5', '')\r\n                ])));\r\n            }\r\n            if (this.loadingError) {\r\n                return m('tr.table-loading-error', m('td', { colspan: this.opts.columns.length }, [\r\n                    m('.table-loading-error-message', this.opts.resources.loadingError),\r\n                    m('.btn.btn-info', { onclick: this.refresh.bind(this) }, this.opts.resources.tryAgain)\r\n                ]));\r\n            }\r\n            if (this.filteredTotal === 0) {\r\n                return m('tr', [m('td', { colspan: this.opts.columns.length }, this.opts.resources.noData)]);\r\n            }\r\n            return this.results.map(this.tableRowView.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Build the table footer nodes.\r\n         * @returns {Object} Mithril DIV node.\r\n         */\r\n        tableFooterView: function() {\r\n            if (this.loading || this.loadingError) {\r\n                return null;\r\n            }\r\n\r\n            var currentPage = (this.currentStartItem + this.itemsPerPage) / this.itemsPerPage;\r\n            if (this.opts.pageDropdown) {\r\n                // limit page dropdown to 10000 options\r\n                var max = Math.min(this.pageTotal, 10000);\r\n                var optionList = [max], i = max;\r\n                while (i > 0) {\r\n                    optionList[i] = m('option', { value: i }, i);\r\n                    --i;\r\n                }\r\n            }\r\n\r\n            var res = this.opts.resources;\r\n            return m('.row.p-2', [\r\n                m('.col.btn-toolbar', { class: this.filteredTotal > this.itemsPerPage ? '' : ' invisible' }, [\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.firstPage, onclick: this.moveToPage.bind(this, -1, true)\r\n                    }, m('i.dash.dash-to-start-alt')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.previousPage, onclick: this.moveToPage.bind(this, -1, false)\r\n                    }, m('i.dash.dash-to-start')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.nextPage, onclick: this.moveToPage.bind(this, 1, false)\r\n                    }, m('i.dash.dash-to-end')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.lastPage, onclick: this.moveToPage.bind(this, 1, true)\r\n                    }, m('i.dash.dash-to-end-alt'))\r\n                ]),\r\n                m('.col', { class: this.filteredTotal > this.itemsPerPage ? '' : ' invisible' },\r\n                    !this.opts.pageDropdown ? null : m('.col-8.offset-2',\r\n                        m('.input-group', [\r\n                            m('span.input-group-prepend', m('span.input-group-text', res.page)),\r\n                            m('select.form-control.custom-select', { onchange: this.changePage.bind(this), value: currentPage }, optionList)\r\n                        ])\r\n                    )\r\n                ),\r\n                m('.col.text-right.my-auto', res.showing\r\n                    .replace('{0}', Math.min(this.currentStartItem + 1, this.filteredTotal))\r\n                    .replace('{1}', Math.min(this.currentStartItem + this.itemsPerPage, this.filteredTotal))\r\n                    .replace('{2}', this.filteredTotal)\r\n                )\r\n            ]);\r\n        },\r\n\r\n        /**\r\n         * Render the view.\r\n         */\r\n        run: function() {\r\n            var self = this;\r\n            if (!this.data) {\r\n                self.loadData();\r\n            }\r\n            m.mount(self.content, {\r\n                view: self.view.bind(self),\r\n                onupdate: function() {\r\n                    self.setLayout();\r\n                    self.updateLayout();\r\n                    $.dialogs.processContent(self.table);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    return Table;\r\n});\r\n","/*!\r\n * Wraps functionality needed for creating charts using Chart.js.\r\n */\r\n(function(root, factory) {\r\n    root.DashChart = factory(root.$, root.Alertify, root.Chart);\r\n})(this, function($, Alertify, Chart) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare DashChart class.\r\n     * @param {Node} content - DOM node that contains the chart.\r\n     * @param {Node} canvas - Canvas element to display the chart in.\r\n     * @param {bool} showLegend - Show or hide the chart legend.\r\n     * @param {Function} dataFn - Function to call if after loading data. Runs before other functions.\r\n     * @param {Function} errorFn - Function to call if an error occurs loading data.\r\n     * @param {Function} toggleExportFn - Function to enable/disable export.\r\n     */\r\n    var DashChart = function(content, showLegend, dataFn, errorFn, toggleExportFn) {\r\n        this.content = content;\r\n        this.url = content.getAttribute('data-url');\r\n        this.canvas = $.get('.chart-canvas', content);\r\n        this.showLegend = $.coalesce(showLegend, true);\r\n        this.dataFn = dataFn;\r\n        this.errorFn = errorFn;\r\n        this.toggleExportFn = toggleExportFn;\r\n        this.chart = null;\r\n        this.run();\r\n    };\r\n\r\n    /**\r\n     * Declare DashChart class methods.\r\n     */\r\n    DashChart.prototype = {\r\n        /**\r\n         * Generate a random number within range.\r\n         * @param {number[]} range - Min and max value.\r\n         * @returns {number} Random number.\r\n         */\r\n        randomWithin: function(range) {\r\n            return Math.floor(range[0] + Math.random() * (range[1] + 1 - range[0]));\r\n        },\r\n\r\n        /**\r\n         * Generates a random color and a lighter partner color.\r\n         * @returns {string[]} Color codes.\r\n         */\r\n        randomColor: function() {\r\n            var hsl = [this.randomWithin([0, 360]), this.randomWithin([50, 100]), this.randomWithin([30, 80])];\r\n            return [\r\n                'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%, 1)',\r\n                'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%, .2)'\r\n            ];\r\n        },\r\n\r\n        /**\r\n         * Generates an array of random colors.\r\n         * @param {number} cnt - Number of colors to generate.\r\n         * @returns {string[]} Array of color codes.\r\n         */\r\n        randomColors: function(cnt) {\r\n            var result = new Array(cnt);\r\n            for (var i = 0; i < cnt; i++) {\r\n                result[i] = this.randomColor()[0];\r\n            }\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Parse a hex color into a hsla color and a lighter partner color.\r\n         * @param {string} hex - Hex color code with leading '#'.\r\n         * @returns {string[]} Color codes.\r\n         */\r\n        parseColor: function(hex) {\r\n            if (!hex) {\r\n                return this.randomColor();\r\n            }\r\n            var hsl = $.colors.rgb2hsl($.colors.hex2rgb(hex));\r\n            return [\r\n                'hsla(' + (hsl[0] * 360).toFixed(0) + ',' + (hsl[1] * 100).toFixed(0) + '%,' + (hsl[2] * 100).toFixed(0) + '%, 1)',\r\n                'hsla(' + (hsl[0] * 360).toFixed(0) + ',' + (hsl[1] * 100).toFixed(0) + '%,' + (hsl[2] * 100).toFixed(0) + '%, .2)'\r\n            ];\r\n        },\r\n\r\n        /**\r\n         * Build the chart.\r\n         */\r\n        run: function() {\r\n            var self = this;\r\n\r\n            $.show($.get('.chart-spinner', self.content));\r\n            $.hide($.get('.chart-error', self.content));\r\n            $.hide(self.canvas);\r\n            if (self.toggleExportFn) {\r\n                self.toggleExportFn(false);\r\n            }\r\n\r\n            $.ajax({\r\n                method: 'POST',\r\n                url: self.url,\r\n                block: false\r\n            }, function(data) {\r\n                if ($.isFunction(self.dataFn)) {\r\n                    if (!self.dataFn(data)) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                var ranges = $.isArray(data.ranges) ? data.ranges : [data];\r\n                if (!ranges.some(function(x) { return x.rows && x.rows.length; })) {\r\n                    $.hide($.get('.chart-spinner', self.content));\r\n                    Alertify.error($.resx('chart.noData'));\r\n                    return;\r\n                }\r\n\r\n                $.hide($.get('.chart-spinner', self.content));\r\n                $.hide($.get('.chart-error', self.content));\r\n                $.show(self.canvas);\r\n                if (self.toggleExportFn) {\r\n                    self.toggleExportFn(true);\r\n                }\r\n\r\n                if (self.chart) {\r\n                    // this code is used for refreshing dashboard chart data, but won't be used on the chart dialog\r\n                    ranges.forEach(function(x, i) {\r\n                        self.chart.data.datasets[i].data = ranges[i].rows;\r\n                        self.chart.data.datasets[i].label = ranges[i].yTitle;\r\n                    });\r\n                    self.chart.data.labels = ranges[0].labels;\r\n                    self.chart.update();\r\n                } else {\r\n                    var scales = {};\r\n                    var tooltips = { callbacks: {} };\r\n                    if (ranges[0].xType === 'currency') {\r\n                        var currencyFormat = $.accounting.parseFormat(ranges[0].currencyFormat);\r\n                        scales.xAxes = [{\r\n                            ticks: {\r\n                                callback: function(value) {\r\n                                    return $.accounting.formatMoney(value, currencyFormat);\r\n                                }\r\n                            }\r\n                        }];\r\n                        tooltips.callbacks.title = function(tooltipItems, data) {\r\n                            var title = '';\r\n                            if (tooltipItems.length > 0) {\r\n                                if (tooltipItems[0].xLabel) {\r\n                                    title = tooltipItems[0].xLabel;\r\n                                } else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n                                    title = data.labels[tooltipItems[0].index];\r\n                                }\r\n                                title = $.accounting.formatMoney(title, currencyFormat);\r\n                            }\r\n                            return title;\r\n                        };\r\n                    } else if (ranges[0].xType === 'date') {\r\n                        var dateFormat = ranges[0].dateFormat;\r\n                        scales.xAxes = [{\r\n                            ticks: {\r\n                                callback: function(value) {\r\n                                    return $.fecha.format(new Date(value), dateFormat);\r\n                                }\r\n                            }\r\n                        }];\r\n                        tooltips.callbacks.title = function(tooltipItems, data) {\r\n                            var title = '';\r\n                            if (tooltipItems.length > 0) {\r\n                                if (tooltipItems[0].xLabel) {\r\n                                    title = tooltipItems[0].xLabel;\r\n                                } else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n                                    title = data.labels[tooltipItems[0].index];\r\n                                }\r\n                                title = $.fecha.format(new Date(title), dateFormat);\r\n                            }\r\n                            return title;\r\n                        };\r\n                    }\r\n\r\n                    var chartType = data.type.toLowerCase();\r\n                    var isRadial = chartType === 'pie' || chartType === 'doughnut';\r\n                    var datasets = [];\r\n                    scales.yAxes = [];\r\n                    ranges.forEach(function(x, i) {\r\n                        var color = self.parseColor(x.color);\r\n                        datasets.push({\r\n                            backgroundColor: color[0],\r\n                            borderColor: 'rgb(255, 255, 255)',\r\n                            borderWidth: 2,\r\n                            data: x.rows,\r\n                            label: x.yTitle,\r\n                            yAxisID: 'y-axis-' + i\r\n                        });\r\n\r\n                        var ticks = {};\r\n                        if (x.yType === 'currency') {\r\n                            var currencyFormat = $.accounting.parseFormat(x.currencyFormat);\r\n                            ticks.callback = function(value) {\r\n                                return $.accounting.formatMoney(value, currencyFormat);\r\n                            };\r\n                            tooltips.callbacks.label = function(item) {\r\n                                return $.accounting.formatMoney(item.yLabel, currencyFormat);\r\n                            };\r\n                        } else if (x.yType === 'date') {\r\n                            var dateFormat = x.dateFormat;\r\n                            ticks.callback = function(value) {\r\n                                return $.fecha.format(new Date(value), dateFormat);\r\n                            };\r\n                            tooltips.callbacks.label = function(item) {\r\n                                return $.fecha.format(new Date(item.yLabel), dateFormat);\r\n                            };\r\n                        }\r\n\r\n                        if (!isRadial) {\r\n                            scales.yAxes.push({\r\n                                id: 'y-axis-' + i,\r\n                                position: i === 0 ? 'left' : 'right',\r\n                                ticks: ticks,\r\n                                gridLines: {\r\n                                    color: color[1]\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    var chartData = {\r\n                        type: chartType === 'horizontalbar' ? 'horizontalBar' : chartType,\r\n                        options: {\r\n                            responsive: true,\r\n                            scales: isRadial ? null : scales,\r\n                            tooltips: tooltips,\r\n                            legend: { display: self.showLegend }\r\n                        },\r\n                        data: {\r\n                            labels: ranges[0].labels,\r\n                            datasets: datasets\r\n                        }\r\n                    };\r\n\r\n                    if (isRadial) {\r\n                        chartData.data.datasets[0].backgroundColor = self.randomColors(ranges[0].rows.length);\r\n                    }\r\n\r\n                    self.chart = new Chart(self.canvas.getContext('2d'), chartData);\r\n                }\r\n            }, function() {\r\n                if ($.isFunction(self.errorFn)) {\r\n                    if (!self.errorFn()) {\r\n                        return;\r\n                    }\r\n                }\r\n                $.hide($.get('.chart-spinner', self.content));\r\n                $.show($.get('.chart-error', self.content));\r\n                if (self.toggleExportFn) {\r\n                    self.toggleExportFn(false);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Destroy the chart.\r\n         */\r\n        destroy: function() {\r\n            $.destroy(this.chart);\r\n        }\r\n    };\r\n\r\n    return DashChart;\r\n});\r\n","/*!\r\n * Mithril based form component. For repetitive form elements.\r\n */\r\n(function(root, factory) {\r\n    root.Form = factory(root.m, root.$, root.Alertify, root.Help);\r\n})(this, function(m, $, Alertify, Help) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare form class.\r\n     * @param {Object} opts - Form settings\r\n     * @param {Object[]} records - Array of objects the form will display/update.\r\n     */\r\n    function Form(opts, records) {\r\n        opts = opts || {};\r\n        this.opts = $.extend({\r\n            container: null,\r\n            id: null,\r\n            columns: null,\r\n            wantsHelp: false,\r\n            appendRecord: false,\r\n            resx: {\r\n                deleteRecord: $.resx('delete'),\r\n                confirmDelete: $.resx('confirmDelete'),\r\n                confirmDeleteAll: $.resx('confirmDeleteAll'),\r\n                areYouSure: $.resx('areYouSure'),\r\n                moveUp: $.resx('moveUp'),\r\n                moveDown: $.resx('moveDown'),\r\n                help: $.resx('help')\r\n            }\r\n        }, opts);\r\n\r\n        this.container = $.get(this.opts.container);\r\n        this.records = $.isArray(records) ? records.map(function(x, i) { x._index = i; return x; }) : [];\r\n        this.addedCount = 0;\r\n        this.changed = false;\r\n    }\r\n\r\n    Form.prototype = {\r\n        /**\r\n         * Get the value of an element.\r\n         * @param {*} e - Event that triggered the value change, or the new value.\r\n         * @returns {string} Value of the element.\r\n         */\r\n        targetVal: function(e) {\r\n            return e && e.target ? e.target.value : e;\r\n        },\r\n\r\n        /**\r\n         * Set the value of a field on a record.\r\n         * @param {number} index - Record index.\r\n         * @param {string} field - Name of field to set.\r\n         * @param {Event} e - Event that triggered the change.\r\n         * @returns {bool} True if value changed, else false.\r\n         */\r\n        set: function(index, field, e) {\r\n            var val = this.targetVal(e);\r\n            if (this.opts.columns[field].type === 'int') {\r\n                val = $.isNull(val) ? null : val * 1;\r\n            }\r\n\r\n            if ($.isFunction(this.opts.columns[field].setter)) {\r\n                this.opts.columns[field].setter.call(this, index, field, e);\r\n            } else {\r\n                if (this.records[index][field] !== val) {\r\n                    this.records[index][field] = val;\r\n                    this.changed = true;\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Add a new record.\r\n         */\r\n        addRecord: function() {\r\n            --this.addedCount;\r\n            var obj = $.clone(this.opts.newRecord);\r\n            obj._index = this.addedCount;\r\n            if (this.opts.appendRecord) {\r\n                this.records.push(obj);\r\n            } else {\r\n                this.records.unshift(obj);\r\n            }\r\n            this.changed = true;\r\n        },\r\n\r\n        /**\r\n         * Delete a record.\r\n         * @param {number} index - Record index to delete.\r\n         * @param {Event} e - Event that triggered the delete.\r\n         */\r\n        deleteRecord: function(index, e) {\r\n            var self = this;\r\n            if ($.isFunction(this.opts.deleteFn)) {\r\n                this.opts.deleteFn.call(this, index, e);\r\n            } else {\r\n                // timeout prevents hitting enter on the button to trigger this confirmation from confirming it immediately\r\n                setTimeout(function() {\r\n                    Alertify.confirm(self.opts.resx.areYouSure, function(e) {\r\n                        self.records.splice(index, 1);\r\n                        if ($.isFunction(self.opts.afterDeleteFn)) {\r\n                            self.opts.afterDeleteFn.call(self, index, e);\r\n                        }\r\n                        self.changed = true;\r\n                        self.run();\r\n                    });\r\n                }, 100);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Delete all records.\r\n         */\r\n        deleteAllRecords: function() {\r\n            var self = this;\r\n            setTimeout(function() {\r\n                Alertify.confirm(self.opts.resx.areYouSure, function() {\r\n                    self.records = [];\r\n                    self.changed = true;\r\n                    self.run();\r\n                });\r\n            }, 100);\r\n        },\r\n\r\n        /**\r\n         * Move a record up in the record list.\r\n         * @param {number} index - Index of record to move up.\r\n         */\r\n        moveUp: function(index) {\r\n            var t = this.records[index - 1];\r\n            if (t) {\r\n                this.records[index - 1] = this.records[index];\r\n                this.records[index] = t;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Move a record down in the record list.\r\n         * @param {number} index - Index of record to move down.\r\n         */\r\n        moveDown: function(index) {\r\n            var t = this.records[index + 1];\r\n            if (t) {\r\n                this.records[index + 1] = this.records[index];\r\n                this.records[index] = t;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check if there are any records.\r\n         * @returns {bool} True if there are any records, else false.\r\n         */\r\n        hasRecords: function() {\r\n            return this.records && this.records.length > 0;\r\n        },\r\n\r\n        /**\r\n         * Trigger the click event if the enter or space key is hit.\r\n         * @param {Event} e - Event that triggered this.\r\n         */\r\n        keyInput: function(e) {\r\n            if (e && e.keyCode && (e.keyCode === 13 || e.keyCode === 32)) {\r\n                e.target.onclick.call(this, e);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Create the mithril node to show help wrapped around the provided content.\r\n         * @param {string} helpBody - Content of the help dialog.\r\n         * @param {Object} innerContent - Mithril node for the input that help is for.\r\n         * @returns {Object} Mithril node for input-group if help is enabled, else innerContent.\r\n         */\r\n        withHelp: function(helpBody, innerContent) {\r\n            return m(Help, { message: helpBody, enabled: this.opts.wantsHelp }, innerContent);\r\n        },\r\n\r\n        /**\r\n         * Return the error class if the value isn't valid.\r\n         * @param {string|number} value - Value to check against.\r\n         * @param {bool} requirePositive - Require the value be a positive number.\r\n         * @param {bool} isDate - Check if the value is a valid date.\r\n         * @returns {string}  Error class name if value isn't set, else empty string.\r\n         */\r\n        withError: function(value, requirePositive, isDate) {\r\n            requirePositive = $.coalesce(requirePositive, false);\r\n            isDate = $.coalesce(isDate, false);\r\n            var result = isDate ? $.fecha.parse(value, this.opts.dateFormat) : $.hasValue(value) && (!requirePositive || $.hasPositiveValue(value));\r\n            return result ? '' : ' mform-control-error';\r\n        },\r\n\r\n        /**\r\n         * Add a disabled attribute to the input attributes if isDisabled=true.\r\n         * @param {Object} attrs - Attribute object to update.\r\n         * @param {bool} isDisabled - Is the input diabled or not.\r\n         * @returns {Object} Updated attribute object.\r\n         */\r\n        withDisabled: function(attrs, isDisabled) {\r\n            if (isDisabled) {\r\n                attrs.disabled = true;\r\n            }\r\n            return attrs;\r\n        },\r\n\r\n        /**\r\n         * Add a checked attribute to the input attributes if isChecked=true.\r\n         * @param {Object} attrs - Attribute object to update.\r\n         * @param {bool} isChecked - Is the input checked or not.\r\n         * @returns {Object} Updated attribute object.\r\n         */\r\n        withChecked: function(attrs, isChecked) {\r\n            if (isChecked) {\r\n                attrs.checked = true;\r\n            }\r\n            return attrs;\r\n        },\r\n\r\n        /**\r\n         * Build list of options nodes.\r\n         * @param {Object[]} arr - Array of objects to build options for.\r\n         * @param {*} selectedValue - Value of the selected option. Can be a string, number, or array of either.\r\n         * @param {string} valueKey - Object key that stores the value of the option.\r\n         * @param {string} textKey - Object key that stores the text for the option.\r\n         * @returns {Object[]} Array of mithril option nodes.\r\n         */\r\n        withOptions: function(arr, selectedValue, valueKey, textKey) {\r\n            if (!$.isArray(arr)) {\r\n                return null;\r\n            }\r\n            return arr.map(function(x) {\r\n                var attr = { value: x[valueKey] === 0 ? '' : x[valueKey] };\r\n                if (x[valueKey] === 0) {\r\n                    attr.disabled = true;\r\n                }\r\n                if (x[valueKey] === selectedValue || ($.isArray(selectedValue) && selectedValue.indexOf(x[valueKey]) > -1)) {\r\n                    attr.selected = true;\r\n                }\r\n                return m('option', attr, x[textKey]);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Create the mithril node for the record buttons (move up/move down/delete).\r\n         * @param {number} index - Index of the record to create buttons for.\r\n         * @param {bool} includeMove - Optionally include the move up/down buttons.\r\n         * @returns {Object} Mithril node with buttons.\r\n         */\r\n        buttonView: function(index, includeMove) {\r\n            var btns = [];\r\n            if ($.coalesce(includeMove, false)) {\r\n                btns.push(m('button.btn.btn-sm.btn-secondary', {\r\n                    type: 'button', role: 'button', disabled: index < 1,\r\n                    onclick: this.moveUp.bind(this, index), title: this.opts.resx.moveUp\r\n                }, m('i.dash.dash-up-big.dash-lg.dash-fw'))\r\n                );\r\n                btns.push(m('button.btn.btn-sm.btn-secondary', {\r\n                    type: 'button', role: 'button', disabled: index === this.records.length - 1,\r\n                    onclick: this.moveDown.bind(this, index), title: this.opts.resx.moveDown\r\n                }, m('i.dash.dash-down-big.dash-lg.dash-fw'))\r\n                );\r\n            }\r\n            btns.push(m('button.btn.btn-sm.btn-secondary.confirm-delete-row-button', {\r\n                type: 'button', role: 'button', onclick: this.deleteRecord.bind(this, index), title: this.opts.resx.deleteRecord\r\n            }, m('i.dash.dash-trash.dash-lg.text-danger')));\r\n            return m('.btn-toolbar.float-right', btns);\r\n        },\r\n\r\n        /**\r\n         * Clean up our mess.\r\n         */\r\n        destroy: function() {\r\n            m.mount(this.container, null);\r\n        },\r\n\r\n        /**\r\n         * Build the view that actually shows the form. This is meant to be overridden.\r\n         * @returns {Object}  Mithril DIV node.\r\n         */\r\n        view: function() {\r\n            return m('div');\r\n        },\r\n\r\n        /**\r\n         * Render the view.\r\n         */\r\n        run: function() {\r\n            var self = this;\r\n            m.mount(self.container, {\r\n                view: self.view.bind(self)\r\n            });\r\n        }\r\n    };\r\n\r\n    return Form;\r\n});\r\n","/*!\r\n * Wraps dataset join form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.JoinForm = factory(root.m, root.$, root.Form, root.Autocomplete, root.Help);\r\n})(this, function(m, $, Form, Autocomplete, Help) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the join form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function JoinForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.join-table-wrapper', opts.content),\r\n            columns: {\r\n                joinTypeId: { type: 'int' },\r\n                tableName: { type: 'str' },\r\n                keys: { type: 'str' }\r\n            },\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, tableName: '', joinTypeId: 1, keys: null },\r\n            afterDeleteFn: opts.columnUpdateFn\r\n        }, opts.joins || []);\r\n\r\n        this.joinTypes = opts.joinTypes;\r\n        this.sourceFn = opts.sourceFn;\r\n        this.columnUpdateFn = opts.columnUpdateFn;\r\n    }\r\n\r\n    JoinForm.prototype = Object.create(Form.prototype);\r\n    JoinForm.prototype.constructor = JoinForm;\r\n\r\n    /**\r\n     * Set the table name for the join record, and update the column list.\r\n     * @param {number} index - Index of the record to update.\r\n     * @param {string} value - New table name value\r\n     */\r\n    JoinForm.prototype.setJoinTable = function(index, value) {\r\n        this.set(index, 'tableName', value);\r\n        this.columnUpdateFn();\r\n    };\r\n\r\n    /**\r\n     * Create the view for the joins tab.\r\n     * @returns {Object} Mithril node containing the join form.\r\n     */\r\n    JoinForm.prototype.view = function() {\r\n        var self = this;\r\n\r\n        if (self.isProc) {\r\n            return m('.table-wrapper.p-t-1.col-12', m('.card.bg-info.text-white', m('.card-body', $.resx('dataset.errorProcNoJoins'))));\r\n        }\r\n\r\n        return m('.table-wrapper', [\r\n            m('.row.wrapper-row.pb-1',\r\n                m('.col-12', m('.float-right', [\r\n                    m('button.btn.btn-info.mr-2', { type: 'button', role: 'button', onclick: self.addRecord.bind(self) }, $.resx('add')),\r\n                    m(Help, { enabled: this.opts.wantsHelp, message: $.resx('dataset.joinsText') })\r\n                ]))\r\n            ),\r\n            self.records.map(function(record, index) {\r\n                return m('.row.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: record._index }, [\r\n                    m('input', { type: 'hidden', name: 'DatasetJoin[' + index + '].Id', value: record.id }),\r\n                    m('input', { type: 'hidden', name: 'DatasetJoin[' + index + '].JoinOrder', value: index }),\r\n                    m('.col-3', self.withHelp($.resx('dataset.joinTableText'), m(Autocomplete, {\r\n                        name: 'DatasetJoin[' + index + '].TableName',\r\n                        required: true,\r\n                        placeholder: $.resx('dataset.joinTableName'),\r\n                        value: record.tableName,\r\n                        list: self.sourceFn,\r\n                        onSelect: self.setJoinTable.bind(self, index),\r\n                        onCancel: self.setJoinTable.bind(self, index),\r\n                    }))),\r\n                    m('.col-2', self.withHelp($.resx('dataset.joinTypeText'),\r\n                        m('select.form-control.required.custom-select', {\r\n                            name: 'DatasetJoin[' + index + '].JoinTypeId', class: self.withError(record.joinTypeId),\r\n                            placeholder: $.resx('dataset.joinType'), oninput: self.set.bind(self, index, 'joinTypeId'), value: record.joinTypeId\r\n                        }, self.withOptions(self.joinTypes, record.joinTypeId, 'id', 'name'))\r\n                    )),\r\n                    m('.col-5', self.withHelp($.resx('dataset.joinKeysText'),\r\n                        m('input.form-control.required', {\r\n                            type: 'text', name: 'DatasetJoin[' + index + '].Keys', class: self.withError(record.keys),\r\n                            placeholder: $.resx('dataset.joinKeys'), oninput: self.set.bind(self, index, 'keys'), value: record.keys\r\n                        }))\r\n                    ),\r\n                    m('.col-2', self.buttonView.call(self, index, true))\r\n                ]);\r\n            })\r\n        ]);\r\n    };\r\n\r\n    return JoinForm;\r\n});\r\n","/*!\r\n * Wraps dataset column form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.ColumnForm = factory(root.m, root.$, root.Alertify, root.Form, root.Autocomplete, root.Help);\r\n})(this, function(m, $, Alertify, Form, Autocomplete, Help) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Sort columns by title.\r\n     * @param {Object} a - First column to compare.\r\n     * @param {Object} b - Second column to compare.\r\n     * @returns {bool} True if column a should be before column b.\r\n     */\r\n    var columnTitleSort = function(a, b) {\r\n        var aTitle = a.title.toLowerCase(), bTitle = b.title.toLowerCase();\r\n        return aTitle > bTitle ? 1 : (bTitle > aTitle ? -1 : 0);\r\n    };\r\n\r\n    /**\r\n     * Build the column form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function ColumnForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.column-table-wrapper', opts.content),\r\n            columns: {\r\n                title: { type: 'str' },\r\n                columnName: { type: 'str' },\r\n                dataTypeId: { type: 'int' },\r\n                derived: { type: 'str' },\r\n                filterTypeId: { type: 'int' },\r\n                filterQuery: { type: 'str' },\r\n                link: { type: 'str' },\r\n                isParam: { type: 'int' }\r\n            },\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, title: null, columnName: '', dataTypeId: '', derived: null, filterTypeId: '', filterQuery: null, link: null, isParam: 0, isExpanded: true }\r\n        }, opts.columns || []);\r\n\r\n        this.content = opts.content;\r\n        this.dataTypes = opts.dataTypes;\r\n        this.filterTypes = opts.filterTypes;\r\n        this.sourceFn = opts.sourceFn;\r\n        this.columnFn = opts.columnFn;\r\n        this.selectedSourceFn = opts.selectedSourceFn;\r\n    }\r\n\r\n    ColumnForm.prototype = Object.create(Form.prototype);\r\n    ColumnForm.prototype.constructor = ColumnForm;\r\n\r\n    /**\r\n     * Expand/collapse the fields for a column.\r\n     * @param {Object} column - The column record to expand/collapse.\r\n     */\r\n    ColumnForm.prototype.toggleExpanded = function(column) {\r\n        column.isExpanded = !column.isExpanded;\r\n    };\r\n\r\n    /**\r\n     * Check if the database and primary source are set.\r\n     * @returns {bool} True if a database and a primary source are provided, else false.\r\n     */\r\n    ColumnForm.prototype.checkStatus = function() {\r\n        var database = $.get('.dataset-database', this.content);\r\n        if (!(database && $.hasPositiveValue(database.value))) {\r\n            Alertify.error($.resx('dataset.importErrorDatabaseRequired'));\r\n            return false;\r\n        }\r\n        var primarySource = $.get('.primary-source-autocomplete', this.content);\r\n        if (!(primarySource && primarySource.value)) {\r\n            Alertify.error($.resx('dataset.importErrorPrimarySourceRequired'));\r\n            return false;\r\n        }\r\n        var type = $.get('.dataset-type', this.content);\r\n        if (type && type.value * 1 === 2) {\r\n            Alertify.error($.resx('dataset.importErrorNoProcs'));\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Import columns for the selected tables into the dataset.\r\n     * @param {Event} e - Event that triggered this.\r\n     */\r\n    ColumnForm.prototype.importColumns = function(e) {\r\n        var form = this.content;\r\n        if (!($.hasClass(form, 'dataset-form') && this.checkStatus())) {\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        var database = $.get('.dataset-database');\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-import-url'),\r\n            data: { databaseId: database.value, sources: self.selectedSourceFn() }\r\n        }, function(data) {\r\n            if (!data.columns || data.columns.length === 0) {\r\n                Alertify.error($.resx('dataset.importErrorNoColumns'));\r\n                return;\r\n            }\r\n\r\n            var newColumns = {};\r\n            data.columns.forEach(function(x) {\r\n                newColumns[x.columnName.toLowerCase()] = x;\r\n            });\r\n\r\n            var newRecords = [];\r\n            var existingColumns = [];\r\n            self.records.forEach(function(x) {\r\n                var colName = x.columnName.toLowerCase();\r\n                if (newColumns[colName]) {\r\n                    // record matches - update datatype and add to new list\r\n                    x.dataTypeId = newColumns[colName].dataTypeId;\r\n                    newRecords.push(x);\r\n                    existingColumns.push(colName);\r\n                }\r\n            });\r\n\r\n            data.columns.forEach(function(x) {\r\n                // now add any new columns from server\r\n                if (existingColumns.indexOf(x.columnName.toLowerCase()) === -1) {\r\n                    newRecords.push(x);\r\n                }\r\n            });\r\n\r\n            newRecords.sort(columnTitleSort);\r\n            self.records = newRecords;\r\n\r\n            Alertify.success($.resx('dataset.importSuccess'));\r\n            $.dialogs.focusOnClose.call(e);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Open the confirmation before importing columns.\r\n     * @param {Event} e - Event that triggered this.\r\n     */\r\n    ColumnForm.prototype.import = function(e) {\r\n        if (this.checkStatus()) {\r\n            Alertify.confirm($.resx('dataset.confirmImport'), this.importColumns.bind(this, e), $.dialogs.focusOnClose.bind(e));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Create the node for the column form.\r\n     * @returns {Object} Mithril node containing the form.\r\n     */\r\n    ColumnForm.prototype.view = function() {\r\n        var self = this;\r\n        return m('.table-wrapper', [\r\n            m('.row.wrapper-row.pb-1',\r\n                m('.col-12',\r\n                    m('.float-right', [\r\n                        m('button.btn.btn-info.mr-2', {\r\n                            type: 'button', role: 'button', onclick: self.addRecord.bind(self)\r\n                        }, $.resx('add')),\r\n                        m('button.btn.btn-danger.mr-2', {\r\n                            type: 'button', role: 'button', onclick: self.import.bind(self)\r\n                        }, $.resx('dataset.import')),\r\n                        m(Help, { enabled: this.opts.wantsHelp, message: $.resx('dataset.columnsText') })\r\n                    ])\r\n                )\r\n            ),\r\n            self.records.map(function(record, index) {\r\n                return m('.col-12.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: record._index }, [\r\n                    m('.row', [\r\n                        m('input', { type: 'hidden', name: 'DatasetColumn[' + index + '].Id', value: record.id }),\r\n                        m('.col-4', self.withHelp($.resx('dataset.columnTitleText'), [\r\n                            m('span.input-group-prepend', m('button.btn.btn-secondary', {\r\n                                type: 'button', role: 'button',\r\n                                onclick: self.toggleExpanded.bind(self, record)\r\n                            }, m('i.rn', { class: record.isExpanded ? 'dash-minus' : 'dash-plus' }))),\r\n                            m('input.form-control.required', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].Title', class: self.withError(record.title),\r\n                                placeholder: $.resx('dataset.columnTitle'), oninput: self.set.bind(self, index, 'title'), value: record.title\r\n                            }),\r\n                        ])),\r\n                        m('.col-4', self.withHelp($.resx('dataset.columnNameText'), m(Autocomplete, {\r\n                            name: 'DatasetColumn[' + index + '].ColumnName',\r\n                            required: true,\r\n                            placeholder: $.resx('dataset.columnName'),\r\n                            value: record.columnName,\r\n                            list: self.columnFn,\r\n                            onSelect: self.set.bind(self, index, 'columnName')\r\n                        }))),\r\n                        m('.col-3', self.withHelp($.resx('dataset.dataTypeText'),\r\n                            m('select.form-control.required.custom-select', {\r\n                                name: 'DatasetColumn[' + index + '].DataTypeId', class: self.withError(record.dataTypeId),\r\n                                placeholder: $.resx('dataset.dataType'), oninput: self.set.bind(self, index, 'dataTypeId'), value: record.dataTypeId\r\n                            }, self.withOptions(self.dataTypes, record.dataTypeId, 'id', 'name'))\r\n                        )),\r\n                        m('.col-1', self.buttonView(index, false))\r\n                    ]),\r\n                    m('.row', { class: record.isExpanded ? '' : ' hidden' },\r\n                        m('.col-10.offset-1', self.withHelp($.resx('dataset.derivedText'),\r\n                            m('input.form-control', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].Derived', placeholder: $.resx('dataset.derived'),\r\n                                oninput: self.set.bind(self, index, 'derived'), value: record.derived\r\n                            })\r\n                        ))\r\n                    ),\r\n                    m('.row', { class: record.isExpanded ? '' : ' hidden' }, [\r\n                        m('.col-3.offset-1', self.withHelp($.resx('dataset.filterTypeText'),\r\n                            m('select.form-control.custom-select', {\r\n                                name: 'DatasetColumn[' + index + '].FilterTypeId', class: self.withError(record.filterTypeId),\r\n                                placeholder: $.resx('dataset.filterType'), oninput: self.set.bind(self, index, 'filterTypeId'), value: record.filterTypeId\r\n                            }, self.withOptions(self.filterTypes, record.filterTypeId, 'id', 'name'))\r\n                        )),\r\n                        m('.col-7', self.withHelp($.resx('dataset.queryText'),\r\n                            m('input.form-control', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].FilterQuery', placeholder: $.resx('dataset.query'),\r\n                                oninput: self.set.bind(self, index, 'filterQuery'), value: record.filterQuery, readOnly: record.filterTypeId !== 3\r\n                            }))\r\n                        )\r\n                    ]),\r\n                    m('.row', { class: record.isExpanded ? '' : ' hidden' }, [\r\n                        m('.col-8.offset-1', self.withHelp($.resx('dataset.linkText'),\r\n                            m('input.form-control', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].Link', placeholder: $.resx('dataset.link'),\r\n                                oninput: self.set.bind(self, index, 'link'), value: record.link\r\n                            })\r\n                        )),\r\n                        m('.col-1', [\r\n                            m('label.custom-control.custom-checkbox', [\r\n                                m('input.custom-control-input', self.withChecked({\r\n                                    type: 'checkbox', name: 'DatasetColumn[' + index + '].IsParam', id: 'DatasetColumn_' + index + '_.IsParam',\r\n                                    oninput: self.set.bind(self, index, 'isParam'), value: 'true'\r\n                                }, record.isParam)),\r\n                                m('label.custom-control-label', { for: 'DatasetColumn_' + index + '_.IsParam' }, $.resx('dataset.isParam'))\r\n                            ])\r\n                        ]),\r\n                        m('.col-1', m(Help, { enabled: self.opts.wantsHelp, message: $.resx('dataset.isParamText') }))\r\n                    ])\r\n                ]);\r\n            })\r\n        ]);\r\n    };\r\n\r\n    return ColumnForm;\r\n});\r\n","/*!\r\n * Wraps share form functionality. Used for report and chart.\r\n */\r\n(function(root, factory) {\r\n    root.ShareForm = factory(root.m, root.$, root.Form);\r\n})(this, function(m, $, Form) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the share form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function ShareForm(opts) {\r\n        var container = $.get('.share-table-wrapper', opts.content);\r\n        var formOpts = JSON.parse(container.getAttribute('data-json'));\r\n        container.removeAttribute('data-json');\r\n\r\n        Form.call(this, {\r\n            container: container,\r\n            columns: {\r\n                id: { type: 'int' },\r\n                userId: { type: 'int' },\r\n                roleId: { type: 'int' }\r\n            },\r\n            appendRecord: true,\r\n            wantsHelp: formOpts.wantsHelp,\r\n            newRecord: { id: 0, userId: 0, roleId: 0 }\r\n        }, formOpts.shares || []);\r\n\r\n        this.users = formOpts.userList || [];\r\n        this.roles = formOpts.roleList || [];\r\n        this.formName = opts.formName;\r\n    }\r\n\r\n    ShareForm.prototype = Object.create(Form.prototype);\r\n    ShareForm.prototype.constructor = ShareForm;\r\n\r\n    /**\r\n     * Build the user dropdown attributes.\r\n     * @param {Object} share - Share to build the dropdown for.\r\n     * @param {number} index - Index of the share record.\r\n     * @returns {Object} Dropdown attribute object.\r\n     */\r\n    ShareForm.prototype.userSelectAttr = function(share, index) {\r\n        var res = {\r\n            name: this.formName + '[' + index + '].UserId', class: 'form-control custom-select' + ($.hasPositiveValue(share.userId) || $.hasPositiveValue(share.roleId) ? '' : ' mform-control-error'),\r\n            placeholder: $.resx('selectUser'), onchange: this.set.bind(this, index, 'userId'), value: share.userId\r\n        };\r\n        if ($.hasPositiveValue(share.roleId)) {\r\n            res['disabled'] = true;\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Build the role dropdown attributes.\r\n     * @param {Object} share - Share to build the dropdown for.\r\n     * @param {number} index - Index of the share record.\r\n     * @returns {Object} Dropdown attribute object.\r\n     */\r\n    ShareForm.prototype.roleSelectAttr = function(share, index) {\r\n        var res = {\r\n            name: this.formName + '[' + index + '].RoleId', class: 'form-control custom-select' + ($.hasPositiveValue(share.userId) || $.hasPositiveValue(share.roleId) ? '' : ' mform-control-error'),\r\n            placeholder: $.resx('selectRole'), onchange: this.set.bind(this, index, 'roleId'), value: share.roleId\r\n        };\r\n        if ($.hasPositiveValue(share.userId)) {\r\n            res['disabled'] = true;\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Create the view for the share form.\r\n     * @returns {Object} Mithril node containing the share form.\r\n     */\r\n    ShareForm.prototype.view = function() {\r\n        var self = this;\r\n        return m('.table-wrapper', [\r\n            m('.row', [\r\n                m('.col-5', m('h5', $.resx('user'))),\r\n                m('.col-5', m('h5', $.resx('role'))),\r\n                m('.col-2')\r\n            ]),\r\n            self.records.map(function(share, index) {\r\n                return m('.row.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: share._index }, [\r\n                    m('input', { type: 'hidden', name: self.formName + '[' + index + '].Id', value: share.id }),\r\n                    m('.col-5',\r\n                        m('select', self.userSelectAttr(share, index), self.withOptions(self.users, share.userId, 'id', 'fullName'))\r\n                    ),\r\n                    m('.col-5',\r\n                        m('select', self.roleSelectAttr(share, index), self.withOptions(self.roles, share.roleId, 'id', 'name'))\r\n                    ),\r\n                    m('.col-2', self.buttonView(index, false))\r\n                ]);\r\n            }),\r\n            m('.row.pt-1', [\r\n                m('.col-6.offset-6', [\r\n                    m('.float-right', [\r\n                        m('button.btn.btn-info.mr-2', { type: 'button', role: 'button', onclick: self.addRecord.bind(self) }, $.resx('add')),\r\n                        m('button.btn.btn-warning', {\r\n                            type: 'button', role: 'button', disabled: !self.hasRecords(),\r\n                            onclick: self.hasRecords() ? self.deleteAllRecords.bind(self) : $.noop\r\n                        }, $.resx('deleteAll'))\r\n                    ])\r\n                ])\r\n            ])\r\n        ]);\r\n    };\r\n\r\n    return ShareForm;\r\n});\r\n","/*!\r\n * Wraps report filter form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.FilterForm = factory(root.m, root.$, root.Form, root.Help, root.Alertify, root.DatePicker);\r\n})(this, function(m, $, Form, Help, Alertify, DatePicker) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the filter form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function FilterForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.filter-table-wrapper', opts.content),\r\n            columns: {\r\n                id: { type: 'int' },\r\n                columnId: { type: 'int' },\r\n                operatorId: { type: 'int' },\r\n                criteria: { type: 'str' },\r\n                criteria2: { type: 'str' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, columnId: 0, operatorId: 0, criteria: null, criteria2: null },\r\n            dateFormat: opts.dateFormat\r\n        }, opts.filters || []);\r\n\r\n        this.reportId = opts.reportId;\r\n        this.isProc = opts.isProc;\r\n        this.saveFiltersUrl = opts.saveFiltersUrl;\r\n        this.filterOperators = opts.filterOperators || [];\r\n        this.filterOperatorIds = opts.filterOperatorIds || {};\r\n        this.filterTypes = opts.filterTypes || {};\r\n        this.dateOperators = opts.dateOperators || [];\r\n        this.lookups = opts.lookups || [];\r\n        this.dataTable = opts.dataTable;\r\n        this.columnFn = opts.columnFn;\r\n    }\r\n\r\n    FilterForm.prototype = Object.create(Form.prototype);\r\n    FilterForm.prototype.constructor = FilterForm;\r\n\r\n    /**\r\n     * Build the options select list for the boolean filter.\r\n     */\r\n    FilterForm.prototype.boolOptions = [\r\n        m('option', { value: '' }, $.resx('select')),\r\n        m('option', { value: 1 }, $.resx('report.true')),\r\n        m('option', { value: 0 }, $.resx('report.false'))\r\n    ];\r\n\r\n    /**\r\n     * Set the columnId for a filter and unset the criteria.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered showing the picker.\r\n     */\r\n    FilterForm.prototype.setColumnId = function(index, e) {\r\n        var val = this.targetVal(e) * 1;\r\n        if (this.records[index].columnId !== val) {\r\n            this.records[index].columnId = val;\r\n            this.records[index].operatorId = 0;\r\n            this.records[index].criteria = null;\r\n            this.records[index].criteria2 = null;\r\n            this.run();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the operatorId for a filter and unset the criteria.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered showing the picker.\r\n     */\r\n    FilterForm.prototype.setOperator = function(index, e) {\r\n        this.set(index, 'operatorId', e);\r\n    };\r\n\r\n    /**\r\n     * Set the criteria for a filter.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered the update.\r\n     */\r\n    FilterForm.prototype.setCriteria = function(index, e) {\r\n        var node = e.target;\r\n        if (node && node.nodeName === 'SELECT' && node.hasAttribute('multiple') && node.options) {\r\n            this.records[index].criteriaJson = Array.apply(null, node.options).filter(function(x) { return x.selected; }).map(function(x) { return x.value || x.text; });\r\n        }\r\n        this.set(index, 'criteria', e);\r\n    };\r\n\r\n    /**\r\n     * Set the criteria for a date filter.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {string} field - Name of field to set.\r\n     * @param {Date} val - Date value to save.\r\n     */\r\n    FilterForm.prototype.setDate = function(index, field, val) {\r\n        this.set(index, field, $.fecha.format(val, 'YYYY-MM-DD HH:mm'));\r\n    };\r\n\r\n    /**\r\n     * Save filters to the server then reload the table data.\r\n     */\r\n    FilterForm.prototype.saveFilters = function() {\r\n        if ($.getAll('.mform-control-error', this.container).length > 0) {\r\n            Alertify.error($.resx('fixIt'));\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: 'PUT',\r\n            url: self.saveFiltersUrl,\r\n            data: {\r\n                Id: self.reportId,\r\n                Filters: $.toPascalKeys(self.records)\r\n            }\r\n        }, function(data) {\r\n            if (data) {\r\n                self.changed = false;\r\n                if ($.isArray(data.filters)) {\r\n                    data.filters.forEach(function(x, i) { self.records[i].id = x.id; });\r\n                }\r\n            }\r\n            if (self.dataTable) {\r\n                self.dataTable.loadData();\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Build the criteria input(s) for a filter.\r\n     * @param {number} index - Index of the filter to build.\r\n     * @returns {Object} Mithril node containing the criteria input(s).\r\n     */\r\n    FilterForm.prototype.criteriaView = function(index) {\r\n        var filter = this.records[index];\r\n        var column = $.hasPositiveValue(filter.columnId) ? $.findByKey(this.columnFn(), 'id', filter.columnId) : null;\r\n        if (column === null || !$.hasPositiveValue(filter.operatorId)) {\r\n            return m('input.form-control', { disabled: true, placeholder: $.resx('report.filterCriteria') });\r\n        }\r\n\r\n        var criteria = null;\r\n        var attrs = {\r\n            name: 'ReportFilter[' + index + '].Criteria',\r\n            id: 'ReportFilter_' + index + '_Criteria',\r\n            class: 'form-control required' + this.withError(filter.criteria),\r\n            placeholder: $.resx('report.filterCriteria'),\r\n            oninput: this.setCriteria.bind(this, index)\r\n        };\r\n        if (!this.opts.allowEdit) {\r\n            attrs.disabled = true;\r\n        }\r\n\r\n        if (column.filterTypeId !== this.filterTypes.select) {\r\n            attrs.value = filter.criteria;\r\n        }\r\n        var isRange = filter.operatorId === this.filterOperatorIds.range;\r\n\r\n        switch (column.filterTypeId) {\r\n            case this.filterTypes.boolean:\r\n                attrs.class += ' custom-select';\r\n                criteria = m('select', attrs, this.boolOptions);\r\n                break;\r\n            case this.filterTypes.date:\r\n                if (filter.operatorId === this.filterOperatorIds.dateInterval) {\r\n                    attrs.class += ' custom-select';\r\n                    criteria = m('select', attrs, this.withOptions(this.dateOperators, filter.criteria * 1, 'id', 'name'));\r\n                } else {\r\n                    criteria = m(DatePicker, {\r\n                        name: attrs.name, required: true, date: filter.criteria, disabled: !this.opts.allowEdit,\r\n                        onchange: this.setDate.bind(this, index, 'criteria'), format: this.dateFormat,\r\n                        class: isRange ? 'col' : null\r\n                    });\r\n                }\r\n                break;\r\n            case this.filterTypes.select:\r\n                if (filter.operatorId !== this.filterOperatorIds.equal) {\r\n                    attrs.multiple = true;\r\n                } else {\r\n                    attrs.class += ' custom-select';\r\n                }\r\n\r\n                try {\r\n                    if (filter.criteria.substring(0, 1) === '[') {\r\n                        filter.criteriaJson = JSON.parse(filter.criteria);\r\n                    }\r\n                } catch (e) {\r\n                    // do nothing\r\n                }\r\n\r\n                if (!filter.criteriaJson) {\r\n                    attrs.value = filter.criteria;\r\n                }\r\n\r\n                var lookup = $.isArray(this.lookups[filter.columnId]) ? this.lookups[filter.columnId] : [];\r\n                criteria = m('select', attrs, this.withOptions(lookup, filter.criteriaJson, 'value', 'text'));\r\n                break;\r\n            default:\r\n                attrs.type = column.filterTypeId === this.filterTypes.numeric ? 'number' : 'text';\r\n                criteria = m('input', attrs);\r\n        }\r\n\r\n        if (!isRange) {\r\n            return criteria;\r\n        }\r\n\r\n        var isDatePicker = column.filterTypeId === this.filterTypes.date && filter.operatorId !== this.filterOperatorIds.dateInterval;\r\n        var attrs2 = {\r\n            name: 'ReportFilter[' + index + '].Criteria2',\r\n            id: 'ReportFilter_' + index + '_Criteria2',\r\n            class: 'form-control required' + this.withError(filter.criteria2, null, column.filterTypeId === this.filterTypes.date),\r\n            placeholder: $.resx('report.filterCriteria2'),\r\n            onchange: isDatePicker ? this.setDate.bind(this, index, 'criteria2') : this.set.bind(this, index, 'criteria2'),\r\n            value: filter.criteria2,\r\n            type: column.filterTypeId === this.filterTypes.numeric ? 'number' : 'text'\r\n        };\r\n        if (!this.opts.allowEdit) {\r\n            attrs2.disabled = true;\r\n        }\r\n        var criteriaArr = [criteria];\r\n        if (isDatePicker) {\r\n            criteriaArr.push(m(DatePicker, {\r\n                name: attrs2.name, required: true, date: filter.criteria2, disabled: !this.opts.allowEdit,\r\n                onchange: this.setDate.bind(this, index, 'criteria2'), format: this.dateFormat, class: 'col'\r\n            }));\r\n        } else {\r\n            criteriaArr.push(m('input', attrs2));\r\n        }\r\n        return criteriaArr;\r\n    };\r\n\r\n    /**\r\n     * Build the operator dropdown for a filter.\r\n     * @param {number} index - Index of the filter to build.\r\n     * @param {Object} column - Column that the filter is for.\r\n     * @returns {Object} Mithril node containing the operator select.\r\n     */\r\n    FilterForm.prototype.operatorView = function(index, column) {\r\n        return m('select.form-control.required.custom-select', {\r\n            name: 'ReportFilter[' + index + '].OperatorId', id: 'ReportFilter_' + index + '_OperatorId',\r\n            disabled: !column || !this.opts.allowEdit,\r\n            class: column ? this.withError(this.records[index].operatorId, true) : null,\r\n            placeholder: $.resx('report.filterOperator'), onchange: this.setOperator.bind(this, index), value: this.records[index].operatorId\r\n        }, this.withOptions(column && $.hasPositiveValue(column.filterTypeId) ?\r\n            this.filterOperators[column.filterTypeId] : [{ id: 0, name: $.resx('report.filterOperator') }], this.records[index].operatorId, 'id', 'name')\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Build the filters.\r\n     * @returns {Object[]} Array of Mithril nodes containing the filters.\r\n     */\r\n    FilterForm.prototype.filterView = function() {\r\n        if (!this.columnFn()) {\r\n            return null;\r\n        }\r\n\r\n        var self = this;\r\n        return this.records.map(function(x, index) {\r\n            var column = $.hasPositiveValue(x.columnId) ? $.findByKey(self.columnFn(), 'id', x.columnId) : null;\r\n\r\n            // @todo this isn't setting the `placeholder` default value correctly anymore it seems\r\n            var attrs = {\r\n                name: 'ReportFilter[' + index + '].ColumnId', class: 'form-control custom-select required' + self.withError(x.columnId, true),\r\n                placeholder: $.resx('report.filterColumn'), onchange: self.setColumnId.bind(self, index), value: x.columnId\r\n            };\r\n            if (!self.opts.allowEdit) {\r\n                attrs.disabled = true;\r\n            }\r\n\r\n            var filterColumns = self.isProc ? self.columnFn().filter(function(x) { return x.isParam; }) : self.columnFn();\r\n\r\n            return m('.row.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even' }, [\r\n                m('input', { type: 'hidden', name: 'ReportFilter[' + index + '].Id', value: x.id }),\r\n                m('input', { type: 'hidden', name: 'ReportFilter[' + index + '].DisplayOrder', value: index }),\r\n                m('.col-4',\r\n                    self.withHelp($.resx('report.filterColumnText'), m('select', attrs, self.withOptions(filterColumns, x.columnId, 'id', 'title')))\r\n                ),\r\n                m('.col-2',\r\n                    self.withHelp($.resx('report.filterOperatorText'), self.operatorView.call(self, index, column))\r\n                ),\r\n                m('.col-5',\r\n                    self.withHelp($.resx('report.filterCriteriaText'), self.criteriaView.call(self, index))\r\n                ),\r\n                m('.col-1', self.opts.allowEdit ? self.buttonView.call(self, index, false) : null)\r\n            ]);\r\n        });\r\n    };\r\n\r\n    /**\r\n    * Create the view for the share form.\r\n    * @returns {Object} Mithril node containing the share form.\r\n    */\r\n    FilterForm.prototype.view = function() {\r\n        return [\r\n            this.filterView(),\r\n            this.opts.allowEdit ? m('.row.pt-1', [\r\n                m('.col-6', m('button.btn.btn-primary', {\r\n                    type: 'button', role: 'button', onclick: this.saveFilters.bind(this)\r\n                }, $.resx('save'))),\r\n                m('.col-6', [\r\n                    m('.float-right', [\r\n                        m('button.btn.btn-info.mr-2', {\r\n                            type: 'button', role: 'button', onclick: this.addRecord.bind(this),\r\n                        }, $.resx('add')),\r\n                        m('button.btn.btn-warning.mr-2', {\r\n                            type: 'button', role: 'button', disabled: !this.hasRecords(),\r\n                            onclick: this.hasRecords() ? this.deleteAllRecords.bind(this) : $.noop\r\n                        }, $.resx('deleteAll')),\r\n                        m(Help, { enabled: this.opts.wantsHelp, message: $.resx('report.filterText') })\r\n                    ])\r\n                ])\r\n            ]) : null\r\n        ];\r\n    };\r\n\r\n    return FilterForm;\r\n});\r\n","/*!\r\n * Wraps report group form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.GroupForm = factory(root.m, root.$, root.Form, root.Help, root.Alertify);\r\n})(this, function(m, $, Form, Help, Alertify) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the group form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function GroupForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.group-table-wrapper', opts.content),\r\n            columns: {\r\n                id: { type: 'int' },\r\n                columnId: { type: 'int' },\r\n                operatorId: { type: 'int' },\r\n                criteria: { type: 'str' },\r\n                criteria2: { type: 'str' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, columnId: 0, displayOrder: 0 }\r\n        }, opts.groups || []);\r\n\r\n        this.reportId = opts.reportId;\r\n        this.isProc = opts.isProc;\r\n        this.saveGroupsUrl = opts.saveGroupsUrl;\r\n        this.aggregator = opts.aggregatorId === 0 ? '' : opts.aggregatorId;\r\n        this.aggregators = opts.aggregators || [];\r\n        this.dataTable = opts.dataTable;\r\n        this.columnFn = opts.columnFn;\r\n    }\r\n\r\n    GroupForm.prototype = Object.create(Form.prototype);\r\n    GroupForm.prototype.constructor = GroupForm;\r\n\r\n    /**\r\n     * Save groups to the server then reload the table data.\r\n     */\r\n    GroupForm.prototype.saveGroups = function() {\r\n        if ($.getAll('.mform-control-error', this.container).length > 0) {\r\n            Alertify.error($.resx('fixIt'));\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: 'PUT',\r\n            url: self.saveGroupsUrl,\r\n            data: {\r\n                Id: self.reportId,\r\n                GroupAggregator: self.aggregator === '' ? 0 : self.aggregator * 1,\r\n                Groups: $.toPascalKeys(self.records)\r\n            }\r\n        }, function(data) {\r\n            if (data) {\r\n                if ($.isArray(data.groups)) {\r\n                    data.groups.forEach(function(x, i) { self.records[i].id = x.id; });\r\n                }\r\n            }\r\n            if (self.dataTable) {\r\n                self.dataTable.loadData();\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Set the aggregator property.\r\n     * @param {Event} e - Event that triggered the function.\r\n     */\r\n    GroupForm.prototype.setAggregator = function(e) {\r\n        this.aggregator = this.targetVal(e);\r\n    };\r\n\r\n    /**\r\n     * Build the groups.\r\n     * @returns {Object[]} Array of Mithril nodes containing the groups.\r\n     */\r\n    GroupForm.prototype.groupView = function() {\r\n        if (!this.columnFn()) {\r\n            return null;\r\n        }\r\n\r\n        var self = this;\r\n        return this.records.map(function(x, index) {\r\n            x.displayOrder = index;\r\n            var attrs = {\r\n                name: 'ReportGroup[' + index + '].ColumnId', class: 'form-control custom-select required' + self.withError(x.columnId, true),\r\n                placeholder: $.resx('report.groupColumn'), onchange: self.set.bind(self, index, 'columnId'), value: x.columnId\r\n            };\r\n            if (!self.opts.allowEdit) {\r\n                attrs.disabled = true;\r\n            }\r\n            return m('.row.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even' }, [\r\n                m('input', { type: 'hidden', name: 'ReportGroup[' + index + '].Id', value: x.id }),\r\n                m('input', { type: 'hidden', name: 'ReportGroup[' + index + '].DisplayOrder', value: index }),\r\n                m('.col-10', [\r\n                    m('select', attrs, self.withOptions(self.columnFn(), x.columnId, 'id', 'title'))\r\n                ]),\r\n                m('.col-2', self.opts.allowEdit ? self.buttonView.call(self, index, true) : null)\r\n            ]);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Build the group form.\r\n     * @returns {Object} Mithril node containing the form.\r\n     */\r\n    GroupForm.prototype.view = function() {\r\n        if (this.isProc) {\r\n            return m('.table-wrapper.p-t-1.col-12', m('.card.card-info', m('.card-body', $.resx('report.errorProcNoGroups'))));\r\n        }\r\n\r\n        var attrs = {\r\n            name: 'Report.Aggregator', class: 'form-control custom-select', placeholder: $.resx('report.aggregator'),\r\n            onchange: this.setAggregator.bind(this), value: this.aggregator\r\n        };\r\n        if (!this.opts.allowEdit) {\r\n            attrs.disabled = true;\r\n        }\r\n        return m('.col-12.table-wrapper', m('.row', [\r\n            m('.col-2.mt-1', [\r\n                m('.row.form-group', [\r\n                    m('select', attrs, this.withOptions(this.aggregators, this.aggregator, 'id', 'name'))\r\n                ]),\r\n                this.opts.allowEdit ? m('.row.mt-1', m('button.btn.btn-primary', {\r\n                    type: 'button', role: 'button', onclick: this.saveGroups.bind(this)\r\n                }, $.resx('save'))) : null\r\n            ]),\r\n            m('.col-9.offset-1.mt-1', [\r\n                this.groupView(),\r\n                this.opts.allowEdit ? m('.row.pt-1', [\r\n                    m('.col-6.offset-6', [\r\n                        m('.btn-toolbar.float-right', [\r\n                            m('button.btn.btn-info.mr-1', {\r\n                                type: 'button', role: 'button', onclick: this.addRecord.bind(this)\r\n                            }, $.resx('add')),\r\n                            m('button.btn.btn-warning', {\r\n                                type: 'button', role: 'button', disabled: !this.hasRecords(),\r\n                                onclick: this.hasRecords() ? this.deleteAllRecords.bind(this) : $.noop\r\n                            }, $.resx('deleteAll')),\r\n                            m(Help, { enabled: this.opts.wantsHelp, message: $.resx('report.groupText') })\r\n                        ])\r\n                    ])\r\n                ]) : null\r\n            ])\r\n        ]));\r\n    };\r\n\r\n    return GroupForm;\r\n});\r\n","/*!\r\n * Wraps chart range form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.RangeForm = factory(root.m, root.$, root.Form, root.Help, root.Alertify, root.DashChart, root.ColorPicker);\r\n})(this, function(m, $, Form, Help, Alertify, DashChart, ColorPicker) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the range form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function RangeForm(opts) {\r\n        var ranges = opts.ranges || [];\r\n        ranges = opts.ranges.map(function(x) { x.isExpanded = false; return x; });\r\n\r\n        Form.call(this, {\r\n            container: $.get('.range-table-wrapper', opts.content),\r\n            columns: {\r\n                id: { type: 'int' },\r\n                reportId: { type: 'int' },\r\n                xAxisColumnId: { type: 'int' },\r\n                yAxisColumnId: { type: 'int' },\r\n                aggregatorId: { type: 'int' },\r\n                dateIntervalId: { type: 'int' },\r\n                color: { type: 'string' },\r\n                displayOrder: { type: 'int' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, reportId: 0, xAxisColumnId: 0, yAxisColumnId: 0, aggregatorId: 0, dateIntervalId: 0, color: '', displayOrder: 0 }\r\n        }, ranges || []);\r\n\r\n        this.chartId = opts.chartId;\r\n        this.filterTypes = opts.filterTypes || {};\r\n        this.saveRangesUrl = opts.saveRangesUrl;\r\n        this.dateIntervals = opts.dateIntervals || [];\r\n        this.aggregators = opts.aggregators || [];\r\n        this.reports = opts.reports || [];\r\n        this.columns = opts.columns || [];\r\n        this.processJsonFn = opts.processJsonFn;\r\n        this.canExportFn = opts.canExportFn;\r\n        this.toggleExportFn = opts.toggleExportFn;\r\n    }\r\n\r\n    RangeForm.prototype = Object.create(Form.prototype);\r\n    RangeForm.prototype.constructor = RangeForm;\r\n\r\n    /**\r\n     * Save ranges to the server then rebuild the chart.\r\n     */\r\n    RangeForm.prototype.saveRanges = function() {\r\n        if ($.getAll('.mform-control-error', this.container).length > 0) {\r\n            Alertify.error($.resx('fixIt'));\r\n            return;\r\n        }\r\n\r\n        this.records.forEach(function(x, i) { x.displayOrder = i; });\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: self.saveRangesUrl,\r\n            data: {\r\n                Id: self.chartId,\r\n                Ranges: $.toPascalKeys(self.records)\r\n            }\r\n        }, function(data) {\r\n            if (data) {\r\n                self.changed = false;\r\n                if ($.isArray(data.ranges)) {\r\n                    data.ranges.forEach(function(x, i) { self.records[i].id = x.id; });\r\n                }\r\n                Alertify.success($.resx('chart.saveSuccessful'));\r\n                self.makeChart();\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Make the chart.\r\n     */\r\n    RangeForm.prototype.makeChart = function() {\r\n        var chartContent = $.get('.chart-container', this.content);\r\n        if (!(chartContent && chartContent.hasAttribute('data-url'))) {\r\n            return;\r\n        }\r\n        if (!(this.records && this.records.length > 0)) {\r\n            Alertify.error($.resx('chart.rangesRequired'));\r\n            return;\r\n        }\r\n\r\n        if (this.dashChart && this.dashChart.chart) {\r\n            this.dashChart.chart.destroy();\r\n        }\r\n\r\n        this.dashChart = new DashChart(chartContent, true, this.processJsonFn, null, this.toggleExportFn);\r\n    };\r\n\r\n    /**\r\n     * Export a chart as an image.\r\n     */\r\n    RangeForm.prototype.exportChart = function() {\r\n        if (!this.canExportFn()) {\r\n            return;\r\n        }\r\n        var chartContainer = $.get('.chart-container', this.content);\r\n        if (chartContainer) {\r\n            $.get('.export-width', this.content).value = chartContainer.offsetWidth;\r\n            $.get('.export-data', this.content).value = this.dashChart.chart.toBase64Image();\r\n            $.get('.export-form', this.content).submit();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the operatorId for a filter and unset the criteria.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered.\r\n     */\r\n    RangeForm.prototype.setReport = function(index, e) {\r\n        if (this.set(index, 'reportId', e)) {\r\n            this.records[index].xAxisColumnId = 0;\r\n            this.records[index].yAxisColumnId = 0;\r\n            this.records[index].aggregatorId = 0;\r\n            this.records[index].dateIntervalId = 0;\r\n            this.run();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Expand/collapse the inputs for a range.\r\n     * @param {Object} record - Range object.\r\n     */\r\n    RangeForm.prototype.toggleExpanded = function(record) {\r\n        record.isExpanded = !record.isExpanded;\r\n    };\r\n\r\n    /**\r\n     * Build the ranges.\r\n     * @returns {Object[]} Array of Mithril nodes containing the ranges.\r\n     */\r\n    RangeForm.prototype.rangeView = function() {\r\n        if (!this.reports) {\r\n            return null;\r\n        }\r\n\r\n        var self = this;\r\n        return this.records.map(function(record, index) {\r\n            var report = record.reportId ? $.findByKey(self.columns, 'reportId', record.reportId) : null;\r\n            if (report && !report.xColumns) {\r\n                report.xColumns = $.clone(report.columns);\r\n                report.xColumns.unshift({ columnId: 0, title: $.resx('chart.xAxisColumn') });\r\n                report.yColumns = $.clone(report.columns);\r\n                report.yColumns.unshift({ columnId: 0, title: $.resx('chart.yAxisColumn') });\r\n            }\r\n\r\n            var dateIntervalDisabled = true;\r\n            var inputsDisabled = !(self.opts.allowEdit && report);\r\n            if (!inputsDisabled && self.filterTypes) {\r\n                var col = $.findByKey(report.columns, 'columnId', record.xAxisColumnId * 1);\r\n                if (col && col.filterTypeId === self.filterTypes.date) {\r\n                    // show for date\r\n                    dateIntervalDisabled = false;\r\n                }\r\n            }\r\n\r\n            return m('.col-12.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: record._index }, [\r\n                m('.row', [\r\n                    m('input', { type: 'hidden', name: 'ChartRange[' + index + '].Id', value: record.id }),\r\n                    m('.col-4',\r\n                        self.withHelp($.resx('chart.reportText'), [\r\n                            m('span.input-group-prepend', m('button.btn.btn-secondary', { onclick: self.toggleExpanded.bind(self, record) },\r\n                                m('i.dash', { class: record.isExpanded ? 'dash-minus' : 'dash-plus' })\r\n                            )),\r\n                            m('select.form-control.custom-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].ReportId', class: self.withError(record.reportId, true),\r\n                                placeholder: $.resx('chart.report'), onchange: self.setReport.bind(self, index), value: record.reportId\r\n                            }, !self.opts.allowEdit), self.withOptions(self.reports, record.reportId, 'id', 'name'))\r\n                        ])\r\n                    ),\r\n                    m('.col-3',\r\n                        self.withHelp($.resx('chart.xAxisColumnText'),\r\n                            m('select.form-control.custom-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].XAxisColumnId', id: 'xAxisColumnId' + index, class: report ? self.withError(record.xAxisColumnId, true) : null,\r\n                                placeholder: $.resx('chart.xAxisColumn'), onchange: self.set.bind(self, index, 'xAxisColumnId'), value: record.xAxisColumnId\r\n                            }, inputsDisabled), self.withOptions(report ? report.xColumns : [{ columnId: 0, title: $.resx('chart.xAxisColumn') }], record.xAxisColumnId, 'columnId', 'title'))\r\n                        )\r\n                    ),\r\n                    m('.col-3',\r\n                        self.withHelp($.resx('chart.yAxisColumnText'),\r\n                            m('select.form-control.custom-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].YAxisColumnId', id: 'yAxisColumnId' + index, class: report ? self.withError(record.yAxisColumnId, true) : null,\r\n                                placeholder: $.resx('chart.yAxisColumn'), onchange: self.set.bind(self, index, 'yAxisColumnId'), value: record.yAxisColumnId\r\n                            }, inputsDisabled), self.withOptions(report ? report.yColumns : [{ columnId: 0, title: $.resx('chart.yAxisColumn') }], record.yAxisColumnId, 'columnId', 'title'))\r\n                        )\r\n                    ),\r\n                    m('.col-2', self.opts.allowEdit ? self.buttonView.call(self, index, true) : null)\r\n                ]),\r\n                m('.row', { class: record.isExpanded ? '' : ' hidden' }, [\r\n                    m('.col-4.offset-1',\r\n                        self.withHelp($.resx('chart.aggregatorText'),\r\n                            m('select.form-control.custom-select', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].AggregatorId', id: 'aggregatorId' + index,\r\n                                placeholder: $.resx('chart.aggregator'), onchange: self.set.bind(self, index, 'aggregatorId'), value: record.aggregatorId\r\n                            }, inputsDisabled), self.withOptions(self.aggregators, record.aggregatorId, 'id', 'name'))\r\n                        )\r\n                    ),\r\n                    m('.col-4',\r\n                        self.withHelp($.resx('chart.dateIntervalText'),\r\n                            m('select.form-control.custom-select', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].DateIntervalId', id: 'dateIntervalId' + index,\r\n                                placeholder: $.resx('chart.dateInterval'), onchange: self.set.bind(self, index, 'dateIntervalId'), value: record.dateIntervalId\r\n                            }, dateIntervalDisabled), self.withOptions(self.dateIntervals, record.dateIntervalId, 'id', 'name'))\r\n                        )\r\n                    ),\r\n                    m('.col-2', [\r\n                        self.withHelp($.resx('chart.colorText'),\r\n                            m(ColorPicker, {\r\n                                name: 'ChartRange[' + index + '].Color', value: record.color, disabled: inputsDisabled,\r\n                                onSelect: self.set.bind(self, index, 'color')\r\n                            })\r\n                        ),\r\n                    ])\r\n                ])\r\n            ]);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Build the range form.\r\n     * @returns {Object} Mithril node containing the form.\r\n     */\r\n    RangeForm.prototype.view = function() {\r\n        return [\r\n            this.rangeView(),\r\n            m('.row.pt-1', [\r\n                m('.col-6', [\r\n                    m('.btn-toolbar', [\r\n                        this.opts.allowEdit ? m('button.btn.btn-primary.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.saveRanges.bind(this)\r\n                        }, $.resx('save')) : null,\r\n                        m('button.btn.btn-info', {\r\n                            type: 'button', role: 'button', onclick: this.exportChart.bind(this), disabled: !this.canExportFn()\r\n                        }, $.resx('export'))\r\n                    ])\r\n                ]),\r\n                this.opts.allowEdit ? m('.col-6.float-right', [\r\n                    m('.float-right', [\r\n                        m('button.btn.btn-info.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.addRecord.bind(this)\r\n                        }, $.resx('add')),\r\n                        m('button.btn.btn-warning.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.deleteAllRecords.bind(this), disabled: !this.hasRecords()\r\n                        }, $.resx('deleteAll')),\r\n                        m(Help, { enabled: this.opts.wantsHelp, message: $.resx('chart.rangeText') })\r\n                    ])\r\n                ]) : null\r\n            ])\r\n        ];\r\n    };\r\n\r\n    return RangeForm;\r\n});\r\n","/*!\r\n * Wraps dataset form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.Dataset = factory(root.m, root.$, root.Alertify, root.Form, root.Autocomplete, root.Help, root.JoinForm, root.ColumnForm);\r\n})(this, function(m, $, Alertify, Form, Autocomplete, Help, JoinForm, ColumnForm) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare Dataset class.\r\n     * @param {Object} opts - Dataset settings\r\n     */\r\n    function Dataset(opts) {\r\n        opts = opts || {};\r\n        if (opts.columns) {\r\n            opts.columns.forEach(function(x) { x.isExpanded = false; });\r\n        }\r\n\r\n        this.sourceList = null;\r\n        this.columnList = null;\r\n        this.formChanged = false;\r\n        this.selectedSourceList = [];\r\n        this.content = opts.content;\r\n\r\n        this.checkType(false);\r\n        this.loadSourceList();\r\n        this.loadColumnList();\r\n\r\n        this.joinForm = new JoinForm({\r\n            content: opts.content,\r\n            wantsHelp: opts.wantsHelp,\r\n            joins: opts.joins,\r\n            joinTypes: opts.joinTypes,\r\n            sourceFn: this.getSourceList.bind(this),\r\n            columnUpdateFn: this.loadColumnList.bind(this)\r\n        });\r\n        this.joinForm.run();\r\n\r\n        this.columnForm = new ColumnForm({\r\n            content: opts.content,\r\n            wantsHelp: opts.wantsHelp,\r\n            columns: opts.columns,\r\n            dataTypes: opts.dataTypes,\r\n            filterTypes: opts.filterTypes,\r\n            sourceFn: this.getSourceList.bind(this),\r\n            columnFn: this.getColumnList.bind(this),\r\n            selectedSourceFn: this.getSelectedSourceList.bind(this)\r\n        });\r\n        this.columnForm.run();\r\n\r\n        $.onChange($.get('.dataset-database', this.content), this.loadSourceList.bind(this), false);\r\n        $.onChange($.get('.dataset-type', this.content), this.checkType.bind(this), false);\r\n\r\n        var self = this;\r\n        var primary = $.get('.dataset-primary-source', this.content);\r\n        if (primary) {\r\n            m.mount(primary, {\r\n                view: function() {\r\n                    return m(Help, { message: $.resx('dataset.primarySourceHelp'), enabled: opts.wantsHelp }, m(Autocomplete, {\r\n                        name: 'PrimarySource',\r\n                        class: 'primary-source-autocomplete',\r\n                        value: primary.getAttribute('data-value'),\r\n                        required: true,\r\n                        list: self.getSourceList.bind(self),\r\n                        onSelect: self.updateColumnList.bind(self),\r\n                        onCancel: self.updateColumnList.bind(self)\r\n                    }));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    Dataset.prototype = {\r\n        /**\r\n         * Build a list of all tables used by this dataset.\r\n         * @returns {bool} Returns true if list has changed, else false.\r\n         */\r\n        updateSelectedSources: function() {\r\n            var list = [];\r\n            var primarySource = $.get('.primary-source-autocomplete', this.content);\r\n            if (primarySource && primarySource.value) {\r\n                list.push(primarySource.value);\r\n            }\r\n            if (this.joinForm) {\r\n                this.joinForm.records.map(function(x) { list.push(x.tableName); });\r\n            }\r\n            list = list.filter(function(x) {\r\n                return !$.isNull(x) && x.length > 0;\r\n            });\r\n            if (!$.equals(list, this.selectedSourceList)) {\r\n                this.selectedSourceList = list;\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Check if the dataset is using a proc instead of tables.\r\n         * @param {bool} updateList - If true update the table/proc list.\r\n         */\r\n        checkType: function(updateList) {\r\n            var type = $.get('.dataset-type', this.content);\r\n            if (!type) {\r\n                return;\r\n            }\r\n            if ($.coalesce(updateList, true)) {\r\n                this.loadSourceList();\r\n            }\r\n            if (this.joinForm) {\r\n                this.joinForm.isProc = type.value * 1 === 2;\r\n                this.joinForm.run();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Fetch a list of available columns from the server. Autocompletes will update automatically.\r\n         */\r\n        loadColumnList: function() {\r\n            var url = this.content.getAttribute('data-column-url');\r\n            var database = $.get('.dataset-database', this.content);\r\n            if (!(url && database && $.hasPositiveValue(database.value))) {\r\n                this.columnList = [];\r\n                return;\r\n            }\r\n\r\n            if (this.updateSelectedSources()) {\r\n                // only run if sources are different from last request to avoid unnecessary traffic\r\n                var self = this;\r\n                $.ajax({\r\n                    method: 'POST',\r\n                    url: url,\r\n                    data: { databaseId: database.value, tables: self.selectedSourceList }\r\n                }, function(columns) {\r\n                    self.columnList = columns && columns.length ? columns : [];\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Fetch a list of tables from the server. Autocompletes will update automatically.\r\n         */\r\n        loadSourceList: function() {\r\n            var url = this.content.getAttribute('data-table-url');\r\n            var database = $.get('.dataset-database', this.content);\r\n            var type = $.get('.dataset-type', this.content);\r\n            if (!(url && database && type)) {\r\n                return;\r\n            }\r\n            if (!$.hasPositiveValue(database.value) || !$.hasPositiveValue(type.value)) {\r\n                this.sourceList = [];\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: url,\r\n                data: { databaseId: database.value, typeId: type.value }\r\n            }, function(tables) {\r\n                self.sourceList = tables && tables.length ? tables : [];\r\n                self.loadColumnList();\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get the list of table for the autocomplete.\r\n         * @returns {string[]} Returns array of tables.\r\n         */\r\n        getSourceList: function() {\r\n            return this.sourceList;\r\n        },\r\n\r\n        /**\r\n         * Get the list of selected tables.\r\n         * @returns {string[]} Returns array of tables.\r\n         */\r\n        getSelectedSourceList: function() {\r\n            return this.selectedSourceList;\r\n        },\r\n\r\n        /**\r\n         * Get the list of columns for the autocomplete.\r\n         * @returns {string[]} Returns array of columns.\r\n         */\r\n        getColumnList: function() {\r\n            return this.columnList;\r\n        },\r\n\r\n        /**\r\n         * Refresh the column list.\r\n         */\r\n        updateColumnList: function() {\r\n            // need timeout delay so the field value is updated before we load the list\r\n            setTimeout(this.loadColumnList.bind(this), 10);\r\n        },\r\n\r\n        /**\r\n         * Clean up our mess.\r\n         */\r\n        destroy: function() {\r\n            $.destroy(this.columnForm);\r\n            $.destroy(this.joinForm);\r\n\r\n            var primary = $.get('.dataset-primary-source', this.content);\r\n            if (primary) {\r\n                m.mount(primary, null);\r\n            }\r\n        }\r\n    };\r\n\r\n    return Dataset;\r\n});\r\n","/*!\r\n * Wraps shared functionality for report and chart detail pages.\r\n */\r\n(function(root, factory) {\r\n    root.BaseDetails = factory(root.$, root.Alertify, root.Prism);\r\n})(this, function($, Alertify, Prism) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare base details class.\r\n     * @param {Object} opts - Form settings\r\n     */\r\n    function BaseDetails(opts) {\r\n        opts = opts || {};\r\n        this.content = opts.content;\r\n        this.columnList = opts.columns || [];\r\n\r\n        $.on($.get('.view-sql', opts.content), 'click', function() {\r\n            $.dialogs.openDialog($.get('.modal-sql', opts.content).outerHTML);\r\n        });\r\n\r\n        if (!opts.allowEdit) {\r\n            this.initDate = new Date();\r\n        }\r\n    }\r\n\r\n    BaseDetails.prototype = {\r\n        /**\r\n         * Handle the result of a query for report data.\r\n         * @param {Object} json - Query result.\r\n         * @returns {bool}  True if data is valid.\r\n         */\r\n        processJson: function(json) {\r\n            if (json.updatedDate && this.initDate) {\r\n                var updateDate = new Date(json.updatedDate);\r\n                if (updateDate && updateDate > this.initDate) {\r\n                    // report has been modified - warn the user to refresh\r\n                    Alertify.error($.resx('reportModified'));\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if (json.dataSql) {\r\n                this.setSql($.get('.sql-data-content', this.content), json.dataSql, json.dataError);\r\n            }\r\n            if (json.countSql) {\r\n                this.setSql($.get('.sql-count-content', this.content), json.countSql, json.countError);\r\n            }\r\n\r\n            if ($.isNull(json.rows)) {\r\n                Alertify.error($.resx('errorConnectingToDataSource'));\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Show sql and error message in the correct place.\r\n         * @param {Node} node - DOM node to update.\r\n         * @param {string} sql - SQL statement to display.\r\n         * @param {string} error - Error to display if any.\r\n         */\r\n        setSql: function(node, sql, error) {\r\n            if (node) {\r\n                var elem = $.get('.sql-text', node);\r\n                if (elem) {\r\n                    elem.textContent = sql;\r\n                    Prism.highlightElement(elem);\r\n                }\r\n                elem = $.get('.sql-error', node);\r\n                if (elem) {\r\n                    elem.textContent = error || '';\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the list of columns for the autocomplete.\r\n         * @returns {string[]} Returns array of columns.\r\n         */\r\n        getColumnList: function() {\r\n            return this.columnList;\r\n        }\r\n    };\r\n\r\n    return BaseDetails;\r\n});\r\n","/*!\r\n * Wraps report form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.ReportDetails = factory(root.m, root.$, root.Alertify, root.BaseDetails, root.FilterForm, root.GroupForm, root.Table);\r\n})(this, function(m, $, Alertify, BaseDetails, FilterForm, GroupForm, Table) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare ReportDetails class.\r\n     * @param {Object} opts - Report settings\r\n     */\r\n    function ReportDetails(opts) {\r\n        opts = opts || {};\r\n\r\n        BaseDetails.call(this, opts);\r\n\r\n        if (!(opts.reportColumns && opts.reportColumns.length)) {\r\n            return;\r\n        }\r\n\r\n        this.isProc = opts.loadAllData;\r\n\r\n        var self = this;\r\n        var saveUrl = opts.saveColumnsUrl;\r\n        var saveStorageFunc = $.debounce(!opts.allowEdit ? $.noop : function(settings) {\r\n            if ($.isNull(self.dataTable.previousColumnWidths) || !$.equals(settings.columnWidths, self.dataTable.previousColumnWidths)) {\r\n                $.ajax({\r\n                    method: 'PUT',\r\n                    url: saveUrl,\r\n                    data: {\r\n                        Id: opts.reportId,\r\n                        Columns: $.toPascalKeys(settings.columnWidths),\r\n                        ReportWidth: settings.width * 1\r\n                    },\r\n                    block: false\r\n                });\r\n                self.dataTable.previousColumnWidths = settings.columnWidths;\r\n            }\r\n        }, 250);\r\n\r\n        this.dataTable = new Table({\r\n            content: $.get('.report-data-container', opts.content),\r\n            url: opts.dataUrl,\r\n            requestMethod: 'POST',\r\n            requestParams: { Id: opts.reportId, Save: true },\r\n            searchable: false,\r\n            loadAllData: opts.loadAllData,\r\n            editable: opts.allowEdit,\r\n            headerButtons: [m('a.btn.btn-primary', { href: opts.exportUrl, target: '_blank' }, $.resx('export'))],\r\n            itemsPerPage: opts.rowLimit,\r\n            currentStartItem: 0,\r\n            sorting: opts.sortColumns || [],\r\n            storageFunction: saveStorageFunc,\r\n            width: opts.width,\r\n            columns: opts.reportColumns || [],\r\n            displayDateFormat: opts.dateFormat,\r\n            displayCurrencyFormat: opts.currencyFormat,\r\n            dataCallback: this.processJson.bind(this),\r\n            errorCallback: this.processJson.bind(this)\r\n        });\r\n        this.dataTable.previousColumnWidths = opts.reportColumns.map(function(x) { return { field: x.field, width: x.width * 1.0 }; });\r\n\r\n        this.filterForm = new FilterForm({\r\n            reportId: opts.reportId,\r\n            content: opts.content,\r\n            filters: opts.filters,\r\n            columns: {\r\n                id: { type: 'int' },\r\n                columnId: { type: 'int' },\r\n                operatorId: { type: 'int' },\r\n                criteria: { type: 'str' },\r\n                criteria2: { type: 'str' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: null, columnId: '', operatorId: '', criteria: null, criteria2: null },\r\n            dateFormat: opts.dateFormat,\r\n            saveFiltersUrl: opts.saveFiltersUrl,\r\n            filterOperators: opts.filterOperators,\r\n            filterOperatorIds: opts.filterOperatorIds,\r\n            filterTypes: opts.filterTypes,\r\n            dateOperators: opts.dateOperators,\r\n            lookups: opts.lookups,\r\n            isProc: opts.isProc,\r\n            dataTable: this.dataTable,\r\n            columnFn: this.getColumnList.bind(this)\r\n        });\r\n        this.filterForm.run();\r\n\r\n        this.groupForm = new GroupForm({\r\n            reportId: opts.reportId,\r\n            content: opts.content,\r\n            groups: opts.groups,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            saveGroupsUrl: opts.saveGroupsUrl,\r\n            aggregatorId: opts.aggregatorId,\r\n            aggregator: opts.aggregator,\r\n            aggregators: opts.aggregators,\r\n            isProc: opts.isProc,\r\n            dataTable: this.dataTable,\r\n            columnFn: this.getColumnList.bind(this)\r\n        });\r\n        this.groupForm.run();\r\n    }\r\n\r\n    ReportDetails.prototype = Object.create(BaseDetails.prototype);\r\n    ReportDetails.prototype.constructor = BaseDetails;\r\n\r\n    /**\r\n     * Handle the result of a query for report data.\r\n     * @param {Object} json - Query result.\r\n     * @returns {bool}  True if data is valid.\r\n     */\r\n    ReportDetails.prototype.processJson = function(json) {\r\n        if (json.updatedDate && this.initDate) {\r\n            var updateDate = new Date(json.updatedDate);\r\n            if (updateDate && updateDate > this.initDate) {\r\n                // report has been modified - warn the user to refresh\r\n                Alertify.error($.resx('reportModified'));\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (json.dataSql) {\r\n            this.setSql($.get('.sql-data-content', this.content), json.dataSql, json.dataError);\r\n        }\r\n        if (json.countSql) {\r\n            this.setSql($.get('.sql-count-content', this.content), json.countSql, json.countError);\r\n        }\r\n\r\n        if ($.isNull(json.rows)) {\r\n            Alertify.error($.resx('errorConnectingToDataSource'));\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Clean up our mess.\r\n     */\r\n    ReportDetails.prototype.destroy = function() {\r\n        $.destroy(this.dataTable);\r\n        $.destroy(this.filterForm);\r\n        $.destroy(this.groupForm);\r\n    };\r\n\r\n    return ReportDetails;\r\n});\r\n","/*!\r\n * Wraps report form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.ChartDetails = factory(root.$, root.Alertify, root.BaseDetails, root.RangeForm);\r\n})(this, function($, Alertify, BaseDetails, RangeForm) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare ChartDetails class.\r\n     * @param {Object} opts - Report settings\r\n     */\r\n    function ChartDetails(opts) {\r\n        opts = opts || {};\r\n\r\n        BaseDetails.call(this, opts);\r\n\r\n        this.enableExport = false;\r\n\r\n        this.rangeForm = new RangeForm({\r\n            chartId: opts.chartId,\r\n            content: opts.content,\r\n            ranges: opts.ranges,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            filterTypes: opts.filterTypes || {},\r\n            saveRangesUrl: opts.saveRangesUrl,\r\n            dateIntervals: opts.dateIntervals,\r\n            aggregators: opts.aggregators,\r\n            reports: opts.reports,\r\n            columns: opts.columns,\r\n            processJsonFn: this.processJson.bind(this),\r\n            canExportFn: this.canExport.bind(this),\r\n            toggleExportFn: this.toggleExport.bind(this)\r\n        });\r\n        this.rangeForm.run();\r\n\r\n        if (this.rangeForm.records && this.rangeForm.records.length) {\r\n            this.rangeForm.makeChart();\r\n        }\r\n    }\r\n\r\n    ChartDetails.prototype = Object.create(BaseDetails.prototype);\r\n    ChartDetails.prototype.constructor = BaseDetails;\r\n\r\n    /**\r\n     * Handle the result of a query for report data.\r\n     * @param {Object} json - Query result.\r\n     * @returns {bool}  True if data is valid.\r\n     */\r\n    ChartDetails.prototype.processJson = function(json) {\r\n        if (json.updatedDate && this.initDate) {\r\n            var updateDate = new Date(json.updatedDate);\r\n            if (updateDate && updateDate > this.initDate) {\r\n                // chart has been modified - warn the user to refresh\r\n                document.dispatchEvent($.events.chartLoad);\r\n                Alertify.success($.resx('chartModified'));\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if ($.isNull(json.ranges) || json.ranges.length === 0) {\r\n            Alertify.error($.resx('errorConnectingToDataSource'));\r\n            this.enableExport = false;\r\n            $.show($.get('.chart-error', this));\r\n            return false;\r\n        }\r\n\r\n        this.enableExport = true;\r\n        $.get('.export-filename', this.content).value = json.title;\r\n\r\n        var elem = $.get('.sql-content', this.content);\r\n        var ranges = json.ranges.map(function(x) { return { title: x.title, sql: x.sql, error: x.error }; });\r\n        this.setSql(elem, ranges.filter(function(x) { return x.sql; }).map(function(x) { return '-- ' + x.title + '\\n' + x.sql + '\\n'; }).join('\\n'),\r\n            ranges.filter(function(x) { return x.error; }).map(function(x) { return x.title + ':<br>' + x.error + '<br>'; }).join('<br>'));\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Get export flag.\r\n     */\r\n    ChartDetails.prototype.canExport = function() {\r\n        return this.enableExport;\r\n    };\r\n\r\n    /**\r\n     * Set export flag.\r\n     * @param {bool} val - Enable export if true, else disable.\r\n     */\r\n    ChartDetails.prototype.toggleExport = function(val) {\r\n        this.enableExport = val;\r\n    };\r\n\r\n    /**\r\n     * Clean up our mess.\r\n     */\r\n    ChartDetails.prototype.destroy = function() {\r\n        $.destroy(this.rangeForm);\r\n        $.destroy(this.chart);\r\n    };\r\n\r\n    return ChartDetails;\r\n});\r\n","/*!\r\n * Wraps functionality needed to display a dashboard widget.\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Widget = factory(root.m, root.$, root.Alertify, root.Table, root.DashChart, root.Draggabilly, root.Rect);\r\n})(this, function(m, $, Alertify, Table, DashChart, Draggabilly, Rect) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Use object properties to make class list for a widget container.\r\n     * @param {Object} obj - Widget properties.\r\n     * @returns {string} CSS class list.\r\n     */\r\n    var buildClassList = function(obj) {\r\n        return 'grid-item grid-item-width-' + obj.width + ' grid-item-height-' + obj.height +\r\n            ' grid-item-x-' + obj.x + ' grid-item-y-' + obj.y;\r\n    };\r\n\r\n    /**\r\n     * Declare Widget class.\r\n     * @param {Object} opts - Widget settings\r\n     */\r\n    var Widget = function(opts) {\r\n        this.init(opts);\r\n\r\n        // attach this to the container for reference in the dashboard\r\n        var container = this.getContainer();\r\n        container.widget = this;\r\n    };\r\n\r\n    /**\r\n     * Declare Widget class methods.\r\n     */\r\n    Widget.prototype = {\r\n        /**\r\n         * Initialize the widget.\r\n         * @param {Object} opts - Widget settings\r\n         */\r\n        init: function(opts) {\r\n            opts.isData = $.coalesce(opts.isData, true);\r\n            opts.refreshSeconds = $.coalesce(opts.refreshSeconds, 0);\r\n            opts.baseUrl = $.get('body').getAttribute('data-base-url');\r\n            this.opts = opts;\r\n\r\n            this.id = opts.id;\r\n            this.table = null;\r\n            this.chart = null;\r\n            this.interval = null;\r\n            this.isFullscreen = false;\r\n            this.initDate = new Date();\r\n            this.dragMargin = 0;\r\n\r\n            this.render();\r\n\r\n            var container = this.getContainer();\r\n            this.rect = new Rect(opts.width, opts.height, opts.x, opts.y);\r\n            this.setupDraggie(container);\r\n\r\n            if (opts.isData) {\r\n                $.show('#widgetData_' + opts.id);\r\n                $.hide('#widgetChart_' + opts.id);\r\n\r\n                this.table = new Table({\r\n                    content: '#widgetData_' + opts.id,\r\n                    id: 'widgetTable_' + opts.id,\r\n                    url: opts.url,\r\n                    requestMethod: 'POST',\r\n                    requestParams: { Id: opts.reportId },\r\n                    loadAllData: false,\r\n                    editable: false,\r\n                    itemsPerPage: opts.reportRowLimit || 10,\r\n                    currentStartItem: 0,\r\n                    sorting: opts.sortColumns,\r\n                    storageFunction: $.noop,\r\n                    width: Math.max(opts.reportWidth || 100, 100),\r\n                    columns: opts.columns,\r\n                    dataCallback: this.processJson.bind(this),\r\n                    errorCallback: this.onError.bind(this),\r\n                    displayDateFormat: opts.displayDateFormat,\r\n                    displayCurrencyFormat: opts.displayCurrencyFormat\r\n                });\r\n            } else {\r\n                $.hide('#widgetData_' + opts.id);\r\n                $.show('#widgetChart_' + opts.id);\r\n                this.chart = new DashChart(container, false, this.processJson.bind(this), this.onError.bind(this));\r\n            }\r\n            if (opts.refreshSeconds > 0) {\r\n                this.interval = setInterval(this.refresh.bind(this), opts.refreshSeconds * 1000);\r\n            }\r\n\r\n            if (opts.title) {\r\n                $.setText($.get('.grid-title', container), opts.title);\r\n            }\r\n        },\r\n\r\n        render: function() {\r\n            var parentNode = $.get('#widget_' + this.opts.id);\r\n            var firstRender = !parentNode;\r\n\r\n            if (firstRender) {\r\n                // have to create the parent node by hand first - rendering multiple views to the same parentNode with mithril causes an overwrite\r\n                parentNode = $.createNode();\r\n                parentNode.id = 'widget_' + this.opts.id;\r\n                parentNode.setAttribute('data-url', this.opts.url);\r\n                parentNode.className = buildClassList(this.opts);\r\n                $.get('#dashboard').appendChild(parentNode);\r\n            }\r\n\r\n            // now render the rest of the widget content\r\n            m.render(parentNode, [\r\n                m('.row.grid-header', [\r\n                    m('span.grid-title.col-11', this.opts.title),\r\n                    m('span.grid-buttons.col-1', [\r\n                        m('span.dropdown.float-right', [\r\n                            m('a.btn.dropdown-toggle', { id: 'dropdownMenuButton_' + this.opts.id, 'data-toggle': 'dropdown', 'aria-haspopup': true, 'aria-expanded': false },\r\n                                m('i.dash.dash-menu')\r\n                            ),\r\n                            m('span.dropdown-menu', { 'aria-labelledby': 'dropdownMenuButton_' + this.id }, [\r\n                                m('a.dropdown-item.btn-refresh', { title: $.resx('refresh'), onclick: this.forceRefresh.bind(this) }, [\r\n                                    m('i.dash.dash-arrows-cw'), m('span', ' ' + $.resx('refresh'))\r\n                                ]),\r\n                                m('a.dropdown-item.btn-fullscreen', { title: $.resx('toggleFullScreen'), onclick: this.toggleFullScreen.bind(this) }, [\r\n                                    m('i.dash.dash-max'), m('span', ' ' + $.resx('toggleFullScreen'))\r\n                                ]),\r\n                                m('a.dropdown-item.dash-ajax.dash-dialog.fs-disabled', {\r\n                                    href: this.opts.baseUrl + (this.opts.isData ? 'Report' : 'Chart') + '/Details/' + (this.opts.isData ? this.opts.reportId : this.opts.chartId),\r\n                                    title: $.resx(this.opts.isData ? 'viewReport' : 'viewChart')\r\n                                }, [m('i.dash.dash-info'), ' ' + $.resx(this.opts.isData ? 'viewReport' : 'viewChart')]),\r\n                                m('a.dropdown-item.dash-ajax.dash-dialog.fs-disabled', { href: this.opts.baseUrl + 'Dashboard/Edit/' + this.opts.id, title: $.resx('editWidget') }, [\r\n                                    m('i.dash.dash-pencil'), ' ' + $.resx('editWidget')\r\n                                ]),\r\n                                m('a.dropdown-item.dash-ajax.dash-dialog.fs-disabled', { title: $.resx('deleteWidget'), onclick: this.deleteWidget.bind(this) }, [\r\n                                    m('i.dash.dash-trash.text-danger'), ' ' + $.resx('deleteWidget')\r\n                                ])\r\n                            ])\r\n                        ])\r\n                    ])\r\n                ]),\r\n                m('.grid-body', [\r\n                    m('.widget-data hidden', { id: 'widgetData_' + this.opts.id }),\r\n                    m('.widget-chart hidden', { id: 'widgetChart_' + this.opts.id }, [\r\n                        m('.chart-spinner',\r\n                            m('.table-spinner', [m('.rect1'), m('.rect2'), m('.rect3'), m('.rect4'), m('.rect5')])\r\n                        ),\r\n                        m('.chart-error.hidden.pl-1',\r\n                            m('div', [\r\n                                m('p', $.resx('errorChartLoad')),\r\n                                m('.btn.btn-info.btn-sm', { onclick: this.refresh.bind(this) }, $.resx('tryAgain'))\r\n                            ])\r\n                        ),\r\n                        m('canvas.chart-canvas.hidden')\r\n                    ])\r\n                ]),\r\n                m('.grid-footer', [\r\n                    m('span.grid-updated-time', new Date().toLocaleTimeString()),\r\n                    m('span.resizable-handle.float-right', m('i.dash.dash-corner')),\r\n                    m('span.drag-handle.float-right', m('i.dash.dash-move'))\r\n                ])\r\n            ]);\r\n\r\n            if (firstRender) {\r\n                // add our system wide events\r\n                $.dialogs.processContent($.get('#widget_' + this.opts.id));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the container element for the widget.\r\n         * @returns {Node} DOM node that contains the widget content.\r\n         */\r\n        getContainer: function() {\r\n            return $.get('#widget_' + this.opts.id);\r\n        },\r\n\r\n        /**\r\n         * Add the draggabilly handlers.\r\n         * @param {Node} container - DOM node that contains the widget content.\r\n         * @param {Object} grid - Object that contains the grid columnWidth and rowHeight.\r\n         */\r\n        setupDraggie: function(container, grid) {\r\n            container = $.coalesce(container, this.getContainer());\r\n            var g = this.opts.grid = $.coalesce(grid, this.opts.grid);\r\n\r\n            $.destroy(this.moveDraggie);\r\n            this.moveDraggie = new Draggabilly(container, { handle: '.drag-handle', grid: [g.columnWidth, g.rowHeight], minZero: true }).on('dragEnd', this.stopDrag.bind(this));\r\n\r\n            $.destroy(this.resizeDraggie);\r\n            var handle = $.get('.resizable-handle', container);\r\n            this.resizeDraggie = new Draggabilly(handle, { grid: [g.columnWidth, g.rowHeight] }).on('dragStart', this.initResize.bind(this)).on('dragEnd', this.stopResize.bind(this));\r\n\r\n            var style = handle.currentStyle || window.getComputedStyle(handle);\r\n            this.dragMargin = style.marginRight.replace('px', '') * 1;\r\n        },\r\n\r\n        /**\r\n         * Stop dragging the widget and updates its location.\r\n         */\r\n        stopDrag: function() {\r\n            var x = Math.max(Math.round(this.moveDraggie.position.x / this.opts.grid.columnWidth), 0);\r\n            var y = Math.max(Math.round(this.moveDraggie.position.y / this.opts.grid.rowHeight), 0);\r\n            if (x + this.rect.width > this.opts.grid.columns) {\r\n                x = this.opts.grid.columns - this.rect.width;\r\n            }\r\n            if (y + this.rect.height > this.opts.grid.rows) {\r\n                y = this.opts.grid.rows - this.rect.height;\r\n            }\r\n            this.setLocation(x, y);\r\n            this.rect.updated = true;\r\n            this.opts.layoutCallback();\r\n        },\r\n\r\n        /**\r\n         * Start resizing a widget\r\n         * @param {Event} event - Original mousedown or touchstart event\r\n         */\r\n        initResize: function(event) {\r\n            // clear any selection so browser doesn't think we are dragging the selection\r\n            window.getSelection().removeAllRanges();\r\n\r\n            var container = this.getContainer();\r\n            container.style['z-index'] = 9999;\r\n            var pos = event.changedTouches ? event.changedTouches[0] : event;\r\n            this.x = pos.clientX;\r\n            this.y = pos.clientY;\r\n\r\n            var styles = document.defaultView.getComputedStyle(container);\r\n            this.width = styles.width.replace('px', '') * 1;\r\n            this.height = styles.height.replace('px', '') * 1;\r\n\r\n            if (event.target !== event.currentTarget) {\r\n                event.stopPropagation();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update the widget after the user finishes resizing.\r\n         */\r\n        stopResize: function() {\r\n            var container = this.getContainer();\r\n            var w = Math.max(this.width + this.resizeDraggie.position.x + this.dragMargin, this.opts.grid.columnWidth * 4);\r\n            var h = Math.max(this.height + this.resizeDraggie.position.y, this.opts.grid.rowHeight * 4);\r\n\r\n            this.setSize(Math.min(Math.round(w / this.opts.grid.columnWidth), this.opts.grid.columns), Math.min(Math.round(h / this.opts.grid.rowHeight), this.opts.grid.rows));\r\n\r\n            var handle = $.get('.resizable-handle', container);\r\n            if (handle) {\r\n                handle.removeAttribute('style');\r\n            }\r\n\r\n            this.opts.layoutCallback();\r\n\r\n            if (this.opts.isData) {\r\n                this.table.updateLayout();\r\n            }\r\n\r\n            this.rect.updated = true;\r\n        },\r\n\r\n        /**\r\n         * Delete this widget.\r\n         */\r\n        deleteWidget: function() {\r\n            var self = this;\r\n            Alertify.confirm($.resx('areYouSure'), function() {\r\n                $.ajax({\r\n                    method: 'DELETE',\r\n                    url: self.opts.baseUrl + 'Dashboard/Delete/' + self.opts.id\r\n                }, self.destroy.bind(self));\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Handle the result of a query for report data.\r\n         * @param {Object} json - Data to display in the widget.\r\n         * @returns {bool} True if the json data is valid\r\n         */\r\n        processJson: function(json) {\r\n            if (json.updatedDate && this.initDate) {\r\n                var updateDate = new Date(json.updatedDate);\r\n                if (updateDate && updateDate > this.initDate) {\r\n                    this.reload();\r\n                    return false;\r\n                }\r\n            }\r\n            if ((this.opts.isData && $.isNull(json.rows)) || (!this.opts.isData && ($.isNull(json.ranges) || json.ranges.length === 0))) {\r\n                Alertify.error($.resx('errorConnectingToDataSource'));\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Reload the widget options and reinitialize.\r\n         * @param {bool} showMsg - If true show the widget reloaded message to the user.\r\n         * @param {Object} options - Options to use to reload the widget instead of requesting from the server.\r\n         */\r\n        reload: function(showMsg, options) {\r\n            var callback = function(opts) {\r\n                this.destroy(false);\r\n                this.init($.extend(this.opts, opts));\r\n                if ($.coalesce(showMsg, true)) {\r\n                    Alertify.success($.resx('widgetReloaded').replace('{0}', this.opts.title));\r\n                }\r\n                return;\r\n            };\r\n\r\n            if (!$.isNull(options)) {\r\n                callback.call(this, options);\r\n            } else {\r\n                $.ajax({ method: 'GET', url: this.opts.baseUrl + 'Dashboard/WidgetOptions/' + this.opts.id }, callback.bind(this));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Refresh the data for the widget.\r\n         */\r\n        refresh: function() {\r\n            if ($.dialogs.hasOpenDialog()) {\r\n                // don't refresh when a dialog is open\r\n                return;\r\n            }\r\n\r\n            if (this.opts.isData) {\r\n                this.table.refresh();\r\n            } else {\r\n                this.chart.run();\r\n            }\r\n\r\n            var updatedAt = $.get('.grid-updated-time', this.getContainer());\r\n            if (updatedAt) {\r\n                updatedAt.innerText = new Date().toLocaleTimeString();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Force the widget to refresh now.\r\n         */\r\n        forceRefresh: function() {\r\n            if (this.opts.refreshSeconds > 0) {\r\n                clearInterval(this.interval);\r\n                this.interval = setInterval(this.refresh.bind(this), this.opts.refreshSeconds * 1000);\r\n            }\r\n            this.refresh();\r\n        },\r\n\r\n        /**\r\n         * Refresh the style based on the dimensions.\r\n         * @param {number} width - New width of the widget.\r\n         * @param {number} height - New height of the widget.\r\n         */\r\n        setSize: function(width, height) {\r\n            this.rect.width = width;\r\n            this.rect.height = height;\r\n            this.updateStyle();\r\n        },\r\n\r\n        /**\r\n         * Refresh the style based on the dimensions.\r\n         * @param {number} x - New x coordinate of the widget.\r\n         * @param {number} y - New y coordinate of the widget.\r\n         */\r\n        setLocation: function(x, y) {\r\n            this.rect.x = x;\r\n            this.rect.y = y;\r\n            this.updateStyle();\r\n        },\r\n\r\n        /**\r\n        * Refresh the style based on the dimensions.\r\n        */\r\n        updateStyle: function() {\r\n            var container = this.getContainer();\r\n            container.className = buildClassList(this.rect);\r\n            container.removeAttribute('style');\r\n        },\r\n\r\n        /**\r\n         * Handle an error.\r\n         * @returns {bool} Always returns true.\r\n         */\r\n        onError: function() {\r\n            if (this.interval) {\r\n                clearInterval(this.interval);\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Destroy the widget.\r\n         * @param {bool} totalDestruction - Remove the container node and null out the widget object if true.\r\n         */\r\n        destroy: function(totalDestruction) {\r\n            $.destroy(this.table);\r\n            $.destroy(this.chart);\r\n            $.destroy(this.moveDraggie);\r\n            $.destroy(this.resizeDraggie);\r\n\r\n            if (this.interval) {\r\n                clearInterval(this.interval);\r\n                this.interval = null;\r\n            }\r\n\r\n            if ($.coalesce(totalDestruction, true)) {\r\n                var container = this.getContainer();\r\n                container.widget = null;\r\n                container.parentNode.removeChild(container);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Switch this widget in/out of full screen mode.\r\n         */\r\n        toggleFullScreen: function() {\r\n            var container = this.getContainer();\r\n            var fullScreenIcon = $.get('.btn-fullscreen i', container);\r\n            var headerHideBtns = $.getAll('.fs-disabled', container);\r\n\r\n            if (this.isFullscreen) {\r\n                this.isFullscreen = false;\r\n                $.removeClass(container, 'full-screen');\r\n                $.removeClass(fullScreenIcon, 'dash-min');\r\n                $.addClass(fullScreenIcon, 'dash-max');\r\n                headerHideBtns.forEach(function(x) { $.removeClass(x, 'disabled'); });\r\n            } else {\r\n                this.isFullscreen = true;\r\n                $.addClass(container, 'full-screen');\r\n                $.addClass(fullScreenIcon, 'dash-min');\r\n                $.removeClass(fullScreenIcon, 'dash-max');\r\n                headerHideBtns.forEach(function(x) { $.addClass(x, 'disabled'); });\r\n            }\r\n\r\n            if (this.opts.isData) {\r\n                this.table.updateLayout();\r\n            }\r\n        }\r\n    };\r\n\r\n    return Widget;\r\n});\r\n","/*!\r\n * Wraps dialog functionality.\r\n */\r\n(function($, Alertify, Dialog, Table, Dropdown, Tab, CollapsibleList, Validator, DatePicker) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Set focus on an element after a dialog closes.\r\n     * @this {Event} Event that originally opened the dialog.\r\n     */\r\n    var focusOnClose = function() {\r\n        if (this && this.target) {\r\n            this.target.focus();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Selectors and callback function to create events.\r\n     */\r\n    var _contentActions = [\r\n        { selector: '[data-toggle=\"dropdown\"]', action: function() { new Dropdown(this); } },\r\n        { selector: '[data-toggle=\"tab\"], [data-toggle=\"pill\"]', action: function() { new Tab(this); } },\r\n        { selector: '.dash-table', action: function() { tableLoad(this); } },\r\n        { selector: '.dash-ajax', action: function() { $.on(this, 'click', handleAjaxRequest); } },\r\n        { selector: '.dash-form', action: function() { $.on(this, 'submit', function(e) { e.preventDefault(); }, true); } },\r\n        {\r\n            selector: '.dash-context-help', action: function() {\r\n                $.on(this, 'click', function(e) {\r\n                    Alertify.alert(this.getAttribute('data-message').replace(/&quot;/g, '\"'), focusOnClose.bind(e), focusOnClose.bind(e));\r\n                });\r\n            }\r\n        },\r\n        { selector: '.dash-collapsible-list', action: function() { new CollapsibleList(this); } },\r\n        {\r\n            selector: '[data-toggle=\"validator\"]', action: function() {\r\n                new Validator(this, { match: $.resx('errorMatch'), minlength: $.resx('errorMinLength') });\r\n            }\r\n        },\r\n        { selector: '.dash-input-replace', action: function() { $.on(this, 'click', inputReplace); } }\r\n    ];\r\n\r\n    /**\r\n     * Store list of open dialogs.\r\n     */\r\n    var _dialogs = [];\r\n\r\n    /**\r\n     * Find a dialog in the internal list by ID.\r\n     * @param {number} id - Dialog ID\r\n     */\r\n    var findDialogById = function(id) {\r\n        var dlgs = _dialogs.filter(function(x) {\r\n            return x.getId() === id;\r\n        });\r\n        return dlgs.length ? dlgs[0] : null;\r\n    };\r\n\r\n    /**\r\n     * Get active dialog.\r\n     * @param {Object} Return currently open dialog object.\r\n     */\r\n    var getActiveDialog = function() {\r\n        if (!_dialogs.length) {\r\n            return null;\r\n        }\r\n        return findDialogById(Math.max.apply(Math, _dialogs.map(function(x) { return x.getId(); })));\r\n    };\r\n\r\n    /**\r\n     * Get active dialog content.\r\n     * @param {Object} Return content node of currently open dialog object.\r\n     */\r\n    var getActiveContent = function() {\r\n        var dlg = getActiveDialog();\r\n        return dlg ? dlg.getContent() : null;\r\n    };\r\n\r\n    /**\r\n     * Check if any dialogs are open.\r\n     */\r\n    var hasOpenDialog = function() {\r\n        return _dialogs.length > 0;\r\n    };\r\n\r\n    /**\r\n     * Remove a dialog from internal list.\r\n     * @param {number} id - Dialog ID\r\n     */\r\n    var removeDialog = function(id) {\r\n        _dialogs = _dialogs.filter(function(x) {\r\n            return x.getId() !== id;\r\n        });\r\n        var activeDialog = getActiveDialog();\r\n        if (activeDialog) {\r\n            setTimeout(activeDialog.onShow.bind(activeDialog), 25);\r\n        } else {\r\n            // back to dashboard so set title\r\n            var dashboard = $.get('#dashboard');\r\n            if (dashboard) {\r\n                document.title = dashboard.getAttribute('data-title');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle action from a click on an ajax link.\r\n     * @param {Event} e - Event that triggered the request.\r\n     */\r\n    var handleAjaxRequest = function(e) {\r\n        if (!(e && e.target)) {\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n        e.target.blur();\r\n\r\n        var obj = e.target;\r\n        while (obj !== document.body && obj.parentNode && !$.hasClass(obj, 'dash-ajax')) {\r\n            obj = obj.parentNode;\r\n        }\r\n        if (!obj || !(obj.hasAttribute('href') || obj.hasAttribute('data-href')) || $.hasClass(obj, 'disabled')) {\r\n            return;\r\n        }\r\n\r\n        var url = obj.getAttribute('href') || obj.getAttribute('data-href');\r\n        var method = obj.getAttribute('data-method') || 'GET';\r\n        var message = obj.getAttribute('data-message');\r\n        var target = obj.getAttribute('target');\r\n\r\n        if ($.hasClass(obj, 'dash-confirm')) {\r\n            Alertify.dismissAll();\r\n            Alertify.confirm(message, sendAjaxRequest.bind(this, url, method, obj), function() { e.target.focus(); });\r\n        } else if ($.hasClass(obj, 'dash-prompt')) {\r\n            Alertify.dismissAll();\r\n            Alertify.prompt(message, checkPrompt.bind(this, url, method, obj));\r\n        } else if (target) {\r\n            window.open(url, target);\r\n        } else {\r\n            sendAjaxRequest(url, method, obj);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Send a request to the server and display the results\r\n     * @param {string} url - URL to send request for.\r\n     * @param {string} method - Request method type.\r\n     * @param {Node} target - Node that requested the data.\r\n     * @param {Event} e - Event that triggered the request.\r\n     * @param {string} promptValue - If coming from a prompt dialog, the value entered.\r\n     */\r\n    var sendAjaxRequest = function(url, method, target, e, promptValue) {\r\n        if (!url) {\r\n            return;\r\n        }\r\n\r\n        if (promptValue) {\r\n            if (url.indexOf('?') > -1) {\r\n                url += '&Prompt=' + encodeURIComponent(promptValue);\r\n            } else {\r\n                url += '?Prompt=' + encodeURIComponent(promptValue);\r\n            }\r\n        }\r\n        $.ajax({\r\n            method: method || 'GET',\r\n            url: url\r\n        }, function(responseData) {\r\n            if (!responseData.content) {\r\n                refreshTable();\r\n                return;\r\n            }\r\n\r\n            if (target && target.hasAttribute('data-update-target')) {\r\n                var targetSelector = target.getAttribute('data-update-target');\r\n                var updateObj;\r\n                if (targetSelector.substr(1) === '#') {\r\n                    updateObj = $.get(targetSelector);\r\n                } else {\r\n                    var dialog = getActiveDialog();\r\n                    if (dialog) {\r\n                        updateObj = $.get(targetSelector, dialog.getContainer());\r\n                    }\r\n                }\r\n                if (updateObj) {\r\n                    if (responseData.html) {\r\n                        updateObj.innerHTML = responseData.content;\r\n                        processContent(updateObj);\r\n                    } else {\r\n                        $.setText(updateObj, responseData.content);\r\n                    }\r\n                }\r\n            } else {\r\n                openDialog(responseData.content, target);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Open a new dialog.\r\n     * @param {string} content - HTML content for the dialog\r\n     * @param {Node} target - Node that triggered the dialog to open.\r\n     * @param {Function} onOkay - Function to run if the user clicks ok.\r\n     * @param {Function} onCancel - Function to run if the user clicks cancel.\r\n     * @param {Function} onShow - Function to run after the dialog loads.\r\n     */\r\n    var openDialog = function(content, target, onOkay, onCancel, onShow) {\r\n        Alertify.dismissAll();\r\n\r\n        // get max dialog id, and increment\r\n        var id = _dialogs.length ? Math.max.apply(Math, _dialogs.map(function(x) { return x.getId(); })) + 1 : 1;\r\n        var activeDlg = getActiveDialog();\r\n        _dialogs.push(new Dialog({\r\n            id: id, content: content, target: target, onOkay: onOkay, onCancel: onCancel, onShow: onShow,\r\n            buttons: { 'ok': $.resx('okay'), 'cancel': $.resx('cancel'), 'close': $.resx('close') },\r\n            parent: activeDlg ? activeDlg.getId() : null\r\n        }));\r\n    };\r\n\r\n    /**\r\n     * Check that a prompt value was supplied.\r\n     * @param {string} url - URL to send request for.\r\n     * @param {string} method - Request method type.\r\n     * @param {Node} target - Node that requested the data.\r\n     * @param {string} promptValue - If coming from a prompt dialog, the value entered.\r\n     * @param {Event} e - Event that triggered the request.\r\n     */\r\n    var checkPrompt = function(url, method, target, promptValue, e) {\r\n        if (!$.hasValue(promptValue)) {\r\n            Alertify.error($.resx('errorNameRequired'));\r\n            return false;\r\n        }\r\n        sendAjaxRequest.call(this, url, method, target, e, promptValue);\r\n    };\r\n\r\n    /**\r\n     * Initialize an table instance\r\n     * @param {Node} node - Node containing the data url for the table settings.\r\n     */\r\n    var tableLoad = function(node) {\r\n        var json = node.getAttribute('data-json');\r\n        if (json) {\r\n            var opts = JSON.parse(json);\r\n            opts.content = node;\r\n            node.table = new Table(opts);\r\n            node.removeAttribute('data-json');\r\n        } else {\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: node.getAttribute('data-url')\r\n            }, function(opts) {\r\n                node.table = new Table(opts);\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Refresh data for the table instance in the active dialog.\r\n     */\r\n    var refreshTable = function() {\r\n        var node = $.get('.dash-table', getActiveContent());\r\n        if (node && node.table) {\r\n            node.table.refresh();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Focus on the first error or input.\r\n     * @param {Node} node - Parent node to search in.\r\n     */\r\n    var focusNode = function(node) {\r\n        if (!node) {\r\n            return null;\r\n        }\r\n        var elems = $.getAll('.form-control-error:not([type=\"hidden\"]):not([disabled]):not([readonly]), .mform-control-error:not([type=\"hidden\"]):not([disabled]):not([readonly])', node).filter($.isVisible);\r\n        if (!elems.length) {\r\n            elems = $.getAll('input:not([type=\"hidden\"]):not([disabled]):not([readonly]), select:not([disabled]):not([readonly])', node).filter($.isVisible);\r\n        }\r\n        if (!elems.length) {\r\n            elems = $.getAll('button:not([disabled]), a:not([disabled]), [tabindex]:not([disabled]):not([tabindex=\"-1\"])', node).filter($.isVisible);\r\n        }\r\n        if (!elems.length) {\r\n            var dlg = $.closest('.rd-dialog', node);\r\n            if (dlg) {\r\n                elems = $.getAll('.rd-close', dlg).filter($.isVisible);\r\n            }\r\n        }\r\n        if (elems.length) {\r\n            elems[0].focus();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Replace the value of the data-target node with the data-value from this. Used for providing defaults via a dropdown.\r\n     */\r\n    var inputReplace = function() {\r\n        if (this.hasAttribute('data-target') && this.hasAttribute('data-value')) {\r\n            var target = $.get('#' + this.getAttribute('data-target'));\r\n            if (target && !$.isNull(target.value)) {\r\n                target.value = this.getAttribute('data-value');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Process node content adding events.\r\n     * @param {Node} node - Node to add events to.\r\n     */\r\n    var processContent = function(node) {\r\n        node = node instanceof Event ? null : node instanceof Table ? node.table : node;\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        // process all the content actions\r\n        var elems;\r\n        _contentActions.forEach(function(act) {\r\n            elems = $.getAll(act.selector, node);\r\n            if ($.matches(node, act.selector)) {\r\n                elems.push(node);\r\n            }\r\n            elems.forEach(function(x) {\r\n                act.action.call(x);\r\n            });\r\n        });\r\n\r\n        if (node.nodeName === 'BODY') {\r\n            var lang = node.getAttribute('data-lang');\r\n            if (lang && lang !== 'en') {\r\n                DatePicker.localize({ locale: lang });\r\n            }\r\n            focusNode(node);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set up the functions that are exposed publicly.\r\n     */\r\n    $.dialogs = {\r\n        openDialog: openDialog,\r\n        findDialogById: findDialogById,\r\n        focusNode: focusNode,\r\n        focusOnClose: focusOnClose,\r\n        getActiveContent: getActiveContent,\r\n        getActiveDialog: getActiveDialog,\r\n        hasOpenDialog: hasOpenDialog,\r\n        processContent: processContent,\r\n        refreshTable: refreshTable,\r\n        removeDialog: removeDialog,\r\n        sendAjaxRequest: sendAjaxRequest\r\n    };\r\n})(this.$, this.Alertify, this.Dialog, this.Table, this.Dropdown, this.Tab, this.CollapsibleList, this.Validator, this.DatePicker);\r\n","/*!\r\n * Wraps dataset form functionality.\r\n */\r\n(function($, Dataset) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Store references to the dataset form mithril modules and value lists.\r\n     * @type {Object}\r\n     */\r\n    var _datasets = {};\r\n\r\n    /**\r\n     * Initialize the dataset form when the datasetFormLoad event fires.\r\n     */\r\n    $.on(document, 'datasetFormLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'dataset-form')) {\r\n            return;\r\n        }\r\n\r\n        var dataset = $.get('.dataset-id', form);\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-url'),\r\n            data: dataset ? { id: dataset.value } : null\r\n        }, function(data) {\r\n            var dlg = $.dialogs.getActiveDialog();\r\n            data.content = dlg.getContent();\r\n            _datasets[dlg.getId()] = new Dataset(data);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Destroy the form when the dialog closes.\r\n     */\r\n    $.on(document, 'datasetFormUnload', function() {\r\n        if (!_datasets) {\r\n            return;\r\n        }\r\n\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var dataset = _datasets[dlg.getId()];\r\n        if (dataset) {\r\n            dataset.destroy();\r\n        }\r\n        delete _datasets[dlg.getId()];\r\n    });\r\n})(this.$, this.Dataset);\r\n","/*!\r\n * Wraps functionality for displaying reports.\r\n */\r\n(function($, Draggabilly, ShareForm, ReportDetails) {\r\n    'use strict';\r\n\r\n    var _reports = {};\r\n    var _shares = {};\r\n\r\n    /**\r\n     * Update zIndex of column being dragged so it is on top.\r\n     * @param {Event} event - Original mousedown or touchstart event\r\n     */\r\n    var startDrag = function(event) {\r\n        var target = $.hasClass(event.target, 'column-item') ? event.target : event.target.parentNode;\r\n        target.style['z-index'] = 9999;\r\n    };\r\n\r\n    /**\r\n     * Update column lists when the user stops dragging a column.\r\n     * @param {Event} event - Original mouseup or touchend event\r\n     * @param {MouseEvent|Touch} pointer - Event object that has .pageX and .pageY\r\n     */\r\n    var stopDrag = function(event, pointer) {\r\n        var target = $.hasClass(event.target, 'column-item') ? event.target : event.target.parentNode;\r\n        var isLeft = pointer.x + target.offsetWidth / 2 < document.documentElement.clientWidth / 2;\r\n        var newPos = Math.max(Math.round(target.offsetTop / target.offsetHeight), 0);\r\n\r\n        $.removeClass(target, 'column-item-right');\r\n        $.removeClass(target, 'column-item-left');\r\n        target.removeAttribute('style');\r\n\r\n        var leftItems = $.getAll('.column-item-left');\r\n        leftItems.sort(columnSort);\r\n        var rightItems = $.getAll('.column-item-right');\r\n        rightItems.sort(columnSort);\r\n        newPos = Math.min(newPos, isLeft ? leftItems.length : rightItems.length);\r\n\r\n        if (isLeft) {\r\n            $.addClass(target, 'column-item-left');\r\n            leftItems.splice(newPos, 0, target);\r\n        } else {\r\n            $.addClass(target, 'column-item-right');\r\n            rightItems.splice(newPos, 0, target);\r\n        }\r\n\r\n        updateList(leftItems, true);\r\n        updateList(rightItems, false);\r\n    };\r\n\r\n    /**\r\n     * Sort columns by their vertical position.\r\n     * @param {Object} a - Object for first column.\r\n     * @param {Object} b - Object for second column.\r\n     * @returns {bool} True if first column should be after second column, else false;\r\n     */\r\n    var columnSort = function(a, b) {\r\n        return a.offsetTop > b.offsetTop;\r\n    };\r\n\r\n    /**\r\n     * Update the position and displayOrder of columns in a list.\r\n     * @param {Node[]} items - Array of column nodes.\r\n     * @param {bool} isLeft - True if the left column list, else false.\r\n     */\r\n    var updateList = function(items, isLeft) {\r\n        items.forEach(function(x, i) {\r\n            updateColumn(x, i, isLeft);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Update the class list and displayOrder for a column item.\r\n     * @param {Node} element - DOM node for the column.\r\n     * @param {number} index - New index of the column in the list.\r\n     * @param {bool} isLeft - True if the column is in the left list, else false.\r\n     */\r\n    var updateColumn = function(element, index, isLeft) {\r\n        element.className = element.className.replace(/column-item-y-([0-9]*)/i, '').trim() + ' column-item-y-' + index;\r\n        var input = $.get('.column-grid-display-order', element);\r\n        if (input) {\r\n            if (isLeft) {\r\n                input.value = 0;\r\n            } else {\r\n                input.value = index + 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initialize the report column selector.\r\n     */\r\n    $.on(document, 'columnSelectorLoad', function() {\r\n        $.getAll('.column-item').forEach(function(x) {\r\n            new Draggabilly(x).on('dragStart', startDrag).on('dragEnd', stopDrag);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Request settings to display a report and call the method to initialize it.\r\n     */\r\n    $.on(document, 'reportLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'report-form')) {\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-url')\r\n        }, function(data) {\r\n            var dlg = $.dialogs.getActiveDialog();\r\n            data.content = dlg.getContent();\r\n            _reports[dlg.getId()] = new ReportDetails(data);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Clean up when closing the report dialog.\r\n     */\r\n    $.on(document, 'reportUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var report = _reports[dlg.getId()];\r\n        if (report) {\r\n            report.destroy();\r\n        }\r\n        delete _reports[dlg.getId()];\r\n        document.dispatchEvent($.events.dashboardReload);\r\n    });\r\n\r\n    /**\r\n     * Load the settings to display the report share form.\r\n     */\r\n    $.on(document, 'reportShareLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'report-share-form')) {\r\n            return;\r\n        }\r\n\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        _shares[dlg.getId()] = new ShareForm({ content: dlg.getContent(), formName: 'Shares' });\r\n        _shares[dlg.getId()].run();\r\n    });\r\n\r\n    /**\r\n     * Clean up when the report share dialog closes.\r\n     */\r\n    $.on(document, 'reportShareUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var share = _shares[dlg.getId()];\r\n        if (share) {\r\n            share.destroy();\r\n        }\r\n        delete _shares[dlg.getId()];\r\n    });\r\n})(this.$, this.Draggabilly, this.ShareForm, this.ReportDetails);\r\n","/*!\r\n * Wraps functionality for displaying charts.\r\n */\r\n(function($, Alertify, Chart, ChartDetails, ShareForm) {\r\n    'use strict';\r\n\r\n    // Change chart settings.\r\n    Chart.defaults.global.maintainAspectRatio = false;\r\n    Chart.defaults.global.title.display = false;\r\n    Chart.defaults.global.legend.position = 'bottom';\r\n    Chart.defaults.global.legend.labels.fontSize = 16;\r\n    Chart.defaults.global.legend.labels.fontFamily = 'Calibri';\r\n    Chart.defaults.global.layout = { padding: 10 };\r\n    Chart.defaults.scale.ticks.fontFamily = 'Calibri';\r\n    Chart.defaults.scale.ticks.fontSize = 12;\r\n\r\n    var _charts = {};\r\n    var _shares = {};\r\n\r\n    /**\r\n     * Request settings to display a chart and call the method to initialize it.\r\n     */\r\n    $.on(document, 'chartLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'chart-form')) {\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-url')\r\n        }, function(data) {\r\n            var dlg = $.dialogs.getActiveDialog();\r\n            data.content = dlg.getContent();\r\n            _charts[dlg.getId()] = new ChartDetails(data);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Clean up when closing the chart dialog.\r\n     */\r\n    $.on(document, 'chartUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var chart = _charts[dlg.getId()];\r\n        if (chart) {\r\n            chart.destroy();\r\n        }\r\n        delete _charts[dlg.getId()];\r\n        document.dispatchEvent($.events.dashboardReload);\r\n    });\r\n\r\n    /**\r\n     * Load the settings to display the chart share form.\r\n     */\r\n    $.on(document, 'chartShareLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'chart-share-form')) {\r\n            return;\r\n        }\r\n\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        _shares[dlg.getId()] = new ShareForm({ content: dlg.getContent(), formName: 'Shares' });\r\n        _shares[dlg.getId()].run();\r\n    });\r\n\r\n    /**\r\n     * Clean up when the chart share dialog closes.\r\n     */\r\n    $.on(document, 'chartShareUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var share = _shares[dlg.getId()];\r\n        if (share) {\r\n            share.destroy();\r\n        }\r\n        delete _shares[dlg.getId()];\r\n    });\r\n})(this.$, this.Alertify, this.Chart, this.ChartDetails, this.ShareForm);\r\n","/*!\r\n * Wraps functionality for displaying/moving/resizing widgets and their contents.\r\n */\r\n(function($, Widget) {\r\n    'use strict';\r\n\r\n    var _columns = 20;\r\n    var _rows = 20;\r\n    var _currentPositions = null;\r\n\r\n    /**\r\n     * Initialize the dashboard.\r\n     * @param {Object} widgets - Widgets options.\r\n     */\r\n    var create = function(widgets) {\r\n        var dashboard = $.get('#dashboard');\r\n        widgets = $.coalesce(widgets, []);\r\n\r\n        var opts = makeWidgetOpts(dashboard);\r\n        if (widgets.length) {\r\n            widgets.forEach(function(x) { new Widget($.extend(x, opts)); });\r\n            $.on(window, 'keydown', checkKeyPress);\r\n            $.on(window, 'resize', $.debounce(resizeLayout, 100));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Make the extra options needed to create a widget.\r\n     * @param {Node} dashboard - Dashboard node.\r\n     * @returns {Object} Object with grid and layoutCallback.\r\n     */\r\n    var makeWidgetOpts = function(dashboard) {\r\n        dashboard = $.coalesce(dashboard, $.get('#dashboard'));\r\n        return {\r\n            grid: { columns: _columns, rows: _rows, columnWidth: dashboard.parentNode.offsetWidth / _columns, rowHeight: dashboard.parentNode.offsetHeight / _rows },\r\n            layoutCallback: $.debounce(updatePosition, 100)\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Get the config for the dashboard from the server.\r\n     */\r\n    $.on(document, 'dashboardLoad', function() {\r\n        var dash = $.get('#dashboard');\r\n        if (!dash) {\r\n            return;\r\n        }\r\n        var json = dash.getAttribute('data-json');\r\n        if (json) {\r\n            dash.removeAttribute('data-json');\r\n            create(JSON.parse(json));\r\n        } else if (dash.hasAttribute('data-url')) {\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: dash.getAttribute('data-url')\r\n            }, function(data) {\r\n                create(data);\r\n            });\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Fetch widget settings from server and add/reload/delete widgets as needed.\r\n     */\r\n    $.on(document, 'dashboardReload', function() {\r\n        var dash = $.get('#dashboard');\r\n        if (!(dash && dash.hasAttribute('data-url'))) {\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: dash.getAttribute('data-url')\r\n        }, function(widgetOpts) {\r\n            if (widgetOpts) {\r\n                var widgets = getWidgets();\r\n\r\n                widgetOpts.forEach(function(x) {\r\n                    var widgetDate = new Date(x.widgetDateUpdated);\r\n                    var oldWidget = $.findByKey(widgets, 'id', x.id);\r\n                    if (!oldWidget) {\r\n                        // newly added widget\r\n                        new Widget($.extend(x, makeWidgetOpts()));\r\n                    } else {\r\n                        // existing widget - remove this widget from the list\r\n                        widgets.splice(oldWidget._i, 1);\r\n\r\n                        if (oldWidget.initDate < widgetDate) {\r\n                            // this widget needs to be reloaded\r\n                            oldWidget.reload(null, x);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                if (widgets.length) {\r\n                    // any widgets still left need to be deleted\r\n                    widgets.forEach(function(x) { x.destroy(true); });\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Get the widget objects for the dashboard.\r\n     * @returns {Widget[]} Array of widgets.\r\n     */\r\n    var getWidgets = function() {\r\n        return $.getAll('.grid-item').map(function(x) { return x.widget; });\r\n    };\r\n\r\n    /**\r\n     * Update widget tables on window resize.\r\n     */\r\n    var resizeLayout = function() {\r\n        var grid = makeWidgetOpts().grid;\r\n        getWidgets().forEach(function(x) {\r\n            if (x.opts.isData) {\r\n                x.table.updateLayout();\r\n            }\r\n            x.setupDraggie(null, grid);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Update widget position to avoid collisions after a resize or drag.\r\n     */\r\n    var updatePosition = function() {\r\n        var sorted = getWidgets();\r\n        sorted.sort(rectSort);\r\n\r\n        var l = sorted.length, aWidget, bWidget;\r\n        for (var i = 0; i < l; i++) {\r\n            aWidget = sorted[i];\r\n            aWidget.rect.updated = false;\r\n\r\n            for (var j = 0; j < l; j++) {\r\n                if (i === j) {\r\n                    continue;\r\n                }\r\n\r\n                bWidget = sorted[j];\r\n                if (bWidget.rect.overlaps(aWidget.rect)) {\r\n                    if (bWidget.rect.y > aWidget.rect.y) {\r\n                        // need to move down\r\n                        bWidget.setLocation(bWidget.rect.x, aWidget.rect.y + aWidget.rect.height);\r\n                    } else if (aWidget.rect.x + aWidget.rect.width + bWidget.rect.width > _columns) {\r\n                        // need to move down\r\n                        bWidget.setLocation(bWidget.rect.x, aWidget.rect.y + aWidget.rect.height);\r\n                    } else {\r\n                        // safe to move right\r\n                        bWidget.setLocation(aWidget.rect.x + aWidget.rect.width, bWidget.rect.y);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        saveDashboard();\r\n    };\r\n\r\n    /**\r\n     * Sort widgets from top left to bottom right.\r\n     * @param {Widget} a - First widget to compare.\r\n     * @param {Widget} b - Second widget to compare.\r\n     * @returns {number} Negative number if a comes first, positive number if b, zero if equal.\r\n     */\r\n    var rectSort = function(a, b) {\r\n        if (a.rect.y === b.rect.y && a.rect.x === b.rect.x) {\r\n            return a.rect.updated ? -1 : b.rect.updated ? 1 : 0;\r\n        }\r\n        if (a.rect.x === b.rect.x) {\r\n            return a.rect.y - b.rect.y;\r\n        }\r\n        return a.rect.x - b.rect.x;\r\n    };\r\n\r\n    /**\r\n     * Save dashboard settings back to server.\r\n     */\r\n    var saveDashboard = function() {\r\n        var positions = getWidgets().map(function(w) {\r\n            return {\r\n                Id: w.opts.id || 0,\r\n                Width: w.rect.width || 1,\r\n                Height: w.rect.height || 1,\r\n                X: w.rect.x || 0,\r\n                Y: w.rect.y || 0\r\n            };\r\n        });\r\n\r\n        if (_currentPositions && $.equals(_currentPositions, positions)) {\r\n            return;\r\n        }\r\n        _currentPositions = positions;\r\n\r\n        var dash = $.get('#dashboard');\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: dash.getAttribute('data-save-url'),\r\n            data: { Widgets: positions },\r\n            block: false\r\n        }, null);\r\n    };\r\n\r\n    /**\r\n     * Toggle full screen on escape key.\r\n     * @param {Event} evt - Key press event.\r\n     */\r\n    var checkKeyPress = function(evt) {\r\n        evt = evt || window.event;\r\n        if (evt.keyCode === 27) {\r\n            getWidgets().filter(function(x) { return x.isFullscreen; }).forEach(function(x) { x.toggleFullScreen(); });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set up content after page has loaded.\r\n     */\r\n    var pageLoaded = function() {\r\n        $.dialogs.processContent($.get('body'));\r\n\r\n        $.on('#toggleContextHelpBtn', 'click', function(e) {\r\n            e.preventDefault();\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: this.getAttribute('href')\r\n            }, function(data) {\r\n                if (data.enabled) {\r\n                    $.addClass('#toggleContextHelpBtn', 'help-active');\r\n                } else {\r\n                    $.removeClass('#toggleContextHelpBtn', 'help-active');\r\n                }\r\n            });\r\n        });\r\n\r\n        $.on('#menuBtn', 'click', function() {\r\n            var body = $.get('body');\r\n            if ($.hasClass(body, 'toggled')) {\r\n                $.removeClass(body, 'toggled');\r\n            } else {\r\n                $.addClass(body, 'toggled');\r\n            }\r\n\r\n            // fire window resize in cross browser friendly way so tables and charts will resize\r\n            var evt = document.createEvent('HTMLEvents');\r\n            evt.initEvent('resize', true, false);\r\n            window.dispatchEvent(evt);\r\n        });\r\n\r\n        document.dispatchEvent($.events.dashboardLoad);\r\n    };\r\n\r\n    /**\r\n     * Run events needed for the inital page load.\r\n     */\r\n    if ($.resxLoaded) {\r\n        pageLoaded();\r\n    } else {\r\n        $.on(document, 'resxLoaded', pageLoaded);\r\n    }\r\n})(this.$, this.Widget);\r\n"]}