{"version":3,"sources":["native.bootstrap.js","fecha.js","accounting.js","Help.js","Dialog.js","Autocomplete.js","DatePicker.js","Rect.js","Draggabilly.js","Chart.js","Prism.js","CollapsibleList.js","Validator.js","colors.js","ColorPicker.js","Table.js","DashChart.js","Form.js","JoinForm.js","ColumnForm.js","ShareForm.js","FilterForm.js","GroupForm.js","RangeForm.js","Dataset.js","BaseDetails.js","ReportDetails.js","ChartDetails.js","Widget.js","dialogs.js","datasets.js","reports.js","charts.js","dashboard.js"],"names":["root","factory","Tab","$","element","this","tab","get","tabs","parentNode","dropdown","hasClass","duration","init","prototype","actions","on","action","self","e","window","preventDefault","next","target","nextContent","getAttribute","activeTab","getActiveTab","activeContent","getActiveContent","removeClass","getAll","addClass","setTimeout","activeTabs","length","a","b","shorten","arr","sLen","newArr","i","len","push","substr","monthUpdate","arrName","d","v","i18n","index","indexOf","charAt","toUpperCase","toLowerCase","month","pad","val","String","fecha","token","twoDigits","word","literal","noop","dayNames","monthNames","monthNamesShort","dayNamesShort","amPm","DoFn","D","formatFlags","dateObj","getDate","DD","Do","getDay","dd","ddd","dddd","M","getMonth","MM","MMM","MMMM","YY","getFullYear","YYYY","h","getHours","hh","H","HH","m","getMinutes","mm","s","getSeconds","ss","S","Math","round","getMilliseconds","SS","SSS","A","ZZ","o","getTimezoneOffset","floor","abs","l","onejan","Date","ceil","ll","q","parseFlags","day","RegExp","source","parseInt","cent","year","hour","minute","second","millisecond","isPm","minutes","parts","match","timezoneOffset","masks","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","format","mask","i18nSettings","isNaN","getTime","literals","replace","$0","$1","slice","shift","parse","dateStr","Error","isValid","dateInfo","isUtc","info","search","result","today","date","UTC","lib","version","settings","currency","symbol","decimal","thousand","precision","grouping","number","tokens","value","checkPrecision","parseFormat","isString","x","res","newFormat","exec","unformat","regex","unformatted","parseFloat","toFixed","power","pow","formatNumber","opts","extend","usePrecision","negative","base","mod","split","accounting","formatMoney","formats","isFunction","pos","neg","zero","checkCurrencyFormat","Help","Alertify","oninit","vnode","attrs","enabled","message","showHelp","alert","dialogs","focusOnClose","bind","view","children","concat","type","role","onclick","isArray","Dialog","id","title","basic","buttons","_buttons","content","onOkay","onCancel","onShow","parent","elements","container","changed","run","ok","cancel","close","_keys","ENTER","ESC","tryGetValue","field","fieldName","name","pop","substring","isNull","trySetValue","obj","hasOwnProperty","onkeydown","checkKey","tabindex","class","trust","oncreate","node","dom","firstElementChild","hasAttribute","redraw","document","createElement","body","appendChild","mount","processContent","checkEvent","getId","getContainer","getContent","getTarget","findForm","matches","call","focusNode","form","validateForm","formData","serializeForm","ajax","method","url","data","__RequestVerificationToken","responseData","parentDlg","findDialogById","parentTarget","destroy","closeParent","dialogUrl","sendAjaxRequest","confirm","resx","focus","keyCode","attrName","ev","events","dispatchEvent","bracketRegEx","disabled","Array","apply","options","filter","selected","map","checked","pieces","setTabStatus","el","closest","formValidate","forEach","mErrors","error","tableNode","table","removeChild","removeDialog","refreshTable","Autocomplete","DOWN","TAB","UP","valueChanged","placeholder","active","required","onSelect","list","filteredList","selectedIndex","onupdate","autocomplete","setList","onKeyDown","selectItem","stopPropagation","selectIndex","min","max","onInput","onBlur","ul","scrollIntoView","item","input","highlightItem","text","regExpEscape","trim","hasValue","aria-autocomplete","oninput","onblur","aria-selected","onmousedown","DatePicker","chooseDate","props","box","selectedDate","textContent","setFullYear","setDate","dismissAndCommit","relatedTarget","onchange","prevNext","delta","newDate","setMonth","pushToLastDay","lastDateInMonth","over","under","adjustedProps","oldDate","stringsForLocale","locale","_months","_days","toLocaleDateString","weekday","days","months","classForBox","SPACE","hours","prevNextTitles","weekStart","formatOptions","Header","theseMonths","MonthView","prevDates","firstDay","array","lastDate","daysFromLastMonth","theseDates","daysFromThisMonth","nextDates","prev","these","n","daysFromNextMonth","theseWeekdays","_","idx","wrapAround","setHours","setMinutes","YearView","DecadeView","decade","start","yearsForDecade","Editor","requestAnimationFrame","classList","add","onbeforeremove","remove","Promise","done","localize","loc","isNumber","strings","now","defaultDate","prop","state","onbeforeupdate","chosen","showEditor","KeyboardEvent","readonly","Rect","width","height","y","coalesce","updated","overlaps","rect","thisRight","thisBottom","rectRight","rectBottom","getSize","getStyleSize","num","elem","isSetup","div","style","padding","borderStyle","borderWidth","boxSizing","documentElement","getComputedStyle","isBoxSizeOuter","setup","isNode","display","size","innerWidth","innerHeight","outerWidth","outerHeight","measurementsLength","measurements","getZeroSize","offsetWidth","offsetHeight","isBorderBox","measurement","paddingWidth","paddingLeft","paddingRight","paddingHeight","paddingTop","paddingBottom","marginWidth","marginLeft","marginRight","marginHeight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderHeight","borderTopWidth","borderBottomWidth","isBorderBoxSizeOuter","styleWidth","styleHeight","EvEmitter","eventName","listener","_events","listeners","off","splice","emitEvent","args","Unipointer","proto","Object","create","bindStartEvent","_bindStartEvent","unbindStartEvent","isBind","bindMethod","navigator","pointerEnabled","msPointerEnabled","handleEvent","event","getTouch","touches","findByKey","pointerIdentifier","button","_pointerDown","ontouchstart","changedTouches","onMSPointerDown","onpointerdown","pointer","isPointerDown","undefined","pointerId","identifier","pointerDown","_bindPostStartEvents","postStartEvents","mousedown","touchstart","pointerdown","MSPointerDown","addEventListener","_boundPointerEvents","_unbindPostStartEvents","removeEventListener","onmousemove","_pointerMove","onMSPointerMove","onpointermove","ontouchmove","touch","pointerMove","onmouseup","_pointerUp","onMSPointerUp","onpointerup","ontouchend","_pointerDone","pointerUp","pointerDone","onMSPointerCancel","onpointercancel","_pointerCancel","ontouchcancel","pointerCancel","getPointerPoint","pageX","pageY","Unidragger","bindHandles","_bindHandles","unbindHandles","binderExtra","handle","handles","nodeName","_dragPointerDown","focused","activeElement","blur","pointerDownPoint","canPreventDefaultOnPointerDown","moveVector","_dragPointerMove","_dragMove","movePoint","isDragging","hasDragStarted","_dragStart","_dragPointerUp","_dragEnd","_staticClick","dragStartPoint","isPreventingClicks","dragStart","dragMove","dragEnd","isIgnoringMouseUp","staticClick","Draggabilly","_create","applyGrid","grid","applyMinZero","drag","lastTime","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","currTime","timeToCall","transformProperty","transform","positionValues","relative","absolute","fixed","position","_getPosition","startPoint","dragPoint","startPosition","enable","setHandles","_getPositionCoord","left","top","_addTransformPosition","styleSide","measure","parentSize","matrixValues","xIndex","translateX","translateY","isEnabled","measureContainment","setLeftTop","animate","containment","elemSize","containerSize","elemRect","getBoundingClientRect","containerRect","borderSizeX","borderSizeY","relativeStartPosition","containSize","dragX","dragY","gridX","gridY","containDrag","axis","minZero","positionDrag","disable","removeAttribute","f","exports","module","define","amd","global","Chart","t","r","u","require","code","1","getRgba","string","rgb","colorNames","scale","getHsla","alpha","getHwb","rgbaString","rgba","percentaString","hslaString","hsla","hexDouble","str","toString","getRgb","getHsl","getAlpha","vals","hexString","rgbString","percentString","hslString","hwbString","hwb","keyword","reverseNames","5","2","convert","Color","valid","values","hsl","hsv","cmyk","setValues","red","lightness","w","whiteness","c","cyan","setSpace","arguments","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","p","w1","w2","toJSON","clone","console","spaces","maxes","getValues","space","chans","capped","sname","svalues","4","3","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","k","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","hwb2rgb","wh","bl","cmyk2rgb","xyz2rgb","xyz2lab","lab2xyz","lab","y2","lab2lch","hr","atan2","PI","sqrt","lab2rgb","lch2lab","lch","cos","sin","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","key","conversions","Converter","func","arg","pair","from","to","convs","routeSpace","fspace","6","helpers","defaults","Element","Interaction","layouts","platform","plugins","Ticks","register","initialize","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","31","36","39","40","44","45","46","7","8","9","Bar","context","config","Doughnut","Line","_set","hover","mode","scales","xAxes","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","yAxes","rectangle","borderSkipped","tooltips","callbacks","yLabel","labels","label","datasets","datasetIndex","xLabel","controllers","bar","DatasetController","dataElementType","Rectangle","meta","getMeta","stack","getDataset","update","reset","ilen","rects","_ruler","getRuler","updateElement","chart","dataset","custom","rectangleOptions","_xScale","getScaleForId","xAxisID","_yScale","yAxisID","_datasetIndex","_index","_model","datasetLabel","backgroundColor","valueAtIndexOrDefault","borderColor","updateElementGeometry","pivot","model","vscale","getValueScale","getBasePixel","horizontal","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","last","stacked","stacks","getDatasetMeta","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","isNullOrUndef","barThickness","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","count","computeFitCategoryTraits","stackIndex","valueOrDefault","maxBarThickness","Infinity","draw","canvas","clipArea","ctx","chartArea","unclipArea","setHoverStyle","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","rectangleElementOptions","horizontalBar","animation","animateRotate","animateScale","legendCallback","join","legend","generateLabels","ds","arc","arcOpts","fillStyle","strokeStyle","lineWidth","hidden","onClick","legendItem","cutoutPercentage","rotation","circumference","tooltipItem","dataLabel","doughnut","pie","Arc","linkScales","getRingIndex","ringIndex","j","me","availableWidth","right","availableHeight","bottom","minSize","startAngle","endAngle","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","each","animationOpts","centerX","centerY","calculateCircumference","arcs","hoverWidth","_chart","showLines","spanGaps","lineEnabled","showLine","line","datasetElementType","Point","points","lineElementOptions","tension","lineTension","_scale","_children","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","fill","steppedLine","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","point","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","yScale","xScale","pointOptions","radius","pointRadius","hitRadius","pointHitRadius","NaN","calculatePointY","skip","pointStyle","dsMeta","sumPos","sumNeg","stackedRightValue","Number","rightValue","capControlPoint","pt","controlPoints","area","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","controlPointNextY","capBezierPoints","hoverRadius","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","easing","onProgress","onComplete","Animation","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","framesToDrop","advance","endTime","defineProperty","set","positionIsHorizontal","types","instances","construct","configMerge","initConfig","acquireContext","uid","aspectRatio","_bufferedRender","notify","retinaScale","devicePixelRatio","bindEvents","responsive","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","clear","stop","silent","maintainAspectRatio","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","responsiveAnimationDuration","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","items","keys","reduce","dtype","dposition","isDefault","scaleType","scaleClass","scaleService","getScaleConstructor","mergeTicksOptions","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","ControllerClass","resetElements","tooltip","newOptions","removeBox","_options","updateConfig","_invalidate","_data","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","effects","stepDecimal","easingValue","transition","boxes","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","modes","single","getElementsAtEvent","intersect","getElementsAtXAxis","getElementsAtEventForMode","getDatasetAtEvent","_meta","generateLegend","unbindEvents","releaseContext","toBase64Image","toDataURL","Tooltip","_chartInstance","_listeners","eventHandler","updateHoverStyle","_start","bufferedRequest","animationDuration","hoverOptions","onHover","native","arrayEquals","Controller","unlistenArrayEvents","stub","_chartjs","arrayEvents","addElements","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","configurable","enumerable","object","listenArrayEvents","resyncElements","elementOpts","numMeta","numData","insertElements","onDataPush","onDataPop","onDataShift","onDataSplice","onDataUnshift","inherits","scope","merge","color","configuration","_view","ease","actual","origin","c0","c1","isFinite","interpolate","tooltipPosition","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","constrainedNode","constrainedContainer","hasCNode","hasCContainer","infinity","POSITIVE_INFINITY","merger","tval","sval","scaleMerge","getScaleDefaults","_merger","slen","where","collection","filterCallback","filtered","findNextWhere","arrayToSearch","startIndex","currentItem","findPreviousWhere","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","log10","exponent","log","LOG10E","powerOf10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distance","distanceBetweenPoints","pt1","pt2","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","current","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","alphaK","betaK","tauK","squaredMagnitude","deltaX","loop","niceNum","fraction","oRequestAnimationFrame","msRequestAnimationFrame","getRelativePosition","evt","mouseX","mouseY","originalEvent","currentTarget","srcElement","boundingRect","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","clientWidth","cw","clientHeight","ch","property","currentStyle","getPropertyValue","forceRatio","pixelRatio","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","cache","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","defaultColor","colorValue","CanvasPattern","parseVisibleItems","handler","jlen","getIntersectItems","inRange","getNearestItems","distanceMetric","minDistance","nearestItems","getCenterPoint","getDistanceMetricForAxis","useX","useY","deltaY","indexMode","x-axis","nearest","sort","ret","getArea","intersectsItem","inXRange","inYRange","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","layout","filterByPosition","sortByWeight","reverse","_tmpIndex_","v0","v1","addBox","fullWidth","layoutItem","configure","fitBox","minBoxSize","minBoxSizes","minBox","scaleMargin","totalLeftBoxesWidth","maxHorizontalLeftPadding","totalRightBoxesWidth","maxHorizontalRightPadding","chartWidth","maxChartAreaWidth","chartHeight","maxChartAreaHeight","placeBox","leftPadding","rightPadding","totalTopBoxesHeight","layoutOptions","toPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","totalBottomBoxesHeight","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","_plugins","_cacheId","plugin","unregister","hook","descriptor","params","descriptors","$plugins","labelsFromTicks","getLineValue","lineValue","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","formatters","minor","major","computeTextSize","tick","parseFontOptions","globalDefaults","fontSize","family","parseLineHeight","toLineHeight","Scale","_ticks","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","rawValue","getLabelForIndex","getValueForPixel","pixel","finalVal","getPixelForDecimal","valueOffset","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","optionMajorTicks","isRotated","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","zeroLineIndex","tx1","ty1","tx2","ty2","x1","y1","x2","labelX","labelY","textAlign","textBaseline","labelYOffset","xLineValue","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","save","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","constructors","registerScaleType","scaleConstructor","scaleDefaults","updateScaleDefaults","additions","linear","tickValue","logDelta","tickString","numDecimal","logarithmic","remain","toExponential","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","createTooltipItem","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","dataPoints","vm","paddingAndSize","radiusAndPadding","getBackgroundPoint","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","quadraticCurveTo","closePath","hasTooltipContent","average","eventPosition","nearestElement","tp","27","inLabelRange","chartX","chartY","pointRelativePosition","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","28","currentVM","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","29","xRange","drawPoint","30","isVertical","getBarBounds","halfWidth","halfHeight","cornerAt","corners","startCorner","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corner","bounds","32","clearRect","roundedRect","rx","ry","edgeLength","xOffset","yOffset","SQRT2","leftX","topY","sideSize","drawImage","clip","flip","bezierCurveTo","drawRoundedRectangle","33","isObject","defaultValue","fn","thisArg","loopable","a0","a1","klen","_mergerIf","mergeIf","sources","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","34","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","35","resolve","inputs","37","getContext","38","readUsedSize","eventListenerOptions","createEvent","nativeEvent","addResizeListener","expando","EXPANDO_KEY","resizer","cls","CSS_PREFIX","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","createResizer","ticking","throttled","proxy","renderProxy","animationName","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","reflow","offsetParent","CSS_RENDER_MONITOR","watchForRender","insertBefore","firstChild","removeResizeListener","unwatchForRender","EVENT_TYPES","touchmove","touchend","pointerenter","pointermove","pointerup","pointerleave","pointerout","supports","passive","_enabled","getElementById","renderHeight","renderWidth","initial","displayWidth","displayHeight","initCanvas","setAttribute","proxies","fromNativeEvent","addEvent","removeEvent","implementation","filler","41","42","43","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","getBasePosition","resolveTarget","propagate","visited","visible","createMapper","mappers","isDrawable","drawArea","curve0","curve1","len0","len1","boundary","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","span","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","createNewLegendAndAttach","legendOpts","Legend","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","_element","beforeInit","afterEvent","createNewTitleBlockAndAttach","titleOpts","Title","titleBlock","textSize","titleX","titleY","titleFont","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","LinearScaleBase","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","tickFontSize","handleDirectionalChanges","innerDimension","ticksAsNumbers","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","stepSize","fixedStepSize","generationOptions","dataRange","spacing","niceRange","niceMin","niceMax","numSpaces","generateTicks","lang","prism","util","encode","Token","alias","languages","redef","inside","insert","grammar","newToken","DFS","highlightAll","async","querySelectorAll","highlightElement","language","test","env","hooks","Worker","worker","filename","onmessage","highlightedCode","postMessage","immediateClose","highlight","tokenize","strarr","rest","tokenloop","patterns","pattern","lookbehind","lookbehindLength","lastIndex","wrapped","all","tag","classes","attributes","aliases","Prism","sql","comment","variable","function","boolean","operator","punctuation","CollapsibleList","lis","createClickListener","toggle","pi","checkedRelative","relatives","forceOpen","open","uls","li","Validator","errorMsgs","_errors","targetElement","resetAll","validateInput","onSubmit","validate","minlength","VALIDATORS","checkValidity","setCustomValidity","isValidatableInput","defaultPrevented","errors","runValidators","showErrors","clearErrors","inputSelector","results","visibility","tagName","validator","attr","validationMessage","group","block","errorElement","errHtml","hasErrors","colors","hex2rgb","hex","ColorPicker","LEFT","RIGHT","selectColor","swatches","trigger","data-value","Table","columns","requestMethod","requestUsePascalCase","requestParams","searchable","loadAllData","inputTimeout","columnMinWidth","editable","pageDropdown","headerButtons","storageFunction","itemsPerPage","searchQuery","currentStartItem","sorting","dataCallback","errorCallback","dataDateFormat","displayDateFormat","displayCurrencyFormat","resources","firstPage","previousPage","nextPage","lastPage","noData","showing","page","perPage","loadingError","tryAgain","layoutSet","loading","filteredTotal","pageTotal","totalDistance","lastSeenAt","columnRenderer","colGroups","intColumns","dateColumns","currencyColumns","column","hasPositiveValue","store","columnFunction","links","getDisplayValue","dataType","link","href","icon","processData","rows","pageOptions","myKey","isUndefined","localStorage","filterResults","loadData","buildParams","refresh","dir","StartItem","Items","Query","Sort","toPascalKeys","startItem","query","setCurrentStartItem","setItemsPerPage","setSearchQuery","clearTimeout","requestTimer","runSearch","filterArray","moveToPage","changePage","changeSort","shiftKey","getSelection","removeAllRanges","_i","compare","defaultCompare","setLayout","tableLayout","tableHeaderRow","tHead","hWidth","tWidth","cells","debounce","move","onMouseMove","up","onMouseUp","touchHandler","header","cWidth","pixelToFloat","isVisible","colGroup","scroll","offsetLeft","onHeaderMouseDown","inResizeArea","cellEl","stopImmediatePropagation","resizeContext","colIndex","cellIndex","initX","scrWidth","initTblWidth","initColWidth","layoutTimer","newStyle","newColWidth","newTblWidth","tblX","clientLeft","previousElementSibling","mouseEvent","simulatedEvent","initMouseEvent","screenX","screenY","getFieldValue","aa","bb","tableHeaders","thAttrs","divAttrs","divContent","sortable","onscroll","tableBodyView","tableFooterView","tableCellView","tableRowView","colspan","currentPage","optionList","DashChart","showLegend","dataFn","errorFn","toggleExportFn","randomWithin","random","randomColor","randomColors","cnt","parseColor","show","hide","ranges","some","yTitle","xType","currencyFormat","dateFormat","chartType","isRadial","yType","chartData","Form","records","wantsHelp","appendRecord","deleteRecord","confirmDelete","confirmDeleteAll","areYouSure","moveUp","moveDown","help","addedCount","targetVal","setter","addRecord","newRecord","unshift","deleteFn","afterDeleteFn","deleteAllRecords","hasRecords","keyInput","withHelp","helpBody","innerContent","withError","requirePositive","isDate","withDisabled","isDisabled","withChecked","isChecked","withOptions","selectedValue","valueKey","textKey","buttonView","includeMove","btns","JoinForm","joinTypeId","tableName","columnUpdateFn","joins","joinTypes","sourceFn","setJoinTable","isProc","record","ColumnForm","columnName","dataTypeId","derived","filterTypeId","filterQuery","isParam","isExpanded","dataTypes","filterTypes","columnFn","selectedSourceFn","columnTitleSort","aTitle","bTitle","toggleExpanded","checkStatus","database","primarySource","importColumns","databaseId","newColumns","newRecords","existingColumns","colName","success","import","readOnly","for","ShareForm","formOpts","userId","roleId","shares","users","userList","roles","roleList","formName","userSelectAttr","share","roleSelectAttr","FilterForm","columnId","operatorId","criteria","criteria2","allowEdit","filters","reportId","saveFiltersUrl","filterOperators","filterOperatorIds","dateOperators","lookups","dataTable","boolOptions","setColumnId","setOperator","setCriteria","criteriaJson","saveFilters","Id","Filters","criteriaView","select","isRange","dateInterval","equal","multiple","lookup","numeric","isDatePicker","attrs2","criteriaArr","operatorView","filterView","filterColumns","GroupForm","displayOrder","groups","saveGroupsUrl","aggregator","aggregatorId","aggregators","saveGroups","GroupAggregator","Groups","setAggregator","groupView","RangeForm","xAxisColumnId","yAxisColumnId","dateIntervalId","chartId","saveRangesUrl","dateIntervals","reports","processJsonFn","canExportFn","saveRanges","Ranges","makeChart","chartContent","dashChart","exportChart","chartContainer","submit","setReport","rangeView","report","xColumns","yColumns","dateIntervalDisabled","inputsDisabled","col","Dataset","sourceList","columnList","formChanged","selectedSourceList","checkType","loadSourceList","loadColumnList","joinForm","getSourceList","columnForm","getColumnList","getSelectedSourceList","onChange","primary","updateColumnList","updateSelectedSources","equals","updateList","DatabaseId","Tables","typeId","tables","BaseDetails","openDialog","outerHTML","initDate","processJson","json","updatedDate","updateDate","dataSql","setSql","dataError","countSql","countError","ReportDetails","reportColumns","saveUrl","saveColumnsUrl","saveStorageFunc","previousColumnWidths","Columns","ReportWidth","dataUrl","Save","exportUrl","rowLimit","sortColumns","filterForm","groupForm","ChartDetails","enableExport","rangeForm","canExport","toggleExport","chartLoad","Widget","buildClassList","widget","isData","refreshSeconds","baseUrl","interval","isFullscreen","dragMargin","setupDraggie","reportRowLimit","reportWidth","onError","setInterval","setText","firstRender","createNode","forceRefresh","toggleFullScreen","deleteWidget","toLocaleTimeString","moveDraggie","columnWidth","rowHeight","stopDrag","resizeDraggie","initResize","stopResize","setLocation","layoutCallback","styles","setSize","reload","showMsg","hasOpenDialog","updatedAt","innerText","clearInterval","updateStyle","totalDestruction","fullScreenIcon","headerHideBtns","Dropdown","_contentActions","selector","tableLoad","handleAjaxRequest","inputReplace","_dialogs","dlgs","getActiveDialog","dlg","dismissAll","prompt","checkPrompt","promptValue","encodeURIComponent","updateObj","targetSelector","dialog","html","activeDlg","elems","Event","act","activeDialog","dashboard","_datasets","_reports","_shares","startDrag","newPos","offsetTop","leftItems","columnSort","rightItems","updateColumn","dashboardReload","_charts","_currentPositions","widgets","makeWidgetOpts","checkKeyPress","resizeLayout","updatePosition","dash","widgetOpts","getWidgets","widgetDate","widgetDateUpdated","oldWidget","sorted","rectSort","aWidget","bWidget","saveDashboard","positions","Width","Height","X","Y","Widgets","pageLoaded","initEvent","dashboardLoad","resxLoaded"],"mappings":"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","file":"modules.js","sourcesContent":["/*!\r\n * Native Javascript for Bootstrap 3\r\n * by dnp_theme\r\n * https://github.com/thednp/bootstrap.native\r\n *\r\n * Modified to use Dash's core library, and remove unneeded functionality.\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Tab = factory(root.$);\r\n})(this, function($) {\r\n    /**\r\n     * Declare Tab class.\r\n     * @param {Node} element - Node to trigger the tab.\r\n     */\r\n    var Tab = function(element) {\r\n        this.tab = $.get(element);\r\n        this.tabs = this.tab.parentNode.parentNode;\r\n        this.dropdown = $.get('.dropdown', this.tabs);\r\n        if ($.hasClass(this.tabs, 'menu')) {\r\n            this.dropdown = this.tabs.parentNode;\r\n            this.tabs = this.tabs.parentNode.parentNode;\r\n        }\r\n        this.duration = 100;\r\n        this.init();\r\n    };\r\n\r\n    /**\r\n     * Declare Tab class methods.\r\n     */\r\n    Tab.prototype = {\r\n        init: function() {\r\n            this.actions();\r\n            $.on(this.tab, 'click', this.action, false);\r\n        },\r\n\r\n        /**\r\n         * Closure for class methods.\r\n         */\r\n        actions: function() {\r\n            var self = this;\r\n\r\n            /**\r\n             * Display content of a tab.\r\n             * @param {Event} e - Event that triggered the tab change.\r\n             */\r\n            this.action = function(e) {\r\n                e = e || window.e; e.preventDefault();\r\n                var next = e.target; //the tab we clicked is now the next tab\r\n                var nextContent = $.get(next.getAttribute('href')); //this is the actual object, the next tab content to activate\r\n\r\n                // get current active tab and content\r\n                var activeTab = self.getActiveTab();\r\n                var activeContent = self.getActiveContent();\r\n\r\n                if (!$.hasClass(next.parentNode, 'active')) {\r\n                    // toggle \"active\" class name\r\n                    $.removeClass($.getAll('a', activeTab)[0], 'active');\r\n                    $.addClass(next, 'active');\r\n\r\n                    // handle dropdown menu \"active\" class name\r\n                    if (self.dropdown) {\r\n                        if (!$.hasClass(self.tab.parentNode.parentNode, 'menu')) {\r\n                            $.removeClass(self.dropdown, 'active');\r\n                        } else {\r\n                            $.addClass(self.dropdown, 'active');\r\n                        }\r\n                    }\r\n\r\n                    //1. hide current active content first\r\n                    $.removeClass(activeContent, 'show');\r\n\r\n                    setTimeout(function() {\r\n                        //2. toggle current active content from view\r\n                        $.removeClass(activeContent, 'active');\r\n                        $.addClass(nextContent, 'active');\r\n                    }, self.duration);\r\n                    setTimeout(function() {\r\n                        //3. show next active content\r\n                        $.addClass(nextContent, 'show');\r\n                    }, self.duration * 2);\r\n                }\r\n            };\r\n\r\n            /**\r\n            * Gets the currently active tab.\r\n            * @returns {Node} Active tab element.\r\n            */\r\n            this.getActiveTab = function() {\r\n                var activeTabs = $.getAll('.active', this.tabs);\r\n                if (activeTabs.length === 1 && !$.hasClass(activeTabs[0], 'dropdown')) {\r\n                    return activeTabs[0].parentNode;\r\n                } else if (activeTabs.length > 1) {\r\n                    return activeTabs[activeTabs.length - 1].parentNode;\r\n                }\r\n            };\r\n\r\n            /**\r\n            * Get the currently active tab content.\r\n            * @returns {Node} Active content element\r\n            */\r\n            this.getActiveContent = function() {\r\n                var a = this.getActiveTab();\r\n                var b = a && $.getAll('a', a);\r\n                return b.length && $.get(b[0].getAttribute('href'));\r\n            };\r\n        }\r\n    };\r\n\r\n    return Tab;\r\n});\r\n","/*!\r\n * Lightweight date library\r\n * https://github.com/taylorhakes/fecha\r\n *\r\n * Modified to add date manipulation methods similar to moment.js.\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Parse or format dates\r\n     * @class fecha\r\n     */\r\n    var fecha = {};\r\n    var token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\r\n    var twoDigits = /\\d\\d?/;\r\n    var threeDigits = /\\d{3}/;\r\n    var fourDigits = /\\d{4}/;\r\n    var word = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\r\n    var literal = /\\[([^]*?)\\]/gm;\r\n    var noop = function() { };\r\n\r\n    /**\r\n     * Abbreviate a string.\r\n     * @param {string[]} arr - Array of strings to shorten.\r\n     * @param {number} sLen - Max length of new strings.\r\n     * @returns {string[]} New array of strings.\r\n     */\r\n    function shorten(arr, sLen) {\r\n        var newArr = [];\r\n        for (var i = 0, len = arr.length; i < len; i++) {\r\n            newArr.push(arr[i].substr(0, sLen));\r\n        }\r\n        return newArr;\r\n    }\r\n\r\n    /**\r\n     * Update months names based on i18n resource.\r\n     * @param {string[]} arrName - Array of month names.\r\n     * @returns {string[]} Updated array of month names.\r\n     */\r\n    function monthUpdate(arrName) {\r\n        return function(d, v, i18n) {\r\n            var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());\r\n            if (~index) {\r\n                d.month = index;\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Left pad a number to length len using zeros.\r\n     * @param {number|string} val - Value to pad.\r\n     * @param {number} len - Length to pad number to.\r\n     * @returns {string} Zero padded string.\r\n     */\r\n    function pad(val, len) {\r\n        val = String(val);\r\n        len = len || 2;\r\n        while (val.length < len) {\r\n            val = '0' + val;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    var monthNamesShort = shorten(monthNames, 3);\r\n    var dayNamesShort = shorten(dayNames, 3);\r\n    fecha.i18n = {\r\n        dayNamesShort: dayNamesShort,\r\n        dayNames: dayNames,\r\n        monthNamesShort: monthNamesShort,\r\n        monthNames: monthNames,\r\n        amPm: ['am', 'pm'],\r\n        DoFn: function DoFn(D) {\r\n            return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];\r\n        }\r\n    };\r\n\r\n    var formatFlags = {\r\n        D: function(dateObj) {\r\n            return dateObj.getDate();\r\n        },\r\n        DD: function(dateObj) {\r\n            return pad(dateObj.getDate());\r\n        },\r\n        Do: function(dateObj, i18n) {\r\n            return i18n.DoFn(dateObj.getDate());\r\n        },\r\n        d: function(dateObj) {\r\n            return dateObj.getDay();\r\n        },\r\n        dd: function(dateObj) {\r\n            return pad(dateObj.getDay());\r\n        },\r\n        ddd: function(dateObj, i18n) {\r\n            return i18n.dayNamesShort[dateObj.getDay()];\r\n        },\r\n        dddd: function(dateObj, i18n) {\r\n            return i18n.dayNames[dateObj.getDay()];\r\n        },\r\n        M: function(dateObj) {\r\n            return dateObj.getMonth() + 1;\r\n        },\r\n        MM: function(dateObj) {\r\n            return pad(dateObj.getMonth() + 1);\r\n        },\r\n        MMM: function(dateObj, i18n) {\r\n            return i18n.monthNamesShort[dateObj.getMonth()];\r\n        },\r\n        MMMM: function(dateObj, i18n) {\r\n            return i18n.monthNames[dateObj.getMonth()];\r\n        },\r\n        YY: function(dateObj) {\r\n            return String(dateObj.getFullYear()).substr(2);\r\n        },\r\n        YYYY: function(dateObj) {\r\n            return dateObj.getFullYear();\r\n        },\r\n        h: function(dateObj) {\r\n            return dateObj.getHours() % 12 || 12;\r\n        },\r\n        hh: function(dateObj) {\r\n            return pad(dateObj.getHours() % 12 || 12);\r\n        },\r\n        H: function(dateObj) {\r\n            return dateObj.getHours();\r\n        },\r\n        HH: function(dateObj) {\r\n            return pad(dateObj.getHours());\r\n        },\r\n        m: function(dateObj) {\r\n            return dateObj.getMinutes();\r\n        },\r\n        mm: function(dateObj) {\r\n            return pad(dateObj.getMinutes());\r\n        },\r\n        s: function(dateObj) {\r\n            return dateObj.getSeconds();\r\n        },\r\n        ss: function(dateObj) {\r\n            return pad(dateObj.getSeconds());\r\n        },\r\n        S: function(dateObj) {\r\n            return Math.round(dateObj.getMilliseconds() / 100);\r\n        },\r\n        SS: function(dateObj) {\r\n            return pad(Math.round(dateObj.getMilliseconds() / 10), 2);\r\n        },\r\n        SSS: function(dateObj) {\r\n            return pad(dateObj.getMilliseconds(), 3);\r\n        },\r\n        a: function(dateObj, i18n) {\r\n            return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];\r\n        },\r\n        A: function(dateObj, i18n) {\r\n            return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();\r\n        },\r\n        ZZ: function(dateObj) {\r\n            var o = dateObj.getTimezoneOffset();\r\n            return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);\r\n        },\r\n        l: function(dateObj) {\r\n            var onejan = new Date(dateObj.getFullYear(), 0, 1);\r\n            return Math.ceil((((dateObj - onejan) / 86400000) + onejan.getDay() + 1) / 7);\r\n        },\r\n        ll: function(dateObj) {\r\n            var onejan = new Date(dateObj.getFullYear(), 0, 1);\r\n            return pad(Math.ceil((((dateObj - onejan) / 86400000) + onejan.getDay() + 1) / 7), 2);\r\n        },\r\n        q: function(dateObj) {\r\n            return (Math.ceil(dateObj.getMonth() + 1 / 3));\r\n        }\r\n    };\r\n\r\n    var parseFlags = {\r\n        D: [twoDigits, function(d, v) {\r\n            d.day = v;\r\n        }],\r\n        Do: [new RegExp(twoDigits.source + word.source), function(d, v) {\r\n            d.day = parseInt(v, 10);\r\n        }],\r\n        M: [twoDigits, function(d, v) {\r\n            d.month = v - 1;\r\n        }],\r\n        YY: [twoDigits, function(d, v) {\r\n            var da = new Date(), cent = +('' + da.getFullYear()).substr(0, 2);\r\n            d.year = '' + (v > 68 ? cent - 1 : cent) + v;\r\n        }],\r\n        h: [twoDigits, function(d, v) {\r\n            d.hour = v;\r\n        }],\r\n        m: [twoDigits, function(d, v) {\r\n            d.minute = v;\r\n        }],\r\n        s: [twoDigits, function(d, v) {\r\n            d.second = v;\r\n        }],\r\n        YYYY: [fourDigits, function(d, v) {\r\n            d.year = v;\r\n        }],\r\n        S: [/\\d/, function(d, v) {\r\n            d.millisecond = v * 100;\r\n        }],\r\n        SS: [/\\d{2}/, function(d, v) {\r\n            d.millisecond = v * 10;\r\n        }],\r\n        SSS: [threeDigits, function(d, v) {\r\n            d.millisecond = v;\r\n        }],\r\n        d: [twoDigits, noop],\r\n        ddd: [word, noop],\r\n        MMM: [word, monthUpdate('monthNamesShort')],\r\n        MMMM: [word, monthUpdate('monthNames')],\r\n        a: [word, function(d, v, i18n) {\r\n            var val = v.toLowerCase();\r\n            if (val === i18n.amPm[0]) {\r\n                d.isPm = false;\r\n            } else if (val === i18n.amPm[1]) {\r\n                d.isPm = true;\r\n            }\r\n        }],\r\n        ZZ: [/[+-]\\d\\d:?\\d\\d/, function(d, v) {\r\n            var parts = (v + '').match(/([+-]|\\d\\d)/gi), minutes;\r\n\r\n            if (parts) {\r\n                minutes = +(parts[1] * 60) + parseInt(parts[2], 10);\r\n                d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;\r\n            }\r\n        }]\r\n    };\r\n    parseFlags.dd = parseFlags.d;\r\n    parseFlags.dddd = parseFlags.ddd;\r\n    parseFlags.DD = parseFlags.D;\r\n    parseFlags.mm = parseFlags.m;\r\n    parseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;\r\n    parseFlags.MM = parseFlags.M;\r\n    parseFlags.ss = parseFlags.s;\r\n    parseFlags.A = parseFlags.a;\r\n\r\n    // Some common format strings\r\n    fecha.masks = {\r\n        'default': 'ddd MMM DD YYYY HH:mm:ss',\r\n        shortDate: 'M/D/YY',\r\n        mediumDate: 'MMM D, YYYY',\r\n        longDate: 'MMMM D, YYYY',\r\n        fullDate: 'dddd, MMMM D, YYYY',\r\n        shortTime: 'HH:mm',\r\n        mediumTime: 'HH:mm:ss',\r\n        longTime: 'HH:mm:ss.SSS'\r\n    };\r\n\r\n    /***\r\n     * Format a date.\r\n     * @method format\r\n     * @param {Date|number} dateObj - JS date to format.\r\n     * @param {string} mask - New format for the date, i.e. 'mm-dd-yy' or 'shortDate'.\r\n     * @param {Object} i18nSettings - i18n resources.\r\n     * @return {string} Formatted date string.\r\n     */\r\n    fecha.format = function(dateObj, mask, i18nSettings) {\r\n        var i18n = i18nSettings || fecha.i18n;\r\n\r\n        if (typeof dateObj === 'number') {\r\n            dateObj = new Date(dateObj);\r\n        }\r\n\r\n        if (!dateObj.getMonth || isNaN(dateObj.getTime())) {\r\n            return '';\r\n            // throw new Error('Invalid Date in fecha.format');\r\n        }\r\n\r\n        mask = fecha.masks[mask] || mask || fecha.masks['default'];\r\n\r\n        var literals = [];\r\n\r\n        // Make literals inactive by replacing them with ??\r\n        mask = mask.replace(literal, function($0, $1) {\r\n            literals.push($1);\r\n            return '??';\r\n        });\r\n        // Apply formatting rules\r\n        mask = mask.replace(token, function($0) {\r\n            return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);\r\n        });\r\n        // Inline literal values back into the formatted value\r\n        return mask.replace(/\\?\\?/g, function() {\r\n            return literals.shift();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Parse a date string into an object.\r\n     * @method parse\r\n     * @param {string} dateStr - Date string\r\n     * @param {string} format - Date parse format\r\n     * @param {Object} i18nSettings - i18n resources.\r\n     * @returns {Date|boolean} JS date object or false.\r\n     */\r\n    fecha.parse = function(dateStr, format, i18nSettings) {\r\n        var i18n = i18nSettings || fecha.i18n;\r\n\r\n        if (typeof format !== 'string') {\r\n            throw new Error('Invalid format in fecha.parse');\r\n        }\r\n\r\n        format = fecha.masks[format] || format;\r\n\r\n        // Avoid regular expression denial of service, fail early for really long strings\r\n        // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\r\n        if (!dateStr || dateStr.length > 1000) {\r\n            return false;\r\n        }\r\n\r\n        var isValid = true;\r\n        var dateInfo = {};\r\n        var isUtc = false;\r\n\r\n        // Special handler for UTC. String will end in a Z but with no offset specified (ie '-0400')\r\n        if (dateStr.indexOf('Z') === dateStr.length - 1 && dateStr.indexOf('ZZ') === -1) {\r\n            dateStr = dateStr.substr(0, dateStr.length - 2);\r\n            dateInfo.timezoneOffset = new Date().getTimezoneOffset();\r\n            isUtc = true;\r\n        }\r\n\r\n        format.replace(token, function($0) {\r\n            if (parseFlags[$0]) {\r\n                var info = parseFlags[$0];\r\n                var index = dateStr.search(info[0]);\r\n                if (!~index) {\r\n                    isValid = false;\r\n                } else {\r\n                    dateStr.replace(info[0], function(result) {\r\n                        info[1](dateInfo, result, i18n);\r\n                        dateStr = dateStr.substr(index + result.length);\r\n                        return result;\r\n                    });\r\n                }\r\n            }\r\n\r\n            return parseFlags[$0] ? '' : $0.slice(1, $0.length - 1);\r\n        });\r\n\r\n        if (!isValid) {\r\n            return false;\r\n        }\r\n\r\n        var today = new Date();\r\n        if (dateInfo.isPm === true && typeof dateInfo.hour !== 'undefined' && +dateInfo.hour !== 12) {\r\n            dateInfo.hour = +dateInfo.hour + 12;\r\n        } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {\r\n            dateInfo.hour = 0;\r\n        }\r\n\r\n        var date;\r\n        if (typeof dateInfo.timezoneOffset !== 'undefined') {\r\n            if (!isUtc) {\r\n                dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;\r\n            }\r\n            date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\r\n                dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));\r\n        } else {\r\n            date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\r\n                dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);\r\n        }\r\n        return date;\r\n    };\r\n\r\n    // Assume a traditional browser.\r\n    $.fecha = fecha;\r\n})(this.$);\r\n","/*!\r\n * accounting.js v0.4.2\r\n * Copyright 2014 Open Exchange Rates\r\n *\r\n * Freely distributable under the MIT license.\r\n * Portions of accounting.js are inspired or borrowed from underscore.js\r\n *\r\n * Full details and documentation:\r\n * http://openexchangerates.github.io/accounting.js/\r\n */\r\n\r\n(function($) {\r\n    /**\r\n     * Create the local library object, to be exported or referenced globally later\r\n     */\r\n    var lib = {\r\n        version: '0.4.2',\r\n        settings: {\r\n            currency: {\r\n                symbol: '$',\t\t// default currency symbol is '$'\r\n                format: '%s%v',\t    // controls output: %s = symbol, %v = value (can be object, see docs)\r\n                decimal: '.',\t\t// decimal point separator\r\n                thousand: ',',\t\t// thousands separator\r\n                precision: 2,\t\t// decimal places\r\n                grouping: 3\t\t    // digit grouping (not implemented yet)\r\n            },\r\n            number: {\r\n                precision: 0,\t\t// default precision on numbers is 0\r\n                grouping: 3,\t\t// digit grouping (not implemented yet)\r\n                thousand: ',',\r\n                decimal: '.'\r\n            }\r\n        }\r\n    };\r\n\r\n    var tokens = {\r\n        symbol: /\\{s:(.?)\\}/i,\r\n        decimal: /\\[d:(.?)\\]/i,\r\n        thousand: /\\[t:(.?)\\]/i,\r\n        precision: /\\[p:(.?)\\]/i,\r\n        value: /\\{#+\\}/i\r\n    };\r\n\r\n    /**\r\n     * Check and normalise the value of precision (must be positive integer).\r\n     * @param {number} val - Value of precision to validate\r\n     * @returns {number} Positive integer value.\r\n     */\r\n    var checkPrecision = function(val) {\r\n        val = Math.round(Math.abs(val));\r\n        return isNaN(val) ? lib.settings.number.precision : val;\r\n    };\r\n\r\n    /**\r\n     * Parses a format string or object and returns format obj for use in rendering.\r\n     * @param {string|Object} format - Default (positive) format, or object containing `pos` (required), `neg` and `zero` values (or a function returning either a string or object)\r\n     * @returns {Object} Format object with pos, neg, and zero properties.\r\n     */\r\n    var checkCurrencyFormat = function(format) {\r\n        // Allow function as format parameter (should return string or object):\r\n        if ($.isFunction(format)) {\r\n            format = format();\r\n        }\r\n\r\n        // Format can be a string, in which case `value` (\"%v\") must be present:\r\n        if ($.isString(format) && format.match('%v')) {\r\n            // Create and return positive, negative and zero formats:\r\n            return {\r\n                pos: format,\r\n                neg: format.replace('-', '').replace('%v', '-%v'),\r\n                zero: format\r\n            };\r\n        }\r\n        if (!format || !format.pos || !format.pos.match('%v')) {\r\n            // If no format, or object is missing valid positive value, use default.\r\n            // If default is a string, casts it to an object for faster checking next time.\r\n            var x = lib.settings.currency.format;\r\n            if ($.isString(x)) {\r\n                lib.settings.currency.format = x = { pos: x, neg: x.replace('%v', '-%v'), zero: x };\r\n            }\r\n            return x;\r\n        }\r\n        return format;\r\n    };\r\n\r\n    /**\r\n     * Takes a format string and parses it into an object.\r\n     * @param {string} format - Format string`\r\n     * @returns {Object} Object with format settings.\r\n     */\r\n    var parseFormat = function(format) {\r\n        if (!$.isString(format)) {\r\n            return format || {};\r\n        }\r\n\r\n        var res = {}, x;\r\n        var newFormat = format;\r\n        if ((x = tokens.symbol.exec(newFormat)) !== null && x.length > 1) {\r\n            res.symbol = x[1];\r\n            newFormat = newFormat.replace(x[0], '%s');\r\n        }\r\n        if ((x = tokens.decimal.exec(newFormat)) !== null && x.length > 1) {\r\n            res.decimal = x[1];\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.thousand.exec(newFormat)) !== null && x.length > 1) {\r\n            res.thousand = x[1];\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.precision.exec(newFormat)) !== null && x.length > 1) {\r\n            res.precision = x[1] * 1;\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.value.exec(newFormat)) !== null) {\r\n            res.format = newFormat.replace(x[0], '%v');\r\n        } else {\r\n            res.format = newFormat + ' %v';\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Takes a string/array of strings, removes all formatting/cruft and returns the raw float value.\r\n     * @param {string|number} value - Value to remove formatting from.\r\n     * @returns {number} Number with no formatting.\r\n     */\r\n    var unformat = function(value) {\r\n        // Fails silently (need decent errors):\r\n        value = value || 0;\r\n\r\n        // Return the value as-is if it's already a number:\r\n        if (typeof value === 'number') {\r\n            return value;\r\n        }\r\n\r\n        // Build regex to strip out everything except digits, decimal point and minus sign:\r\n        var regex = new RegExp('[^0-9-' + lib.settings.number.decimal + ']', ['g']),\r\n            unformatted = parseFloat(\r\n                ('' + value)\r\n                    .replace(/\\((.*)\\)/, '-$1') // replace bracketed values with negatives\r\n                    .replace(regex, '')         // strip out any cruft\r\n                    .replace(lib.settings.number.decimal, '.')      // make sure decimal point is standard\r\n            );\r\n\r\n        // This will fail silently which may cause trouble, let's wait and see:\r\n        return !isNaN(unformatted) ? unformatted : 0;\r\n    };\r\n\r\n    /**\r\n     * Implementation of toFixed() that treats floats more like decimals.\r\n     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === \"0.61\") that present problems for accounting- and finance-related software.\r\n     * @param {number|string} value - Number to convert\r\n     * @param {number} precision - Number of digits after the decimal.\r\n     * @returns {number} Formatted value.\r\n     */\r\n    var toFixed = function(value, precision) {\r\n        precision = checkPrecision(precision);\r\n        var power = Math.pow(10, precision);\r\n\r\n        // Multiply up by precision, round accurately, then divide and use native toFixed():\r\n        return (Math.round(unformat(value) * power) / power).toFixed(precision);\r\n    };\r\n\r\n    /**\r\n     * Format a number, with comma-separated thousands and custom precision/decimal places.\r\n     * @param {number} number - Number to format.\r\n     * @param {string} format - Tokenized string format.\r\n     * @returns {string} Formatted number.\r\n     */\r\n    var formatNumber = function(number, format) {\r\n        // Clean up number:\r\n        number = unformat(number);\r\n\r\n        // Build options object from second param (if object) or all params, extending defaults:\r\n        var opts = $.extend({}, lib.settings.number, parseFormat(format));\r\n\r\n        // Clean up precision\r\n        var usePrecision = checkPrecision(opts.precision);\r\n\r\n        // Do some calc:\r\n        var negative = number < 0 ? '-' : '';\r\n        var base = parseInt(toFixed(Math.abs(number || 0), usePrecision), 10) + '';\r\n        var mod = base.length > 3 ? base.length % 3 : 0;\r\n\r\n        // Format the number:\r\n        return negative + (mod ? base.substr(0, mod) + opts.thousand : '') + base.substr(mod).replace(/(\\d{3})(?=\\d)/g, '$1' + opts.thousand) +\r\n            (usePrecision ? opts.decimal + toFixed(Math.abs(number), usePrecision).split('.')[1] : '');\r\n    };\r\n\r\n    /**\r\n     * Format a number as currency, with comma-separated thousands and custom precision/decimal places.\r\n     * @param {number} number - Number to format.\r\n     * @param {string} format - Tokenized string format.\r\n     * @returns {string} Formatted currency.\r\n     */\r\n    var formatMoney = function(number, format) {\r\n        // Clean up number:\r\n        number = unformat(number);\r\n\r\n        // Build options object from second param (if object) or all params, extending defaults:\r\n        var opts = $.extend({}, lib.settings.currency, parseFormat(format));\r\n\r\n        // Check format (returns object with pos, neg and zero):\r\n        var formats = checkCurrencyFormat(opts.format);\r\n\r\n        // Choose which format to use for this value:\r\n        var useFormat = number > 0 ? formats.pos : number < 0 ? formats.neg : formats.zero;\r\n\r\n        // Return with currency symbol added:\r\n        return useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(number), format));\r\n    };\r\n\r\n    $.accounting = {\r\n        formatMoney: formatMoney,\r\n        formatNumber: formatNumber,\r\n        parseFormat: parseFormat,\r\n        unformat: unformat\r\n    };\r\n}(this.$));\r\n","/*!\r\n * Help mithril component. Shows input groups with help button.\r\n */\r\n(function(root, factory) {\r\n    root.Help = factory(root.m, root.$, root.Alertify);\r\n})(this, function(m, $, Alertify) {\r\n    'use strict';\r\n\r\n    var Help = {\r\n        /**\r\n         * Initialize the component.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            this.opts = {\r\n                enabled: attrs.enabled,\r\n                message: attrs.message\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Show help dialog.\r\n         * @param {Event} e - Event that triggered the dialog to open.\r\n         */\r\n        showHelp: function(e) {\r\n            Alertify.alert(this.opts.message, $.dialogs.focusOnClose.bind(e), $.dialogs.focusOnClose.bind(e));\r\n        },\r\n\r\n        /**\r\n         * Create HTML to display content with help add on.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         * @returns {Object} Mithril vnode\r\n         */\r\n        view: function(vnode) {\r\n            if (!this.opts.enabled) {\r\n                return $.isArray(vnode.children) ? m('.input-group', vnode.children) : vnode.children;\r\n            }\r\n            if (!(vnode.children && vnode.children.length)) {\r\n                return m('span', m('button.btn.btn-secondary.dash-context-help', {\r\n                    type: 'button', role: 'button', onclick: this.showHelp.bind(this)\r\n                }, m('i.dash.dash-help')));\r\n            }\r\n            return m('.input-group',\r\n                vnode.children.concat(m('span.input-group-addon.input-group-custom', m('button.btn.btn-secondary.dash-context-help', {\r\n                    type: 'button', role: 'button', onclick: this.showHelp.bind(this)\r\n                }, m('i.dash.dash-help'))))\r\n            );\r\n        }\r\n    };\r\n\r\n    return Help;\r\n});\r\n","/*!\r\n * Dialog mithril component.\r\n */\r\n(function(root, factory) {\r\n    root.Dialog = factory(root.m, root.$, root.Alertify);\r\n})(this, function(m, $, Alertify) {\r\n    'use strict';\r\n\r\n    var _buttons = {\r\n        'ok': 'Okay',\r\n        'cancel': 'Cancel',\r\n        'close': 'Close'\r\n    };\r\n\r\n    var _keys = {\r\n        ENTER: 13,\r\n        ESC: 27\r\n    };\r\n\r\n    /**\r\n     * Convert a value for a field to the correct data type.\r\n     * @param {Node} field - Input that we are converting value for.\r\n     * @param {string} val - Value to convert.\r\n     * @returns {string|number|bool} Returns correctly casted value.\r\n     */\r\n    var tryGetValue = function(field, val) {\r\n        var fieldName = field.name.split('.').pop();\r\n        if ((fieldName.substring(0, 2) === 'Is' || fieldName.substring(0, 5) === 'Allow') && (field.value.toLowerCase() === 'true' || field.value.toLowerCase() === 'false')) {\r\n            return field.value.toLowerCase() === 'true';\r\n        } else if (field.type.toLowerCase() === 'number' || field.name.slice(-2) === 'Id' || !($.isNull(val) || val.length == 0 || isNaN(val))) {\r\n            return val.length ? parseInt(val) : null;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    /**\r\n     * Try to set a value in an object.\r\n     * @param {Object} obj - Object to add value to.\r\n     * @param {Node} field - Input that we are converting value for.\r\n     * @param {string} name - Name of property.\r\n     * @param {string} val - Value to set.\r\n     * @returns {Object} Returns correctly updated object.\r\n     */\r\n    var trySetValue = function(obj, field, name, val) {\r\n        if (obj.hasOwnProperty(name) || $.hasClass(field, 'custom-control-input-multiple')) {\r\n            if (!$.isArray(obj[name])) {\r\n                obj[name] = $.isNull(obj[name]) ? [] : [obj[name]];\r\n            }\r\n            if (!$.isNull(val)) {\r\n                obj[name].push(val);\r\n            }\r\n        } else if (!$.isNull(val)) {\r\n            obj[name] = val;\r\n        }\r\n        return obj;\r\n    };\r\n\r\n    /**\r\n     * Declare Dialog class.\r\n     * @param {Object} opts - Dialog settings\r\n     */\r\n    function Dialog(opts) {\r\n        this.opts = $.extend({\r\n            id: null,\r\n            title: null,\r\n            basic: true,\r\n            buttons: _buttons,\r\n            content: null,\r\n            target: null,\r\n            onOkay: null,\r\n            onCancel: null,\r\n            onShow: null,\r\n            parent: null\r\n        }, opts || {});\r\n        this.elements = {\r\n            container: null,\r\n            content: null\r\n        };\r\n        this.changed = false;\r\n        this.run();\r\n    }\r\n\r\n    Dialog.prototype = {\r\n        /**\r\n         * Generates the components HTML.\r\n         * @returns {Object} Mithril virtual node\r\n         */\r\n        view: function() {\r\n            return m('.rd-dialog', { onkeydown: this.checkKey.bind(this), tabindex: 0 }, [\r\n                m('.rd-commands', [\r\n                    m('button.btn.btn-secondary.rd-close', { type: 'button', role: 'button', onclick: this.onCancel.bind(this) },\r\n                        m('i.dash.dash-cancel.text-error', { title: this.opts.buttons.close })\r\n                    )\r\n                ]),\r\n                m('.rd-header.dialog-header', this.opts.title),\r\n                m('.rd-content.container', { class: this.opts.basic ? 'rd-no-footer' : '' }, m.trust(this.opts.content)),\r\n                this.opts.basic ? null : m('.rd-footer', [\r\n                    m('.rd-buttons', [\r\n                        m('button.rd-button.btn.btn-primary', {\r\n                            type: 'button', role: 'button', onclick: this.onOkay.bind(this)\r\n                        }, this.opts.buttons.ok),\r\n                        m('button.rd-button.btn.btn-warning', {\r\n                            type: 'button', role: 'button', onclick: this.onCancel.bind(this)\r\n                        }, this.opts.buttons.cancel)\r\n                    ])\r\n                ])\r\n            ]);\r\n        },\r\n\r\n        /**\r\n         * Runs after the dialog is first created by mithril.\r\n         * @param {Object} vnode - Mithril virtual node.\r\n         */\r\n        oncreate: function(vnode) {\r\n            if (this.elements.content) {\r\n                return;\r\n            }\r\n            var node = $.get('.rd-content', vnode.dom);\r\n            if (!(node && node.firstElementChild)) {\r\n                return;\r\n            }\r\n            node = node.firstElementChild;\r\n            this.opts.title = node.getAttribute('data-title');\r\n            this.opts.basic = node.hasAttribute('data-basic-dialog');\r\n            m.redraw();\r\n\r\n            var self = this;\r\n            $.on(node, 'change', function() {\r\n                self.changed = true;\r\n            });\r\n            this.elements.content = node;\r\n            setTimeout(this.onShow.bind(this), 25);\r\n        },\r\n\r\n        /**\r\n         * Run the component and render the dialog.\r\n         */\r\n        run: function() {\r\n            this.elements.container = document.createElement('div');\r\n            this.elements.container.id = 'dialog' + this.opts.id;\r\n            $.addClass(this.elements.container, 'rd-dialog-container');\r\n            document.body.appendChild(this.elements.container);\r\n            m.mount(this.elements.container, {\r\n                view: this.view.bind(this),\r\n                oncreate: this.oncreate.bind(this),\r\n            });\r\n\r\n            $.dialogs.processContent(this.elements.content);\r\n            setTimeout(this.checkEvent.bind(this, this.elements.content, 'data-event'), 25);\r\n        },\r\n\r\n        /**\r\n         * Get the dialog id.\r\n         * @returns {number} ID of dialog.\r\n         */\r\n        getId: function() {\r\n            return this.opts.id;\r\n        },\r\n\r\n        /**\r\n         * Get the dialog container node.\r\n         * @returns {Node} DOM node of dialog container.\r\n         */\r\n        getContainer: function() {\r\n            return this.elements.container;\r\n        },\r\n\r\n        /**\r\n         * Get the dialog content node.\r\n         * @returns {Node} DOM node of dialog content.\r\n         */\r\n        getContent: function() {\r\n            return this.elements.content;\r\n        },\r\n\r\n        /**\r\n         * Get the dialog target node.\r\n         * @returns {Node} DOM node to target on close.\r\n         */\r\n        getTarget: function() {\r\n            return this.opts.target;\r\n        },\r\n\r\n        /**\r\n         * Find a form node inside the dialog.\r\n         * @returns {Node} Form node if exists else null.\r\n         */\r\n        findForm: function() {\r\n            return $.matches(this.elements.content, 'form.dash-form') ? this.elements.content : $.get('form.dash-form', this.elements.content);\r\n        },\r\n\r\n        /**\r\n         * Find element to focus on when dialog is displayed.\r\n         */\r\n        onShow: function() {\r\n            if ($.isFunction(this.opts.onShow)) {\r\n                if (!this.opts.onShow.call(this)) {\r\n                    return;\r\n                }\r\n            }\r\n            document.title = this.opts.title;\r\n            $.dialogs.focusNode(this.elements.content);\r\n        },\r\n\r\n        /**\r\n         * User okayed dialog. Save changes; close dialog.\r\n         */\r\n        onOkay: function() {\r\n            if ($.isFunction(this.opts.onOkay)) {\r\n                if (!this.opts.onOkay.call(this)) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            var form = this.findForm();\r\n            if (!form) {\r\n                this.destroy();\r\n                return;\r\n            }\r\n            if (!this.validateForm()) {\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            var formData = this.serializeForm();\r\n            $.ajax({\r\n                method: form.hasAttribute('data-method') ? form.getAttribute('data-method') : 'POST',\r\n                url: form.getAttribute('action'),\r\n                data: formData,\r\n                token: formData.__RequestVerificationToken\r\n            }, function(responseData) {\r\n                var target = self.opts.target;\r\n                var parentDlg = $.dialogs.findDialogById(self.opts.parent);\r\n                if (responseData.parentTarget && parentDlg) {\r\n                    target = parentDlg.getTarget();\r\n                }\r\n\r\n                self.destroy();\r\n                if (responseData.closeParent && parentDlg) {\r\n                    parentDlg.destroy();\r\n                }\r\n                if (responseData.dialogUrl) {\r\n                    $.dialogs.sendAjaxRequest(responseData.dialogUrl, 'GET', target);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * User canceled dialog. Check for changes; close dialog.\r\n         * @param {Event} e - Event that triggered the cancel.\r\n         */\r\n        onCancel: function(e) {\r\n            if ($.isFunction(this.opts.onCancel)) {\r\n                if (!this.opts.onCancel.call(this)) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (!this.changed || !this.findForm()) {\r\n                this.destroy();\r\n                return;\r\n            }\r\n\r\n            Alertify.confirm($.resx('discardChanges'), this.destroy.bind(this), function() {\r\n                if (e.target) {\r\n                    e.target.focus();\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Trigger okay or cancel action based on keydown.\r\n         * @param {KeyboardEvent} e - Keydown event that triggered this.\r\n         */\r\n        checkKey: function(e) {\r\n            if (e.keyCode === _keys.ESC) {\r\n                this.onCancel(e);\r\n            }\r\n            if (e.keyCode === _keys.ENTER && !this.opts.basic) {\r\n                this.onOkay(e);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Dispatch event named in attribute `attrName` if it exists.\r\n         * @param {Node} node - Node to look for an event attribute in.\r\n         * @param {string} attrName - Name of the attribute to check for the event in.\r\n         */\r\n        checkEvent: function(node, attrName) {\r\n            if (!node || !node.hasAttribute(attrName)) {\r\n                return;\r\n            }\r\n            var ev = node.getAttribute(attrName);\r\n            if ($.events.hasOwnProperty(ev)) {\r\n                document.dispatchEvent($.events[ev]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Convert form data into an object.\r\n         * @returns {Object} Form data.\r\n         */\r\n        serializeForm: function() {\r\n            var form = this.findForm();\r\n            if (!form) {\r\n                return {};\r\n            }\r\n\r\n            var field, data = {};\r\n            var len = form.elements.length;\r\n            var bracketRegEx = /\\[([^\\]]+)\\]/;\r\n            for (var i = 0; i < len; i++) {\r\n                field = form.elements[i];\r\n                if (!field.name || field.disabled || ['file', 'reset', 'submit', 'button'].indexOf(field.type) > -1) {\r\n                    continue;\r\n                }\r\n\r\n                var value = null;\r\n                if (field.type === 'select' && field.hasAttribute('multiple')) {\r\n                    value = Array.apply(null, form.elements[i].options).filter(function(x) {\r\n                        return x.selected;\r\n                    }).map(function(x) {\r\n                        return tryGetValue(field, x.value);\r\n                    });\r\n                } else if (field.type === 'checkbox') {\r\n                    if (field.checked) {\r\n                        value = tryGetValue(field, field.value);\r\n                    }\r\n                } else if (field.type !== 'radio' || field.checked) {\r\n                    value = tryGetValue(field, field.value);\r\n                }\r\n\r\n                var pieces = field.name.split('.');\r\n                var name = field.name;\r\n                if (pieces.length > 1) {\r\n                    var matches = bracketRegEx.exec(pieces[0]);\r\n                    name = matches.length > 1 ? pieces[0].replace(matches[0], '') : pieces[0];\r\n                    if (!data.hasOwnProperty(name)) {\r\n                        data[name] = [];\r\n                    }\r\n                    if (matches.length > 1) {\r\n                        if (!data[name].hasOwnProperty(matches[1])) {\r\n                            data[name][matches[1]] = {};\r\n                        }\r\n                        data[name][matches[1]] = trySetValue(data[name][matches[1]], field, pieces[1], value);\r\n                    } else {\r\n                        data[name][matches[0]] = trySetValue(data[name][matches[0]], field, pieces[1], value);\r\n                    }\r\n                } else {\r\n                    data = trySetValue(data, field, name, value);\r\n                }\r\n            }\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Set tab status when validating form.\r\n         * @param {Node} el - Node that has a validation error.\r\n         */\r\n        setTabStatus: function(el) {\r\n            var tab = $.closest('.tab-pane', el);\r\n            if (tab) {\r\n                // add error class to tab\r\n                var id = tab.getAttribute('aria-labelledby');\r\n                if (id) {\r\n                    // @todo rename this class - maybe mform-error instead?\r\n                    if ($.hasClass(el, 'mform-control-error')) {\r\n                        $.addClass($.get('#' + id), 'tab-validation-error');\r\n                    } else {\r\n                        $.removeClass($.get('#' + id), 'tab-validation-error');\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Run the form validator and display an error if needed.\r\n         * @returns {bool} Return true if form is valid, else false.\r\n         */\r\n        validateForm: function() {\r\n            var form = this.findForm();\r\n            form.dispatchEvent($.events.formValidate);\r\n\r\n            // @todo refactor to work with spectre\r\n            var tabs = $.getAll('.nav-tabs.nav-item.nav-link', form);\r\n            tabs.forEach(function(x) {\r\n                $.removeClass(x, 'tab-validation-error');\r\n            });\r\n\r\n            var mErrors = $.getAll('.mform-control-error', form);\r\n            if (mErrors.length) {\r\n                mErrors.forEach(this.setTabStatus);\r\n            }\r\n\r\n            if (mErrors.length || $.getAll('.form-control-error', form).length) {\r\n                Alertify.error($.resx('fixIt'));\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Clean up our mess.\r\n         */\r\n        destroy: function() {\r\n            this.checkEvent(this.elements.content, 'data-close-event');\r\n\r\n            var tableNode = $.get('.dash-table', this.elements.content);\r\n            if (tableNode) {\r\n                tableNode.table.destroy();\r\n            }\r\n\r\n            m.mount(this.elements.container, null);\r\n            document.body.removeChild(this.elements.container);\r\n            $.dialogs.removeDialog(this.opts.id);\r\n            $.dialogs.refreshTable();\r\n        }\r\n    };\r\n\r\n    return Dialog;\r\n});\r\n","/*!\r\n * Autocomplete mithril component.\r\n */\r\n(function(root, factory) {\r\n    root.Autocomplete = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    var _keys = {\r\n        DOWN: 40,\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        TAB: 9,\r\n        UP: 38\r\n    };\r\n\r\n    /**\r\n     * Escape a string for use with a regex.\r\n     * @param {string} s - String to escape.\r\n     * @returns Escaped string.\r\n     */\r\n    var regExpEscape = function(s) {\r\n        return s.replace(/[-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n    };\r\n\r\n    var Autocomplete = {\r\n        /**\r\n         * Initialize the component.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            this.opts = {\r\n                value: attrs.value,\r\n                valueChanged: false,\r\n                name: attrs.name,\r\n                placeholder: attrs.placeholder,\r\n                active: false,\r\n                required: attrs.required,\r\n                disabled: attrs.disabled,\r\n                onSelect: attrs.onSelect,\r\n                onCancel: attrs.onCancel,\r\n                class: attrs.class,\r\n                list: attrs.list || [],\r\n                filteredList: [],\r\n                container: null,\r\n                selectedIndex: -1\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Update the opts in case the component name is changed.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         * @param vnode\r\n         */\r\n        onupdate: function(vnode) {\r\n            if (vnode.attrs) {\r\n                this.opts.name = vnode.attrs.name;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Grab the DOM containing node after it is created.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oncreate: function(vnode) {\r\n            this.opts.container = vnode.dom;\r\n            this.opts.container.autocomplete = this;\r\n        },\r\n\r\n        /**\r\n         * Update the list of items.\r\n         * @param {string[]} list - Array of strings to show.\r\n         */\r\n        setList: function(list) {\r\n            this.close();\r\n            this.opts.list = list;\r\n            this.opts.filteredList = [];\r\n        },\r\n\r\n        /**\r\n         * Check special keys and respond accordingly.\r\n         * @param {Event} e - Keypress event.\r\n         */\r\n        onKeyDown: function(e) {\r\n            if (this.opts.disabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.opts.active) {\r\n                if (e.keyCode === _keys.ENTER) {\r\n                    var selected = this.opts.filteredList[this.opts.selectedIndex];\r\n                    if (selected) {\r\n                        this.selectItem(selected);\r\n                    } else {\r\n                        this.cancel(true);\r\n                    }\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                } else if (e.keyCode === _keys.ESC) {\r\n                    this.cancel(true);\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                } else if (e.keyCode === _keys.DOWN) {\r\n                    this.selectIndex(Math.min(this.opts.selectedIndex + 1, this.opts.filteredList.length - 1));\r\n                } else if (e.keyCode === _keys.UP) {\r\n                    this.selectIndex(Math.max(this.opts.selectedIndex - 1, 0));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handle the input's value changing and show the list.\r\n         * @param {Event} e - Event that triggered the change.\r\n         */\r\n        onInput: function(e) {\r\n            if (this.opts.value !== e.target.value) {\r\n                this.opts.valueChanged = true;\r\n                this.opts.value = e.target.value;\r\n            }\r\n            if (this.opts.value.length > 1) {\r\n                this.opts.active = true;\r\n                this.opts.selectedIndex = 0;\r\n                var val = this.opts.value.toLowerCase();\r\n                this.opts.filteredList = ($.isFunction(this.opts.list) ? this.opts.list() : this.opts.list).filter(function(x) {\r\n                    return x.toLowerCase().indexOf(val) > -1;\r\n                });\r\n            } else {\r\n                this.opts.filteredList = [];\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Close autocomplete dropdown on lost focus.\r\n         */\r\n        onBlur: function() {\r\n            if (this.opts.active || this.opts.valueChanged) {\r\n                this.cancel(false);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select an item from the list by index.\r\n         * @param {number} index - Filtered list item index.\r\n         */\r\n        selectIndex: function(index) {\r\n            this.opts.selectedIndex = index;\r\n            var ul = $.get('ul', this.opts.container);\r\n            if (ul && ul.children[index]) {\r\n                ul.children[index].scrollIntoView();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select an item by text value.\r\n         * @param {string} item - Text to select.\r\n         * @param {Event} e - Event that triggered this.\r\n         */\r\n        selectItem: function(item, e, focus) {\r\n            if ($.isFunction(this.opts.onSelect)) {\r\n                this.opts.onSelect.call(null, item);\r\n            }\r\n            this.opts.value = item;\r\n            this.close($.isNull(focus) ? true : focus);\r\n            if (e && e.preventDefault) {\r\n                e.preventDefault();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Discard value and close the autocomplete.\r\n         * @param {bool} focus - Focus on the original control after closing if true.\r\n         */\r\n        cancel: function(focus) {\r\n            if (this.opts.valueChanged) {\r\n                this.opts.value = '';\r\n            }\r\n            if ($.isFunction(this.opts.onCancel)) {\r\n                this.opts.onCancel();\r\n            }\r\n            this.close(focus);\r\n        },\r\n\r\n        /**\r\n         * Set value and close the autocomplete.\r\n         * @param {bool} focus - Focus on the original control after closing if true.\r\n         */\r\n        close: function(focus) {\r\n            this.opts.active = false;\r\n            this.opts.selectedIndex = -1;\r\n            this.opts.valueChanged = false;\r\n            if (focus) {\r\n                var input = $.get('input', this.opts.container);\r\n                if (input) {\r\n                    input.focus();\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Highlight val inside item.\r\n         * @param {string} text - Text to highlight in.\r\n         * @param {string} val - Substring to highlight.\r\n         * @returns Marked up string.\r\n         */\r\n        highlightItem: function(text, val) {\r\n            return val === '' ? text : text.replace(RegExp(regExpEscape(val.trim()), 'gi'), '<mark>$&</mark>');\r\n        },\r\n\r\n        /**\r\n         * Create HTML to display component.\r\n         * @returns {Object} Mithril vnode\r\n         */\r\n        view: function() {\r\n            var self = this;\r\n            return m('.mithril-autocomplete-container.autocomplete', { class: self.opts.active ? 'autocomplete-active' : '' },\r\n                m('input.form-input', {\r\n                    type: 'text',\r\n                    name: self.opts.name,\r\n                    placeholder: self.opts.placeholder,\r\n                    class: (self.opts.class || '') + (self.opts.required && !$.hasValue(self.opts.value) ? ' mform-control-error' : ''),\r\n                    autocomplete: 'off',\r\n                    'aria-autocomplete': 'list',\r\n                    onkeydown: self.onKeyDown.bind(self),\r\n                    oninput: self.onInput.bind(self),\r\n                    value: self.opts.value,\r\n                    onblur: self.onBlur.bind(self)\r\n                }),\r\n                self.opts.active && m('ul', self.opts.filteredList.map(function(x, index) {\r\n                    return m('li', {\r\n                        'aria-selected': self.opts.selectedIndex == index,\r\n                        onmousedown: self.selectItem.bind(self, x)\r\n                    }, m.trust(self.highlightItem(x, self.opts.value)));\r\n                }))\r\n            );\r\n        }\r\n    };\r\n\r\n    return Autocomplete;\r\n});\r\n","/*!\r\n * DatePicker mithril component.\r\n * Modified from https://github.com/CreaturesInUnitards/mithril-datepicker\r\n */\r\n(function(root, factory) {\r\n    root.DatePicker = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    var _keys = {\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        SPACE: 32\r\n    };\r\n\r\n    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    var hours = [];\r\n    var minutes = [];\r\n    var i = 0;\r\n    while (hours.push(i++) < 24) { /* nothing to do here */ }\r\n    i = 0;\r\n    while (minutes.push(i++) < 60) { /* nothing to do here */ }\r\n    var prevNextTitles = ['1 Mo', '1 Yr', '10 Yr'];\r\n    var weekStart = 0;\r\n    var locale = 'en-us';\r\n    var formatOptions = null;\r\n    var defaultFormat = 'YYYY-MM-DD HH:mm';\r\n\r\n    /**\r\n     * Actions\r\n     */\r\n    function chooseDate(props, e) {\r\n        var box = e.target;\r\n        var selectedDate = parseInt(box.textContent);\r\n        var dateObj = props.date;\r\n        if ($.hasClass(box, 'other-scope')) {\r\n            dateObj.setFullYear(dateObj.getFullYear(), dateObj.getMonth() + (selectedDate > 6 ? -1 : 1), selectedDate);\r\n        } else {\r\n            dateObj.setDate(selectedDate);\r\n        }\r\n    }\r\n\r\n    function dismissAndCommit(props, e) {\r\n        if (e) {\r\n            if (e.target && $.hasClass('number', e.target)) {\r\n                e.preventDefault();\r\n                chooseDate(props, e);\r\n            } else {\r\n                var parent = e.relatedTarget && $.closest('.mithril-date-picker-container', e.relatedTarget);\r\n                if (!parent) {\r\n                    e.preventDefault();\r\n                    props.view = 0;\r\n                    props.active = false;\r\n                }\r\n            }\r\n        }\r\n        // @todo this probably needs more testing to make sure it triggers correctly\r\n        if (props.onchange) {\r\n            props.onchange(props.date);\r\n        }\r\n    }\r\n\r\n    function checkKey(props, e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (e.keyCode === _keys.ESC) {\r\n            dismissAndCommit(props, e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function prevNext(props, delta) {\r\n        var newDate = new Date(props.date);\r\n        switch (props.view) {\r\n            case 0:\r\n                newDate.setMonth(newDate.getMonth() + delta);\r\n                break;\r\n            case 1:\r\n                newDate.setFullYear(newDate.getFullYear() + delta);\r\n                break;\r\n            default:\r\n                newDate.setFullYear(newDate.getFullYear() + (delta * 10));\r\n        }\r\n        props.date = pushToLastDay(props.date, newDate);\r\n    }\r\n\r\n    /**\r\n     * Utility\r\n     */\r\n    function adjustedProps(date, delta) {\r\n        var month = date.getMonth() + delta, year = date.getFullYear();\r\n        var over = month > 11, under = month < 0;\r\n        return {\r\n            month: over ? 0 : under ? 11 : month,\r\n            year: over ? year + 1 : under ? year - 1 : year\r\n        };\r\n    }\r\n\r\n    function lastDateInMonth(date, delta) {\r\n        var obj = adjustedProps(date, delta);\r\n        if ([0, 2, 4, 6, 7, 9, 11].indexOf(obj.month) > -1) {\r\n            return 31; // array of 31-day props.months\r\n        }\r\n        if (obj.month === 1) { // February\r\n            if (!(obj.year % 400)) {\r\n                return 29;\r\n            }\r\n            if (!(obj.year % 100)) {\r\n                return 28;\r\n            }\r\n            return (obj.year % 4) ? 28 : 29;\r\n        }\r\n        return 30;\r\n    }\r\n\r\n    function pushToLastDay(oldDate, newDate) {\r\n        if (oldDate.getDate() !== newDate.getDate()) {\r\n            newDate.setMonth(newDate.getMonth() - 1, lastDateInMonth(newDate, -1));\r\n        }\r\n        return newDate;\r\n    }\r\n\r\n    function stringsForLocale(locale) {\r\n        var date = new Date('jan 1 2017'), _months = [], _days = []; // 1/1/2017 was month:0 and weekday:0, so perfect\r\n        while (_days.length < 7) {\r\n            _days.push(date.toLocaleDateString(locale, { weekday: 'long' }));\r\n            date.setDate(date.getDate() + 1);\r\n        }\r\n        while (_months.length < 12) {\r\n            _months.push(date.toLocaleDateString(locale, { month: 'long' }));\r\n            date.setMonth(date.getMonth() + 1);\r\n        }\r\n        return { days: _days, months: _months };\r\n    }\r\n\r\n    function wrapAround(idx, array) {\r\n        var len = array.length;\r\n        var n = idx >= len ? idx - len : idx;\r\n        return array[n];\r\n    }\r\n\r\n    /**\r\n     * Generators\r\n     */\r\n    function daysFromLastMonth(props) {\r\n        var month = props.date.getMonth(), year = props.date.getFullYear();\r\n        var firstDay = (new Date(year, month, 1)).getDay() - props.weekStart;\r\n        if (firstDay < 0) firstDay += 7;\r\n        var array = [];\r\n        var lastDate = lastDateInMonth(props.date, -1);\r\n        var offsetStart = lastDate - firstDay + 1;\r\n        for (var i = offsetStart; i <= lastDate; i++) {\r\n            array.push(i);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function daysFromThisMonth(props) {\r\n        var max = lastDateInMonth(props.date, 0);\r\n        var array = [];\r\n        for (var i = 1; i <= max; i++) {\r\n            array.push(i);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function daysFromNextMonth(prev, these) {\r\n        var soFar = prev.concat(these);\r\n        var mod = soFar.length % 7;\r\n        var array = [];\r\n        if (mod > 0) {\r\n            var n = 7 - mod;\r\n            for (var i = 1; i <= n; i++) {\r\n                array.push(i);\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function defaultDate() {\r\n        var now = new Date();\r\n        now.setHours(0, 0, 0, 0);\r\n        return now;\r\n    }\r\n\r\n    function yearsForDecade(date) {\r\n        var year = date.getFullYear();\r\n        var start = year - (year % 10);\r\n        var array = [];\r\n        for (var i = start; i < start + 10; i++) {\r\n            array.push(i);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * View helpers\r\n     */\r\n    function classForBox(a, b) {\r\n        return a === b ? 'chosen' : '';\r\n    }\r\n\r\n    /**\r\n     * Components\r\n     */\r\n    var Header = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var date = props.date;\r\n            var theseMonths = props.months || months;\r\n            return m('.header',\r\n                m('button.header-button.prev', { onclick: prevNext.bind(null, props, -1) }, [\r\n                    m('i.dash.dash-to-start'),\r\n                    prevNextTitles[props.view]\r\n                ]),\r\n                m('button.header-button.segment', { onclick: function() { props.view = 0; } }, date.getDate()),\r\n                m('button.header-button.segment', { onclick: function() { props.view = 1; } }, theseMonths[date.getMonth()].substr(0, 3)),\r\n                m('button.header-button.segment', { onclick: function() { props.view = 2; } }, date.getFullYear()),\r\n                m('button.header-button.next', { onclick: prevNext.bind(null, props, 1) }, [\r\n                    prevNextTitles[props.view],\r\n                    m('i.dash.dash-to-end')\r\n                ]),\r\n                m('button.btn.btn-secondary.btn-sm', { onclick: dismissAndCommit.bind(null, props) }, m('i.dash.dash-cancel'))\r\n            );\r\n        }\r\n    };\r\n\r\n    var MonthView = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var prevDates = daysFromLastMonth(props);\r\n            var theseDates = daysFromThisMonth(props);\r\n            var nextDates = daysFromNextMonth(prevDates, theseDates);\r\n            var theseWeekdays = props.days || days;\r\n            return m('.calendar',\r\n                m('.weekdays', theseWeekdays.map(function(_, idx) {\r\n                    var day = wrapAround(idx + props.weekStart, theseWeekdays);\r\n                    return m('.day.dummy', day.substring(0, 2));\r\n                })),\r\n                m('.weekdays', {\r\n                    onclick: function(e) {\r\n                        chooseDate(props, e);\r\n                    }\r\n                }, prevDates.map(function(date) {\r\n                    return m('button.day.other-scope', date);\r\n                }), theseDates.map(function(date) {\r\n                    return m('button.day', { class: classForBox(props.date.getDate(), date) }, m('.number', date));\r\n                }), nextDates.map(function(date) {\r\n                    return m('button.day.other-scope', date);\r\n                })),\r\n                m('.time',\r\n                    m('select.form-select', {\r\n                        value: props.date.getHours(), onchange: function(e) {\r\n                            props.date.setHours(e.target.value);\r\n                            props.date.setHours(e.target.value);\r\n                            if (props.onchange) {\r\n                                props.onchange(props.date);\r\n                            }\r\n                        }\r\n                    }, hours.map(function(x) {\r\n                        return m('option', { value: x }, ('00' + x).slice(-2));\r\n                    })),\r\n                    m('select.form-select', {\r\n                        value: props.date.getMinutes(), onchange: function(e) {\r\n                            props.date.setMinutes(e.target.value);\r\n                            props.date.setMinutes(e.target.value);\r\n                            if (props.onchange) {\r\n                                props.onchange(props.date);\r\n                            }\r\n                        }\r\n                    }, minutes.map(function(x) {\r\n                        return m('option', { value: x }, ('00' + x).slice(-2));\r\n                    }))\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var YearView = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var theseMonths = props.months || months;\r\n            return m('.calendar',\r\n                m('.months',\r\n                    theseMonths.map(function(month, idx) {\r\n                        return m('button.month', {\r\n                            class: classForBox(props.date.getMonth(), idx), onclick: function() {\r\n                                var newDate = new Date(props.date);\r\n                                newDate.setMonth(idx);\r\n                                props.date = pushToLastDay(props.date, newDate);\r\n                                props.view = 0;\r\n                            }\r\n                        }, m('.number', month.substring(0, 3)));\r\n                    })\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var DecadeView = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var decade = yearsForDecade(props.date);\r\n            return m('.calendar',\r\n                m('.years',\r\n                    decade.map(function(year) {\r\n                        return m('button.year', {\r\n                            class: classForBox(props.date.getFullYear(), year), onclick: function() {\r\n                                var newDate = new Date(props.date);\r\n                                newDate.setFullYear(year);\r\n                                props.date = pushToLastDay(props.date, newDate);\r\n                                props.view = 1;\r\n                            }\r\n                        }, m('.number', year));\r\n                    })\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var Editor = {\r\n        oncreate: function(vnode) {\r\n            requestAnimationFrame(function() {\r\n                vnode.dom.classList.add('active');\r\n            });\r\n        },\r\n        onbeforeremove: function(vnode) {\r\n            vnode.dom.classList.remove('active');\r\n            return new Promise(function(done) {\r\n                setTimeout(done, 200);\r\n            });\r\n        },\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            return m('.editor', { onkeydown: checkKey.bind(null, props) },\r\n                m(Header, { props: props }),\r\n                m('.sled', { class: 'p' + props.view },\r\n                    m(MonthView, { props: props }),\r\n                    m(YearView, { props: props }),\r\n                    m(DecadeView, { props: props })\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var DatePicker = {\r\n        localize: function(loc) {\r\n            if (loc) {\r\n                prevNextTitles = loc.prevNextTitles || prevNextTitles;\r\n                locale = loc.locale || locale;\r\n                formatOptions = loc.formatOptions || formatOptions;\r\n                weekStart = $.isNumber(loc.weekStart) ? loc.weekStart : weekStart;\r\n                var strings = stringsForLocale(locale);\r\n                days = strings.days;\r\n                months = strings.months;\r\n            }\r\n        },\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            var date = new Date(attrs.date || defaultDate());\r\n            if (!attrs.date) {\r\n                attrs.onchange(date);\r\n            }\r\n            var props = {\r\n                date: date,\r\n                format: attrs.format || defaultFormat,\r\n                name: attrs.name,\r\n                active: false,\r\n                view: 0,\r\n                required: attrs.required,\r\n                disabled: attrs.disabled,\r\n                onchange: attrs.onchange,\r\n                class: attrs.class\r\n            };\r\n\r\n            ['prevNextTitles', 'locale', 'formatOptions'].forEach(function(prop) {\r\n                props[prop] = attrs[prop] || prop;\r\n            });\r\n            props.weekStart = $.isNumber(attrs.weekStart) ? attrs.weekStart : weekStart;\r\n\r\n            if (attrs.locale && attrs.locale !== locale) {\r\n                var strings = stringsForLocale(props.locale);\r\n                props.days = strings.days;\r\n                props.months = strings.months;\r\n            }\r\n\r\n            vnode.state.props = props;\r\n        },\r\n        onbeforeupdate: function(vnode) {\r\n            vnode.state.props.class = vnode.attrs.class;\r\n        },\r\n        onupdate: function(vnode) {\r\n            var chosen = $.get('.chosen', vnode.dom);\r\n            if (chosen) {\r\n                chosen.focus();\r\n            }\r\n        },\r\n        showEditor: function(props, e) {\r\n            if (e && e instanceof KeyboardEvent) {\r\n                if (e.keyCode !== _keys.SPACE && e.keyCode !== _keys.ENTER) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (props.disabled) {\r\n                return;\r\n            }\r\n            if (props.active) {\r\n                props.view = 0;\r\n            }\r\n            props.active = !props.active;\r\n        },\r\n        view: function(vnode) {\r\n            var props = vnode.state.props;\r\n            return m('.mithril-date-picker-container', { class: ((props.active ? 'active' : '') + ' ' + props.class).trim() },\r\n                m('input.current-date.form-input', {\r\n                    name: props.name,\r\n                    class: props.required ? 'required' : null,\r\n                    format: props.format,\r\n                    readonly: true,\r\n                    onclick: this.showEditor.bind(null, props),\r\n                    onkeydown: this.showEditor.bind(null, props),\r\n                    value: $.fecha.format(props.date, props.format || defaultFormat)\r\n                }),\r\n                m('i.dash.current-date-indicator', { class: props.active ? 'dash-sort-up' : 'dash-sort-down' }),\r\n                props.active && m(Editor, { props: props })\r\n            );\r\n        }\r\n    };\r\n\r\n    return DatePicker;\r\n});\r\n","/*!\r\n * Library for storing widget positions and detecting collisions.\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Rect = factory(root.$);\r\n})(this, function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Constructor for a rect.\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     */\r\n    function Rect(width, height, x, y) {\r\n        this.x = $.coalesce(x, 0);\r\n        this.y = $.coalesce(y, 0);\r\n        this.width = $.coalesce(width, 0);\r\n        this.height = $.coalesce(height, 0);\r\n        this.updated = false;\r\n    }\r\n\r\n    Rect.prototype = {\r\n        /**\r\n         * Check if rect intersects with this rect.\r\n         * @param {Rect} rect - Rect to check for intersection with.\r\n         * @returns {bool} True if the rectangles collide, else false.\r\n         */\r\n        overlaps: function(rect) {\r\n            var thisRight = this.x + this.width;\r\n            var thisBottom = this.y + this.height;\r\n            var rectRight = rect.x + rect.width;\r\n            var rectBottom = rect.y + rect.height;\r\n\r\n            // http://stackoverflow.com/a/306332\r\n            return this.x < rectRight && thisRight > rect.x && this.y < rectBottom && thisBottom > rect.y;\r\n        }\r\n    };\r\n\r\n    return Rect;\r\n});\r\n","/*!\r\n * Draggabilly PACKAGED v2.1.1\r\n * Make that shiz draggable\r\n * http://draggabilly.desandro.com\r\n * MIT license\r\n *\r\n * Modified to remove jQuery completely.\r\n */\r\n\r\n/*!\r\n * getSize v2.0.2\r\n * measure size of elements\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.getSize = factory(root.$);\r\n})(this, function factory($) {\r\n    /**\r\n     * Get a number from a string, not a percentage.\r\n     * @param {string} value - String to parse.\r\n     * @returns {Number} Returns the number.\r\n     */\r\n    function getStyleSize(value) {\r\n        var num = parseFloat(value);\r\n        // not a percent like '100%', and a number\r\n        return value.indexOf('%') === -1 && !isNaN(num) && num;\r\n    }\r\n\r\n    var measurements = [\r\n        'paddingLeft',\r\n        'paddingRight',\r\n        'paddingTop',\r\n        'paddingBottom',\r\n        'marginLeft',\r\n        'marginRight',\r\n        'marginTop',\r\n        'marginBottom',\r\n        'borderLeftWidth',\r\n        'borderRightWidth',\r\n        'borderTopWidth',\r\n        'borderBottomWidth'\r\n    ];\r\n\r\n    var measurementsLength = measurements.length;\r\n\r\n    /**\r\n     * Build the size measurements for a hidden element.\r\n     * @returns {Object} Measurements for the element.\r\n     */\r\n    function getZeroSize() {\r\n        var size = {\r\n            width: 0,\r\n            height: 0,\r\n            innerWidth: 0,\r\n            innerHeight: 0,\r\n            outerWidth: 0,\r\n            outerHeight: 0\r\n        };\r\n        for (var i = 0; i < measurementsLength; i++) {\r\n            size[measurements[i]] = 0;\r\n        }\r\n        return size;\r\n    }\r\n\r\n    var isSetup = false;\r\n    var isBoxSizeOuter;\r\n\r\n    /**\r\n     * Setup the instance.\r\n     */\r\n    function setup() {\r\n        // setup once\r\n        if (isSetup) {\r\n            return;\r\n        }\r\n        isSetup = true;\r\n\r\n        /**\r\n         * WebKit measures the outer-width on style.width on border-box elems\r\n         * IE & Firefox<29 measures the inner-width\r\n         */\r\n        var div = document.createElement('div');\r\n        $.style(div, { width: '200px', padding: '1px 2px 3px 4px', borderStyle: 'solid', borderWidth: '1px 2px 3px 4px', boxSizing: 'border-box' });\r\n\r\n        var body = document.body || document.documentElement;\r\n        body.appendChild(div);\r\n        var style = getComputedStyle(div);\r\n\r\n        getSize.isBoxSizeOuter = isBoxSizeOuter = getStyleSize(style.width) === 200;\r\n        body.removeChild(div);\r\n    }\r\n\r\n    /**\r\n     * Get the dimensions of a node.\r\n     * @param {Node|string} elem - Node object or query selector.\r\n     * @returns {Object} Dimensions for node.\r\n     */\r\n    function getSize(elem) {\r\n        setup();\r\n\r\n        elem = $.get(elem);\r\n        if (!$.isNode(elem)) {\r\n            return;\r\n        }\r\n\r\n        var style = getComputedStyle(elem);\r\n\r\n        // if hidden, everything is 0\r\n        if (style.display === 'none') {\r\n            return getZeroSize();\r\n        }\r\n\r\n        var size = { width: elem.offsetWidth, height: elem.offsetHeight };\r\n        var isBorderBox = size.isBorderBox = style.boxSizing === 'border-box';\r\n\r\n        // get all measurements\r\n        for (var i = 0; i < measurementsLength; i++) {\r\n            var measurement = measurements[i];\r\n            var value = style[measurement];\r\n            var num = parseFloat(value);\r\n            // any 'auto', 'medium' value will be 0\r\n            size[measurement] = !isNaN(num) ? num : 0;\r\n        }\r\n\r\n        var paddingWidth = size.paddingLeft + size.paddingRight;\r\n        var paddingHeight = size.paddingTop + size.paddingBottom;\r\n        var marginWidth = size.marginLeft + size.marginRight;\r\n        var marginHeight = size.marginTop + size.marginBottom;\r\n        var borderWidth = size.borderLeftWidth + size.borderRightWidth;\r\n        var borderHeight = size.borderTopWidth + size.borderBottomWidth;\r\n        var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\r\n\r\n        // overwrite width and height if we can get it from style\r\n        var styleWidth = getStyleSize(style.width);\r\n        if (styleWidth !== false) {\r\n            // add padding and border unless it's already including it\r\n            size.width = styleWidth + (isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth);\r\n        }\r\n\r\n        var styleHeight = getStyleSize(style.height);\r\n        if (styleHeight !== false) {\r\n            // add padding and border unless it's already including it\r\n            size.height = styleHeight + (isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight);\r\n        }\r\n\r\n        size.innerWidth = size.width - (paddingWidth + borderWidth);\r\n        size.innerHeight = size.height - (paddingHeight + borderHeight);\r\n        size.outerWidth = size.width + marginWidth;\r\n        size.outerHeight = size.height + marginHeight;\r\n\r\n        return size;\r\n    }\r\n\r\n    return getSize;\r\n});\r\n\r\n/**\r\n * EvEmitter v1.0.3\r\n * Lil' event emitter\r\n * MIT License\r\n */\r\n\r\n/* jshint unused: true, undef: true, strict: true */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.EvEmitter = factory();\r\n}(this, function() {\r\n    /**\r\n     * Constructor for the event emitter.\r\n     */\r\n    function EvEmitter() { }\r\n\r\n    EvEmitter.prototype = {\r\n        /**\r\n         * Add an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Function} listener - Callback function\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        on: function(eventName, listener) {\r\n            if (!eventName || !listener) {\r\n                return;\r\n            }\r\n            // set events hash\r\n            var events = this._events = this._events || {};\r\n            // set listeners array\r\n            var listeners = events[eventName] = events[eventName] || [];\r\n            // only add once\r\n            if (listeners.indexOf(listener) === -1) {\r\n                listeners.push(listener);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Remove an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Function} listener - Callback function\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        off: function(eventName, listener) {\r\n            var listeners = this._events && this._events[eventName];\r\n            if (!listeners || !listeners.length) {\r\n                return;\r\n            }\r\n            var index = listeners.indexOf(listener);\r\n            if (index !== -1) {\r\n                listeners.splice(index, 1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Dispatch an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Array} args - Arguments for the callback.\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        emitEvent: function(eventName, args) {\r\n            var listeners = this._events && this._events[eventName];\r\n            if (!listeners || !listeners.length) {\r\n                return;\r\n            }\r\n            args = args || [];\r\n            listeners.forEach(function(x) {\r\n                x.apply(this, args);\r\n            });\r\n            return this;\r\n        }\r\n    };\r\n\r\n    return EvEmitter;\r\n}));\r\n\r\n/*!\r\n * Unipointer v2.1.0\r\n * base class for doing one thing with pointer event\r\n * MIT license\r\n */\r\n\r\n/*jshint browser: true, undef: true, unused: true, strict: true */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Unipointer = factory(root.$, root, root.EvEmitter);\r\n}(this, function factory($, root, EvEmitter) {\r\n    /**\r\n     * Constructor for the Unipointer\r\n     */\r\n    function Unipointer() { }\r\n\r\n    // inherit EvEmitter\r\n    var proto = Unipointer.prototype = Object.create(EvEmitter.prototype);\r\n\r\n    /**\r\n     * Add an event to start dragging.\r\n     * @param {Node} elem - Node to add the event to.\r\n     */\r\n    proto.bindStartEvent = function(elem) {\r\n        this._bindStartEvent(elem, true);\r\n    };\r\n\r\n    /**\r\n     * Remove an event to start dragging.\r\n     * @param {Node} elem - Node to remove the event from.\r\n     */\r\n    proto.unbindStartEvent = function(elem) {\r\n        this._bindStartEvent(elem, false);\r\n    };\r\n\r\n    /**\r\n     * Add/remove the event to start dragging.\r\n     * @param {Node} elem - Node to add/remove the event to.\r\n     * @param {Boolean} isBind - will unbind if falsey.\r\n     * @private\r\n     */\r\n    proto._bindStartEvent = function(elem, isBind) {\r\n        var bindMethod = $.coalesce(isBind, true) ? 'addEventListener' : 'removeEventListener';\r\n\r\n        if (window.navigator.pointerEnabled) {\r\n            // W3C Pointer Events, IE11. See https://coderwall.com/p/mfreca\r\n            elem[bindMethod]('pointerdown', this);\r\n        } else if (window.navigator.msPointerEnabled) {\r\n            // IE10 Pointer Events\r\n            elem[bindMethod]('MSPointerDown', this);\r\n        } else {\r\n            // listen for both, for devices like Chrome Pixel\r\n            elem[bindMethod]('mousedown', this);\r\n            elem[bindMethod]('touchstart', this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Trigger handler methods for events\r\n     * @param {Event} event - Event to trigger.\r\n     */\r\n    proto.handleEvent = function(event) {\r\n        var method = 'on' + event.type;\r\n        if (this[method]) {\r\n            this[method](event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns the touch that we're keeping track of.\r\n     * @param {Touch[]} touches - Touch history\r\n     * @returns {Touch} Touch event.\r\n     */\r\n    proto.getTouch = function(touches) {\r\n        return $.findByKey(touches, 'identifier', this.pointerIdentifier);\r\n    };\r\n\r\n    /**\r\n     * Handle a mouse click.\r\n     * @param {Event} event - Click event.\r\n     */\r\n    proto.onmousedown = function(event) {\r\n        // dismiss clicks from right or middle buttons\r\n        var button = event.button;\r\n        if (button && (button !== 0 && button !== 1)) {\r\n            return;\r\n        }\r\n        this._pointerDown(event, event);\r\n    };\r\n\r\n    /**\r\n     * Handle a touch.\r\n     * @param {Touch} event - Touch event.\r\n     */\r\n    proto.ontouchstart = function(event) {\r\n        this._pointerDown(event, event.changedTouches[0]);\r\n    };\r\n\r\n    /**\r\n     * Handle a mouse click for IE.\r\n     * @param {Event} event - Click event.\r\n     */\r\n    proto.onMSPointerDown = proto.onpointerdown = function(event) {\r\n        this._pointerDown(event, event);\r\n    };\r\n\r\n    /**\r\n     * Start a click/touch event.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerDown = function(event, pointer) {\r\n        // dismiss other pointers\r\n        if (this.isPointerDown) {\r\n            return;\r\n        }\r\n\r\n        this.isPointerDown = true;\r\n        // save pointer identifier to match up touch events\r\n        // pointerId for pointer events, touch.indentifier for touch events\r\n        this.pointerIdentifier = pointer.pointerId !== undefined ? pointer.pointerId : pointer.identifier;\r\n        this.pointerDown(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Bind events after the start of a click/touch event.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        this._bindPostStartEvents(event);\r\n        this.emitEvent('pointerDown', [event, pointer]);\r\n    };\r\n\r\n    // hash of events to be bound after start event\r\n    var postStartEvents = {\r\n        mousedown: ['mousemove', 'mouseup'],\r\n        touchstart: ['touchmove', 'touchend', 'touchcancel'],\r\n        pointerdown: ['pointermove', 'pointerup', 'pointercancel'],\r\n        MSPointerDown: ['MSPointerMove', 'MSPointerUp', 'MSPointerCancel']\r\n    };\r\n\r\n    /**\r\n     * Add all of the events that are needed after start dragging.\r\n     * @param {Event} event - Original click/touch event.\r\n     * @private\r\n     */\r\n    proto._bindPostStartEvents = function(event) {\r\n        if (!event) {\r\n            return;\r\n        }\r\n        // get proper events to match start event\r\n        var events = postStartEvents[event.type];\r\n        // bind events to node\r\n        events.forEach(function(eventName) {\r\n            window.addEventListener(eventName, this);\r\n        }, this);\r\n        // save these arguments\r\n        this._boundPointerEvents = events;\r\n    };\r\n\r\n    /**\r\n     * Remove all of the events that are needed after start dragging.\r\n     * @param {Event} event - Original click/touch event.\r\n     * @private\r\n     */\r\n    proto._unbindPostStartEvents = function() {\r\n        // check for _boundEvents, in case dragEnd triggered twice (old IE8 bug)\r\n        if (!this._boundPointerEvents) {\r\n            return;\r\n        }\r\n        this._boundPointerEvents.forEach(function(eventName) {\r\n            window.removeEventListener(eventName, this);\r\n        }, this);\r\n\r\n        delete this._boundPointerEvents;\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse moves.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onmousemove = function(event) {\r\n        this._pointerMove(event, event);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse moves for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerMove = proto.onpointermove = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerMove(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch moves.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchmove = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerMove(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer move from all the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerMove = function(event, pointer) {\r\n        this.pointerMove(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer move event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        this.emitEvent('pointerMove', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse button is released.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onmouseup = function(event) {\r\n        this._pointerUp(event, event);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse button is released for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerUp = proto.onpointerup = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerUp(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch is released.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchend = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerUp(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer up from all the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerUp = function(event, pointer) {\r\n        this._pointerDone();\r\n        this.pointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer up event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        this.emitEvent('pointerUp', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Event handler for when the dragging stops.\r\n     * @private\r\n     */\r\n    proto._pointerDone = function() {\r\n        // reset properties\r\n        this.isPointerDown = false;\r\n        delete this.pointerIdentifier;\r\n        // remove events\r\n        this._unbindPostStartEvents();\r\n        this.pointerDone();\r\n    };\r\n\r\n    proto.pointerDone = $.noop;\r\n\r\n    /**\r\n     * Event handler when the mouse click is canceled for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerCancel = proto.onpointercancel = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerCancel(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch is canceled.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchcancel = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerCancel(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer cancel from all of the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerCancel = function(event, pointer) {\r\n        this._pointerDone();\r\n        this.pointerCancel(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer cancel event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerCancel = function(event, pointer) {\r\n        this.emitEvent('pointerCancel', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Utility function for getting x/y coords from event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @returns {Object} Object with x & y coordinates.\r\n     */\r\n    Unipointer.getPointerPoint = function(pointer) {\r\n        return {\r\n            x: pointer.pageX,\r\n            y: pointer.pageY\r\n        };\r\n    };\r\n\r\n    return Unipointer;\r\n}));\r\n\r\n/*!\r\n * Unidragger v2.1.0\r\n * Draggable base class\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Unidragger = factory(root.$, root, root.Unipointer);\r\n}(this, function factory($, root, Unipointer) {\r\n    /**\r\n     * Unidragger constructor.\r\n     */\r\n    function Unidragger() { }\r\n\r\n    /**\r\n     * Inherit Unipointer & EvEmitter\r\n     */\r\n    var proto = Unidragger.prototype = Object.create(Unipointer.prototype);\r\n\r\n    /**\r\n     * Add events for drag handle.\r\n     */\r\n    proto.bindHandles = function() {\r\n        this._bindHandles(true);\r\n    };\r\n\r\n    /**\r\n     * Remove events for drag handle.\r\n     */\r\n    proto.unbindHandles = function() {\r\n        this._bindHandles(false);\r\n    };\r\n\r\n    /**\r\n     * Handle adding/removing events for the drag handle.\r\n     * @param {Bool} isBind - Unbind if falsey.\r\n     */\r\n    proto._bindHandles = function(isBind) {\r\n        isBind = $.coalesce(isBind, true);\r\n        // extra bind logic\r\n        var binderExtra;\r\n        var navigator = window.navigator;\r\n        if (navigator.pointerEnabled || navigator.msPointerEnabled) {\r\n            var prop = navigator.pointerEnabled ? 'touchAction' : 'msTouchAction';\r\n            binderExtra = function(handle) {\r\n                // disable scrolling on the element\r\n                handle.style[prop] = isBind ? 'none' : '';\r\n            };\r\n        } else {\r\n            binderExtra = $.noop;\r\n        }\r\n        // bind each handle\r\n        var bindMethod = isBind ? 'addEventListener' : 'removeEventListener';\r\n        for (var i = 0; i < this.handles.length; i++) {\r\n            var handle = this.handles[i];\r\n            this._bindStartEvent(handle, isBind);\r\n            binderExtra(handle);\r\n            handle[bindMethod]('click', this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Pointer start\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        // dismiss range sliders\r\n        if (event.target.nodeName === 'INPUT' && event.target.type === 'range') {\r\n            // reset pointerDown logic\r\n            this.isPointerDown = false;\r\n            delete this.pointerIdentifier;\r\n            return;\r\n        }\r\n\r\n        this._dragPointerDown(event, pointer);\r\n        // kludge to blur focused inputs in dragger\r\n        var focused = document.activeElement;\r\n        if (focused && focused.blur) {\r\n            focused.blur();\r\n        }\r\n        // bind move and end events\r\n        this._bindPostStartEvents(event);\r\n        this.emitEvent('pointerDown', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Base pointer down logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragPointerDown = function(event, pointer) {\r\n        // track to see when dragging starts\r\n        this.pointerDownPoint = Unipointer.getPointerPoint(pointer);\r\n        if (this.canPreventDefaultOnPointerDown(event, pointer)) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Overwriteable method so Flickity can prevent for scrolling\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @returns {Bool} True if allowed to prevent default event, else false.\r\n     */\r\n    proto.canPreventDefaultOnPointerDown = function(event) {\r\n        // prevent default, unless touchstart or <select>\r\n        return event.target.nodeName !== 'SELECT';\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        var moveVector = this._dragPointerMove(event, pointer);\r\n        this.emitEvent('pointerMove', [event, pointer, moveVector]);\r\n        this._dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Base pointer move logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @returns {Object} Object with x & y coordinates.\r\n     */\r\n    proto._dragPointerMove = function(event, pointer) {\r\n        var movePoint = Unipointer.getPointerPoint(pointer);\r\n        var moveVector = {\r\n            x: movePoint.x - this.pointerDownPoint.x,\r\n            y: movePoint.y - this.pointerDownPoint.y\r\n        };\r\n        // start drag if pointer has moved far enough to start drag\r\n        if (!this.isDragging && this.hasDragStarted(moveVector)) {\r\n            this._dragStart(event, pointer);\r\n        }\r\n        return moveVector;\r\n    };\r\n\r\n    /**\r\n     * Check if pointer has moved far enough to start drag.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     * @returns {Bool} True if moved far enough to count as move.\r\n     */\r\n    proto.hasDragStarted = function(moveVector) {\r\n        return Math.abs(moveVector.x) > 3 || Math.abs(moveVector.y) > 3;\r\n    };\r\n\r\n    /**\r\n     * Pointer up.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        this.emitEvent('pointerUp', [event, pointer]);\r\n        this._dragPointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Handle mouse/touch up.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragPointerUp = function(event, pointer) {\r\n        if (this.isDragging) {\r\n            this._dragEnd(event, pointer);\r\n        } else {\r\n            // pointer didn't move enough for drag to start\r\n            this._staticClick(event, pointer);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Base drag start logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._dragStart = function(event, pointer) {\r\n        this.isDragging = true;\r\n        this.dragStartPoint = Unipointer.getPointerPoint(pointer);\r\n        this.isPreventingClicks = true;\r\n        this.dragStart(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag start event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragStart = function(event, pointer) {\r\n        this.emitEvent('dragStart', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Base drag move logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     * @private\r\n     */\r\n    proto._dragMove = function(event, pointer, moveVector) {\r\n        // do not drag if not dragging yet\r\n        if (!this.isDragging) {\r\n            return;\r\n        }\r\n        this.dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag move event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     */\r\n    proto.dragMove = function(event, pointer, moveVector) {\r\n        event.preventDefault();\r\n        this.emitEvent('dragMove', [event, pointer, moveVector]);\r\n    };\r\n\r\n    /**\r\n     * Base logic for drag end.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragEnd = function(event, pointer) {\r\n        this.isDragging = false;\r\n        // re-enable clicking async\r\n        setTimeout(function() {\r\n            delete this.isPreventingClicks;\r\n        }.bind(this));\r\n        this.dragEnd(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag end event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragEnd = function(event, pointer) {\r\n        this.emitEvent('dragEnd', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Handle all clicks and prevent clicks when dragging\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     */\r\n    proto.onclick = function(event) {\r\n        if (this.isPreventingClicks) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Triggered after pointer down & up with no/tiny movement.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._staticClick = function(event, pointer) {\r\n        // ignore emulated mouse up clicks\r\n        if (this.isIgnoringMouseUp && event.type === 'mouseup') {\r\n            return;\r\n        }\r\n\r\n        // allow click in <input>s and <textarea>s\r\n        var nodeName = event.target.nodeName;\r\n        if (nodeName === 'INPUT' || nodeName === 'TEXTAREA') {\r\n            event.target.focus();\r\n        }\r\n        this.staticClick(event, pointer);\r\n\r\n        // set flag for emulated clicks 300ms after touchend\r\n        if (event.type !== 'mouseup') {\r\n            this.isIgnoringMouseUp = true;\r\n            // reset flag after 300ms\r\n            setTimeout(function() {\r\n                delete this.isIgnoringMouseUp;\r\n            }.bind(this), 400);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Dispatch event for staticClick for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.staticClick = function(event, pointer) {\r\n        this.emitEvent('staticClick', [event, pointer]);\r\n    };\r\n\r\n    return Unidragger;\r\n}));\r\n\r\n/*!\r\n * Draggabilly v2.1.1\r\n * Make that shiz draggable\r\n * http://draggabilly.desandro.com\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Draggabilly = factory(root.$, root, root.getSize, root.Unidragger);\r\n}(this, function factory($, root, getSize, Unidragger) {\r\n    var lastTime = 0;\r\n    // get rAF, prefixed, if present. fallback to setTimeout\r\n    var requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(callback) {\r\n        var currTime = new Date().getTime();\r\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n        var id = setTimeout(callback, timeToCall);\r\n        lastTime = currTime + timeToCall;\r\n        return id;\r\n    };\r\n    var transformProperty = $.isString(document.documentElement.style.transform) ? 'transform' : 'WebkitTransform';\r\n\r\n    /**\r\n     * Draggabilly constructor.\r\n     * @param {Node|string} element - Node, or querySelector string of node, to make draggable.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    function Draggabilly(element, options) {\r\n        this.element = $.get(element);\r\n        this.options = options || {};\r\n        this._create();\r\n    }\r\n\r\n    /**\r\n     * Inherit Unidragger methods.\r\n     */\r\n    var proto = Draggabilly.prototype = Object.create(Unidragger.prototype);\r\n\r\n    /**\r\n     * CSS position values that don't need to be set.\r\n     */\r\n    var positionValues = { relative: true, absolute: true, fixed: true };\r\n\r\n    /**\r\n     * Initialize draggabilly.\r\n     */\r\n    proto._create = function() {\r\n        // properties\r\n        this.position = {};\r\n        this._getPosition();\r\n\r\n        this.startPoint = { x: 0, y: 0 };\r\n        this.dragPoint = { x: 0, y: 0 };\r\n        this.startPosition = {};\r\n\r\n        // set relative positioning\r\n        var style = getComputedStyle(this.element);\r\n        if (!positionValues[style.position]) {\r\n            this.element.style.position = 'relative';\r\n        }\r\n\r\n        this.enable();\r\n        this.setHandles();\r\n    };\r\n\r\n    /**\r\n     * Set this.handles and bind start events to the handles.\r\n     */\r\n    proto.setHandles = function() {\r\n        this.handles = this.options.handle ? $.getAll(this.options.handle, this.element) : [this.element];\r\n        this.bindHandles();\r\n    };\r\n\r\n    /**\r\n     * Emits events via EvEmitter.\r\n     * @param {String} type - Name of event.\r\n     * @param {Event} event - Original event.\r\n     * @param {Array} args - Extra arguments.\r\n     */\r\n    proto.dispatchEvent = function(type, event, args) {\r\n        this.emitEvent(type, [event].concat(args));\r\n    };\r\n\r\n    /**\r\n     * Get x/y position from style.\r\n     */\r\n    proto._getPosition = function() {\r\n        var style = getComputedStyle(this.element);\r\n        var x = this._getPositionCoord(style.left, 'width');\r\n        var y = this._getPositionCoord(style.top, 'height');\r\n        // clean up 'auto' or other non-integer values\r\n        this.position.x = isNaN(x) ? 0 : x;\r\n        this.position.y = isNaN(y) ? 0 : y;\r\n\r\n        this._addTransformPosition(style);\r\n    };\r\n\r\n    /**\r\n     * Get a numeric coordinate from a style.\r\n     * @param {String} styleSide - CSS style to parse.\r\n     * @param {String} measure - Property name to get the size for.\r\n     * @returns {Number} Resulting size in pixels.\r\n     */\r\n    proto._getPositionCoord = function(styleSide, measure) {\r\n        if (styleSide.indexOf('%') !== -1) {\r\n            // convert percent into pixel for Safari, #75\r\n            var parentSize = getSize(this.element.parentNode);\r\n            // prevent not-in-DOM element throwing bug, #131\r\n            return !parentSize ? 0 : (parseFloat(styleSide) / 100) * parentSize[measure];\r\n        }\r\n        return parseInt(styleSide, 10);\r\n    };\r\n\r\n    /**\r\n     * Add `transform: translate( x, y )` to position.\r\n     * @param {CSSStyleDeclaration} style - Element styles to add to.\r\n     */\r\n    proto._addTransformPosition = function(style) {\r\n        var transform = style[transformProperty];\r\n        // bail out if value is 'none'\r\n        if (transform.indexOf('matrix') !== 0) {\r\n            return;\r\n        }\r\n        // split matrix(1, 0, 0, 1, x, y)\r\n        var matrixValues = transform.split(',');\r\n        // translate X value is in 12th or 4th position\r\n        var xIndex = transform.indexOf('matrix3d') === 0 ? 12 : 4;\r\n        var translateX = parseInt(matrixValues[xIndex], 10);\r\n        // translate Y value is in 13th or 5th position\r\n        var translateY = parseInt(matrixValues[xIndex + 1], 10);\r\n        this.position.x += translateX;\r\n        this.position.y += translateY;\r\n    };\r\n\r\n    /**\r\n     * Pointer start.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        this._dragPointerDown(event, pointer);\r\n        // kludge to blur focused inputs in dragger\r\n        var focused = document.activeElement;\r\n        // do not blur body for IE10, metafizzy/flickity#117\r\n        if (focused && focused.blur && focused !== document.body) {\r\n            focused.blur();\r\n        }\r\n        // bind move and end events\r\n        this._bindPostStartEvents(event);\r\n        $.addClass(this.element, 'is-pointer-down');\r\n        this.dispatchEvent('pointerDown', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        var moveVector = this._dragPointerMove(event, pointer);\r\n        this.dispatchEvent('pointerMove', event, [pointer, moveVector]);\r\n        this._dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Drag start.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragStart = function(event, pointer) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n        this._getPosition();\r\n        this.measureContainment();\r\n        // position _when_ drag began\r\n        this.startPosition.x = this.position.x;\r\n        this.startPosition.y = this.position.y;\r\n        // reset left/top style\r\n        this.setLeftTop();\r\n\r\n        this.dragPoint.x = 0;\r\n        this.dragPoint.y = 0;\r\n\r\n        $.addClass(this.element, 'is-dragging');\r\n        this.dispatchEvent('dragStart', event, [pointer]);\r\n        // start animation\r\n        this.animate();\r\n    };\r\n\r\n    /**\r\n     * Calculate the correct position of the element within its container.\r\n     */\r\n    proto.measureContainment = function() {\r\n        var containment = this.options.containment;\r\n        if (!containment) {\r\n            return;\r\n        }\r\n\r\n        // use element if element, otherwise just `true`, use the parent\r\n        var container = $.isNode(containment) ? containment : $.isString(containment) ? $.get(containment) : this.element.parentNode;\r\n        var elemSize = getSize(this.element);\r\n        var containerSize = getSize(container);\r\n        var elemRect = this.element.getBoundingClientRect();\r\n        var containerRect = container.getBoundingClientRect();\r\n        var borderSizeX = containerSize.borderLeftWidth + containerSize.borderRightWidth;\r\n        var borderSizeY = containerSize.borderTopWidth + containerSize.borderBottomWidth;\r\n\r\n        var position = this.relativeStartPosition = {\r\n            x: elemRect.left - (containerRect.left + containerSize.borderLeftWidth),\r\n            y: elemRect.top - (containerRect.top + containerSize.borderTopWidth)\r\n        };\r\n\r\n        this.containSize = {\r\n            width: (containerSize.width - borderSizeX) - position.x - elemSize.width,\r\n            height: (containerSize.height - borderSizeY) - position.y - elemSize.height\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x and y coordinates of current position.\r\n     */\r\n    proto.dragMove = function(event, pointer, moveVector) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n\r\n        var dragX = moveVector.x;\r\n        var dragY = moveVector.y;\r\n        var grid = this.options.grid;\r\n        var gridX = grid && grid[0];\r\n        var gridY = grid && grid[1];\r\n\r\n        dragX = applyGrid(dragX, gridX);\r\n        dragY = applyGrid(dragY, gridY);\r\n\r\n        dragX = this.containDrag('x', dragX, gridX);\r\n        dragY = this.containDrag('y', dragY, gridY);\r\n\r\n        // constrain to axis\r\n        dragX = this.options.axis === 'y' ? 0 : dragX;\r\n        dragY = this.options.axis === 'x' ? 0 : dragY;\r\n\r\n        if (this.options.minZero) {\r\n            dragX = applyMinZero(this.startPosition.x, dragX);\r\n            dragY = applyMinZero(this.startPosition.y, dragY);\r\n        }\r\n\r\n        this.position.x = this.startPosition.x + dragX;\r\n        this.position.y = this.startPosition.y + dragY;\r\n        // set dragPoint properties\r\n        this.dragPoint.x = dragX;\r\n        this.dragPoint.y = dragY;\r\n\r\n        this.dispatchEvent('dragMove', event, [pointer, moveVector]);\r\n    };\r\n\r\n    /**\r\n     * Adjust a coordinate to snap to the grid.\r\n     * @param {Number} value - Coordinate to snap to grid.\r\n     * @param {Number} grid - Grid width/height.\r\n     * @param {String} method - Math method to apply.\r\n     * @returns {Number} Closes number that snaps to grid.\r\n     */\r\n    function applyGrid(value, grid, method) {\r\n        return grid ? Math[method || 'round'](value / grid) * grid : value;\r\n    }\r\n\r\n    /**\r\n     * Adjust the drag position to prevent the item from moving out of the container to the left or top.\r\n     * @param {Number} start - Element starting coordinate.\r\n     * @param {Number} drag - Distance element was dragged.\r\n     * @returns {Number} Corrected drag coordinate.\r\n     */\r\n    function applyMinZero(start, drag) {\r\n        return start + drag < 0 ? -start : drag;\r\n    }\r\n\r\n    /**\r\n     * Limit dragging within boundaries.\r\n     * @param {string} axis - X or Y Axis\r\n     * @param {number} drag - Position coordinate on axis\r\n     * @param {number} grid - Boundary coordinate on axis.\r\n     * @returns {number} Coordinate contained with drag.\r\n     */\r\n    proto.containDrag = function(axis, drag, grid) {\r\n        if (!this.options.containment) {\r\n            return drag;\r\n        }\r\n        var measure = axis === 'x' ? 'width' : 'height';\r\n\r\n        var rel = this.relativeStartPosition[axis];\r\n        var min = applyGrid(-rel, grid, 'ceil');\r\n        var max = this.containSize[measure];\r\n        max = applyGrid(max, grid, 'floor');\r\n        return Math.min(max, Math.max(min, drag));\r\n    };\r\n\r\n    /**\r\n     * pointer up\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        $.removeClass(this.element, 'is-pointer-down');\r\n        this.dispatchEvent('pointerUp', event, [pointer]);\r\n        this._dragPointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Drag end.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragEnd = function(event, pointer) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n        // use top left position when complete\r\n        if (transformProperty) {\r\n            this.element.style[transformProperty] = '';\r\n            this.setLeftTop();\r\n        }\r\n        $.removeClass(this.element, 'is-dragging');\r\n        this.dispatchEvent('dragEnd', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Animate while dragging.\r\n     */\r\n    proto.animate = function() {\r\n        if (!this.isDragging) {\r\n            return;\r\n        }\r\n        this.positionDrag();\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    };\r\n\r\n    /**\r\n     * Set left/top positioning.\r\n     */\r\n    proto.setLeftTop = function() {\r\n        $.style(this.element, { left: this.position.x + 'px', top: this.position.y + 'px' });\r\n    };\r\n\r\n    /**\r\n     * Set position transform based on drag.\r\n     */\r\n    proto.positionDrag = function() {\r\n        this.element.style[transformProperty] = 'translate3d( ' + this.dragPoint.x + 'px, ' + this.dragPoint.y + 'px, 0)';\r\n    };\r\n\r\n    /**\r\n     * Dispatch the event for static click callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.staticClick = function(event, pointer) {\r\n        this.dispatchEvent('staticClick', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Enable dragging.\r\n     */\r\n    proto.enable = function() {\r\n        this.isEnabled = true;\r\n    };\r\n\r\n    /**\r\n     * Disable dragging.\r\n     */\r\n    proto.disable = function() {\r\n        this.isEnabled = false;\r\n        if (this.isDragging) {\r\n            this.dragEnd();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy this instance.\r\n     */\r\n    proto.destroy = function() {\r\n        this.disable();\r\n        this.element.removeAttribute('style');\r\n        this.unbindHandles();\r\n    };\r\n\r\n    return Draggabilly;\r\n}));\r\n","/*!\r\n * Chart.js\r\n * http://chartjs.org/\r\n * Version: 2.7.1\r\n *\r\n * Copyright 2018 Chart.js Contributors\r\n * Released under the MIT license\r\n * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md\r\n */\r\n(function(f) { if (typeof exports === \"object\" && typeof module !== \"undefined\") { module.exports = f() } else if (typeof define === \"function\" && define.amd) { define([], f) } else { var g; if (typeof window !== \"undefined\") { g = window } else if (typeof global !== \"undefined\") { g = global } else if (typeof self !== \"undefined\") { g = self } else { g = this } g.Chart = f() } })(function() {\r\n    var define, module, exports; return (function e(t, n, r) { function s(o, u) { if (!n[o]) { if (!t[o]) { var a = typeof require == \"function\" && require; if (!u && a) return a(o, !0); if (i) return i(o, !0); var f = new Error(\"Cannot find module '\" + o + \"'\"); throw f.code = \"MODULE_NOT_FOUND\", f } var l = n[o] = { exports: {} }; t[o][0].call(l.exports, function(e) { var n = t[o][1][e]; return s(n ? n : e) }, l, l.exports, e, t, n, r) } return n[o].exports } var i = typeof require == \"function\" && require; for (var o = 0; o < r.length; o++)s(r[o]); return s })({\r\n        1: [function(require, module, exports) {\r\n            /* MIT license */\r\n            var colorNames = require(5);\r\n\r\n            module.exports = {\r\n                getRgba: getRgba,\r\n                getHsla: getHsla,\r\n                getRgb: getRgb,\r\n                getHsl: getHsl,\r\n                getHwb: getHwb,\r\n                getAlpha: getAlpha,\r\n\r\n                hexString: hexString,\r\n                rgbString: rgbString,\r\n                rgbaString: rgbaString,\r\n                percentString: percentString,\r\n                percentaString: percentaString,\r\n                hslString: hslString,\r\n                hslaString: hslaString,\r\n                hwbString: hwbString,\r\n                keyword: keyword\r\n            }\r\n\r\n            function getRgba(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var abbr = /^#([a-fA-F0-9]{3})$/i,\r\n                    hex = /^#([a-fA-F0-9]{6})$/i,\r\n                    rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n                    per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n                    keyword = /(\\w+)/;\r\n\r\n                var rgb = [0, 0, 0],\r\n                    a = 1,\r\n                    match = string.match(abbr);\r\n                if (match) {\r\n                    match = match[1];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match[i] + match[i], 16);\r\n                    }\r\n                }\r\n                else if (match = string.match(hex)) {\r\n                    match = match[1];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n                    }\r\n                }\r\n                else if (match = string.match(rgba)) {\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match[i + 1]);\r\n                    }\r\n                    a = parseFloat(match[4]);\r\n                }\r\n                else if (match = string.match(per)) {\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n                    }\r\n                    a = parseFloat(match[4]);\r\n                }\r\n                else if (match = string.match(keyword)) {\r\n                    if (match[1] == \"transparent\") {\r\n                        return [0, 0, 0, 0];\r\n                    }\r\n                    rgb = colorNames[match[1]];\r\n                    if (!rgb) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                for (var i = 0; i < rgb.length; i++) {\r\n                    rgb[i] = scale(rgb[i], 0, 255);\r\n                }\r\n                if (!a && a != 0) {\r\n                    a = 1;\r\n                }\r\n                else {\r\n                    a = scale(a, 0, 1);\r\n                }\r\n                rgb[3] = a;\r\n                return rgb;\r\n            }\r\n\r\n            function getHsla(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n                var match = string.match(hsl);\r\n                if (match) {\r\n                    var alpha = parseFloat(match[4]);\r\n                    var h = scale(parseInt(match[1]), 0, 360),\r\n                        s = scale(parseFloat(match[2]), 0, 100),\r\n                        l = scale(parseFloat(match[3]), 0, 100),\r\n                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n                    return [h, s, l, a];\r\n                }\r\n            }\r\n\r\n            function getHwb(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n                var match = string.match(hwb);\r\n                if (match) {\r\n                    var alpha = parseFloat(match[4]);\r\n                    var h = scale(parseInt(match[1]), 0, 360),\r\n                        w = scale(parseFloat(match[2]), 0, 100),\r\n                        b = scale(parseFloat(match[3]), 0, 100),\r\n                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n                    return [h, w, b, a];\r\n                }\r\n            }\r\n\r\n            function getRgb(string) {\r\n                var rgba = getRgba(string);\r\n                return rgba && rgba.slice(0, 3);\r\n            }\r\n\r\n            function getHsl(string) {\r\n                var hsla = getHsla(string);\r\n                return hsla && hsla.slice(0, 3);\r\n            }\r\n\r\n            function getAlpha(string) {\r\n                var vals = getRgba(string);\r\n                if (vals) {\r\n                    return vals[3];\r\n                }\r\n                else if (vals = getHsla(string)) {\r\n                    return vals[3];\r\n                }\r\n                else if (vals = getHwb(string)) {\r\n                    return vals[3];\r\n                }\r\n            }\r\n\r\n            // generators\r\n            function hexString(rgb) {\r\n                return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n                    + hexDouble(rgb[2]);\r\n            }\r\n\r\n            function rgbString(rgba, alpha) {\r\n                if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n                    return rgbaString(rgba, alpha);\r\n                }\r\n                return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n            }\r\n\r\n            function rgbaString(rgba, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n                }\r\n                return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n                    + \", \" + alpha + \")\";\r\n            }\r\n\r\n            function percentString(rgba, alpha) {\r\n                if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n                    return percentaString(rgba, alpha);\r\n                }\r\n                var r = Math.round(rgba[0] / 255 * 100),\r\n                    g = Math.round(rgba[1] / 255 * 100),\r\n                    b = Math.round(rgba[2] / 255 * 100);\r\n\r\n                return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n            }\r\n\r\n            function percentaString(rgba, alpha) {\r\n                var r = Math.round(rgba[0] / 255 * 100),\r\n                    g = Math.round(rgba[1] / 255 * 100),\r\n                    b = Math.round(rgba[2] / 255 * 100);\r\n                return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n            }\r\n\r\n            function hslString(hsla, alpha) {\r\n                if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n                    return hslaString(hsla, alpha);\r\n                }\r\n                return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n            }\r\n\r\n            function hslaString(hsla, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n                }\r\n                return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n                    + alpha + \")\";\r\n            }\r\n\r\n            // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n            // (hwb have alpha optional & 1 is default value)\r\n            function hwbString(hwb, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n                }\r\n                return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n                    + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n            }\r\n\r\n            function keyword(rgb) {\r\n                return reverseNames[rgb.slice(0, 3)];\r\n            }\r\n\r\n            // helpers\r\n            function scale(num, min, max) {\r\n                return Math.min(Math.max(min, num), max);\r\n            }\r\n\r\n            function hexDouble(num) {\r\n                var str = num.toString(16).toUpperCase();\r\n                return (str.length < 2) ? \"0\" + str : str;\r\n            }\r\n\r\n            //create a list of reverse color names\r\n            var reverseNames = {};\r\n            for (var name in colorNames) {\r\n                reverseNames[colorNames[name]] = name;\r\n            }\r\n        }, { \"5\": 5 }], 2: [function(require, module, exports) {\r\n            /* MIT license */\r\n            var convert = require(4);\r\n            var string = require(1);\r\n\r\n            var Color = function(obj) {\r\n                if (obj instanceof Color) {\r\n                    return obj;\r\n                }\r\n                if (!(this instanceof Color)) {\r\n                    return new Color(obj);\r\n                }\r\n\r\n                this.valid = false;\r\n                this.values = {\r\n                    rgb: [0, 0, 0],\r\n                    hsl: [0, 0, 0],\r\n                    hsv: [0, 0, 0],\r\n                    hwb: [0, 0, 0],\r\n                    cmyk: [0, 0, 0, 0],\r\n                    alpha: 1\r\n                };\r\n\r\n                // parse Color() argument\r\n                var vals;\r\n                if (typeof obj === 'string') {\r\n                    vals = string.getRgba(obj);\r\n                    if (vals) {\r\n                        this.setValues('rgb', vals);\r\n                    } else if (vals = string.getHsla(obj)) {\r\n                        this.setValues('hsl', vals);\r\n                    } else if (vals = string.getHwb(obj)) {\r\n                        this.setValues('hwb', vals);\r\n                    }\r\n                } else if (typeof obj === 'object') {\r\n                    vals = obj;\r\n                    if (vals.r !== undefined || vals.red !== undefined) {\r\n                        this.setValues('rgb', vals);\r\n                    } else if (vals.l !== undefined || vals.lightness !== undefined) {\r\n                        this.setValues('hsl', vals);\r\n                    } else if (vals.v !== undefined || vals.value !== undefined) {\r\n                        this.setValues('hsv', vals);\r\n                    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\r\n                        this.setValues('hwb', vals);\r\n                    } else if (vals.c !== undefined || vals.cyan !== undefined) {\r\n                        this.setValues('cmyk', vals);\r\n                    }\r\n                }\r\n            };\r\n\r\n            Color.prototype = {\r\n                isValid: function() {\r\n                    return this.valid;\r\n                },\r\n                rgb: function() {\r\n                    return this.setSpace('rgb', arguments);\r\n                },\r\n                hsl: function() {\r\n                    return this.setSpace('hsl', arguments);\r\n                },\r\n                hsv: function() {\r\n                    return this.setSpace('hsv', arguments);\r\n                },\r\n                hwb: function() {\r\n                    return this.setSpace('hwb', arguments);\r\n                },\r\n                cmyk: function() {\r\n                    return this.setSpace('cmyk', arguments);\r\n                },\r\n\r\n                rgbArray: function() {\r\n                    return this.values.rgb;\r\n                },\r\n                hslArray: function() {\r\n                    return this.values.hsl;\r\n                },\r\n                hsvArray: function() {\r\n                    return this.values.hsv;\r\n                },\r\n                hwbArray: function() {\r\n                    var values = this.values;\r\n                    if (values.alpha !== 1) {\r\n                        return values.hwb.concat([values.alpha]);\r\n                    }\r\n                    return values.hwb;\r\n                },\r\n                cmykArray: function() {\r\n                    return this.values.cmyk;\r\n                },\r\n                rgbaArray: function() {\r\n                    var values = this.values;\r\n                    return values.rgb.concat([values.alpha]);\r\n                },\r\n                hslaArray: function() {\r\n                    var values = this.values;\r\n                    return values.hsl.concat([values.alpha]);\r\n                },\r\n                alpha: function(val) {\r\n                    if (val === undefined) {\r\n                        return this.values.alpha;\r\n                    }\r\n                    this.setValues('alpha', val);\r\n                    return this;\r\n                },\r\n\r\n                red: function(val) {\r\n                    return this.setChannel('rgb', 0, val);\r\n                },\r\n                green: function(val) {\r\n                    return this.setChannel('rgb', 1, val);\r\n                },\r\n                blue: function(val) {\r\n                    return this.setChannel('rgb', 2, val);\r\n                },\r\n                hue: function(val) {\r\n                    if (val) {\r\n                        val %= 360;\r\n                        val = val < 0 ? 360 + val : val;\r\n                    }\r\n                    return this.setChannel('hsl', 0, val);\r\n                },\r\n                saturation: function(val) {\r\n                    return this.setChannel('hsl', 1, val);\r\n                },\r\n                lightness: function(val) {\r\n                    return this.setChannel('hsl', 2, val);\r\n                },\r\n                saturationv: function(val) {\r\n                    return this.setChannel('hsv', 1, val);\r\n                },\r\n                whiteness: function(val) {\r\n                    return this.setChannel('hwb', 1, val);\r\n                },\r\n                blackness: function(val) {\r\n                    return this.setChannel('hwb', 2, val);\r\n                },\r\n                value: function(val) {\r\n                    return this.setChannel('hsv', 2, val);\r\n                },\r\n                cyan: function(val) {\r\n                    return this.setChannel('cmyk', 0, val);\r\n                },\r\n                magenta: function(val) {\r\n                    return this.setChannel('cmyk', 1, val);\r\n                },\r\n                yellow: function(val) {\r\n                    return this.setChannel('cmyk', 2, val);\r\n                },\r\n                black: function(val) {\r\n                    return this.setChannel('cmyk', 3, val);\r\n                },\r\n\r\n                hexString: function() {\r\n                    return string.hexString(this.values.rgb);\r\n                },\r\n                rgbString: function() {\r\n                    return string.rgbString(this.values.rgb, this.values.alpha);\r\n                },\r\n                rgbaString: function() {\r\n                    return string.rgbaString(this.values.rgb, this.values.alpha);\r\n                },\r\n                percentString: function() {\r\n                    return string.percentString(this.values.rgb, this.values.alpha);\r\n                },\r\n                hslString: function() {\r\n                    return string.hslString(this.values.hsl, this.values.alpha);\r\n                },\r\n                hslaString: function() {\r\n                    return string.hslaString(this.values.hsl, this.values.alpha);\r\n                },\r\n                hwbString: function() {\r\n                    return string.hwbString(this.values.hwb, this.values.alpha);\r\n                },\r\n                keyword: function() {\r\n                    return string.keyword(this.values.rgb, this.values.alpha);\r\n                },\r\n\r\n                rgbNumber: function() {\r\n                    var rgb = this.values.rgb;\r\n                    return (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\r\n                },\r\n\r\n                luminosity: function() {\r\n                    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n                    var rgb = this.values.rgb;\r\n                    var lum = [];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        var chan = rgb[i] / 255;\r\n                        lum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\r\n                    }\r\n                    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n                },\r\n\r\n                contrast: function(color2) {\r\n                    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n                    var lum1 = this.luminosity();\r\n                    var lum2 = color2.luminosity();\r\n                    if (lum1 > lum2) {\r\n                        return (lum1 + 0.05) / (lum2 + 0.05);\r\n                    }\r\n                    return (lum2 + 0.05) / (lum1 + 0.05);\r\n                },\r\n\r\n                level: function(color2) {\r\n                    var contrastRatio = this.contrast(color2);\r\n                    if (contrastRatio >= 7.1) {\r\n                        return 'AAA';\r\n                    }\r\n\r\n                    return (contrastRatio >= 4.5) ? 'AA' : '';\r\n                },\r\n\r\n                dark: function() {\r\n                    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\r\n                    var rgb = this.values.rgb;\r\n                    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\r\n                    return yiq < 128;\r\n                },\r\n\r\n                light: function() {\r\n                    return !this.dark();\r\n                },\r\n\r\n                negate: function() {\r\n                    var rgb = [];\r\n                    for (var i = 0; i < 3; i++) {\r\n                        rgb[i] = 255 - this.values.rgb[i];\r\n                    }\r\n                    this.setValues('rgb', rgb);\r\n                    return this;\r\n                },\r\n\r\n                lighten: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[2] += hsl[2] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                darken: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[2] -= hsl[2] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                saturate: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[1] += hsl[1] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                desaturate: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[1] -= hsl[1] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                whiten: function(ratio) {\r\n                    var hwb = this.values.hwb;\r\n                    hwb[1] += hwb[1] * ratio;\r\n                    this.setValues('hwb', hwb);\r\n                    return this;\r\n                },\r\n\r\n                blacken: function(ratio) {\r\n                    var hwb = this.values.hwb;\r\n                    hwb[2] += hwb[2] * ratio;\r\n                    this.setValues('hwb', hwb);\r\n                    return this;\r\n                },\r\n\r\n                greyscale: function() {\r\n                    var rgb = this.values.rgb;\r\n                    // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\r\n                    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\r\n                    this.setValues('rgb', [val, val, val]);\r\n                    return this;\r\n                },\r\n\r\n                clearer: function(ratio) {\r\n                    var alpha = this.values.alpha;\r\n                    this.setValues('alpha', alpha - (alpha * ratio));\r\n                    return this;\r\n                },\r\n\r\n                opaquer: function(ratio) {\r\n                    var alpha = this.values.alpha;\r\n                    this.setValues('alpha', alpha + (alpha * ratio));\r\n                    return this;\r\n                },\r\n\r\n                rotate: function(degrees) {\r\n                    var hsl = this.values.hsl;\r\n                    var hue = (hsl[0] + degrees) % 360;\r\n                    hsl[0] = hue < 0 ? 360 + hue : hue;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                /**\r\n                 * Ported from sass implementation in C\r\n                 * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\r\n                 */\r\n                mix: function(mixinColor, weight) {\r\n                    var color1 = this;\r\n                    var color2 = mixinColor;\r\n                    var p = weight === undefined ? 0.5 : weight;\r\n\r\n                    var w = 2 * p - 1;\r\n                    var a = color1.alpha() - color2.alpha();\r\n\r\n                    var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n                    var w2 = 1 - w1;\r\n\r\n                    return this\r\n                        .rgb(\r\n                        w1 * color1.red() + w2 * color2.red(),\r\n                        w1 * color1.green() + w2 * color2.green(),\r\n                        w1 * color1.blue() + w2 * color2.blue()\r\n                        )\r\n                        .alpha(color1.alpha() * p + color2.alpha() * (1 - p));\r\n                },\r\n\r\n                toJSON: function() {\r\n                    return this.rgb();\r\n                },\r\n\r\n                clone: function() {\r\n                    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\r\n                    // making the final build way to big to embed in Chart.js. So let's do it manually,\r\n                    // assuming that values to clone are 1 dimension arrays containing only numbers,\r\n                    // except 'alpha' which is a number.\r\n                    var result = new Color();\r\n                    var source = this.values;\r\n                    var target = result.values;\r\n                    var value, type;\r\n\r\n                    for (var prop in source) {\r\n                        if (source.hasOwnProperty(prop)) {\r\n                            value = source[prop];\r\n                            type = ({}).toString.call(value);\r\n                            if (type === '[object Array]') {\r\n                                target[prop] = value.slice(0);\r\n                            } else if (type === '[object Number]') {\r\n                                target[prop] = value;\r\n                            } else {\r\n                                console.error('unexpected color value:', value);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return result;\r\n                }\r\n            };\r\n\r\n            Color.prototype.spaces = {\r\n                rgb: ['red', 'green', 'blue'],\r\n                hsl: ['hue', 'saturation', 'lightness'],\r\n                hsv: ['hue', 'saturation', 'value'],\r\n                hwb: ['hue', 'whiteness', 'blackness'],\r\n                cmyk: ['cyan', 'magenta', 'yellow', 'black']\r\n            };\r\n\r\n            Color.prototype.maxes = {\r\n                rgb: [255, 255, 255],\r\n                hsl: [360, 100, 100],\r\n                hsv: [360, 100, 100],\r\n                hwb: [360, 100, 100],\r\n                cmyk: [100, 100, 100, 100]\r\n            };\r\n\r\n            Color.prototype.getValues = function(space) {\r\n                var values = this.values;\r\n                var vals = {};\r\n\r\n                for (var i = 0; i < space.length; i++) {\r\n                    vals[space.charAt(i)] = values[space][i];\r\n                }\r\n\r\n                if (values.alpha !== 1) {\r\n                    vals.a = values.alpha;\r\n                }\r\n\r\n                // {r: 255, g: 255, b: 255, a: 0.4}\r\n                return vals;\r\n            };\r\n\r\n            Color.prototype.setValues = function(space, vals) {\r\n                var values = this.values;\r\n                var spaces = this.spaces;\r\n                var maxes = this.maxes;\r\n                var alpha = 1;\r\n                var i;\r\n\r\n                this.valid = true;\r\n\r\n                if (space === 'alpha') {\r\n                    alpha = vals;\r\n                } else if (vals.length) {\r\n                    // [10, 10, 10]\r\n                    values[space] = vals.slice(0, space.length);\r\n                    alpha = vals[space.length];\r\n                } else if (vals[space.charAt(0)] !== undefined) {\r\n                    // {r: 10, g: 10, b: 10}\r\n                    for (i = 0; i < space.length; i++) {\r\n                        values[space][i] = vals[space.charAt(i)];\r\n                    }\r\n\r\n                    alpha = vals.a;\r\n                } else if (vals[spaces[space][0]] !== undefined) {\r\n                    // {red: 10, green: 10, blue: 10}\r\n                    var chans = spaces[space];\r\n\r\n                    for (i = 0; i < space.length; i++) {\r\n                        values[space][i] = vals[chans[i]];\r\n                    }\r\n\r\n                    alpha = vals.alpha;\r\n                }\r\n\r\n                values.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\r\n\r\n                if (space === 'alpha') {\r\n                    return false;\r\n                }\r\n\r\n                var capped;\r\n\r\n                // cap values of the space prior converting all values\r\n                for (i = 0; i < space.length; i++) {\r\n                    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\r\n                    values[space][i] = Math.round(capped);\r\n                }\r\n\r\n                // convert to all the other color spaces\r\n                for (var sname in spaces) {\r\n                    if (sname !== space) {\r\n                        values[sname] = convert[space][sname](values[space]);\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            };\r\n\r\n            Color.prototype.setSpace = function(space, args) {\r\n                var vals = args[0];\r\n\r\n                if (vals === undefined) {\r\n                    // color.rgb()\r\n                    return this.getValues(space);\r\n                }\r\n\r\n                // color.rgb(10, 10, 10)\r\n                if (typeof vals === 'number') {\r\n                    vals = Array.prototype.slice.call(args);\r\n                }\r\n\r\n                this.setValues(space, vals);\r\n                return this;\r\n            };\r\n\r\n            Color.prototype.setChannel = function(space, index, val) {\r\n                var svalues = this.values[space];\r\n                if (val === undefined) {\r\n                    // color.red()\r\n                    return svalues[index];\r\n                } else if (val === svalues[index]) {\r\n                    // color.red(color.red())\r\n                    return this;\r\n                }\r\n\r\n                // color.red(100)\r\n                svalues[index] = val;\r\n                this.setValues(space, svalues);\r\n\r\n                return this;\r\n            };\r\n\r\n            if (typeof window !== 'undefined') {\r\n                window.Color = Color;\r\n            }\r\n\r\n            module.exports = Color;\r\n        }, { \"1\": 1, \"4\": 4 }], 3: [function(require, module, exports) {\r\n            /* MIT license */\r\n\r\n            module.exports = {\r\n                rgb2hsl: rgb2hsl,\r\n                rgb2hsv: rgb2hsv,\r\n                rgb2hwb: rgb2hwb,\r\n                rgb2cmyk: rgb2cmyk,\r\n                rgb2keyword: rgb2keyword,\r\n                rgb2xyz: rgb2xyz,\r\n                rgb2lab: rgb2lab,\r\n                rgb2lch: rgb2lch,\r\n\r\n                hsl2rgb: hsl2rgb,\r\n                hsl2hsv: hsl2hsv,\r\n                hsl2hwb: hsl2hwb,\r\n                hsl2cmyk: hsl2cmyk,\r\n                hsl2keyword: hsl2keyword,\r\n\r\n                hsv2rgb: hsv2rgb,\r\n                hsv2hsl: hsv2hsl,\r\n                hsv2hwb: hsv2hwb,\r\n                hsv2cmyk: hsv2cmyk,\r\n                hsv2keyword: hsv2keyword,\r\n\r\n                hwb2rgb: hwb2rgb,\r\n                hwb2hsl: hwb2hsl,\r\n                hwb2hsv: hwb2hsv,\r\n                hwb2cmyk: hwb2cmyk,\r\n                hwb2keyword: hwb2keyword,\r\n\r\n                cmyk2rgb: cmyk2rgb,\r\n                cmyk2hsl: cmyk2hsl,\r\n                cmyk2hsv: cmyk2hsv,\r\n                cmyk2hwb: cmyk2hwb,\r\n                cmyk2keyword: cmyk2keyword,\r\n\r\n                keyword2rgb: keyword2rgb,\r\n                keyword2hsl: keyword2hsl,\r\n                keyword2hsv: keyword2hsv,\r\n                keyword2hwb: keyword2hwb,\r\n                keyword2cmyk: keyword2cmyk,\r\n                keyword2lab: keyword2lab,\r\n                keyword2xyz: keyword2xyz,\r\n\r\n                xyz2rgb: xyz2rgb,\r\n                xyz2lab: xyz2lab,\r\n                xyz2lch: xyz2lch,\r\n\r\n                lab2xyz: lab2xyz,\r\n                lab2rgb: lab2rgb,\r\n                lab2lch: lab2lch,\r\n\r\n                lch2lab: lch2lab,\r\n                lch2xyz: lch2xyz,\r\n                lch2rgb: lch2rgb\r\n            }\r\n\r\n            function rgb2hsl(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255,\r\n                    min = Math.min(r, g, b),\r\n                    max = Math.max(r, g, b),\r\n                    delta = max - min,\r\n                    h, s, l;\r\n\r\n                if (max == min)\r\n                    h = 0;\r\n                else if (r == max)\r\n                    h = (g - b) / delta;\r\n                else if (g == max)\r\n                    h = 2 + (b - r) / delta;\r\n                else if (b == max)\r\n                    h = 4 + (r - g) / delta;\r\n\r\n                h = Math.min(h * 60, 360);\r\n\r\n                if (h < 0)\r\n                    h += 360;\r\n\r\n                l = (min + max) / 2;\r\n\r\n                if (max == min)\r\n                    s = 0;\r\n                else if (l <= 0.5)\r\n                    s = delta / (max + min);\r\n                else\r\n                    s = delta / (2 - max - min);\r\n\r\n                return [h, s * 100, l * 100];\r\n            }\r\n\r\n            function rgb2hsv(rgb) {\r\n                var r = rgb[0],\r\n                    g = rgb[1],\r\n                    b = rgb[2],\r\n                    min = Math.min(r, g, b),\r\n                    max = Math.max(r, g, b),\r\n                    delta = max - min,\r\n                    h, s, v;\r\n\r\n                if (max == 0)\r\n                    s = 0;\r\n                else\r\n                    s = (delta / max * 1000) / 10;\r\n\r\n                if (max == min)\r\n                    h = 0;\r\n                else if (r == max)\r\n                    h = (g - b) / delta;\r\n                else if (g == max)\r\n                    h = 2 + (b - r) / delta;\r\n                else if (b == max)\r\n                    h = 4 + (r - g) / delta;\r\n\r\n                h = Math.min(h * 60, 360);\r\n\r\n                if (h < 0)\r\n                    h += 360;\r\n\r\n                v = ((max / 255) * 1000) / 10;\r\n\r\n                return [h, s, v];\r\n            }\r\n\r\n            function rgb2hwb(rgb) {\r\n                var r = rgb[0],\r\n                    g = rgb[1],\r\n                    b = rgb[2],\r\n                    h = rgb2hsl(rgb)[0],\r\n                    w = 1 / 255 * Math.min(r, Math.min(g, b)),\r\n                    b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\r\n\r\n                return [h, w * 100, b * 100];\r\n            }\r\n\r\n            function rgb2cmyk(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255,\r\n                    c, m, y, k;\r\n\r\n                k = Math.min(1 - r, 1 - g, 1 - b);\r\n                c = (1 - r - k) / (1 - k) || 0;\r\n                m = (1 - g - k) / (1 - k) || 0;\r\n                y = (1 - b - k) / (1 - k) || 0;\r\n                return [c * 100, m * 100, y * 100, k * 100];\r\n            }\r\n\r\n            function rgb2keyword(rgb) {\r\n                return reverseKeywords[JSON.stringify(rgb)];\r\n            }\r\n\r\n            function rgb2xyz(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255;\r\n\r\n                // assume sRGB\r\n                r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\r\n                g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\r\n                b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\r\n\r\n                var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\r\n                var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\r\n                var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\r\n\r\n                return [x * 100, y * 100, z * 100];\r\n            }\r\n\r\n            function rgb2lab(rgb) {\r\n                var xyz = rgb2xyz(rgb),\r\n                    x = xyz[0],\r\n                    y = xyz[1],\r\n                    z = xyz[2],\r\n                    l, a, b;\r\n\r\n                x /= 95.047;\r\n                y /= 100;\r\n                z /= 108.883;\r\n\r\n                x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\r\n                y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\r\n                z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\r\n\r\n                l = (116 * y) - 16;\r\n                a = 500 * (x - y);\r\n                b = 200 * (y - z);\r\n\r\n                return [l, a, b];\r\n            }\r\n\r\n            function rgb2lch(args) {\r\n                return lab2lch(rgb2lab(args));\r\n            }\r\n\r\n            function hsl2rgb(hsl) {\r\n                var h = hsl[0] / 360,\r\n                    s = hsl[1] / 100,\r\n                    l = hsl[2] / 100,\r\n                    t1, t2, t3, rgb, val;\r\n\r\n                if (s == 0) {\r\n                    val = l * 255;\r\n                    return [val, val, val];\r\n                }\r\n\r\n                if (l < 0.5)\r\n                    t2 = l * (1 + s);\r\n                else\r\n                    t2 = l + s - l * s;\r\n                t1 = 2 * l - t2;\r\n\r\n                rgb = [0, 0, 0];\r\n                for (var i = 0; i < 3; i++) {\r\n                    t3 = h + 1 / 3 * - (i - 1);\r\n                    t3 < 0 && t3++;\r\n                    t3 > 1 && t3--;\r\n\r\n                    if (6 * t3 < 1)\r\n                        val = t1 + (t2 - t1) * 6 * t3;\r\n                    else if (2 * t3 < 1)\r\n                        val = t2;\r\n                    else if (3 * t3 < 2)\r\n                        val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\r\n                    else\r\n                        val = t1;\r\n\r\n                    rgb[i] = val * 255;\r\n                }\r\n\r\n                return rgb;\r\n            }\r\n\r\n            function hsl2hsv(hsl) {\r\n                var h = hsl[0],\r\n                    s = hsl[1] / 100,\r\n                    l = hsl[2] / 100,\r\n                    sv, v;\r\n\r\n                if (l === 0) {\r\n                    // no need to do calc on black\r\n                    // also avoids divide by 0 error\r\n                    return [0, 0, 0];\r\n                }\r\n\r\n                l *= 2;\r\n                s *= (l <= 1) ? l : 2 - l;\r\n                v = (l + s) / 2;\r\n                sv = (2 * s) / (l + s);\r\n                return [h, sv * 100, v * 100];\r\n            }\r\n\r\n            function hsl2hwb(args) {\r\n                return rgb2hwb(hsl2rgb(args));\r\n            }\r\n\r\n            function hsl2cmyk(args) {\r\n                return rgb2cmyk(hsl2rgb(args));\r\n            }\r\n\r\n            function hsl2keyword(args) {\r\n                return rgb2keyword(hsl2rgb(args));\r\n            }\r\n\r\n            function hsv2rgb(hsv) {\r\n                var h = hsv[0] / 60,\r\n                    s = hsv[1] / 100,\r\n                    v = hsv[2] / 100,\r\n                    hi = Math.floor(h) % 6;\r\n\r\n                var f = h - Math.floor(h),\r\n                    p = 255 * v * (1 - s),\r\n                    q = 255 * v * (1 - (s * f)),\r\n                    t = 255 * v * (1 - (s * (1 - f))),\r\n                    v = 255 * v;\r\n\r\n                switch (hi) {\r\n                    case 0:\r\n                        return [v, t, p];\r\n                    case 1:\r\n                        return [q, v, p];\r\n                    case 2:\r\n                        return [p, v, t];\r\n                    case 3:\r\n                        return [p, q, v];\r\n                    case 4:\r\n                        return [t, p, v];\r\n                    case 5:\r\n                        return [v, p, q];\r\n                }\r\n            }\r\n\r\n            function hsv2hsl(hsv) {\r\n                var h = hsv[0],\r\n                    s = hsv[1] / 100,\r\n                    v = hsv[2] / 100,\r\n                    sl, l;\r\n\r\n                l = (2 - s) * v;\r\n                sl = s * v;\r\n                sl /= (l <= 1) ? l : 2 - l;\r\n                sl = sl || 0;\r\n                l /= 2;\r\n                return [h, sl * 100, l * 100];\r\n            }\r\n\r\n            function hsv2hwb(args) {\r\n                return rgb2hwb(hsv2rgb(args))\r\n            }\r\n\r\n            function hsv2cmyk(args) {\r\n                return rgb2cmyk(hsv2rgb(args));\r\n            }\r\n\r\n            function hsv2keyword(args) {\r\n                return rgb2keyword(hsv2rgb(args));\r\n            }\r\n\r\n            // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\r\n            function hwb2rgb(hwb) {\r\n                var h = hwb[0] / 360,\r\n                    wh = hwb[1] / 100,\r\n                    bl = hwb[2] / 100,\r\n                    ratio = wh + bl,\r\n                    i, v, f, n;\r\n\r\n                // wh + bl cant be > 1\r\n                if (ratio > 1) {\r\n                    wh /= ratio;\r\n                    bl /= ratio;\r\n                }\r\n\r\n                i = Math.floor(6 * h);\r\n                v = 1 - bl;\r\n                f = 6 * h - i;\r\n                if ((i & 0x01) != 0) {\r\n                    f = 1 - f;\r\n                }\r\n                n = wh + f * (v - wh);  // linear interpolation\r\n\r\n                switch (i) {\r\n                    default:\r\n                    case 6:\r\n                    case 0: r = v; g = n; b = wh; break;\r\n                    case 1: r = n; g = v; b = wh; break;\r\n                    case 2: r = wh; g = v; b = n; break;\r\n                    case 3: r = wh; g = n; b = v; break;\r\n                    case 4: r = n; g = wh; b = v; break;\r\n                    case 5: r = v; g = wh; b = n; break;\r\n                }\r\n\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function hwb2hsl(args) {\r\n                return rgb2hsl(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2hsv(args) {\r\n                return rgb2hsv(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2cmyk(args) {\r\n                return rgb2cmyk(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2keyword(args) {\r\n                return rgb2keyword(hwb2rgb(args));\r\n            }\r\n\r\n            function cmyk2rgb(cmyk) {\r\n                var c = cmyk[0] / 100,\r\n                    m = cmyk[1] / 100,\r\n                    y = cmyk[2] / 100,\r\n                    k = cmyk[3] / 100,\r\n                    r, g, b;\r\n\r\n                r = 1 - Math.min(1, c * (1 - k) + k);\r\n                g = 1 - Math.min(1, m * (1 - k) + k);\r\n                b = 1 - Math.min(1, y * (1 - k) + k);\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function cmyk2hsl(args) {\r\n                return rgb2hsl(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2hsv(args) {\r\n                return rgb2hsv(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2hwb(args) {\r\n                return rgb2hwb(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2keyword(args) {\r\n                return rgb2keyword(cmyk2rgb(args));\r\n            }\r\n\r\n            function xyz2rgb(xyz) {\r\n                var x = xyz[0] / 100,\r\n                    y = xyz[1] / 100,\r\n                    z = xyz[2] / 100,\r\n                    r, g, b;\r\n\r\n                r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\r\n                g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\r\n                b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\r\n\r\n                // assume sRGB\r\n                r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\r\n                    : r = (r * 12.92);\r\n\r\n                g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\r\n                    : g = (g * 12.92);\r\n\r\n                b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\r\n                    : b = (b * 12.92);\r\n\r\n                r = Math.min(Math.max(0, r), 1);\r\n                g = Math.min(Math.max(0, g), 1);\r\n                b = Math.min(Math.max(0, b), 1);\r\n\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function xyz2lab(xyz) {\r\n                var x = xyz[0],\r\n                    y = xyz[1],\r\n                    z = xyz[2],\r\n                    l, a, b;\r\n\r\n                x /= 95.047;\r\n                y /= 100;\r\n                z /= 108.883;\r\n\r\n                x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\r\n                y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\r\n                z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\r\n\r\n                l = (116 * y) - 16;\r\n                a = 500 * (x - y);\r\n                b = 200 * (y - z);\r\n\r\n                return [l, a, b];\r\n            }\r\n\r\n            function xyz2lch(args) {\r\n                return lab2lch(xyz2lab(args));\r\n            }\r\n\r\n            function lab2xyz(lab) {\r\n                var l = lab[0],\r\n                    a = lab[1],\r\n                    b = lab[2],\r\n                    x, y, z, y2;\r\n\r\n                if (l <= 8) {\r\n                    y = (l * 100) / 903.3;\r\n                    y2 = (7.787 * (y / 100)) + (16 / 116);\r\n                } else {\r\n                    y = 100 * Math.pow((l + 16) / 116, 3);\r\n                    y2 = Math.pow(y / 100, 1 / 3);\r\n                }\r\n\r\n                x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\r\n\r\n                z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\r\n\r\n                return [x, y, z];\r\n            }\r\n\r\n            function lab2lch(lab) {\r\n                var l = lab[0],\r\n                    a = lab[1],\r\n                    b = lab[2],\r\n                    hr, h, c;\r\n\r\n                hr = Math.atan2(b, a);\r\n                h = hr * 360 / 2 / Math.PI;\r\n                if (h < 0) {\r\n                    h += 360;\r\n                }\r\n                c = Math.sqrt(a * a + b * b);\r\n                return [l, c, h];\r\n            }\r\n\r\n            function lab2rgb(args) {\r\n                return xyz2rgb(lab2xyz(args));\r\n            }\r\n\r\n            function lch2lab(lch) {\r\n                var l = lch[0],\r\n                    c = lch[1],\r\n                    h = lch[2],\r\n                    a, b, hr;\r\n\r\n                hr = h / 360 * 2 * Math.PI;\r\n                a = c * Math.cos(hr);\r\n                b = c * Math.sin(hr);\r\n                return [l, a, b];\r\n            }\r\n\r\n            function lch2xyz(args) {\r\n                return lab2xyz(lch2lab(args));\r\n            }\r\n\r\n            function lch2rgb(args) {\r\n                return lab2rgb(lch2lab(args));\r\n            }\r\n\r\n            function keyword2rgb(keyword) {\r\n                return cssKeywords[keyword];\r\n            }\r\n\r\n            function keyword2hsl(args) {\r\n                return rgb2hsl(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2hsv(args) {\r\n                return rgb2hsv(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2hwb(args) {\r\n                return rgb2hwb(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2cmyk(args) {\r\n                return rgb2cmyk(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2lab(args) {\r\n                return rgb2lab(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2xyz(args) {\r\n                return rgb2xyz(keyword2rgb(args));\r\n            }\r\n\r\n            var cssKeywords = {\r\n                aliceblue: [240, 248, 255],\r\n                antiquewhite: [250, 235, 215],\r\n                aqua: [0, 255, 255],\r\n                aquamarine: [127, 255, 212],\r\n                azure: [240, 255, 255],\r\n                beige: [245, 245, 220],\r\n                bisque: [255, 228, 196],\r\n                black: [0, 0, 0],\r\n                blanchedalmond: [255, 235, 205],\r\n                blue: [0, 0, 255],\r\n                blueviolet: [138, 43, 226],\r\n                brown: [165, 42, 42],\r\n                burlywood: [222, 184, 135],\r\n                cadetblue: [95, 158, 160],\r\n                chartreuse: [127, 255, 0],\r\n                chocolate: [210, 105, 30],\r\n                coral: [255, 127, 80],\r\n                cornflowerblue: [100, 149, 237],\r\n                cornsilk: [255, 248, 220],\r\n                crimson: [220, 20, 60],\r\n                cyan: [0, 255, 255],\r\n                darkblue: [0, 0, 139],\r\n                darkcyan: [0, 139, 139],\r\n                darkgoldenrod: [184, 134, 11],\r\n                darkgray: [169, 169, 169],\r\n                darkgreen: [0, 100, 0],\r\n                darkgrey: [169, 169, 169],\r\n                darkkhaki: [189, 183, 107],\r\n                darkmagenta: [139, 0, 139],\r\n                darkolivegreen: [85, 107, 47],\r\n                darkorange: [255, 140, 0],\r\n                darkorchid: [153, 50, 204],\r\n                darkred: [139, 0, 0],\r\n                darksalmon: [233, 150, 122],\r\n                darkseagreen: [143, 188, 143],\r\n                darkslateblue: [72, 61, 139],\r\n                darkslategray: [47, 79, 79],\r\n                darkslategrey: [47, 79, 79],\r\n                darkturquoise: [0, 206, 209],\r\n                darkviolet: [148, 0, 211],\r\n                deeppink: [255, 20, 147],\r\n                deepskyblue: [0, 191, 255],\r\n                dimgray: [105, 105, 105],\r\n                dimgrey: [105, 105, 105],\r\n                dodgerblue: [30, 144, 255],\r\n                firebrick: [178, 34, 34],\r\n                floralwhite: [255, 250, 240],\r\n                forestgreen: [34, 139, 34],\r\n                fuchsia: [255, 0, 255],\r\n                gainsboro: [220, 220, 220],\r\n                ghostwhite: [248, 248, 255],\r\n                gold: [255, 215, 0],\r\n                goldenrod: [218, 165, 32],\r\n                gray: [128, 128, 128],\r\n                green: [0, 128, 0],\r\n                greenyellow: [173, 255, 47],\r\n                grey: [128, 128, 128],\r\n                honeydew: [240, 255, 240],\r\n                hotpink: [255, 105, 180],\r\n                indianred: [205, 92, 92],\r\n                indigo: [75, 0, 130],\r\n                ivory: [255, 255, 240],\r\n                khaki: [240, 230, 140],\r\n                lavender: [230, 230, 250],\r\n                lavenderblush: [255, 240, 245],\r\n                lawngreen: [124, 252, 0],\r\n                lemonchiffon: [255, 250, 205],\r\n                lightblue: [173, 216, 230],\r\n                lightcoral: [240, 128, 128],\r\n                lightcyan: [224, 255, 255],\r\n                lightgoldenrodyellow: [250, 250, 210],\r\n                lightgray: [211, 211, 211],\r\n                lightgreen: [144, 238, 144],\r\n                lightgrey: [211, 211, 211],\r\n                lightpink: [255, 182, 193],\r\n                lightsalmon: [255, 160, 122],\r\n                lightseagreen: [32, 178, 170],\r\n                lightskyblue: [135, 206, 250],\r\n                lightslategray: [119, 136, 153],\r\n                lightslategrey: [119, 136, 153],\r\n                lightsteelblue: [176, 196, 222],\r\n                lightyellow: [255, 255, 224],\r\n                lime: [0, 255, 0],\r\n                limegreen: [50, 205, 50],\r\n                linen: [250, 240, 230],\r\n                magenta: [255, 0, 255],\r\n                maroon: [128, 0, 0],\r\n                mediumaquamarine: [102, 205, 170],\r\n                mediumblue: [0, 0, 205],\r\n                mediumorchid: [186, 85, 211],\r\n                mediumpurple: [147, 112, 219],\r\n                mediumseagreen: [60, 179, 113],\r\n                mediumslateblue: [123, 104, 238],\r\n                mediumspringgreen: [0, 250, 154],\r\n                mediumturquoise: [72, 209, 204],\r\n                mediumvioletred: [199, 21, 133],\r\n                midnightblue: [25, 25, 112],\r\n                mintcream: [245, 255, 250],\r\n                mistyrose: [255, 228, 225],\r\n                moccasin: [255, 228, 181],\r\n                navajowhite: [255, 222, 173],\r\n                navy: [0, 0, 128],\r\n                oldlace: [253, 245, 230],\r\n                olive: [128, 128, 0],\r\n                olivedrab: [107, 142, 35],\r\n                orange: [255, 165, 0],\r\n                orangered: [255, 69, 0],\r\n                orchid: [218, 112, 214],\r\n                palegoldenrod: [238, 232, 170],\r\n                palegreen: [152, 251, 152],\r\n                paleturquoise: [175, 238, 238],\r\n                palevioletred: [219, 112, 147],\r\n                papayawhip: [255, 239, 213],\r\n                peachpuff: [255, 218, 185],\r\n                peru: [205, 133, 63],\r\n                pink: [255, 192, 203],\r\n                plum: [221, 160, 221],\r\n                powderblue: [176, 224, 230],\r\n                purple: [128, 0, 128],\r\n                rebeccapurple: [102, 51, 153],\r\n                red: [255, 0, 0],\r\n                rosybrown: [188, 143, 143],\r\n                royalblue: [65, 105, 225],\r\n                saddlebrown: [139, 69, 19],\r\n                salmon: [250, 128, 114],\r\n                sandybrown: [244, 164, 96],\r\n                seagreen: [46, 139, 87],\r\n                seashell: [255, 245, 238],\r\n                sienna: [160, 82, 45],\r\n                silver: [192, 192, 192],\r\n                skyblue: [135, 206, 235],\r\n                slateblue: [106, 90, 205],\r\n                slategray: [112, 128, 144],\r\n                slategrey: [112, 128, 144],\r\n                snow: [255, 250, 250],\r\n                springgreen: [0, 255, 127],\r\n                steelblue: [70, 130, 180],\r\n                tan: [210, 180, 140],\r\n                teal: [0, 128, 128],\r\n                thistle: [216, 191, 216],\r\n                tomato: [255, 99, 71],\r\n                turquoise: [64, 224, 208],\r\n                violet: [238, 130, 238],\r\n                wheat: [245, 222, 179],\r\n                white: [255, 255, 255],\r\n                whitesmoke: [245, 245, 245],\r\n                yellow: [255, 255, 0],\r\n                yellowgreen: [154, 205, 50]\r\n            };\r\n\r\n            var reverseKeywords = {};\r\n            for (var key in cssKeywords) {\r\n                reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\r\n            }\r\n        }, {}], 4: [function(require, module, exports) {\r\n            var conversions = require(3);\r\n\r\n            var convert = function() {\r\n                return new Converter();\r\n            }\r\n\r\n            for (var func in conversions) {\r\n                // export Raw versions\r\n                convert[func + \"Raw\"] = (function(func) {\r\n                    // accept array or plain args\r\n                    return function(arg) {\r\n                        if (typeof arg == \"number\")\r\n                            arg = Array.prototype.slice.call(arguments);\r\n                        return conversions[func](arg);\r\n                    }\r\n                })(func);\r\n\r\n                var pair = /(\\w+)2(\\w+)/.exec(func),\r\n                    from = pair[1],\r\n                    to = pair[2];\r\n\r\n                // export rgb2hsl and [\"rgb\"][\"hsl\"]\r\n                convert[from] = convert[from] || {};\r\n\r\n                convert[from][to] = convert[func] = (function(func) {\r\n                    return function(arg) {\r\n                        if (typeof arg == \"number\")\r\n                            arg = Array.prototype.slice.call(arguments);\r\n\r\n                        var val = conversions[func](arg);\r\n                        if (typeof val == \"string\" || val === undefined)\r\n                            return val; // keyword\r\n\r\n                        for (var i = 0; i < val.length; i++)\r\n                            val[i] = Math.round(val[i]);\r\n                        return val;\r\n                    }\r\n                })(func);\r\n            }\r\n\r\n            /* Converter does lazy conversion and caching */\r\n            var Converter = function() {\r\n                this.convs = {};\r\n            };\r\n\r\n            /* Either get the values for a space or\r\n              set the values for a space, depending on args */\r\n            Converter.prototype.routeSpace = function(space, args) {\r\n                var values = args[0];\r\n                if (values === undefined) {\r\n                    // color.rgb()\r\n                    return this.getValues(space);\r\n                }\r\n                // color.rgb(10, 10, 10)\r\n                if (typeof values == \"number\") {\r\n                    values = Array.prototype.slice.call(args);\r\n                }\r\n\r\n                return this.setValues(space, values);\r\n            };\r\n\r\n            /* Set the values for a space, invalidating cache */\r\n            Converter.prototype.setValues = function(space, values) {\r\n                this.space = space;\r\n                this.convs = {};\r\n                this.convs[space] = values;\r\n                return this;\r\n            };\r\n\r\n            /* Get the values for a space. If there's already\r\n              a conversion for the space, fetch it, otherwise\r\n              compute it */\r\n            Converter.prototype.getValues = function(space) {\r\n                var vals = this.convs[space];\r\n                if (!vals) {\r\n                    var fspace = this.space,\r\n                        from = this.convs[fspace];\r\n                    vals = convert[fspace][space](from);\r\n\r\n                    this.convs[space] = vals;\r\n                }\r\n                return vals;\r\n            };\r\n\r\n            [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\r\n                Converter.prototype[space] = function(vals) {\r\n                    return this.routeSpace(space, arguments);\r\n                }\r\n            });\r\n\r\n            module.exports = convert;\r\n        }, { \"3\": 3 }], 5: [function(require, module, exports) {\r\n            'use strict'\r\n\r\n            module.exports = {\r\n                \"aliceblue\": [240, 248, 255],\r\n                \"antiquewhite\": [250, 235, 215],\r\n                \"aqua\": [0, 255, 255],\r\n                \"aquamarine\": [127, 255, 212],\r\n                \"azure\": [240, 255, 255],\r\n                \"beige\": [245, 245, 220],\r\n                \"bisque\": [255, 228, 196],\r\n                \"black\": [0, 0, 0],\r\n                \"blanchedalmond\": [255, 235, 205],\r\n                \"blue\": [0, 0, 255],\r\n                \"blueviolet\": [138, 43, 226],\r\n                \"brown\": [165, 42, 42],\r\n                \"burlywood\": [222, 184, 135],\r\n                \"cadetblue\": [95, 158, 160],\r\n                \"chartreuse\": [127, 255, 0],\r\n                \"chocolate\": [210, 105, 30],\r\n                \"coral\": [255, 127, 80],\r\n                \"cornflowerblue\": [100, 149, 237],\r\n                \"cornsilk\": [255, 248, 220],\r\n                \"crimson\": [220, 20, 60],\r\n                \"cyan\": [0, 255, 255],\r\n                \"darkblue\": [0, 0, 139],\r\n                \"darkcyan\": [0, 139, 139],\r\n                \"darkgoldenrod\": [184, 134, 11],\r\n                \"darkgray\": [169, 169, 169],\r\n                \"darkgreen\": [0, 100, 0],\r\n                \"darkgrey\": [169, 169, 169],\r\n                \"darkkhaki\": [189, 183, 107],\r\n                \"darkmagenta\": [139, 0, 139],\r\n                \"darkolivegreen\": [85, 107, 47],\r\n                \"darkorange\": [255, 140, 0],\r\n                \"darkorchid\": [153, 50, 204],\r\n                \"darkred\": [139, 0, 0],\r\n                \"darksalmon\": [233, 150, 122],\r\n                \"darkseagreen\": [143, 188, 143],\r\n                \"darkslateblue\": [72, 61, 139],\r\n                \"darkslategray\": [47, 79, 79],\r\n                \"darkslategrey\": [47, 79, 79],\r\n                \"darkturquoise\": [0, 206, 209],\r\n                \"darkviolet\": [148, 0, 211],\r\n                \"deeppink\": [255, 20, 147],\r\n                \"deepskyblue\": [0, 191, 255],\r\n                \"dimgray\": [105, 105, 105],\r\n                \"dimgrey\": [105, 105, 105],\r\n                \"dodgerblue\": [30, 144, 255],\r\n                \"firebrick\": [178, 34, 34],\r\n                \"floralwhite\": [255, 250, 240],\r\n                \"forestgreen\": [34, 139, 34],\r\n                \"fuchsia\": [255, 0, 255],\r\n                \"gainsboro\": [220, 220, 220],\r\n                \"ghostwhite\": [248, 248, 255],\r\n                \"gold\": [255, 215, 0],\r\n                \"goldenrod\": [218, 165, 32],\r\n                \"gray\": [128, 128, 128],\r\n                \"green\": [0, 128, 0],\r\n                \"greenyellow\": [173, 255, 47],\r\n                \"grey\": [128, 128, 128],\r\n                \"honeydew\": [240, 255, 240],\r\n                \"hotpink\": [255, 105, 180],\r\n                \"indianred\": [205, 92, 92],\r\n                \"indigo\": [75, 0, 130],\r\n                \"ivory\": [255, 255, 240],\r\n                \"khaki\": [240, 230, 140],\r\n                \"lavender\": [230, 230, 250],\r\n                \"lavenderblush\": [255, 240, 245],\r\n                \"lawngreen\": [124, 252, 0],\r\n                \"lemonchiffon\": [255, 250, 205],\r\n                \"lightblue\": [173, 216, 230],\r\n                \"lightcoral\": [240, 128, 128],\r\n                \"lightcyan\": [224, 255, 255],\r\n                \"lightgoldenrodyellow\": [250, 250, 210],\r\n                \"lightgray\": [211, 211, 211],\r\n                \"lightgreen\": [144, 238, 144],\r\n                \"lightgrey\": [211, 211, 211],\r\n                \"lightpink\": [255, 182, 193],\r\n                \"lightsalmon\": [255, 160, 122],\r\n                \"lightseagreen\": [32, 178, 170],\r\n                \"lightskyblue\": [135, 206, 250],\r\n                \"lightslategray\": [119, 136, 153],\r\n                \"lightslategrey\": [119, 136, 153],\r\n                \"lightsteelblue\": [176, 196, 222],\r\n                \"lightyellow\": [255, 255, 224],\r\n                \"lime\": [0, 255, 0],\r\n                \"limegreen\": [50, 205, 50],\r\n                \"linen\": [250, 240, 230],\r\n                \"magenta\": [255, 0, 255],\r\n                \"maroon\": [128, 0, 0],\r\n                \"mediumaquamarine\": [102, 205, 170],\r\n                \"mediumblue\": [0, 0, 205],\r\n                \"mediumorchid\": [186, 85, 211],\r\n                \"mediumpurple\": [147, 112, 219],\r\n                \"mediumseagreen\": [60, 179, 113],\r\n                \"mediumslateblue\": [123, 104, 238],\r\n                \"mediumspringgreen\": [0, 250, 154],\r\n                \"mediumturquoise\": [72, 209, 204],\r\n                \"mediumvioletred\": [199, 21, 133],\r\n                \"midnightblue\": [25, 25, 112],\r\n                \"mintcream\": [245, 255, 250],\r\n                \"mistyrose\": [255, 228, 225],\r\n                \"moccasin\": [255, 228, 181],\r\n                \"navajowhite\": [255, 222, 173],\r\n                \"navy\": [0, 0, 128],\r\n                \"oldlace\": [253, 245, 230],\r\n                \"olive\": [128, 128, 0],\r\n                \"olivedrab\": [107, 142, 35],\r\n                \"orange\": [255, 165, 0],\r\n                \"orangered\": [255, 69, 0],\r\n                \"orchid\": [218, 112, 214],\r\n                \"palegoldenrod\": [238, 232, 170],\r\n                \"palegreen\": [152, 251, 152],\r\n                \"paleturquoise\": [175, 238, 238],\r\n                \"palevioletred\": [219, 112, 147],\r\n                \"papayawhip\": [255, 239, 213],\r\n                \"peachpuff\": [255, 218, 185],\r\n                \"peru\": [205, 133, 63],\r\n                \"pink\": [255, 192, 203],\r\n                \"plum\": [221, 160, 221],\r\n                \"powderblue\": [176, 224, 230],\r\n                \"purple\": [128, 0, 128],\r\n                \"rebeccapurple\": [102, 51, 153],\r\n                \"red\": [255, 0, 0],\r\n                \"rosybrown\": [188, 143, 143],\r\n                \"royalblue\": [65, 105, 225],\r\n                \"saddlebrown\": [139, 69, 19],\r\n                \"salmon\": [250, 128, 114],\r\n                \"sandybrown\": [244, 164, 96],\r\n                \"seagreen\": [46, 139, 87],\r\n                \"seashell\": [255, 245, 238],\r\n                \"sienna\": [160, 82, 45],\r\n                \"silver\": [192, 192, 192],\r\n                \"skyblue\": [135, 206, 235],\r\n                \"slateblue\": [106, 90, 205],\r\n                \"slategray\": [112, 128, 144],\r\n                \"slategrey\": [112, 128, 144],\r\n                \"snow\": [255, 250, 250],\r\n                \"springgreen\": [0, 255, 127],\r\n                \"steelblue\": [70, 130, 180],\r\n                \"tan\": [210, 180, 140],\r\n                \"teal\": [0, 128, 128],\r\n                \"thistle\": [216, 191, 216],\r\n                \"tomato\": [255, 99, 71],\r\n                \"turquoise\": [64, 224, 208],\r\n                \"violet\": [238, 130, 238],\r\n                \"wheat\": [245, 222, 179],\r\n                \"white\": [255, 255, 255],\r\n                \"whitesmoke\": [245, 245, 245],\r\n                \"yellow\": [255, 255, 0],\r\n                \"yellowgreen\": [154, 205, 50]\r\n            };\r\n        }, {}], 6: [function(require, module, exports) {\r\n            /**\r\n             * @namespace Chart\r\n             */\r\n            var Chart = require(20)();\r\n\r\n            Chart.helpers = require(36);\r\n\r\n            // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\r\n            require(18)(Chart);\r\n\r\n            Chart.defaults = require(16);\r\n            Chart.Element = require(17);\r\n            Chart.elements = require(31);\r\n            Chart.Interaction = require(19);\r\n            Chart.layouts = require(21);\r\n            Chart.platform = require(39);\r\n            Chart.plugins = require(22);\r\n            Chart.Ticks = require(25);\r\n\r\n            require(13)(Chart);\r\n            require(14)(Chart);\r\n            require(15)(Chart);\r\n            require(24)(Chart);\r\n            require(23)(Chart);\r\n            require(26)(Chart);\r\n\r\n            require(46)(Chart);\r\n            require(44)(Chart);\r\n            require(45)(Chart);\r\n            // require('./scales/scale.logarithmic')(Chart);\r\n            // require('./scales/scale.radialLinear')(Chart);\r\n            // require('./scales/scale.time')(Chart);\r\n\r\n            // Controllers must be loaded after elements\r\n            // See Chart.core.datasetController.dataElementType\r\n            require(10)(Chart);\r\n            // require('./controllers/controller.bubble')(Chart);\r\n            require(11)(Chart);\r\n            require(12)(Chart);\r\n            // require('./controllers/controller.polarArea')(Chart);\r\n            // require('./controllers/controller.radar')(Chart);\r\n            // require('./controllers/controller.scatter')(Chart);\r\n\r\n            require(7)(Chart);\r\n            // require('./charts/Chart.Bubble')(Chart);\r\n            require(8)(Chart);\r\n            require(9)(Chart);\r\n            // require('./charts/Chart.PolarArea')(Chart);\r\n            // require('./charts/Chart.Radar')(Chart);\r\n            // require('./charts/Chart.Scatter')(Chart);\r\n\r\n            // Loading built-it plugins\r\n            var plugins = require(40);\r\n            for (var k in plugins) {\r\n                if (plugins.hasOwnProperty(k)) {\r\n                    Chart.plugins.register(plugins[k]);\r\n                }\r\n            }\r\n\r\n            Chart.platform.initialize();\r\n\r\n            module.exports = Chart;\r\n            if (typeof window !== 'undefined') {\r\n                window.Chart = Chart;\r\n            }\r\n        }, { \"10\": 10, \"11\": 11, \"12\": 12, \"13\": 13, \"14\": 14, \"15\": 15, \"16\": 16, \"17\": 17, \"18\": 18, \"19\": 19, \"20\": 20, \"21\": 21, \"22\": 22, \"23\": 23, \"24\": 24, \"25\": 25, \"26\": 26, \"31\": 31, \"36\": 36, \"39\": 39, \"40\": 40, \"44\": 44, \"45\": 45, \"46\": 46, \"7\": 7, \"8\": 8, \"9\": 9 }], 7: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Bar = function(context, config) {\r\n                    config.type = 'bar';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 8: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Doughnut = function(context, config) {\r\n                    config.type = 'doughnut';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 9: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Line = function(context, config) {\r\n                    config.type = 'line';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 10: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('bar', {\r\n                hover: {\r\n                    mode: 'label'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'category',\r\n\r\n                        // Specific to Bar Controller\r\n                        categoryPercentage: 0.8,\r\n                        barPercentage: 0.9,\r\n\r\n                        // offset settings\r\n                        offset: true,\r\n\r\n                        // grid line settings\r\n                        gridLines: {\r\n                            offsetGridLines: true\r\n                        }\r\n                    }],\r\n\r\n                    yAxes: [{\r\n                        type: 'linear'\r\n                    }]\r\n                }\r\n            });\r\n\r\n            defaults._set('horizontalBar', {\r\n                hover: {\r\n                    mode: 'index',\r\n                    axis: 'y'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'linear',\r\n                        position: 'bottom'\r\n                    }],\r\n\r\n                    yAxes: [{\r\n                        position: 'left',\r\n                        type: 'category',\r\n\r\n                        // Specific to Horizontal Bar Controller\r\n                        categoryPercentage: 0.8,\r\n                        barPercentage: 0.9,\r\n\r\n                        // offset settings\r\n                        offset: true,\r\n\r\n                        // grid line settings\r\n                        gridLines: {\r\n                            offsetGridLines: true\r\n                        }\r\n                    }]\r\n                },\r\n\r\n                elements: {\r\n                    rectangle: {\r\n                        borderSkipped: 'left'\r\n                    }\r\n                },\r\n\r\n                tooltips: {\r\n                    callbacks: {\r\n                        title: function(item, data) {\r\n                            // Pick first xLabel for now\r\n                            var title = '';\r\n\r\n                            if (item.length > 0) {\r\n                                if (item[0].yLabel) {\r\n                                    title = item[0].yLabel;\r\n                                } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\r\n                                    title = data.labels[item[0].index];\r\n                                }\r\n                            }\r\n\r\n                            return title;\r\n                        },\r\n\r\n                        label: function(item, data) {\r\n                            var datasetLabel = data.datasets[item.datasetIndex].label || '';\r\n                            return datasetLabel + ': ' + item.xLabel;\r\n                        }\r\n                    },\r\n                    mode: 'index',\r\n                    axis: 'y'\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\r\n             * @private\r\n             */\r\n            function computeMinSampleSize(scale, pixels) {\r\n                var min = scale.isHorizontal() ? scale.width : scale.height;\r\n                var ticks = scale.getTicks();\r\n                var prev, curr, i, ilen;\r\n\r\n                for (i = 1, ilen = pixels.length; i < ilen; ++i) {\r\n                    min = Math.min(min, pixels[i] - pixels[i - 1]);\r\n                }\r\n\r\n                for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n                    curr = scale.getPixelForTick(i);\r\n                    min = i > 0 ? Math.min(min, curr - prev) : min;\r\n                    prev = curr;\r\n                }\r\n\r\n                return min;\r\n            }\r\n\r\n            /**\r\n             * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\r\n             * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\r\n             * mode currently always generates bars equally sized (until we introduce scriptable options?).\r\n             * @private\r\n             */\r\n            function computeFitCategoryTraits(index, ruler, options) {\r\n                var thickness = options.barThickness;\r\n                var count = ruler.stackCount;\r\n                var curr = ruler.pixels[index];\r\n                var size, ratio;\r\n\r\n                if (helpers.isNullOrUndef(thickness)) {\r\n                    size = ruler.min * options.categoryPercentage;\r\n                    ratio = options.barPercentage;\r\n                } else {\r\n                    // When bar thickness is enforced, category and bar percentages are ignored.\r\n                    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\r\n                    // and deprecate barPercentage since this value is ignored when thickness is absolute.\r\n                    size = thickness * count;\r\n                    ratio = 1;\r\n                }\r\n\r\n                return {\r\n                    chunk: size / count,\r\n                    ratio: ratio,\r\n                    start: curr - (size / 2)\r\n                };\r\n            }\r\n\r\n            /**\r\n             * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\r\n             * percentage options are 1), based on the previous and following categories. This mode\r\n             * generates bars with different widths when data are not evenly spaced.\r\n             * @private\r\n             */\r\n            function computeFlexCategoryTraits(index, ruler, options) {\r\n                var pixels = ruler.pixels;\r\n                var curr = pixels[index];\r\n                var prev = index > 0 ? pixels[index - 1] : null;\r\n                var next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n                var percent = options.categoryPercentage;\r\n                var start, size;\r\n\r\n                if (prev === null) {\r\n                    // first data: its size is double based on the next point or,\r\n                    // if it's also the last data, we use the scale end extremity.\r\n                    prev = curr - (next === null ? ruler.end - curr : next - curr);\r\n                }\r\n\r\n                if (next === null) {\r\n                    // last data: its size is also double based on the previous point.\r\n                    next = curr + curr - prev;\r\n                }\r\n\r\n                start = curr - ((curr - prev) / 2) * percent;\r\n                size = ((next - prev) / 2) * percent;\r\n\r\n                return {\r\n                    chunk: size / ruler.stackCount,\r\n                    ratio: options.barPercentage,\r\n                    start: start\r\n                };\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.controllers.bar = Chart.DatasetController.extend({\r\n                    dataElementType: elements.Rectangle,\r\n\r\n                    initialize: function() {\r\n                        var me = this;\r\n                        var meta;\r\n\r\n                        Chart.DatasetController.prototype.initialize.apply(me, arguments);\r\n\r\n                        meta = me.getMeta();\r\n                        meta.stack = me.getDataset().stack;\r\n                        meta.bar = true;\r\n                    },\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var rects = me.getMeta().data;\r\n                        var i, ilen;\r\n\r\n                        me._ruler = me.getRuler();\r\n\r\n                        for (i = 0, ilen = rects.length; i < ilen; ++i) {\r\n                            me.updateElement(rects[i], i, reset);\r\n                        }\r\n                    },\r\n\r\n                    updateElement: function(rectangle, index, reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var dataset = me.getDataset();\r\n                        var custom = rectangle.custom || {};\r\n                        var rectangleOptions = chart.options.elements.rectangle;\r\n\r\n                        rectangle._xScale = me.getScaleForId(meta.xAxisID);\r\n                        rectangle._yScale = me.getScaleForId(meta.yAxisID);\r\n                        rectangle._datasetIndex = me.index;\r\n                        rectangle._index = index;\r\n\r\n                        rectangle._model = {\r\n                            datasetLabel: dataset.label,\r\n                            label: chart.data.labels[index],\r\n                            borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\r\n                            backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\r\n                            borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\r\n                            borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\r\n                        };\r\n\r\n                        me.updateElementGeometry(rectangle, index, reset);\r\n\r\n                        rectangle.pivot();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    updateElementGeometry: function(rectangle, index, reset) {\r\n                        var me = this;\r\n                        var model = rectangle._model;\r\n                        var vscale = me.getValueScale();\r\n                        var base = vscale.getBasePixel();\r\n                        var horizontal = vscale.isHorizontal();\r\n                        var ruler = me._ruler || me.getRuler();\r\n                        var vpixels = me.calculateBarValuePixels(me.index, index);\r\n                        var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\r\n\r\n                        model.horizontal = horizontal;\r\n                        model.base = reset ? base : vpixels.base;\r\n                        model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\r\n                        model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\r\n                        model.height = horizontal ? ipixels.size : undefined;\r\n                        model.width = horizontal ? undefined : ipixels.size;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScaleId: function() {\r\n                        return this.getMeta().yAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScaleId: function() {\r\n                        return this.getMeta().xAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScale: function() {\r\n                        return this.getScaleForId(this.getValueScaleId());\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScale: function() {\r\n                        return this.getScaleForId(this.getIndexScaleId());\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the stacks based on groups and bar visibility.\r\n                     * @param {Number} [last] - The dataset index\r\n                     * @returns {Array} The stack list\r\n                     * @private\r\n                     */\r\n                    _getStacks: function(last) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var scale = me.getIndexScale();\r\n                        var stacked = scale.options.stacked;\r\n                        var ilen = last === undefined ? chart.data.datasets.length : last + 1;\r\n                        var stacks = [];\r\n                        var i, meta;\r\n\r\n                        for (i = 0; i < ilen; ++i) {\r\n                            meta = chart.getDatasetMeta(i);\r\n                            if (meta.bar && chart.isDatasetVisible(i) &&\r\n                                (stacked === false ||\r\n                                    (stacked === true && stacks.indexOf(meta.stack) === -1) ||\r\n                                    (stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\r\n                                stacks.push(meta.stack);\r\n                            }\r\n                        }\r\n\r\n                        return stacks;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the effective number of stacks based on groups and bar visibility.\r\n                     * @private\r\n                     */\r\n                    getStackCount: function() {\r\n                        return this._getStacks().length;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the stack index for the given dataset based on groups and bar visibility.\r\n                     * @param {Number} [datasetIndex] - The dataset index\r\n                     * @param {String} [name] - The stack name to find\r\n                     * @returns {Number} The stack index\r\n                     * @private\r\n                     */\r\n                    getStackIndex: function(datasetIndex, name) {\r\n                        var stacks = this._getStacks(datasetIndex);\r\n                        var index = (name !== undefined)\r\n                            ? stacks.indexOf(name)\r\n                            : -1; // indexOf returns -1 if element is not present\r\n\r\n                        return (index === -1)\r\n                            ? stacks.length - 1\r\n                            : index;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getRuler: function() {\r\n                        var me = this;\r\n                        var scale = me.getIndexScale();\r\n                        var stackCount = me.getStackCount();\r\n                        var datasetIndex = me.index;\r\n                        var isHorizontal = scale.isHorizontal();\r\n                        var start = isHorizontal ? scale.left : scale.top;\r\n                        var end = start + (isHorizontal ? scale.width : scale.height);\r\n                        var pixels = [];\r\n                        var i, ilen, min;\r\n\r\n                        for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\r\n                            pixels.push(scale.getPixelForValue(null, i, datasetIndex));\r\n                        }\r\n\r\n                        min = helpers.isNullOrUndef(scale.options.barThickness)\r\n                            ? computeMinSampleSize(scale, pixels)\r\n                            : -1;\r\n\r\n                        return {\r\n                            min: min,\r\n                            pixels: pixels,\r\n                            start: start,\r\n                            end: end,\r\n                            stackCount: stackCount,\r\n                            scale: scale\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Note: pixel values are not clamped to the scale area.\r\n                     * @private\r\n                     */\r\n                    calculateBarValuePixels: function(datasetIndex, index) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var scale = me.getValueScale();\r\n                        var datasets = chart.data.datasets;\r\n                        var value = scale.getRightValue(datasets[datasetIndex].data[index]);\r\n                        var stacked = scale.options.stacked;\r\n                        var stack = meta.stack;\r\n                        var start = 0;\r\n                        var i, imeta, ivalue, base, head, size;\r\n\r\n                        if (stacked || (stacked === undefined && stack !== undefined)) {\r\n                            for (i = 0; i < datasetIndex; ++i) {\r\n                                imeta = chart.getDatasetMeta(i);\r\n\r\n                                if (imeta.bar &&\r\n                                    imeta.stack === stack &&\r\n                                    imeta.controller.getValueScaleId() === scale.id &&\r\n                                    chart.isDatasetVisible(i)) {\r\n                                    ivalue = scale.getRightValue(datasets[i].data[index]);\r\n                                    if ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\r\n                                        start += ivalue;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        base = scale.getPixelForValue(start);\r\n                        head = scale.getPixelForValue(start + value);\r\n                        size = (head - base) / 2;\r\n\r\n                        return {\r\n                            size: size,\r\n                            base: base,\r\n                            head: head,\r\n                            center: head + size / 2\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    calculateBarIndexPixels: function(datasetIndex, index, ruler) {\r\n                        var me = this;\r\n                        var options = ruler.scale.options;\r\n                        var range = options.barThickness === 'flex'\r\n                            ? computeFlexCategoryTraits(index, ruler, options)\r\n                            : computeFitCategoryTraits(index, ruler, options);\r\n\r\n                        var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\r\n                        var center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\r\n                        var size = Math.min(\r\n                            helpers.valueOrDefault(options.maxBarThickness, Infinity),\r\n                            range.chunk * range.ratio);\r\n\r\n                        return {\r\n                            base: center - size / 2,\r\n                            head: center + size / 2,\r\n                            center: center,\r\n                            size: size\r\n                        };\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var scale = me.getValueScale();\r\n                        var rects = me.getMeta().data;\r\n                        var dataset = me.getDataset();\r\n                        var ilen = rects.length;\r\n                        var i = 0;\r\n\r\n                        helpers.canvas.clipArea(chart.ctx, chart.chartArea);\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            if (!isNaN(scale.getRightValue(dataset.data[i]))) {\r\n                                rects[i].draw();\r\n                            }\r\n                        }\r\n\r\n                        helpers.canvas.unclipArea(chart.ctx);\r\n                    },\r\n\r\n                    setHoverStyle: function(rectangle) {\r\n                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n                        var index = rectangle._index;\r\n                        var custom = rectangle.custom || {};\r\n                        var model = rectangle._model;\r\n\r\n                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    removeHoverStyle: function(rectangle) {\r\n                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n                        var index = rectangle._index;\r\n                        var custom = rectangle.custom || {};\r\n                        var model = rectangle._model;\r\n                        var rectangleElementOptions = this.chart.options.elements.rectangle;\r\n\r\n                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\r\n                        model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\r\n                        model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\r\n                    }\r\n                });\r\n\r\n                Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScaleId: function() {\r\n                        return this.getMeta().xAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScaleId: function() {\r\n                        return this.getMeta().yAxisID;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 11: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('doughnut', {\r\n                animation: {\r\n                    // Boolean - Whether we animate the rotation of the Doughnut\r\n                    animateRotate: true,\r\n                    // Boolean - Whether we animate scaling the Doughnut from the centre\r\n                    animateScale: false\r\n                },\r\n                hover: {\r\n                    mode: 'single'\r\n                },\r\n                legendCallback: function(chart) {\r\n                    var text = [];\r\n                    text.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n                    var data = chart.data;\r\n                    var datasets = data.datasets;\r\n                    var labels = data.labels;\r\n\r\n                    if (datasets.length) {\r\n                        for (var i = 0; i < datasets[0].data.length; ++i) {\r\n                            text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\r\n                            if (labels[i]) {\r\n                                text.push(labels[i]);\r\n                            }\r\n                            text.push('</li>');\r\n                        }\r\n                    }\r\n\r\n                    text.push('</ul>');\r\n                    return text.join('');\r\n                },\r\n                legend: {\r\n                    labels: {\r\n                        generateLabels: function(chart) {\r\n                            var data = chart.data;\r\n                            if (data.labels.length && data.datasets.length) {\r\n                                return data.labels.map(function(label, i) {\r\n                                    var meta = chart.getDatasetMeta(0);\r\n                                    var ds = data.datasets[0];\r\n                                    var arc = meta.data[i];\r\n                                    var custom = arc && arc.custom || {};\r\n                                    var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n                                    var arcOpts = chart.options.elements.arc;\r\n                                    var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n                                    var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n                                    var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\r\n                                    return {\r\n                                        text: label,\r\n                                        fillStyle: fill,\r\n                                        strokeStyle: stroke,\r\n                                        lineWidth: bw,\r\n                                        hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n                                        // Extra data used for toggling the correct item\r\n                                        index: i\r\n                                    };\r\n                                });\r\n                            }\r\n                            return [];\r\n                        }\r\n                    },\r\n\r\n                    onClick: function(e, legendItem) {\r\n                        var index = legendItem.index;\r\n                        var chart = this.chart;\r\n                        var i, ilen, meta;\r\n\r\n                        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n                            meta = chart.getDatasetMeta(i);\r\n                            // toggle visibility of index if exists\r\n                            if (meta.data[index]) {\r\n                                meta.data[index].hidden = !meta.data[index].hidden;\r\n                            }\r\n                        }\r\n\r\n                        chart.update();\r\n                    }\r\n                },\r\n\r\n                // The percentage of the chart that we cut out of the middle.\r\n                cutoutPercentage: 50,\r\n\r\n                // The rotation of the chart, where the first data arc begins.\r\n                rotation: Math.PI * -0.5,\r\n\r\n                // The total circumference of the chart.\r\n                circumference: Math.PI * 2.0,\r\n\r\n                // Need to override these to give a nice default\r\n                tooltips: {\r\n                    callbacks: {\r\n                        title: function() {\r\n                            return '';\r\n                        },\r\n                        label: function(tooltipItem, data) {\r\n                            var dataLabel = data.labels[tooltipItem.index];\r\n                            var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\r\n                            if (helpers.isArray(dataLabel)) {\r\n                                // show value on first line of multiline label\r\n                                // need to clone because we are changing the value\r\n                                dataLabel = dataLabel.slice();\r\n                                dataLabel[0] += value;\r\n                            } else {\r\n                                dataLabel += value;\r\n                            }\r\n\r\n                            return dataLabel;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            defaults._set('pie', helpers.clone(defaults.doughnut));\r\n            defaults._set('pie', {\r\n                cutoutPercentage: 0\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\r\n                    dataElementType: elements.Arc,\r\n\r\n                    linkScales: helpers.noop,\r\n\r\n                    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\r\n                    getRingIndex: function(datasetIndex) {\r\n                        var ringIndex = 0;\r\n\r\n                        for (var j = 0; j < datasetIndex; ++j) {\r\n                            if (this.chart.isDatasetVisible(j)) {\r\n                                ++ringIndex;\r\n                            }\r\n                        }\r\n\r\n                        return ringIndex;\r\n                    },\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var chartArea = chart.chartArea;\r\n                        var opts = chart.options;\r\n                        var arcOpts = opts.elements.arc;\r\n                        var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\r\n                        var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\r\n                        var minSize = Math.min(availableWidth, availableHeight);\r\n                        var offset = { x: 0, y: 0 };\r\n                        var meta = me.getMeta();\r\n                        var cutoutPercentage = opts.cutoutPercentage;\r\n                        var circumference = opts.circumference;\r\n\r\n                        // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\r\n                        if (circumference < Math.PI * 2.0) {\r\n                            var startAngle = opts.rotation % (Math.PI * 2.0);\r\n                            startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\r\n                            var endAngle = startAngle + circumference;\r\n                            var start = { x: Math.cos(startAngle), y: Math.sin(startAngle) };\r\n                            var end = { x: Math.cos(endAngle), y: Math.sin(endAngle) };\r\n                            var contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\r\n                            var contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\r\n                            var contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\r\n                            var contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\r\n                            var cutout = cutoutPercentage / 100.0;\r\n                            var min = { x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout)) };\r\n                            var max = { x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout)) };\r\n                            var size = { width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5 };\r\n                            minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\r\n                            offset = { x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5 };\r\n                        }\r\n\r\n                        chart.borderWidth = me.getMaxBorderWidth(meta.data);\r\n                        chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\r\n                        chart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\r\n                        chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n                        chart.offsetX = offset.x * chart.outerRadius;\r\n                        chart.offsetY = offset.y * chart.outerRadius;\r\n\r\n                        meta.total = me.calculateTotal();\r\n\r\n                        me.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\r\n                        me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\r\n\r\n                        helpers.each(meta.data, function(arc, index) {\r\n                            me.updateElement(arc, index, reset);\r\n                        });\r\n                    },\r\n\r\n                    updateElement: function(arc, index, reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var chartArea = chart.chartArea;\r\n                        var opts = chart.options;\r\n                        var animationOpts = opts.animation;\r\n                        var centerX = (chartArea.left + chartArea.right) / 2;\r\n                        var centerY = (chartArea.top + chartArea.bottom) / 2;\r\n                        var startAngle = opts.rotation; // non reset case handled later\r\n                        var endAngle = opts.rotation; // non reset case handled later\r\n                        var dataset = me.getDataset();\r\n                        var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\r\n                        var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\r\n                        var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\r\n                        var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n\r\n                        helpers.extend(arc, {\r\n                            // Utility\r\n                            _datasetIndex: me.index,\r\n                            _index: index,\r\n\r\n                            // Desired view properties\r\n                            _model: {\r\n                                x: centerX + chart.offsetX,\r\n                                y: centerY + chart.offsetY,\r\n                                startAngle: startAngle,\r\n                                endAngle: endAngle,\r\n                                circumference: circumference,\r\n                                outerRadius: outerRadius,\r\n                                innerRadius: innerRadius,\r\n                                label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\r\n                            }\r\n                        });\r\n\r\n                        var model = arc._model;\r\n                        // Resets the visual styles\r\n                        this.removeHoverStyle(arc);\r\n\r\n                        // Set correct angles if not resetting\r\n                        if (!reset || !animationOpts.animateRotate) {\r\n                            if (index === 0) {\r\n                                model.startAngle = opts.rotation;\r\n                            } else {\r\n                                model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\r\n                            }\r\n\r\n                            model.endAngle = model.startAngle + model.circumference;\r\n                        }\r\n\r\n                        arc.pivot();\r\n                    },\r\n\r\n                    removeHoverStyle: function(arc) {\r\n                        Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n                    },\r\n\r\n                    calculateTotal: function() {\r\n                        var dataset = this.getDataset();\r\n                        var meta = this.getMeta();\r\n                        var total = 0;\r\n                        var value;\r\n\r\n                        helpers.each(meta.data, function(element, index) {\r\n                            value = dataset.data[index];\r\n                            if (!isNaN(value) && !element.hidden) {\r\n                                total += Math.abs(value);\r\n                            }\r\n                        });\r\n\r\n                        /* if (total === 0) {\r\n                            total = NaN;\r\n                        }*/\r\n\r\n                        return total;\r\n                    },\r\n\r\n                    calculateCircumference: function(value) {\r\n                        var total = this.getMeta().total;\r\n                        if (total > 0 && !isNaN(value)) {\r\n                            return (Math.PI * 2.0) * (Math.abs(value) / total);\r\n                        }\r\n                        return 0;\r\n                    },\r\n\r\n                    // gets the max border or hover width to properly scale pie charts\r\n                    getMaxBorderWidth: function(arcs) {\r\n                        var max = 0;\r\n                        var index = this.index;\r\n                        var length = arcs.length;\r\n                        var borderWidth;\r\n                        var hoverWidth;\r\n\r\n                        for (var i = 0; i < length; i++) {\r\n                            borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\r\n                            hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\r\n\r\n                            max = borderWidth > max ? borderWidth : max;\r\n                            max = hoverWidth > max ? hoverWidth : max;\r\n                        }\r\n                        return max;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 12: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('line', {\r\n                showLines: true,\r\n                spanGaps: false,\r\n\r\n                hover: {\r\n                    mode: 'label'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'category',\r\n                        id: 'x-axis-0'\r\n                    }],\r\n                    yAxes: [{\r\n                        type: 'linear',\r\n                        id: 'y-axis-0'\r\n                    }]\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                function lineEnabled(dataset, options) {\r\n                    return helpers.valueOrDefault(dataset.showLine, options.showLines);\r\n                }\r\n\r\n                Chart.controllers.line = Chart.DatasetController.extend({\r\n                    datasetElementType: elements.Line,\r\n\r\n                    dataElementType: elements.Point,\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var line = meta.dataset;\r\n                        var points = meta.data || [];\r\n                        var options = me.chart.options;\r\n                        var lineElementOptions = options.elements.line;\r\n                        var scale = me.getScaleForId(meta.yAxisID);\r\n                        var i, ilen, custom;\r\n                        var dataset = me.getDataset();\r\n                        var showLine = lineEnabled(dataset, options);\r\n\r\n                        // Update Line\r\n                        if (showLine) {\r\n                            custom = line.custom || {};\r\n\r\n                            // Compatibility: If the properties are defined with only the old name, use those values\r\n                            if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n                                dataset.lineTension = dataset.tension;\r\n                            }\r\n\r\n                            // Utility\r\n                            line._scale = scale;\r\n                            line._datasetIndex = me.index;\r\n                            // Data\r\n                            line._children = points;\r\n                            // Model\r\n                            line._model = {\r\n                                // Appearance\r\n                                // The default behavior of lines is to break at null values, according\r\n                                // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\r\n                                // This option gives lines the ability to span gaps\r\n                                spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\r\n                                tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n                                backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n                                borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n                                borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n                                borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n                                borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n                                borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n                                borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n                                fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n                                steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\r\n                                cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\r\n                            };\r\n\r\n                            line.pivot();\r\n                        }\r\n\r\n                        // Update Points\r\n                        for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                            me.updateElement(points[i], i, reset);\r\n                        }\r\n\r\n                        if (showLine && line._model.tension !== 0) {\r\n                            me.updateBezierControlPoints();\r\n                        }\r\n\r\n                        // Now pivot the point for animation\r\n                        for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                            points[i].pivot();\r\n                        }\r\n                    },\r\n\r\n                    getPointBackgroundColor: function(point, index) {\r\n                        var backgroundColor = this.chart.options.elements.point.backgroundColor;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (custom.backgroundColor) {\r\n                            backgroundColor = custom.backgroundColor;\r\n                        } else if (dataset.pointBackgroundColor) {\r\n                            backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\r\n                        } else if (dataset.backgroundColor) {\r\n                            backgroundColor = dataset.backgroundColor;\r\n                        }\r\n\r\n                        return backgroundColor;\r\n                    },\r\n\r\n                    getPointBorderColor: function(point, index) {\r\n                        var borderColor = this.chart.options.elements.point.borderColor;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (custom.borderColor) {\r\n                            borderColor = custom.borderColor;\r\n                        } else if (dataset.pointBorderColor) {\r\n                            borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\r\n                        } else if (dataset.borderColor) {\r\n                            borderColor = dataset.borderColor;\r\n                        }\r\n\r\n                        return borderColor;\r\n                    },\r\n\r\n                    getPointBorderWidth: function(point, index) {\r\n                        var borderWidth = this.chart.options.elements.point.borderWidth;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (!isNaN(custom.borderWidth)) {\r\n                            borderWidth = custom.borderWidth;\r\n                        } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\r\n                            borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\r\n                        } else if (!isNaN(dataset.borderWidth)) {\r\n                            borderWidth = dataset.borderWidth;\r\n                        }\r\n\r\n                        return borderWidth;\r\n                    },\r\n\r\n                    updateElement: function(point, index, reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var custom = point.custom || {};\r\n                        var dataset = me.getDataset();\r\n                        var datasetIndex = me.index;\r\n                        var value = dataset.data[index];\r\n                        var yScale = me.getScaleForId(meta.yAxisID);\r\n                        var xScale = me.getScaleForId(meta.xAxisID);\r\n                        var pointOptions = me.chart.options.elements.point;\r\n                        var x, y;\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n                            dataset.pointRadius = dataset.radius;\r\n                        }\r\n                        if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\r\n                            dataset.pointHitRadius = dataset.hitRadius;\r\n                        }\r\n\r\n                        x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\r\n                        y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\r\n\r\n                        // Utility\r\n                        point._xScale = xScale;\r\n                        point._yScale = yScale;\r\n                        point._datasetIndex = datasetIndex;\r\n                        point._index = index;\r\n\r\n                        // Desired view properties\r\n                        point._model = {\r\n                            x: x,\r\n                            y: y,\r\n                            skip: custom.skip || isNaN(x) || isNaN(y),\r\n                            // Appearance\r\n                            radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\r\n                            pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\r\n                            backgroundColor: me.getPointBackgroundColor(point, index),\r\n                            borderColor: me.getPointBorderColor(point, index),\r\n                            borderWidth: me.getPointBorderWidth(point, index),\r\n                            tension: meta.dataset._model ? meta.dataset._model.tension : 0,\r\n                            steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\r\n                            // Tooltip\r\n                            hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\r\n                        };\r\n                    },\r\n\r\n                    calculatePointY: function(value, index, datasetIndex) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var yScale = me.getScaleForId(meta.yAxisID);\r\n                        var sumPos = 0;\r\n                        var sumNeg = 0;\r\n                        var i, ds, dsMeta;\r\n\r\n                        if (yScale.options.stacked) {\r\n                            for (i = 0; i < datasetIndex; i++) {\r\n                                ds = chart.data.datasets[i];\r\n                                dsMeta = chart.getDatasetMeta(i);\r\n                                if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\r\n                                    var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\r\n                                    if (stackedRightValue < 0) {\r\n                                        sumNeg += stackedRightValue || 0;\r\n                                    } else {\r\n                                        sumPos += stackedRightValue || 0;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            var rightValue = Number(yScale.getRightValue(value));\r\n                            if (rightValue < 0) {\r\n                                return yScale.getPixelForValue(sumNeg + rightValue);\r\n                            }\r\n                            return yScale.getPixelForValue(sumPos + rightValue);\r\n                        }\r\n\r\n                        return yScale.getPixelForValue(value);\r\n                    },\r\n\r\n                    updateBezierControlPoints: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var area = me.chart.chartArea;\r\n                        var points = (meta.data || []);\r\n                        var i, ilen, point, model, controlPoints;\r\n\r\n                        // Only consider points that are drawn in case the spanGaps option is used\r\n                        if (meta.dataset._model.spanGaps) {\r\n                            points = points.filter(function(pt) {\r\n                                return !pt._model.skip;\r\n                            });\r\n                        }\r\n\r\n                        function capControlPoint(pt, min, max) {\r\n                            return Math.max(Math.min(pt, max), min);\r\n                        }\r\n\r\n                        if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\r\n                            helpers.splineCurveMonotone(points);\r\n                        } else {\r\n                            for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                                point = points[i];\r\n                                model = point._model;\r\n                                controlPoints = helpers.splineCurve(\r\n                                    helpers.previousItem(points, i)._model,\r\n                                    model,\r\n                                    helpers.nextItem(points, i)._model,\r\n                                    meta.dataset._model.tension\r\n                                );\r\n                                model.controlPointPreviousX = controlPoints.previous.x;\r\n                                model.controlPointPreviousY = controlPoints.previous.y;\r\n                                model.controlPointNextX = controlPoints.next.x;\r\n                                model.controlPointNextY = controlPoints.next.y;\r\n                            }\r\n                        }\r\n\r\n                        if (me.chart.options.elements.line.capBezierPoints) {\r\n                            for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                                model = points[i]._model;\r\n                                model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\r\n                                model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\r\n                                model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\r\n                                model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var points = meta.data || [];\r\n                        var area = chart.chartArea;\r\n                        var ilen = points.length;\r\n                        var i = 0;\r\n\r\n                        helpers.canvas.clipArea(chart.ctx, area);\r\n\r\n                        if (lineEnabled(me.getDataset(), chart.options)) {\r\n                            meta.dataset.draw();\r\n                        }\r\n\r\n                        helpers.canvas.unclipArea(chart.ctx);\r\n\r\n                        // Draw the points\r\n                        for (; i < ilen; ++i) {\r\n                            points[i].draw(area);\r\n                        }\r\n                    },\r\n\r\n                    setHoverStyle: function(point) {\r\n                        // Point\r\n                        var dataset = this.chart.data.datasets[point._datasetIndex];\r\n                        var index = point._index;\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n\r\n                        model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n                        model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    removeHoverStyle: function(point) {\r\n                        var me = this;\r\n                        var dataset = me.chart.data.datasets[point._datasetIndex];\r\n                        var index = point._index;\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n                            dataset.pointRadius = dataset.radius;\r\n                        }\r\n\r\n                        model.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\r\n                        model.backgroundColor = me.getPointBackgroundColor(point, index);\r\n                        model.borderColor = me.getPointBorderColor(point, index);\r\n                        model.borderWidth = me.getPointBorderWidth(point, index);\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 13: [function(require, module, exports) {\r\n            /* global window: false */\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                animation: {\r\n                    duration: 1000,\r\n                    easing: 'easeOutQuart',\r\n                    onProgress: helpers.noop,\r\n                    onComplete: helpers.noop\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Animation = Element.extend({\r\n                    chart: null, // the animation associated chart instance\r\n                    currentStep: 0, // the current animation step\r\n                    numSteps: 60, // default number of steps\r\n                    easing: '', // the easing to use for this animation\r\n                    render: null, // render function used by the animation service\r\n\r\n                    onAnimationProgress: null, // user specified callback to fire on each step of the animation\r\n                    onAnimationComplete: null, // user specified callback to fire when the animation finishes\r\n                });\r\n\r\n                Chart.animationService = {\r\n                    frameDuration: 17,\r\n                    animations: [],\r\n                    dropFrames: 0,\r\n                    request: null,\r\n\r\n                    /**\r\n                     * @param {Chart} chart - The chart to animate.\r\n                     * @param {Chart.Animation} animation - The animation that we will animate.\r\n                     * @param {Number} duration - The animation duration in ms.\r\n                     * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\r\n                     */\r\n                    addAnimation: function(chart, animation, duration, lazy) {\r\n                        var animations = this.animations;\r\n                        var i, ilen;\r\n\r\n                        animation.chart = chart;\r\n\r\n                        if (!lazy) {\r\n                            chart.animating = true;\r\n                        }\r\n\r\n                        for (i = 0, ilen = animations.length; i < ilen; ++i) {\r\n                            if (animations[i].chart === chart) {\r\n                                animations[i] = animation;\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        animations.push(animation);\r\n\r\n                        // If there are no animations queued, manually kickstart a digest, for lack of a better word\r\n                        if (animations.length === 1) {\r\n                            this.requestAnimationFrame();\r\n                        }\r\n                    },\r\n\r\n                    cancelAnimation: function(chart) {\r\n                        var index = helpers.findIndex(this.animations, function(animation) {\r\n                            return animation.chart === chart;\r\n                        });\r\n\r\n                        if (index !== -1) {\r\n                            this.animations.splice(index, 1);\r\n                            chart.animating = false;\r\n                        }\r\n                    },\r\n\r\n                    requestAnimationFrame: function() {\r\n                        var me = this;\r\n                        if (me.request === null) {\r\n                            // Skip animation frame requests until the active one is executed.\r\n                            // This can happen when processing mouse events, e.g. 'mousemove'\r\n                            // and 'mouseout' events will trigger multiple renders.\r\n                            me.request = helpers.requestAnimFrame.call(window, function() {\r\n                                me.request = null;\r\n                                me.startDigest();\r\n                            });\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    startDigest: function() {\r\n                        var me = this;\r\n                        var startTime = Date.now();\r\n                        var framesToDrop = 0;\r\n\r\n                        if (me.dropFrames > 1) {\r\n                            framesToDrop = Math.floor(me.dropFrames);\r\n                            me.dropFrames = me.dropFrames % 1;\r\n                        }\r\n\r\n                        me.advance(1 + framesToDrop);\r\n\r\n                        var endTime = Date.now();\r\n\r\n                        me.dropFrames += (endTime - startTime) / me.frameDuration;\r\n\r\n                        // Do we have more stuff to animate?\r\n                        if (me.animations.length > 0) {\r\n                            me.requestAnimationFrame();\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    advance: function(count) {\r\n                        var animations = this.animations;\r\n                        var animation, chart;\r\n                        var i = 0;\r\n\r\n                        while (i < animations.length) {\r\n                            animation = animations[i];\r\n                            chart = animation.chart;\r\n\r\n                            animation.currentStep = (animation.currentStep || 0) + count;\r\n                            animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\r\n\r\n                            helpers.callback(animation.render, [chart, animation], chart);\r\n                            helpers.callback(animation.onAnimationProgress, [animation], chart);\r\n\r\n                            if (animation.currentStep >= animation.numSteps) {\r\n                                helpers.callback(animation.onAnimationComplete, [animation], chart);\r\n                                chart.animating = false;\r\n                                animations.splice(i, 1);\r\n                            } else {\r\n                                ++i;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.Animation instead\r\n                 * @prop Chart.Animation#animationObject\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 */\r\n                Object.defineProperty(Chart.Animation.prototype, 'animationObject', {\r\n                    get: function() {\r\n                        return this;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.Animation#chart instead\r\n                 * @prop Chart.Animation#chartInstance\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 */\r\n                Object.defineProperty(Chart.Animation.prototype, 'chartInstance', {\r\n                    get: function() {\r\n                        return this.chart;\r\n                    },\r\n                    set: function(value) {\r\n                        this.chart = value;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 14: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var Interaction = require(19);\r\n            var layouts = require(21);\r\n            var platform = require(39);\r\n            var plugins = require(22);\r\n\r\n            module.exports = function(Chart) {\r\n                // Create a dictionary of chart types, to allow for extension of existing types\r\n                Chart.types = {};\r\n\r\n                // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\r\n                // Destroy method on the chart will remove the instance of the chart from this reference.\r\n                Chart.instances = {};\r\n\r\n                // Controllers available for dataset visualization eg. bar, line, slice, etc.\r\n                Chart.controllers = {};\r\n\r\n                /**\r\n                 * Initializes the given config with global and chart default values.\r\n                 */\r\n                function initConfig(config) {\r\n                    config = config || {};\r\n\r\n                    // Do NOT use configMerge() for the data object because this method merges arrays\r\n                    // and so would change references to labels and datasets, preventing data updates.\r\n                    var data = config.data = config.data || {};\r\n                    data.datasets = data.datasets || [];\r\n                    data.labels = data.labels || [];\r\n\r\n                    config.options = helpers.configMerge(\r\n                        defaults.global,\r\n                        defaults[config.type],\r\n                        config.options || {});\r\n\r\n                    return config;\r\n                }\r\n\r\n                /**\r\n                 * Updates the config of the chart\r\n                 * @param chart {Chart} chart to update the options for\r\n                 */\r\n                function updateConfig(chart) {\r\n                    var newOptions = chart.options;\r\n\r\n                    helpers.each(chart.scales, function(scale) {\r\n                        layouts.removeBox(chart, scale);\r\n                    });\r\n\r\n                    newOptions = helpers.configMerge(\r\n                        Chart.defaults.global,\r\n                        Chart.defaults[chart.config.type],\r\n                        newOptions);\r\n\r\n                    chart.options = chart.config.options = newOptions;\r\n                    chart.ensureScalesHaveIDs();\r\n                    chart.buildOrUpdateScales();\r\n                    // Tooltip\r\n                    chart.tooltip._options = newOptions.tooltips;\r\n                    chart.tooltip.initialize();\r\n                }\r\n\r\n                function positionIsHorizontal(position) {\r\n                    return position === 'top' || position === 'bottom';\r\n                }\r\n\r\n                helpers.extend(Chart.prototype, /** @lends Chart */ {\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    construct: function(item, config) {\r\n                        var me = this;\r\n\r\n                        config = initConfig(config);\r\n\r\n                        var context = platform.acquireContext(item, config);\r\n                        var canvas = context && context.canvas;\r\n                        var height = canvas && canvas.height;\r\n                        var width = canvas && canvas.width;\r\n\r\n                        me.id = helpers.uid();\r\n                        me.ctx = context;\r\n                        me.canvas = canvas;\r\n                        me.config = config;\r\n                        me.width = width;\r\n                        me.height = height;\r\n                        me.aspectRatio = height ? width / height : null;\r\n                        me.options = config.options;\r\n                        me._bufferedRender = false;\r\n\r\n                        /**\r\n                         * Provided for backward compatibility, Chart and Chart.Controller have been merged,\r\n                         * the \"instance\" still need to be defined since it might be called from plugins.\r\n                         * @prop Chart#chart\r\n                         * @deprecated since version 2.6.0\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        me.chart = me;\r\n                        me.controller = me; // chart.chart.controller #inception\r\n\r\n                        // Add the chart instance to the global namespace\r\n                        Chart.instances[me.id] = me;\r\n\r\n                        // Define alias to the config data: `chart.data === chart.config.data`\r\n                        Object.defineProperty(me, 'data', {\r\n                            get: function() {\r\n                                return me.config.data;\r\n                            },\r\n                            set: function(value) {\r\n                                me.config.data = value;\r\n                            }\r\n                        });\r\n\r\n                        if (!context || !canvas) {\r\n                            // The given item is not a compatible context2d element, let's return before finalizing\r\n                            // the chart initialization but after setting basic chart / controller properties that\r\n                            // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\r\n                            // https://github.com/chartjs/Chart.js/issues/2807\r\n                            console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n                            return;\r\n                        }\r\n\r\n                        me.initialize();\r\n                        me.update();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    initialize: function() {\r\n                        var me = this;\r\n\r\n                        // Before init plugin notification\r\n                        plugins.notify(me, 'beforeInit');\r\n\r\n                        helpers.retinaScale(me, me.options.devicePixelRatio);\r\n\r\n                        me.bindEvents();\r\n\r\n                        if (me.options.responsive) {\r\n                            // Initial resize before chart draws (must be silent to preserve initial animations).\r\n                            me.resize(true);\r\n                        }\r\n\r\n                        // Make sure scales have IDs and are built before we build any controllers.\r\n                        me.ensureScalesHaveIDs();\r\n                        me.buildOrUpdateScales();\r\n                        me.initToolTip();\r\n\r\n                        // After init plugin notification\r\n                        plugins.notify(me, 'afterInit');\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    clear: function() {\r\n                        helpers.canvas.clear(this);\r\n                        return this;\r\n                    },\r\n\r\n                    stop: function() {\r\n                        // Stops any current animation loop occurring\r\n                        Chart.animationService.cancelAnimation(this);\r\n                        return this;\r\n                    },\r\n\r\n                    resize: function(silent) {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        var canvas = me.canvas;\r\n                        var aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\r\n\r\n                        // the canvas render width and height will be casted to integers so make sure that\r\n                        // the canvas display style uses the same integer values to avoid blurring effect.\r\n\r\n                        // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\r\n                        var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\r\n                        var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\r\n\r\n                        if (me.width === newWidth && me.height === newHeight) {\r\n                            return;\r\n                        }\r\n\r\n                        canvas.width = me.width = newWidth;\r\n                        canvas.height = me.height = newHeight;\r\n                        canvas.style.width = newWidth + 'px';\r\n                        canvas.style.height = newHeight + 'px';\r\n\r\n                        helpers.retinaScale(me, options.devicePixelRatio);\r\n\r\n                        if (!silent) {\r\n                            // Notify any plugins about the resize\r\n                            var newSize = { width: newWidth, height: newHeight };\r\n                            plugins.notify(me, 'resize', [newSize]);\r\n\r\n                            // Notify of resize\r\n                            if (me.options.onResize) {\r\n                                me.options.onResize(me, newSize);\r\n                            }\r\n\r\n                            me.stop();\r\n                            me.update(me.options.responsiveAnimationDuration);\r\n                        }\r\n                    },\r\n\r\n                    ensureScalesHaveIDs: function() {\r\n                        var options = this.options;\r\n                        var scalesOptions = options.scales || {};\r\n                        var scaleOptions = options.scale;\r\n\r\n                        helpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\r\n                            xAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\r\n                        });\r\n\r\n                        helpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\r\n                            yAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\r\n                        });\r\n\r\n                        if (scaleOptions) {\r\n                            scaleOptions.id = scaleOptions.id || 'scale';\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Builds a map of scale ID to scale object for future lookup.\r\n                     */\r\n                    buildOrUpdateScales: function() {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        var scales = me.scales || {};\r\n                        var items = [];\r\n                        var updated = Object.keys(scales).reduce(function(obj, id) {\r\n                            obj[id] = false;\r\n                            return obj;\r\n                        }, {});\r\n\r\n                        if (options.scales) {\r\n                            items = items.concat(\r\n                                (options.scales.xAxes || []).map(function(xAxisOptions) {\r\n                                    return { options: xAxisOptions, dtype: 'category', dposition: 'bottom' };\r\n                                }),\r\n                                (options.scales.yAxes || []).map(function(yAxisOptions) {\r\n                                    return { options: yAxisOptions, dtype: 'linear', dposition: 'left' };\r\n                                })\r\n                            );\r\n                        }\r\n\r\n                        if (options.scale) {\r\n                            items.push({\r\n                                options: options.scale,\r\n                                dtype: 'radialLinear',\r\n                                isDefault: true,\r\n                                dposition: 'chartArea'\r\n                            });\r\n                        }\r\n\r\n                        helpers.each(items, function(item) {\r\n                            var scaleOptions = item.options;\r\n                            var id = scaleOptions.id;\r\n                            var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\r\n\r\n                            if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\r\n                                scaleOptions.position = item.dposition;\r\n                            }\r\n\r\n                            updated[id] = true;\r\n                            var scale = null;\r\n                            if (id in scales && scales[id].type === scaleType) {\r\n                                scale = scales[id];\r\n                                scale.options = scaleOptions;\r\n                                scale.ctx = me.ctx;\r\n                                scale.chart = me;\r\n                            } else {\r\n                                var scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\r\n                                if (!scaleClass) {\r\n                                    return;\r\n                                }\r\n                                scale = new scaleClass({\r\n                                    id: id,\r\n                                    type: scaleType,\r\n                                    options: scaleOptions,\r\n                                    ctx: me.ctx,\r\n                                    chart: me\r\n                                });\r\n                                scales[scale.id] = scale;\r\n                            }\r\n\r\n                            scale.mergeTicksOptions();\r\n\r\n                            // TODO(SB): I think we should be able to remove this custom case (options.scale)\r\n                            // and consider it as a regular scale part of the \"scales\"\" map only! This would\r\n                            // make the logic easier and remove some useless? custom code.\r\n                            if (item.isDefault) {\r\n                                me.scale = scale;\r\n                            }\r\n                        });\r\n                        // clear up discarded scales\r\n                        helpers.each(updated, function(hasUpdated, id) {\r\n                            if (!hasUpdated) {\r\n                                delete scales[id];\r\n                            }\r\n                        });\r\n\r\n                        me.scales = scales;\r\n\r\n                        Chart.scaleService.addScalesToLayout(this);\r\n                    },\r\n\r\n                    buildOrUpdateControllers: function() {\r\n                        var me = this;\r\n                        var types = [];\r\n                        var newControllers = [];\r\n\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            var meta = me.getDatasetMeta(datasetIndex);\r\n                            var type = dataset.type || me.config.type;\r\n\r\n                            if (meta.type && meta.type !== type) {\r\n                                me.destroyDatasetMeta(datasetIndex);\r\n                                meta = me.getDatasetMeta(datasetIndex);\r\n                            }\r\n                            meta.type = type;\r\n\r\n                            types.push(meta.type);\r\n\r\n                            if (meta.controller) {\r\n                                meta.controller.updateIndex(datasetIndex);\r\n                                meta.controller.linkScales();\r\n                            } else {\r\n                                var ControllerClass = Chart.controllers[meta.type];\r\n                                if (ControllerClass === undefined) {\r\n                                    throw new Error('\"' + meta.type + '\" is not a chart type.');\r\n                                }\r\n\r\n                                meta.controller = new ControllerClass(me, datasetIndex);\r\n                                newControllers.push(meta.controller);\r\n                            }\r\n                        }, me);\r\n\r\n                        return newControllers;\r\n                    },\r\n\r\n                    /**\r\n                     * Reset the elements of all datasets\r\n                     * @private\r\n                     */\r\n                    resetElements: function() {\r\n                        var me = this;\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            me.getDatasetMeta(datasetIndex).controller.reset();\r\n                        }, me);\r\n                    },\r\n\r\n                    /**\r\n                    * Resets the chart back to it's state before the initial animation\r\n                    */\r\n                    reset: function() {\r\n                        this.resetElements();\r\n                        this.tooltip.initialize();\r\n                    },\r\n\r\n                    update: function(config) {\r\n                        var me = this;\r\n\r\n                        if (!config || typeof config !== 'object') {\r\n                            // backwards compatibility\r\n                            config = {\r\n                                duration: config,\r\n                                lazy: arguments[1]\r\n                            };\r\n                        }\r\n\r\n                        updateConfig(me);\r\n\r\n                        // plugins options references might have change, let's invalidate the cache\r\n                        // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\r\n                        plugins._invalidate(me);\r\n\r\n                        if (plugins.notify(me, 'beforeUpdate') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // In case the entire data object changed\r\n                        me.tooltip._data = me.data;\r\n\r\n                        // Make sure dataset controllers are updated and new controllers are reset\r\n                        var newControllers = me.buildOrUpdateControllers();\r\n\r\n                        // Make sure all dataset controllers have correct meta data counts\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\r\n                        }, me);\r\n\r\n                        me.updateLayout();\r\n\r\n                        // Can only reset the new controllers after the scales have been updated\r\n                        if (me.options.animation && me.options.animation.duration) {\r\n                            helpers.each(newControllers, function(controller) {\r\n                                controller.reset();\r\n                            });\r\n                        }\r\n\r\n                        me.updateDatasets();\r\n\r\n                        // Need to reset tooltip in case it is displayed with elements that are removed\r\n                        // after update.\r\n                        me.tooltip.initialize();\r\n\r\n                        // Last active contains items that were previously in the tooltip.\r\n                        // When we reset the tooltip, we need to clear it\r\n                        me.lastActive = [];\r\n\r\n                        // Do this before render so that any plugins that need final scale updates can use it\r\n                        plugins.notify(me, 'afterUpdate');\r\n\r\n                        if (me._bufferedRender) {\r\n                            me._bufferedRequest = {\r\n                                duration: config.duration,\r\n                                easing: config.easing,\r\n                                lazy: config.lazy\r\n                            };\r\n                        } else {\r\n                            me.render(config);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\r\n                     * hook, in which case, plugins will not be called on `afterLayout`.\r\n                     * @private\r\n                     */\r\n                    updateLayout: function() {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeLayout') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        layouts.update(this, this.width, this.height);\r\n\r\n                        /**\r\n                         * Provided for backward compatibility, use `afterLayout` instead.\r\n                         * @method IPlugin#afterScaleUpdate\r\n                         * @deprecated since version 2.5.0\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        plugins.notify(me, 'afterScaleUpdate');\r\n                        plugins.notify(me, 'afterLayout');\r\n                    },\r\n\r\n                    /**\r\n                     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\r\n                     * @private\r\n                     */\r\n                    updateDatasets: function() {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                            me.updateDataset(i);\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterDatasetsUpdate');\r\n                    },\r\n\r\n                    /**\r\n                     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\r\n                     * @private\r\n                     */\r\n                    updateDataset: function(index) {\r\n                        var me = this;\r\n                        var meta = me.getDatasetMeta(index);\r\n                        var args = {\r\n                            meta: meta,\r\n                            index: index\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        meta.controller.update();\r\n\r\n                        plugins.notify(me, 'afterDatasetUpdate', [args]);\r\n                    },\r\n\r\n                    render: function(config) {\r\n                        var me = this;\r\n\r\n                        if (!config || typeof config !== 'object') {\r\n                            // backwards compatibility\r\n                            config = {\r\n                                duration: config,\r\n                                lazy: arguments[1]\r\n                            };\r\n                        }\r\n\r\n                        var duration = config.duration;\r\n                        var lazy = config.lazy;\r\n\r\n                        if (plugins.notify(me, 'beforeRender') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        var animationOptions = me.options.animation;\r\n                        var onComplete = function(animation) {\r\n                            plugins.notify(me, 'afterRender');\r\n                            helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\r\n                        };\r\n\r\n                        if (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\r\n                            var animation = new Chart.Animation({\r\n                                numSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\r\n                                easing: config.easing || animationOptions.easing,\r\n\r\n                                render: function(chart, animationObject) {\r\n                                    var easingFunction = helpers.easing.effects[animationObject.easing];\r\n                                    var currentStep = animationObject.currentStep;\r\n                                    var stepDecimal = currentStep / animationObject.numSteps;\r\n\r\n                                    chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\r\n                                },\r\n\r\n                                onAnimationProgress: animationOptions.onProgress,\r\n                                onAnimationComplete: onComplete\r\n                            });\r\n\r\n                            Chart.animationService.addAnimation(me, animation, duration, lazy);\r\n                        } else {\r\n                            me.draw();\r\n\r\n                            // See https://github.com/chartjs/Chart.js/issues/3781\r\n                            onComplete(new Chart.Animation({ numSteps: 0, chart: me }));\r\n                        }\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    draw: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        me.clear();\r\n\r\n                        if (helpers.isNullOrUndef(easingValue)) {\r\n                            easingValue = 1;\r\n                        }\r\n\r\n                        me.transition(easingValue);\r\n\r\n                        if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Draw all the scales\r\n                        helpers.each(me.boxes, function(box) {\r\n                            box.draw(me.chartArea);\r\n                        }, me);\r\n\r\n                        if (me.scale) {\r\n                            me.scale.draw();\r\n                        }\r\n\r\n                        me.drawDatasets(easingValue);\r\n                        me._drawTooltip(easingValue);\r\n\r\n                        plugins.notify(me, 'afterDraw', [easingValue]);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    transition: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\r\n                            if (me.isDatasetVisible(i)) {\r\n                                me.getDatasetMeta(i).controller.transition(easingValue);\r\n                            }\r\n                        }\r\n\r\n                        me.tooltip.transition(easingValue);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\r\n                     * @private\r\n                     */\r\n                    drawDatasets: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Draw datasets reversed to support proper line stacking\r\n                        for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\r\n                            if (me.isDatasetVisible(i)) {\r\n                                me.drawDataset(i, easingValue);\r\n                            }\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\r\n                     * @private\r\n                     */\r\n                    drawDataset: function(index, easingValue) {\r\n                        var me = this;\r\n                        var meta = me.getDatasetMeta(index);\r\n                        var args = {\r\n                            meta: meta,\r\n                            index: index,\r\n                            easingValue: easingValue\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        meta.controller.draw(easingValue);\r\n\r\n                        plugins.notify(me, 'afterDatasetDraw', [args]);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\r\n                     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\r\n                     * @private\r\n                     */\r\n                    _drawTooltip: function(easingValue) {\r\n                        var me = this;\r\n                        var tooltip = me.tooltip;\r\n                        var args = {\r\n                            tooltip: tooltip,\r\n                            easingValue: easingValue\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        tooltip.draw();\r\n\r\n                        plugins.notify(me, 'afterTooltipDraw', [args]);\r\n                    },\r\n\r\n                    // Get the single element that was clicked on\r\n                    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\r\n                    getElementAtEvent: function(e) {\r\n                        return Interaction.modes.single(this, e);\r\n                    },\r\n\r\n                    getElementsAtEvent: function(e) {\r\n                        return Interaction.modes.label(this, e, { intersect: true });\r\n                    },\r\n\r\n                    getElementsAtXAxis: function(e) {\r\n                        return Interaction.modes['x-axis'](this, e, { intersect: true });\r\n                    },\r\n\r\n                    getElementsAtEventForMode: function(e, mode, options) {\r\n                        var method = Interaction.modes[mode];\r\n                        if (typeof method === 'function') {\r\n                            return method(this, e, options);\r\n                        }\r\n\r\n                        return [];\r\n                    },\r\n\r\n                    getDatasetAtEvent: function(e) {\r\n                        return Interaction.modes.dataset(this, e, { intersect: true });\r\n                    },\r\n\r\n                    getDatasetMeta: function(datasetIndex) {\r\n                        var me = this;\r\n                        var dataset = me.data.datasets[datasetIndex];\r\n                        if (!dataset._meta) {\r\n                            dataset._meta = {};\r\n                        }\r\n\r\n                        var meta = dataset._meta[me.id];\r\n                        if (!meta) {\r\n                            meta = dataset._meta[me.id] = {\r\n                                type: null,\r\n                                data: [],\r\n                                dataset: null,\r\n                                controller: null,\r\n                                hidden: null,\t\t\t// See isDatasetVisible() comment\r\n                                xAxisID: null,\r\n                                yAxisID: null\r\n                            };\r\n                        }\r\n\r\n                        return meta;\r\n                    },\r\n\r\n                    getVisibleDatasetCount: function() {\r\n                        var count = 0;\r\n                        for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n                            if (this.isDatasetVisible(i)) {\r\n                                count++;\r\n                            }\r\n                        }\r\n                        return count;\r\n                    },\r\n\r\n                    isDatasetVisible: function(datasetIndex) {\r\n                        var meta = this.getDatasetMeta(datasetIndex);\r\n\r\n                        // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\r\n                        // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\r\n                        return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\r\n                    },\r\n\r\n                    generateLegend: function() {\r\n                        return this.options.legendCallback(this);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    destroyDatasetMeta: function(datasetIndex) {\r\n                        var id = this.id;\r\n                        var dataset = this.data.datasets[datasetIndex];\r\n                        var meta = dataset._meta && dataset._meta[id];\r\n\r\n                        if (meta) {\r\n                            meta.controller.destroy();\r\n                            delete dataset._meta[id];\r\n                        }\r\n                    },\r\n\r\n                    destroy: function() {\r\n                        var me = this;\r\n                        var canvas = me.canvas;\r\n                        var i, ilen;\r\n\r\n                        me.stop();\r\n\r\n                        // dataset controllers need to cleanup associated data\r\n                        for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                            me.destroyDatasetMeta(i);\r\n                        }\r\n\r\n                        if (canvas) {\r\n                            me.unbindEvents();\r\n                            helpers.canvas.clear(me);\r\n                            platform.releaseContext(me.ctx);\r\n                            me.canvas = null;\r\n                            me.ctx = null;\r\n                        }\r\n\r\n                        plugins.notify(me, 'destroy');\r\n\r\n                        delete Chart.instances[me.id];\r\n                    },\r\n\r\n                    toBase64Image: function() {\r\n                        return this.canvas.toDataURL.apply(this.canvas, arguments);\r\n                    },\r\n\r\n                    initToolTip: function() {\r\n                        var me = this;\r\n                        me.tooltip = new Chart.Tooltip({\r\n                            _chart: me,\r\n                            _chartInstance: me, // deprecated, backward compatibility\r\n                            _data: me.data,\r\n                            _options: me.options.tooltips\r\n                        }, me);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    bindEvents: function() {\r\n                        var me = this;\r\n                        var listeners = me._listeners = {};\r\n                        var listener = function() {\r\n                            me.eventHandler.apply(me, arguments);\r\n                        };\r\n\r\n                        helpers.each(me.options.events, function(type) {\r\n                            platform.addEventListener(me, type, listener);\r\n                            listeners[type] = listener;\r\n                        });\r\n\r\n                        // Elements used to detect size change should not be injected for non responsive charts.\r\n                        // See https://github.com/chartjs/Chart.js/issues/2210\r\n                        if (me.options.responsive) {\r\n                            listener = function() {\r\n                                me.resize();\r\n                            };\r\n\r\n                            platform.addEventListener(me, 'resize', listener);\r\n                            listeners.resize = listener;\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    unbindEvents: function() {\r\n                        var me = this;\r\n                        var listeners = me._listeners;\r\n                        if (!listeners) {\r\n                            return;\r\n                        }\r\n\r\n                        delete me._listeners;\r\n                        helpers.each(listeners, function(listener, type) {\r\n                            platform.removeEventListener(me, type, listener);\r\n                        });\r\n                    },\r\n\r\n                    updateHoverStyle: function(elements, mode, enabled) {\r\n                        var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\r\n                        var element, i, ilen;\r\n\r\n                        for (i = 0, ilen = elements.length; i < ilen; ++i) {\r\n                            element = elements[i];\r\n                            if (element) {\r\n                                this.getDatasetMeta(element._datasetIndex).controller[method](element);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    eventHandler: function(e) {\r\n                        var me = this;\r\n                        var tooltip = me.tooltip;\r\n\r\n                        if (plugins.notify(me, 'beforeEvent', [e]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Buffer any update calls so that renders do not occur\r\n                        me._bufferedRender = true;\r\n                        me._bufferedRequest = null;\r\n\r\n                        var changed = me.handleEvent(e);\r\n                        // for smooth tooltip animations issue #4989\r\n                        // the tooltip should be the source of change\r\n                        // Animation check workaround:\r\n                        // tooltip._start will be null when tooltip isn't animating\r\n                        if (tooltip) {\r\n                            changed = tooltip._start\r\n                                ? tooltip.handleEvent(e)\r\n                                : changed | tooltip.handleEvent(e);\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterEvent', [e]);\r\n\r\n                        var bufferedRequest = me._bufferedRequest;\r\n                        if (bufferedRequest) {\r\n                            // If we have an update that was triggered, we need to do a normal render\r\n                            me.render(bufferedRequest);\r\n                        } else if (changed && !me.animating) {\r\n                            // If entering, leaving, or changing elements, animate the change via pivot\r\n                            me.stop();\r\n\r\n                            // We only need to render at this point. Updating will cause scales to be\r\n                            // recomputed generating flicker & using more memory than necessary.\r\n                            me.render(me.options.hover.animationDuration, true);\r\n                        }\r\n\r\n                        me._bufferedRender = false;\r\n                        me._bufferedRequest = null;\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    /**\r\n                     * Handle an event\r\n                     * @private\r\n                     * @param {IEvent} event the event to handle\r\n                     * @return {Boolean} true if the chart needs to re-render\r\n                     */\r\n                    handleEvent: function(e) {\r\n                        var me = this;\r\n                        var options = me.options || {};\r\n                        var hoverOptions = options.hover;\r\n                        var changed = false;\r\n\r\n                        me.lastActive = me.lastActive || [];\r\n\r\n                        // Find Active Elements for hover and tooltips\r\n                        if (e.type === 'mouseout') {\r\n                            me.active = [];\r\n                        } else {\r\n                            me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\r\n                        }\r\n\r\n                        // Invoke onHover hook\r\n                        // Need to call with native event here to not break backwards compatibility\r\n                        helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\r\n\r\n                        if (e.type === 'mouseup' || e.type === 'click') {\r\n                            if (options.onClick) {\r\n                                // Use e.native here for backwards compatibility\r\n                                options.onClick.call(me, e.native, me.active);\r\n                            }\r\n                        }\r\n\r\n                        // Remove styling for last active (even if it may still be active)\r\n                        if (me.lastActive.length) {\r\n                            me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\r\n                        }\r\n\r\n                        // Built in hover styling\r\n                        if (me.active.length && hoverOptions.mode) {\r\n                            me.updateHoverStyle(me.active, hoverOptions.mode, true);\r\n                        }\r\n\r\n                        changed = !helpers.arrayEquals(me.active, me.lastActive);\r\n\r\n                        // Remember Last Actives\r\n                        me.lastActive = me.active;\r\n\r\n                        return changed;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart instead.\r\n                 * @class Chart.Controller\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 * @private\r\n                 */\r\n                Chart.Controller = Chart;\r\n            };\r\n        }, { \"16\": 16, \"19\": 19, \"21\": 21, \"22\": 22, \"36\": 36, \"39\": 39 }], 15: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            module.exports = function(Chart) {\r\n                var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\r\n\r\n                /**\r\n                 * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\r\n                 * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\r\n                 * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\r\n                 */\r\n                function listenArrayEvents(array, listener) {\r\n                    if (array._chartjs) {\r\n                        array._chartjs.listeners.push(listener);\r\n                        return;\r\n                    }\r\n\r\n                    Object.defineProperty(array, '_chartjs', {\r\n                        configurable: true,\r\n                        enumerable: false,\r\n                        value: {\r\n                            listeners: [listener]\r\n                        }\r\n                    });\r\n\r\n                    arrayEvents.forEach(function(key) {\r\n                        var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\r\n                        var base = array[key];\r\n\r\n                        Object.defineProperty(array, key, {\r\n                            configurable: true,\r\n                            enumerable: false,\r\n                            value: function() {\r\n                                var args = Array.prototype.slice.call(arguments);\r\n                                var res = base.apply(this, args);\r\n\r\n                                helpers.each(array._chartjs.listeners, function(object) {\r\n                                    if (typeof object[method] === 'function') {\r\n                                        object[method].apply(object, args);\r\n                                    }\r\n                                });\r\n\r\n                                return res;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Removes the given array event listener and cleanup extra attached properties (such as\r\n                 * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\r\n                 */\r\n                function unlistenArrayEvents(array, listener) {\r\n                    var stub = array._chartjs;\r\n                    if (!stub) {\r\n                        return;\r\n                    }\r\n\r\n                    var listeners = stub.listeners;\r\n                    var index = listeners.indexOf(listener);\r\n                    if (index !== -1) {\r\n                        listeners.splice(index, 1);\r\n                    }\r\n\r\n                    if (listeners.length > 0) {\r\n                        return;\r\n                    }\r\n\r\n                    arrayEvents.forEach(function(key) {\r\n                        delete array[key];\r\n                    });\r\n\r\n                    delete array._chartjs;\r\n                }\r\n\r\n                // Base class for all dataset controllers (line, bar, etc)\r\n                Chart.DatasetController = function(chart, datasetIndex) {\r\n                    this.initialize(chart, datasetIndex);\r\n                };\r\n\r\n                helpers.extend(Chart.DatasetController.prototype, {\r\n                    /**\r\n                     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\r\n                     * @type {Chart.core.element}\r\n                     */\r\n                    datasetElementType: null,\r\n\r\n                    /**\r\n                     * Element type used to generate a meta data (e.g. Chart.element.Point).\r\n                     * @type {Chart.core.element}\r\n                     */\r\n                    dataElementType: null,\r\n\r\n                    initialize: function(chart, datasetIndex) {\r\n                        var me = this;\r\n                        me.chart = chart;\r\n                        me.index = datasetIndex;\r\n                        me.linkScales();\r\n                        me.addElements();\r\n                    },\r\n\r\n                    updateIndex: function(datasetIndex) {\r\n                        this.index = datasetIndex;\r\n                    },\r\n\r\n                    linkScales: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var dataset = me.getDataset();\r\n\r\n                        if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\r\n                            meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\r\n                        }\r\n                        if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\r\n                            meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\r\n                        }\r\n                    },\r\n\r\n                    getDataset: function() {\r\n                        return this.chart.data.datasets[this.index];\r\n                    },\r\n\r\n                    getMeta: function() {\r\n                        return this.chart.getDatasetMeta(this.index);\r\n                    },\r\n\r\n                    getScaleForId: function(scaleID) {\r\n                        return this.chart.scales[scaleID];\r\n                    },\r\n\r\n                    reset: function() {\r\n                        this.update(true);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    destroy: function() {\r\n                        if (this._data) {\r\n                            unlistenArrayEvents(this._data, this);\r\n                        }\r\n                    },\r\n\r\n                    createMetaDataset: function() {\r\n                        var me = this;\r\n                        var type = me.datasetElementType;\r\n                        return type && new type({\r\n                            _chart: me.chart,\r\n                            _datasetIndex: me.index\r\n                        });\r\n                    },\r\n\r\n                    createMetaData: function(index) {\r\n                        var me = this;\r\n                        var type = me.dataElementType;\r\n                        return type && new type({\r\n                            _chart: me.chart,\r\n                            _datasetIndex: me.index,\r\n                            _index: index\r\n                        });\r\n                    },\r\n\r\n                    addElements: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var data = me.getDataset().data || [];\r\n                        var metaData = meta.data;\r\n                        var i, ilen;\r\n\r\n                        for (i = 0, ilen = data.length; i < ilen; ++i) {\r\n                            metaData[i] = metaData[i] || me.createMetaData(i);\r\n                        }\r\n\r\n                        meta.dataset = meta.dataset || me.createMetaDataset();\r\n                    },\r\n\r\n                    addElementAndReset: function(index) {\r\n                        var element = this.createMetaData(index);\r\n                        this.getMeta().data.splice(index, 0, element);\r\n                        this.updateElement(element, index, true);\r\n                    },\r\n\r\n                    buildOrUpdateElements: function() {\r\n                        var me = this;\r\n                        var dataset = me.getDataset();\r\n                        var data = dataset.data || (dataset.data = []);\r\n\r\n                        // In order to correctly handle data addition/deletion animation (an thus simulate\r\n                        // real-time charts), we need to monitor these data modifications and synchronize\r\n                        // the internal meta data accordingly.\r\n                        if (me._data !== data) {\r\n                            if (me._data) {\r\n                                // This case happens when the user replaced the data array instance.\r\n                                unlistenArrayEvents(me._data, me);\r\n                            }\r\n\r\n                            listenArrayEvents(data, me);\r\n                            me._data = data;\r\n                        }\r\n\r\n                        // Re-sync meta data in case the user replaced the data array or if we missed\r\n                        // any updates and so make sure that we handle number of datapoints changing.\r\n                        me.resyncElements();\r\n                    },\r\n\r\n                    update: helpers.noop,\r\n\r\n                    transition: function(easingValue) {\r\n                        var meta = this.getMeta();\r\n                        var elements = meta.data || [];\r\n                        var ilen = elements.length;\r\n                        var i = 0;\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            elements[i].transition(easingValue);\r\n                        }\r\n\r\n                        if (meta.dataset) {\r\n                            meta.dataset.transition(easingValue);\r\n                        }\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var meta = this.getMeta();\r\n                        var elements = meta.data || [];\r\n                        var ilen = elements.length;\r\n                        var i = 0;\r\n\r\n                        if (meta.dataset) {\r\n                            meta.dataset.draw();\r\n                        }\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            elements[i].draw();\r\n                        }\r\n                    },\r\n\r\n                    removeHoverStyle: function(element, elementOpts) {\r\n                        var dataset = this.chart.data.datasets[element._datasetIndex];\r\n                        var index = element._index;\r\n                        var custom = element.custom || {};\r\n                        var valueOrDefault = helpers.valueAtIndexOrDefault;\r\n                        var model = element._model;\r\n\r\n                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\r\n                        model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\r\n                        model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\r\n                    },\r\n\r\n                    setHoverStyle: function(element) {\r\n                        var dataset = this.chart.data.datasets[element._datasetIndex];\r\n                        var index = element._index;\r\n                        var custom = element.custom || {};\r\n                        var valueOrDefault = helpers.valueAtIndexOrDefault;\r\n                        var getHoverColor = helpers.getHoverColor;\r\n                        var model = element._model;\r\n\r\n                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    resyncElements: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var data = me.getDataset().data;\r\n                        var numMeta = meta.data.length;\r\n                        var numData = data.length;\r\n\r\n                        if (numData < numMeta) {\r\n                            meta.data.splice(numData, numMeta - numData);\r\n                        } else if (numData > numMeta) {\r\n                            me.insertElements(numMeta, numData - numMeta);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    insertElements: function(start, count) {\r\n                        for (var i = 0; i < count; ++i) {\r\n                            this.addElementAndReset(start + i);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataPush: function() {\r\n                        this.insertElements(this.getDataset().data.length - 1, arguments.length);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataPop: function() {\r\n                        this.getMeta().data.pop();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataShift: function() {\r\n                        this.getMeta().data.shift();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataSplice: function(start, count) {\r\n                        this.getMeta().data.splice(start, count);\r\n                        this.insertElements(start, arguments.length - 2);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataUnshift: function() {\r\n                        this.insertElements(0, arguments.length);\r\n                    }\r\n                });\r\n\r\n                Chart.DatasetController.extend = helpers.inherits;\r\n            };\r\n        }, { \"36\": 36 }], 16: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            module.exports = {\r\n                /**\r\n                 * @private\r\n                 */\r\n                _set: function(scope, values) {\r\n                    return helpers.merge(this[scope] || (this[scope] = {}), values);\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 17: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var color = require(2);\r\n            var helpers = require(36);\r\n\r\n            function interpolate(start, view, model, ease) {\r\n                var keys = Object.keys(model);\r\n                var i, ilen, key, actual, origin, target, type, c0, c1;\r\n\r\n                for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n                    key = keys[i];\r\n\r\n                    target = model[key];\r\n\r\n                    // if a value is added to the model after pivot() has been called, the view\r\n                    // doesn't contain it, so let's initialize the view to the target value.\r\n                    if (!view.hasOwnProperty(key)) {\r\n                        view[key] = target;\r\n                    }\r\n\r\n                    actual = view[key];\r\n\r\n                    if (actual === target || key[0] === '_') {\r\n                        continue;\r\n                    }\r\n\r\n                    if (!start.hasOwnProperty(key)) {\r\n                        start[key] = actual;\r\n                    }\r\n\r\n                    origin = start[key];\r\n\r\n                    type = typeof target;\r\n\r\n                    if (type === typeof origin) {\r\n                        if (type === 'string') {\r\n                            c0 = color(origin);\r\n                            if (c0.valid) {\r\n                                c1 = color(target);\r\n                                if (c1.valid) {\r\n                                    view[key] = c1.mix(c0, ease).rgbString();\r\n                                    continue;\r\n                                }\r\n                            }\r\n                        } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\r\n                            view[key] = origin + (target - origin) * ease;\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    view[key] = target;\r\n                }\r\n            }\r\n\r\n            var Element = function(configuration) {\r\n                helpers.extend(this, configuration);\r\n                this.initialize.apply(this, arguments);\r\n            };\r\n\r\n            helpers.extend(Element.prototype, {\r\n                initialize: function() {\r\n                    this.hidden = false;\r\n                },\r\n\r\n                pivot: function() {\r\n                    var me = this;\r\n                    if (!me._view) {\r\n                        me._view = helpers.clone(me._model);\r\n                    }\r\n                    me._start = {};\r\n                    return me;\r\n                },\r\n\r\n                transition: function(ease) {\r\n                    var me = this;\r\n                    var model = me._model;\r\n                    var start = me._start;\r\n                    var view = me._view;\r\n\r\n                    // No animation -> No Transition\r\n                    if (!model || ease === 1) {\r\n                        me._view = model;\r\n                        me._start = null;\r\n                        return me;\r\n                    }\r\n\r\n                    if (!view) {\r\n                        view = me._view = {};\r\n                    }\r\n\r\n                    if (!start) {\r\n                        start = me._start = {};\r\n                    }\r\n\r\n                    interpolate(start, view, model, ease);\r\n\r\n                    return me;\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    return {\r\n                        x: this._model.x,\r\n                        y: this._model.y\r\n                    };\r\n                },\r\n\r\n                hasValue: function() {\r\n                    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\r\n                }\r\n            });\r\n\r\n            Element.extend = helpers.inherits;\r\n\r\n            module.exports = Element;\r\n        }, { \"2\": 2, \"36\": 36 }], 18: [function(require, module, exports) {\r\n            /* global window: false */\r\n            /* global document: false */\r\n            'use strict';\r\n\r\n            var color = require(2);\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n\r\n            module.exports = function(Chart) {\r\n                // -- Basic js utility methods\r\n\r\n                helpers.configMerge = function(/* objects ... */) {\r\n                    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\r\n                        merger: function(key, target, source, options) {\r\n                            var tval = target[key] || {};\r\n                            var sval = source[key];\r\n\r\n                            if (key === 'scales') {\r\n                                // scale config merging is complex. Add our own function here for that\r\n                                target[key] = helpers.scaleMerge(tval, sval);\r\n                            } else if (key === 'scale') {\r\n                                // used in polar area & radar charts since there is only one scale\r\n                                target[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\r\n                            } else {\r\n                                helpers._merger(key, target, source, options);\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n\r\n                helpers.scaleMerge = function(/* objects ... */) {\r\n                    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\r\n                        merger: function(key, target, source, options) {\r\n                            if (key === 'xAxes' || key === 'yAxes') {\r\n                                var slen = source[key].length;\r\n                                var i, type, scale;\r\n\r\n                                if (!target[key]) {\r\n                                    target[key] = [];\r\n                                }\r\n\r\n                                for (i = 0; i < slen; ++i) {\r\n                                    scale = source[key][i];\r\n                                    type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\r\n\r\n                                    if (i >= target[key].length) {\r\n                                        target[key].push({});\r\n                                    }\r\n\r\n                                    if (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\r\n                                        // new/untyped scale or type changed: let's apply the new defaults\r\n                                        // then merge source scale to correctly overwrite the defaults.\r\n                                        helpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\r\n                                    } else {\r\n                                        // scales type are the same\r\n                                        helpers.merge(target[key][i], scale);\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                helpers._merger(key, target, source, options);\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n\r\n                helpers.where = function(collection, filterCallback) {\r\n                    if (helpers.isArray(collection) && Array.prototype.filter) {\r\n                        return collection.filter(filterCallback);\r\n                    }\r\n                    var filtered = [];\r\n\r\n                    helpers.each(collection, function(item) {\r\n                        if (filterCallback(item)) {\r\n                            filtered.push(item);\r\n                        }\r\n                    });\r\n\r\n                    return filtered;\r\n                };\r\n                helpers.findIndex = Array.prototype.findIndex ?\r\n                    function(array, callback, scope) {\r\n                        return array.findIndex(callback, scope);\r\n                    } :\r\n                    function(array, callback, scope) {\r\n                        scope = scope === undefined ? array : scope;\r\n                        for (var i = 0, ilen = array.length; i < ilen; ++i) {\r\n                            if (callback.call(scope, array[i], i, array)) {\r\n                                return i;\r\n                            }\r\n                        }\r\n                        return -1;\r\n                    };\r\n                helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n                    // Default to start of the array\r\n                    if (helpers.isNullOrUndef(startIndex)) {\r\n                        startIndex = -1;\r\n                    }\r\n                    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\r\n                        var currentItem = arrayToSearch[i];\r\n                        if (filterCallback(currentItem)) {\r\n                            return currentItem;\r\n                        }\r\n                    }\r\n                };\r\n                helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n                    // Default to end of the array\r\n                    if (helpers.isNullOrUndef(startIndex)) {\r\n                        startIndex = arrayToSearch.length;\r\n                    }\r\n                    for (var i = startIndex - 1; i >= 0; i--) {\r\n                        var currentItem = arrayToSearch[i];\r\n                        if (filterCallback(currentItem)) {\r\n                            return currentItem;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // -- Math methods\r\n                helpers.isNumber = function(n) {\r\n                    return !isNaN(parseFloat(n)) && isFinite(n);\r\n                };\r\n                helpers.almostEquals = function(x, y, epsilon) {\r\n                    return Math.abs(x - y) < epsilon;\r\n                };\r\n                helpers.almostWhole = function(x, epsilon) {\r\n                    var rounded = Math.round(x);\r\n                    return (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\r\n                };\r\n                helpers.max = function(array) {\r\n                    return array.reduce(function(max, value) {\r\n                        if (!isNaN(value)) {\r\n                            return Math.max(max, value);\r\n                        }\r\n                        return max;\r\n                    }, Number.NEGATIVE_INFINITY);\r\n                };\r\n                helpers.min = function(array) {\r\n                    return array.reduce(function(min, value) {\r\n                        if (!isNaN(value)) {\r\n                            return Math.min(min, value);\r\n                        }\r\n                        return min;\r\n                    }, Number.POSITIVE_INFINITY);\r\n                };\r\n                helpers.sign = Math.sign ?\r\n                    function(x) {\r\n                        return Math.sign(x);\r\n                    } :\r\n                    function(x) {\r\n                        x = +x; // convert to a number\r\n                        if (x === 0 || isNaN(x)) {\r\n                            return x;\r\n                        }\r\n                        return x > 0 ? 1 : -1;\r\n                    };\r\n                helpers.log10 = Math.log10 ?\r\n                    function(x) {\r\n                        return Math.log10(x);\r\n                    } :\r\n                    function(x) {\r\n                        var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\r\n                        // Check for whole powers of 10,\r\n                        // which due to floating point rounding error should be corrected.\r\n                        var powerOf10 = Math.round(exponent);\r\n                        var isPowerOf10 = x === Math.pow(10, powerOf10);\r\n\r\n                        return isPowerOf10 ? powerOf10 : exponent;\r\n                    };\r\n                helpers.toRadians = function(degrees) {\r\n                    return degrees * (Math.PI / 180);\r\n                };\r\n                helpers.toDegrees = function(radians) {\r\n                    return radians * (180 / Math.PI);\r\n                };\r\n                // Gets the angle from vertical upright to the point about a centre.\r\n                helpers.getAngleFromPoint = function(centrePoint, anglePoint) {\r\n                    var distanceFromXCenter = anglePoint.x - centrePoint.x;\r\n                    var distanceFromYCenter = anglePoint.y - centrePoint.y;\r\n                    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n\r\n                    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n\r\n                    if (angle < (-0.5 * Math.PI)) {\r\n                        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\r\n                    }\r\n\r\n                    return {\r\n                        angle: angle,\r\n                        distance: radialDistanceFromCenter\r\n                    };\r\n                };\r\n                helpers.distanceBetweenPoints = function(pt1, pt2) {\r\n                    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\r\n                };\r\n                helpers.aliasPixel = function(pixelWidth) {\r\n                    return (pixelWidth % 2 === 0) ? 0 : 0.5;\r\n                };\r\n                helpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\r\n                    // Props to Rob Spencer at scaled innovation for his post on splining between points\r\n                    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\r\n\r\n                    // This function must also respect \"skipped\" points\r\n\r\n                    var previous = firstPoint.skip ? middlePoint : firstPoint;\r\n                    var current = middlePoint;\r\n                    var next = afterPoint.skip ? middlePoint : afterPoint;\r\n\r\n                    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\r\n                    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\r\n\r\n                    var s01 = d01 / (d01 + d12);\r\n                    var s12 = d12 / (d01 + d12);\r\n\r\n                    // If all points are the same, s01 & s02 will be inf\r\n                    s01 = isNaN(s01) ? 0 : s01;\r\n                    s12 = isNaN(s12) ? 0 : s12;\r\n\r\n                    var fa = t * s01; // scaling factor for triangle Ta\r\n                    var fb = t * s12;\r\n\r\n                    return {\r\n                        previous: {\r\n                            x: current.x - fa * (next.x - previous.x),\r\n                            y: current.y - fa * (next.y - previous.y)\r\n                        },\r\n                        next: {\r\n                            x: current.x + fb * (next.x - previous.x),\r\n                            y: current.y + fb * (next.y - previous.y)\r\n                        }\r\n                    };\r\n                };\r\n                helpers.EPSILON = Number.EPSILON || 1e-14;\r\n                helpers.splineCurveMonotone = function(points) {\r\n                    // This function calculates Bézier control points in a similar way than |splineCurve|,\r\n                    // but preserves monotonicity of the provided data and ensures no local extremums are added\r\n                    // between the dataset discrete points due to the interpolation.\r\n                    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\r\n\r\n                    var pointsWithTangents = (points || []).map(function(point) {\r\n                        return {\r\n                            model: point._model,\r\n                            deltaK: 0,\r\n                            mK: 0\r\n                        };\r\n                    });\r\n\r\n                    // Calculate slopes (deltaK) and initialize tangents (mK)\r\n                    var pointsLen = pointsWithTangents.length;\r\n                    var i, pointBefore, pointCurrent, pointAfter;\r\n                    for (i = 0; i < pointsLen; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        if (pointCurrent.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n                        if (pointAfter && !pointAfter.model.skip) {\r\n                            var slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\r\n\r\n                            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\r\n                            pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\r\n                        }\r\n\r\n                        if (!pointBefore || pointBefore.model.skip) {\r\n                            pointCurrent.mK = pointCurrent.deltaK;\r\n                        } else if (!pointAfter || pointAfter.model.skip) {\r\n                            pointCurrent.mK = pointBefore.deltaK;\r\n                        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\r\n                            pointCurrent.mK = 0;\r\n                        } else {\r\n                            pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\r\n                        }\r\n                    }\r\n\r\n                    // Adjust tangents to ensure monotonic properties\r\n                    var alphaK, betaK, tauK, squaredMagnitude;\r\n                    for (i = 0; i < pointsLen - 1; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        pointAfter = pointsWithTangents[i + 1];\r\n                        if (pointCurrent.model.skip || pointAfter.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\r\n                            pointCurrent.mK = pointAfter.mK = 0;\r\n                            continue;\r\n                        }\r\n\r\n                        alphaK = pointCurrent.mK / pointCurrent.deltaK;\r\n                        betaK = pointAfter.mK / pointCurrent.deltaK;\r\n                        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\r\n                        if (squaredMagnitude <= 9) {\r\n                            continue;\r\n                        }\r\n\r\n                        tauK = 3 / Math.sqrt(squaredMagnitude);\r\n                        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\r\n                        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\r\n                    }\r\n\r\n                    // Compute control points\r\n                    var deltaX;\r\n                    for (i = 0; i < pointsLen; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        if (pointCurrent.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n                        if (pointBefore && !pointBefore.model.skip) {\r\n                            deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\r\n                            pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\r\n                            pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\r\n                        }\r\n                        if (pointAfter && !pointAfter.model.skip) {\r\n                            deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\r\n                            pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\r\n                            pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\r\n                        }\r\n                    }\r\n                };\r\n                helpers.nextItem = function(collection, index, loop) {\r\n                    if (loop) {\r\n                        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\r\n                    }\r\n                    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\r\n                };\r\n                helpers.previousItem = function(collection, index, loop) {\r\n                    if (loop) {\r\n                        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\r\n                    }\r\n                    return index <= 0 ? collection[0] : collection[index - 1];\r\n                };\r\n                // Implementation of the nice number algorithm used in determining where axis labels will go\r\n                helpers.niceNum = function(range, round) {\r\n                    var exponent = Math.floor(helpers.log10(range));\r\n                    var fraction = range / Math.pow(10, exponent);\r\n                    var niceFraction;\r\n\r\n                    if (round) {\r\n                        if (fraction < 1.5) {\r\n                            niceFraction = 1;\r\n                        } else if (fraction < 3) {\r\n                            niceFraction = 2;\r\n                        } else if (fraction < 7) {\r\n                            niceFraction = 5;\r\n                        } else {\r\n                            niceFraction = 10;\r\n                        }\r\n                    } else if (fraction <= 1.0) {\r\n                        niceFraction = 1;\r\n                    } else if (fraction <= 2) {\r\n                        niceFraction = 2;\r\n                    } else if (fraction <= 5) {\r\n                        niceFraction = 5;\r\n                    } else {\r\n                        niceFraction = 10;\r\n                    }\r\n\r\n                    return niceFraction * Math.pow(10, exponent);\r\n                };\r\n                // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n                helpers.requestAnimFrame = (function() {\r\n                    if (typeof window === 'undefined') {\r\n                        return function(callback) {\r\n                            callback();\r\n                        };\r\n                    }\r\n                    return window.requestAnimationFrame ||\r\n                        window.webkitRequestAnimationFrame ||\r\n                        window.mozRequestAnimationFrame ||\r\n                        window.oRequestAnimationFrame ||\r\n                        window.msRequestAnimationFrame ||\r\n                        function(callback) {\r\n                            return window.setTimeout(callback, 1000 / 60);\r\n                        };\r\n                }());\r\n                // -- DOM methods\r\n                helpers.getRelativePosition = function(evt, chart) {\r\n                    var mouseX, mouseY;\r\n                    var e = evt.originalEvent || evt;\r\n                    var canvas = evt.currentTarget || evt.srcElement;\r\n                    var boundingRect = canvas.getBoundingClientRect();\r\n\r\n                    var touches = e.touches;\r\n                    if (touches && touches.length > 0) {\r\n                        mouseX = touches[0].clientX;\r\n                        mouseY = touches[0].clientY;\r\n                    } else {\r\n                        mouseX = e.clientX;\r\n                        mouseY = e.clientY;\r\n                    }\r\n\r\n                    // Scale mouse coordinates into canvas coordinates\r\n                    // by following the pattern laid out by 'jerryj' in the comments of\r\n                    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\r\n                    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\r\n                    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\r\n                    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\r\n                    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\r\n                    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\r\n                    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\r\n\r\n                    // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\r\n                    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\r\n                    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\r\n                    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\r\n\r\n                    return {\r\n                        x: mouseX,\r\n                        y: mouseY\r\n                    };\r\n                };\r\n\r\n                // Private helper function to convert max-width/max-height values that may be percentages into a number\r\n                function parseMaxStyle(styleValue, node, parentProperty) {\r\n                    var valueInPixels;\r\n                    if (typeof styleValue === 'string') {\r\n                        valueInPixels = parseInt(styleValue, 10);\r\n\r\n                        if (styleValue.indexOf('%') !== -1) {\r\n                            // percentage * size in dimension\r\n                            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\r\n                        }\r\n                    } else {\r\n                        valueInPixels = styleValue;\r\n                    }\r\n\r\n                    return valueInPixels;\r\n                }\r\n\r\n                /**\r\n                 * Returns if the given value contains an effective constraint.\r\n                 * @private\r\n                 */\r\n                function isConstrainedValue(value) {\r\n                    return value !== undefined && value !== null && value !== 'none';\r\n                }\r\n\r\n                // Private helper to get a constraint dimension\r\n                // @param domNode : the node to check the constraint on\r\n                // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\r\n                // @param percentageProperty : property of parent to use when calculating width as a percentage\r\n                // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\r\n                function getConstraintDimension(domNode, maxStyle, percentageProperty) {\r\n                    var view = document.defaultView;\r\n                    var parentNode = domNode.parentNode;\r\n                    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\r\n                    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\r\n                    var hasCNode = isConstrainedValue(constrainedNode);\r\n                    var hasCContainer = isConstrainedValue(constrainedContainer);\r\n                    var infinity = Number.POSITIVE_INFINITY;\r\n\r\n                    if (hasCNode || hasCContainer) {\r\n                        return Math.min(\r\n                            hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\r\n                            hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\r\n                    }\r\n\r\n                    return 'none';\r\n                }\r\n                // returns Number or undefined if no constraint\r\n                helpers.getConstraintWidth = function(domNode) {\r\n                    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\r\n                };\r\n                // returns Number or undefined if no constraint\r\n                helpers.getConstraintHeight = function(domNode) {\r\n                    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\r\n                };\r\n                helpers.getMaximumWidth = function(domNode) {\r\n                    var container = domNode.parentNode;\r\n                    if (!container) {\r\n                        return domNode.clientWidth;\r\n                    }\r\n\r\n                    var paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\r\n                    var paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\r\n                    var w = container.clientWidth - paddingLeft - paddingRight;\r\n                    var cw = helpers.getConstraintWidth(domNode);\r\n                    return isNaN(cw) ? w : Math.min(w, cw);\r\n                };\r\n                helpers.getMaximumHeight = function(domNode) {\r\n                    var container = domNode.parentNode;\r\n                    if (!container) {\r\n                        return domNode.clientHeight;\r\n                    }\r\n\r\n                    var paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\r\n                    var paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\r\n                    var h = container.clientHeight - paddingTop - paddingBottom;\r\n                    var ch = helpers.getConstraintHeight(domNode);\r\n                    return isNaN(ch) ? h : Math.min(h, ch);\r\n                };\r\n                helpers.getStyle = function(el, property) {\r\n                    return el.currentStyle ?\r\n                        el.currentStyle[property] :\r\n                        document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\r\n                };\r\n                helpers.retinaScale = function(chart, forceRatio) {\r\n                    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\r\n                    if (pixelRatio === 1) {\r\n                        return;\r\n                    }\r\n\r\n                    var canvas = chart.canvas;\r\n                    var height = chart.height;\r\n                    var width = chart.width;\r\n\r\n                    canvas.height = height * pixelRatio;\r\n                    canvas.width = width * pixelRatio;\r\n                    chart.ctx.scale(pixelRatio, pixelRatio);\r\n\r\n                    // If no style has been set on the canvas, the render size is used as display size,\r\n                    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\r\n                    // See https://github.com/chartjs/Chart.js/issues/3575\r\n                    if (!canvas.style.height && !canvas.style.width) {\r\n                        canvas.style.height = height + 'px';\r\n                        canvas.style.width = width + 'px';\r\n                    }\r\n                };\r\n                // -- Canvas methods\r\n                helpers.fontString = function(pixelSize, fontStyle, fontFamily) {\r\n                    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\r\n                };\r\n                helpers.longestText = function(ctx, font, arrayOfThings, cache) {\r\n                    cache = cache || {};\r\n                    var data = cache.data = cache.data || {};\r\n                    var gc = cache.garbageCollect = cache.garbageCollect || [];\r\n\r\n                    if (cache.font !== font) {\r\n                        data = cache.data = {};\r\n                        gc = cache.garbageCollect = [];\r\n                        cache.font = font;\r\n                    }\r\n\r\n                    ctx.font = font;\r\n                    var longest = 0;\r\n                    helpers.each(arrayOfThings, function(thing) {\r\n                        // Undefined strings and arrays should not be measured\r\n                        if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\r\n                            longest = helpers.measureText(ctx, data, gc, longest, thing);\r\n                        } else if (helpers.isArray(thing)) {\r\n                            // if it is an array lets measure each element\r\n                            // to do maybe simplify this function a bit so we can do this more recursively?\r\n                            helpers.each(thing, function(nestedThing) {\r\n                                // Undefined strings and arrays should not be measured\r\n                                if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\r\n                                    longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    var gcLen = gc.length / 2;\r\n                    if (gcLen > arrayOfThings.length) {\r\n                        for (var i = 0; i < gcLen; i++) {\r\n                            delete data[gc[i]];\r\n                        }\r\n                        gc.splice(0, gcLen);\r\n                    }\r\n                    return longest;\r\n                };\r\n                helpers.measureText = function(ctx, data, gc, longest, string) {\r\n                    var textWidth = data[string];\r\n                    if (!textWidth) {\r\n                        textWidth = data[string] = ctx.measureText(string).width;\r\n                        gc.push(string);\r\n                    }\r\n                    if (textWidth > longest) {\r\n                        longest = textWidth;\r\n                    }\r\n                    return longest;\r\n                };\r\n                helpers.numberOfLabelLines = function(arrayOfThings) {\r\n                    var numberOfLines = 1;\r\n                    helpers.each(arrayOfThings, function(thing) {\r\n                        if (helpers.isArray(thing)) {\r\n                            if (thing.length > numberOfLines) {\r\n                                numberOfLines = thing.length;\r\n                            }\r\n                        }\r\n                    });\r\n                    return numberOfLines;\r\n                };\r\n\r\n                helpers.color = !color ?\r\n                    function(value) {\r\n                        console.error('Color.js not found!');\r\n                        return value;\r\n                    } :\r\n                    function(value) {\r\n                        /* global CanvasGradient */\r\n                        if (value instanceof CanvasGradient) {\r\n                            value = defaults.global.defaultColor;\r\n                        }\r\n\r\n                        return color(value);\r\n                    };\r\n\r\n                helpers.getHoverColor = function(colorValue) {\r\n                    /* global CanvasPattern */\r\n                    return (colorValue instanceof CanvasPattern) ?\r\n                        colorValue :\r\n                        helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"2\": 2, \"36\": 36 }], 19: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Helper function to get relative position for an event\r\n             * @param {Event|IEvent} event - The event to get the position for\r\n             * @param {Chart} chart - The chart\r\n             * @returns {Point} the event position\r\n             */\r\n            function getRelativePosition(e, chart) {\r\n                if (e.native) {\r\n                    return {\r\n                        x: e.x,\r\n                        y: e.y\r\n                    };\r\n                }\r\n\r\n                return helpers.getRelativePosition(e, chart);\r\n            }\r\n\r\n            /**\r\n             * Helper function to traverse all of the visible elements in the chart\r\n             * @param chart {chart} the chart\r\n             * @param handler {Function} the callback to execute for each visible item\r\n             */\r\n            function parseVisibleItems(chart, handler) {\r\n                var datasets = chart.data.datasets;\r\n                var meta, i, j, ilen, jlen;\r\n\r\n                for (i = 0, ilen = datasets.length; i < ilen; ++i) {\r\n                    if (!chart.isDatasetVisible(i)) {\r\n                        continue;\r\n                    }\r\n\r\n                    meta = chart.getDatasetMeta(i);\r\n                    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\r\n                        var element = meta.data[j];\r\n                        if (!element._view.skip) {\r\n                            handler(element);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the items that intersect the event position\r\n             * @param items {ChartElement[]} elements to filter\r\n             * @param position {Point} the point to be nearest to\r\n             * @return {ChartElement[]} the nearest items\r\n             */\r\n            function getIntersectItems(chart, position) {\r\n                var elements = [];\r\n\r\n                parseVisibleItems(chart, function(element) {\r\n                    if (element.inRange(position.x, position.y)) {\r\n                        elements.push(element);\r\n                    }\r\n                });\r\n\r\n                return elements;\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the items nearest to the event position considering all visible items in teh chart\r\n             * @param chart {Chart} the chart to look at elements from\r\n             * @param position {Point} the point to be nearest to\r\n             * @param intersect {Boolean} if true, only consider items that intersect the position\r\n             * @param distanceMetric {Function} function to provide the distance between points\r\n             * @return {ChartElement[]} the nearest items\r\n             */\r\n            function getNearestItems(chart, position, intersect, distanceMetric) {\r\n                var minDistance = Number.POSITIVE_INFINITY;\r\n                var nearestItems = [];\r\n\r\n                parseVisibleItems(chart, function(element) {\r\n                    if (intersect && !element.inRange(position.x, position.y)) {\r\n                        return;\r\n                    }\r\n\r\n                    var center = element.getCenterPoint();\r\n                    var distance = distanceMetric(position, center);\r\n\r\n                    if (distance < minDistance) {\r\n                        nearestItems = [element];\r\n                        minDistance = distance;\r\n                    } else if (distance === minDistance) {\r\n                        // Can have multiple items at the same distance in which case we sort by size\r\n                        nearestItems.push(element);\r\n                    }\r\n                });\r\n\r\n                return nearestItems;\r\n            }\r\n\r\n            /**\r\n             * Get a distance metric function for two points based on the\r\n             * axis mode setting\r\n             * @param {String} axis the axis mode. x|y|xy\r\n             */\r\n            function getDistanceMetricForAxis(axis) {\r\n                var useX = axis.indexOf('x') !== -1;\r\n                var useY = axis.indexOf('y') !== -1;\r\n\r\n                return function(pt1, pt2) {\r\n                    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n                    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n                    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n                };\r\n            }\r\n\r\n            function indexMode(chart, e, options) {\r\n                var position = getRelativePosition(e, chart);\r\n                // Default axis for index mode is 'x' to match old behaviour\r\n                options.axis = options.axis || 'x';\r\n                var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\r\n                var elements = [];\r\n\r\n                if (!items.length) {\r\n                    return [];\r\n                }\r\n\r\n                chart.data.datasets.forEach(function(dataset, datasetIndex) {\r\n                    if (chart.isDatasetVisible(datasetIndex)) {\r\n                        var meta = chart.getDatasetMeta(datasetIndex);\r\n                        var element = meta.data[items[0]._index];\r\n\r\n                        // don't count items that are skipped (null data)\r\n                        if (element && !element._view.skip) {\r\n                            elements.push(element);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                return elements;\r\n            }\r\n\r\n            /**\r\n             * @interface IInteractionOptions\r\n             */\r\n            /**\r\n             * If true, only consider items that intersect the point\r\n             * @name IInterfaceOptions#boolean\r\n             * @type Boolean\r\n             */\r\n\r\n            /**\r\n             * Contains interaction related functions\r\n             * @namespace Chart.Interaction\r\n             */\r\n            module.exports = {\r\n                // Helper function for different modes\r\n                modes: {\r\n                    single: function(chart, e) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var elements = [];\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                elements.push(element);\r\n                                return elements;\r\n                            }\r\n                        });\r\n\r\n                        return elements.slice(0, 1);\r\n                    },\r\n\r\n                    /**\r\n                     * @function Chart.Interaction.modes.label\r\n                     * @deprecated since version 2.4.0\r\n                     * @todo remove at version 3\r\n                     * @private\r\n                     */\r\n                    label: indexMode,\r\n\r\n                    /**\r\n                     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\r\n                     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\r\n                     * @function Chart.Interaction.modes.index\r\n                     * @since v2.4.0\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use during interaction\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    index: indexMode,\r\n\r\n                    /**\r\n                     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\r\n                     * If the options.intersect is false, we find the nearest item and return the items in that dataset\r\n                     * @function Chart.Interaction.modes.dataset\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use during interaction\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    dataset: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        options.axis = options.axis || 'xy';\r\n                        var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\r\n\r\n                        if (items.length > 0) {\r\n                            items = chart.getDatasetMeta(items[0]._datasetIndex).data;\r\n                        }\r\n\r\n                        return items;\r\n                    },\r\n\r\n                    /**\r\n                     * @function Chart.Interaction.modes.x-axis\r\n                     * @deprecated since version 2.4.0. Use index mode and intersect == true\r\n                     * @todo remove at version 3\r\n                     * @private\r\n                     */\r\n                    'x-axis': function(chart, e) {\r\n                        return indexMode(chart, e, { intersect: false });\r\n                    },\r\n\r\n                    /**\r\n                     * Point mode returns all elements that hit test based on the event position\r\n                     * of the event\r\n                     * @function Chart.Interaction.modes.intersect\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    point: function(chart, e) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        return getIntersectItems(chart, position);\r\n                    },\r\n\r\n                    /**\r\n                     * nearest mode returns the element closest to the point\r\n                     * @function Chart.Interaction.modes.intersect\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    nearest: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        options.axis = options.axis || 'xy';\r\n                        var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                        var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\r\n\r\n                        // We have multiple items at the same distance from the event. Now sort by smallest\r\n                        if (nearestItems.length > 1) {\r\n                            nearestItems.sort(function(a, b) {\r\n                                var sizeA = a.getArea();\r\n                                var sizeB = b.getArea();\r\n                                var ret = sizeA - sizeB;\r\n\r\n                                if (ret === 0) {\r\n                                    // if equal sort by dataset index\r\n                                    ret = a._datasetIndex - b._datasetIndex;\r\n                                }\r\n\r\n                                return ret;\r\n                            });\r\n                        }\r\n\r\n                        // Return only 1 item\r\n                        return nearestItems.slice(0, 1);\r\n                    },\r\n\r\n                    /**\r\n                     * x mode returns the elements that hit-test at the current x coordinate\r\n                     * @function Chart.Interaction.modes.x\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    x: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var items = [];\r\n                        var intersectsItem = false;\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inXRange(position.x)) {\r\n                                items.push(element);\r\n                            }\r\n\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                intersectsItem = true;\r\n                            }\r\n                        });\r\n\r\n                        // If we want to trigger on an intersect and we don't have any items\r\n                        // that intersect the position, return nothing\r\n                        if (options.intersect && !intersectsItem) {\r\n                            items = [];\r\n                        }\r\n                        return items;\r\n                    },\r\n\r\n                    /**\r\n                     * y mode returns the elements that hit-test at the current y coordinate\r\n                     * @function Chart.Interaction.modes.y\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    y: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var items = [];\r\n                        var intersectsItem = false;\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inYRange(position.y)) {\r\n                                items.push(element);\r\n                            }\r\n\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                intersectsItem = true;\r\n                            }\r\n                        });\r\n\r\n                        // If we want to trigger on an intersect and we don't have any items\r\n                        // that intersect the position, return nothing\r\n                        if (options.intersect && !intersectsItem) {\r\n                            items = [];\r\n                        }\r\n                        return items;\r\n                    }\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 20: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n\r\n            defaults._set('global', {\r\n                responsive: true,\r\n                responsiveAnimationDuration: 0,\r\n                maintainAspectRatio: true,\r\n                events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\r\n                hover: {\r\n                    onHover: null,\r\n                    mode: 'nearest',\r\n                    intersect: true,\r\n                    animationDuration: 400\r\n                },\r\n                onClick: null,\r\n                defaultColor: 'rgba(0,0,0,0.1)',\r\n                defaultFontColor: '#666',\r\n                defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n                defaultFontSize: 12,\r\n                defaultFontStyle: 'normal',\r\n                showLines: true,\r\n\r\n                // Element defaults defined in element extensions\r\n                elements: {},\r\n\r\n                // Layout options such as padding\r\n                layout: {\r\n                    padding: {\r\n                        top: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        left: 0\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = function() {\r\n                // Occupy the global variable of Chart, and create a simple base class\r\n                var Chart = function(item, config) {\r\n                    this.construct(item, config);\r\n                    return this;\r\n                };\r\n\r\n                Chart.Chart = Chart;\r\n\r\n                return Chart;\r\n            };\r\n        }, { \"16\": 16 }], 21: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            function filterByPosition(array, position) {\r\n                return helpers.where(array, function(v) {\r\n                    return v.position === position;\r\n                });\r\n            }\r\n\r\n            function sortByWeight(array, reverse) {\r\n                array.forEach(function(v, i) {\r\n                    v._tmpIndex_ = i;\r\n                    return v;\r\n                });\r\n                array.sort(function(a, b) {\r\n                    var v0 = reverse ? b : a;\r\n                    var v1 = reverse ? a : b;\r\n                    return v0.weight === v1.weight ?\r\n                        v0._tmpIndex_ - v1._tmpIndex_ :\r\n                        v0.weight - v1.weight;\r\n                });\r\n                array.forEach(function(v) {\r\n                    delete v._tmpIndex_;\r\n                });\r\n            }\r\n\r\n            /**\r\n             * @interface ILayoutItem\r\n             * @prop {String} position - The position of the item in the chart layout. Possible values are\r\n             * 'left', 'top', 'right', 'bottom', and 'chartArea'\r\n             * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\r\n             * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\r\n             * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\r\n             * @prop {Function} update - Takes two parameters: width and height. Returns size of item\r\n             * @prop {Function} getPadding -  Returns an object with padding on the edges\r\n             * @prop {Number} width - Width of item. Must be valid after update()\r\n             * @prop {Number} height - Height of item. Must be valid after update()\r\n             * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\r\n             */\r\n\r\n            // The layout service is very self explanatory.  It's responsible for the layout within a chart.\r\n            // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\r\n            // It is this service's responsibility of carrying out that layout.\r\n            module.exports = {\r\n                defaults: {},\r\n\r\n                /**\r\n                 * Register a box to a chart.\r\n                 * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\r\n                 * @param {Chart} chart - the chart to use\r\n                 * @param {ILayoutItem} item - the item to add to be layed out\r\n                 */\r\n                addBox: function(chart, item) {\r\n                    if (!chart.boxes) {\r\n                        chart.boxes = [];\r\n                    }\r\n\r\n                    // initialize item with default values\r\n                    item.fullWidth = item.fullWidth || false;\r\n                    item.position = item.position || 'top';\r\n                    item.weight = item.weight || 0;\r\n\r\n                    chart.boxes.push(item);\r\n                },\r\n\r\n                /**\r\n                 * Remove a layoutItem from a chart\r\n                 * @param {Chart} chart - the chart to remove the box from\r\n                 * @param {Object} layoutItem - the item to remove from the layout\r\n                 */\r\n                removeBox: function(chart, layoutItem) {\r\n                    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n                    if (index !== -1) {\r\n                        chart.boxes.splice(index, 1);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Sets (or updates) options on the given `item`.\r\n                 * @param {Chart} chart - the chart in which the item lives (or will be added to)\r\n                 * @param {Object} item - the item to configure with the given options\r\n                 * @param {Object} options - the new item options.\r\n                 */\r\n                configure: function(chart, item, options) {\r\n                    var props = ['fullWidth', 'position', 'weight'];\r\n                    var ilen = props.length;\r\n                    var i = 0;\r\n                    var prop;\r\n\r\n                    for (; i < ilen; ++i) {\r\n                        prop = props[i];\r\n                        if (options.hasOwnProperty(prop)) {\r\n                            item[prop] = options[prop];\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Fits boxes of the given chart into the given size by having each box measure itself\r\n                 * then running a fitting algorithm\r\n                 * @param {Chart} chart - the chart\r\n                 * @param {Number} width - the width to fit into\r\n                 * @param {Number} height - the height to fit into\r\n                 */\r\n                update: function(chart, width, height) {\r\n                    if (!chart) {\r\n                        return;\r\n                    }\r\n\r\n                    var layoutOptions = chart.options.layout || {};\r\n                    var padding = helpers.options.toPadding(layoutOptions.padding);\r\n                    var leftPadding = padding.left;\r\n                    var rightPadding = padding.right;\r\n                    var topPadding = padding.top;\r\n                    var bottomPadding = padding.bottom;\r\n\r\n                    var leftBoxes = filterByPosition(chart.boxes, 'left');\r\n                    var rightBoxes = filterByPosition(chart.boxes, 'right');\r\n                    var topBoxes = filterByPosition(chart.boxes, 'top');\r\n                    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\r\n                    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\r\n\r\n                    // Sort boxes by weight. A higher weight is further away from the chart area\r\n                    sortByWeight(leftBoxes, true);\r\n                    sortByWeight(rightBoxes, false);\r\n                    sortByWeight(topBoxes, true);\r\n                    sortByWeight(bottomBoxes, false);\r\n\r\n                    // Essentially we now have any number of boxes on each of the 4 sides.\r\n                    // Our canvas looks like the following.\r\n                    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\r\n                    // B1 is the bottom axis\r\n                    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\r\n                    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\r\n                    // an error will be thrown.\r\n                    //\r\n                    // |----------------------------------------------------|\r\n                    // |                  T1 (Full Width)                   |\r\n                    // |----------------------------------------------------|\r\n                    // |    |    |                 T2                  |    |\r\n                    // |    |----|-------------------------------------|----|\r\n                    // |    |    | C1 |                           | C2 |    |\r\n                    // |    |    |----|                           |----|    |\r\n                    // |    |    |                                     |    |\r\n                    // | L1 | L2 |           ChartArea (C0)            | R1 |\r\n                    // |    |    |                                     |    |\r\n                    // |    |    |----|                           |----|    |\r\n                    // |    |    | C3 |                           | C4 |    |\r\n                    // |    |----|-------------------------------------|----|\r\n                    // |    |    |                 B1                  |    |\r\n                    // |----------------------------------------------------|\r\n                    // |                  B2 (Full Width)                   |\r\n                    // |----------------------------------------------------|\r\n                    //\r\n                    // What we do to find the best sizing, we do the following\r\n                    // 1. Determine the minimum size of the chart area.\r\n                    // 2. Split the remaining width equally between each vertical axis\r\n                    // 3. Split the remaining height equally between each horizontal axis\r\n                    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\r\n                    // 5. Adjust the sizes of each axis based on it's minimum reported size.\r\n                    // 6. Refit each axis\r\n                    // 7. Position each axis in the final location\r\n                    // 8. Tell the chart the final location of the chart area\r\n                    // 9. Tell any axes that overlay the chart area the positions of the chart area\r\n\r\n                    // Step 1\r\n                    var chartWidth = width - leftPadding - rightPadding;\r\n                    var chartHeight = height - topPadding - bottomPadding;\r\n                    var chartAreaWidth = chartWidth / 2; // min 50%\r\n                    var chartAreaHeight = chartHeight / 2; // min 50%\r\n\r\n                    // Step 2\r\n                    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\r\n\r\n                    // Step 3\r\n                    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\r\n\r\n                    // Step 4\r\n                    var maxChartAreaWidth = chartWidth;\r\n                    var maxChartAreaHeight = chartHeight;\r\n                    var minBoxSizes = [];\r\n\r\n                    function getMinimumBoxSize(box) {\r\n                        var minSize;\r\n                        var isHorizontal = box.isHorizontal();\r\n\r\n                        if (isHorizontal) {\r\n                            minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\r\n                            maxChartAreaHeight -= minSize.height;\r\n                        } else {\r\n                            minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\r\n                            maxChartAreaWidth -= minSize.width;\r\n                        }\r\n\r\n                        minBoxSizes.push({\r\n                            horizontal: isHorizontal,\r\n                            minSize: minSize,\r\n                            box: box,\r\n                        });\r\n                    }\r\n\r\n                    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\r\n\r\n                    // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\r\n                    var maxHorizontalLeftPadding = 0;\r\n                    var maxHorizontalRightPadding = 0;\r\n                    var maxVerticalTopPadding = 0;\r\n                    var maxVerticalBottomPadding = 0;\r\n\r\n                    helpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\r\n                        if (horizontalBox.getPadding) {\r\n                            var boxPadding = horizontalBox.getPadding();\r\n                            maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\r\n                            maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\r\n                        }\r\n                    });\r\n\r\n                    helpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\r\n                        if (verticalBox.getPadding) {\r\n                            var boxPadding = verticalBox.getPadding();\r\n                            maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\r\n                            maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\r\n                        }\r\n                    });\r\n\r\n                    // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\r\n                    // be if the axes are drawn at their minimum sizes.\r\n                    // Steps 5 & 6\r\n                    var totalLeftBoxesWidth = leftPadding;\r\n                    var totalRightBoxesWidth = rightPadding;\r\n                    var totalTopBoxesHeight = topPadding;\r\n                    var totalBottomBoxesHeight = bottomPadding;\r\n\r\n                    // Function to fit a box\r\n                    function fitBox(box) {\r\n                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\r\n                            return minBox.box === box;\r\n                        });\r\n\r\n                        if (minBoxSize) {\r\n                            if (box.isHorizontal()) {\r\n                                var scaleMargin = {\r\n                                    left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\r\n                                    right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\r\n                                    top: 0,\r\n                                    bottom: 0\r\n                                };\r\n\r\n                                // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\r\n                                // on the margin. Sometimes they need to increase in size slightly\r\n                                box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\r\n                            } else {\r\n                                box.update(minBoxSize.minSize.width, maxChartAreaHeight);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Update, and calculate the left and right margins for the horizontal boxes\r\n                    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\r\n\r\n                    helpers.each(leftBoxes, function(box) {\r\n                        totalLeftBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(rightBoxes, function(box) {\r\n                        totalRightBoxesWidth += box.width;\r\n                    });\r\n\r\n                    // Set the Left and Right margins for the horizontal boxes\r\n                    helpers.each(topBoxes.concat(bottomBoxes), fitBox);\r\n\r\n                    // Figure out how much margin is on the top and bottom of the vertical boxes\r\n                    helpers.each(topBoxes, function(box) {\r\n                        totalTopBoxesHeight += box.height;\r\n                    });\r\n\r\n                    helpers.each(bottomBoxes, function(box) {\r\n                        totalBottomBoxesHeight += box.height;\r\n                    });\r\n\r\n                    function finalFitVerticalBox(box) {\r\n                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\r\n                            return minSize.box === box;\r\n                        });\r\n\r\n                        var scaleMargin = {\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: totalTopBoxesHeight,\r\n                            bottom: totalBottomBoxesHeight\r\n                        };\r\n\r\n                        if (minBoxSize) {\r\n                            box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\r\n                        }\r\n                    }\r\n\r\n                    // Let the left layout know the final margin\r\n                    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\r\n\r\n                    // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\r\n                    totalLeftBoxesWidth = leftPadding;\r\n                    totalRightBoxesWidth = rightPadding;\r\n                    totalTopBoxesHeight = topPadding;\r\n                    totalBottomBoxesHeight = bottomPadding;\r\n\r\n                    helpers.each(leftBoxes, function(box) {\r\n                        totalLeftBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(rightBoxes, function(box) {\r\n                        totalRightBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(topBoxes, function(box) {\r\n                        totalTopBoxesHeight += box.height;\r\n                    });\r\n                    helpers.each(bottomBoxes, function(box) {\r\n                        totalBottomBoxesHeight += box.height;\r\n                    });\r\n\r\n                    // We may be adding some padding to account for rotated x axis labels\r\n                    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\r\n                    totalLeftBoxesWidth += leftPaddingAddition;\r\n                    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\r\n\r\n                    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\r\n                    totalTopBoxesHeight += topPaddingAddition;\r\n                    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\r\n\r\n                    // Figure out if our chart area changed. This would occur if the dataset layout label rotation\r\n                    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\r\n                    // without calling `fit` again\r\n                    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\r\n                    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\r\n\r\n                    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\r\n                        helpers.each(leftBoxes, function(box) {\r\n                            box.height = newMaxChartAreaHeight;\r\n                        });\r\n\r\n                        helpers.each(rightBoxes, function(box) {\r\n                            box.height = newMaxChartAreaHeight;\r\n                        });\r\n\r\n                        helpers.each(topBoxes, function(box) {\r\n                            if (!box.fullWidth) {\r\n                                box.width = newMaxChartAreaWidth;\r\n                            }\r\n                        });\r\n\r\n                        helpers.each(bottomBoxes, function(box) {\r\n                            if (!box.fullWidth) {\r\n                                box.width = newMaxChartAreaWidth;\r\n                            }\r\n                        });\r\n\r\n                        maxChartAreaHeight = newMaxChartAreaHeight;\r\n                        maxChartAreaWidth = newMaxChartAreaWidth;\r\n                    }\r\n\r\n                    // Step 7 - Position the boxes\r\n                    var left = leftPadding + leftPaddingAddition;\r\n                    var top = topPadding + topPaddingAddition;\r\n\r\n                    function placeBox(box) {\r\n                        if (box.isHorizontal()) {\r\n                            box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\r\n                            box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\r\n                            box.top = top;\r\n                            box.bottom = top + box.height;\r\n\r\n                            // Move to next point\r\n                            top = box.bottom;\r\n                        } else {\r\n                            box.left = left;\r\n                            box.right = left + box.width;\r\n                            box.top = totalTopBoxesHeight;\r\n                            box.bottom = totalTopBoxesHeight + maxChartAreaHeight;\r\n\r\n                            // Move to next point\r\n                            left = box.right;\r\n                        }\r\n                    }\r\n\r\n                    helpers.each(leftBoxes.concat(topBoxes), placeBox);\r\n\r\n                    // Account for chart width and height\r\n                    left += maxChartAreaWidth;\r\n                    top += maxChartAreaHeight;\r\n\r\n                    helpers.each(rightBoxes, placeBox);\r\n                    helpers.each(bottomBoxes, placeBox);\r\n\r\n                    // Step 8\r\n                    chart.chartArea = {\r\n                        left: totalLeftBoxesWidth,\r\n                        top: totalTopBoxesHeight,\r\n                        right: totalLeftBoxesWidth + maxChartAreaWidth,\r\n                        bottom: totalTopBoxesHeight + maxChartAreaHeight\r\n                    };\r\n\r\n                    // Step 9\r\n                    helpers.each(chartAreaBoxes, function(box) {\r\n                        box.left = chart.chartArea.left;\r\n                        box.top = chart.chartArea.top;\r\n                        box.right = chart.chartArea.right;\r\n                        box.bottom = chart.chartArea.bottom;\r\n\r\n                        box.update(maxChartAreaWidth, maxChartAreaHeight);\r\n                    });\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 22: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                plugins: {}\r\n            });\r\n\r\n            /**\r\n             * The plugin service singleton\r\n             * @namespace Chart.plugins\r\n             * @since 2.1.0\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Globally registered plugins.\r\n                 * @private\r\n                 */\r\n                _plugins: [],\r\n\r\n                /**\r\n                 * This identifier is used to invalidate the descriptors cache attached to each chart\r\n                 * when a global plugin is registered or unregistered. In this case, the cache ID is\r\n                 * incremented and descriptors are regenerated during following API calls.\r\n                 * @private\r\n                 */\r\n                _cacheId: 0,\r\n\r\n                /**\r\n                 * Registers the given plugin(s) if not already registered.\r\n                 * @param {Array|Object} plugins plugin instance(s).\r\n                 */\r\n                register: function(plugins) {\r\n                    var p = this._plugins;\r\n                    ([]).concat(plugins).forEach(function(plugin) {\r\n                        if (p.indexOf(plugin) === -1) {\r\n                            p.push(plugin);\r\n                        }\r\n                    });\r\n\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Unregisters the given plugin(s) only if registered.\r\n                 * @param {Array|Object} plugins plugin instance(s).\r\n                 */\r\n                unregister: function(plugins) {\r\n                    var p = this._plugins;\r\n                    ([]).concat(plugins).forEach(function(plugin) {\r\n                        var idx = p.indexOf(plugin);\r\n                        if (idx !== -1) {\r\n                            p.splice(idx, 1);\r\n                        }\r\n                    });\r\n\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Remove all registered plugins.\r\n                 * @since 2.1.5\r\n                 */\r\n                clear: function() {\r\n                    this._plugins = [];\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Returns the number of registered plugins?\r\n                 * @returns {Number}\r\n                 * @since 2.1.5\r\n                 */\r\n                count: function() {\r\n                    return this._plugins.length;\r\n                },\r\n\r\n                /**\r\n                 * Returns all registered plugin instances.\r\n                 * @returns {Array} array of plugin objects.\r\n                 * @since 2.1.5\r\n                 */\r\n                getAll: function() {\r\n                    return this._plugins;\r\n                },\r\n\r\n                /**\r\n                 * Calls enabled plugins for `chart` on the specified hook and with the given args.\r\n                 * This method immediately returns as soon as a plugin explicitly returns false. The\r\n                 * returned value can be used, for instance, to interrupt the current action.\r\n                 * @param {Object} chart - The chart instance for which plugins should be called.\r\n                 * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\r\n                 * @param {Array} [args] - Extra arguments to apply to the hook call.\r\n                 * @returns {Boolean} false if any of the plugins return false, else returns true.\r\n                 */\r\n                notify: function(chart, hook, args) {\r\n                    var descriptors = this.descriptors(chart);\r\n                    var ilen = descriptors.length;\r\n                    var i, descriptor, plugin, params, method;\r\n\r\n                    for (i = 0; i < ilen; ++i) {\r\n                        descriptor = descriptors[i];\r\n                        plugin = descriptor.plugin;\r\n                        method = plugin[hook];\r\n                        if (typeof method === 'function') {\r\n                            params = [chart].concat(args || []);\r\n                            params.push(descriptor.options);\r\n                            if (method.apply(plugin, params) === false) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                },\r\n\r\n                /**\r\n                 * Returns descriptors of enabled plugins for the given chart.\r\n                 * @returns {Array} [{ plugin, options }]\r\n                 * @private\r\n                 */\r\n                descriptors: function(chart) {\r\n                    var cache = chart.$plugins || (chart.$plugins = {});\r\n                    if (cache.id === this._cacheId) {\r\n                        return cache.descriptors;\r\n                    }\r\n\r\n                    var plugins = [];\r\n                    var descriptors = [];\r\n                    var config = (chart && chart.config) || {};\r\n                    var options = (config.options && config.options.plugins) || {};\r\n\r\n                    this._plugins.concat(config.plugins || []).forEach(function(plugin) {\r\n                        var idx = plugins.indexOf(plugin);\r\n                        if (idx !== -1) {\r\n                            return;\r\n                        }\r\n\r\n                        var id = plugin.id;\r\n                        var opts = options[id];\r\n                        if (opts === false) {\r\n                            return;\r\n                        }\r\n\r\n                        if (opts === true) {\r\n                            opts = helpers.clone(defaults.global.plugins[id]);\r\n                        }\r\n\r\n                        plugins.push(plugin);\r\n                        descriptors.push({\r\n                            plugin: plugin,\r\n                            options: opts || {}\r\n                        });\r\n                    });\r\n\r\n                    cache.descriptors = descriptors;\r\n                    cache.id = this._cacheId;\r\n                    return descriptors;\r\n                },\r\n\r\n                /**\r\n                 * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\r\n                 * but in some cases, this reference can be changed by the user when updating options.\r\n                 * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\r\n                 * @private\r\n                 */\r\n                _invalidate: function(chart) {\r\n                    delete chart.$plugins;\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Plugin extension hooks.\r\n             * @interface IPlugin\r\n             * @since 2.1.0\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeInit\r\n             * @desc Called before initializing `chart`.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterInit\r\n             * @desc Called after `chart` has been initialized and before the first update.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeUpdate\r\n             * @desc Called before updating `chart`. If any plugin returns `false`, the update\r\n             * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart update.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterUpdate\r\n             * @desc Called after `chart` has been updated and before rendering. Note that this\r\n             * hook will not be called if the chart update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetsUpdate\r\n             * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\r\n             * the datasets update is cancelled until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} false to cancel the datasets update.\r\n             * @since version 2.1.5\r\n            */\r\n            /**\r\n             * @method IPlugin#afterDatasetsUpdate\r\n             * @desc Called after the `chart` datasets have been updated. Note that this hook\r\n             * will not be called if the datasets update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @since version 2.1.5\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetUpdate\r\n             * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\r\n             * returns `false`, the datasets update is cancelled until another `update` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetUpdate\r\n             * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\r\n             * that this hook will not be called if the datasets update has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeLayout\r\n             * @desc Called before laying out `chart`. If any plugin returns `false`,\r\n             * the layout update is cancelled until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart layout.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterLayout\r\n             * @desc Called after the `chart` has been layed out. Note that this hook will not\r\n             * be called if the layout update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeRender\r\n             * @desc Called before rendering `chart`. If any plugin returns `false`,\r\n             * the rendering is cancelled until another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart rendering.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterRender\r\n             * @desc Called after the `chart` has been fully rendered (and animation completed). Note\r\n             * that this hook will not be called if the rendering has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDraw\r\n             * @desc Called before drawing `chart` at every animation frame specified by the given\r\n             * easing value. If any plugin returns `false`, the frame drawing is cancelled until\r\n             * another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDraw\r\n             * @desc Called after the `chart` has been drawn for the specific easing value. Note\r\n             * that this hook will not be called if the drawing has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetsDraw\r\n             * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\r\n             * the datasets drawing is cancelled until another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetsDraw\r\n             * @desc Called after the `chart` datasets have been drawn. Note that this hook\r\n             * will not be called if the datasets drawing has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetDraw\r\n             * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\r\n             * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\r\n             * is cancelled until another `render` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetDraw\r\n             * @desc Called after the `chart` datasets at the given `args.index` have been drawn\r\n             * (datasets are drawn in the reverse order). Note that this hook will not be called\r\n             * if the datasets drawing has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeTooltipDraw\r\n             * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\r\n             * the tooltip drawing is cancelled until another `render` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Object} args.tooltip - The tooltip.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart tooltip drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterTooltipDraw\r\n             * @desc Called after drawing the `tooltip`. Note that this hook will not\r\n             * be called if the tooltip drawing has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Object} args.tooltip - The tooltip.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeEvent\r\n             * @desc Called before processing the specified `event`. If any plugin returns `false`,\r\n             * the event will be discarded.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {IEvent} event - The event object.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterEvent\r\n             * @desc Called after the `event` has been consumed. Note that this hook\r\n             * will not be called if the `event` has been previously discarded.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {IEvent} event - The event object.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#resize\r\n             * @desc Called after the chart as been resized.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#destroy\r\n             * @desc Called after the chart as been destroyed.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n        }, { \"16\": 16, \"36\": 36 }], 23: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var Ticks = require(25);\r\n\r\n            defaults._set('scale', {\r\n                display: true,\r\n                position: 'left',\r\n                offset: false,\r\n\r\n                // grid line settings\r\n                gridLines: {\r\n                    display: true,\r\n                    color: 'rgba(0, 0, 0, 0.1)',\r\n                    lineWidth: 1,\r\n                    drawBorder: true,\r\n                    drawOnChartArea: true,\r\n                    drawTicks: true,\r\n                    tickMarkLength: 10,\r\n                    zeroLineWidth: 1,\r\n                    zeroLineColor: 'rgba(0,0,0,0.25)',\r\n                    zeroLineBorderDash: [],\r\n                    zeroLineBorderDashOffset: 0.0,\r\n                    offsetGridLines: false,\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0\r\n                },\r\n\r\n                // scale label\r\n                scaleLabel: {\r\n                    // display property\r\n                    display: false,\r\n\r\n                    // actual label\r\n                    labelString: '',\r\n\r\n                    // line height\r\n                    lineHeight: 1.2,\r\n\r\n                    // top/bottom padding\r\n                    padding: {\r\n                        top: 4,\r\n                        bottom: 4\r\n                    }\r\n                },\r\n\r\n                // label settings\r\n                ticks: {\r\n                    beginAtZero: false,\r\n                    minRotation: 0,\r\n                    maxRotation: 50,\r\n                    mirror: false,\r\n                    padding: 0,\r\n                    reverse: false,\r\n                    display: true,\r\n                    autoSkip: true,\r\n                    autoSkipPadding: 0,\r\n                    labelOffset: 0,\r\n                    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\r\n                    callback: Ticks.formatters.values,\r\n                    minor: {},\r\n                    major: {}\r\n                }\r\n            });\r\n\r\n            function labelsFromTicks(ticks) {\r\n                var labels = [];\r\n                var i, ilen;\r\n\r\n                for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n                    labels.push(ticks[i].label);\r\n                }\r\n\r\n                return labels;\r\n            }\r\n\r\n            function getLineValue(scale, index, offsetGridLines) {\r\n                var lineValue = scale.getPixelForTick(index);\r\n\r\n                if (offsetGridLines) {\r\n                    if (index === 0) {\r\n                        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\r\n                    } else {\r\n                        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\r\n                    }\r\n                }\r\n                return lineValue;\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                function computeTextSize(context, tick, font) {\r\n                    return helpers.isArray(tick) ?\r\n                        helpers.longestText(context, font, tick) :\r\n                        context.measureText(tick).width;\r\n                }\r\n\r\n                function parseFontOptions(options) {\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var globalDefaults = defaults.global;\r\n                    var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\r\n                    var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\r\n                    var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\r\n\r\n                    return {\r\n                        size: size,\r\n                        style: style,\r\n                        family: family,\r\n                        font: helpers.fontString(size, style, family)\r\n                    };\r\n                }\r\n\r\n                function parseLineHeight(options) {\r\n                    return helpers.options.toLineHeight(\r\n                        helpers.valueOrDefault(options.lineHeight, 1.2),\r\n                        helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\r\n                }\r\n\r\n                Chart.Scale = Element.extend({\r\n                    /**\r\n                     * Get the padding needed for the scale\r\n                     * @method getPadding\r\n                     * @private\r\n                     * @returns {Padding} the necessary padding\r\n                     */\r\n                    getPadding: function() {\r\n                        var me = this;\r\n                        return {\r\n                            left: me.paddingLeft || 0,\r\n                            top: me.paddingTop || 0,\r\n                            right: me.paddingRight || 0,\r\n                            bottom: me.paddingBottom || 0\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the scale tick objects ({label, major})\r\n                     * @since 2.7\r\n                     */\r\n                    getTicks: function() {\r\n                        return this._ticks;\r\n                    },\r\n\r\n                    // These methods are ordered by lifecyle. Utilities then follow.\r\n                    // Any function defined here is inherited by all scale types.\r\n                    // Any function can be extended by the scale type\r\n\r\n                    mergeTicksOptions: function() {\r\n                        var ticks = this.options.ticks;\r\n                        if (ticks.minor === false) {\r\n                            ticks.minor = {\r\n                                display: false\r\n                            };\r\n                        }\r\n                        if (ticks.major === false) {\r\n                            ticks.major = {\r\n                                display: false\r\n                            };\r\n                        }\r\n                        for (var key in ticks) {\r\n                            if (key !== 'major' && key !== 'minor') {\r\n                                if (typeof ticks.minor[key] === 'undefined') {\r\n                                    ticks.minor[key] = ticks[key];\r\n                                }\r\n                                if (typeof ticks.major[key] === 'undefined') {\r\n                                    ticks.major[key] = ticks[key];\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    beforeUpdate: function() {\r\n                        helpers.callback(this.options.beforeUpdate, [this]);\r\n                    },\r\n                    update: function(maxWidth, maxHeight, margins) {\r\n                        var me = this;\r\n                        var i, ilen, labels, label, ticks, tick;\r\n\r\n                        // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                        me.beforeUpdate();\r\n\r\n                        // Absorb the master measurements\r\n                        me.maxWidth = maxWidth;\r\n                        me.maxHeight = maxHeight;\r\n                        me.margins = helpers.extend({\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: 0,\r\n                            bottom: 0\r\n                        }, margins);\r\n                        me.longestTextCache = me.longestTextCache || {};\r\n\r\n                        // Dimensions\r\n                        me.beforeSetDimensions();\r\n                        me.setDimensions();\r\n                        me.afterSetDimensions();\r\n\r\n                        // Data min/max\r\n                        me.beforeDataLimits();\r\n                        me.determineDataLimits();\r\n                        me.afterDataLimits();\r\n\r\n                        // Ticks - `this.ticks` is now DEPRECATED!\r\n                        // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\r\n                        // and must not be accessed directly from outside this class. `this.ticks` being\r\n                        // around for long time and not marked as private, we can't change its structure\r\n                        // without unexpected breaking changes. If you need to access the scale ticks,\r\n                        // use scale.getTicks() instead.\r\n\r\n                        me.beforeBuildTicks();\r\n\r\n                        // New implementations should return an array of objects but for BACKWARD COMPAT,\r\n                        // we still support no return (`this.ticks` internally set by calling this method).\r\n                        ticks = me.buildTicks() || [];\r\n\r\n                        me.afterBuildTicks();\r\n\r\n                        me.beforeTickToLabelConversion();\r\n\r\n                        // New implementations should return the formatted tick labels but for BACKWARD\r\n                        // COMPAT, we still support no return (`this.ticks` internally changed by calling\r\n                        // this method and supposed to contain only string values).\r\n                        labels = me.convertTicksToLabels(ticks) || me.ticks;\r\n\r\n                        me.afterTickToLabelConversion();\r\n\r\n                        me.ticks = labels;   // BACKWARD COMPATIBILITY\r\n\r\n                        // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\r\n\r\n                        // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\r\n                        for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n                            label = labels[i];\r\n                            tick = ticks[i];\r\n                            if (!tick) {\r\n                                ticks.push(tick = {\r\n                                    label: label,\r\n                                    major: false\r\n                                });\r\n                            } else {\r\n                                tick.label = label;\r\n                            }\r\n                        }\r\n\r\n                        me._ticks = ticks;\r\n\r\n                        // Tick Rotation\r\n                        me.beforeCalculateTickRotation();\r\n                        me.calculateTickRotation();\r\n                        me.afterCalculateTickRotation();\r\n                        // Fit\r\n                        me.beforeFit();\r\n                        me.fit();\r\n                        me.afterFit();\r\n                        //\r\n                        me.afterUpdate();\r\n\r\n                        return me.minSize;\r\n                    },\r\n                    afterUpdate: function() {\r\n                        helpers.callback(this.options.afterUpdate, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeSetDimensions: function() {\r\n                        helpers.callback(this.options.beforeSetDimensions, [this]);\r\n                    },\r\n                    setDimensions: function() {\r\n                        var me = this;\r\n                        // Set the unconstrained dimension before label rotation\r\n                        if (me.isHorizontal()) {\r\n                            // Reset position before calculating rotation\r\n                            me.width = me.maxWidth;\r\n                            me.left = 0;\r\n                            me.right = me.width;\r\n                        } else {\r\n                            me.height = me.maxHeight;\r\n\r\n                            // Reset position before calculating rotation\r\n                            me.top = 0;\r\n                            me.bottom = me.height;\r\n                        }\r\n\r\n                        // Reset padding\r\n                        me.paddingLeft = 0;\r\n                        me.paddingTop = 0;\r\n                        me.paddingRight = 0;\r\n                        me.paddingBottom = 0;\r\n                    },\r\n                    afterSetDimensions: function() {\r\n                        helpers.callback(this.options.afterSetDimensions, [this]);\r\n                    },\r\n\r\n                    // Data limits\r\n                    beforeDataLimits: function() {\r\n                        helpers.callback(this.options.beforeDataLimits, [this]);\r\n                    },\r\n                    determineDataLimits: helpers.noop,\r\n                    afterDataLimits: function() {\r\n                        helpers.callback(this.options.afterDataLimits, [this]);\r\n                    },\r\n\r\n                    //\r\n                    beforeBuildTicks: function() {\r\n                        helpers.callback(this.options.beforeBuildTicks, [this]);\r\n                    },\r\n                    buildTicks: helpers.noop,\r\n                    afterBuildTicks: function() {\r\n                        helpers.callback(this.options.afterBuildTicks, [this]);\r\n                    },\r\n\r\n                    beforeTickToLabelConversion: function() {\r\n                        helpers.callback(this.options.beforeTickToLabelConversion, [this]);\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        // Convert ticks to strings\r\n                        var tickOpts = me.options.ticks;\r\n                        me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\r\n                    },\r\n                    afterTickToLabelConversion: function() {\r\n                        helpers.callback(this.options.afterTickToLabelConversion, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeCalculateTickRotation: function() {\r\n                        helpers.callback(this.options.beforeCalculateTickRotation, [this]);\r\n                    },\r\n                    calculateTickRotation: function() {\r\n                        var me = this;\r\n                        var context = me.ctx;\r\n                        var tickOpts = me.options.ticks;\r\n                        var labels = labelsFromTicks(me._ticks);\r\n\r\n                        // Get the width of each grid by calculating the difference\r\n                        // between x offsets between 0 and 1.\r\n                        var tickFont = parseFontOptions(tickOpts);\r\n                        context.font = tickFont.font;\r\n\r\n                        var labelRotation = tickOpts.minRotation || 0;\r\n\r\n                        if (labels.length && me.options.display && me.isHorizontal()) {\r\n                            var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\r\n                            var labelWidth = originalLabelWidth;\r\n                            var cosRotation, sinRotation;\r\n\r\n                            // Allow 3 pixels x2 padding either side for label readability\r\n                            var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\r\n\r\n                            // Max label rotation can be set or default to 90 - also act as a loop counter\r\n                            while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\r\n                                var angleRadians = helpers.toRadians(labelRotation);\r\n                                cosRotation = Math.cos(angleRadians);\r\n                                sinRotation = Math.sin(angleRadians);\r\n\r\n                                if (sinRotation * originalLabelWidth > me.maxHeight) {\r\n                                    // go back one step\r\n                                    labelRotation--;\r\n                                    break;\r\n                                }\r\n\r\n                                labelRotation++;\r\n                                labelWidth = cosRotation * originalLabelWidth;\r\n                            }\r\n                        }\r\n\r\n                        me.labelRotation = labelRotation;\r\n                    },\r\n                    afterCalculateTickRotation: function() {\r\n                        helpers.callback(this.options.afterCalculateTickRotation, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeFit: function() {\r\n                        helpers.callback(this.options.beforeFit, [this]);\r\n                    },\r\n                    fit: function() {\r\n                        var me = this;\r\n                        // Reset\r\n                        var minSize = me.minSize = {\r\n                            width: 0,\r\n                            height: 0\r\n                        };\r\n\r\n                        var labels = labelsFromTicks(me._ticks);\r\n\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n                        var scaleLabelOpts = opts.scaleLabel;\r\n                        var gridLineOpts = opts.gridLines;\r\n                        var display = opts.display;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        var tickFont = parseFontOptions(tickOpts);\r\n                        var tickMarkLength = opts.gridLines.tickMarkLength;\r\n\r\n                        // Width\r\n                        if (isHorizontal) {\r\n                            // subtract the margins to line up with the chartArea if we are a full width scale\r\n                            minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\r\n                        } else {\r\n                            minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n                        }\r\n\r\n                        // height\r\n                        if (isHorizontal) {\r\n                            minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n                        } else {\r\n                            minSize.height = me.maxHeight; // fill all the height\r\n                        }\r\n\r\n                        // Are we showing a title for the scale?\r\n                        if (scaleLabelOpts.display && display) {\r\n                            var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\r\n                            var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\r\n                            var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\r\n\r\n                            if (isHorizontal) {\r\n                                minSize.height += deltaHeight;\r\n                            } else {\r\n                                minSize.width += deltaHeight;\r\n                            }\r\n                        }\r\n\r\n                        // Don't bother fitting the ticks if we are not showing them\r\n                        if (tickOpts.display && display) {\r\n                            var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\r\n                            var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\r\n                            var lineSpace = tickFont.size * 0.5;\r\n                            var tickPadding = me.options.ticks.padding;\r\n\r\n                            if (isHorizontal) {\r\n                                // A horizontal axis is more constrained by the height.\r\n                                me.longestLabelWidth = largestTextWidth;\r\n\r\n                                var angleRadians = helpers.toRadians(me.labelRotation);\r\n                                var cosRotation = Math.cos(angleRadians);\r\n                                var sinRotation = Math.sin(angleRadians);\r\n\r\n                                // TODO - improve this calculation\r\n                                var labelHeight = (sinRotation * largestTextWidth)\r\n                                    + (tickFont.size * tallestLabelHeightInLines)\r\n                                    + (lineSpace * (tallestLabelHeightInLines - 1))\r\n                                    + lineSpace; // padding\r\n\r\n                                minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\r\n\r\n                                me.ctx.font = tickFont.font;\r\n                                var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\r\n                                var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\r\n\r\n                                // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\r\n                                // which means that the right padding is dominated by the font height\r\n                                if (me.labelRotation !== 0) {\r\n                                    me.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\r\n                                    me.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\r\n                                } else {\r\n                                    me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\r\n                                    me.paddingRight = lastLabelWidth / 2 + 3;\r\n                                }\r\n                            } else {\r\n                                // A vertical axis is more constrained by the width. Labels are the\r\n                                // dominant factor here, so get that length first and account for padding\r\n                                if (tickOpts.mirror) {\r\n                                    largestTextWidth = 0;\r\n                                } else {\r\n                                    // use lineSpace for consistency with horizontal axis\r\n                                    // tickPadding is not implemented for horizontal\r\n                                    largestTextWidth += tickPadding + lineSpace;\r\n                                }\r\n\r\n                                minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\r\n\r\n                                me.paddingTop = tickFont.size / 2;\r\n                                me.paddingBottom = tickFont.size / 2;\r\n                            }\r\n                        }\r\n\r\n                        me.handleMargins();\r\n\r\n                        me.width = minSize.width;\r\n                        me.height = minSize.height;\r\n                    },\r\n\r\n                    /**\r\n                     * Handle margins and padding interactions\r\n                     * @private\r\n                     */\r\n                    handleMargins: function() {\r\n                        var me = this;\r\n                        if (me.margins) {\r\n                            me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\r\n                            me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\r\n                            me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\r\n                            me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\r\n                        }\r\n                    },\r\n\r\n                    afterFit: function() {\r\n                        helpers.callback(this.options.afterFit, [this]);\r\n                    },\r\n\r\n                    // Shared Methods\r\n                    isHorizontal: function() {\r\n                        return this.options.position === 'top' || this.options.position === 'bottom';\r\n                    },\r\n                    isFullWidth: function() {\r\n                        return (this.options.fullWidth);\r\n                    },\r\n\r\n                    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\r\n                    getRightValue: function(rawValue) {\r\n                        // Null and undefined values first\r\n                        if (helpers.isNullOrUndef(rawValue)) {\r\n                            return NaN;\r\n                        }\r\n                        // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\r\n                        if (typeof rawValue === 'number' && !isFinite(rawValue)) {\r\n                            return NaN;\r\n                        }\r\n                        // If it is in fact an object, dive in one more level\r\n                        if (rawValue) {\r\n                            if (this.isHorizontal()) {\r\n                                if (rawValue.x !== undefined) {\r\n                                    return this.getRightValue(rawValue.x);\r\n                                }\r\n                            } else if (rawValue.y !== undefined) {\r\n                                return this.getRightValue(rawValue.y);\r\n                            }\r\n                        }\r\n\r\n                        // Value is good, return it\r\n                        return rawValue;\r\n                    },\r\n\r\n                    /**\r\n                     * Used to get the value to display in the tooltip for the data at the given index\r\n                     * @param index\r\n                     * @param datasetIndex\r\n                     */\r\n                    getLabelForIndex: helpers.noop,\r\n\r\n                    /**\r\n                     * Returns the location of the given data point. Value can either be an index or a numerical value\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     * @param value\r\n                     * @param index\r\n                     * @param datasetIndex\r\n                     */\r\n                    getPixelForValue: helpers.noop,\r\n\r\n                    /**\r\n                     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     * @param pixel\r\n                     */\r\n                    getValueForPixel: helpers.noop,\r\n\r\n                    /**\r\n                     * Returns the location of the tick at the given index\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getPixelForTick: function(index) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        if (me.isHorizontal()) {\r\n                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n                            var tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\r\n                            var pixel = (tickWidth * index) + me.paddingLeft;\r\n\r\n                            if (offset) {\r\n                                pixel += tickWidth / 2;\r\n                            }\r\n\r\n                            var finalVal = me.left + Math.round(pixel);\r\n                            finalVal += me.isFullWidth() ? me.margins.left : 0;\r\n                            return finalVal;\r\n                        }\r\n                        var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\r\n                        return me.top + (index * (innerHeight / (me._ticks.length - 1)));\r\n                    },\r\n\r\n                    /**\r\n                     * Utility for getting the pixel location of a percentage of scale\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getPixelForDecimal: function(decimal) {\r\n                        var me = this;\r\n                        if (me.isHorizontal()) {\r\n                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n                            var valueOffset = (innerWidth * decimal) + me.paddingLeft;\r\n\r\n                            var finalVal = me.left + Math.round(valueOffset);\r\n                            finalVal += me.isFullWidth() ? me.margins.left : 0;\r\n                            return finalVal;\r\n                        }\r\n                        return me.top + (decimal * me.height);\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the pixel for the minimum chart value\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getBasePixel: function() {\r\n                        return this.getPixelForValue(this.getBaseValue());\r\n                    },\r\n\r\n                    getBaseValue: function() {\r\n                        var me = this;\r\n                        var min = me.min;\r\n                        var max = me.max;\r\n\r\n                        return me.beginAtZero ? 0 :\r\n                            min < 0 && max < 0 ? max :\r\n                                min > 0 && max > 0 ? min :\r\n                                    0;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns a subset of ticks to be plotted to avoid overlapping labels.\r\n                     * @private\r\n                     */\r\n                    _autoSkip: function(ticks) {\r\n                        var skipRatio;\r\n                        var me = this;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var optionTicks = me.options.ticks.minor;\r\n                        var tickCount = ticks.length;\r\n                        var labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n                        var cosRotation = Math.cos(labelRotationRadians);\r\n                        var longestRotatedLabel = me.longestLabelWidth * cosRotation;\r\n                        var result = [];\r\n                        var i, tick, shouldSkip;\r\n\r\n                        // figure out the maximum number of gridlines to show\r\n                        var maxTicks;\r\n                        if (optionTicks.maxTicksLimit) {\r\n                            maxTicks = optionTicks.maxTicksLimit;\r\n                        }\r\n\r\n                        if (isHorizontal) {\r\n                            skipRatio = false;\r\n\r\n                            if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\r\n                                skipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\r\n                            }\r\n\r\n                            // if they defined a max number of optionTicks,\r\n                            // increase skipRatio until that number is met\r\n                            if (maxTicks && tickCount > maxTicks) {\r\n                                skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\r\n                            }\r\n                        }\r\n\r\n                        for (i = 0; i < tickCount; i++) {\r\n                            tick = ticks[i];\r\n\r\n                            // Since we always show the last tick,we need may need to hide the last shown one before\r\n                            shouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\r\n                            if (shouldSkip && i !== tickCount - 1) {\r\n                                // leave tick in place but make sure it's not displayed (#4635)\r\n                                delete tick.label;\r\n                            }\r\n                            result.push(tick);\r\n                        }\r\n                        return result;\r\n                    },\r\n\r\n                    // Actually draw the scale on the canvas\r\n                    // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\r\n                    draw: function(chartArea) {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        if (!options.display) {\r\n                            return;\r\n                        }\r\n\r\n                        var context = me.ctx;\r\n                        var globalDefaults = defaults.global;\r\n                        var optionTicks = options.ticks.minor;\r\n                        var optionMajorTicks = options.ticks.major || optionTicks;\r\n                        var gridLines = options.gridLines;\r\n                        var scaleLabel = options.scaleLabel;\r\n\r\n                        var isRotated = me.labelRotation !== 0;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\r\n                        var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\r\n                        var tickFont = parseFontOptions(optionTicks);\r\n                        var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\r\n                        var majorTickFont = parseFontOptions(optionMajorTicks);\r\n\r\n                        var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\r\n\r\n                        var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\r\n                        var scaleLabelFont = parseFontOptions(scaleLabel);\r\n                        var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\r\n                        var labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n\r\n                        var itemsToDraw = [];\r\n\r\n                        var axisWidth = me.options.gridLines.lineWidth;\r\n                        var xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\r\n                        var xTickEnd = options.position === 'right' ? me.right + tl : me.right;\r\n                        var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\r\n                        var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\r\n\r\n                        helpers.each(ticks, function(tick, index) {\r\n                            // autoskipper skipped this tick (#4635)\r\n                            if (helpers.isNullOrUndef(tick.label)) {\r\n                                return;\r\n                            }\r\n\r\n                            var label = tick.label;\r\n                            var lineWidth, lineColor, borderDash, borderDashOffset;\r\n                            if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\r\n                                // Draw the first index specially\r\n                                lineWidth = gridLines.zeroLineWidth;\r\n                                lineColor = gridLines.zeroLineColor;\r\n                                borderDash = gridLines.zeroLineBorderDash;\r\n                                borderDashOffset = gridLines.zeroLineBorderDashOffset;\r\n                            } else {\r\n                                lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\r\n                                lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\r\n                                borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\r\n                                borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\r\n                            }\r\n\r\n                            // Common properties\r\n                            var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\r\n                            var textAlign = 'middle';\r\n                            var textBaseline = 'middle';\r\n                            var tickPadding = optionTicks.padding;\r\n\r\n                            if (isHorizontal) {\r\n                                var labelYOffset = tl + tickPadding;\r\n\r\n                                if (options.position === 'bottom') {\r\n                                    // bottom\r\n                                    textBaseline = !isRotated ? 'top' : 'middle';\r\n                                    textAlign = !isRotated ? 'center' : 'right';\r\n                                    labelY = me.top + labelYOffset;\r\n                                } else {\r\n                                    // top\r\n                                    textBaseline = !isRotated ? 'bottom' : 'middle';\r\n                                    textAlign = !isRotated ? 'center' : 'left';\r\n                                    labelY = me.bottom - labelYOffset;\r\n                                }\r\n\r\n                                var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\r\n                                if (xLineValue < me.left) {\r\n                                    lineColor = 'rgba(0,0,0,0)';\r\n                                }\r\n                                xLineValue += helpers.aliasPixel(lineWidth);\r\n\r\n                                labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\r\n\r\n                                tx1 = tx2 = x1 = x2 = xLineValue;\r\n                                ty1 = yTickStart;\r\n                                ty2 = yTickEnd;\r\n                                y1 = chartArea.top;\r\n                                y2 = chartArea.bottom + axisWidth;\r\n                            } else {\r\n                                var isLeft = options.position === 'left';\r\n                                var labelXOffset;\r\n\r\n                                if (optionTicks.mirror) {\r\n                                    textAlign = isLeft ? 'left' : 'right';\r\n                                    labelXOffset = tickPadding;\r\n                                } else {\r\n                                    textAlign = isLeft ? 'right' : 'left';\r\n                                    labelXOffset = tl + tickPadding;\r\n                                }\r\n\r\n                                labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\r\n\r\n                                var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\r\n                                if (yLineValue < me.top) {\r\n                                    lineColor = 'rgba(0,0,0,0)';\r\n                                }\r\n                                yLineValue += helpers.aliasPixel(lineWidth);\r\n\r\n                                labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\r\n\r\n                                tx1 = xTickStart;\r\n                                tx2 = xTickEnd;\r\n                                x1 = chartArea.left;\r\n                                x2 = chartArea.right + axisWidth;\r\n                                ty1 = ty2 = y1 = y2 = yLineValue;\r\n                            }\r\n\r\n                            itemsToDraw.push({\r\n                                tx1: tx1,\r\n                                ty1: ty1,\r\n                                tx2: tx2,\r\n                                ty2: ty2,\r\n                                x1: x1,\r\n                                y1: y1,\r\n                                x2: x2,\r\n                                y2: y2,\r\n                                labelX: labelX,\r\n                                labelY: labelY,\r\n                                glWidth: lineWidth,\r\n                                glColor: lineColor,\r\n                                glBorderDash: borderDash,\r\n                                glBorderDashOffset: borderDashOffset,\r\n                                rotation: -1 * labelRotationRadians,\r\n                                label: label,\r\n                                major: tick.major,\r\n                                textBaseline: textBaseline,\r\n                                textAlign: textAlign\r\n                            });\r\n                        });\r\n\r\n                        // Draw all of the tick labels, tick marks, and grid lines at the correct places\r\n                        helpers.each(itemsToDraw, function(itemToDraw) {\r\n                            if (gridLines.display) {\r\n                                context.save();\r\n                                context.lineWidth = itemToDraw.glWidth;\r\n                                context.strokeStyle = itemToDraw.glColor;\r\n                                if (context.setLineDash) {\r\n                                    context.setLineDash(itemToDraw.glBorderDash);\r\n                                    context.lineDashOffset = itemToDraw.glBorderDashOffset;\r\n                                }\r\n\r\n                                context.beginPath();\r\n\r\n                                if (gridLines.drawTicks) {\r\n                                    context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\r\n                                    context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\r\n                                }\r\n\r\n                                if (gridLines.drawOnChartArea) {\r\n                                    context.moveTo(itemToDraw.x1, itemToDraw.y1);\r\n                                    context.lineTo(itemToDraw.x2, itemToDraw.y2);\r\n                                }\r\n\r\n                                context.stroke();\r\n                                context.restore();\r\n                            }\r\n\r\n                            if (optionTicks.display) {\r\n                                // Make sure we draw text in the correct color and font\r\n                                context.save();\r\n                                context.translate(itemToDraw.labelX, itemToDraw.labelY);\r\n                                context.rotate(itemToDraw.rotation);\r\n                                context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\r\n                                context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\r\n                                context.textBaseline = itemToDraw.textBaseline;\r\n                                context.textAlign = itemToDraw.textAlign;\r\n\r\n                                var label = itemToDraw.label;\r\n                                if (helpers.isArray(label)) {\r\n                                    var lineCount = label.length;\r\n                                    var lineHeight = tickFont.size * 1.5;\r\n                                    var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\r\n\r\n                                    for (var i = 0; i < lineCount; ++i) {\r\n                                        // We just make sure the multiline element is a string here..\r\n                                        context.fillText('' + label[i], 0, y);\r\n                                        // apply same lineSpacing as calculated @ L#320\r\n                                        y += lineHeight;\r\n                                    }\r\n                                } else {\r\n                                    context.fillText(label, 0, 0);\r\n                                }\r\n                                context.restore();\r\n                            }\r\n                        });\r\n\r\n                        if (scaleLabel.display) {\r\n                            // Draw the scale label\r\n                            var scaleLabelX;\r\n                            var scaleLabelY;\r\n                            var rotation = 0;\r\n                            var halfLineHeight = parseLineHeight(scaleLabel) / 2;\r\n\r\n                            if (isHorizontal) {\r\n                                scaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\r\n                                scaleLabelY = options.position === 'bottom'\r\n                                    ? me.bottom - halfLineHeight - scaleLabelPadding.bottom\r\n                                    : me.top + halfLineHeight + scaleLabelPadding.top;\r\n                            } else {\r\n                                var isLeft = options.position === 'left';\r\n                                scaleLabelX = isLeft\r\n                                    ? me.left + halfLineHeight + scaleLabelPadding.top\r\n                                    : me.right - halfLineHeight - scaleLabelPadding.top;\r\n                                scaleLabelY = me.top + ((me.bottom - me.top) / 2);\r\n                                rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\r\n                            }\r\n\r\n                            context.save();\r\n                            context.translate(scaleLabelX, scaleLabelY);\r\n                            context.rotate(rotation);\r\n                            context.textAlign = 'center';\r\n                            context.textBaseline = 'middle';\r\n                            context.fillStyle = scaleLabelFontColor; // render in correct colour\r\n                            context.font = scaleLabelFont.font;\r\n                            context.fillText(scaleLabel.labelString, 0, 0);\r\n                            context.restore();\r\n                        }\r\n\r\n                        if (gridLines.drawBorder) {\r\n                            // Draw the line at the edge of the axis\r\n                            context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\r\n                            context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\r\n                            var x1 = me.left;\r\n                            var x2 = me.right + axisWidth;\r\n                            var y1 = me.top;\r\n                            var y2 = me.bottom + axisWidth;\r\n\r\n                            var aliasPixel = helpers.aliasPixel(context.lineWidth);\r\n                            if (isHorizontal) {\r\n                                y1 = y2 = options.position === 'top' ? me.bottom : me.top;\r\n                                y1 += aliasPixel;\r\n                                y2 += aliasPixel;\r\n                            } else {\r\n                                x1 = x2 = options.position === 'left' ? me.right : me.left;\r\n                                x1 += aliasPixel;\r\n                                x2 += aliasPixel;\r\n                            }\r\n\r\n                            context.beginPath();\r\n                            context.moveTo(x1, y1);\r\n                            context.lineTo(x2, y2);\r\n                            context.stroke();\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"25\": 25, \"36\": 36 }], 24: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.scaleService = {\r\n                    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\r\n                    // use the new chart options to grab the correct scale\r\n                    constructors: {},\r\n                    // Use a registration function so that we can move to an ES6 map when we no longer need to support\r\n                    // old browsers\r\n\r\n                    // Scale config defaults\r\n                    defaults: {},\r\n                    registerScaleType: function(type, scaleConstructor, scaleDefaults) {\r\n                        this.constructors[type] = scaleConstructor;\r\n                        this.defaults[type] = helpers.clone(scaleDefaults);\r\n                    },\r\n                    getScaleConstructor: function(type) {\r\n                        return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\r\n                    },\r\n                    getScaleDefaults: function(type) {\r\n                        // Return the scale defaults merged with the global settings so that we always use the latest ones\r\n                        return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\r\n                    },\r\n                    updateScaleDefaults: function(type, additions) {\r\n                        var me = this;\r\n                        if (me.defaults.hasOwnProperty(type)) {\r\n                            me.defaults[type] = helpers.extend(me.defaults[type], additions);\r\n                        }\r\n                    },\r\n                    addScalesToLayout: function(chart) {\r\n                        // Adds each scale to the chart.boxes array to be sized accordingly\r\n                        helpers.each(chart.scales, function(scale) {\r\n                            // Set ILayoutItem parameters for backwards compatibility\r\n                            scale.fullWidth = scale.options.fullWidth;\r\n                            scale.position = scale.options.position;\r\n                            scale.weight = scale.options.weight;\r\n                            layouts.addBox(chart, scale);\r\n                        });\r\n                    }\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"21\": 21, \"36\": 36 }], 25: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Namespace to hold static tick generation functions\r\n             * @namespace Chart.Ticks\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Namespace to hold formatters for different types of ticks\r\n                 * @namespace Chart.Ticks.formatters\r\n                 */\r\n                formatters: {\r\n                    /**\r\n                     * Formatter for value labels\r\n                     * @method Chart.Ticks.formatters.values\r\n                     * @param value the value to display\r\n                     * @return {String|Array} the label to display\r\n                     */\r\n                    values: function(value) {\r\n                        return helpers.isArray(value) ? value : '' + value;\r\n                    },\r\n\r\n                    /**\r\n                     * Formatter for linear numeric ticks\r\n                     * @method Chart.Ticks.formatters.linear\r\n                     * @param tickValue {Number} the value to be formatted\r\n                     * @param index {Number} the position of the tickValue parameter in the ticks array\r\n                     * @param ticks {Array<Number>} the list of ticks being converted\r\n                     * @return {String} string representation of the tickValue parameter\r\n                     */\r\n                    linear: function(tickValue, index, ticks) {\r\n                        // If we have lots of ticks, don't use the ones\r\n                        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\r\n\r\n                        // If we have a number like 2.5 as the delta, figure out how many decimal places we need\r\n                        if (Math.abs(delta) > 1) {\r\n                            if (tickValue !== Math.floor(tickValue)) {\r\n                                // not an integer\r\n                                delta = tickValue - Math.floor(tickValue);\r\n                            }\r\n                        }\r\n\r\n                        var logDelta = helpers.log10(Math.abs(delta));\r\n                        var tickString = '';\r\n\r\n                        if (tickValue !== 0) {\r\n                            var numDecimal = -1 * Math.floor(logDelta);\r\n                            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\r\n                            tickString = tickValue.toFixed(numDecimal);\r\n                        } else {\r\n                            tickString = '0'; // never show decimal places for 0\r\n                        }\r\n\r\n                        return tickString;\r\n                    },\r\n\r\n                    logarithmic: function(tickValue, index, ticks) {\r\n                        var remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\r\n\r\n                        if (tickValue === 0) {\r\n                            return '0';\r\n                        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\r\n                            return tickValue.toExponential();\r\n                        }\r\n                        return '';\r\n                    }\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 26: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                tooltips: {\r\n                    enabled: true,\r\n                    custom: null,\r\n                    mode: 'nearest',\r\n                    position: 'average',\r\n                    intersect: true,\r\n                    backgroundColor: 'rgba(0,0,0,0.8)',\r\n                    titleFontStyle: 'bold',\r\n                    titleSpacing: 2,\r\n                    titleMarginBottom: 6,\r\n                    titleFontColor: '#fff',\r\n                    titleAlign: 'left',\r\n                    bodySpacing: 2,\r\n                    bodyFontColor: '#fff',\r\n                    bodyAlign: 'left',\r\n                    footerFontStyle: 'bold',\r\n                    footerSpacing: 2,\r\n                    footerMarginTop: 6,\r\n                    footerFontColor: '#fff',\r\n                    footerAlign: 'left',\r\n                    yPadding: 6,\r\n                    xPadding: 6,\r\n                    caretPadding: 2,\r\n                    caretSize: 5,\r\n                    cornerRadius: 6,\r\n                    multiKeyBackground: '#fff',\r\n                    displayColors: true,\r\n                    borderColor: 'rgba(0,0,0,0)',\r\n                    borderWidth: 0,\r\n                    callbacks: {\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeTitle: helpers.noop,\r\n                        title: function(tooltipItems, data) {\r\n                            // Pick first xLabel for now\r\n                            var title = '';\r\n                            var labels = data.labels;\r\n                            var labelCount = labels ? labels.length : 0;\r\n\r\n                            if (tooltipItems.length > 0) {\r\n                                var item = tooltipItems[0];\r\n\r\n                                if (item.xLabel) {\r\n                                    title = item.xLabel;\r\n                                } else if (labelCount > 0 && item.index < labelCount) {\r\n                                    title = labels[item.index];\r\n                                }\r\n                            }\r\n\r\n                            return title;\r\n                        },\r\n                        afterTitle: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeBody: helpers.noop,\r\n\r\n                        // Args are: (tooltipItem, data)\r\n                        beforeLabel: helpers.noop,\r\n                        label: function(tooltipItem, data) {\r\n                            var label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\r\n                            if (label) {\r\n                                label += ': ';\r\n                            }\r\n                            label += tooltipItem.yLabel;\r\n                            return label;\r\n                        },\r\n                        labelColor: function(tooltipItem, chart) {\r\n                            var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n                            var activeElement = meta.data[tooltipItem.index];\r\n                            var view = activeElement._view;\r\n                            return {\r\n                                borderColor: view.borderColor,\r\n                                backgroundColor: view.backgroundColor\r\n                            };\r\n                        },\r\n                        labelTextColor: function() {\r\n                            return this._options.bodyFontColor;\r\n                        },\r\n                        afterLabel: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        afterBody: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeFooter: helpers.noop,\r\n                        footer: helpers.noop,\r\n                        afterFooter: helpers.noop\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                /**\r\n                   * Helper method to merge the opacity into a color\r\n                   */\r\n                function mergeOpacity(colorString, opacity) {\r\n                    var color = helpers.color(colorString);\r\n                    return color.alpha(opacity * color.alpha()).rgbaString();\r\n                }\r\n\r\n                // Helper to push or concat based on if the 2nd parameter is an array or not\r\n                function pushOrConcat(base, toPush) {\r\n                    if (toPush) {\r\n                        if (helpers.isArray(toPush)) {\r\n                            // base = base.concat(toPush);\r\n                            Array.prototype.push.apply(base, toPush);\r\n                        } else {\r\n                            base.push(toPush);\r\n                        }\r\n                    }\r\n\r\n                    return base;\r\n                }\r\n\r\n                // Private helper to create a tooltip item model\r\n                // @param element : the chart element (point, arc, bar) to create the tooltip item for\r\n                // @return : new tooltip item\r\n                function createTooltipItem(element) {\r\n                    var xScale = element._xScale;\r\n                    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\r\n                    var index = element._index;\r\n                    var datasetIndex = element._datasetIndex;\r\n\r\n                    return {\r\n                        xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\r\n                        yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\r\n                        index: index,\r\n                        datasetIndex: datasetIndex,\r\n                        x: element._model.x,\r\n                        y: element._model.y\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Helper to get the reset model for the tooltip\r\n                 * @param tooltipOpts {Object} the tooltip options\r\n                 */\r\n                function getBaseModel(tooltipOpts) {\r\n                    var globalDefaults = defaults.global;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n\r\n                    return {\r\n                        // Positioning\r\n                        xPadding: tooltipOpts.xPadding,\r\n                        yPadding: tooltipOpts.yPadding,\r\n                        xAlign: tooltipOpts.xAlign,\r\n                        yAlign: tooltipOpts.yAlign,\r\n\r\n                        // Body\r\n                        bodyFontColor: tooltipOpts.bodyFontColor,\r\n                        _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\r\n                        _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\r\n                        _bodyAlign: tooltipOpts.bodyAlign,\r\n                        bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\r\n                        bodySpacing: tooltipOpts.bodySpacing,\r\n\r\n                        // Title\r\n                        titleFontColor: tooltipOpts.titleFontColor,\r\n                        _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\r\n                        _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\r\n                        titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\r\n                        _titleAlign: tooltipOpts.titleAlign,\r\n                        titleSpacing: tooltipOpts.titleSpacing,\r\n                        titleMarginBottom: tooltipOpts.titleMarginBottom,\r\n\r\n                        // Footer\r\n                        footerFontColor: tooltipOpts.footerFontColor,\r\n                        _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\r\n                        _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\r\n                        footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\r\n                        _footerAlign: tooltipOpts.footerAlign,\r\n                        footerSpacing: tooltipOpts.footerSpacing,\r\n                        footerMarginTop: tooltipOpts.footerMarginTop,\r\n\r\n                        // Appearance\r\n                        caretSize: tooltipOpts.caretSize,\r\n                        cornerRadius: tooltipOpts.cornerRadius,\r\n                        backgroundColor: tooltipOpts.backgroundColor,\r\n                        opacity: 0,\r\n                        legendColorBackground: tooltipOpts.multiKeyBackground,\r\n                        displayColors: tooltipOpts.displayColors,\r\n                        borderColor: tooltipOpts.borderColor,\r\n                        borderWidth: tooltipOpts.borderWidth\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Get the size of the tooltip\r\n                 */\r\n                function getTooltipSize(tooltip, model) {\r\n                    var ctx = tooltip._chart.ctx;\r\n\r\n                    var height = model.yPadding * 2; // Tooltip Padding\r\n                    var width = 0;\r\n\r\n                    // Count of all lines in the body\r\n                    var body = model.body;\r\n                    var combinedBodyLength = body.reduce(function(count, bodyItem) {\r\n                        return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\r\n                    }, 0);\r\n                    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\r\n\r\n                    var titleLineCount = model.title.length;\r\n                    var footerLineCount = model.footer.length;\r\n                    var titleFontSize = model.titleFontSize;\r\n                    var bodyFontSize = model.bodyFontSize;\r\n                    var footerFontSize = model.footerFontSize;\r\n\r\n                    height += titleLineCount * titleFontSize; // Title Lines\r\n                    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\r\n                    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\r\n                    height += combinedBodyLength * bodyFontSize; // Body Lines\r\n                    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\r\n                    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\r\n                    height += footerLineCount * (footerFontSize); // Footer Lines\r\n                    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\r\n\r\n                    // Title width\r\n                    var widthPadding = 0;\r\n                    var maxLineWidth = function(line) {\r\n                        width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n                    };\r\n\r\n                    ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\r\n                    helpers.each(model.title, maxLineWidth);\r\n\r\n                    // Body width\r\n                    ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\r\n                    helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\r\n\r\n                    // Body lines may include some extra width due to the color box\r\n                    widthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\r\n                    helpers.each(body, function(bodyItem) {\r\n                        helpers.each(bodyItem.before, maxLineWidth);\r\n                        helpers.each(bodyItem.lines, maxLineWidth);\r\n                        helpers.each(bodyItem.after, maxLineWidth);\r\n                    });\r\n\r\n                    // Reset back to 0\r\n                    widthPadding = 0;\r\n\r\n                    // Footer width\r\n                    ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\r\n                    helpers.each(model.footer, maxLineWidth);\r\n\r\n                    // Add padding\r\n                    width += 2 * model.xPadding;\r\n\r\n                    return {\r\n                        width: width,\r\n                        height: height\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Helper to get the alignment of a tooltip given the size\r\n                 */\r\n                function determineAlignment(tooltip, size) {\r\n                    var model = tooltip._model;\r\n                    var chart = tooltip._chart;\r\n                    var chartArea = tooltip._chart.chartArea;\r\n                    var xAlign = 'center';\r\n                    var yAlign = 'center';\r\n\r\n                    if (model.y < size.height) {\r\n                        yAlign = 'top';\r\n                    } else if (model.y > (chart.height - size.height)) {\r\n                        yAlign = 'bottom';\r\n                    }\r\n\r\n                    var lf, rf; // functions to determine left, right alignment\r\n                    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\r\n                    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\r\n                    var midX = (chartArea.left + chartArea.right) / 2;\r\n                    var midY = (chartArea.top + chartArea.bottom) / 2;\r\n\r\n                    if (yAlign === 'center') {\r\n                        lf = function(x) {\r\n                            return x <= midX;\r\n                        };\r\n                        rf = function(x) {\r\n                            return x > midX;\r\n                        };\r\n                    } else {\r\n                        lf = function(x) {\r\n                            return x <= (size.width / 2);\r\n                        };\r\n                        rf = function(x) {\r\n                            return x >= (chart.width - (size.width / 2));\r\n                        };\r\n                    }\r\n\r\n                    olf = function(x) {\r\n                        return x + size.width + model.caretSize + model.caretPadding > chart.width;\r\n                    };\r\n                    orf = function(x) {\r\n                        return x - size.width - model.caretSize - model.caretPadding < 0;\r\n                    };\r\n                    yf = function(y) {\r\n                        return y <= midY ? 'top' : 'bottom';\r\n                    };\r\n\r\n                    if (lf(model.x)) {\r\n                        xAlign = 'left';\r\n\r\n                        // Is tooltip too wide and goes over the right side of the chart.?\r\n                        if (olf(model.x)) {\r\n                            xAlign = 'center';\r\n                            yAlign = yf(model.y);\r\n                        }\r\n                    } else if (rf(model.x)) {\r\n                        xAlign = 'right';\r\n\r\n                        // Is tooltip too wide and goes outside left edge of canvas?\r\n                        if (orf(model.x)) {\r\n                            xAlign = 'center';\r\n                            yAlign = yf(model.y);\r\n                        }\r\n                    }\r\n\r\n                    var opts = tooltip._options;\r\n                    return {\r\n                        xAlign: opts.xAlign ? opts.xAlign : xAlign,\r\n                        yAlign: opts.yAlign ? opts.yAlign : yAlign\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\r\n                 */\r\n                function getBackgroundPoint(vm, size, alignment, chart) {\r\n                    // Background Position\r\n                    var x = vm.x;\r\n                    var y = vm.y;\r\n\r\n                    var caretSize = vm.caretSize;\r\n                    var caretPadding = vm.caretPadding;\r\n                    var cornerRadius = vm.cornerRadius;\r\n                    var xAlign = alignment.xAlign;\r\n                    var yAlign = alignment.yAlign;\r\n                    var paddingAndSize = caretSize + caretPadding;\r\n                    var radiusAndPadding = cornerRadius + caretPadding;\r\n\r\n                    if (xAlign === 'right') {\r\n                        x -= size.width;\r\n                    } else if (xAlign === 'center') {\r\n                        x -= (size.width / 2);\r\n                        if (x + size.width > chart.width) {\r\n                            x = chart.width - size.width;\r\n                        }\r\n                        if (x < 0) {\r\n                            x = 0;\r\n                        }\r\n                    }\r\n\r\n                    if (yAlign === 'top') {\r\n                        y += paddingAndSize;\r\n                    } else if (yAlign === 'bottom') {\r\n                        y -= size.height + paddingAndSize;\r\n                    } else {\r\n                        y -= (size.height / 2);\r\n                    }\r\n\r\n                    if (yAlign === 'center') {\r\n                        if (xAlign === 'left') {\r\n                            x += paddingAndSize;\r\n                        } else if (xAlign === 'right') {\r\n                            x -= paddingAndSize;\r\n                        }\r\n                    } else if (xAlign === 'left') {\r\n                        x -= radiusAndPadding;\r\n                    } else if (xAlign === 'right') {\r\n                        x += radiusAndPadding;\r\n                    }\r\n\r\n                    return {\r\n                        x: x,\r\n                        y: y\r\n                    };\r\n                }\r\n\r\n                Chart.Tooltip = Element.extend({\r\n                    initialize: function() {\r\n                        this._model = getBaseModel(this._options);\r\n                        this._lastActive = [];\r\n                    },\r\n\r\n                    // Get the title\r\n                    // Args are: (tooltipItem, data)\r\n                    getTitle: function() {\r\n                        var me = this;\r\n                        var opts = me._options;\r\n                        var callbacks = opts.callbacks;\r\n\r\n                        var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\r\n                        var title = callbacks.title.apply(me, arguments);\r\n                        var afterTitle = callbacks.afterTitle.apply(me, arguments);\r\n\r\n                        var lines = [];\r\n                        lines = pushOrConcat(lines, beforeTitle);\r\n                        lines = pushOrConcat(lines, title);\r\n                        lines = pushOrConcat(lines, afterTitle);\r\n\r\n                        return lines;\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getBeforeBody: function() {\r\n                        var lines = this._options.callbacks.beforeBody.apply(this, arguments);\r\n                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getBody: function(tooltipItems, data) {\r\n                        var me = this;\r\n                        var callbacks = me._options.callbacks;\r\n                        var bodyItems = [];\r\n\r\n                        helpers.each(tooltipItems, function(tooltipItem) {\r\n                            var bodyItem = {\r\n                                before: [],\r\n                                lines: [],\r\n                                after: []\r\n                            };\r\n                            pushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\r\n                            pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\r\n                            pushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\r\n\r\n                            bodyItems.push(bodyItem);\r\n                        });\r\n\r\n                        return bodyItems;\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getAfterBody: function() {\r\n                        var lines = this._options.callbacks.afterBody.apply(this, arguments);\r\n                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n                    },\r\n\r\n                    // Get the footer and beforeFooter and afterFooter lines\r\n                    // Args are: (tooltipItem, data)\r\n                    getFooter: function() {\r\n                        var me = this;\r\n                        var callbacks = me._options.callbacks;\r\n\r\n                        var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\r\n                        var footer = callbacks.footer.apply(me, arguments);\r\n                        var afterFooter = callbacks.afterFooter.apply(me, arguments);\r\n\r\n                        var lines = [];\r\n                        lines = pushOrConcat(lines, beforeFooter);\r\n                        lines = pushOrConcat(lines, footer);\r\n                        lines = pushOrConcat(lines, afterFooter);\r\n\r\n                        return lines;\r\n                    },\r\n\r\n                    update: function(changed) {\r\n                        var me = this;\r\n                        var opts = me._options;\r\n\r\n                        // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\r\n                        // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\r\n                        // which breaks any animations.\r\n                        var existingModel = me._model;\r\n                        var model = me._model = getBaseModel(opts);\r\n                        var active = me._active;\r\n\r\n                        var data = me._data;\r\n\r\n                        // In the case where active.length === 0 we need to keep these at existing values for good animations\r\n                        var alignment = {\r\n                            xAlign: existingModel.xAlign,\r\n                            yAlign: existingModel.yAlign\r\n                        };\r\n                        var backgroundPoint = {\r\n                            x: existingModel.x,\r\n                            y: existingModel.y\r\n                        };\r\n                        var tooltipSize = {\r\n                            width: existingModel.width,\r\n                            height: existingModel.height\r\n                        };\r\n                        var tooltipPosition = {\r\n                            x: existingModel.caretX,\r\n                            y: existingModel.caretY\r\n                        };\r\n\r\n                        var i, len;\r\n\r\n                        if (active.length) {\r\n                            model.opacity = 1;\r\n\r\n                            var labelColors = [];\r\n                            var labelTextColors = [];\r\n                            tooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\r\n\r\n                            var tooltipItems = [];\r\n                            for (i = 0, len = active.length; i < len; ++i) {\r\n                                tooltipItems.push(createTooltipItem(active[i]));\r\n                            }\r\n\r\n                            // If the user provided a filter function, use it to modify the tooltip items\r\n                            if (opts.filter) {\r\n                                tooltipItems = tooltipItems.filter(function(a) {\r\n                                    return opts.filter(a, data);\r\n                                });\r\n                            }\r\n\r\n                            // If the user provided a sorting function, use it to modify the tooltip items\r\n                            if (opts.itemSort) {\r\n                                tooltipItems = tooltipItems.sort(function(a, b) {\r\n                                    return opts.itemSort(a, b, data);\r\n                                });\r\n                            }\r\n\r\n                            // Determine colors for boxes\r\n                            helpers.each(tooltipItems, function(tooltipItem) {\r\n                                labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\r\n                                labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\r\n                            });\r\n\r\n                            // Build the Text Lines\r\n                            model.title = me.getTitle(tooltipItems, data);\r\n                            model.beforeBody = me.getBeforeBody(tooltipItems, data);\r\n                            model.body = me.getBody(tooltipItems, data);\r\n                            model.afterBody = me.getAfterBody(tooltipItems, data);\r\n                            model.footer = me.getFooter(tooltipItems, data);\r\n\r\n                            // Initial positioning and colors\r\n                            model.x = Math.round(tooltipPosition.x);\r\n                            model.y = Math.round(tooltipPosition.y);\r\n                            model.caretPadding = opts.caretPadding;\r\n                            model.labelColors = labelColors;\r\n                            model.labelTextColors = labelTextColors;\r\n\r\n                            // data points\r\n                            model.dataPoints = tooltipItems;\r\n\r\n                            // We need to determine alignment of the tooltip\r\n                            tooltipSize = getTooltipSize(this, model);\r\n                            alignment = determineAlignment(this, tooltipSize);\r\n                            // Final Size and Position\r\n                            backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\r\n                        } else {\r\n                            model.opacity = 0;\r\n                        }\r\n\r\n                        model.xAlign = alignment.xAlign;\r\n                        model.yAlign = alignment.yAlign;\r\n                        model.x = backgroundPoint.x;\r\n                        model.y = backgroundPoint.y;\r\n                        model.width = tooltipSize.width;\r\n                        model.height = tooltipSize.height;\r\n\r\n                        // Point where the caret on the tooltip points to\r\n                        model.caretX = tooltipPosition.x;\r\n                        model.caretY = tooltipPosition.y;\r\n\r\n                        me._model = model;\r\n\r\n                        if (changed && opts.custom) {\r\n                            opts.custom.call(me, model);\r\n                        }\r\n\r\n                        return me;\r\n                    },\r\n                    drawCaret: function(tooltipPoint, size) {\r\n                        var ctx = this._chart.ctx;\r\n                        var vm = this._view;\r\n                        var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\r\n\r\n                        ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n                        ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n                        ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n                    },\r\n                    getCaretPosition: function(tooltipPoint, size, vm) {\r\n                        var x1, x2, x3, y1, y2, y3;\r\n                        var caretSize = vm.caretSize;\r\n                        var cornerRadius = vm.cornerRadius;\r\n                        var xAlign = vm.xAlign;\r\n                        var yAlign = vm.yAlign;\r\n                        var ptX = tooltipPoint.x;\r\n                        var ptY = tooltipPoint.y;\r\n                        var width = size.width;\r\n                        var height = size.height;\r\n\r\n                        if (yAlign === 'center') {\r\n                            y2 = ptY + (height / 2);\r\n\r\n                            if (xAlign === 'left') {\r\n                                x1 = ptX;\r\n                                x2 = x1 - caretSize;\r\n                                x3 = x1;\r\n\r\n                                y1 = y2 + caretSize;\r\n                                y3 = y2 - caretSize;\r\n                            } else {\r\n                                x1 = ptX + width;\r\n                                x2 = x1 + caretSize;\r\n                                x3 = x1;\r\n\r\n                                y1 = y2 - caretSize;\r\n                                y3 = y2 + caretSize;\r\n                            }\r\n                        } else {\r\n                            if (xAlign === 'left') {\r\n                                x2 = ptX + cornerRadius + (caretSize);\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            } else if (xAlign === 'right') {\r\n                                x2 = ptX + width - cornerRadius - caretSize;\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            } else {\r\n                                x2 = vm.caretX;\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            }\r\n                            if (yAlign === 'top') {\r\n                                y1 = ptY;\r\n                                y2 = y1 - caretSize;\r\n                                y3 = y1;\r\n                            } else {\r\n                                y1 = ptY + height;\r\n                                y2 = y1 + caretSize;\r\n                                y3 = y1;\r\n                                // invert drawing order\r\n                                var tmp = x3;\r\n                                x3 = x1;\r\n                                x1 = tmp;\r\n                            }\r\n                        }\r\n                        return { x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3 };\r\n                    },\r\n                    drawTitle: function(pt, vm, ctx, opacity) {\r\n                        var title = vm.title;\r\n\r\n                        if (title.length) {\r\n                            ctx.textAlign = vm._titleAlign;\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            var titleFontSize = vm.titleFontSize;\r\n                            var titleSpacing = vm.titleSpacing;\r\n\r\n                            ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\r\n                            ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\r\n                            var i, len;\r\n                            for (i = 0, len = title.length; i < len; ++i) {\r\n                                ctx.fillText(title[i], pt.x, pt.y);\r\n                                pt.y += titleFontSize + titleSpacing; // Line Height and spacing\r\n\r\n                                if (i + 1 === title.length) {\r\n                                    pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    drawBody: function(pt, vm, ctx, opacity) {\r\n                        var bodyFontSize = vm.bodyFontSize;\r\n                        var bodySpacing = vm.bodySpacing;\r\n                        var body = vm.body;\r\n\r\n                        ctx.textAlign = vm._bodyAlign;\r\n                        ctx.textBaseline = 'top';\r\n                        ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\r\n                        // Before Body\r\n                        var xLinePadding = 0;\r\n                        var fillLineOfText = function(line) {\r\n                            ctx.fillText(line, pt.x + xLinePadding, pt.y);\r\n                            pt.y += bodyFontSize + bodySpacing;\r\n                        };\r\n\r\n                        // Before body lines\r\n                        ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\r\n                        helpers.each(vm.beforeBody, fillLineOfText);\r\n\r\n                        var drawColorBoxes = vm.displayColors;\r\n                        xLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\r\n\r\n                        // Draw body lines now\r\n                        helpers.each(body, function(bodyItem, i) {\r\n                            var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\r\n                            ctx.fillStyle = textColor;\r\n                            helpers.each(bodyItem.before, fillLineOfText);\r\n\r\n                            helpers.each(bodyItem.lines, function(line) {\r\n                                // Draw Legend-like boxes if needed\r\n                                if (drawColorBoxes) {\r\n                                    // Fill a white rect so that colours merge nicely if the opacity is < 1\r\n                                    ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\r\n                                    ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n                                    // Border\r\n                                    ctx.lineWidth = 1;\r\n                                    ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\r\n                                    ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n                                    // Inner square\r\n                                    ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\r\n                                    ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\r\n                                    ctx.fillStyle = textColor;\r\n                                }\r\n\r\n                                fillLineOfText(line);\r\n                            });\r\n\r\n                            helpers.each(bodyItem.after, fillLineOfText);\r\n                        });\r\n\r\n                        // Reset back to 0 for after body\r\n                        xLinePadding = 0;\r\n\r\n                        // After body lines\r\n                        helpers.each(vm.afterBody, fillLineOfText);\r\n                        pt.y -= bodySpacing; // Remove last body spacing\r\n                    },\r\n                    drawFooter: function(pt, vm, ctx, opacity) {\r\n                        var footer = vm.footer;\r\n\r\n                        if (footer.length) {\r\n                            pt.y += vm.footerMarginTop;\r\n\r\n                            ctx.textAlign = vm._footerAlign;\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\r\n                            ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\r\n                            helpers.each(footer, function(line) {\r\n                                ctx.fillText(line, pt.x, pt.y);\r\n                                pt.y += vm.footerFontSize + vm.footerSpacing;\r\n                            });\r\n                        }\r\n                    },\r\n                    drawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\r\n                        ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\r\n                        ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\r\n                        ctx.lineWidth = vm.borderWidth;\r\n                        var xAlign = vm.xAlign;\r\n                        var yAlign = vm.yAlign;\r\n                        var x = pt.x;\r\n                        var y = pt.y;\r\n                        var width = tooltipSize.width;\r\n                        var height = tooltipSize.height;\r\n                        var radius = vm.cornerRadius;\r\n\r\n                        ctx.beginPath();\r\n                        ctx.moveTo(x + radius, y);\r\n                        if (yAlign === 'top') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + width - radius, y);\r\n                        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n                        if (yAlign === 'center' && xAlign === 'right') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + width, y + height - radius);\r\n                        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n                        if (yAlign === 'bottom') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + radius, y + height);\r\n                        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n                        if (yAlign === 'center' && xAlign === 'left') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x, y + radius);\r\n                        ctx.quadraticCurveTo(x, y, x + radius, y);\r\n                        ctx.closePath();\r\n\r\n                        ctx.fill();\r\n\r\n                        if (vm.borderWidth > 0) {\r\n                            ctx.stroke();\r\n                        }\r\n                    },\r\n                    draw: function() {\r\n                        var ctx = this._chart.ctx;\r\n                        var vm = this._view;\r\n\r\n                        if (vm.opacity === 0) {\r\n                            return;\r\n                        }\r\n\r\n                        var tooltipSize = {\r\n                            width: vm.width,\r\n                            height: vm.height\r\n                        };\r\n                        var pt = {\r\n                            x: vm.x,\r\n                            y: vm.y\r\n                        };\r\n\r\n                        // IE11/Edge does not like very small opacities, so snap to 0\r\n                        var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\r\n\r\n                        // Truthy/falsey value for empty tooltip\r\n                        var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\r\n\r\n                        if (this._options.enabled && hasTooltipContent) {\r\n                            // Draw Background\r\n                            this.drawBackground(pt, vm, ctx, tooltipSize, opacity);\r\n\r\n                            // Draw Title, Body, and Footer\r\n                            pt.x += vm.xPadding;\r\n                            pt.y += vm.yPadding;\r\n\r\n                            // Titles\r\n                            this.drawTitle(pt, vm, ctx, opacity);\r\n\r\n                            // Body\r\n                            this.drawBody(pt, vm, ctx, opacity);\r\n\r\n                            // Footer\r\n                            this.drawFooter(pt, vm, ctx, opacity);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Handle an event\r\n                     * @private\r\n                     * @param {IEvent} event - The event to handle\r\n                     * @returns {Boolean} true if the tooltip changed\r\n                     */\r\n                    handleEvent: function(e) {\r\n                        var me = this;\r\n                        var options = me._options;\r\n                        var changed = false;\r\n\r\n                        me._lastActive = me._lastActive || [];\r\n\r\n                        // Find Active Elements for tooltips\r\n                        if (e.type === 'mouseout') {\r\n                            me._active = [];\r\n                        } else {\r\n                            me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\r\n                        }\r\n\r\n                        // Remember Last Actives\r\n                        changed = !helpers.arrayEquals(me._active, me._lastActive);\r\n\r\n                        // Only handle target event on tooltip change\r\n                        if (changed) {\r\n                            me._lastActive = me._active;\r\n\r\n                            if (options.enabled || options.custom) {\r\n                                me._eventPosition = {\r\n                                    x: e.x,\r\n                                    y: e.y\r\n                                };\r\n\r\n                                me.update(true);\r\n                                me.pivot();\r\n                            }\r\n                        }\r\n\r\n                        return changed;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * @namespace Chart.Tooltip.positioners\r\n                 */\r\n                Chart.Tooltip.positioners = {\r\n                    /**\r\n                     * Average mode places the tooltip at the average position of the elements shown\r\n                     * @function Chart.Tooltip.positioners.average\r\n                     * @param elements {ChartElement[]} the elements being displayed in the tooltip\r\n                     * @returns {Point} tooltip position\r\n                     */\r\n                    average: function(elements) {\r\n                        if (!elements.length) {\r\n                            return false;\r\n                        }\r\n\r\n                        var i, len;\r\n                        var x = 0;\r\n                        var y = 0;\r\n                        var count = 0;\r\n\r\n                        for (i = 0, len = elements.length; i < len; ++i) {\r\n                            var el = elements[i];\r\n                            if (el && el.hasValue()) {\r\n                                var pos = el.tooltipPosition();\r\n                                x += pos.x;\r\n                                y += pos.y;\r\n                                ++count;\r\n                            }\r\n                        }\r\n\r\n                        return {\r\n                            x: Math.round(x / count),\r\n                            y: Math.round(y / count)\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Gets the tooltip position nearest of the item nearest to the event position\r\n                     * @function Chart.Tooltip.positioners.nearest\r\n                     * @param elements {Chart.Element[]} the tooltip elements\r\n                     * @param eventPosition {Point} the position of the event in canvas coordinates\r\n                     * @returns {Point} the tooltip position\r\n                     */\r\n                    nearest: function(elements, eventPosition) {\r\n                        var x = eventPosition.x;\r\n                        var y = eventPosition.y;\r\n                        var minDistance = Number.POSITIVE_INFINITY;\r\n                        var i, len, nearestElement;\r\n\r\n                        for (i = 0, len = elements.length; i < len; ++i) {\r\n                            var el = elements[i];\r\n                            if (el && el.hasValue()) {\r\n                                var center = el.getCenterPoint();\r\n                                var d = helpers.distanceBetweenPoints(eventPosition, center);\r\n\r\n                                if (d < minDistance) {\r\n                                    minDistance = d;\r\n                                    nearestElement = el;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (nearestElement) {\r\n                            var tp = nearestElement.tooltipPosition();\r\n                            x = tp.x;\r\n                            y = tp.y;\r\n                        }\r\n\r\n                        return {\r\n                            x: x,\r\n                            y: y\r\n                        };\r\n                    }\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 27: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    arc: {\r\n                        backgroundColor: defaults.global.defaultColor,\r\n                        borderColor: '#fff',\r\n                        borderWidth: 2\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = Element.extend({\r\n                inLabelRange: function(mouseX) {\r\n                    var vm = this._view;\r\n\r\n                    if (vm) {\r\n                        return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                inRange: function(chartX, chartY) {\r\n                    var vm = this._view;\r\n\r\n                    if (vm) {\r\n                        var pointRelativePosition = helpers.getAngleFromPoint(vm, { x: chartX, y: chartY });\r\n                        var angle = pointRelativePosition.angle;\r\n                        var distance = pointRelativePosition.distance;\r\n\r\n                        // Sanitise angle range\r\n                        var startAngle = vm.startAngle;\r\n                        var endAngle = vm.endAngle;\r\n                        while (endAngle < startAngle) {\r\n                            endAngle += 2.0 * Math.PI;\r\n                        }\r\n                        while (angle > endAngle) {\r\n                            angle -= 2.0 * Math.PI;\r\n                        }\r\n                        while (angle < startAngle) {\r\n                            angle += 2.0 * Math.PI;\r\n                        }\r\n\r\n                        // Check if within the range of the open/close angle\r\n                        var betweenAngles = (angle >= startAngle && angle <= endAngle);\r\n                        var withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\r\n\r\n                        return (betweenAngles && withinRadius);\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\r\n                    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\r\n                    return {\r\n                        x: vm.x + Math.cos(halfAngle) * halfRadius,\r\n                        y: vm.y + Math.sin(halfAngle) * halfRadius\r\n                    };\r\n                },\r\n\r\n                getArea: function() {\r\n                    var vm = this._view;\r\n                    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\r\n                    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\r\n\r\n                    return {\r\n                        x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\r\n                        y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\r\n                    };\r\n                },\r\n\r\n                draw: function() {\r\n                    var ctx = this._chart.ctx;\r\n                    var vm = this._view;\r\n                    var sA = vm.startAngle;\r\n                    var eA = vm.endAngle;\r\n\r\n                    ctx.beginPath();\r\n\r\n                    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\r\n                    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\r\n\r\n                    ctx.closePath();\r\n                    ctx.strokeStyle = vm.borderColor;\r\n                    ctx.lineWidth = vm.borderWidth;\r\n\r\n                    ctx.fillStyle = vm.backgroundColor;\r\n\r\n                    ctx.fill();\r\n                    ctx.lineJoin = 'bevel';\r\n\r\n                    if (vm.borderWidth) {\r\n                        ctx.stroke();\r\n                    }\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 28: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            var globalDefaults = defaults.global;\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    line: {\r\n                        tension: 0.4,\r\n                        backgroundColor: globalDefaults.defaultColor,\r\n                        borderWidth: 3,\r\n                        borderColor: globalDefaults.defaultColor,\r\n                        borderCapStyle: 'butt',\r\n                        borderDash: [],\r\n                        borderDashOffset: 0.0,\r\n                        borderJoinStyle: 'miter',\r\n                        capBezierPoints: true,\r\n                        fill: true, // do we fill in the area between the line and its base axis\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = Element.extend({\r\n                draw: function() {\r\n                    var me = this;\r\n                    var vm = me._view;\r\n                    var ctx = me._chart.ctx;\r\n                    var spanGaps = vm.spanGaps;\r\n                    var points = me._children.slice(); // clone array\r\n                    var globalOptionLineElements = globalDefaults.elements.line;\r\n                    var lastDrawnIndex = -1;\r\n                    var index, current, previous, currentVM;\r\n\r\n                    // If we are looping, adding the first point again\r\n                    if (me._loop && points.length) {\r\n                        points.push(points[0]);\r\n                    }\r\n\r\n                    ctx.save();\r\n\r\n                    // Stroke Line Options\r\n                    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\r\n\r\n                    // IE 9 and 10 do not support line dash\r\n                    if (ctx.setLineDash) {\r\n                        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\r\n                    }\r\n\r\n                    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\r\n                    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\r\n                    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\r\n                    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\r\n\r\n                    // Stroke Line\r\n                    ctx.beginPath();\r\n                    lastDrawnIndex = -1;\r\n\r\n                    for (index = 0; index < points.length; ++index) {\r\n                        current = points[index];\r\n                        previous = helpers.previousItem(points, index);\r\n                        currentVM = current._view;\r\n\r\n                        // First point moves to it's starting position no matter what\r\n                        if (index === 0) {\r\n                            if (!currentVM.skip) {\r\n                                ctx.moveTo(currentVM.x, currentVM.y);\r\n                                lastDrawnIndex = index;\r\n                            }\r\n                        } else {\r\n                            previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\r\n\r\n                            if (!currentVM.skip) {\r\n                                if ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\r\n                                    // There was a gap and this is the first point after the gap\r\n                                    ctx.moveTo(currentVM.x, currentVM.y);\r\n                                } else {\r\n                                    // Line to next point\r\n                                    helpers.canvas.lineTo(ctx, previous._view, current._view);\r\n                                }\r\n                                lastDrawnIndex = index;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    ctx.stroke();\r\n                    ctx.restore();\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 29: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            var defaultColor = defaults.global.defaultColor;\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    point: {\r\n                        radius: 3,\r\n                        pointStyle: 'circle',\r\n                        backgroundColor: defaultColor,\r\n                        borderColor: defaultColor,\r\n                        borderWidth: 1,\r\n                        // Hover\r\n                        hitRadius: 1,\r\n                        hoverRadius: 4,\r\n                        hoverBorderWidth: 1\r\n                    }\r\n                }\r\n            });\r\n\r\n            function xRange(mouseX) {\r\n                var vm = this._view;\r\n                return vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\r\n            }\r\n\r\n            function yRange(mouseY) {\r\n                var vm = this._view;\r\n                return vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\r\n            }\r\n\r\n            module.exports = Element.extend({\r\n                inRange: function(mouseX, mouseY) {\r\n                    var vm = this._view;\r\n                    return vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\r\n                },\r\n\r\n                inLabelRange: xRange,\r\n                inXRange: xRange,\r\n                inYRange: yRange,\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y\r\n                    };\r\n                },\r\n\r\n                getArea: function() {\r\n                    return Math.PI * Math.pow(this._view.radius, 2);\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y,\r\n                        padding: vm.radius + vm.borderWidth\r\n                    };\r\n                },\r\n\r\n                draw: function(chartArea) {\r\n                    var vm = this._view;\r\n                    var model = this._model;\r\n                    var ctx = this._chart.ctx;\r\n                    var pointStyle = vm.pointStyle;\r\n                    var radius = vm.radius;\r\n                    var x = vm.x;\r\n                    var y = vm.y;\r\n                    var color = helpers.color;\r\n                    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\r\n                    var ratio = 0;\r\n\r\n                    if (vm.skip) {\r\n                        return;\r\n                    }\r\n\r\n                    ctx.strokeStyle = vm.borderColor || defaultColor;\r\n                    ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\r\n                    ctx.fillStyle = vm.backgroundColor || defaultColor;\r\n\r\n                    // Cliping for Points.\r\n                    // going out from inner charArea?\r\n                    if ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\r\n                        // Point fade out\r\n                        if (model.x < chartArea.left) {\r\n                            ratio = (x - model.x) / (chartArea.left - model.x);\r\n                        } else if (chartArea.right * errMargin < model.x) {\r\n                            ratio = (model.x - x) / (model.x - chartArea.right);\r\n                        } else if (model.y < chartArea.top) {\r\n                            ratio = (y - model.y) / (chartArea.top - model.y);\r\n                        } else if (chartArea.bottom * errMargin < model.y) {\r\n                            ratio = (model.y - y) / (model.y - chartArea.bottom);\r\n                        }\r\n                        ratio = Math.round(ratio * 100) / 100;\r\n                        ctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\r\n                        ctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\r\n                    }\r\n\r\n                    helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 30: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    rectangle: {\r\n                        backgroundColor: defaults.global.defaultColor,\r\n                        borderColor: defaults.global.defaultColor,\r\n                        borderSkipped: 'bottom',\r\n                        borderWidth: 0\r\n                    }\r\n                }\r\n            });\r\n\r\n            function isVertical(bar) {\r\n                return bar._view.width !== undefined;\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the bounds of the bar regardless of the orientation\r\n             * @param bar {Chart.Element.Rectangle} the bar\r\n             * @return {Bounds} bounds of the bar\r\n             * @private\r\n             */\r\n            function getBarBounds(bar) {\r\n                var vm = bar._view;\r\n                var x1, x2, y1, y2;\r\n\r\n                if (isVertical(bar)) {\r\n                    // vertical\r\n                    var halfWidth = vm.width / 2;\r\n                    x1 = vm.x - halfWidth;\r\n                    x2 = vm.x + halfWidth;\r\n                    y1 = Math.min(vm.y, vm.base);\r\n                    y2 = Math.max(vm.y, vm.base);\r\n                } else {\r\n                    // horizontal bar\r\n                    var halfHeight = vm.height / 2;\r\n                    x1 = Math.min(vm.x, vm.base);\r\n                    x2 = Math.max(vm.x, vm.base);\r\n                    y1 = vm.y - halfHeight;\r\n                    y2 = vm.y + halfHeight;\r\n                }\r\n\r\n                return {\r\n                    left: x1,\r\n                    top: y1,\r\n                    right: x2,\r\n                    bottom: y2\r\n                };\r\n            }\r\n\r\n            module.exports = Element.extend({\r\n                draw: function() {\r\n                    var ctx = this._chart.ctx;\r\n                    var vm = this._view;\r\n                    var left, right, top, bottom, signX, signY, borderSkipped;\r\n                    var borderWidth = vm.borderWidth;\r\n\r\n                    if (!vm.horizontal) {\r\n                        // bar\r\n                        left = vm.x - vm.width / 2;\r\n                        right = vm.x + vm.width / 2;\r\n                        top = vm.y;\r\n                        bottom = vm.base;\r\n                        signX = 1;\r\n                        signY = bottom > top ? 1 : -1;\r\n                        borderSkipped = vm.borderSkipped || 'bottom';\r\n                    } else {\r\n                        // horizontal bar\r\n                        left = vm.base;\r\n                        right = vm.x;\r\n                        top = vm.y - vm.height / 2;\r\n                        bottom = vm.y + vm.height / 2;\r\n                        signX = right > left ? 1 : -1;\r\n                        signY = 1;\r\n                        borderSkipped = vm.borderSkipped || 'left';\r\n                    }\r\n\r\n                    // Canvas doesn't allow us to stroke inside the width so we can\r\n                    // adjust the sizes to fit if we're setting a stroke on the line\r\n                    if (borderWidth) {\r\n                        // borderWidth shold be less than bar width and bar height.\r\n                        var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n                        borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n                        var halfStroke = borderWidth / 2;\r\n                        // Adjust borderWidth when bar top position is near vm.base(zero).\r\n                        var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n                        var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n                        var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n                        var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n                        // not become a vertical line?\r\n                        if (borderLeft !== borderRight) {\r\n                            top = borderTop;\r\n                            bottom = borderBottom;\r\n                        }\r\n                        // not become a horizontal line?\r\n                        if (borderTop !== borderBottom) {\r\n                            left = borderLeft;\r\n                            right = borderRight;\r\n                        }\r\n                    }\r\n\r\n                    ctx.beginPath();\r\n                    ctx.fillStyle = vm.backgroundColor;\r\n                    ctx.strokeStyle = vm.borderColor;\r\n                    ctx.lineWidth = borderWidth;\r\n\r\n                    // Corner points, from bottom-left to bottom-right clockwise\r\n                    // | 1 2 |\r\n                    // | 0 3 |\r\n                    var corners = [\r\n                        [left, bottom],\r\n                        [left, top],\r\n                        [right, top],\r\n                        [right, bottom]\r\n                    ];\r\n\r\n                    // Find first (starting) corner with fallback to 'bottom'\r\n                    var borders = ['bottom', 'left', 'top', 'right'];\r\n                    var startCorner = borders.indexOf(borderSkipped, 0);\r\n                    if (startCorner === -1) {\r\n                        startCorner = 0;\r\n                    }\r\n\r\n                    function cornerAt(index) {\r\n                        return corners[(startCorner + index) % 4];\r\n                    }\r\n\r\n                    // Draw rectangle from 'startCorner'\r\n                    var corner = cornerAt(0);\r\n                    ctx.moveTo(corner[0], corner[1]);\r\n\r\n                    for (var i = 1; i < 4; i++) {\r\n                        corner = cornerAt(i);\r\n                        ctx.lineTo(corner[0], corner[1]);\r\n                    }\r\n\r\n                    ctx.fill();\r\n                    if (borderWidth) {\r\n                        ctx.stroke();\r\n                    }\r\n                },\r\n\r\n                height: function() {\r\n                    var vm = this._view;\r\n                    return vm.base - vm.y;\r\n                },\r\n\r\n                inRange: function(mouseX, mouseY) {\r\n                    var inRange = false;\r\n\r\n                    if (this._view) {\r\n                        var bounds = getBarBounds(this);\r\n                        inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                    }\r\n\r\n                    return inRange;\r\n                },\r\n\r\n                inLabelRange: function(mouseX, mouseY) {\r\n                    var me = this;\r\n                    if (!me._view) {\r\n                        return false;\r\n                    }\r\n\r\n                    var inRange = false;\r\n                    var bounds = getBarBounds(me);\r\n\r\n                    if (isVertical(me)) {\r\n                        inRange = mouseX >= bounds.left && mouseX <= bounds.right;\r\n                    } else {\r\n                        inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                    }\r\n\r\n                    return inRange;\r\n                },\r\n\r\n                inXRange: function(mouseX) {\r\n                    var bounds = getBarBounds(this);\r\n                    return mouseX >= bounds.left && mouseX <= bounds.right;\r\n                },\r\n\r\n                inYRange: function(mouseY) {\r\n                    var bounds = getBarBounds(this);\r\n                    return mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                },\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    var x, y;\r\n                    if (isVertical(this)) {\r\n                        x = vm.x;\r\n                        y = (vm.y + vm.base) / 2;\r\n                    } else {\r\n                        x = (vm.x + vm.base) / 2;\r\n                        y = vm.y;\r\n                    }\r\n\r\n                    return { x: x, y: y };\r\n                },\r\n\r\n                getArea: function() {\r\n                    var vm = this._view;\r\n                    return vm.width * Math.abs(vm.y - vm.base);\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y\r\n                    };\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17 }], 31: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = {};\r\n            module.exports.Arc = require(27);\r\n            module.exports.Line = require(28);\r\n            module.exports.Point = require(29);\r\n            module.exports.Rectangle = require(30);\r\n        }, { \"27\": 27, \"28\": 28, \"29\": 29, \"30\": 30 }], 32: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * @namespace Chart.helpers.canvas\r\n             */\r\n            var exports = module.exports = {\r\n                /**\r\n                 * Clears the entire canvas associated to the given `chart`.\r\n                 * @param {Chart} chart - The chart for which to clear the canvas.\r\n                 */\r\n                clear: function(chart) {\r\n                    chart.ctx.clearRect(0, 0, chart.width, chart.height);\r\n                },\r\n\r\n                /**\r\n                 * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\r\n                 * given size (width, height) and the same `radius` for all corners.\r\n                 * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\r\n                 * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\r\n                 * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\r\n                 * @param {Number} width - The rectangle's width.\r\n                 * @param {Number} height - The rectangle's height.\r\n                 * @param {Number} radius - The rounded amount (in pixels) for the four corners.\r\n                 * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\r\n                 */\r\n                roundedRect: function(ctx, x, y, width, height, radius) {\r\n                    if (radius) {\r\n                        var rx = Math.min(radius, width / 2);\r\n                        var ry = Math.min(radius, height / 2);\r\n\r\n                        ctx.moveTo(x + rx, y);\r\n                        ctx.lineTo(x + width - rx, y);\r\n                        ctx.quadraticCurveTo(x + width, y, x + width, y + ry);\r\n                        ctx.lineTo(x + width, y + height - ry);\r\n                        ctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\r\n                        ctx.lineTo(x + rx, y + height);\r\n                        ctx.quadraticCurveTo(x, y + height, x, y + height - ry);\r\n                        ctx.lineTo(x, y + ry);\r\n                        ctx.quadraticCurveTo(x, y, x + rx, y);\r\n                    } else {\r\n                        ctx.rect(x, y, width, height);\r\n                    }\r\n                },\r\n\r\n                drawPoint: function(ctx, style, radius, x, y) {\r\n                    var type, edgeLength, xOffset, yOffset, height, size;\r\n\r\n                    if (style && typeof style === 'object') {\r\n                        type = style.toString();\r\n                        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n                            ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    if (isNaN(radius) || radius <= 0) {\r\n                        return;\r\n                    }\r\n\r\n                    switch (style) {\r\n                        // Default includes circle\r\n                        default:\r\n                            ctx.beginPath();\r\n                            ctx.arc(x, y, radius, 0, Math.PI * 2);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'triangle':\r\n                            ctx.beginPath();\r\n                            edgeLength = 3 * radius / Math.sqrt(3);\r\n                            height = edgeLength * Math.sqrt(3) / 2;\r\n                            ctx.moveTo(x - edgeLength / 2, y + height / 3);\r\n                            ctx.lineTo(x + edgeLength / 2, y + height / 3);\r\n                            ctx.lineTo(x, y - 2 * height / 3);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'rect':\r\n                            size = 1 / Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            ctx.fillRect(x - size, y - size, 2 * size, 2 * size);\r\n                            ctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\r\n                            break;\r\n                        case 'rectRounded':\r\n                            var offset = radius / Math.SQRT2;\r\n                            var leftX = x - offset;\r\n                            var topY = y - offset;\r\n                            var sideSize = Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'rectRot':\r\n                            size = 1 / Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x - size, y);\r\n                            ctx.lineTo(x, y + size);\r\n                            ctx.lineTo(x + size, y);\r\n                            ctx.lineTo(x, y - size);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'cross':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y + radius);\r\n                            ctx.lineTo(x, y - radius);\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'crossRot':\r\n                            ctx.beginPath();\r\n                            xOffset = Math.cos(Math.PI / 4) * radius;\r\n                            yOffset = Math.sin(Math.PI / 4) * radius;\r\n                            ctx.moveTo(x - xOffset, y - yOffset);\r\n                            ctx.lineTo(x + xOffset, y + yOffset);\r\n                            ctx.moveTo(x - xOffset, y + yOffset);\r\n                            ctx.lineTo(x + xOffset, y - yOffset);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'star':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y + radius);\r\n                            ctx.lineTo(x, y - radius);\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            xOffset = Math.cos(Math.PI / 4) * radius;\r\n                            yOffset = Math.sin(Math.PI / 4) * radius;\r\n                            ctx.moveTo(x - xOffset, y - yOffset);\r\n                            ctx.lineTo(x + xOffset, y + yOffset);\r\n                            ctx.moveTo(x - xOffset, y + yOffset);\r\n                            ctx.lineTo(x + xOffset, y - yOffset);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'line':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'dash':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                    }\r\n\r\n                    ctx.stroke();\r\n                },\r\n\r\n                clipArea: function(ctx, area) {\r\n                    ctx.save();\r\n                    ctx.beginPath();\r\n                    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\r\n                    ctx.clip();\r\n                },\r\n\r\n                unclipArea: function(ctx) {\r\n                    ctx.restore();\r\n                },\r\n\r\n                lineTo: function(ctx, previous, target, flip) {\r\n                    if (target.steppedLine) {\r\n                        if ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\r\n                            ctx.lineTo(previous.x, target.y);\r\n                        } else {\r\n                            ctx.lineTo(target.x, previous.y);\r\n                        }\r\n                        ctx.lineTo(target.x, target.y);\r\n                        return;\r\n                    }\r\n\r\n                    if (!target.tension) {\r\n                        ctx.lineTo(target.x, target.y);\r\n                        return;\r\n                    }\r\n\r\n                    ctx.bezierCurveTo(\r\n                        flip ? previous.controlPointPreviousX : previous.controlPointNextX,\r\n                        flip ? previous.controlPointPreviousY : previous.controlPointNextY,\r\n                        flip ? target.controlPointNextX : target.controlPointPreviousX,\r\n                        flip ? target.controlPointNextY : target.controlPointPreviousY,\r\n                        target.x,\r\n                        target.y);\r\n                }\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\r\n             * @namespace Chart.helpers.clear\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.clear = exports.clear;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\r\n             * @namespace Chart.helpers.drawRoundedRectangle\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.drawRoundedRectangle = function(ctx) {\r\n                ctx.beginPath();\r\n                exports.roundedRect.apply(exports, arguments);\r\n                ctx.closePath();\r\n            };\r\n        }, { \"33\": 33 }], 33: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            /**\r\n             * @namespace Chart.helpers\r\n             */\r\n            var helpers = {\r\n                /**\r\n                 * An empty function that can be used, for example, for optional callback.\r\n                 */\r\n                noop: function() { },\r\n\r\n                /**\r\n                 * Returns a unique id, sequentially generated from a global variable.\r\n                 * @returns {Number}\r\n                 * @function\r\n                 */\r\n                uid: (function() {\r\n                    var id = 0;\r\n                    return function() {\r\n                        return id++;\r\n                    };\r\n                }()),\r\n\r\n                /**\r\n                 * Returns true if `value` is neither null nor undefined, else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @since 2.7.0\r\n                 */\r\n                isNullOrUndef: function(value) {\r\n                    return value === null || typeof value === 'undefined';\r\n                },\r\n\r\n                /**\r\n                 * Returns true if `value` is an array, else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @function\r\n                 */\r\n                isArray: Array.isArray ? Array.isArray : function(value) {\r\n                    return Object.prototype.toString.call(value) === '[object Array]';\r\n                },\r\n\r\n                /**\r\n                 * Returns true if `value` is an object (excluding null), else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @since 2.7.0\r\n                 */\r\n                isObject: function(value) {\r\n                    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\r\n                },\r\n\r\n                /**\r\n                 * Returns `value` if defined, else returns `defaultValue`.\r\n                 * @param {*} value - The value to return if defined.\r\n                 * @param {*} defaultValue - The value to return if `value` is undefined.\r\n                 * @returns {*}\r\n                 */\r\n                valueOrDefault: function(value, defaultValue) {\r\n                    return typeof value === 'undefined' ? defaultValue : value;\r\n                },\r\n\r\n                /**\r\n                 * Returns value at the given `index` in array if defined, else returns `defaultValue`.\r\n                 * @param {Array} value - The array to lookup for value at `index`.\r\n                 * @param {Number} index - The index in `value` to lookup for value.\r\n                 * @param {*} defaultValue - The value to return if `value[index]` is undefined.\r\n                 * @returns {*}\r\n                 */\r\n                valueAtIndexOrDefault: function(value, index, defaultValue) {\r\n                    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\r\n                },\r\n\r\n                /**\r\n                 * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\r\n                 * value returned by `fn`. If `fn` is not a function, this method returns undefined.\r\n                 * @param {Function} fn - The function to call.\r\n                 * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\r\n                 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\r\n                 * @returns {*}\r\n                 */\r\n                callback: function(fn, args, thisArg) {\r\n                    if (fn && typeof fn.call === 'function') {\r\n                        return fn.apply(thisArg, args);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Note(SB) for performance sake, this method should only be used when loopable type\r\n                 * is unknown or in none intensive code (not called often and small loopable). Else\r\n                 * it's preferable to use a regular for() loop and save extra function calls.\r\n                 * @param {Object|Array} loopable - The object or array to be iterated.\r\n                 * @param {Function} fn - The function to call for each item.\r\n                 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\r\n                 * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\r\n                 */\r\n                each: function(loopable, fn, thisArg, reverse) {\r\n                    var i, len, keys;\r\n                    if (helpers.isArray(loopable)) {\r\n                        len = loopable.length;\r\n                        if (reverse) {\r\n                            for (i = len - 1; i >= 0; i--) {\r\n                                fn.call(thisArg, loopable[i], i);\r\n                            }\r\n                        } else {\r\n                            for (i = 0; i < len; i++) {\r\n                                fn.call(thisArg, loopable[i], i);\r\n                            }\r\n                        }\r\n                    } else if (helpers.isObject(loopable)) {\r\n                        keys = Object.keys(loopable);\r\n                        len = keys.length;\r\n                        for (i = 0; i < len; i++) {\r\n                            fn.call(thisArg, loopable[keys[i]], keys[i]);\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\r\n                 * @see http://stackoverflow.com/a/14853974\r\n                 * @param {Array} a0 - The array to compare\r\n                 * @param {Array} a1 - The array to compare\r\n                 * @returns {Boolean}\r\n                 */\r\n                arrayEquals: function(a0, a1) {\r\n                    var i, ilen, v0, v1;\r\n\r\n                    if (!a0 || !a1 || a0.length !== a1.length) {\r\n                        return false;\r\n                    }\r\n\r\n                    for (i = 0, ilen = a0.length; i < ilen; ++i) {\r\n                        v0 = a0[i];\r\n                        v1 = a1[i];\r\n\r\n                        if (v0 instanceof Array && v1 instanceof Array) {\r\n                            if (!helpers.arrayEquals(v0, v1)) {\r\n                                return false;\r\n                            }\r\n                        } else if (v0 !== v1) {\r\n                            // NOTE: two different object instances will never be equal: {x:20} != {x:20}\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                },\r\n\r\n                /**\r\n                 * Returns a deep copy of `source` without keeping references on objects and arrays.\r\n                 * @param {*} source - The value to clone.\r\n                 * @returns {*}\r\n                 */\r\n                clone: function(source) {\r\n                    if (helpers.isArray(source)) {\r\n                        return source.map(helpers.clone);\r\n                    }\r\n\r\n                    if (helpers.isObject(source)) {\r\n                        var target = {};\r\n                        var keys = Object.keys(source);\r\n                        var klen = keys.length;\r\n                        var k = 0;\r\n\r\n                        for (; k < klen; ++k) {\r\n                            target[keys[k]] = helpers.clone(source[keys[k]]);\r\n                        }\r\n\r\n                        return target;\r\n                    }\r\n\r\n                    return source;\r\n                },\r\n\r\n                /**\r\n                 * The default merger when Chart.helpers.merge is called without merger option.\r\n                 * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\r\n                 * @private\r\n                 */\r\n                _merger: function(key, target, source, options) {\r\n                    var tval = target[key];\r\n                    var sval = source[key];\r\n\r\n                    if (helpers.isObject(tval) && helpers.isObject(sval)) {\r\n                        helpers.merge(tval, sval, options);\r\n                    } else {\r\n                        target[key] = helpers.clone(sval);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Merges source[key] in target[key] only if target[key] is undefined.\r\n                 * @private\r\n                 */\r\n                _mergerIf: function(key, target, source) {\r\n                    var tval = target[key];\r\n                    var sval = source[key];\r\n\r\n                    if (helpers.isObject(tval) && helpers.isObject(sval)) {\r\n                        helpers.mergeIf(tval, sval);\r\n                    } else if (!target.hasOwnProperty(key)) {\r\n                        target[key] = helpers.clone(sval);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Recursively deep copies `source` properties into `target` with the given `options`.\r\n                 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n                 * @param {Object} target - The target object in which all sources are merged into.\r\n                 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\r\n                 * @param {Object} [options] - Merging options:\r\n                 * @param {Function} [options.merger] - The merge method (key, target, source, options)\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                merge: function(target, source, options) {\r\n                    var sources = helpers.isArray(source) ? source : [source];\r\n                    var ilen = sources.length;\r\n                    var merge, i, keys, klen, k;\r\n\r\n                    if (!helpers.isObject(target)) {\r\n                        return target;\r\n                    }\r\n\r\n                    options = options || {};\r\n                    merge = options.merger || helpers._merger;\r\n\r\n                    for (i = 0; i < ilen; ++i) {\r\n                        source = sources[i];\r\n                        if (!helpers.isObject(source)) {\r\n                            continue;\r\n                        }\r\n\r\n                        keys = Object.keys(source);\r\n                        for (k = 0, klen = keys.length; k < klen; ++k) {\r\n                            merge(keys[k], target, source, options);\r\n                        }\r\n                    }\r\n\r\n                    return target;\r\n                },\r\n\r\n                /**\r\n                 * Recursively deep copies `source` properties into `target` *only* if not defined in target.\r\n                 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n                 * @param {Object} target - The target object in which all sources are merged into.\r\n                 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                mergeIf: function(target, source) {\r\n                    return helpers.merge(target, source, { merger: helpers._mergerIf });\r\n                },\r\n\r\n                /**\r\n                 * Applies the contents of two or more objects together into the first object.\r\n                 * @param {Object} target - The target object in which all objects are merged into.\r\n                 * @param {Object} arg1 - Object containing additional properties to merge in target.\r\n                 * @param {Object} argN - Additional objects containing properties to merge in target.\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                extend: function(target) {\r\n                    var setFn = function(value, key) {\r\n                        target[key] = value;\r\n                    };\r\n                    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\r\n                        helpers.each(arguments[i], setFn);\r\n                    }\r\n                    return target;\r\n                },\r\n\r\n                /**\r\n                 * Basic javascript inheritance based on the model created in Backbone.js\r\n                 */\r\n                inherits: function(extensions) {\r\n                    var me = this;\r\n                    var ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\r\n                        return me.apply(this, arguments);\r\n                    };\r\n\r\n                    var Surrogate = function() {\r\n                        this.constructor = ChartElement;\r\n                    };\r\n\r\n                    Surrogate.prototype = me.prototype;\r\n                    ChartElement.prototype = new Surrogate();\r\n                    ChartElement.extend = helpers.inherits;\r\n\r\n                    if (extensions) {\r\n                        helpers.extend(ChartElement.prototype, extensions);\r\n                    }\r\n\r\n                    ChartElement.__super__ = me.prototype;\r\n                    return ChartElement;\r\n                }\r\n            };\r\n\r\n            module.exports = helpers;\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.callback instead.\r\n             * @function Chart.helpers.callCallback\r\n             * @deprecated since version 2.6.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.callCallback = helpers.callback;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Array.prototype.indexOf instead.\r\n             * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\r\n             * @function Chart.helpers.indexOf\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.indexOf = function(array, item, fromIndex) {\r\n                return Array.prototype.indexOf.call(array, item, fromIndex);\r\n            };\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\r\n             * @function Chart.helpers.getValueOrDefault\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.getValueOrDefault = helpers.valueOrDefault;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\r\n             * @function Chart.helpers.getValueAtIndexOrDefault\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n        }, {}], 34: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * Easing functions adapted from Robert Penner's easing equations.\r\n             * @namespace Chart.helpers.easingEffects\r\n             * @see http://www.robertpenner.com/easing/\r\n             */\r\n            var effects = {\r\n                linear: function(t) {\r\n                    return t;\r\n                },\r\n\r\n                easeInQuad: function(t) {\r\n                    return t * t;\r\n                },\r\n\r\n                easeOutQuad: function(t) {\r\n                    return -t * (t - 2);\r\n                },\r\n\r\n                easeInOutQuad: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t;\r\n                    }\r\n                    return -0.5 * ((--t) * (t - 2) - 1);\r\n                },\r\n\r\n                easeInCubic: function(t) {\r\n                    return t * t * t;\r\n                },\r\n\r\n                easeOutCubic: function(t) {\r\n                    return (t = t - 1) * t * t + 1;\r\n                },\r\n\r\n                easeInOutCubic: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t;\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * t + 2);\r\n                },\r\n\r\n                easeInQuart: function(t) {\r\n                    return t * t * t * t;\r\n                },\r\n\r\n                easeOutQuart: function(t) {\r\n                    return -((t = t - 1) * t * t * t - 1);\r\n                },\r\n\r\n                easeInOutQuart: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t * t;\r\n                    }\r\n                    return -0.5 * ((t -= 2) * t * t * t - 2);\r\n                },\r\n\r\n                easeInQuint: function(t) {\r\n                    return t * t * t * t * t;\r\n                },\r\n\r\n                easeOutQuint: function(t) {\r\n                    return (t = t - 1) * t * t * t * t + 1;\r\n                },\r\n\r\n                easeInOutQuint: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t * t * t;\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * t * t * t + 2);\r\n                },\r\n\r\n                easeInSine: function(t) {\r\n                    return -Math.cos(t * (Math.PI / 2)) + 1;\r\n                },\r\n\r\n                easeOutSine: function(t) {\r\n                    return Math.sin(t * (Math.PI / 2));\r\n                },\r\n\r\n                easeInOutSine: function(t) {\r\n                    return -0.5 * (Math.cos(Math.PI * t) - 1);\r\n                },\r\n\r\n                easeInExpo: function(t) {\r\n                    return (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\r\n                },\r\n\r\n                easeOutExpo: function(t) {\r\n                    return (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\r\n                },\r\n\r\n                easeInOutExpo: function(t) {\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * Math.pow(2, 10 * (t - 1));\r\n                    }\r\n                    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\r\n                },\r\n\r\n                easeInCirc: function(t) {\r\n                    if (t >= 1) {\r\n                        return t;\r\n                    }\r\n                    return -(Math.sqrt(1 - t * t) - 1);\r\n                },\r\n\r\n                easeOutCirc: function(t) {\r\n                    return Math.sqrt(1 - (t = t - 1) * t);\r\n                },\r\n\r\n                easeInOutCirc: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return -0.5 * (Math.sqrt(1 - t * t) - 1);\r\n                    }\r\n                    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\r\n                },\r\n\r\n                easeInElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.3;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\r\n                },\r\n\r\n                easeOutElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.3;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\r\n                },\r\n\r\n                easeInOutElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if ((t /= 0.5) === 2) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.45;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    if (t < 1) {\r\n                        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\r\n                    }\r\n                    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n                },\r\n                easeInBack: function(t) {\r\n                    var s = 1.70158;\r\n                    return t * t * ((s + 1) * t - s);\r\n                },\r\n\r\n                easeOutBack: function(t) {\r\n                    var s = 1.70158;\r\n                    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\r\n                },\r\n\r\n                easeInOutBack: function(t) {\r\n                    var s = 1.70158;\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n                },\r\n\r\n                easeInBounce: function(t) {\r\n                    return 1 - effects.easeOutBounce(1 - t);\r\n                },\r\n\r\n                easeOutBounce: function(t) {\r\n                    if (t < (1 / 2.75)) {\r\n                        return 7.5625 * t * t;\r\n                    }\r\n                    if (t < (2 / 2.75)) {\r\n                        return 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\r\n                    }\r\n                    if (t < (2.5 / 2.75)) {\r\n                        return 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\r\n                    }\r\n                    return 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\r\n                },\r\n\r\n                easeInOutBounce: function(t) {\r\n                    if (t < 0.5) {\r\n                        return effects.easeInBounce(t * 2) * 0.5;\r\n                    }\r\n                    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\r\n                }\r\n            };\r\n\r\n            module.exports = {\r\n                effects: effects\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\r\n             * @function Chart.helpers.easingEffects\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.easingEffects = effects;\r\n        }, { \"33\": 33 }], 35: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * @alias Chart.helpers.options\r\n             * @namespace\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Converts the given line height `value` in pixels for a specific font `size`.\r\n                 * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\r\n                 * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\r\n                 * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\r\n                 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\r\n                 * @since 2.7.0\r\n                 */\r\n                toLineHeight: function(value, size) {\r\n                    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\r\n                    if (!matches || matches[1] === 'normal') {\r\n                        return size * 1.2;\r\n                    }\r\n\r\n                    value = +matches[2];\r\n\r\n                    switch (matches[3]) {\r\n                        case 'px':\r\n                            return value;\r\n                        case '%':\r\n                            value /= 100;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n\r\n                    return size * value;\r\n                },\r\n\r\n                /**\r\n                 * Converts the given value into a padding object with pre-computed width/height.\r\n                 * @param {Number|Object} value - If a number, set the value to all TRBL component,\r\n                 *  else, if and object, use defined properties and sets undefined ones to 0.\r\n                 * @returns {Object} The padding values (top, right, bottom, left, width, height)\r\n                 * @since 2.7.0\r\n                 */\r\n                toPadding: function(value) {\r\n                    var t, r, b, l;\r\n\r\n                    if (helpers.isObject(value)) {\r\n                        t = +value.top || 0;\r\n                        r = +value.right || 0;\r\n                        b = +value.bottom || 0;\r\n                        l = +value.left || 0;\r\n                    } else {\r\n                        t = r = b = l = +value || 0;\r\n                    }\r\n\r\n                    return {\r\n                        top: t,\r\n                        right: r,\r\n                        bottom: b,\r\n                        left: l,\r\n                        height: t + b,\r\n                        width: l + r\r\n                    };\r\n                },\r\n\r\n                /**\r\n                 * Evaluates the given `inputs` sequentially and returns the first defined value.\r\n                 * @param {Array[]} inputs - An array of values, falling back to the last value.\r\n                 * @param {Object} [context] - If defined and the current value is a function, the value\r\n                 * is called with `context` as first argument and the result becomes the new input.\r\n                 * @param {Number} [index] - If defined and the current value is an array, the value\r\n                 * at `index` become the new input.\r\n                 * @since 2.7.0\r\n                 */\r\n                resolve: function(inputs, context, index) {\r\n                    var i, ilen, value;\r\n\r\n                    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\r\n                        value = inputs[i];\r\n                        if (value === undefined) {\r\n                            continue;\r\n                        }\r\n                        if (context !== undefined && typeof value === 'function') {\r\n                            value = value(context);\r\n                        }\r\n                        if (index !== undefined && helpers.isArray(value)) {\r\n                            value = value[index];\r\n                        }\r\n                        if (value !== undefined) {\r\n                            return value;\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }, { \"33\": 33 }], 36: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = require(33);\r\n            module.exports.easing = require(34);\r\n            module.exports.canvas = require(32);\r\n            module.exports.options = require(35);\r\n        }, { \"32\": 32, \"33\": 33, \"34\": 34, \"35\": 35 }], 37: [function(require, module, exports) {\r\n            /**\r\n             * Platform fallback implementation (minimal).\r\n             * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\r\n             */\r\n\r\n            module.exports = {\r\n                acquireContext: function(item) {\r\n                    if (item && item.canvas) {\r\n                        // Support for any object associated to a canvas (including a context2d)\r\n                        item = item.canvas;\r\n                    }\r\n\r\n                    return item && item.getContext('2d') || null;\r\n                }\r\n            };\r\n        }, {}], 38: [function(require, module, exports) {\r\n            /**\r\n             * Chart.Platform implementation for targeting a web browser\r\n             */\r\n\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            var EXPANDO_KEY = '$chartjs';\r\n            var CSS_PREFIX = 'chartjs-';\r\n            var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\r\n            var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\r\n            var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\r\n\r\n            /**\r\n             * DOM event types -> Chart.js event types.\r\n             * Note: only events with different types are mapped.\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/Events\r\n             */\r\n            var EVENT_TYPES = {\r\n                touchstart: 'mousedown',\r\n                touchmove: 'mousemove',\r\n                touchend: 'mouseup',\r\n                pointerenter: 'mouseenter',\r\n                pointerdown: 'mousedown',\r\n                pointermove: 'mousemove',\r\n                pointerup: 'mouseup',\r\n                pointerleave: 'mouseout',\r\n                pointerout: 'mouseout'\r\n            };\r\n\r\n            /**\r\n             * The \"used\" size is the final value of a dimension property after all calculations have\r\n             * been performed. This method uses the computed style of `element` but returns undefined\r\n             * if the computed style is not expressed in pixels. That can happen in some cases where\r\n             * `element` has a size relative to its parent and this last one is not yet displayed,\r\n             * for example because of `display: none` on a parent node.\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\r\n             * @returns {Number} Size in pixels or undefined if unknown.\r\n             */\r\n            function readUsedSize(element, property) {\r\n                var value = helpers.getStyle(element, property);\r\n                var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\r\n                return matches ? Number(matches[1]) : undefined;\r\n            }\r\n\r\n            /**\r\n             * Initializes the canvas style and render size without modifying the canvas display size,\r\n             * since responsiveness is handled by the controller.resize() method. The config is used\r\n             * to determine the aspect ratio to apply in case no explicit height has been specified.\r\n             */\r\n            function initCanvas(canvas, config) {\r\n                var style = canvas.style;\r\n\r\n                // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\r\n                // returns null or '' if no explicit value has been set to the canvas attribute.\r\n                var renderHeight = canvas.getAttribute('height');\r\n                var renderWidth = canvas.getAttribute('width');\r\n\r\n                // Chart.js modifies some canvas values that we want to restore on destroy\r\n                canvas[EXPANDO_KEY] = {\r\n                    initial: {\r\n                        height: renderHeight,\r\n                        width: renderWidth,\r\n                        style: {\r\n                            display: style.display,\r\n                            height: style.height,\r\n                            width: style.width\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // Force canvas to display as block to avoid extra space caused by inline\r\n                // elements, which would interfere with the responsive resize process.\r\n                // https://github.com/chartjs/Chart.js/issues/2538\r\n                style.display = style.display || 'block';\r\n\r\n                if (renderWidth === null || renderWidth === '') {\r\n                    var displayWidth = readUsedSize(canvas, 'width');\r\n                    if (displayWidth !== undefined) {\r\n                        canvas.width = displayWidth;\r\n                    }\r\n                }\r\n\r\n                if (renderHeight === null || renderHeight === '') {\r\n                    if (canvas.style.height === '') {\r\n                        // If no explicit render height and style height, let's apply the aspect ratio,\r\n                        // which one can be specified by the user but also by charts as default option\r\n                        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\r\n                        canvas.height = canvas.width / (config.options.aspectRatio || 2);\r\n                    } else {\r\n                        var displayHeight = readUsedSize(canvas, 'height');\r\n                        if (displayWidth !== undefined) {\r\n                            canvas.height = displayHeight;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return canvas;\r\n            }\r\n\r\n            /**\r\n             * Detects support for options object argument in addEventListener.\r\n             * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\r\n             * @private\r\n             */\r\n            var supportsEventListenerOptions = (function() {\r\n                var supports = false;\r\n                try {\r\n                    var options = Object.defineProperty({}, 'passive', {\r\n                        get: function() {\r\n                            supports = true;\r\n                        }\r\n                    });\r\n                    window.addEventListener('e', null, options);\r\n                } catch (e) {\r\n                    // continue regardless of error\r\n                }\r\n                return supports;\r\n            }());\r\n\r\n            // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\r\n            // https://github.com/chartjs/Chart.js/issues/4287\r\n            var eventListenerOptions = supportsEventListenerOptions ? { passive: true } : false;\r\n\r\n            function addEventListener(node, type, listener) {\r\n                node.addEventListener(type, listener, eventListenerOptions);\r\n            }\r\n\r\n            function removeEventListener(node, type, listener) {\r\n                node.removeEventListener(type, listener, eventListenerOptions);\r\n            }\r\n\r\n            function createEvent(type, chart, x, y, nativeEvent) {\r\n                return {\r\n                    type: type,\r\n                    chart: chart,\r\n                    native: nativeEvent || null,\r\n                    x: x !== undefined ? x : null,\r\n                    y: y !== undefined ? y : null,\r\n                };\r\n            }\r\n\r\n            function fromNativeEvent(event, chart) {\r\n                var type = EVENT_TYPES[event.type] || event.type;\r\n                var pos = helpers.getRelativePosition(event, chart);\r\n                return createEvent(type, chart, pos.x, pos.y, event);\r\n            }\r\n\r\n            function throttled(fn, thisArg) {\r\n                var ticking = false;\r\n                var args = [];\r\n\r\n                return function() {\r\n                    args = Array.prototype.slice.call(arguments);\r\n                    thisArg = thisArg || this;\r\n\r\n                    if (!ticking) {\r\n                        ticking = true;\r\n                        helpers.requestAnimFrame.call(window, function() {\r\n                            ticking = false;\r\n                            fn.apply(thisArg, args);\r\n                        });\r\n                    }\r\n                };\r\n            }\r\n\r\n            // Implementation based on https://github.com/marcj/css-element-queries\r\n            function createResizer(handler) {\r\n                var resizer = document.createElement('div');\r\n                var cls = CSS_PREFIX + 'size-monitor';\r\n                var maxSize = 1000000;\r\n                var style =\r\n                    'position:absolute;' +\r\n                    'left:0;' +\r\n                    'top:0;' +\r\n                    'right:0;' +\r\n                    'bottom:0;' +\r\n                    'overflow:hidden;' +\r\n                    'pointer-events:none;' +\r\n                    'visibility:hidden;' +\r\n                    'z-index:-1;';\r\n\r\n                resizer.style.cssText = style;\r\n                resizer.className = cls;\r\n                resizer.innerHTML =\r\n                    '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\r\n                    '<div style=\"' +\r\n                    'position:absolute;' +\r\n                    'width:' + maxSize + 'px;' +\r\n                    'height:' + maxSize + 'px;' +\r\n                    'left:0;' +\r\n                    'top:0\">' +\r\n                    '</div>' +\r\n                    '</div>' +\r\n                    '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\r\n                    '<div style=\"' +\r\n                    'position:absolute;' +\r\n                    'width:200%;' +\r\n                    'height:200%;' +\r\n                    'left:0; ' +\r\n                    'top:0\">' +\r\n                    '</div>' +\r\n                    '</div>';\r\n\r\n                var expand = resizer.childNodes[0];\r\n                var shrink = resizer.childNodes[1];\r\n\r\n                resizer._reset = function() {\r\n                    expand.scrollLeft = maxSize;\r\n                    expand.scrollTop = maxSize;\r\n                    shrink.scrollLeft = maxSize;\r\n                    shrink.scrollTop = maxSize;\r\n                };\r\n                var onScroll = function() {\r\n                    resizer._reset();\r\n                    handler();\r\n                };\r\n\r\n                addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\r\n                addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\r\n\r\n                return resizer;\r\n            }\r\n\r\n            // https://davidwalsh.name/detect-node-insertion\r\n            function watchForRender(node, handler) {\r\n                var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\r\n                var proxy = expando.renderProxy = function(e) {\r\n                    if (e.animationName === CSS_RENDER_ANIMATION) {\r\n                        handler();\r\n                    }\r\n                };\r\n\r\n                helpers.each(ANIMATION_START_EVENTS, function(type) {\r\n                    addEventListener(node, type, proxy);\r\n                });\r\n\r\n                // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\r\n                // is removed then added back immediately (same animation frame?). Accessing the\r\n                // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\r\n                // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\r\n                // https://github.com/chartjs/Chart.js/issues/4737\r\n                expando.reflow = !!node.offsetParent;\r\n\r\n                node.classList.add(CSS_RENDER_MONITOR);\r\n            }\r\n\r\n            function unwatchForRender(node) {\r\n                var expando = node[EXPANDO_KEY] || {};\r\n                var proxy = expando.renderProxy;\r\n\r\n                if (proxy) {\r\n                    helpers.each(ANIMATION_START_EVENTS, function(type) {\r\n                        removeEventListener(node, type, proxy);\r\n                    });\r\n\r\n                    delete expando.renderProxy;\r\n                }\r\n\r\n                node.classList.remove(CSS_RENDER_MONITOR);\r\n            }\r\n\r\n            function addResizeListener(node, listener, chart) {\r\n                var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\r\n\r\n                // Let's keep track of this added resizer and thus avoid DOM query when removing it.\r\n                var resizer = expando.resizer = createResizer(throttled(function() {\r\n                    if (expando.resizer) {\r\n                        return listener(createEvent('resize', chart));\r\n                    }\r\n                }));\r\n\r\n                // The resizer needs to be attached to the node parent, so we first need to be\r\n                // sure that `node` is attached to the DOM before injecting the resizer element.\r\n                watchForRender(node, function() {\r\n                    if (expando.resizer) {\r\n                        var container = node.parentNode;\r\n                        if (container && container !== resizer.parentNode) {\r\n                            container.insertBefore(resizer, container.firstChild);\r\n                        }\r\n\r\n                        // The container size might have changed, let's reset the resizer state.\r\n                        resizer._reset();\r\n                    }\r\n                });\r\n            }\r\n\r\n            function removeResizeListener(node) {\r\n                var expando = node[EXPANDO_KEY] || {};\r\n                var resizer = expando.resizer;\r\n\r\n                delete expando.resizer;\r\n                unwatchForRender(node);\r\n\r\n                if (resizer && resizer.parentNode) {\r\n                    resizer.parentNode.removeChild(resizer);\r\n                }\r\n            }\r\n\r\n            //function injectCSS(platform, css) {\r\n            //    // http://stackoverflow.com/q/3922139\r\n            //    var style = platform._style || document.createElement('style');\r\n            //    if (!platform._style) {\r\n            //        platform._style = style;\r\n            //        css = '/* Chart.js */\\n' + css;\r\n            //        style.setAttribute('type', 'text/css');\r\n            //        document.getElementsByTagName('head')[0].appendChild(style);\r\n            //    }\r\n\r\n            //    style.appendChild(document.createTextNode(css));\r\n            //}\r\n\r\n            module.exports = {\r\n                /**\r\n                 * This property holds whether this platform is enabled for the current environment.\r\n                 * Currently used by platform.js to select the proper implementation.\r\n                 * @private\r\n                 */\r\n                _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\r\n\r\n                initialize: function() {\r\n                    var keyframes = 'from{opacity:0.99}to{opacity:1}';\r\n                    //injectCSS(this,\r\n                    //    // DOM rendering detection\r\n                    //    // https://davidwalsh.name/detect-node-insertion\r\n                    //    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\r\n                    //    '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\r\n                    //    '.' + CSS_RENDER_MONITOR + '{' +\r\n                    //    '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\r\n                    //    'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\r\n                    //    '}'\r\n                    //);\r\n                },\r\n\r\n                acquireContext: function(item, config) {\r\n                    if (typeof item === 'string') {\r\n                        item = document.getElementById(item);\r\n                    } else if (item.length) {\r\n                        // Support for array based queries (such as jQuery)\r\n                        item = item[0];\r\n                    }\r\n\r\n                    if (item && item.canvas) {\r\n                        // Support for any object associated to a canvas (including a context2d)\r\n                        item = item.canvas;\r\n                    }\r\n\r\n                    // To prevent canvas fingerprinting, some add-ons undefine the getContext\r\n                    // method, for example: https://github.com/kkapsner/CanvasBlocker\r\n                    // https://github.com/chartjs/Chart.js/issues/2807\r\n                    var context = item && item.getContext && item.getContext('2d');\r\n\r\n                    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\r\n                    // inside an iframe or when running in a protected environment. We could guess the\r\n                    // types from their toString() value but let's keep things flexible and assume it's\r\n                    // a sufficient condition if the item has a context2D which has item as `canvas`.\r\n                    // https://github.com/chartjs/Chart.js/issues/3887\r\n                    // https://github.com/chartjs/Chart.js/issues/4102\r\n                    // https://github.com/chartjs/Chart.js/issues/4152\r\n                    if (context && context.canvas === item) {\r\n                        initCanvas(item, config);\r\n                        return context;\r\n                    }\r\n\r\n                    return null;\r\n                },\r\n\r\n                releaseContext: function(context) {\r\n                    var canvas = context.canvas;\r\n                    if (!canvas[EXPANDO_KEY]) {\r\n                        return;\r\n                    }\r\n\r\n                    var initial = canvas[EXPANDO_KEY].initial;\r\n                    ['height', 'width'].forEach(function(prop) {\r\n                        var value = initial[prop];\r\n                        if (helpers.isNullOrUndef(value)) {\r\n                            canvas.removeAttribute(prop);\r\n                        } else {\r\n                            canvas.setAttribute(prop, value);\r\n                        }\r\n                    });\r\n\r\n                    helpers.each(initial.style || {}, function(value, key) {\r\n                        canvas.style[key] = value;\r\n                    });\r\n\r\n                    // The canvas render size might have been changed (and thus the state stack discarded),\r\n                    // we can't use save() and restore() to restore the initial state. So make sure that at\r\n                    // least the canvas context is reset to the default state by setting the canvas width.\r\n                    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\r\n                    canvas.width = canvas.width;\r\n\r\n                    delete canvas[EXPANDO_KEY];\r\n                },\r\n\r\n                addEventListener: function(chart, type, listener) {\r\n                    var canvas = chart.canvas;\r\n                    if (type === 'resize') {\r\n                        // Note: the resize event is not supported on all browsers.\r\n                        addResizeListener(canvas, listener, chart);\r\n                        return;\r\n                    }\r\n\r\n                    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\r\n                    var proxies = expando.proxies || (expando.proxies = {});\r\n                    var proxy = proxies[chart.id + '_' + type] = function(event) {\r\n                        listener(fromNativeEvent(event, chart));\r\n                    };\r\n\r\n                    addEventListener(canvas, type, proxy);\r\n                },\r\n\r\n                removeEventListener: function(chart, type, listener) {\r\n                    var canvas = chart.canvas;\r\n                    if (type === 'resize') {\r\n                        // Note: the resize event is not supported on all browsers.\r\n                        removeResizeListener(canvas, listener);\r\n                        return;\r\n                    }\r\n\r\n                    var expando = listener[EXPANDO_KEY] || {};\r\n                    var proxies = expando.proxies || {};\r\n                    var proxy = proxies[chart.id + '_' + type];\r\n                    if (!proxy) {\r\n                        return;\r\n                    }\r\n\r\n                    removeEventListener(canvas, type, proxy);\r\n                }\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use EventTarget.addEventListener instead.\r\n             * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\r\n             * @function Chart.helpers.addEvent\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.addEvent = addEventListener;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use EventTarget.removeEventListener instead.\r\n             * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\r\n             * @function Chart.helpers.removeEvent\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.removeEvent = removeEventListener;\r\n        }, { \"36\": 36 }], 39: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n            var basic = require(37);\r\n            var dom = require(38);\r\n\r\n            // @TODO Make possible to select another platform at build time.\r\n            var implementation = dom._enabled ? dom : basic;\r\n\r\n            /**\r\n             * @namespace Chart.platform\r\n             * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\r\n             * @since 2.4.0\r\n             */\r\n            module.exports = helpers.extend({\r\n                /**\r\n                 * @since 2.7.0\r\n                 */\r\n                initialize: function() { },\r\n\r\n                /**\r\n                 * Called at chart construction time, returns a context2d instance implementing\r\n                 * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\r\n                 * @param {*} item - The native item from which to acquire context (platform specific)\r\n                 * @param {Object} options - The chart options\r\n                 * @returns {CanvasRenderingContext2D} context2d instance\r\n                 */\r\n                acquireContext: function() { },\r\n\r\n                /**\r\n                 * Called at chart destruction time, releases any resources associated to the context\r\n                 * previously returned by the acquireContext() method.\r\n                 * @param {CanvasRenderingContext2D} context - The context2d instance\r\n                 * @returns {Boolean} true if the method succeeded, else false\r\n                 */\r\n                releaseContext: function() { },\r\n\r\n                /**\r\n                 * Registers the specified listener on the given chart.\r\n                 * @param {Chart} chart - Chart from which to listen for event\r\n                 * @param {String} type - The ({@link IEvent}) type to listen for\r\n                 * @param {Function} listener - Receives a notification (an object that implements\r\n                 * the {@link IEvent} interface) when an event of the specified type occurs.\r\n                 */\r\n                addEventListener: function() { },\r\n\r\n                /**\r\n                 * Removes the specified listener previously registered with addEventListener.\r\n                 * @param {Chart} chart -Chart from which to remove the listener\r\n                 * @param {String} type - The ({@link IEvent}) type to remove\r\n                 * @param {Function} listener - The listener function to remove from the event target.\r\n                 */\r\n                removeEventListener: function() { }\r\n            }, implementation);\r\n\r\n            /**\r\n             * @interface IPlatform\r\n             * Allows abstracting platform dependencies away from the chart\r\n             * @borrows Chart.platform.acquireContext as acquireContext\r\n             * @borrows Chart.platform.releaseContext as releaseContext\r\n             * @borrows Chart.platform.addEventListener as addEventListener\r\n             * @borrows Chart.platform.removeEventListener as removeEventListener\r\n             */\r\n\r\n            /**\r\n             * @interface IEvent\r\n             * @prop {String} type - The event type name, possible values are:\r\n             * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\r\n             * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\r\n             * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\r\n             * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\r\n             * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\r\n             */\r\n        }, { \"36\": 36, \"37\": 37, \"38\": 38 }], 40: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = {};\r\n            module.exports.filler = require(41);\r\n            module.exports.legend = require(42);\r\n            module.exports.title = require(43);\r\n        }, { \"41\": 41, \"42\": 42, \"43\": 43 }], 41: [function(require, module, exports) {\r\n            /**\r\n             * Plugin based on discussion from the following Chart.js issues:\r\n             * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\r\n             * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\r\n             */\r\n\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                plugins: {\r\n                    filler: {\r\n                        propagate: true\r\n                    }\r\n                }\r\n            });\r\n\r\n            var mappers = {\r\n                dataset: function(source) {\r\n                    var index = source.fill;\r\n                    var chart = source.chart;\r\n                    var meta = chart.getDatasetMeta(index);\r\n                    var visible = meta && chart.isDatasetVisible(index);\r\n                    var points = (visible && meta.dataset._children) || [];\r\n                    var length = points.length || 0;\r\n\r\n                    return !length ? null : function(point, i) {\r\n                        return (i < length && points[i]._view) || null;\r\n                    };\r\n                },\r\n\r\n                boundary: function(source) {\r\n                    var boundary = source.boundary;\r\n                    var x = boundary ? boundary.x : null;\r\n                    var y = boundary ? boundary.y : null;\r\n\r\n                    return function(point) {\r\n                        return {\r\n                            x: x === null ? point.x : x,\r\n                            y: y === null ? point.y : y,\r\n                        };\r\n                    };\r\n                }\r\n            };\r\n\r\n            // @todo if (fill[0] === '#')\r\n            function decodeFill(el, index, count) {\r\n                var model = el._model || {};\r\n                var fill = model.fill;\r\n                var target;\r\n\r\n                if (fill === undefined) {\r\n                    fill = !!model.backgroundColor;\r\n                }\r\n\r\n                if (fill === false || fill === null) {\r\n                    return false;\r\n                }\r\n\r\n                if (fill === true) {\r\n                    return 'origin';\r\n                }\r\n\r\n                target = parseFloat(fill, 10);\r\n                if (isFinite(target) && Math.floor(target) === target) {\r\n                    if (fill[0] === '-' || fill[0] === '+') {\r\n                        target = index + target;\r\n                    }\r\n\r\n                    if (target === index || target < 0 || target >= count) {\r\n                        return false;\r\n                    }\r\n\r\n                    return target;\r\n                }\r\n\r\n                switch (fill) {\r\n                    // compatibility\r\n                    case 'bottom':\r\n                        return 'start';\r\n                    case 'top':\r\n                        return 'end';\r\n                    case 'zero':\r\n                        return 'origin';\r\n                    // supported boundaries\r\n                    case 'origin':\r\n                    case 'start':\r\n                    case 'end':\r\n                        return fill;\r\n                    // invalid fill values\r\n                    default:\r\n                        return false;\r\n                }\r\n            }\r\n\r\n            function computeBoundary(source) {\r\n                var model = source.el._model || {};\r\n                var scale = source.el._scale || {};\r\n                var fill = source.fill;\r\n                var target = null;\r\n                var horizontal;\r\n\r\n                if (isFinite(fill)) {\r\n                    return null;\r\n                }\r\n\r\n                // Backward compatibility: until v3, we still need to support boundary values set on\r\n                // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\r\n                // controllers might still use it (e.g. the Smith chart).\r\n\r\n                if (fill === 'start') {\r\n                    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\r\n                } else if (fill === 'end') {\r\n                    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\r\n                } else if (model.scaleZero !== undefined) {\r\n                    target = model.scaleZero;\r\n                } else if (scale.getBasePosition) {\r\n                    target = scale.getBasePosition();\r\n                } else if (scale.getBasePixel) {\r\n                    target = scale.getBasePixel();\r\n                }\r\n\r\n                if (target !== undefined && target !== null) {\r\n                    if (target.x !== undefined && target.y !== undefined) {\r\n                        return target;\r\n                    }\r\n\r\n                    if (typeof target === 'number' && isFinite(target)) {\r\n                        horizontal = scale.isHorizontal();\r\n                        return {\r\n                            x: horizontal ? target : null,\r\n                            y: horizontal ? null : target\r\n                        };\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n\r\n            function resolveTarget(sources, index, propagate) {\r\n                var source = sources[index];\r\n                var fill = source.fill;\r\n                var visited = [index];\r\n                var target;\r\n\r\n                if (!propagate) {\r\n                    return fill;\r\n                }\r\n\r\n                while (fill !== false && visited.indexOf(fill) === -1) {\r\n                    if (!isFinite(fill)) {\r\n                        return fill;\r\n                    }\r\n\r\n                    target = sources[fill];\r\n                    if (!target) {\r\n                        return false;\r\n                    }\r\n\r\n                    if (target.visible) {\r\n                        return fill;\r\n                    }\r\n\r\n                    visited.push(fill);\r\n                    fill = target.fill;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            function createMapper(source) {\r\n                var fill = source.fill;\r\n                var type = 'dataset';\r\n\r\n                if (fill === false) {\r\n                    return null;\r\n                }\r\n\r\n                if (!isFinite(fill)) {\r\n                    type = 'boundary';\r\n                }\r\n\r\n                return mappers[type](source);\r\n            }\r\n\r\n            function isDrawable(point) {\r\n                return point && !point.skip;\r\n            }\r\n\r\n            function drawArea(ctx, curve0, curve1, len0, len1) {\r\n                var i;\r\n\r\n                if (!len0 || !len1) {\r\n                    return;\r\n                }\r\n\r\n                // building first area curve (normal)\r\n                ctx.moveTo(curve0[0].x, curve0[0].y);\r\n                for (i = 1; i < len0; ++i) {\r\n                    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\r\n                }\r\n\r\n                // joining the two area curves\r\n                ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\r\n\r\n                // building opposite area curve (reverse)\r\n                for (i = len1 - 1; i > 0; --i) {\r\n                    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\r\n                }\r\n            }\r\n\r\n            function doFill(ctx, points, mapper, view, color, loop) {\r\n                var count = points.length;\r\n                var span = view.spanGaps;\r\n                var curve0 = [];\r\n                var curve1 = [];\r\n                var len0 = 0;\r\n                var len1 = 0;\r\n                var i, ilen, index, p0, p1, d0, d1;\r\n\r\n                ctx.beginPath();\r\n\r\n                for (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\r\n                    index = i % count;\r\n                    p0 = points[index]._view;\r\n                    p1 = mapper(p0, index, view);\r\n                    d0 = isDrawable(p0);\r\n                    d1 = isDrawable(p1);\r\n\r\n                    if (d0 && d1) {\r\n                        len0 = curve0.push(p0);\r\n                        len1 = curve1.push(p1);\r\n                    } else if (len0 && len1) {\r\n                        if (!span) {\r\n                            drawArea(ctx, curve0, curve1, len0, len1);\r\n                            len0 = len1 = 0;\r\n                            curve0 = [];\r\n                            curve1 = [];\r\n                        } else {\r\n                            if (d0) {\r\n                                curve0.push(p0);\r\n                            }\r\n                            if (d1) {\r\n                                curve1.push(p1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                drawArea(ctx, curve0, curve1, len0, len1);\r\n\r\n                ctx.closePath();\r\n                ctx.fillStyle = color;\r\n                ctx.fill();\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'filler',\r\n\r\n                afterDatasetsUpdate: function(chart, options) {\r\n                    var count = (chart.data.datasets || []).length;\r\n                    var propagate = options.propagate;\r\n                    var sources = [];\r\n                    var meta, i, el, source;\r\n\r\n                    for (i = 0; i < count; ++i) {\r\n                        meta = chart.getDatasetMeta(i);\r\n                        el = meta.dataset;\r\n                        source = null;\r\n\r\n                        if (el && el._model && el instanceof elements.Line) {\r\n                            source = {\r\n                                visible: chart.isDatasetVisible(i),\r\n                                fill: decodeFill(el, i, count),\r\n                                chart: chart,\r\n                                el: el\r\n                            };\r\n                        }\r\n\r\n                        meta.$filler = source;\r\n                        sources.push(source);\r\n                    }\r\n\r\n                    for (i = 0; i < count; ++i) {\r\n                        source = sources[i];\r\n                        if (!source) {\r\n                            continue;\r\n                        }\r\n\r\n                        source.fill = resolveTarget(sources, i, propagate);\r\n                        source.boundary = computeBoundary(source);\r\n                        source.mapper = createMapper(source);\r\n                    }\r\n                },\r\n\r\n                beforeDatasetDraw: function(chart, args) {\r\n                    var meta = args.meta.$filler;\r\n                    if (!meta) {\r\n                        return;\r\n                    }\r\n\r\n                    var ctx = chart.ctx;\r\n                    var el = meta.el;\r\n                    var view = el._view;\r\n                    var points = el._children || [];\r\n                    var mapper = meta.mapper;\r\n                    var color = view.backgroundColor || defaults.global.defaultColor;\r\n\r\n                    if (mapper && color && points.length) {\r\n                        helpers.canvas.clipArea(ctx, chart.chartArea);\r\n                        doFill(ctx, points, mapper, view, color, el._loop);\r\n                        helpers.canvas.unclipArea(ctx);\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 42: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            var noop = helpers.noop;\r\n\r\n            defaults._set('global', {\r\n                legend: {\r\n                    display: true,\r\n                    position: 'top',\r\n                    fullWidth: true,\r\n                    reverse: false,\r\n                    weight: 1000,\r\n\r\n                    // a callback that will handle\r\n                    onClick: function(e, legendItem) {\r\n                        var index = legendItem.datasetIndex;\r\n                        var ci = this.chart;\r\n                        var meta = ci.getDatasetMeta(index);\r\n\r\n                        // See controller.isDatasetVisible comment\r\n                        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\r\n\r\n                        // We hid a dataset ... rerender the chart\r\n                        ci.update();\r\n                    },\r\n\r\n                    onHover: null,\r\n\r\n                    labels: {\r\n                        boxWidth: 40,\r\n                        padding: 10,\r\n                        // Generates labels shown in the legend\r\n                        // Valid properties to return:\r\n                        // text : text to display\r\n                        // fillStyle : fill of coloured box\r\n                        // strokeStyle: stroke of coloured box\r\n                        // hidden : if this legend item refers to a hidden item\r\n                        // lineCap : cap style for line\r\n                        // lineDash\r\n                        // lineDashOffset :\r\n                        // lineJoin :\r\n                        // lineWidth :\r\n                        generateLabels: function(chart) {\r\n                            var data = chart.data;\r\n                            return helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\r\n                                return {\r\n                                    text: dataset.label,\r\n                                    fillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\r\n                                    hidden: !chart.isDatasetVisible(i),\r\n                                    lineCap: dataset.borderCapStyle,\r\n                                    lineDash: dataset.borderDash,\r\n                                    lineDashOffset: dataset.borderDashOffset,\r\n                                    lineJoin: dataset.borderJoinStyle,\r\n                                    lineWidth: dataset.borderWidth,\r\n                                    strokeStyle: dataset.borderColor,\r\n                                    pointStyle: dataset.pointStyle,\r\n\r\n                                    // Below is extra data used for toggling the datasets\r\n                                    datasetIndex: i\r\n                                };\r\n                            }, this) : [];\r\n                        }\r\n                    }\r\n                },\r\n\r\n                legendCallback: function(chart) {\r\n                    var text = [];\r\n                    text.push('<ul class=\"' + chart.id + '-legend\">');\r\n                    for (var i = 0; i < chart.data.datasets.length; i++) {\r\n                        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\r\n                        if (chart.data.datasets[i].label) {\r\n                            text.push(chart.data.datasets[i].label);\r\n                        }\r\n                        text.push('</li>');\r\n                    }\r\n                    text.push('</ul>');\r\n                    return text.join('');\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Helper function to get the box width based on the usePointStyle option\r\n             * @param labelopts {Object} the label options on the legend\r\n             * @param fontSize {Number} the label font size\r\n             * @return {Number} width of the color box area\r\n             */\r\n            function getBoxWidth(labelOpts, fontSize) {\r\n                return labelOpts.usePointStyle ?\r\n                    fontSize * Math.SQRT2 :\r\n                    labelOpts.boxWidth;\r\n            }\r\n\r\n            /**\r\n             * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\r\n             */\r\n            var Legend = Element.extend({\r\n                initialize: function(config) {\r\n                    helpers.extend(this, config);\r\n\r\n                    // Contains hit boxes for each dataset (in dataset order)\r\n                    this.legendHitBoxes = [];\r\n\r\n                    // Are we in doughnut mode which has a different data type\r\n                    this.doughnutMode = false;\r\n                },\r\n\r\n                // These methods are ordered by lifecycle. Utilities then follow.\r\n                // Any function defined here is inherited by all legend types.\r\n                // Any function can be extended by the legend type\r\n\r\n                beforeUpdate: noop,\r\n                update: function(maxWidth, maxHeight, margins) {\r\n                    var me = this;\r\n\r\n                    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                    me.beforeUpdate();\r\n\r\n                    // Absorb the master measurements\r\n                    me.maxWidth = maxWidth;\r\n                    me.maxHeight = maxHeight;\r\n                    me.margins = margins;\r\n\r\n                    // Dimensions\r\n                    me.beforeSetDimensions();\r\n                    me.setDimensions();\r\n                    me.afterSetDimensions();\r\n                    // Labels\r\n                    me.beforeBuildLabels();\r\n                    me.buildLabels();\r\n                    me.afterBuildLabels();\r\n\r\n                    // Fit\r\n                    me.beforeFit();\r\n                    me.fit();\r\n                    me.afterFit();\r\n                    //\r\n                    me.afterUpdate();\r\n\r\n                    return me.minSize;\r\n                },\r\n                afterUpdate: noop,\r\n\r\n                //\r\n\r\n                beforeSetDimensions: noop,\r\n                setDimensions: function() {\r\n                    var me = this;\r\n                    // Set the unconstrained dimension before label rotation\r\n                    if (me.isHorizontal()) {\r\n                        // Reset position before calculating rotation\r\n                        me.width = me.maxWidth;\r\n                        me.left = 0;\r\n                        me.right = me.width;\r\n                    } else {\r\n                        me.height = me.maxHeight;\r\n\r\n                        // Reset position before calculating rotation\r\n                        me.top = 0;\r\n                        me.bottom = me.height;\r\n                    }\r\n\r\n                    // Reset padding\r\n                    me.paddingLeft = 0;\r\n                    me.paddingTop = 0;\r\n                    me.paddingRight = 0;\r\n                    me.paddingBottom = 0;\r\n\r\n                    // Reset minSize\r\n                    me.minSize = {\r\n                        width: 0,\r\n                        height: 0\r\n                    };\r\n                },\r\n                afterSetDimensions: noop,\r\n\r\n                //\r\n\r\n                beforeBuildLabels: noop,\r\n                buildLabels: function() {\r\n                    var me = this;\r\n                    var labelOpts = me.options.labels || {};\r\n                    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\r\n\r\n                    if (labelOpts.filter) {\r\n                        legendItems = legendItems.filter(function(item) {\r\n                            return labelOpts.filter(item, me.chart.data);\r\n                        });\r\n                    }\r\n\r\n                    if (me.options.reverse) {\r\n                        legendItems.reverse();\r\n                    }\r\n\r\n                    me.legendItems = legendItems;\r\n                },\r\n                afterBuildLabels: noop,\r\n\r\n                //\r\n\r\n                beforeFit: noop,\r\n                fit: function() {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var labelOpts = opts.labels;\r\n                    var display = opts.display;\r\n\r\n                    var ctx = me.ctx;\r\n\r\n                    var globalDefault = defaults.global;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\r\n                    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\r\n                    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\r\n                    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n                    // Reset hit boxes\r\n                    var hitboxes = me.legendHitBoxes = [];\r\n\r\n                    var minSize = me.minSize;\r\n                    var isHorizontal = me.isHorizontal();\r\n\r\n                    if (isHorizontal) {\r\n                        minSize.width = me.maxWidth; // fill all the width\r\n                        minSize.height = display ? 10 : 0;\r\n                    } else {\r\n                        minSize.width = display ? 10 : 0;\r\n                        minSize.height = me.maxHeight; // fill all the height\r\n                    }\r\n\r\n                    // Increase sizes here\r\n                    if (display) {\r\n                        ctx.font = labelFont;\r\n\r\n                        if (isHorizontal) {\r\n                            // Labels\r\n\r\n                            // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\r\n                            var lineWidths = me.lineWidths = [0];\r\n                            var totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\r\n\r\n                            ctx.textAlign = 'left';\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            helpers.each(me.legendItems, function(legendItem, i) {\r\n                                var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                                var width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n                                if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\r\n                                    totalHeight += fontSize + (labelOpts.padding);\r\n                                    lineWidths[lineWidths.length] = me.left;\r\n                                }\r\n\r\n                                // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                                hitboxes[i] = {\r\n                                    left: 0,\r\n                                    top: 0,\r\n                                    width: width,\r\n                                    height: fontSize\r\n                                };\r\n\r\n                                lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\r\n                            });\r\n\r\n                            minSize.height += totalHeight;\r\n                        } else {\r\n                            var vPadding = labelOpts.padding;\r\n                            var columnWidths = me.columnWidths = [];\r\n                            var totalWidth = labelOpts.padding;\r\n                            var currentColWidth = 0;\r\n                            var currentColHeight = 0;\r\n                            var itemHeight = fontSize + vPadding;\r\n\r\n                            helpers.each(me.legendItems, function(legendItem, i) {\r\n                                var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                                var itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n                                // If too tall, go to new column\r\n                                if (currentColHeight + itemHeight > minSize.height) {\r\n                                    totalWidth += currentColWidth + labelOpts.padding;\r\n                                    columnWidths.push(currentColWidth); // previous column width\r\n\r\n                                    currentColWidth = 0;\r\n                                    currentColHeight = 0;\r\n                                }\r\n\r\n                                // Get max width\r\n                                currentColWidth = Math.max(currentColWidth, itemWidth);\r\n                                currentColHeight += itemHeight;\r\n\r\n                                // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                                hitboxes[i] = {\r\n                                    left: 0,\r\n                                    top: 0,\r\n                                    width: itemWidth,\r\n                                    height: fontSize\r\n                                };\r\n                            });\r\n\r\n                            totalWidth += currentColWidth;\r\n                            columnWidths.push(currentColWidth);\r\n                            minSize.width += totalWidth;\r\n                        }\r\n                    }\r\n\r\n                    me.width = minSize.width;\r\n                    me.height = minSize.height;\r\n                },\r\n                afterFit: noop,\r\n\r\n                // Shared Methods\r\n                isHorizontal: function() {\r\n                    return this.options.position === 'top' || this.options.position === 'bottom';\r\n                },\r\n\r\n                // Actually draw the legend on the canvas\r\n                draw: function() {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var labelOpts = opts.labels;\r\n                    var globalDefault = defaults.global;\r\n                    var lineDefault = globalDefault.elements.line;\r\n                    var legendWidth = me.width;\r\n                    var lineWidths = me.lineWidths;\r\n\r\n                    if (opts.display) {\r\n                        var ctx = me.ctx;\r\n                        var valueOrDefault = helpers.valueOrDefault;\r\n                        var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\r\n                        var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\r\n                        var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\r\n                        var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\r\n                        var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n                        var cursor;\r\n\r\n                        // Canvas setup\r\n                        ctx.textAlign = 'left';\r\n                        ctx.textBaseline = 'middle';\r\n                        ctx.lineWidth = 0.5;\r\n                        ctx.strokeStyle = fontColor; // for strikethrough effect\r\n                        ctx.fillStyle = fontColor; // render in correct colour\r\n                        ctx.font = labelFont;\r\n\r\n                        var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                        var hitboxes = me.legendHitBoxes;\r\n\r\n                        // current position\r\n                        var drawLegendBox = function(x, y, legendItem) {\r\n                            if (isNaN(boxWidth) || boxWidth <= 0) {\r\n                                return;\r\n                            }\r\n\r\n                            // Set the ctx for the box\r\n                            ctx.save();\r\n\r\n                            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\r\n                            ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\r\n                            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\r\n                            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\r\n                            ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\r\n                            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\r\n                            var isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\r\n\r\n                            if (ctx.setLineDash) {\r\n                                // IE 9 and 10 do not support line dash\r\n                                ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\r\n                            }\r\n\r\n                            if (opts.labels && opts.labels.usePointStyle) {\r\n                                // Recalculate x and y for drawPoint() because its expecting\r\n                                // x and y to be center of figure (instead of top left)\r\n                                var radius = fontSize * Math.SQRT2 / 2;\r\n                                var offSet = radius / Math.SQRT2;\r\n                                var centerX = x + offSet;\r\n                                var centerY = y + offSet;\r\n\r\n                                // Draw pointStyle as legend symbol\r\n                                helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\r\n                            } else {\r\n                                // Draw box as legend symbol\r\n                                if (!isLineWidthZero) {\r\n                                    ctx.strokeRect(x, y, boxWidth, fontSize);\r\n                                }\r\n                                ctx.fillRect(x, y, boxWidth, fontSize);\r\n                            }\r\n\r\n                            ctx.restore();\r\n                        };\r\n                        var fillText = function(x, y, legendItem, textWidth) {\r\n                            var halfFontSize = fontSize / 2;\r\n                            var xLeft = boxWidth + halfFontSize + x;\r\n                            var yMiddle = y + halfFontSize;\r\n\r\n                            ctx.fillText(legendItem.text, xLeft, yMiddle);\r\n\r\n                            if (legendItem.hidden) {\r\n                                // Strikethrough the text if hidden\r\n                                ctx.beginPath();\r\n                                ctx.lineWidth = 2;\r\n                                ctx.moveTo(xLeft, yMiddle);\r\n                                ctx.lineTo(xLeft + textWidth, yMiddle);\r\n                                ctx.stroke();\r\n                            }\r\n                        };\r\n\r\n                        // Horizontal\r\n                        var isHorizontal = me.isHorizontal();\r\n                        if (isHorizontal) {\r\n                            cursor = {\r\n                                x: me.left + ((legendWidth - lineWidths[0]) / 2),\r\n                                y: me.top + labelOpts.padding,\r\n                                line: 0\r\n                            };\r\n                        } else {\r\n                            cursor = {\r\n                                x: me.left + labelOpts.padding,\r\n                                y: me.top + labelOpts.padding,\r\n                                line: 0\r\n                            };\r\n                        }\r\n\r\n                        var itemHeight = fontSize + labelOpts.padding;\r\n                        helpers.each(me.legendItems, function(legendItem, i) {\r\n                            var textWidth = ctx.measureText(legendItem.text).width;\r\n                            var width = boxWidth + (fontSize / 2) + textWidth;\r\n                            var x = cursor.x;\r\n                            var y = cursor.y;\r\n\r\n                            if (isHorizontal) {\r\n                                if (x + width >= legendWidth) {\r\n                                    y = cursor.y += itemHeight;\r\n                                    cursor.line++;\r\n                                    x = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\r\n                                }\r\n                            } else if (y + itemHeight > me.bottom) {\r\n                                x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\r\n                                y = cursor.y = me.top + labelOpts.padding;\r\n                                cursor.line++;\r\n                            }\r\n\r\n                            drawLegendBox(x, y, legendItem);\r\n\r\n                            hitboxes[i].left = x;\r\n                            hitboxes[i].top = y;\r\n\r\n                            // Fill the actual label\r\n                            fillText(x, y, legendItem, textWidth);\r\n\r\n                            if (isHorizontal) {\r\n                                cursor.x += width + (labelOpts.padding);\r\n                            } else {\r\n                                cursor.y += itemHeight;\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Handle an event\r\n                 * @private\r\n                 * @param {IEvent} event - The event to handle\r\n                 * @return {Boolean} true if a change occured\r\n                 */\r\n                handleEvent: function(e) {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var type = e.type === 'mouseup' ? 'click' : e.type;\r\n                    var changed = false;\r\n\r\n                    if (type === 'mousemove') {\r\n                        if (!opts.onHover) {\r\n                            return;\r\n                        }\r\n                    } else if (type === 'click') {\r\n                        if (!opts.onClick) {\r\n                            return;\r\n                        }\r\n                    } else {\r\n                        return;\r\n                    }\r\n\r\n                    // Chart event already has relative position in it\r\n                    var x = e.x;\r\n                    var y = e.y;\r\n\r\n                    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\r\n                        // See if we are touching one of the dataset boxes\r\n                        var lh = me.legendHitBoxes;\r\n                        for (var i = 0; i < lh.length; ++i) {\r\n                            var hitBox = lh[i];\r\n\r\n                            if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n                                // Touching an element\r\n                                if (type === 'click') {\r\n                                    // use e.native for backwards compatibility\r\n                                    opts.onClick.call(me, e.native, me.legendItems[i]);\r\n                                    changed = true;\r\n                                    break;\r\n                                } else if (type === 'mousemove') {\r\n                                    // use e.native for backwards compatibility\r\n                                    opts.onHover.call(me, e.native, me.legendItems[i]);\r\n                                    changed = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return changed;\r\n                }\r\n            });\r\n\r\n            function createNewLegendAndAttach(chart, legendOpts) {\r\n                var legend = new Legend({\r\n                    ctx: chart.ctx,\r\n                    options: legendOpts,\r\n                    chart: chart\r\n                });\r\n\r\n                layouts.configure(chart, legend, legendOpts);\r\n                layouts.addBox(chart, legend);\r\n                chart.legend = legend;\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'legend',\r\n\r\n                /**\r\n                 * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\r\n                 * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\r\n                 * the plugin, which one will be re-exposed in the chart.js file.\r\n                 * https://github.com/chartjs/Chart.js/pull/2640\r\n                 * @private\r\n                 */\r\n                _element: Legend,\r\n\r\n                beforeInit: function(chart) {\r\n                    var legendOpts = chart.options.legend;\r\n\r\n                    if (legendOpts) {\r\n                        createNewLegendAndAttach(chart, legendOpts);\r\n                    }\r\n                },\r\n\r\n                beforeUpdate: function(chart) {\r\n                    var legendOpts = chart.options.legend;\r\n                    var legend = chart.legend;\r\n\r\n                    if (legendOpts) {\r\n                        helpers.mergeIf(legendOpts, defaults.global.legend);\r\n\r\n                        if (legend) {\r\n                            layouts.configure(chart, legend, legendOpts);\r\n                            legend.options = legendOpts;\r\n                        } else {\r\n                            createNewLegendAndAttach(chart, legendOpts);\r\n                        }\r\n                    } else if (legend) {\r\n                        layouts.removeBox(chart, legend);\r\n                        delete chart.legend;\r\n                    }\r\n                },\r\n\r\n                afterEvent: function(chart, e) {\r\n                    var legend = chart.legend;\r\n                    if (legend) {\r\n                        legend.handleEvent(e);\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"21\": 21, \"36\": 36 }], 43: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            var noop = helpers.noop;\r\n\r\n            defaults._set('global', {\r\n                title: {\r\n                    display: false,\r\n                    fontStyle: 'bold',\r\n                    fullWidth: true,\r\n                    lineHeight: 1.2,\r\n                    padding: 10,\r\n                    position: 'top',\r\n                    text: '',\r\n                    weight: 2000         // by default greater than legend (1000) to be above\r\n                }\r\n            });\r\n\r\n            /**\r\n             * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\r\n             */\r\n            var Title = Element.extend({\r\n                initialize: function(config) {\r\n                    var me = this;\r\n                    helpers.extend(me, config);\r\n\r\n                    // Contains hit boxes for each dataset (in dataset order)\r\n                    me.legendHitBoxes = [];\r\n                },\r\n\r\n                // These methods are ordered by lifecycle. Utilities then follow.\r\n\r\n                beforeUpdate: noop,\r\n                update: function(maxWidth, maxHeight, margins) {\r\n                    var me = this;\r\n\r\n                    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                    me.beforeUpdate();\r\n\r\n                    // Absorb the master measurements\r\n                    me.maxWidth = maxWidth;\r\n                    me.maxHeight = maxHeight;\r\n                    me.margins = margins;\r\n\r\n                    // Dimensions\r\n                    me.beforeSetDimensions();\r\n                    me.setDimensions();\r\n                    me.afterSetDimensions();\r\n                    // Labels\r\n                    me.beforeBuildLabels();\r\n                    me.buildLabels();\r\n                    me.afterBuildLabels();\r\n\r\n                    // Fit\r\n                    me.beforeFit();\r\n                    me.fit();\r\n                    me.afterFit();\r\n                    //\r\n                    me.afterUpdate();\r\n\r\n                    return me.minSize;\r\n                },\r\n                afterUpdate: noop,\r\n\r\n                //\r\n\r\n                beforeSetDimensions: noop,\r\n                setDimensions: function() {\r\n                    var me = this;\r\n                    // Set the unconstrained dimension before label rotation\r\n                    if (me.isHorizontal()) {\r\n                        // Reset position before calculating rotation\r\n                        me.width = me.maxWidth;\r\n                        me.left = 0;\r\n                        me.right = me.width;\r\n                    } else {\r\n                        me.height = me.maxHeight;\r\n\r\n                        // Reset position before calculating rotation\r\n                        me.top = 0;\r\n                        me.bottom = me.height;\r\n                    }\r\n\r\n                    // Reset padding\r\n                    me.paddingLeft = 0;\r\n                    me.paddingTop = 0;\r\n                    me.paddingRight = 0;\r\n                    me.paddingBottom = 0;\r\n\r\n                    // Reset minSize\r\n                    me.minSize = {\r\n                        width: 0,\r\n                        height: 0\r\n                    };\r\n                },\r\n                afterSetDimensions: noop,\r\n\r\n                //\r\n\r\n                beforeBuildLabels: noop,\r\n                buildLabels: noop,\r\n                afterBuildLabels: noop,\r\n\r\n                //\r\n\r\n                beforeFit: noop,\r\n                fit: function() {\r\n                    var me = this;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var opts = me.options;\r\n                    var display = opts.display;\r\n                    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\r\n                    var minSize = me.minSize;\r\n                    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\r\n                    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\r\n                    var textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\r\n\r\n                    if (me.isHorizontal()) {\r\n                        minSize.width = me.maxWidth; // fill all the width\r\n                        minSize.height = textSize;\r\n                    } else {\r\n                        minSize.width = textSize;\r\n                        minSize.height = me.maxHeight; // fill all the height\r\n                    }\r\n\r\n                    me.width = minSize.width;\r\n                    me.height = minSize.height;\r\n                },\r\n                afterFit: noop,\r\n\r\n                // Shared Methods\r\n                isHorizontal: function() {\r\n                    var pos = this.options.position;\r\n                    return pos === 'top' || pos === 'bottom';\r\n                },\r\n\r\n                // Actually draw the title block on the canvas\r\n                draw: function() {\r\n                    var me = this;\r\n                    var ctx = me.ctx;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var opts = me.options;\r\n                    var globalDefaults = defaults.global;\r\n\r\n                    if (opts.display) {\r\n                        var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\r\n                        var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\r\n                        var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\r\n                        var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n                        var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\r\n                        var offset = lineHeight / 2 + opts.padding;\r\n                        var rotation = 0;\r\n                        var top = me.top;\r\n                        var left = me.left;\r\n                        var bottom = me.bottom;\r\n                        var right = me.right;\r\n                        var maxWidth, titleX, titleY;\r\n\r\n                        ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\r\n                        ctx.font = titleFont;\r\n\r\n                        // Horizontal\r\n                        if (me.isHorizontal()) {\r\n                            titleX = left + ((right - left) / 2); // midpoint of the width\r\n                            titleY = top + offset;\r\n                            maxWidth = right - left;\r\n                        } else {\r\n                            titleX = opts.position === 'left' ? left + offset : right - offset;\r\n                            titleY = top + ((bottom - top) / 2);\r\n                            maxWidth = bottom - top;\r\n                            rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\r\n                        }\r\n\r\n                        ctx.save();\r\n                        ctx.translate(titleX, titleY);\r\n                        ctx.rotate(rotation);\r\n                        ctx.textAlign = 'center';\r\n                        ctx.textBaseline = 'middle';\r\n\r\n                        var text = opts.text;\r\n                        if (helpers.isArray(text)) {\r\n                            var y = 0;\r\n                            for (var i = 0; i < text.length; ++i) {\r\n                                ctx.fillText(text[i], 0, y, maxWidth);\r\n                                y += lineHeight;\r\n                            }\r\n                        } else {\r\n                            ctx.fillText(text, 0, 0, maxWidth);\r\n                        }\r\n\r\n                        ctx.restore();\r\n                    }\r\n                }\r\n            });\r\n\r\n            function createNewTitleBlockAndAttach(chart, titleOpts) {\r\n                var title = new Title({\r\n                    ctx: chart.ctx,\r\n                    options: titleOpts,\r\n                    chart: chart\r\n                });\r\n\r\n                layouts.configure(chart, title, titleOpts);\r\n                layouts.addBox(chart, title);\r\n                chart.titleBlock = title;\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'title',\r\n\r\n                /**\r\n                 * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\r\n                 * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\r\n                 * the plugin, which one will be re-exposed in the chart.js file.\r\n                 * https://github.com/chartjs/Chart.js/pull/2640\r\n                 * @private\r\n                 */\r\n                _element: Title,\r\n\r\n                beforeInit: function(chart) {\r\n                    var titleOpts = chart.options.title;\r\n\r\n                    if (titleOpts) {\r\n                        createNewTitleBlockAndAttach(chart, titleOpts);\r\n                    }\r\n                },\r\n\r\n                beforeUpdate: function(chart) {\r\n                    var titleOpts = chart.options.title;\r\n                    var titleBlock = chart.titleBlock;\r\n\r\n                    if (titleOpts) {\r\n                        helpers.mergeIf(titleOpts, defaults.global.title);\r\n\r\n                        if (titleBlock) {\r\n                            layouts.configure(chart, titleBlock, titleOpts);\r\n                            titleBlock.options = titleOpts;\r\n                        } else {\r\n                            createNewTitleBlockAndAttach(chart, titleOpts);\r\n                        }\r\n                    } else if (titleBlock) {\r\n                        layouts.removeBox(chart, titleBlock);\r\n                        delete chart.titleBlock;\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"21\": 21, \"36\": 36 }], 44: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                // Default config for a category scale\r\n                var defaultConfig = {\r\n                    position: 'bottom'\r\n                };\r\n\r\n                var DatasetScale = Chart.Scale.extend({\r\n                    /**\r\n                    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\r\n                    * else fall back to data.labels\r\n                    * @private\r\n                    */\r\n                    getLabels: function() {\r\n                        var data = this.chart.data;\r\n                        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\r\n                    },\r\n\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var labels = me.getLabels();\r\n                        me.minIndex = 0;\r\n                        me.maxIndex = labels.length - 1;\r\n                        var findIndex;\r\n\r\n                        if (me.options.ticks.min !== undefined) {\r\n                            // user specified min value\r\n                            findIndex = labels.indexOf(me.options.ticks.min);\r\n                            me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\r\n                        }\r\n\r\n                        if (me.options.ticks.max !== undefined) {\r\n                            // user specified max value\r\n                            findIndex = labels.indexOf(me.options.ticks.max);\r\n                            me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\r\n                        }\r\n\r\n                        me.min = labels[me.minIndex];\r\n                        me.max = labels[me.maxIndex];\r\n                    },\r\n\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var labels = me.getLabels();\r\n                        // If we are viewing some subset of labels, slice the original array\r\n                        me.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\r\n                    },\r\n\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        var me = this;\r\n                        var data = me.chart.data;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        if (data.yLabels && !isHorizontal) {\r\n                            return me.getRightValue(data.datasets[datasetIndex].data[index]);\r\n                        }\r\n                        return me.ticks[index - me.minIndex];\r\n                    },\r\n\r\n                    // Used to get data value locations.  Value can either be an index or a numerical value\r\n                    getPixelForValue: function(value, index) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        // 1 is added because we need the length but we have the indexes\r\n                        var offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\r\n\r\n                        // If value is a data object, then index is the index in the data array,\r\n                        // not the index of the scale. We need to change that.\r\n                        var valueCategory;\r\n                        if (value !== undefined && value !== null) {\r\n                            valueCategory = me.isHorizontal() ? value.x : value.y;\r\n                        }\r\n                        if (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\r\n                            var labels = me.getLabels();\r\n                            value = valueCategory || value;\r\n                            var idx = labels.indexOf(value);\r\n                            index = idx !== -1 ? idx : index;\r\n                        }\r\n\r\n                        if (me.isHorizontal()) {\r\n                            var valueWidth = me.width / offsetAmt;\r\n                            var widthOffset = (valueWidth * (index - me.minIndex));\r\n\r\n                            if (offset) {\r\n                                widthOffset += (valueWidth / 2);\r\n                            }\r\n\r\n                            return me.left + Math.round(widthOffset);\r\n                        }\r\n                        var valueHeight = me.height / offsetAmt;\r\n                        var heightOffset = (valueHeight * (index - me.minIndex));\r\n\r\n                        if (offset) {\r\n                            heightOffset += (valueHeight / 2);\r\n                        }\r\n\r\n                        return me.top + Math.round(heightOffset);\r\n                    },\r\n                    getPixelForTick: function(index) {\r\n                        return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        var value;\r\n                        var offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\r\n                        var horz = me.isHorizontal();\r\n                        var valueDimension = (horz ? me.width : me.height) / offsetAmt;\r\n\r\n                        pixel -= horz ? me.left : me.top;\r\n\r\n                        if (offset) {\r\n                            pixel -= (valueDimension / 2);\r\n                        }\r\n\r\n                        if (pixel <= 0) {\r\n                            value = 0;\r\n                        } else {\r\n                            value = Math.round(pixel / valueDimension);\r\n                        }\r\n\r\n                        return value + me.minIndex;\r\n                    },\r\n                    getBasePixel: function() {\r\n                        return this.bottom;\r\n                    }\r\n                });\r\n\r\n                Chart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\r\n            };\r\n        }, {}], 45: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var Ticks = require(25);\r\n\r\n            module.exports = function(Chart) {\r\n                var defaultConfig = {\r\n                    position: 'left',\r\n                    ticks: {\r\n                        callback: Ticks.formatters.linear\r\n                    }\r\n                };\r\n\r\n                var LinearScale = Chart.LinearScaleBase.extend({\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var chart = me.chart;\r\n                        var data = chart.data;\r\n                        var datasets = data.datasets;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var DEFAULT_MIN = 0;\r\n                        var DEFAULT_MAX = 1;\r\n\r\n                        function IDMatches(meta) {\r\n                            return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\r\n                        }\r\n\r\n                        // First Calculate the range\r\n                        me.min = null;\r\n                        me.max = null;\r\n\r\n                        var hasStacks = opts.stacked;\r\n                        if (hasStacks === undefined) {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                if (hasStacks) {\r\n                                    return;\r\n                                }\r\n\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\r\n                                    meta.stack !== undefined) {\r\n                                    hasStacks = true;\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        if (opts.stacked || hasStacks) {\r\n                            var valuesPerStack = {};\r\n\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                var key = [\r\n                                    meta.type,\r\n                                    // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\r\n                                    ((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\r\n                                    meta.stack\r\n                                ].join('.');\r\n\r\n                                if (valuesPerStack[key] === undefined) {\r\n                                    valuesPerStack[key] = {\r\n                                        positiveValues: [],\r\n                                        negativeValues: []\r\n                                    };\r\n                                }\r\n\r\n                                // Store these per type\r\n                                var positiveValues = valuesPerStack[key].positiveValues;\r\n                                var negativeValues = valuesPerStack[key].negativeValues;\r\n\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        positiveValues[index] = positiveValues[index] || 0;\r\n                                        negativeValues[index] = negativeValues[index] || 0;\r\n\r\n                                        if (opts.relativePoints) {\r\n                                            positiveValues[index] = 100;\r\n                                        } else if (value < 0) {\r\n                                            negativeValues[index] += value;\r\n                                        } else {\r\n                                            positiveValues[index] += value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n\r\n                            helpers.each(valuesPerStack, function(valuesForType) {\r\n                                var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\r\n                                var minVal = helpers.min(values);\r\n                                var maxVal = helpers.max(values);\r\n                                me.min = me.min === null ? minVal : Math.min(me.min, minVal);\r\n                                me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\r\n                            });\r\n                        } else {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        if (me.min === null) {\r\n                                            me.min = value;\r\n                                        } else if (value < me.min) {\r\n                                            me.min = value;\r\n                                        }\r\n\r\n                                        if (me.max === null) {\r\n                                            me.max = value;\r\n                                        } else if (value > me.max) {\r\n                                            me.max = value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\r\n                        me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\r\n\r\n                        // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\r\n                        this.handleTickRangeOptions();\r\n                    },\r\n                    getTickLimit: function() {\r\n                        var maxTicks;\r\n                        var me = this;\r\n                        var tickOpts = me.options.ticks;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\r\n                        } else {\r\n                            // The factor of 2 used to scale the font size has been experimentally determined.\r\n                            var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\r\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\r\n                        }\r\n\r\n                        return maxTicks;\r\n                    },\r\n                    // Called after the ticks are built. We need\r\n                    handleDirectionalChanges: function() {\r\n                        if (!this.isHorizontal()) {\r\n                            // We are in a vertical orientation. The top value is the highest. So reverse the array\r\n                            this.ticks.reverse();\r\n                        }\r\n                    },\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n                    },\r\n                    // Utils\r\n                    getPixelForValue: function(value) {\r\n                        // This must be called after fit has been run so that\r\n                        // this.left, this.top, this.right, and this.bottom have been defined\r\n                        var me = this;\r\n                        var start = me.start;\r\n\r\n                        var rightValue = +me.getRightValue(value);\r\n                        var pixel;\r\n                        var range = me.end - start;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            pixel = me.left + (me.width / range * (rightValue - start));\r\n                        } else {\r\n                            pixel = me.bottom - (me.height / range * (rightValue - start));\r\n                        }\r\n                        return pixel;\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var innerDimension = isHorizontal ? me.width : me.height;\r\n                        var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\r\n                        return me.start + ((me.end - me.start) * offset);\r\n                    },\r\n                    getPixelForTick: function(index) {\r\n                        return this.getPixelForValue(this.ticksAsNumbers[index]);\r\n                    }\r\n                });\r\n                Chart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\r\n            };\r\n        }, { \"16\": 16, \"25\": 25, \"36\": 36 }], 46: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Generate a set of linear ticks\r\n             * @param generationOptions the options used to generate the ticks\r\n             * @param dataRange the range of the data\r\n             * @returns {Array<Number>} array of tick values\r\n             */\r\n            function generateTicks(generationOptions, dataRange) {\r\n                var ticks = [];\r\n                // To get a \"nice\" value for the tick spacing, we will use the appropriately named\r\n                // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\r\n                // for details.\r\n\r\n                var spacing;\r\n                if (generationOptions.stepSize && generationOptions.stepSize > 0) {\r\n                    spacing = generationOptions.stepSize;\r\n                } else {\r\n                    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\r\n                    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\r\n                }\r\n                var niceMin = Math.floor(dataRange.min / spacing) * spacing;\r\n                var niceMax = Math.ceil(dataRange.max / spacing) * spacing;\r\n\r\n                // If min, max and stepSize is set and they make an evenly spaced scale use it.\r\n                if (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\r\n                    // If very close to our whole number, use it.\r\n                    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\r\n                        niceMin = generationOptions.min;\r\n                        niceMax = generationOptions.max;\r\n                    }\r\n                }\r\n\r\n                var numSpaces = (niceMax - niceMin) / spacing;\r\n                // If very close to our rounded value, use it.\r\n                if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n                    numSpaces = Math.round(numSpaces);\r\n                } else {\r\n                    numSpaces = Math.ceil(numSpaces);\r\n                }\r\n\r\n                var precision = 1;\r\n                if (spacing < 1) {\r\n                    precision = Math.pow(10, spacing.toString().length - 2);\r\n                    niceMin = Math.round(niceMin * precision) / precision;\r\n                    niceMax = Math.round(niceMax * precision) / precision;\r\n                }\r\n                ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\r\n                for (var j = 1; j < numSpaces; ++j) {\r\n                    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\r\n                }\r\n                ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\r\n\r\n                return ticks;\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                var noop = helpers.noop;\r\n\r\n                Chart.LinearScaleBase = Chart.Scale.extend({\r\n                    getRightValue: function(value) {\r\n                        if (typeof value === 'string') {\r\n                            return +value;\r\n                        }\r\n                        return Chart.Scale.prototype.getRightValue.call(this, value);\r\n                    },\r\n\r\n                    handleTickRangeOptions: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\r\n                        // do nothing since that would make the chart weird. If the user really wants a weird chart\r\n                        // axis, they can manually override it\r\n                        if (tickOpts.beginAtZero) {\r\n                            var minSign = helpers.sign(me.min);\r\n                            var maxSign = helpers.sign(me.max);\r\n\r\n                            if (minSign < 0 && maxSign < 0) {\r\n                                // move the top up to 0\r\n                                me.max = 0;\r\n                            } else if (minSign > 0 && maxSign > 0) {\r\n                                // move the bottom down to 0\r\n                                me.min = 0;\r\n                            }\r\n                        }\r\n\r\n                        var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\r\n                        var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\r\n\r\n                        if (tickOpts.min !== undefined) {\r\n                            me.min = tickOpts.min;\r\n                        } else if (tickOpts.suggestedMin !== undefined) {\r\n                            if (me.min === null) {\r\n                                me.min = tickOpts.suggestedMin;\r\n                            } else {\r\n                                me.min = Math.min(me.min, tickOpts.suggestedMin);\r\n                            }\r\n                        }\r\n\r\n                        if (tickOpts.max !== undefined) {\r\n                            me.max = tickOpts.max;\r\n                        } else if (tickOpts.suggestedMax !== undefined) {\r\n                            if (me.max === null) {\r\n                                me.max = tickOpts.suggestedMax;\r\n                            } else {\r\n                                me.max = Math.max(me.max, tickOpts.suggestedMax);\r\n                            }\r\n                        }\r\n\r\n                        if (setMin !== setMax) {\r\n                            // We set the min or the max but not both.\r\n                            // So ensure that our range is good\r\n                            // Inverted or 0 length range can happen when\r\n                            // ticks.min is set, and no datasets are visible\r\n                            if (me.min >= me.max) {\r\n                                if (setMin) {\r\n                                    me.max = me.min + 1;\r\n                                } else {\r\n                                    me.min = me.max - 1;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (me.min === me.max) {\r\n                            me.max++;\r\n\r\n                            if (!tickOpts.beginAtZero) {\r\n                                me.min--;\r\n                            }\r\n                        }\r\n                    },\r\n                    getTickLimit: noop,\r\n                    handleDirectionalChanges: noop,\r\n\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        // Figure out what the max number of ticks we can support it is based on the size of\r\n                        // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n                        // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n                        // the graph. Make sure we always have at least 2 ticks\r\n                        var maxTicks = me.getTickLimit();\r\n                        maxTicks = Math.max(2, maxTicks);\r\n\r\n                        var numericGeneratorOptions = {\r\n                            maxTicks: maxTicks,\r\n                            min: tickOpts.min,\r\n                            max: tickOpts.max,\r\n                            stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\r\n                        };\r\n                        var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\r\n\r\n                        me.handleDirectionalChanges();\r\n\r\n                        // At this point, we need to update our max and min given the tick values since we have expanded the\r\n                        // range of the scale\r\n                        me.max = helpers.max(ticks);\r\n                        me.min = helpers.min(ticks);\r\n\r\n                        if (tickOpts.reverse) {\r\n                            ticks.reverse();\r\n\r\n                            me.start = me.max;\r\n                            me.end = me.min;\r\n                        } else {\r\n                            me.start = me.min;\r\n                            me.end = me.max;\r\n                        }\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        me.ticksAsNumbers = me.ticks.slice();\r\n                        me.zeroLineIndex = me.ticks.indexOf(0);\r\n\r\n                        Chart.Scale.prototype.convertTicksToLabels.call(me);\r\n                    }\r\n                });\r\n            };\r\n        }, { \"36\": 36 }]\r\n    }, {}, [6])(6)\r\n});\r\n","/*!\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n * MIT license http://www.opensource.org/licenses/mit-license.php/\r\n * @author Lea Verou http://lea.verou.me\r\n */\r\n(function(root) {\r\n    // Private helper vars\r\n    var lang = /\\blang(?:uage)?-(?!\\*)(\\w+)\\b/i;\r\n\r\n    var _ = prism = {\r\n        util: {\r\n            encode: function(tokens) {\r\n                if (tokens instanceof Token) {\r\n                    return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\r\n                } else if (_.util.type(tokens) === 'Array') {\r\n                    return tokens.map(_.util.encode);\r\n                } else {\r\n                    return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\r\n                }\r\n            },\r\n\r\n            type: function(o) {\r\n                return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\r\n            },\r\n\r\n            // Deep clone a language definition (e.g. to extend it)\r\n            clone: function(o) {\r\n                var type = _.util.type(o);\r\n\r\n                switch (type) {\r\n                    case 'Object':\r\n                        var clone = {};\r\n\r\n                        for (var key in o) {\r\n                            if (o.hasOwnProperty(key)) {\r\n                                clone[key] = _.util.clone(o[key]);\r\n                            }\r\n                        }\r\n\r\n                        return clone;\r\n\r\n                    case 'Array':\r\n                        // Check for existence for IE8\r\n                        return o.map && o.map(function(v) { return _.util.clone(v); });\r\n                }\r\n\r\n                return o;\r\n            }\r\n        },\r\n\r\n        languages: {\r\n            extend: function(id, redef) {\r\n                var lang = _.util.clone(_.languages[id]);\r\n\r\n                for (var key in redef) {\r\n                    lang[key] = redef[key];\r\n                }\r\n\r\n                return lang;\r\n            },\r\n\r\n            /**\r\n             * Insert a token before another token in a language literal\r\n             * As this needs to recreate the object (we cannot actually insert before keys in object literals),\r\n             * we cannot just provide an object, we need anobject and a key.\r\n             * @param inside The key (or language id) of the parent\r\n             * @param before The key to insert before. If not provided, the function appends instead.\r\n             * @param insert Object with the key/value pairs to insert\r\n             * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\r\n             */\r\n            insertBefore: function(inside, before, insert, root) {\r\n                root = root || _.languages;\r\n                var grammar = root[inside];\r\n\r\n                if (arguments.length == 2) {\r\n                    insert = arguments[1];\r\n\r\n                    for (var newToken in insert) {\r\n                        if (insert.hasOwnProperty(newToken)) {\r\n                            grammar[newToken] = insert[newToken];\r\n                        }\r\n                    }\r\n\r\n                    return grammar;\r\n                }\r\n\r\n                var ret = {};\r\n\r\n                for (var token in grammar) {\r\n                    if (grammar.hasOwnProperty(token)) {\r\n                        if (token == before) {\r\n                            for (var newToken in insert) {\r\n                                if (insert.hasOwnProperty(newToken)) {\r\n                                    ret[newToken] = insert[newToken];\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        ret[token] = grammar[token];\r\n                    }\r\n                }\r\n\r\n                // Update references in other language definitions\r\n                _.languages.DFS(_.languages, function(key, value) {\r\n                    if (value === root[inside] && key != inside) {\r\n                        this[key] = ret;\r\n                    }\r\n                });\r\n\r\n                return root[inside] = ret;\r\n            },\r\n\r\n            // Traverse a language definition with Depth First Search\r\n            DFS: function(o, callback, type, visited) {\r\n                visited = visited || {};\r\n                for (var i in o) {\r\n                    if (o.hasOwnProperty(i)) {\r\n                        callback.call(o, i, o[i], type || i);\r\n\r\n                        if (_.util.type(o[i]) === 'Object' && !visited[o[i]]) {\r\n                            visited[o[i]] = true;\r\n                            _.languages.DFS(o[i], callback, null, visited);\r\n                        }\r\n                        else if (_.util.type(o[i]) === 'Array' && !visited[o[i]]) {\r\n                            visited[o[i]] = true;\r\n                            _.languages.DFS(o[i], callback, i, visited);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        plugins: {},\r\n\r\n        highlightAll: function(async, callback) {\r\n            var elements = document.querySelectorAll('code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code');\r\n\r\n            for (var i = 0, element; element = elements[i++];) {\r\n                _.highlightElement(element, async === true, callback);\r\n            }\r\n        },\r\n\r\n        highlightElement: function(element, async, callback) {\r\n            // Find language\r\n            var language, grammar, parent = element;\r\n\r\n            while (parent && !lang.test(parent.className)) {\r\n                parent = parent.parentNode;\r\n            }\r\n\r\n            if (parent) {\r\n                language = (parent.className.match(lang) || [, ''])[1];\r\n                grammar = _.languages[language];\r\n            }\r\n\r\n            // Set language on the element, if not present\r\n            element.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\r\n\r\n            // Set language on the parent, for styling\r\n            parent = element.parentNode;\r\n\r\n            if (/pre/i.test(parent.nodeName)) {\r\n                parent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\r\n            }\r\n\r\n            var code = element.textContent;\r\n\r\n            var env = {\r\n                element: element,\r\n                language: language,\r\n                grammar: grammar,\r\n                code: code\r\n            };\r\n\r\n            if (!code || !grammar) {\r\n                _.hooks.run('complete', env);\r\n                return;\r\n            }\r\n\r\n            _.hooks.run('before-highlight', env);\r\n\r\n            if (async && root.Worker) {\r\n                var worker = new Worker(_.filename);\r\n\r\n                worker.onmessage = function(evt) {\r\n                    env.highlightedCode = evt.data;\r\n\r\n                    _.hooks.run('before-insert', env);\r\n\r\n                    env.element.innerHTML = env.highlightedCode;\r\n\r\n                    callback && callback.call(env.element);\r\n                    _.hooks.run('after-highlight', env);\r\n                    _.hooks.run('complete', env);\r\n                };\r\n\r\n                worker.postMessage(JSON.stringify({\r\n                    language: env.language,\r\n                    code: env.code,\r\n                    immediateClose: true\r\n                }));\r\n            }\r\n            else {\r\n                env.highlightedCode = _.highlight(env.code, env.grammar, env.language);\r\n\r\n                _.hooks.run('before-insert', env);\r\n\r\n                env.element.innerHTML = env.highlightedCode;\r\n\r\n                callback && callback.call(element);\r\n\r\n                _.hooks.run('after-highlight', env);\r\n                _.hooks.run('complete', env);\r\n            }\r\n        },\r\n\r\n        highlight: function(text, grammar, language) {\r\n            var tokens = _.tokenize(text, grammar);\r\n            return Token.stringify(_.util.encode(tokens), language);\r\n        },\r\n\r\n        tokenize: function(text, grammar, language) {\r\n            var Token = _.Token;\r\n\r\n            var strarr = [text];\r\n\r\n            var rest = grammar.rest;\r\n\r\n            if (rest) {\r\n                for (var token in rest) {\r\n                    grammar[token] = rest[token];\r\n                }\r\n\r\n                delete grammar.rest;\r\n            }\r\n\r\n            tokenloop: for (var token in grammar) {\r\n                if (!grammar.hasOwnProperty(token) || !grammar[token]) {\r\n                    continue;\r\n                }\r\n\r\n                var patterns = grammar[token];\r\n                patterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\r\n\r\n                for (var j = 0; j < patterns.length; ++j) {\r\n                    var pattern = patterns[j],\r\n                        inside = pattern.inside,\r\n                        lookbehind = !!pattern.lookbehind,\r\n                        lookbehindLength = 0,\r\n                        alias = pattern.alias;\r\n\r\n                    pattern = pattern.pattern || pattern;\r\n\r\n                    for (var i = 0; i < strarr.length; i++) { // Don’t cache length as it changes during the loop\r\n                        var str = strarr[i];\r\n\r\n                        if (strarr.length > text.length) {\r\n                            // Something went terribly wrong, ABORT, ABORT!\r\n                            break tokenloop;\r\n                        }\r\n\r\n                        if (str instanceof Token) {\r\n                            continue;\r\n                        }\r\n\r\n                        pattern.lastIndex = 0;\r\n\r\n                        var match = pattern.exec(str);\r\n\r\n                        if (match) {\r\n                            if (lookbehind) {\r\n                                lookbehindLength = match[1].length;\r\n                            }\r\n\r\n                            var from = match.index - 1 + lookbehindLength,\r\n                                match = match[0].slice(lookbehindLength),\r\n                                len = match.length,\r\n                                to = from + len,\r\n                                before = str.slice(0, from + 1),\r\n                                after = str.slice(to + 1);\r\n\r\n                            var args = [i, 1];\r\n\r\n                            if (before) {\r\n                                args.push(before);\r\n                            }\r\n\r\n                            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias);\r\n\r\n                            args.push(wrapped);\r\n\r\n                            if (after) {\r\n                                args.push(after);\r\n                            }\r\n\r\n                            Array.prototype.splice.apply(strarr, args);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return strarr;\r\n        },\r\n\r\n        hooks: {\r\n            all: {},\r\n\r\n            add: function(name, callback) {\r\n                var hooks = _.hooks.all;\r\n\r\n                hooks[name] = hooks[name] || [];\r\n\r\n                hooks[name].push(callback);\r\n            },\r\n\r\n            run: function(name, env) {\r\n                var callbacks = _.hooks.all[name];\r\n\r\n                if (!callbacks || !callbacks.length) {\r\n                    return;\r\n                }\r\n\r\n                for (var i = 0, callback; callback = callbacks[i++];) {\r\n                    callback(env);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var Token = _.Token = function(type, content, alias) {\r\n        this.type = type;\r\n        this.content = content;\r\n        this.alias = alias;\r\n    };\r\n\r\n    Token.stringify = function(o, language, parent) {\r\n        if (typeof o == 'string') {\r\n            return o;\r\n        }\r\n\r\n        if (_.util.type(o) === 'Array') {\r\n            return o.map(function(element) {\r\n                return Token.stringify(element, language, o);\r\n            }).join('');\r\n        }\r\n\r\n        var env = {\r\n            type: o.type,\r\n            content: Token.stringify(o.content, language, parent),\r\n            tag: 'span',\r\n            classes: ['token', o.type],\r\n            attributes: {},\r\n            language: language,\r\n            parent: parent\r\n        };\r\n\r\n        if (env.type == 'comment') {\r\n            env.attributes['spellcheck'] = 'true';\r\n        }\r\n\r\n        if (o.alias) {\r\n            var aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\r\n            Array.prototype.push.apply(env.classes, aliases);\r\n        }\r\n\r\n        _.hooks.run('wrap', env);\r\n\r\n        var attributes = '';\r\n\r\n        for (var name in env.attributes) {\r\n            attributes += (attributes ? ' ' : '') + name + '=\"' + (env.attributes[name] || '') + '\"';\r\n        }\r\n\r\n        return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\" ' + attributes + '>' + env.content + '</' + env.tag + '>';\r\n    };\r\n\r\n    root.Prism = prism;\r\n})(this);\r\n\r\nPrism.languages.sql = {\r\n    'comment': {\r\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\w\\W]*?\\*\\/|(?:--|\\/\\/|#).*)/,\r\n        lookbehind: true\r\n    },\r\n    'string': {\r\n        pattern: /(^|[^@\\\\])(\"|')(?:\\\\?[\\s\\S])*?\\2/,\r\n        lookbehind: true\r\n    },\r\n    'variable': /@[\\w.$]+|@(\"|'|`)(?:\\\\?[\\s\\S])+?\\1/,\r\n    'function': /\\b(?:COUNT|SUM|AVG|MIN|MAX|FIRST|LAST|UCASE|LCASE|MID|LEN|ROUND|NOW|FORMAT)(?=\\s*\\()/i, // Should we highlight user defined functions too?\r\n    'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR VARYING|CHARACTER (?:SET|VARYING)|CHARSET|CHECK|CHECKPOINT|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMN|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS|CONTAINSTABLE|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|DATA(?:BASES?)?|DATETIME|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE(?: PRECISION)?|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE KEY|ELSE|ENABLE|ENCLOSED BY|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPE(?:D BY)?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTO|INVOKER|ISOLATION LEVEL|JOIN|KEYS?|KILL|LANGUAGE SQL|LAST|LEFT|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MODIFIES SQL DATA|MODIFY|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL(?: CHAR VARYING| CHARACTER(?: VARYING)?| VARCHAR)?|NATURAL|NCHAR(?: VARCHAR)?|NEXT|NO(?: SQL|CHECK|CYCLE)?|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READ(?:S SQL DATA|TEXT)?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEATABLE|REPLICATION|REQUIRE|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE MODE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|START(?:ING BY)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED BY|TEXT(?:SIZE)?|THEN|TIMESTAMP|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNPIVOT|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?)\\b/i,\r\n    'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\r\n    'number': /\\b-?(?:0x)?\\d*\\.?[\\da-f]+\\b/,\r\n    'operator': /[-+*\\/=%^~]|&&?|\\|?\\||!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\r\n    'punctuation': /[;[\\]()`,.]/\r\n};\r\n","/*!\r\n * Allowing lists to dynamically expand and collapse.\r\n * Created by Stephen Morley - http://code.stephenmorley.org/ - and released under the terms of the CC0 1.0 Universal legal code:\r\n * http://creativecommons.org/publicdomain/zero/1.0/legalcode\r\n *\r\n * Modified to work with bootstrap/fontAwesome and incorporate cascading checkboxes.\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    window.CollapsibleList = factory(root.$);\r\n})(this, function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare CollapsibleList class.\r\n     * @param {Node} element - Node to make collapsible.\r\n     */\r\n    var CollapsibleList = function(element) {\r\n        this.container = $.get(element);\r\n        this.init();\r\n    };\r\n\r\n    /**\r\n     * Declare CollapseCollapsibleList class methods.\r\n     */\r\n    CollapsibleList.prototype = {\r\n        /**\r\n         * Make the specified list collapsible.\r\n         */\r\n        init: function() {\r\n            var node = this.container;\r\n            // loop over the list items within this node\r\n            var lis = $.getAll('li', node);\r\n            for (var i = 0; i < lis.length; i++) {\r\n                // prevent text from being selected unintentionally\r\n                $.on(lis[i], 'mousedown', function(e) { e.preventDefault(); }, false);\r\n                // add the click listener\r\n                $.on(lis[i], 'click', this.createClickListener(lis[i]), false);\r\n                // close the unordered lists within this list item\r\n                this.toggle(lis[i]);\r\n\r\n                // check any parent items if this item is checked\r\n                node = $.get('input[type=\"checkbox\"]', lis[i]);\r\n                if (node.checked) {\r\n                    var p = node;\r\n                    while (this.container !== (p = p.parentNode)) {\r\n                        if (p.nodeName === 'LI') {\r\n                            var parent = p.parentNode.parentNode;\r\n                            if (parent.nodeName === 'LI') {\r\n                                var pi = $.get('input[type=\"checkbox\"]', parent);\r\n                                if (pi && pi !== node) {\r\n                                    pi.checked = true;\r\n                                }\r\n                                this.toggle(parent, true);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Toggles the display status of any unordered list elements within the specified node.\r\n         * @param {Node} node - Node containing the unordered list elements.\r\n         * @returns {Function} Click handler function.\r\n         */\r\n        createClickListener: function(node) {\r\n            var self = this;\r\n            return function(e) {\r\n                // ensure the event object is defined\r\n                e = $.coalesce(e, window.event);\r\n\r\n                // find the list item containing the target of the event\r\n                var elem = $.coalesce(e.target, e.srcElement);\r\n\r\n                // handle checking/unchecking buttons\r\n                if (elem.nodeName === 'INPUT') {\r\n                    var checked = elem.checked;\r\n\r\n                    // first toggle the check for all of the children\r\n                    var inputs = $.getAll('ul input[type=\"checkbox\"]', $.closest('li', elem));\r\n                    i = inputs.length;\r\n                    while (i--) {\r\n                        inputs[i].checked = checked;\r\n                    }\r\n\r\n                    // then check all parents. if any of the children of a checkbox are checked, then it should be checked.\r\n                    var checkedRelative = false;\r\n                    var p = elem;\r\n                    while (self.container !== (p = p.parentNode)) {\r\n                        if (p.nodeName === 'LI') {\r\n                            // see if anybody else on this node level is checked\r\n                            var relatives = $.getAll('input[type=\"checkbox\"]', p.parentNode);\r\n                            var i = relatives.length;\r\n                            checkedRelative = false;\r\n                            while (i--) {\r\n                                if (relatives[i].checked) {\r\n                                    checkedRelative = true;\r\n                                }\r\n                            }\r\n\r\n                            if (p.parentNode.parentNode !== self.container) {\r\n                                var pi = $.get('input[type=\"checkbox\"]', p.parentNode.parentNode);\r\n                                if (pi && pi !== elem) {\r\n                                    pi.checked = checkedRelative || checked;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                if ($.hasClass(elem, 'form-group') || $.hasClass(elem, 'form-icon') || (elem.parentNode && $.hasClass(elem.parentNode, 'form-group'))) {\r\n                    // prevent toggling tree when checking/unchecking an element\r\n                    return;\r\n                }\r\n\r\n                // now handle the tree itself\r\n                while (elem.nodeName !== 'LI') {\r\n                    elem = elem.parentNode;\r\n                }\r\n\r\n                // toggle the state of the node if it was the target of the event\r\n                if (elem === node) {\r\n                    self.toggle(node);\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Opens or closes the unordered list elements directly within the specified node.\r\n         * @param {Node} node - Node containing the unordered list elements.\r\n         * @param {bool} forceOpen - Set to true to force the node to be open regardless of current status.\r\n         */\r\n        toggle: function(node, forceOpen) {\r\n            // determine whether to open or close the unordered lists\r\n            var open = $.coalesce(forceOpen, $.hasClass(node, 'collapsible-list-closed'));\r\n\r\n            // loop over the unordered list elements with the node\r\n            var uls = $.getAll('ul', node);\r\n            for (var i = 0; i < uls.length; i++) {\r\n                // find the parent list item of this unordered list\r\n                var li = uls[i];\r\n                while (li.nodeName !== 'LI') {\r\n                    li = li.parentNode;\r\n                }\r\n\r\n                // style the unordered list if it is directly within this node\r\n                if (li === node) {\r\n                    uls[i].style.display = open ? 'block' : 'none';\r\n                }\r\n            }\r\n\r\n            // remove the current class from the node\r\n            $.removeClass(node, 'collapsible-list-' + (open ? 'closed' : 'open'));\r\n\r\n            // if the node contains unordered lists, set its class\r\n            if (uls.length) {\r\n                $.addClass(node, 'collapsible-list-' + (open ? 'open' : 'closed'));\r\n            }\r\n        }\r\n    };\r\n\r\n    return CollapsibleList;\r\n});\r\n","/*!\r\n * Validator that converts HTML5 form validation errors into bootstrap friendly errors.\r\n * Based on the library below, but ported from jQuery to native js.\r\n *\r\n * Validator v0.9.0 for Bootstrap 3, by @1000hz\r\n * Copyright 2015 Cina Saffary\r\n * Licensed under http://opensource.org/licenses/MIT\r\n * https://github.com/1000hz/bootstrap-validator\r\n *\r\n * Modified to use Dash's core library instead of jQuery, with unneeded functionality removed.\r\n */\r\n(function(factory) {\r\n    // Assume a traditional browser.\r\n    window.Validator = factory($, Alertify);\r\n})(function($, Alertify) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare validator class.\r\n     * @param {Node} element - Form to validate.\r\n     * @param {Object} errorMsgs - Error messages for custom errors.\r\n     */\r\n    var Validator = function(element, errorMsgs) {\r\n        this.element = element;\r\n        this.element.setAttribute('novalidate', true); // disable automatic native validation\r\n        this.errorMsgs = $.extend({}, Validator._errors, errorMsgs || {});\r\n\r\n        var inputs = $.getAll('[data-match]', this.element);\r\n        for (var i = 0; i < inputs.length; i++) {\r\n            // add the data match attribute to the target if it doesn't already exist\r\n            var target = inputs[i].getAttribute('data-match');\r\n            if (target) {\r\n                var targetElement = $.get('#' + target, this.element);\r\n                if (targetElement && !targetElement.hasAttribute('data-match')) {\r\n                    targetElement.setAttribute('data-match', inputs[i].id);\r\n                }\r\n            }\r\n        }\r\n\r\n        // check for pre-existing error classes because razor is weird sometimes\r\n        this.resetAll();\r\n\r\n        $.on(this.element, 'input', this.validateInput.bind(this));\r\n        $.on(this.element, 'change', this.validateInput.bind(this));\r\n        $.on(this.element, 'focusout', this.validateInput.bind(this));\r\n        $.on(this.element, 'submit', this.onSubmit.bind(this));\r\n        $.on(this.element, 'formValidate', this.validate.bind(this));\r\n    };\r\n\r\n    /**\r\n     * Default error messages for custom errors.\r\n     * @type {Object}\r\n     */\r\n    Validator._errors = {\r\n        match: '{0} does not match {1}.',\r\n        minlength: 'This field is not long enough.'\r\n    };\r\n\r\n    /**\r\n     * Functions to validate inputs against.\r\n     * @type {Object}\r\n     */\r\n    Validator.VALIDATORS = {\r\n        'native': function(el) {\r\n            return el.checkValidity();\r\n        },\r\n        'match': function(el) {\r\n            var target = $.get('#' + el.getAttribute('data-match'), this.element);\r\n            var res = !target ? false : el.value === target.value;\r\n            if (res) {\r\n                el.setCustomValidity('');\r\n            } else {\r\n                el.setCustomValidity(this.errorMsgs.match.replace(\"{0}\", el.name).replace(\"{1}\", el.getAttribute('data-match')));\r\n            }\r\n            return res;\r\n        },\r\n        'minlength': function(el) {\r\n            var minlength = el.getAttribute('data-minlength');\r\n            var res = !el.value || el.value.length >= minlength;\r\n            if (res) {\r\n                el.setCustomValidity('');\r\n            } else {\r\n                el.setCustomValidity(this.errorMsgs.minlength);\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Declare validator class methods.\r\n     */\r\n    Validator.prototype = {\r\n        /**\r\n         * Validate a single input element.\r\n         * @param {Node} e - Element to validate\r\n         */\r\n        validateInput: function(e) {\r\n            var el;\r\n            if (this.isValidatableInput(e)) {\r\n                el = e;\r\n            } else if (e.target && this.isValidatableInput(e.target)) {\r\n                el = e.target;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            if (el.type === 'radio') {\r\n                el = $.getAll('input[name=\"' + el.getAttribute('name') + '\"]', self.element);\r\n            }\r\n\r\n            if (e.defaultPrevented) {\r\n                return;\r\n            }\r\n\r\n            var errors = this.runValidators(el);\r\n            if (errors.length) {\r\n                self.showErrors(el, errors);\r\n            } else {\r\n                self.clearErrors(el);\r\n                if (el.getAttribute('data-match')) {\r\n                    self.clearErrors($.get('#' + el.getAttribute('data-match'), self.element));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get all the validatable inputs in the form.\r\n         * @returns {Node[]} Array of input elements.\r\n         */\r\n        inputSelector: function() {\r\n            var inputs = $.getAll('input,select,textarea', this.element);\r\n            var length = inputs.length, i = 0, results = [];\r\n            for (; i < length; i++) {\r\n                var input = inputs[i];\r\n                if (input.type !== 'submit' && input.type !== 'button' && !input.getAttribute('disabled') && input.style.visibility !== 'hidden') {\r\n                    results.push(input);\r\n                } else if ($.hasClass(input, 'form-control-error')) {\r\n                    // remove error class on disabled items\r\n                    $.removeClass(input, 'form-control-error');\r\n                }\r\n            }\r\n            return results;\r\n        },\r\n\r\n        /**\r\n         * Get all the inputs in the form and remove error styling.\r\n         */\r\n        resetAll: function() {\r\n            $.getAll('input,select,textarea', this.element).forEach(function(x) {\r\n                $.removeClass(x, 'form-control-error');\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Check if a node is an input that can be validated.\r\n         * @param {Node} input - Node to check.\r\n         * @returns {bool} True if input is an input that can be validated.\r\n         */\r\n        isValidatableInput: function(input) {\r\n            return (input.tagName === 'INPUT' || input.tagName === 'SELECT' || input.tagName === 'TEXTAREA') && !input.getAttribute('disabled') && input.style.visibility !== 'hidden';\r\n        },\r\n\r\n        /**\r\n         * Run all of the validator functions against an element.\r\n         * @param {Node} el - Element to validate.\r\n         * @returns {string[]} Array of error messages.\r\n         */\r\n        runValidators: function(el) {\r\n            var errors = [];\r\n\r\n            for (var key in Validator.VALIDATORS) {\r\n                if (Validator.VALIDATORS.hasOwnProperty(key)) {\r\n                    var validator = Validator.VALIDATORS[key];\r\n                    var attr = el.getAttribute('data-' + key);\r\n                    if ((attr || key === 'native') && !validator.call(this, el)) {\r\n                        var error = el.getAttribute('data' + key + '-error') || el.getAttribute('data-error') || (key === 'native' ? el.validationMessage : this.errorMsgs[key]);\r\n                        if (key === \"match\") {\r\n                            error = error.replace(\"{0}\", el.name).replace(\"{1}\", attr);\r\n                        }\r\n                        !~errors.indexOf(error) && errors.push(error);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        /**\r\n         * Run validation for the form.\r\n         */\r\n        validate: function() {\r\n            var inputs = this.inputSelector();\r\n            var length = inputs.length, i = 0;\r\n            for (; i < length; i++) {\r\n                this.validateInput(inputs[i]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Display errors for an element.\r\n         * @param {Node} el - Element to display errors for.\r\n         * @param {string[]} errors - List of error messages.\r\n         */\r\n        showErrors: function(el, errors) {\r\n            if (!errors.length) {\r\n                return;\r\n            }\r\n\r\n            var group = $.closest('.form-group', el);\r\n            var block = $.get('.help-block.with-errors', group);\r\n\r\n            if (block) {\r\n                var errorElement = document.createElement('ul');\r\n                $.addClass(errorElement, 'list-unstyled');\r\n\r\n                var errHtml = '', i = 0; length = errors.length;\r\n                for (; i < length; i++) {\r\n                    errHtml += '<li>' + errors[i] + '</li>';\r\n                }\r\n                errorElement.innerHTML = errHtml;\r\n\r\n                block.innerHTML = '';\r\n                block.appendChild(errorElement);\r\n            }\r\n\r\n            $.addClass(el, 'form-control-error');\r\n\r\n            var tab = $.closest('.tab-pane', el);\r\n            if (tab) {\r\n                // add error class to tab\r\n                var id = tab.getAttribute('aria-labelledby');\r\n                if (id) {\r\n                    $.addClass($.get('#' + id), 'tab-validation-error');\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Hide all error messages for an element.\r\n         * @param {Node} el - Element to hide errors for.\r\n         */\r\n        clearErrors: function(el) {\r\n            $.removeClass(el, 'form-control-error');\r\n\r\n            var group = $.closest('.form-group', el);\r\n            if (group) {\r\n                var block = $.get('.help-block.with-errors', group);\r\n                if (block) {\r\n                    block.innerHTML = '';\r\n                }\r\n            }\r\n            var tab = $.closest('.tab-pane', el);\r\n            if (tab) {\r\n                if ($.getAll('.form-control-error', tab).length == 0) {\r\n                    var id = tab.getAttribute('aria-labelledby');\r\n                    if (id) {\r\n                        $.removeClass($.get('#' + id), 'tab-validation-error');\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check if the validator found any errors.\r\n         * @returns {bool} True if there are any errors.\r\n         */\r\n        hasErrors: function() {\r\n            return $.getAll('.form-control-error', this.element).length;\r\n        },\r\n\r\n        /**\r\n         * Validate the form and prevent submit if there are errors.\r\n         * @param {Event} e - Form submit event.\r\n         */\r\n        onSubmit: function(e) {\r\n            this.validate();\r\n            if (this.hasErrors()) {\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    };\r\n\r\n    return Validator;\r\n});\r\n","/*!\r\n * Color library\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Convert hex string to RGB.\r\n     * @param {string} hex - Hex string.\r\n     * @returns {Object} Object with RGB properties.\r\n     */\r\n    var hex2rgb = function(hex) {\r\n        return { r: parseInt(hex.substr(1, 2), 16), g: parseInt(hex.substr(3, 2), 16), b: parseInt(hex.substr(5, 2), 16) };\r\n    };\r\n\r\n    /**\r\n     * Converts an RGB color value to HSL. Conversion formula\r\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n     * Assumes r, g, and b are contained in the set [0, 255] and\r\n     * returns h, s, and l in the set [0, 1].\r\n     * @param {Object} rgb - Object with r, g, and b properties.\r\n     * @return {Number[]} The HSL representation.\r\n     */\r\n    var rgb2hsl = function(rgb) {\r\n        var r = rgb.r, g = rgb.g, b = rgb.b;\r\n        r /= 255, g /= 255, b /= 255;\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if (max === min) {\r\n            h = s = 0; // achromatic\r\n        } else {\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch (max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        return [h, s, l];\r\n    };\r\n\r\n    $.colors = {\r\n        hex2rgb: hex2rgb,\r\n        rgb2hsl: rgb2hsl,\r\n    };\r\n})(this.$);\r\n","/*!\r\n * ColorPicker mithril component.\r\n */\r\n(function(root, factory) {\r\n    root.ColorPicker = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    var _keys = {\r\n        ESC: 27,\r\n        DOWN: 40,\r\n        UP: 38,\r\n        LEFT: 37,\r\n        RIGHT: 39\r\n    };\r\n\r\n    var ColorPicker = {\r\n        /**\r\n         * Initialize the component.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            this.opts = {\r\n                value: attrs.value,\r\n                name: attrs.name,\r\n                active: false,\r\n                disabled: attrs.disabled,\r\n                onSelect: attrs.onSelect,\r\n                onCancel: attrs.onCancel,\r\n                container: null,\r\n                selectedIndex: -1,\r\n                colors: ['#4D4D4D', '#F44E3B', '#0000FF', '#FE9200', '#FCDC00', '#00FF00', '#A4DD00', '#68CCCA',\r\n                    '#73D8FF', '#AEA1FF', '#FDA1FF', '#D33115', '#E27300', '#FCC400', '#B0BC00', '#68BC00',\r\n                    '#16A5A5', '#009CE0', '#7B64FF', '#FA28FF', '#9F0500', '#C45100', '#FB9E00',\r\n                    '#808900', '#194D33', '#0C797D', '#0062B1', '#653294', '#AB149E'\r\n                ]\r\n            };\r\n            if (this.opts.value) {\r\n                this.opts.selectedIndex = this.opts.colors.indexOf(this.opts.value);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Grab the DOM containing node after it is created.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oncreate: function(vnode) {\r\n            this.opts.container = vnode.dom;\r\n        },\r\n\r\n        /**\r\n         * Update the opts in case the component name is changed.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         * @param vnode\r\n         */\r\n        onupdate: function(vnode) {\r\n            if (vnode.attrs) {\r\n                this.opts.name = vnode.attrs.name;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check special keys and respond accordingly.\r\n         * @param {Event} e - Keypress event.\r\n         */\r\n        onKeyDown: function(e) {\r\n            if (this.opts.disabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.opts.active) {\r\n                if (e.keyCode === _keys.ESC) {\r\n                    this.close();\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                } else if (e.keyCode === _keys.DOWN || e.keyCode === _keys.LEFT) {\r\n                    this.selectIndex(Math.min(this.opts.selectedIndex + 1, this.opts.colors.length - 1));\r\n                } else if (e.keyCode === _keys.UP || e.keyCode === _keys.RIGHT) {\r\n                    this.selectIndex(Math.max(this.opts.selectedIndex - 1, 0));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select an item from the list by index.\r\n         * @param {Event} e - Event that triggered this\r\n         * @param {Number} index - Index of the color being selected\r\n         */\r\n        selectColor: function(e, index) {\r\n            var target = e && e.target ? e.target : e;\r\n            if (target) {\r\n                this.opts.value = target.getAttribute('data-value') || target.parentNode.getAttribute('data-value');\r\n                target.scrollIntoView();\r\n\r\n                if (this.opts.onSelect) {\r\n                    this.opts.onSelect(this.opts.value);\r\n                }\r\n            }\r\n            if (index) {\r\n                this.opts.selectedIndex = index;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select an item from the list by index.\r\n         * @param {number} index - Filtered list item index.\r\n         */\r\n        selectIndex: function(index) {\r\n            var swatches = $.getAll('.swatch', this.opts.container);\r\n            if (swatches && swatches[index]) {\r\n                this.opts.selectedIndex = index;\r\n                swatches[index].focus();\r\n                if ($.hasClass(swatches[index], 'swatch-selectable')) {\r\n                    this.selectColor(swatches[index], index);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set value and close the picker.\r\n         */\r\n        close: function() {\r\n            this.opts.active = false;\r\n            var trigger = $.get('.colorpicker-trigger', this.opts.container);\r\n            if (trigger) {\r\n                trigger.focus();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Show the swatch list.\r\n         */\r\n        showEditor: function() {\r\n            if (this.opts.disabled) {\r\n                return;\r\n            }\r\n            this.opts.active = !this.opts.active;\r\n        },\r\n\r\n        /**\r\n         * Create HTML to display component.\r\n         * @returns {Object} Mithril vnode\r\n         */\r\n        view: function() {\r\n            var self = this;\r\n            return m('.mithril-colorpicker', {\r\n                class: this.opts.active ? 'active' : '', onkeydown: this.onKeyDown.bind(this)\r\n            }, m('button.btn.btn-secondary.colorpicker-trigger', {\r\n                type: 'button', role: 'button', disabled: this.opts.disabled,\r\n                onclick: this.showEditor.bind(this),\r\n                style: 'background-color: ' + this.opts.value\r\n            }, [m.trust('&nbsp;'), m('i.dash.colorpicker-indicator', { class: this.opts.active ? 'dash-sort-up' : 'dash-sort-down' })]), this.opts.active && m('.editor', [\r\n                m('.swatches',\r\n                    m('button.btn.btn-secondary.swatch', {\r\n                        type: 'button', role: 'button', onclick: this.close.bind(this)\r\n                    }, m('i.dash.dash-cancel')),\r\n                    this.opts.colors.map(function(x) {\r\n                        return m('button.btn.btn-secondary.swatch.swatch-selectable', {\r\n                            class: self.opts.value === x ? 'active' : '',\r\n                            type: 'button', role: 'button', 'data-value': x,\r\n                            style: 'background-color: ' + x + '; color: ' + x, onclick: self.selectColor.bind(self)\r\n                        }, m('i.dash.dash-cancel'));\r\n                    })\r\n                )\r\n            ]), m('input', { type: 'hidden', name: this.opts.name, value: this.opts.value }));\r\n        }\r\n    };\r\n\r\n    return ColorPicker;\r\n});\r\n","/*!\r\n * Mithril based table component. Supports ajax data, searching, sorting, paging, & resizing columns.\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Table = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare Table class.\r\n     * @param {Object} opts - Table settings\r\n     */\r\n    function Table(opts) {\r\n        opts = opts || {};\r\n\r\n        var data = null;\r\n        if (opts.data) {\r\n            data = opts.data;\r\n            delete opts.data;\r\n        }\r\n\r\n        this.opts = $.extend({\r\n            content: null,\r\n            id: null,\r\n            columns: [],\r\n            url: '',\r\n            requestMethod: 'GET',\r\n            requestUsePascalCase: true,\r\n            requestParams: {},\r\n            searchable: true,\r\n            loadAllData: true,\r\n            inputTimeout: 200,\r\n            columnMinWidth: 50,\r\n            width: 100,\r\n            editable: true,\r\n            pageDropdown: true,\r\n            headerButtons: null,\r\n            storageFunction: null,\r\n            itemsPerPage: null,\r\n            searchQuery: null,\r\n            currentStartItem: null,\r\n            sorting: null,\r\n            dataCallback: null,\r\n            errorCallback: null,\r\n            dataDateFormat: 'YYYY-MM-DD HH:mm:ss',\r\n            displayDateFormat: 'YYYY-MM-DD HH:mm',\r\n            displayCurrencyFormat: '{s:$} {[t:,][d:.][p:2]}',\r\n            resources: {\r\n                firstPage: $.resx('firstPage'),\r\n                previousPage: $.resx('previousPage'),\r\n                nextPage: $.resx('nextPage'),\r\n                lastPage: $.resx('lastPage'),\r\n                noData: $.resx('noData'),\r\n                showing: $.resx('showing'),\r\n                page: $.resx('page') || 'Page',\r\n                perPage: $.resx('perPage'),\r\n                loadingError: $.resx('loadingError'),\r\n                tryAgain: $.resx('tryAgain')\r\n            }\r\n        }, opts);\r\n\r\n        this.content = $.get(this.opts.content);\r\n        this.layoutSet = false;\r\n        this.data = null;\r\n        this.loading = true;\r\n        this.loadingError = false;\r\n        this.filteredTotal = 0;\r\n        this.results = [];\r\n        this.pageTotal = 0;\r\n        this.totalDistance = 0;\r\n        this.lastSeenAt = { x: null, y: null };\r\n        this.columnRenderer = {};\r\n        this.colGroups = [];\r\n        this.events = {};\r\n        this.intColumns = [];\r\n        this.dateColumns = [];\r\n        this.currencyColumns = [];\r\n\r\n        var self = this;\r\n        for (var i = 0; i < this.opts.columns.length; i++) {\r\n            var column = this.opts.columns[i];\r\n            column.width = $.hasPositiveValue(column.width) ? column.width : this.store(column.field + '.width');\r\n\r\n            var columnFunction = $.isNull(column.links) || column.links.length === 0 ?\r\n                function(obj, column) { return self.getDisplayValue(obj[column.field], column.dataType.toLowerCase()); } :\r\n                function(obj, column) {\r\n                    return column.links.filter(function(link) {\r\n                        return !$.isNull(link);\r\n                    }).map(function(link) {\r\n                        var label = $.coalesce(link.label, self.getDisplayValue(obj[column.field], column.dataType.toLowerCase()));\r\n                        var attr = $.clone(link.attributes) || {};\r\n                        var href = link.href || null;\r\n                        if (href) {\r\n                            for (var prop in obj) {\r\n                                if (href.indexOf('{' + prop + '}') > -1 && obj.hasOwnProperty(prop)) {\r\n                                    href = href.replace(new RegExp('{' + prop + '}', 'g'), obj[prop]);\r\n                                }\r\n                            }\r\n                        }\r\n                        var classes = attr['class'].split(' ');\r\n                        if (classes.indexOf('btn') === -1) {\r\n                            classes.push('btn');\r\n                            classes.push('btn-link');\r\n                        }\r\n                        if (classes.indexOf('dash-ajax') === -1) {\r\n                            classes.push('dash-ajax');\r\n                        }\r\n                        attr['class'] = classes.filter(function(x) { return x && x.length; }).join(' ');\r\n                        attr['data-method'] = link.method ? link.method.toUpperCase() : 'GET';\r\n                        attr['data-href'] = href;\r\n                        attr['title'] = label;\r\n                        attr['type'] = attr['role'] = 'button';\r\n                        return m('button', attr, $.isNull(link.icon) ? label : m('i', { class: 'dash dash-' + link.icon.toLowerCase() }));\r\n                    });\r\n                };\r\n\r\n            this.columnRenderer[column.field] = columnFunction;\r\n            this.colGroups.push(m('col'));\r\n\r\n            var type = column.dataType.toLowerCase();\r\n            if (type === 'int') {\r\n                this.intColumns.push(column.field);\r\n            } else if (type === 'date') {\r\n                this.dateColumns.push(column.field);\r\n            } else if (type === 'currency') {\r\n                this.currencyColumns.push(column.field);\r\n            }\r\n        }\r\n\r\n        this.itemsPerPage = this.store('itemsPerPage') * 1 || 10;\r\n        this.currentStartItem = this.store('currentStartItem') * 1 || 0;\r\n        this.searchQuery = this.store('searchQuery') || '';\r\n        this.width = this.store('width') * 1 || 100;\r\n        var sorting = this.store('sorting');\r\n        this.sorting = (typeof sorting === 'string' ? JSON.parse(sorting) : sorting) || [];\r\n\r\n        if (data) {\r\n            this.processData({ rows: data });\r\n        }\r\n\r\n        this.run();\r\n    }\r\n\r\n    Table.prototype = {\r\n        pageOptions: [m('option', { value: '10' }, '10'), m('option', { value: '20' }, '20'), m('option', { value: '50' }, '50'), m('option', { value: '100' }, '100')],\r\n\r\n        /**\r\n         * Get/set persistent values.\r\n         * @param {string} key - Key name of the value to get/set.\r\n         * @param {*} value - Value to set.\r\n         * @returns {string|undefined} Value if getting, else undefined.\r\n         */\r\n        store: function(key, value) {\r\n            var myKey = this.opts.id + '.' + key;\r\n            // getter\r\n            if ($.isUndefined(value)) {\r\n                return $.isNull(this.opts.storageFunction) ? localStorage[myKey] : $.coalesce(this.opts[key], null);\r\n            }\r\n\r\n            // setter\r\n            if ($.isNull(this.opts.storageFunction)) {\r\n                localStorage[myKey] = value;\r\n            } else {\r\n                // ignore the param actually passed and use the values from the object\r\n                // passing the whole object lets the storage function decide when to actually save using a debounce\r\n                if ($.isFunction(this.opts.storageFunction)) {\r\n                    this.opts.storageFunction({\r\n                        itemsPerPage: this.itemsPerPage,\r\n                        currentStartItem: this.currentStartItem,\r\n                        searchQuery: this.searchQuery,\r\n                        width: this.width,\r\n                        sorting: this.sorting,\r\n                        columnWidths: this.opts.columns.map(function(c) { return { field: c.field, width: c.width * 1.0 }; })\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Process the data array result from the ajax request.\r\n         * @param {Object[]} data - Array of records to display.\r\n         */\r\n        processData: function(data) {\r\n            if (this.opts.dataCallback) {\r\n                this.opts.dataCallback(data);\r\n            }\r\n\r\n            var i = 0, len = data.rows.length, j = 0;\r\n            for (; i < len; i++) {\r\n                // add an index to the data so we can reset to the default sort order later if the user wants\r\n                data.rows[i]._index = i;\r\n\r\n                var x;\r\n                // convert input to appropriate types\r\n                for (j = 0; j < this.intColumns.length; j++) {\r\n                    x = this.intColumns[j];\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : data.rows[i][x] * 1;\r\n                }\r\n                for (j = 0; j < this.dateColumns.length; j++) {\r\n                    x = this.dateColumns[j];\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : $.fecha.parse(data.rows[i][x], this.opts.dataDateFormat);\r\n                }\r\n                for (j = 0; j < this.currencyColumns.length; j++) {\r\n                    x = this.currencyColumns[j];\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : $.accounting.unformat(data.rows[i][x]);\r\n                }\r\n            }\r\n            this.data = data.rows;\r\n            this.filteredTotal = data.filteredTotal;\r\n\r\n            this.loading = false;\r\n            this.sort(false);\r\n            this.filterResults();\r\n        },\r\n\r\n        /**\r\n         * Load the data to populate the table.\r\n         */\r\n        loadData: function() {\r\n            this.loading = true;\r\n            this.loadingError = false;\r\n\r\n            var self = this;\r\n            $.ajax({\r\n                method: this.opts.requestMethod,\r\n                url: this.opts.url,\r\n                data: this.buildParams(),\r\n                block: false\r\n            }, this.processData.bind(this), function(data) {\r\n                self.loading = false;\r\n                self.loadingError = true;\r\n                if (self.opts.errorCallback) {\r\n                    self.opts.errorCallback(data);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Force the table to refresh its data.\r\n         */\r\n        refresh: function() {\r\n            this.loading = true;\r\n            this.loadingError = false;\r\n            m.redraw();\r\n            this.loadData();\r\n        },\r\n\r\n        /**\r\n         * Build querystring params to fetch data from the server.\r\n         * @returns {Object} Request parameters.\r\n         */\r\n        buildParams: function() {\r\n            var sort = this.sorting.length > 0 ? this.sorting.map(function(obj, i) { return { field: obj.field, dir: obj.dir, index: i }; }) : null;\r\n            if (this.opts.requestUsePascalCase) {\r\n                return $.extend(this.opts.requestParams, {\r\n                    StartItem: this.currentStartItem,\r\n                    Items: this.itemsPerPage,\r\n                    Query: this.searchQuery,\r\n                    Sort: $.toPascalKeys(sort)\r\n                });\r\n            }\r\n            return $.extend(this.opts.requestParams, {\r\n                startItem: this.currentStartItem,\r\n                items: this.itemsPerPage,\r\n                query: this.searchQuery,\r\n                sort: sort\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Set the first item index to display.\r\n         * @param {type} index - Record index to start on.\r\n         */\r\n        setCurrentStartItem: function(index) {\r\n            this.currentStartItem = index;\r\n            this.store('currentStartItem', index);\r\n            this.filterResults(true);\r\n        },\r\n\r\n        /**\r\n         * Set the number of items to display per page.\r\n         * @param {number|Event} e - Number or items per page, or an event that triggered the change.\r\n         */\r\n        setItemsPerPage: function(e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var items = (isNaN(e) ? e.target.value : e) * 1;\r\n            if (this.itemsPerPage !== items) {\r\n                this.itemsPerPage = items;\r\n                this.store('itemsPerPage', items);\r\n                this.setCurrentStartItem(0);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set the search query for filtering table data.\r\n         * @param {string} val - New search text.\r\n         */\r\n        setSearchQuery: function(val) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var query = val.target ? val.target.value : val;\r\n            if (this.searchQuery !== query) {\r\n                this.searchQuery = query;\r\n                clearTimeout(this.requestTimer);\r\n                this.requestTimer = setTimeout(this.runSearch.bind(this, query), this.opts.inputTimeout);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change search query and filter results.\r\n         * @param {string} query - New search text.\r\n         */\r\n        runSearch: function(query) {\r\n            this.store('searchQuery', query);\r\n            this.requestTimer = null;\r\n            this.currentStartItem = 0;\r\n            this.filterResults(true);\r\n            m.redraw();\r\n        },\r\n\r\n        /**\r\n         * Filter the data based on the search query, current page, and items per page.\r\n         * @param {bool} refresh - Force it to refresh its data.\r\n         */\r\n        filterResults: function(refresh) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            if (refresh && !this.opts.loadAllData) {\r\n                // force the data to reload. filterResults will get called again after the data loads\r\n                this.loadData();\r\n            } else if (!this.opts.loadAllData) {\r\n                // we're not loading all the data to begin with. so whatever data we have should be displayed.\r\n                this.results = this.data;\r\n                this.pageTotal = Math.ceil(this.filteredTotal / this.itemsPerPage);\r\n            } else {\r\n                // we're loading all the data to begin with. so figure out what data to display.\r\n                var filteredTotal = 0;\r\n                if (this.data.constructor !== Array) {\r\n                    this.loading = true;\r\n                    this.results = [];\r\n                } else {\r\n                    var startItem = this.currentStartItem;\r\n                    var res = this.searchQuery ? this.data.filter(this.filterArray.bind(this.searchQuery.toLowerCase())) : this.data;\r\n                    filteredTotal = res.length;\r\n                    this.results = res.slice(startItem, startItem + this.itemsPerPage);\r\n                }\r\n\r\n                this.filteredTotal = filteredTotal;\r\n                this.pageTotal = Math.ceil(filteredTotal / this.itemsPerPage);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Page forward or backward.\r\n         * @param {number} d - Direction to move, 1 is forward, -1 is backward.\r\n         * @param {number} m - Move to end (first or last page) if true.\r\n         */\r\n        moveToPage: function(d, m) {\r\n            this.changePage(d === 1 ? m ? this.pageTotal : this.currentStartItem / this.itemsPerPage + 2 : m ? 1 : this.currentStartItem / this.itemsPerPage);\r\n        },\r\n\r\n        /**\r\n         * Move to the specified page number.\r\n         * @param {number|Event} e - New page number, or an event that triggered the change.\r\n         */\r\n        changePage: function(e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var page = (isNaN(e) ? e.target.value : e) * 1;\r\n            if (page <= this.pageTotal && page > 0) {\r\n                this.setCurrentStartItem((page - 1) * this.itemsPerPage);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change the sorting order.\r\n         * @param {string} fieldName - Name of the field to sort on.\r\n         * @param {string} dataType - Data type of the field.\r\n         * @param {Event} e - Event that triggered the change.\r\n         */\r\n        changeSort: function(fieldName, dataType, e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var val = $.findByKey(this.sorting, 'field', fieldName);\r\n            if (e.shiftKey) {\r\n                document.getSelection().removeAllRanges();\r\n            } else {\r\n                this.sorting = [];\r\n            }\r\n\r\n            if (val === null) {\r\n                this.sorting.push({ field: fieldName, dir: 'ASC', dataType: dataType || 'string' });\r\n            } else if (e.shiftKey) {\r\n                if (val.dir === 'DESC') {\r\n                    this.sorting.splice(val._i, 1);\r\n                } else {\r\n                    val.dir = 'DESC';\r\n                    this.sorting[val._i] = val;\r\n                }\r\n            } else {\r\n                val.dir = val.dir === 'ASC' ? 'DESC' : 'ASC';\r\n                this.sorting.push(val);\r\n            }\r\n\r\n            this.sort();\r\n            this.setCurrentStartItem(0);\r\n        },\r\n\r\n        /**\r\n         * Sort the underlying data.\r\n         * @param {bool} refresh - Refresh the data from the server.\r\n         */\r\n        sort: function(refresh) {\r\n            refresh = $.coalesce(refresh, true);\r\n            this.data.sort(this.sorting.length > 0 ? this.compare.bind(this) : this.defaultCompare);\r\n            this.filterResults(refresh);\r\n            this.store('sorting', JSON.stringify(this.sorting));\r\n        },\r\n\r\n        /**\r\n         * Set up the table and column styles and events.\r\n         */\r\n        setLayout: function() {\r\n            if (this.layoutSet) {\r\n                return;\r\n            }\r\n\r\n            this.layoutSet = true;\r\n            this.content = $.get(this.opts.content);\r\n            this.table = $.get('.table-data-table', this.content);\r\n            this.table.style.tableLayout = 'fixed';\r\n            this.tableHeaderRow = this.table.tHead.rows[0];\r\n\r\n            if (this.table !== null) {\r\n                this.clientWidth = this.content.clientWidth;\r\n                this.table.tHead.style.width = this.table.style.width = (this.width / 100 * this.table.offsetWidth) + 'px';\r\n\r\n                var hWidth = this.table.tHead.offsetWidth;\r\n                var tWidth = this.table.offsetWidth;\r\n                var i = 0;\r\n                var cells = this.tableHeaderRow.cells;\r\n                this.opts.columns.forEach(function(x) {\r\n                    if (!x.width) {\r\n                        x.width = cells[i].offsetWidth / hWidth * 100;\r\n                    }\r\n                    cells[i].style.width = x.width / 100 * tWidth + 'px';\r\n                    ++i;\r\n                });\r\n\r\n                if (this.opts.editable) {\r\n                    this.events = {\r\n                        resize: $.debounce(this.onResize.bind(this), 50),\r\n                        move: this.onMouseMove.bind(this),\r\n                        up: this.onMouseUp.bind(this),\r\n                        touch: this.touchHandler.bind(this)\r\n                    };\r\n                    $.on(window, 'resize', this.events.resize);\r\n                    $.on(window, 'mousemove', this.events.move);\r\n                    $.on(window, 'mouseup', this.events.up);\r\n\r\n                    var header = $.get('thead', this.table);\r\n                    if (header) {\r\n                        $.on(header, 'touchstart', this.events.touch);\r\n                        $.on(header, 'touchmove', this.events.touch);\r\n                        $.on(header, 'touchend', this.events.touch);\r\n                        $.on(header, 'touchcancel', this.events.touch);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Clean up our mess.\r\n         */\r\n        destroy: function() {\r\n            if (this.opts.editable) {\r\n                $.off(window, 'resize', this.events.resize);\r\n                $.off(window, 'mousemove', this.events.move);\r\n                $.off(window, 'mouseup', this.events.up);\r\n\r\n                var header = $.get('thead', this.table);\r\n                if (header) {\r\n                    $.off(header, 'touchstart', this.events.touch);\r\n                    $.off(header, 'touchmove', this.events.touch);\r\n                    $.off(header, 'touchend', this.events.touch);\r\n                    $.off(header, 'touchcancel', this.events.touch);\r\n                }\r\n            }\r\n            m.mount(this.content, null);\r\n        },\r\n\r\n        /**\r\n         * Update the table and column widths based on a window resize.\r\n         */\r\n        onResize: function() {\r\n            var cWidth = this.content.clientWidth;\r\n            if (cWidth === 0) {\r\n                return;\r\n            }\r\n            var scale = cWidth / this.clientWidth;\r\n            this.clientWidth = cWidth;\r\n            this.table.tHead.style.width = this.table.style.width = (this.pixelToFloat(this.table.style.width) * scale) + 'px';\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                this.tableHeaderRow.cells[i].style.width = (this.pixelToFloat(this.tableHeaderRow.cells[i].style.width) * scale) + 'px';\r\n            }\r\n            this.updateLayout();\r\n        },\r\n\r\n        /**\r\n         * Update the table header style.\r\n         */\r\n        updateLayout: function() {\r\n            if (!$.isVisible(this.table)) {\r\n                return;\r\n            }\r\n            $.get('.table-scrollable', this.content).style.paddingTop = this.table.tHead.offsetHeight + 'px';\r\n            var colGroup = $.get('.table-column-group', this.content);\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                colGroup.children[i].style.width = this.tableHeaderRow.cells[i].style.width;\r\n            }\r\n            if (this.clientWidth > 0 && this.content.clientWidth / this.clientWidth !== 1) {\r\n                this.onResize();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Make the table header scroll horizontally with the table\r\n         * @param {Event} e - Event that triggered the scroll.\r\n         */\r\n        onScroll: function(e) {\r\n            var head = this.table.tHead;\r\n            var scroll = e.target;\r\n            if (-head.offsetLeft !== scroll.scrollLeft) {\r\n                head.style.left = '-' + scroll.scrollLeft + 'px';\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handle dragging to change column widths.\r\n         * @param {type} e - Event that triggered the change.\r\n         */\r\n        onHeaderMouseDown: function(e) {\r\n            if (e.button !== 0) {\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            var callbackFunc = function(cellEl) {\r\n                e.stopImmediatePropagation();\r\n                e.preventDefault();\r\n\r\n                self.resizeContext = {\r\n                    colIndex: cellEl.cellIndex,\r\n                    initX: e.clientX,\r\n                    scrWidth: $.get('.table-scrollable', self.content).offsetWidth,\r\n                    initTblWidth: self.table.offsetWidth,\r\n                    initColWidth: self.pixelToFloat($.get('.table-column-group', self.content).children[cellEl.cellIndex].style.width),\r\n                    layoutTimer: null\r\n                };\r\n            };\r\n            self.inResizeArea(e, callbackFunc);\r\n        },\r\n\r\n        /**\r\n         * Handle resizing columns.\r\n         * @param {Event} e - Event that triggered the change.\r\n         */\r\n        onMouseMove: function(e) {\r\n            var newStyle = '';\r\n            var cursorFunc = function() {\r\n                newStyle = 'col-resize';\r\n            };\r\n            this.inResizeArea(e, cursorFunc);\r\n            if (this.table.tHead.style.cursor !== newStyle) {\r\n                this.table.tHead.style.cursor = newStyle;\r\n            }\r\n\r\n            var ctx = this.resizeContext;\r\n            if ($.isNull(ctx)) {\r\n                return;\r\n            }\r\n\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n\r\n            var newColWidth = Math.max(ctx.initColWidth + e.clientX - ctx.initX, this.opts.columnMinWidth);\r\n            this.table.tHead.style.width = this.table.style.width = (ctx.initTblWidth + (newColWidth - ctx.initColWidth)) + 'px';\r\n            $.get('.table-column-group', this.content).children[ctx.colIndex].style.width = this.tableHeaderRow.cells[ctx.colIndex].style.width = newColWidth + 'px';\r\n\r\n            if (ctx.layoutTimer === null) {\r\n                var self = this;\r\n                var timerFunc = function() {\r\n                    self.resizeContext.layoutTimer = null;\r\n                    self.updateLayout();\r\n                };\r\n                ctx.layoutTimer = setTimeout(timerFunc, 25);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update column widths and save them.\r\n         */\r\n        onMouseUp: function() {\r\n            var ctx = this.resizeContext;\r\n            if ($.isNull(ctx)) {\r\n                return;\r\n            }\r\n\r\n            if (ctx.layoutTimer !== null) {\r\n                clearTimeout(ctx.layoutTimer);\r\n            }\r\n            this.resizeContext = null;\r\n\r\n            var newTblWidth = this.table.offsetWidth;\r\n            this.width = (newTblWidth / ctx.scrWidth * 100).toFixed(2);\r\n            this.store('width', this.width);\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                this.opts.columns[i].width = (this.pixelToFloat(this.tableHeaderRow.cells[i].style.width) / newTblWidth * 100).toFixed(2);\r\n                this.store(this.opts.columns[i].field + '.width', this.opts.columns[i].width);\r\n            }\r\n\r\n            this.updateLayout();\r\n        },\r\n\r\n        /**\r\n         * Check if the cursor is in the area where the user can click to drag a column.\r\n         * @param {Event} e - Event that triggered the check.\r\n         * @param {Function} callback - Function to run if in the resize area.\r\n         */\r\n        inResizeArea: function(e, callback) {\r\n            var tblX = e.clientX;\r\n            var el;\r\n            for (el = this.table.tHead; el !== null; el = el.offsetParent) {\r\n                tblX -= el.offsetLeft + el.clientLeft - el.scrollLeft;\r\n            }\r\n\r\n            var cellEl = e.target;\r\n            while (cellEl !== this.table.tHead && cellEl !== null) {\r\n                if (cellEl.nodeName === 'TH') {\r\n                    break;\r\n                }\r\n                cellEl = cellEl.parentNode;\r\n            }\r\n\r\n            if (cellEl === this.table.tHead) {\r\n                for (var i = this.tableHeaderRow.cells.length - 1; i >= 0; i--) {\r\n                    cellEl = this.tableHeaderRow.cells[i];\r\n                    if (cellEl.offsetLeft <= tblX) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (cellEl !== null) {\r\n                var x = tblX;\r\n                for (el = cellEl; el !== this.table.tHead; el = el.offsetParent) {\r\n                    if (el === null) {\r\n                        break;\r\n                    }\r\n                    x -= el.offsetLeft - el.scrollLeft + el.clientLeft;\r\n                }\r\n                if (x < 10 && cellEl.cellIndex !== 0) {\r\n                    callback.call(this, cellEl.previousElementSibling);\r\n                } else if (x > cellEl.clientWidth - 10) {\r\n                    callback.call(this, cellEl);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Make column resizing play nice with touch. http://stackoverflow.com/questions/28218888/touch-event-handler-overrides-click-handlers\r\n         * @param {Event} e Event that triggered the handler.\r\n         */\r\n        touchHandler: function(e) {\r\n            var mouseEvent = null;\r\n            var simulatedEvent = document.createEvent('MouseEvent');\r\n            var touch = e.changedTouches[0];\r\n\r\n            switch (e.type) {\r\n                case 'touchstart':\r\n                    mouseEvent = 'mousedown';\r\n                    this.totalDistance = 0;\r\n                    this.lastSeenAt.x = touch.clientX;\r\n                    this.lastSeenAt.y = touch.clientY;\r\n                    break;\r\n                case 'touchmove':\r\n                    mouseEvent = 'mousemove';\r\n                    break;\r\n                case 'touchend':\r\n                    if (this.lastSeenAt.x) {\r\n                        this.totalDistance += Math.sqrt(Math.pow(this.lastSeenAt.y - touch.clientY, 2) + Math.pow(this.lastSeenAt.x - touch.clientX, 2));\r\n                    }\r\n                    mouseEvent = this.totalDistance > 5 ? 'mouseup' : 'click';\r\n                    this.lastSeenAt = { x: null, y: null };\r\n                    break;\r\n            }\r\n\r\n            simulatedEvent.initMouseEvent(mouseEvent, true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);\r\n            touch.target.dispatchEvent(simulatedEvent);\r\n            e.preventDefault();\r\n        },\r\n\r\n        /**\r\n         * Get the value for the field coverted to the correct data type.\r\n         * @param {string} value - Value to convert.\r\n         * @returns {*} Converted value.\r\n         */\r\n        getFieldValue: function(value) {\r\n            if ($.isNull(value)) {\r\n                return null;\r\n            }\r\n            return value.getMonth ? value : value.toLowerCase ? value.toLowerCase() : value;\r\n        },\r\n\r\n        /**\r\n         * Get the formatted value to display for the field.\r\n         * @param {string} value - Value to format.\r\n         * @param {string} dataType - Data type to format to.\r\n         * @returns {*} Converted value.\r\n         */\r\n        getDisplayValue: function(value, dataType) {\r\n            if (!dataType || $.isNull(value)) {\r\n                return value;\r\n            }\r\n\r\n            var val = value;\r\n            if (dataType === 'currency') {\r\n                val = $.accounting.formatMoney(val, this.opts.displayCurrencyFormat);\r\n            } else if (dataType === 'date') {\r\n                val = $.fecha.format(val, this.opts.displayDateFormat);\r\n            }\r\n            return val;\r\n        },\r\n\r\n        /**\r\n         * Default sorting function for the data - resets to order when data was loaded.\r\n         * @param {Object} a - First object to compare.\r\n         * @param {Object} b - Object to compare to.\r\n         * @returns {number} 1 if a comes first, -1 if b comes first, else 0.\r\n         */\r\n        defaultCompare: function(a, b) {\r\n            return a._index > b._index ? 1 : a._index < b._index ? -1 : 0;\r\n        },\r\n\r\n        /**\r\n         * Multi-sorting function for the data.\r\n         * @param {Object} a - First object to compare.\r\n         * @param {Object} b - Object to compare to.\r\n         * @returns {number} 1 if a comes first, -1 if b comes first, else 0.\r\n         */\r\n        compare: function(a, b) {\r\n            var sorting = this.sorting;\r\n            var i = 0, len = sorting.length;\r\n            for (; i < len; i++) {\r\n                var sort = sorting[i];\r\n                var aa = this.getFieldValue(a[sort.field]);\r\n                var bb = this.getFieldValue(b[sort.field]);\r\n\r\n                if (aa === null) {\r\n                    return 1;\r\n                }\r\n                if (bb === null) {\r\n                    return -1;\r\n                }\r\n                if (aa < bb) {\r\n                    return sort.dir === 'ASC' ? -1 : 1;\r\n                }\r\n                if (aa > bb) {\r\n                    return sort.dir === 'ASC' ? 1 : -1;\r\n                }\r\n            }\r\n            return 0;\r\n        },\r\n\r\n        /**\r\n         * Filter an array of objects to find objects where value contains the value of `this`\r\n         * @param {Object} obj - Object to search in.\r\n         * @returns {bool} True if object contains `this`.\r\n         */\r\n        filterArray: function(obj) {\r\n            for (var key in obj) {\r\n                if (key.indexOf('_') < 0 && obj.hasOwnProperty(key) && (obj[key] + '').toLowerCase().indexOf(this) > -1) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Convert a style with 'px' to a float.\r\n         * @param {string} val - CSS style to convert.\r\n         * @returns {number} Numeric value.\r\n         */\r\n        pixelToFloat: function(val) {\r\n            return val.replace('px', '').replace('%', '') * 1.0;\r\n        },\r\n\r\n        /**\r\n         * Build the table header tags.\r\n         * @param {Object} obj - Column to build the tag for.\r\n         * @returns {Object} Mithril TH node.\r\n         */\r\n        tableHeaders: function(obj) {\r\n            var field = obj.field;\r\n            var thAttrs = { class: obj.classes || '' }, divAttrs = {};\r\n\r\n            var divContent = [obj.label || field];\r\n            if ($.isUndefined(obj.sortable) || obj.sortable === true) {\r\n                var val = $.findByKey(this.sorting, 'field', field);\r\n                divContent.push(m('i.float-right.dash', { class: val ? (val.dir === 'ASC' ? 'dash-sort-up' : 'dash-sort-down') : this.opts.editable ? 'dash-sort' : '' }));\r\n                if (this.opts.editable) {\r\n                    divAttrs = { onclick: this.changeSort.bind(this, field, obj.dataType.toLowerCase()) };\r\n                }\r\n            } else {\r\n                thAttrs.class += ' disabled';\r\n            }\r\n            if (this.opts.editable) {\r\n                thAttrs.onmousedown = this.onHeaderMouseDown.bind(this);\r\n            }\r\n            return m('th', thAttrs, [m('div', divAttrs, divContent)]);\r\n        },\r\n\r\n        /**\r\n         * Build the view that actually shows the table.\r\n         * @returns {Object}  Mithril DIV node.\r\n         */\r\n        view: function() {\r\n            return m('.data-table', [\r\n                !this.opts.editable ? m('span#table-items-per-page') :\r\n                    m('.container',\r\n                        m('.columns.form-horizontal.m-2', [\r\n                            m('.col-4',\r\n                                this.opts.searchable ? m('.input-group', [\r\n                                    m('span.input-group-addon', m('i.dash.dash-search.input-group-text')),\r\n                                    m('input.form-input', { type: 'text', oninput: this.setSearchQuery.bind(this), value: this.searchQuery, disabled: this.loading })\r\n                                ]) : null\r\n                            ),\r\n                            m('.col-4', this.opts.headerButtons ? m('.float-right', this.opts.headerButtons) : null),\r\n                            m('.col-4',\r\n                                m('.input-group', [\r\n                                    m('span.input-group-addon', m('span.input-group-text', this.opts.resources.perPage)),\r\n                                    m('select.form-select', {\r\n                                        id: 'table-items-per-page', onchange: this.setItemsPerPage.bind(this),\r\n                                        value: this.itemsPerPage, disabled: this.loading\r\n                                    }, this.pageOptions)\r\n                                ])\r\n                            )\r\n                        ])\r\n                    ),\r\n                m('.table-scrollable', { class: this.opts.editable ? '' : ' table-no-edit' }, [\r\n                    m('.table-area', { onscroll: this.onScroll.bind(this) }, [\r\n                        m('table.table.table-hover.table-sm.table-striped.table-data-table', [\r\n                            m('colgroup.table-column-group', this.colGroups),\r\n                            m('thead', [m('tr', this.opts.columns.map(this.tableHeaders.bind(this)))]),\r\n                            m('tbody', this.tableBodyView())\r\n                        ])\r\n                    ])\r\n                ]),\r\n                this.tableFooterView()\r\n            ]);\r\n        },\r\n\r\n        /**\r\n         * Build a single table cell.\r\n         * @param {Object} obj - Table record to build cell for.\r\n         * @param {number} index - Row index of this row.\r\n         * @param {Object} column - Column to build cell for.\r\n         * @returns {Object} Mithril TD node.\r\n         */\r\n        tableCellView: function(obj, index, column) {\r\n            return m('td', this.columnRenderer[column.field](obj, column, index));\r\n        },\r\n\r\n        /**\r\n         * Build a table row.\r\n         * @param {Object} obj - Table record to build row for.\r\n         * @param {number} index - Row index of this row.\r\n         * @returns {Object} Mithril TR node.\r\n         */\r\n        tableRowView: function(obj, index) {\r\n            return m('tr', { key: obj._index }, this.opts.columns.map(this.tableCellView.bind(this, obj, index)));\r\n        },\r\n\r\n        /**\r\n         * Build the table footer nodes\r\n         * @returns {Object} Mithril TR node(s).\r\n         */\r\n        tableBodyView: function() {\r\n            if (this.loading) {\r\n                return m('tr', m('td', { colspan: this.opts.columns.length }, m('.loading.loading-lg')));\r\n            }\r\n            if (this.loadingError) {\r\n                return m('tr.table-loading-error', m('td', { colspan: this.opts.columns.length }, [\r\n                    m('.table-loading-error-message', this.opts.resources.loadingError),\r\n                    m('.btn.btn-info', { onclick: this.refresh.bind(this) }, this.opts.resources.tryAgain)\r\n                ]));\r\n            }\r\n            if (this.filteredTotal === 0) {\r\n                return m('tr', [m('td', { colspan: this.opts.columns.length }, this.opts.resources.noData)]);\r\n            }\r\n            return this.results.map(this.tableRowView.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Build the table footer nodes.\r\n         * @returns {Object} Mithril DIV node.\r\n         */\r\n        tableFooterView: function() {\r\n            if (this.loading || this.loadingError) {\r\n                return null;\r\n            }\r\n\r\n            var currentPage = (this.currentStartItem + this.itemsPerPage) / this.itemsPerPage;\r\n            if (this.opts.pageDropdown) {\r\n                // limit page dropdown to 10000 options\r\n                var max = Math.min(this.pageTotal, 10000);\r\n                var optionList = [max], i = max;\r\n                while (i > 0) {\r\n                    optionList[i] = m('option', { value: i }, i);\r\n                    --i;\r\n                }\r\n            }\r\n\r\n            var res = this.opts.resources;\r\n            return m('.container', m('.columns.m-2', [\r\n                m('.col-4.btn-toolbar', { class: this.filteredTotal > this.itemsPerPage ? '' : ' invisible' }, [\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.firstPage, onclick: this.moveToPage.bind(this, -1, true)\r\n                    }, m('i.dash.dash-to-start-alt.text-primary')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.previousPage, onclick: this.moveToPage.bind(this, -1, false)\r\n                    }, m('i.dash.dash-to-start.text-primary')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.nextPage, onclick: this.moveToPage.bind(this, 1, false)\r\n                    }, m('i.dash.dash-to-end.text-primary')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.lastPage, onclick: this.moveToPage.bind(this, 1, true)\r\n                    }, m('i.dash.dash-to-end-alt.text-primary'))\r\n                ]),\r\n                m('.col-4', { class: this.filteredTotal > this.itemsPerPage ? '' : ' invisible' },\r\n                    !this.opts.pageDropdown ? null : m('.col-8.offset-2',\r\n                        m('.input-group', [\r\n                            m('span.input-group-addon', m('span.input-group-text', res.page)),\r\n                            m('select.form-select', { onchange: this.changePage.bind(this), value: currentPage }, optionList)\r\n                        ])\r\n                    )\r\n                ),\r\n                m('.col-4.text-right.my-auto', res.showing\r\n                    .replace('{0}', Math.min(this.currentStartItem + 1, this.filteredTotal))\r\n                    .replace('{1}', Math.min(this.currentStartItem + this.itemsPerPage, this.filteredTotal))\r\n                    .replace('{2}', this.filteredTotal)\r\n                )\r\n            ]));\r\n        },\r\n\r\n        /**\r\n         * Render the view.\r\n         */\r\n        run: function() {\r\n            var self = this;\r\n            if (!this.data) {\r\n                self.loadData();\r\n            }\r\n            m.mount(self.content, {\r\n                view: self.view.bind(self),\r\n                onupdate: function() {\r\n                    self.setLayout();\r\n                    self.updateLayout();\r\n                    $.dialogs.processContent(self.table);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    return Table;\r\n});\r\n","/*!\r\n * Wraps functionality needed for creating charts using Chart.js.\r\n */\r\n(function(root, factory) {\r\n    root.DashChart = factory(root.$, root.Alertify, root.Chart);\r\n})(this, function($, Alertify, Chart) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare DashChart class.\r\n     * @param {Node} content - DOM node that contains the chart.\r\n     * @param {Node} canvas - Canvas element to display the chart in.\r\n     * @param {bool} showLegend - Show or hide the chart legend.\r\n     * @param {Function} dataFn - Function to call if after loading data. Runs before other functions.\r\n     * @param {Function} errorFn - Function to call if an error occurs loading data.\r\n     * @param {Function} toggleExportFn - Function to enable/disable export.\r\n     */\r\n    var DashChart = function(content, showLegend, dataFn, errorFn, toggleExportFn) {\r\n        this.content = content;\r\n        this.url = content.getAttribute('data-url');\r\n        this.canvas = $.get('.chart-canvas', content);\r\n        this.showLegend = $.coalesce(showLegend, true);\r\n        this.dataFn = dataFn;\r\n        this.errorFn = errorFn;\r\n        this.toggleExportFn = toggleExportFn;\r\n        this.chart = null;\r\n        this.run();\r\n    };\r\n\r\n    /**\r\n     * Declare DashChart class methods.\r\n     */\r\n    DashChart.prototype = {\r\n        /**\r\n         * Generate a random number within range.\r\n         * @param {number[]} range - Min and max value.\r\n         * @returns {number} Random number.\r\n         */\r\n        randomWithin: function(range) {\r\n            return Math.floor(range[0] + Math.random() * (range[1] + 1 - range[0]));\r\n        },\r\n\r\n        /**\r\n         * Generates a random color and a lighter partner color.\r\n         * @returns {string[]} Color codes.\r\n         */\r\n        randomColor: function() {\r\n            var hsl = [this.randomWithin([0, 360]), this.randomWithin([50, 100]), this.randomWithin([30, 80])];\r\n            return [\r\n                'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%, 1)',\r\n                'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%, .2)'\r\n            ];\r\n        },\r\n\r\n        /**\r\n         * Generates an array of random colors.\r\n         * @param {number} cnt - Number of colors to generate.\r\n         * @returns {string[]} Array of color codes.\r\n         */\r\n        randomColors: function(cnt) {\r\n            var result = new Array(cnt);\r\n            for (var i = 0; i < cnt; i++) {\r\n                result[i] = this.randomColor()[0];\r\n            }\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Parse a hex color into a hsla color and a lighter partner color.\r\n         * @param {string} hex - Hex color code with leading '#'.\r\n         * @returns {string[]} Color codes.\r\n         */\r\n        parseColor: function(hex) {\r\n            if (!hex) {\r\n                return this.randomColor();\r\n            }\r\n            var hsl = $.colors.rgb2hsl($.colors.hex2rgb(hex));\r\n            return [\r\n                'hsla(' + (hsl[0] * 360).toFixed(0) + ',' + (hsl[1] * 100).toFixed(0) + '%,' + (hsl[2] * 100).toFixed(0) + '%, 1)',\r\n                'hsla(' + (hsl[0] * 360).toFixed(0) + ',' + (hsl[1] * 100).toFixed(0) + '%,' + (hsl[2] * 100).toFixed(0) + '%, .2)'\r\n            ];\r\n        },\r\n\r\n        /**\r\n         * Build the chart.\r\n         */\r\n        run: function() {\r\n            var self = this;\r\n\r\n            $.show($.get('.chart-spinner', self.content));\r\n            $.hide($.get('.chart-error', self.content));\r\n            $.hide(self.canvas);\r\n            if (self.toggleExportFn) {\r\n                self.toggleExportFn(false);\r\n            }\r\n\r\n            $.ajax({\r\n                method: 'POST',\r\n                url: self.url,\r\n                block: false\r\n            }, function(data) {\r\n                if ($.isFunction(self.dataFn)) {\r\n                    if (!self.dataFn(data)) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                var ranges = $.isArray(data.ranges) ? data.ranges : [data];\r\n                if (!ranges.some(function(x) { return x.rows && x.rows.length; })) {\r\n                    $.hide($.get('.chart-spinner', self.content));\r\n                    Alertify.error($.resx('chart.noData'));\r\n                    return;\r\n                }\r\n\r\n                $.hide($.get('.chart-spinner', self.content));\r\n                $.hide($.get('.chart-error', self.content));\r\n                $.show(self.canvas);\r\n                if (self.toggleExportFn) {\r\n                    self.toggleExportFn(true);\r\n                }\r\n\r\n                if (self.chart) {\r\n                    // this code is used for refreshing dashboard chart data, but won't be used on the chart dialog\r\n                    ranges.forEach(function(x, i) {\r\n                        self.chart.data.datasets[i].data = ranges[i].rows;\r\n                        self.chart.data.datasets[i].label = ranges[i].yTitle;\r\n                    });\r\n                    self.chart.data.labels = ranges[0].labels;\r\n                    self.chart.update();\r\n                } else {\r\n                    var scales = {};\r\n                    var tooltips = { callbacks: {} };\r\n                    if (ranges[0].xType === 'currency') {\r\n                        var currencyFormat = $.accounting.parseFormat(ranges[0].currencyFormat);\r\n                        scales.xAxes = [{\r\n                            ticks: {\r\n                                callback: function(value) {\r\n                                    return $.accounting.formatMoney(value, currencyFormat);\r\n                                }\r\n                            }\r\n                        }];\r\n                        tooltips.callbacks.title = function(tooltipItems, data) {\r\n                            var title = '';\r\n                            if (tooltipItems.length > 0) {\r\n                                if (tooltipItems[0].xLabel) {\r\n                                    title = tooltipItems[0].xLabel;\r\n                                } else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n                                    title = data.labels[tooltipItems[0].index];\r\n                                }\r\n                                title = $.accounting.formatMoney(title, currencyFormat);\r\n                            }\r\n                            return title;\r\n                        };\r\n                    } else if (ranges[0].xType === 'date') {\r\n                        var dateFormat = ranges[0].dateFormat;\r\n                        scales.xAxes = [{\r\n                            ticks: {\r\n                                callback: function(value) {\r\n                                    return $.fecha.format(new Date(value), dateFormat);\r\n                                }\r\n                            }\r\n                        }];\r\n                        tooltips.callbacks.title = function(tooltipItems, data) {\r\n                            var title = '';\r\n                            if (tooltipItems.length > 0) {\r\n                                if (tooltipItems[0].xLabel) {\r\n                                    title = tooltipItems[0].xLabel;\r\n                                } else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n                                    title = data.labels[tooltipItems[0].index];\r\n                                }\r\n                                title = $.fecha.format(new Date(title), dateFormat);\r\n                            }\r\n                            return title;\r\n                        };\r\n                    }\r\n\r\n                    var chartType = data.type.toLowerCase();\r\n                    var isRadial = chartType === 'pie' || chartType === 'doughnut';\r\n                    var datasets = [];\r\n                    scales.yAxes = [];\r\n                    ranges.forEach(function(x, i) {\r\n                        var color = self.parseColor(x.color);\r\n                        datasets.push({\r\n                            backgroundColor: color[0],\r\n                            borderColor: 'rgb(255, 255, 255)',\r\n                            borderWidth: 2,\r\n                            data: x.rows,\r\n                            label: x.yTitle,\r\n                            yAxisID: 'y-axis-' + i\r\n                        });\r\n\r\n                        var ticks = {};\r\n                        if (x.yType === 'currency') {\r\n                            var currencyFormat = $.accounting.parseFormat(x.currencyFormat);\r\n                            ticks.callback = function(value) {\r\n                                return $.accounting.formatMoney(value, currencyFormat);\r\n                            };\r\n                            tooltips.callbacks.label = function(item) {\r\n                                return $.accounting.formatMoney(item.yLabel, currencyFormat);\r\n                            };\r\n                        } else if (x.yType === 'date') {\r\n                            var dateFormat = x.dateFormat;\r\n                            ticks.callback = function(value) {\r\n                                return $.fecha.format(new Date(value), dateFormat);\r\n                            };\r\n                            tooltips.callbacks.label = function(item) {\r\n                                return $.fecha.format(new Date(item.yLabel), dateFormat);\r\n                            };\r\n                        }\r\n\r\n                        if (!isRadial) {\r\n                            scales.yAxes.push({\r\n                                id: 'y-axis-' + i,\r\n                                position: i === 0 ? 'left' : 'right',\r\n                                ticks: ticks,\r\n                                gridLines: {\r\n                                    color: color[1]\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    var chartData = {\r\n                        type: chartType === 'horizontalbar' ? 'horizontalBar' : chartType,\r\n                        options: {\r\n                            responsive: true,\r\n                            scales: isRadial ? null : scales,\r\n                            tooltips: tooltips,\r\n                            legend: { display: self.showLegend }\r\n                        },\r\n                        data: {\r\n                            labels: ranges[0].labels,\r\n                            datasets: datasets\r\n                        }\r\n                    };\r\n\r\n                    if (isRadial) {\r\n                        chartData.data.datasets[0].backgroundColor = self.randomColors(ranges[0].rows.length);\r\n                    }\r\n\r\n                    self.chart = new Chart(self.canvas.getContext('2d'), chartData);\r\n                }\r\n            }, function() {\r\n                if ($.isFunction(self.errorFn)) {\r\n                    if (!self.errorFn()) {\r\n                        return;\r\n                    }\r\n                }\r\n                $.hide($.get('.chart-spinner', self.content));\r\n                $.show($.get('.chart-error', self.content));\r\n                if (self.toggleExportFn) {\r\n                    self.toggleExportFn(false);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Destroy the chart.\r\n         */\r\n        destroy: function() {\r\n            $.destroy(this.chart);\r\n        }\r\n    };\r\n\r\n    return DashChart;\r\n});\r\n","/*!\r\n * Mithril based form component. For repetitive form elements.\r\n */\r\n(function(root, factory) {\r\n    root.Form = factory(root.m, root.$, root.Alertify, root.Help);\r\n})(this, function(m, $, Alertify, Help) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare form class.\r\n     * @param {Object} opts - Form settings\r\n     * @param {Object[]} records - Array of objects the form will display/update.\r\n     */\r\n    function Form(opts, records) {\r\n        opts = opts || {};\r\n        this.opts = $.extend({\r\n            container: null,\r\n            id: null,\r\n            columns: null,\r\n            wantsHelp: false,\r\n            appendRecord: false,\r\n            resx: {\r\n                deleteRecord: $.resx('delete'),\r\n                confirmDelete: $.resx('confirmDelete'),\r\n                confirmDeleteAll: $.resx('confirmDeleteAll'),\r\n                areYouSure: $.resx('areYouSure'),\r\n                moveUp: $.resx('moveUp'),\r\n                moveDown: $.resx('moveDown'),\r\n                help: $.resx('help')\r\n            }\r\n        }, opts);\r\n\r\n        this.container = $.get(this.opts.container);\r\n        this.records = $.isArray(records) ? records.map(function(x, i) { x._index = i; return x; }) : [];\r\n        this.addedCount = 0;\r\n        this.changed = false;\r\n    }\r\n\r\n    Form.prototype = {\r\n        /**\r\n         * Get the value of an element.\r\n         * @param {*} e - Event that triggered the value change, or the new value.\r\n         * @returns {string} Value of the element.\r\n         */\r\n        targetVal: function(e) {\r\n            return e && e.target ? e.target.value : e;\r\n        },\r\n\r\n        /**\r\n         * Set the value of a field on a record.\r\n         * @param {number} index - Record index.\r\n         * @param {string} field - Name of field to set.\r\n         * @param {Event} e - Event that triggered the change.\r\n         * @returns {bool} True if value changed, else false.\r\n         */\r\n        set: function(index, field, e) {\r\n            var val = this.targetVal(e);\r\n            if (this.opts.columns[field].type === 'int') {\r\n                val = $.isNull(val) ? null : val * 1;\r\n            }\r\n\r\n            if ($.isFunction(this.opts.columns[field].setter)) {\r\n                this.opts.columns[field].setter.call(this, index, field, e);\r\n            } else {\r\n                if (this.records[index][field] !== val) {\r\n                    this.records[index][field] = val;\r\n                    this.changed = true;\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Add a new record.\r\n         */\r\n        addRecord: function() {\r\n            --this.addedCount;\r\n            var obj = $.clone(this.opts.newRecord);\r\n            obj._index = this.addedCount;\r\n            if (this.opts.appendRecord) {\r\n                this.records.push(obj);\r\n            } else {\r\n                this.records.unshift(obj);\r\n            }\r\n            this.changed = true;\r\n        },\r\n\r\n        /**\r\n         * Delete a record.\r\n         * @param {number} index - Record index to delete.\r\n         * @param {Event} e - Event that triggered the delete.\r\n         */\r\n        deleteRecord: function(index, e) {\r\n            var self = this;\r\n            if ($.isFunction(this.opts.deleteFn)) {\r\n                this.opts.deleteFn.call(this, index, e);\r\n            } else {\r\n                // timeout prevents hitting enter on the button to trigger this confirmation from confirming it immediately\r\n                setTimeout(function() {\r\n                    Alertify.confirm(self.opts.resx.areYouSure, function(e) {\r\n                        self.records.splice(index, 1);\r\n                        if ($.isFunction(self.opts.afterDeleteFn)) {\r\n                            self.opts.afterDeleteFn.call(self, index, e);\r\n                        }\r\n                        self.changed = true;\r\n                        self.run();\r\n                    });\r\n                }, 100);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Delete all records.\r\n         */\r\n        deleteAllRecords: function() {\r\n            var self = this;\r\n            setTimeout(function() {\r\n                Alertify.confirm(self.opts.resx.areYouSure, function() {\r\n                    self.records = [];\r\n                    self.changed = true;\r\n                    self.run();\r\n                });\r\n            }, 100);\r\n        },\r\n\r\n        /**\r\n         * Move a record up in the record list.\r\n         * @param {number} index - Index of record to move up.\r\n         */\r\n        moveUp: function(index) {\r\n            var t = this.records[index - 1];\r\n            if (t) {\r\n                this.records[index - 1] = this.records[index];\r\n                this.records[index] = t;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Move a record down in the record list.\r\n         * @param {number} index - Index of record to move down.\r\n         */\r\n        moveDown: function(index) {\r\n            var t = this.records[index + 1];\r\n            if (t) {\r\n                this.records[index + 1] = this.records[index];\r\n                this.records[index] = t;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check if there are any records.\r\n         * @returns {bool} True if there are any records, else false.\r\n         */\r\n        hasRecords: function() {\r\n            return this.records && this.records.length > 0;\r\n        },\r\n\r\n        /**\r\n         * Trigger the click event if the enter or space key is hit.\r\n         * @param {Event} e - Event that triggered this.\r\n         */\r\n        keyInput: function(e) {\r\n            if (e && e.keyCode && (e.keyCode === 13 || e.keyCode === 32)) {\r\n                e.target.onclick.call(this, e);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Create the mithril node to show help wrapped around the provided content.\r\n         * @param {string} helpBody - Content of the help dialog.\r\n         * @param {Object} innerContent - Mithril node for the input that help is for.\r\n         * @returns {Object} Mithril node for input-group if help is enabled, else innerContent.\r\n         */\r\n        withHelp: function(helpBody, innerContent) {\r\n            return m(Help, { message: helpBody, enabled: this.opts.wantsHelp }, innerContent);\r\n        },\r\n\r\n        /**\r\n         * Return the error class if the value isn't valid.\r\n         * @param {string|number} value - Value to check against.\r\n         * @param {bool} requirePositive - Require the value be a positive number.\r\n         * @param {bool} isDate - Check if the value is a valid date.\r\n         * @returns {string}  Error class name if value isn't set, else empty string.\r\n         */\r\n        withError: function(value, requirePositive, isDate) {\r\n            requirePositive = $.coalesce(requirePositive, false);\r\n            isDate = $.coalesce(isDate, false);\r\n            var result = isDate ? $.fecha.parse(value, this.opts.dateFormat) : $.hasValue(value) && (!requirePositive || $.hasPositiveValue(value));\r\n            return result ? '' : ' mform-control-error';\r\n        },\r\n\r\n        /**\r\n         * Add a disabled attribute to the input attributes if isDisabled=true.\r\n         * @param {Object} attrs - Attribute object to update.\r\n         * @param {bool} isDisabled - Is the input diabled or not.\r\n         * @returns {Object} Updated attribute object.\r\n         */\r\n        withDisabled: function(attrs, isDisabled) {\r\n            if (isDisabled) {\r\n                attrs.disabled = true;\r\n            }\r\n            return attrs;\r\n        },\r\n\r\n        /**\r\n         * Add a checked attribute to the input attributes if isChecked=true.\r\n         * @param {Object} attrs - Attribute object to update.\r\n         * @param {bool} isChecked - Is the input checked or not.\r\n         * @returns {Object} Updated attribute object.\r\n         */\r\n        withChecked: function(attrs, isChecked) {\r\n            if (isChecked) {\r\n                attrs.checked = true;\r\n            }\r\n            return attrs;\r\n        },\r\n\r\n        /**\r\n         * Build list of options nodes.\r\n         * @param {Object[]} arr - Array of objects to build options for.\r\n         * @param {*} selectedValue - Value of the selected option. Can be a string, number, or array of either.\r\n         * @param {string} valueKey - Object key that stores the value of the option.\r\n         * @param {string} textKey - Object key that stores the text for the option.\r\n         * @returns {Object[]} Array of mithril option nodes.\r\n         */\r\n        withOptions: function(arr, selectedValue, valueKey, textKey) {\r\n            if (!$.isArray(arr)) {\r\n                return null;\r\n            }\r\n            return arr.map(function(x) {\r\n                var attr = { value: x[valueKey] === 0 ? '' : x[valueKey] };\r\n                if (x[valueKey] === 0) {\r\n                    attr.disabled = true;\r\n                }\r\n                if (x[valueKey] === selectedValue || ($.isArray(selectedValue) && selectedValue.indexOf(x[valueKey]) > -1)) {\r\n                    attr.selected = true;\r\n                }\r\n                return m('option', attr, x[textKey]);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Create the mithril node for the record buttons (move up/move down/delete).\r\n         * @param {number} index - Index of the record to create buttons for.\r\n         * @param {bool} includeMove - Optionally include the move up/down buttons.\r\n         * @returns {Object} Mithril node with buttons.\r\n         */\r\n        buttonView: function(index, includeMove) {\r\n            var btns = [];\r\n            if ($.coalesce(includeMove, false)) {\r\n                btns.push(m('button.btn.btn-sm.btn-secondary', {\r\n                    type: 'button', role: 'button', disabled: index < 1,\r\n                    onclick: this.moveUp.bind(this, index), title: this.opts.resx.moveUp\r\n                }, m('i.dash.dash-up-big.dash-lg.dash-fw'))\r\n                );\r\n                btns.push(m('button.btn.btn-sm.btn-secondary', {\r\n                    type: 'button', role: 'button', disabled: index === this.records.length - 1,\r\n                    onclick: this.moveDown.bind(this, index), title: this.opts.resx.moveDown\r\n                }, m('i.dash.dash-down-big.dash-lg.dash-fw'))\r\n                );\r\n            }\r\n            btns.push(m('button.btn.btn-sm.btn-secondary.confirm-delete-row-button', {\r\n                type: 'button', role: 'button', onclick: this.deleteRecord.bind(this, index), title: this.opts.resx.deleteRecord\r\n            }, m('i.dash.dash-trash.dash-lg.text-error')));\r\n            return m('.btn-toolbar.float-right', btns);\r\n        },\r\n\r\n        /**\r\n         * Clean up our mess.\r\n         */\r\n        destroy: function() {\r\n            m.mount(this.container, null);\r\n        },\r\n\r\n        /**\r\n         * Build the view that actually shows the form. This is meant to be overridden.\r\n         * @returns {Object}  Mithril DIV node.\r\n         */\r\n        view: function() {\r\n            return m('div');\r\n        },\r\n\r\n        /**\r\n         * Render the view.\r\n         */\r\n        run: function() {\r\n            var self = this;\r\n            m.mount(self.container, {\r\n                view: self.view.bind(self)\r\n            });\r\n        }\r\n    };\r\n\r\n    return Form;\r\n});\r\n","/*!\r\n * Wraps dataset join form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.JoinForm = factory(root.m, root.$, root.Form, root.Autocomplete, root.Help);\r\n})(this, function(m, $, Form, Autocomplete, Help) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the join form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function JoinForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.join-table-wrapper', opts.content),\r\n            columns: {\r\n                joinTypeId: { type: 'int' },\r\n                tableName: { type: 'str' },\r\n                keys: { type: 'str' }\r\n            },\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, tableName: '', joinTypeId: 1, keys: null },\r\n            afterDeleteFn: opts.columnUpdateFn\r\n        }, opts.joins || []);\r\n\r\n        this.joinTypes = opts.joinTypes;\r\n        this.sourceFn = opts.sourceFn;\r\n        this.columnUpdateFn = opts.columnUpdateFn;\r\n    }\r\n\r\n    JoinForm.prototype = Object.create(Form.prototype);\r\n    JoinForm.prototype.constructor = JoinForm;\r\n\r\n    /**\r\n     * Set the table name for the join record, and update the column list.\r\n     * @param {number} index - Index of the record to update.\r\n     * @param {string} value - New table name value\r\n     */\r\n    JoinForm.prototype.setJoinTable = function(index, value) {\r\n        this.set(index, 'tableName', value);\r\n        this.columnUpdateFn();\r\n    };\r\n\r\n    /**\r\n     * Create the view for the joins tab.\r\n     * @returns {Object} Mithril node containing the join form.\r\n     */\r\n    JoinForm.prototype.view = function() {\r\n        var self = this;\r\n\r\n        if (self.isProc) {\r\n            return m('.table-wrapper.p-t-1.col-12', m('.card.bg-info.text-white', m('.card-body', $.resx('dataset.errorProcNoJoins'))));\r\n        }\r\n\r\n        return m('.table-wrapper', [\r\n            m('.columns.wrapper-row.pb-1',\r\n                m('.col-12', m('.text-right', [\r\n                    m('button.btn.btn-info.mr-2', { type: 'button', role: 'button', onclick: self.addRecord.bind(self) }, $.resx('add')),\r\n                    m(Help, { enabled: this.opts.wantsHelp, message: $.resx('dataset.joinsText') })\r\n                ]))\r\n            ),\r\n            self.records.map(function(record, index) {\r\n                return m('.columns.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: record._index }, [\r\n                    m('input', { type: 'hidden', name: 'DatasetJoin[' + index + '].Id', value: record.id }),\r\n                    m('input', { type: 'hidden', name: 'DatasetJoin[' + index + '].JoinOrder', value: index }),\r\n                    m('.col-3', self.withHelp($.resx('dataset.joinTableText'), m(Autocomplete, {\r\n                        name: 'DatasetJoin[' + index + '].TableName',\r\n                        required: true,\r\n                        placeholder: $.resx('dataset.joinTableName'),\r\n                        value: record.tableName,\r\n                        list: self.sourceFn,\r\n                        onSelect: self.setJoinTable.bind(self, index),\r\n                        onCancel: self.setJoinTable.bind(self, index),\r\n                    }))),\r\n                    m('.col-2', self.withHelp($.resx('dataset.joinTypeText'),\r\n                        m('select.form-select.required', {\r\n                            name: 'DatasetJoin[' + index + '].JoinTypeId', class: self.withError(record.joinTypeId),\r\n                            placeholder: $.resx('dataset.joinType'), oninput: self.set.bind(self, index, 'joinTypeId'), value: record.joinTypeId\r\n                        }, self.withOptions(self.joinTypes, record.joinTypeId, 'id', 'name'))\r\n                    )),\r\n                    m('.col-5', self.withHelp($.resx('dataset.joinKeysText'),\r\n                        m('input.form-input.required', {\r\n                            type: 'text', name: 'DatasetJoin[' + index + '].Keys', class: self.withError(record.keys),\r\n                            placeholder: $.resx('dataset.joinKeys'), oninput: self.set.bind(self, index, 'keys'), value: record.keys\r\n                        }))\r\n                    ),\r\n                    m('.col-2', self.buttonView.call(self, index, true))\r\n                ]);\r\n            })\r\n        ]);\r\n    };\r\n\r\n    return JoinForm;\r\n});\r\n","/*!\r\n * Wraps dataset column form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.ColumnForm = factory(root.m, root.$, root.Alertify, root.Form, root.Autocomplete, root.Help);\r\n})(this, function(m, $, Alertify, Form, Autocomplete, Help) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Sort columns by title.\r\n     * @param {Object} a - First column to compare.\r\n     * @param {Object} b - Second column to compare.\r\n     * @returns {bool} True if column a should be before column b.\r\n     */\r\n    var columnTitleSort = function(a, b) {\r\n        var aTitle = a.title.toLowerCase(), bTitle = b.title.toLowerCase();\r\n        return aTitle > bTitle ? 1 : (bTitle > aTitle ? -1 : 0);\r\n    };\r\n\r\n    /**\r\n     * Build the column form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function ColumnForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.column-table-wrapper', opts.content),\r\n            columns: {\r\n                title: { type: 'str' },\r\n                columnName: { type: 'str' },\r\n                dataTypeId: { type: 'int' },\r\n                derived: { type: 'str' },\r\n                filterTypeId: { type: 'int' },\r\n                filterQuery: { type: 'str' },\r\n                link: { type: 'str' },\r\n                isParam: { type: 'int' }\r\n            },\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, title: null, columnName: '', dataTypeId: '', derived: null, filterTypeId: '', filterQuery: null, link: null, isParam: 0, isExpanded: true }\r\n        }, opts.columns || []);\r\n\r\n        this.content = opts.content;\r\n        this.dataTypes = opts.dataTypes;\r\n        this.filterTypes = opts.filterTypes;\r\n        this.sourceFn = opts.sourceFn;\r\n        this.columnFn = opts.columnFn;\r\n        this.selectedSourceFn = opts.selectedSourceFn;\r\n    }\r\n\r\n    ColumnForm.prototype = Object.create(Form.prototype);\r\n    ColumnForm.prototype.constructor = ColumnForm;\r\n\r\n    /**\r\n     * Expand/collapse the fields for a column.\r\n     * @param {Object} column - The column record to expand/collapse.\r\n     */\r\n    ColumnForm.prototype.toggleExpanded = function(column) {\r\n        column.isExpanded = !column.isExpanded;\r\n    };\r\n\r\n    /**\r\n     * Check if the database and primary source are set.\r\n     * @returns {bool} True if a database and a primary source are provided, else false.\r\n     */\r\n    ColumnForm.prototype.checkStatus = function() {\r\n        var database = $.get('.dataset-database', this.content);\r\n        if (!(database && $.hasPositiveValue(database.value))) {\r\n            Alertify.error($.resx('dataset.importErrorDatabaseRequired'));\r\n            return false;\r\n        }\r\n        var primarySource = $.get('.primary-source-autocomplete', this.content);\r\n        if (!(primarySource && primarySource.value)) {\r\n            Alertify.error($.resx('dataset.importErrorPrimarySourceRequired'));\r\n            return false;\r\n        }\r\n        var type = $.get('.dataset-type', this.content);\r\n        if (type && type.value * 1 === 2) {\r\n            Alertify.error($.resx('dataset.importErrorNoProcs'));\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Import columns for the selected tables into the dataset.\r\n     * @param {Event} e - Event that triggered this.\r\n     */\r\n    ColumnForm.prototype.importColumns = function(e) {\r\n        var form = this.content;\r\n        if (!($.hasClass(form, 'dataset-form') && this.checkStatus())) {\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        var database = $.get('.dataset-database');\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-import-url'),\r\n            data: { databaseId: database.value, sources: self.selectedSourceFn() }\r\n        }, function(data) {\r\n            if (!data.columns || data.columns.length === 0) {\r\n                Alertify.error($.resx('dataset.importErrorNoColumns'));\r\n                return;\r\n            }\r\n\r\n            var newColumns = {};\r\n            data.columns.forEach(function(x) {\r\n                newColumns[x.columnName.toLowerCase()] = x;\r\n            });\r\n\r\n            var newRecords = [];\r\n            var existingColumns = [];\r\n            self.records.forEach(function(x) {\r\n                var colName = x.columnName.toLowerCase();\r\n                if (newColumns[colName]) {\r\n                    // record matches - update datatype and add to new list\r\n                    x.dataTypeId = newColumns[colName].dataTypeId;\r\n                    newRecords.push(x);\r\n                    existingColumns.push(colName);\r\n                }\r\n            });\r\n\r\n            data.columns.forEach(function(x) {\r\n                // now add any new columns from server\r\n                if (existingColumns.indexOf(x.columnName.toLowerCase()) === -1) {\r\n                    newRecords.push(x);\r\n                }\r\n            });\r\n\r\n            newRecords.sort(columnTitleSort);\r\n            self.records = newRecords;\r\n\r\n            Alertify.success($.resx('dataset.importSuccess'));\r\n            $.dialogs.focusOnClose.call(e);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Open the confirmation before importing columns.\r\n     * @param {Event} e - Event that triggered this.\r\n     */\r\n    ColumnForm.prototype.import = function(e) {\r\n        if (this.checkStatus()) {\r\n            Alertify.confirm($.resx('dataset.confirmImport'), this.importColumns.bind(this, e), $.dialogs.focusOnClose.bind(e));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Create the node for the column form.\r\n     * @returns {Object} Mithril node containing the form.\r\n     */\r\n    ColumnForm.prototype.view = function() {\r\n        var self = this;\r\n        return m('.table-wrapper', [\r\n            m('.columns.wrapper-row.pb-1',\r\n                m('.col-12',\r\n                    m('.text-right', [\r\n                        m('button.btn.btn-info.mr-2', {\r\n                            type: 'button', role: 'button', onclick: self.addRecord.bind(self)\r\n                        }, $.resx('add')),\r\n                        m('button.btn.btn-error.mr-2', {\r\n                            type: 'button', role: 'button', onclick: self.import.bind(self)\r\n                        }, $.resx('dataset.import')),\r\n                        m(Help, { enabled: this.opts.wantsHelp, message: $.resx('dataset.columnsText') })\r\n                    ])\r\n                )\r\n            ),\r\n            self.records.map(function(record, index) {\r\n                return m('.col-12.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: record._index }, [\r\n                    m('.columns', [\r\n                        m('input', { type: 'hidden', name: 'DatasetColumn[' + index + '].Id', value: record.id }),\r\n                        m('.col-4', self.withHelp($.resx('dataset.columnTitleText'), [\r\n                            m('span.input-group-addon.input-group-custom', m('button.btn.btn-secondary', {\r\n                                type: 'button', role: 'button',\r\n                                onclick: self.toggleExpanded.bind(self, record)\r\n                            }, m('i.dash.text-primary', { class: record.isExpanded ? 'dash-minus' : 'dash-plus' }))),\r\n                            m('input.form-input.required', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].Title', class: self.withError(record.title),\r\n                                placeholder: $.resx('dataset.columnTitle'), oninput: self.set.bind(self, index, 'title'), value: record.title\r\n                            }),\r\n                        ])),\r\n                        m('.col-4', self.withHelp($.resx('dataset.columnNameText'), m(Autocomplete, {\r\n                            name: 'DatasetColumn[' + index + '].ColumnName',\r\n                            required: true,\r\n                            placeholder: $.resx('dataset.columnName'),\r\n                            value: record.columnName,\r\n                            list: self.columnFn,\r\n                            onSelect: self.set.bind(self, index, 'columnName')\r\n                        }))),\r\n                        m('.col-3', self.withHelp($.resx('dataset.dataTypeText'),\r\n                            m('select.form-select.required', {\r\n                                name: 'DatasetColumn[' + index + '].DataTypeId', class: self.withError(record.dataTypeId),\r\n                                placeholder: $.resx('dataset.dataType'), oninput: self.set.bind(self, index, 'dataTypeId'), value: record.dataTypeId\r\n                            }, self.withOptions(self.dataTypes, record.dataTypeId, 'id', 'name'))\r\n                        )),\r\n                        m('.col-1', self.buttonView(index, false))\r\n                    ]),\r\n                    m('.columns', { class: record.isExpanded ? '' : ' d-none' },\r\n                        m('.col-10.col-mx-auto', self.withHelp($.resx('dataset.derivedText'),\r\n                            m('input.form-input', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].Derived', placeholder: $.resx('dataset.derived'),\r\n                                oninput: self.set.bind(self, index, 'derived'), value: record.derived\r\n                            })\r\n                        ))\r\n                    ),\r\n                    m('.columns', { class: record.isExpanded ? '' : ' d-none' }, [\r\n                        m('.col-3.col-mx-auto', self.withHelp($.resx('dataset.filterTypeText'),\r\n                            m('select.form-select', {\r\n                                name: 'DatasetColumn[' + index + '].FilterTypeId', class: self.withError(record.filterTypeId),\r\n                                placeholder: $.resx('dataset.filterType'), oninput: self.set.bind(self, index, 'filterTypeId'), value: record.filterTypeId\r\n                            }, self.withOptions(self.filterTypes, record.filterTypeId, 'id', 'name'))\r\n                        )),\r\n                        m('.col-7', self.withHelp($.resx('dataset.queryText'),\r\n                            m('input.form-input', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].FilterQuery', placeholder: $.resx('dataset.query'),\r\n                                oninput: self.set.bind(self, index, 'filterQuery'), value: record.filterQuery, readOnly: record.filterTypeId !== 3\r\n                            }))\r\n                        )\r\n                    ]),\r\n                    m('.columns', { class: record.isExpanded ? '' : ' d-none' }, [\r\n                        m('.col-8.col-mx-auto', self.withHelp($.resx('dataset.linkText'),\r\n                            m('input.form-input', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].Link', placeholder: $.resx('dataset.link'),\r\n                                oninput: self.set.bind(self, index, 'link'), value: record.link\r\n                            })\r\n                        )),\r\n                        m('.col-1', [\r\n                            m('label.form-checkbox', { for: 'DatasetColumn_' + index + '_.IsParam' }, [\r\n                                m('input.custom-control-input', self.withChecked({\r\n                                    type: 'checkbox', name: 'DatasetColumn[' + index + '].IsParam', id: 'DatasetColumn_' + index + '_.IsParam',\r\n                                    oninput: self.set.bind(self, index, 'isParam'), value: 'true'\r\n                                }, record.isParam)),\r\n                                m('i.form-icon'),\r\n                                $.resx('dataset.isParam')\r\n                            ])\r\n                        ]),\r\n                        m('.col-1', m(Help, { enabled: self.opts.wantsHelp, message: $.resx('dataset.isParamText') }))\r\n                    ])\r\n                ]);\r\n            })\r\n        ]);\r\n    };\r\n\r\n    return ColumnForm;\r\n});\r\n","/*!\r\n * Wraps share form functionality. Used for report and chart.\r\n */\r\n(function(root, factory) {\r\n    root.ShareForm = factory(root.m, root.$, root.Form);\r\n})(this, function(m, $, Form) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the share form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function ShareForm(opts) {\r\n        var container = $.get('.share-table-wrapper', opts.content);\r\n        var formOpts = JSON.parse(container.getAttribute('data-json'));\r\n        container.removeAttribute('data-json');\r\n\r\n        Form.call(this, {\r\n            container: container,\r\n            columns: {\r\n                id: { type: 'int' },\r\n                userId: { type: 'int' },\r\n                roleId: { type: 'int' }\r\n            },\r\n            appendRecord: true,\r\n            wantsHelp: formOpts.wantsHelp,\r\n            newRecord: { id: 0, userId: 0, roleId: 0 }\r\n        }, formOpts.shares || []);\r\n\r\n        this.users = formOpts.userList || [];\r\n        this.roles = formOpts.roleList || [];\r\n        this.formName = opts.formName;\r\n    }\r\n\r\n    ShareForm.prototype = Object.create(Form.prototype);\r\n    ShareForm.prototype.constructor = ShareForm;\r\n\r\n    /**\r\n     * Build the user dropdown attributes.\r\n     * @param {Object} share - Share to build the dropdown for.\r\n     * @param {number} index - Index of the share record.\r\n     * @returns {Object} Dropdown attribute object.\r\n     */\r\n    ShareForm.prototype.userSelectAttr = function(share, index) {\r\n        var res = {\r\n            name: this.formName + '[' + index + '].UserId', class: 'form-select' + ($.hasPositiveValue(share.userId) || $.hasPositiveValue(share.roleId) ? '' : ' mform-control-error'),\r\n            placeholder: $.resx('selectUser'), onchange: this.set.bind(this, index, 'userId'), value: share.userId\r\n        };\r\n        if ($.hasPositiveValue(share.roleId)) {\r\n            res['disabled'] = true;\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Build the role dropdown attributes.\r\n     * @param {Object} share - Share to build the dropdown for.\r\n     * @param {number} index - Index of the share record.\r\n     * @returns {Object} Dropdown attribute object.\r\n     */\r\n    ShareForm.prototype.roleSelectAttr = function(share, index) {\r\n        var res = {\r\n            name: this.formName + '[' + index + '].RoleId', class: 'form-select' + ($.hasPositiveValue(share.userId) || $.hasPositiveValue(share.roleId) ? '' : ' mform-control-error'),\r\n            placeholder: $.resx('selectRole'), onchange: this.set.bind(this, index, 'roleId'), value: share.roleId\r\n        };\r\n        if ($.hasPositiveValue(share.userId)) {\r\n            res['disabled'] = true;\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Create the view for the share form.\r\n     * @returns {Object} Mithril node containing the share form.\r\n     */\r\n    ShareForm.prototype.view = function() {\r\n        var self = this;\r\n        return m('.table-wrapper', [\r\n            m('.columns', [\r\n                m('.col-5', m('h5', $.resx('user'))),\r\n                m('.col-5', m('h5', $.resx('role'))),\r\n                m('.col-2')\r\n            ]),\r\n            self.records.map(function(share, index) {\r\n                return m('.columns.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: share._index }, [\r\n                    m('input', { type: 'hidden', name: self.formName + '[' + index + '].Id', value: share.id }),\r\n                    m('.col-5.pr-2',\r\n                        m('select', self.userSelectAttr(share, index), self.withOptions(self.users, share.userId, 'id', 'fullName'))\r\n                    ),\r\n                    m('.col-5',\r\n                        m('select', self.roleSelectAttr(share, index), self.withOptions(self.roles, share.roleId, 'id', 'name'))\r\n                    ),\r\n                    m('.col-2', self.buttonView(index, false))\r\n                ]);\r\n            }),\r\n            m('.columns.pt-1', [\r\n                m('.col-12', [\r\n                    m('.text-right', [\r\n                        m('button.btn.btn-info.mr-2', { type: 'button', role: 'button', onclick: self.addRecord.bind(self) }, $.resx('add')),\r\n                        m('button.btn.btn-warning', {\r\n                            type: 'button', role: 'button', disabled: !self.hasRecords(),\r\n                            onclick: self.hasRecords() ? self.deleteAllRecords.bind(self) : $.noop\r\n                        }, $.resx('deleteAll'))\r\n                    ])\r\n                ])\r\n            ])\r\n        ]);\r\n    };\r\n\r\n    return ShareForm;\r\n});\r\n","/*!\r\n * Wraps report filter form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.FilterForm = factory(root.m, root.$, root.Form, root.Help, root.Alertify, root.DatePicker);\r\n})(this, function(m, $, Form, Help, Alertify, DatePicker) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the filter form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function FilterForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.filter-table-wrapper', opts.content),\r\n            columns: {\r\n                id: { type: 'int' },\r\n                columnId: { type: 'int' },\r\n                operatorId: { type: 'int' },\r\n                criteria: { type: 'str' },\r\n                criteria2: { type: 'str' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, columnId: 0, operatorId: 0, criteria: null, criteria2: null },\r\n            dateFormat: opts.dateFormat\r\n        }, opts.filters || []);\r\n\r\n        this.reportId = opts.reportId;\r\n        this.isProc = opts.isProc;\r\n        this.saveFiltersUrl = opts.saveFiltersUrl;\r\n        this.filterOperators = opts.filterOperators || [];\r\n        this.filterOperatorIds = opts.filterOperatorIds || {};\r\n        this.filterTypes = opts.filterTypes || {};\r\n        this.dateOperators = opts.dateOperators || [];\r\n        this.lookups = opts.lookups || [];\r\n        this.dataTable = opts.dataTable;\r\n        this.columnFn = opts.columnFn;\r\n    }\r\n\r\n    FilterForm.prototype = Object.create(Form.prototype);\r\n    FilterForm.prototype.constructor = FilterForm;\r\n\r\n    /**\r\n     * Build the options select list for the boolean filter.\r\n     */\r\n    FilterForm.prototype.boolOptions = [\r\n        m('option', { value: '' }, $.resx('select')),\r\n        m('option', { value: 1 }, $.resx('report.true')),\r\n        m('option', { value: 0 }, $.resx('report.false'))\r\n    ];\r\n\r\n    /**\r\n     * Set the columnId for a filter and unset the criteria.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered showing the picker.\r\n     */\r\n    FilterForm.prototype.setColumnId = function(index, e) {\r\n        var val = this.targetVal(e) * 1;\r\n        if (this.records[index].columnId !== val) {\r\n            this.records[index].columnId = val;\r\n            this.records[index].operatorId = 0;\r\n            this.records[index].criteria = null;\r\n            this.records[index].criteria2 = null;\r\n            this.run();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the operatorId for a filter and unset the criteria.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered showing the picker.\r\n     */\r\n    FilterForm.prototype.setOperator = function(index, e) {\r\n        this.set(index, 'operatorId', e);\r\n    };\r\n\r\n    /**\r\n     * Set the criteria for a filter.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered the update.\r\n     */\r\n    FilterForm.prototype.setCriteria = function(index, e) {\r\n        var node = e.target;\r\n        if (node && node.nodeName === 'SELECT' && node.hasAttribute('multiple') && node.options) {\r\n            this.records[index].criteriaJson = Array.apply(null, node.options).filter(function(x) { return x.selected; }).map(function(x) { return x.value || x.text; });\r\n        }\r\n        this.set(index, 'criteria', e);\r\n    };\r\n\r\n    /**\r\n     * Set the criteria for a date filter.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {string} field - Name of field to set.\r\n     * @param {Date} val - Date value to save.\r\n     */\r\n    FilterForm.prototype.setDate = function(index, field, val) {\r\n        this.set(index, field, $.fecha.format(val, 'YYYY-MM-DD HH:mm'));\r\n    };\r\n\r\n    /**\r\n     * Save filters to the server then reload the table data.\r\n     */\r\n    FilterForm.prototype.saveFilters = function() {\r\n        if ($.getAll('.mform-control-error', this.container).length > 0) {\r\n            Alertify.error($.resx('fixIt'));\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: 'PUT',\r\n            url: self.saveFiltersUrl,\r\n            data: {\r\n                Id: self.reportId,\r\n                Filters: $.toPascalKeys(self.records)\r\n            }\r\n        }, function(data) {\r\n            if (data) {\r\n                self.changed = false;\r\n                if ($.isArray(data.filters)) {\r\n                    data.filters.forEach(function(x, i) { self.records[i].id = x.id; });\r\n                }\r\n            }\r\n            if (self.dataTable) {\r\n                self.dataTable.loadData();\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Build the criteria input(s) for a filter.\r\n     * @param {number} index - Index of the filter to build.\r\n     * @returns {Object} Mithril node containing the criteria input(s).\r\n     */\r\n    FilterForm.prototype.criteriaView = function(index) {\r\n        var filter = this.records[index];\r\n        var column = $.hasPositiveValue(filter.columnId) ? $.findByKey(this.columnFn(), 'id', filter.columnId) : null;\r\n        if (column === null || !$.hasPositiveValue(filter.operatorId)) {\r\n            return m('input.form-input', { disabled: true, placeholder: $.resx('report.filterCriteria') });\r\n        }\r\n\r\n        var criteria = null;\r\n        var attrs = {\r\n            name: 'ReportFilter[' + index + '].Criteria',\r\n            id: 'ReportFilter_' + index + '_Criteria',\r\n            class: 'form-input required' + this.withError(filter.criteria),\r\n            placeholder: $.resx('report.filterCriteria'),\r\n            oninput: this.setCriteria.bind(this, index)\r\n        };\r\n        if (!this.opts.allowEdit) {\r\n            attrs.disabled = true;\r\n        }\r\n\r\n        if (column.filterTypeId !== this.filterTypes.select) {\r\n            attrs.value = filter.criteria;\r\n        }\r\n        var isRange = filter.operatorId === this.filterOperatorIds.range;\r\n\r\n        switch (column.filterTypeId) {\r\n            case this.filterTypes.boolean:\r\n                attrs.class = 'form-select required' + this.withError(filter.criteria);\r\n                criteria = m('select', attrs, this.boolOptions);\r\n                break;\r\n            case this.filterTypes.date:\r\n                if (filter.operatorId === this.filterOperatorIds.dateInterval) {\r\n                    attrs.class = 'form-select required' + this.withError(filter.criteria);\r\n                    criteria = m('select', attrs, this.withOptions(this.dateOperators, filter.criteria * 1, 'id', 'name'));\r\n                } else {\r\n                    criteria = m(DatePicker, {\r\n                        name: attrs.name, required: true, date: filter.criteria, disabled: !this.opts.allowEdit,\r\n                        onchange: this.setDate.bind(this, index, 'criteria'), format: this.dateFormat,\r\n                        class: isRange ? 'col' : null\r\n                    });\r\n                }\r\n                break;\r\n            case this.filterTypes.select:\r\n                if (filter.operatorId !== this.filterOperatorIds.equal) {\r\n                    attrs.multiple = true;\r\n                } else {\r\n                    attrs.class = 'form-select required' + this.withError(filter.criteria);\r\n                }\r\n\r\n                try {\r\n                    if (filter.criteria.substring(0, 1) === '[') {\r\n                        filter.criteriaJson = JSON.parse(filter.criteria);\r\n                    }\r\n                } catch (e) {\r\n                    // do nothing\r\n                }\r\n\r\n                if (!filter.criteriaJson) {\r\n                    attrs.value = filter.criteria;\r\n                }\r\n\r\n                var lookup = $.isArray(this.lookups[filter.columnId]) ? this.lookups[filter.columnId] : [];\r\n                criteria = m('select', attrs, this.withOptions(lookup, filter.criteriaJson, 'value', 'text'));\r\n                break;\r\n            default:\r\n                attrs.type = column.filterTypeId === this.filterTypes.numeric ? 'number' : 'text';\r\n                criteria = m('input', attrs);\r\n        }\r\n\r\n        if (!isRange) {\r\n            return criteria;\r\n        }\r\n\r\n        var isDatePicker = column.filterTypeId === this.filterTypes.date && filter.operatorId !== this.filterOperatorIds.dateInterval;\r\n        var attrs2 = {\r\n            name: 'ReportFilter[' + index + '].Criteria2',\r\n            id: 'ReportFilter_' + index + '_Criteria2',\r\n            class: 'form-input required' + this.withError(filter.criteria2, null, column.filterTypeId === this.filterTypes.date),\r\n            placeholder: $.resx('report.filterCriteria2'),\r\n            onchange: isDatePicker ? this.setDate.bind(this, index, 'criteria2') : this.set.bind(this, index, 'criteria2'),\r\n            value: filter.criteria2,\r\n            type: column.filterTypeId === this.filterTypes.numeric ? 'number' : 'text'\r\n        };\r\n        if (!this.opts.allowEdit) {\r\n            attrs2.disabled = true;\r\n        }\r\n        var criteriaArr = [criteria];\r\n        if (isDatePicker) {\r\n            criteriaArr.push(m(DatePicker, {\r\n                name: attrs2.name, required: true, date: filter.criteria2, disabled: !this.opts.allowEdit,\r\n                onchange: this.setDate.bind(this, index, 'criteria2'), format: this.dateFormat, class: 'col'\r\n            }));\r\n        } else {\r\n            criteriaArr.push(m('input', attrs2));\r\n        }\r\n        return criteriaArr;\r\n    };\r\n\r\n    /**\r\n     * Build the operator dropdown for a filter.\r\n     * @param {number} index - Index of the filter to build.\r\n     * @param {Object} column - Column that the filter is for.\r\n     * @returns {Object} Mithril node containing the operator select.\r\n     */\r\n    FilterForm.prototype.operatorView = function(index, column) {\r\n        return m('select.form-select.required', {\r\n            name: 'ReportFilter[' + index + '].OperatorId', id: 'ReportFilter_' + index + '_OperatorId',\r\n            disabled: !column || !this.opts.allowEdit,\r\n            class: column ? this.withError(this.records[index].operatorId, true) : null,\r\n            placeholder: $.resx('report.filterOperator'), onchange: this.setOperator.bind(this, index), value: this.records[index].operatorId\r\n        }, this.withOptions(column && $.hasPositiveValue(column.filterTypeId) ?\r\n            this.filterOperators[column.filterTypeId] : [{ id: 0, name: $.resx('report.filterOperator') }], this.records[index].operatorId, 'id', 'name')\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Build the filters.\r\n     * @returns {Object[]} Array of Mithril nodes containing the filters.\r\n     */\r\n    FilterForm.prototype.filterView = function() {\r\n        if (!this.columnFn()) {\r\n            return null;\r\n        }\r\n\r\n        var self = this;\r\n        return this.records.map(function(x, index) {\r\n            var column = $.hasPositiveValue(x.columnId) ? $.findByKey(self.columnFn(), 'id', x.columnId) : null;\r\n\r\n            // @todo this isn't setting the `placeholder` default value correctly anymore it seems\r\n            var attrs = {\r\n                name: 'ReportFilter[' + index + '].ColumnId', class: 'form-select required' + self.withError(x.columnId, true),\r\n                placeholder: $.resx('report.filterColumn'), onchange: self.setColumnId.bind(self, index), value: x.columnId\r\n            };\r\n            if (!self.opts.allowEdit) {\r\n                attrs.disabled = true;\r\n            }\r\n\r\n            var filterColumns = self.isProc ? self.columnFn().filter(function(x) { return x.isParam; }) : self.columnFn();\r\n\r\n            return m('.columns.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even' }, [\r\n                m('input', { type: 'hidden', name: 'ReportFilter[' + index + '].Id', value: x.id }),\r\n                m('input', { type: 'hidden', name: 'ReportFilter[' + index + '].DisplayOrder', value: index }),\r\n                m('.col-4',\r\n                    self.withHelp($.resx('report.filterColumnText'), m('select', attrs, self.withOptions(filterColumns, x.columnId, 'id', 'title')))\r\n                ),\r\n                m('.col-2',\r\n                    self.withHelp($.resx('report.filterOperatorText'), self.operatorView.call(self, index, column))\r\n                ),\r\n                m('.col-5',\r\n                    self.withHelp($.resx('report.filterCriteriaText'), self.criteriaView.call(self, index))\r\n                ),\r\n                m('.col-1', self.opts.allowEdit ? self.buttonView.call(self, index, false) : null)\r\n            ]);\r\n        });\r\n    };\r\n\r\n    /**\r\n    * Create the view for the share form.\r\n    * @returns {Object} Mithril node containing the share form.\r\n    */\r\n    FilterForm.prototype.view = function() {\r\n        return [\r\n            this.filterView(),\r\n            this.opts.allowEdit ? m('.columns.pt-1', [\r\n                m('.col-6', m('button.btn.btn-primary', {\r\n                    type: 'button', role: 'button', onclick: this.saveFilters.bind(this)\r\n                }, $.resx('save'))),\r\n                m('.col-6', [\r\n                    m('.text-right', [\r\n                        m('button.btn.btn-info.mr-2', {\r\n                            type: 'button', role: 'button', onclick: this.addRecord.bind(this),\r\n                        }, $.resx('add')),\r\n                        m('button.btn.btn-warning.mr-2', {\r\n                            type: 'button', role: 'button', disabled: !this.hasRecords(),\r\n                            onclick: this.hasRecords() ? this.deleteAllRecords.bind(this) : $.noop\r\n                        }, $.resx('deleteAll')),\r\n                        m(Help, { enabled: this.opts.wantsHelp, message: $.resx('report.filterText') })\r\n                    ])\r\n                ])\r\n            ]) : null\r\n        ];\r\n    };\r\n\r\n    return FilterForm;\r\n});\r\n","/*!\r\n * Wraps report group form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.GroupForm = factory(root.m, root.$, root.Form, root.Help, root.Alertify);\r\n})(this, function(m, $, Form, Help, Alertify) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the group form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function GroupForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.group-table-wrapper', opts.content),\r\n            columns: {\r\n                id: { type: 'int' },\r\n                columnId: { type: 'int' },\r\n                operatorId: { type: 'int' },\r\n                criteria: { type: 'str' },\r\n                criteria2: { type: 'str' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, columnId: 0, displayOrder: 0 }\r\n        }, opts.groups || []);\r\n\r\n        this.reportId = opts.reportId;\r\n        this.isProc = opts.isProc;\r\n        this.saveGroupsUrl = opts.saveGroupsUrl;\r\n        this.aggregator = opts.aggregatorId === 0 ? '' : opts.aggregatorId;\r\n        this.aggregators = opts.aggregators || [];\r\n        this.dataTable = opts.dataTable;\r\n        this.columnFn = opts.columnFn;\r\n    }\r\n\r\n    GroupForm.prototype = Object.create(Form.prototype);\r\n    GroupForm.prototype.constructor = GroupForm;\r\n\r\n    /**\r\n     * Save groups to the server then reload the table data.\r\n     */\r\n    GroupForm.prototype.saveGroups = function() {\r\n        if ($.getAll('.mform-control-error', this.container).length > 0) {\r\n            Alertify.error($.resx('fixIt'));\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: 'PUT',\r\n            url: self.saveGroupsUrl,\r\n            data: {\r\n                Id: self.reportId,\r\n                GroupAggregator: self.aggregator === '' ? 0 : self.aggregator * 1,\r\n                Groups: $.toPascalKeys(self.records)\r\n            }\r\n        }, function(data) {\r\n            if (data) {\r\n                if ($.isArray(data.groups)) {\r\n                    data.groups.forEach(function(x, i) { self.records[i].id = x.id; });\r\n                }\r\n            }\r\n            if (self.dataTable) {\r\n                self.dataTable.loadData();\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Set the aggregator property.\r\n     * @param {Event} e - Event that triggered the function.\r\n     */\r\n    GroupForm.prototype.setAggregator = function(e) {\r\n        this.aggregator = this.targetVal(e);\r\n    };\r\n\r\n    /**\r\n     * Build the groups.\r\n     * @returns {Object[]} Array of Mithril nodes containing the groups.\r\n     */\r\n    GroupForm.prototype.groupView = function() {\r\n        if (!this.columnFn()) {\r\n            return null;\r\n        }\r\n\r\n        var self = this;\r\n        return this.records.map(function(x, index) {\r\n            x.displayOrder = index;\r\n            var attrs = {\r\n                name: 'ReportGroup[' + index + '].ColumnId', class: 'form-select required' + self.withError(x.columnId, true),\r\n                placeholder: $.resx('report.groupColumn'), onchange: self.set.bind(self, index, 'columnId'), value: x.columnId\r\n            };\r\n            if (!self.opts.allowEdit) {\r\n                attrs.disabled = true;\r\n            }\r\n            return m('.columns.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even' }, [\r\n                m('input', { type: 'hidden', name: 'ReportGroup[' + index + '].Id', value: x.id }),\r\n                m('input', { type: 'hidden', name: 'ReportGroup[' + index + '].DisplayOrder', value: index }),\r\n                m('.col-10', [\r\n                    m('select', attrs, self.withOptions(self.columnFn(), x.columnId, 'id', 'title'))\r\n                ]),\r\n                m('.col-2', self.opts.allowEdit ? self.buttonView.call(self, index, true) : null)\r\n            ]);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Build the group form.\r\n     * @returns {Object} Mithril node containing the form.\r\n     */\r\n    GroupForm.prototype.view = function() {\r\n        if (this.isProc) {\r\n            return m('.table-wrapper.p-t-1.col-12', m('.card.card-info', m('.card-body', $.resx('report.errorProcNoGroups'))));\r\n        }\r\n\r\n        var attrs = {\r\n            name: 'Report.Aggregator', class: 'form-select', placeholder: $.resx('report.aggregator'),\r\n            onchange: this.setAggregator.bind(this), value: this.aggregator\r\n        };\r\n        if (!this.opts.allowEdit) {\r\n            attrs.disabled = true;\r\n        }\r\n        return m('.col-12.table-wrapper', m('.columns', [\r\n            m('.col-2.mt-1', [\r\n                m('.form-group', [\r\n                    m('select', attrs, this.withOptions(this.aggregators, this.aggregator, 'id', 'name'))\r\n                ]),\r\n                this.opts.allowEdit ? m('.row.mt-1', m('button.btn.btn-primary', {\r\n                    type: 'button', role: 'button', onclick: this.saveGroups.bind(this)\r\n                }, $.resx('save'))) : null\r\n            ]),\r\n            m('.col-9.col-ml-auto.mt-1', [\r\n                this.groupView(),\r\n                this.opts.allowEdit ? m('.container.pt-1', m('.columns', [\r\n                    m('.col-12', [\r\n                        m('.btn-toolbar.text-right', [\r\n                            m('button.btn.btn-info.mr-1', {\r\n                                type: 'button', role: 'button', onclick: this.addRecord.bind(this)\r\n                            }, $.resx('add')),\r\n                            m('button.btn.btn-warning', {\r\n                                type: 'button', role: 'button', disabled: !this.hasRecords(),\r\n                                onclick: this.hasRecords() ? this.deleteAllRecords.bind(this) : $.noop\r\n                            }, $.resx('deleteAll')),\r\n                            m(Help, { enabled: this.opts.wantsHelp, message: $.resx('report.groupText') })\r\n                        ])\r\n                    ])\r\n                ])) : null\r\n            ])\r\n        ]));\r\n    };\r\n\r\n    return GroupForm;\r\n});\r\n","/*!\r\n * Wraps chart range form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.RangeForm = factory(root.m, root.$, root.Form, root.Help, root.Alertify, root.DashChart, root.ColorPicker);\r\n})(this, function(m, $, Form, Help, Alertify, DashChart, ColorPicker) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the range form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function RangeForm(opts) {\r\n        var ranges = opts.ranges || [];\r\n        ranges = opts.ranges.map(function(x) { x.isExpanded = false; return x; });\r\n\r\n        Form.call(this, {\r\n            container: $.get('.range-table-wrapper', opts.content),\r\n            columns: {\r\n                id: { type: 'int' },\r\n                reportId: { type: 'int' },\r\n                xAxisColumnId: { type: 'int' },\r\n                yAxisColumnId: { type: 'int' },\r\n                aggregatorId: { type: 'int' },\r\n                dateIntervalId: { type: 'int' },\r\n                color: { type: 'string' },\r\n                displayOrder: { type: 'int' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, reportId: 0, xAxisColumnId: 0, yAxisColumnId: 0, aggregatorId: 0, dateIntervalId: 0, color: '', displayOrder: 0 }\r\n        }, ranges || []);\r\n\r\n        this.chartId = opts.chartId;\r\n        this.filterTypes = opts.filterTypes || {};\r\n        this.saveRangesUrl = opts.saveRangesUrl;\r\n        this.dateIntervals = opts.dateIntervals || [];\r\n        this.aggregators = opts.aggregators || [];\r\n        this.reports = opts.reports || [];\r\n        this.columns = opts.columns || [];\r\n        this.processJsonFn = opts.processJsonFn;\r\n        this.canExportFn = opts.canExportFn;\r\n        this.toggleExportFn = opts.toggleExportFn;\r\n    }\r\n\r\n    RangeForm.prototype = Object.create(Form.prototype);\r\n    RangeForm.prototype.constructor = RangeForm;\r\n\r\n    /**\r\n     * Save ranges to the server then rebuild the chart.\r\n     */\r\n    RangeForm.prototype.saveRanges = function() {\r\n        if ($.getAll('.mform-control-error', this.container).length > 0) {\r\n            Alertify.error($.resx('fixIt'));\r\n            return;\r\n        }\r\n\r\n        this.records.forEach(function(x, i) { x.displayOrder = i; });\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: self.saveRangesUrl,\r\n            data: {\r\n                Id: self.chartId,\r\n                Ranges: $.toPascalKeys(self.records)\r\n            }\r\n        }, function(data) {\r\n            if (data) {\r\n                self.changed = false;\r\n                if ($.isArray(data.ranges)) {\r\n                    data.ranges.forEach(function(x, i) { self.records[i].id = x.id; });\r\n                }\r\n                Alertify.success($.resx('chart.saveSuccessful'));\r\n                self.makeChart();\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Make the chart.\r\n     */\r\n    RangeForm.prototype.makeChart = function() {\r\n        var chartContent = $.get('.chart-container', this.content);\r\n        if (!(chartContent && chartContent.hasAttribute('data-url'))) {\r\n            return;\r\n        }\r\n        if (!(this.records && this.records.length > 0)) {\r\n            Alertify.error($.resx('chart.rangesRequired'));\r\n            return;\r\n        }\r\n\r\n        if (this.dashChart && this.dashChart.chart) {\r\n            this.dashChart.chart.destroy();\r\n        }\r\n\r\n        this.dashChart = new DashChart(chartContent, true, this.processJsonFn, null, this.toggleExportFn);\r\n    };\r\n\r\n    /**\r\n     * Export a chart as an image.\r\n     */\r\n    RangeForm.prototype.exportChart = function() {\r\n        if (!this.canExportFn()) {\r\n            return;\r\n        }\r\n        var chartContainer = $.get('.chart-container', this.content);\r\n        if (chartContainer) {\r\n            $.get('.export-width', this.content).value = chartContainer.offsetWidth;\r\n            $.get('.export-data', this.content).value = this.dashChart.chart.toBase64Image();\r\n            $.get('.export-form', this.content).submit();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the operatorId for a filter and unset the criteria.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered.\r\n     */\r\n    RangeForm.prototype.setReport = function(index, e) {\r\n        if (this.set(index, 'reportId', e)) {\r\n            this.records[index].xAxisColumnId = 0;\r\n            this.records[index].yAxisColumnId = 0;\r\n            this.records[index].aggregatorId = 0;\r\n            this.records[index].dateIntervalId = 0;\r\n            this.run();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Expand/collapse the inputs for a range.\r\n     * @param {Object} record - Range object.\r\n     */\r\n    RangeForm.prototype.toggleExpanded = function(record) {\r\n        record.isExpanded = !record.isExpanded;\r\n    };\r\n\r\n    /**\r\n     * Build the ranges.\r\n     * @returns {Object[]} Array of Mithril nodes containing the ranges.\r\n     */\r\n    RangeForm.prototype.rangeView = function() {\r\n        if (!this.reports) {\r\n            return null;\r\n        }\r\n\r\n        var self = this;\r\n        return this.records.map(function(record, index) {\r\n            var report = record.reportId ? $.findByKey(self.columns, 'reportId', record.reportId) : null;\r\n            if (report && !report.xColumns) {\r\n                report.xColumns = $.clone(report.columns);\r\n                report.xColumns.unshift({ columnId: 0, title: $.resx('chart.xAxisColumn') });\r\n                report.yColumns = $.clone(report.columns);\r\n                report.yColumns.unshift({ columnId: 0, title: $.resx('chart.yAxisColumn') });\r\n            }\r\n\r\n            var dateIntervalDisabled = true;\r\n            var inputsDisabled = !(self.opts.allowEdit && report);\r\n            if (!inputsDisabled && self.filterTypes) {\r\n                var col = $.findByKey(report.columns, 'columnId', record.xAxisColumnId * 1);\r\n                if (col && col.filterTypeId === self.filterTypes.date) {\r\n                    // show for date\r\n                    dateIntervalDisabled = false;\r\n                }\r\n            }\r\n\r\n            return m('.container.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: record._index }, [\r\n                m('.columns', [\r\n                    m('input', { type: 'hidden', name: 'ChartRange[' + index + '].Id', value: record.id }),\r\n                    m('.col-4',\r\n                        self.withHelp($.resx('chart.reportText'), [\r\n                            m('span.input-group-addon.input-group-custom', m('button.btn.btn-secondary', { onclick: self.toggleExpanded.bind(self, record) },\r\n                                m('i.dash.text-primary', { class: record.isExpanded ? 'dash-minus' : 'dash-plus' })\r\n                            )),\r\n                            m('select.form-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].ReportId', class: self.withError(record.reportId, true),\r\n                                placeholder: $.resx('chart.report'), onchange: self.setReport.bind(self, index), value: record.reportId\r\n                            }, !self.opts.allowEdit), self.withOptions(self.reports, record.reportId, 'id', 'name'))\r\n                        ])\r\n                    ),\r\n                    m('.col-3',\r\n                        self.withHelp($.resx('chart.xAxisColumnText'),\r\n                            m('select.form-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].XAxisColumnId', id: 'xAxisColumnId' + index, class: report ? self.withError(record.xAxisColumnId, true) : null,\r\n                                placeholder: $.resx('chart.xAxisColumn'), onchange: self.set.bind(self, index, 'xAxisColumnId'), value: record.xAxisColumnId\r\n                            }, inputsDisabled), self.withOptions(report ? report.xColumns : [{ columnId: 0, title: $.resx('chart.xAxisColumn') }], record.xAxisColumnId, 'columnId', 'title'))\r\n                        )\r\n                    ),\r\n                    m('.col-3',\r\n                        self.withHelp($.resx('chart.yAxisColumnText'),\r\n                            m('select.form-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].YAxisColumnId', id: 'yAxisColumnId' + index, class: report ? self.withError(record.yAxisColumnId, true) : null,\r\n                                placeholder: $.resx('chart.yAxisColumn'), onchange: self.set.bind(self, index, 'yAxisColumnId'), value: record.yAxisColumnId\r\n                            }, inputsDisabled), self.withOptions(report ? report.yColumns : [{ columnId: 0, title: $.resx('chart.yAxisColumn') }], record.yAxisColumnId, 'columnId', 'title'))\r\n                        )\r\n                    ),\r\n                    m('.col-2', self.opts.allowEdit ? self.buttonView.call(self, index, true) : null)\r\n                ]),\r\n                m('.columns', { class: record.isExpanded ? '' : ' d-none' }, [\r\n                    m('.col-4.col-ml-auto',\r\n                        self.withHelp($.resx('chart.aggregatorText'),\r\n                            m('select.form-select', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].AggregatorId', id: 'aggregatorId' + index,\r\n                                placeholder: $.resx('chart.aggregator'), onchange: self.set.bind(self, index, 'aggregatorId'), value: record.aggregatorId\r\n                            }, inputsDisabled), self.withOptions(self.aggregators, record.aggregatorId, 'id', 'name'))\r\n                        )\r\n                    ),\r\n                    m('.col-4',\r\n                        self.withHelp($.resx('chart.dateIntervalText'),\r\n                            m('select.form-select', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].DateIntervalId', id: 'dateIntervalId' + index,\r\n                                placeholder: $.resx('chart.dateInterval'), onchange: self.set.bind(self, index, 'dateIntervalId'), value: record.dateIntervalId\r\n                            }, dateIntervalDisabled), self.withOptions(self.dateIntervals, record.dateIntervalId, 'id', 'name'))\r\n                        )\r\n                    ),\r\n                    m('.col-2', [\r\n                        self.withHelp($.resx('chart.colorText'),\r\n                            m(ColorPicker, {\r\n                                name: 'ChartRange[' + index + '].Color', value: record.color, disabled: inputsDisabled,\r\n                                onSelect: self.set.bind(self, index, 'color')\r\n                            })\r\n                        ),\r\n                    ]),\r\n                    m('.col-1')\r\n                ])\r\n            ]);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Build the range form.\r\n     * @returns {Object} Mithril node containing the form.\r\n     */\r\n    RangeForm.prototype.view = function() {\r\n        return [\r\n            this.rangeView(),\r\n            m('.container.pt-1', m('.columns', [\r\n                m('.col-6', [\r\n                    m('.btn-toolbar', [\r\n                        this.opts.allowEdit ? m('button.btn.btn-primary.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.saveRanges.bind(this)\r\n                        }, $.resx('save')) : null,\r\n                        m('button.btn.btn-info', {\r\n                            type: 'button', role: 'button', onclick: this.exportChart.bind(this), disabled: !this.canExportFn()\r\n                        }, $.resx('export'))\r\n                    ])\r\n                ]),\r\n                this.opts.allowEdit ? m('.col-6.text-right', [\r\n                    m('.text-right', [\r\n                        m('button.btn.btn-info.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.addRecord.bind(this)\r\n                        }, $.resx('add')),\r\n                        m('button.btn.btn-warning.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.deleteAllRecords.bind(this), disabled: !this.hasRecords()\r\n                        }, $.resx('deleteAll')),\r\n                        m(Help, { enabled: this.opts.wantsHelp, message: $.resx('chart.rangeText') })\r\n                    ])\r\n                ]) : null\r\n            ]))\r\n        ];\r\n    };\r\n\r\n    return RangeForm;\r\n});\r\n","/*!\r\n * Wraps dataset form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.Dataset = factory(root.m, root.$, root.Alertify, root.Form, root.Autocomplete, root.Help, root.JoinForm, root.ColumnForm);\r\n})(this, function(m, $, Alertify, Form, Autocomplete, Help, JoinForm, ColumnForm) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare Dataset class.\r\n     * @param {Object} opts - Dataset settings\r\n     */\r\n    function Dataset(opts) {\r\n        opts = opts || {};\r\n        if (opts.columns) {\r\n            opts.columns.forEach(function(x) { x.isExpanded = false; });\r\n        }\r\n\r\n        this.sourceList = null;\r\n        this.columnList = null;\r\n        this.formChanged = false;\r\n        this.selectedSourceList = [];\r\n        this.content = opts.content;\r\n\r\n        this.checkType(false);\r\n        this.loadSourceList();\r\n        this.loadColumnList();\r\n\r\n        this.joinForm = new JoinForm({\r\n            content: opts.content,\r\n            wantsHelp: opts.wantsHelp,\r\n            joins: opts.joins,\r\n            joinTypes: opts.joinTypes,\r\n            sourceFn: this.getSourceList.bind(this),\r\n            columnUpdateFn: this.loadColumnList.bind(this)\r\n        });\r\n        this.joinForm.run();\r\n\r\n        this.columnForm = new ColumnForm({\r\n            content: opts.content,\r\n            wantsHelp: opts.wantsHelp,\r\n            columns: opts.columns,\r\n            dataTypes: opts.dataTypes,\r\n            filterTypes: opts.filterTypes,\r\n            sourceFn: this.getSourceList.bind(this),\r\n            columnFn: this.getColumnList.bind(this),\r\n            selectedSourceFn: this.getSelectedSourceList.bind(this)\r\n        });\r\n        this.columnForm.run();\r\n\r\n        $.onChange($.get('.dataset-database', this.content), this.loadSourceList.bind(this), false);\r\n        $.onChange($.get('.dataset-type', this.content), this.checkType.bind(this), false);\r\n\r\n        var self = this;\r\n        var primary = $.get('.dataset-primary-source', this.content);\r\n        if (primary) {\r\n            m.mount(primary, {\r\n                view: function() {\r\n                    return m(Help, { message: $.resx('dataset.primarySourceHelp'), enabled: opts.wantsHelp }, m(Autocomplete, {\r\n                        name: 'PrimarySource',\r\n                        class: 'primary-source-autocomplete',\r\n                        value: primary.getAttribute('data-value'),\r\n                        required: true,\r\n                        list: self.getSourceList.bind(self),\r\n                        onSelect: self.updateColumnList.bind(self),\r\n                        onCancel: self.updateColumnList.bind(self)\r\n                    }));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    Dataset.prototype = {\r\n        /**\r\n         * Build a list of all tables used by this dataset.\r\n         * @returns {bool} Returns true if list has changed, else false.\r\n         */\r\n        updateSelectedSources: function() {\r\n            var list = [];\r\n            var primarySource = $.get('.primary-source-autocomplete', this.content);\r\n            if (primarySource && primarySource.value) {\r\n                list.push(primarySource.value);\r\n            }\r\n            if (this.joinForm) {\r\n                this.joinForm.records.map(function(x) { list.push(x.tableName); });\r\n            }\r\n            list = list.filter(function(x) {\r\n                return !$.isNull(x) && x.length > 0;\r\n            });\r\n            if (!$.equals(list, this.selectedSourceList)) {\r\n                this.selectedSourceList = list;\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Check if the dataset is using a proc instead of tables.\r\n         * @param {bool} updateList - If true update the table/proc list.\r\n         */\r\n        checkType: function(updateList) {\r\n            var type = $.get('.dataset-type', this.content);\r\n            if (!type) {\r\n                return;\r\n            }\r\n            if ($.coalesce(updateList, true)) {\r\n                this.loadSourceList();\r\n            }\r\n            if (this.joinForm) {\r\n                this.joinForm.isProc = type.value * 1 === 2;\r\n                this.joinForm.run();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Fetch a list of available columns from the server. Autocompletes will update automatically.\r\n         */\r\n        loadColumnList: function() {\r\n            var url = this.content.getAttribute('data-column-url');\r\n            var database = $.get('.dataset-database', this.content);\r\n            if (!(url && database && $.hasPositiveValue(database.value))) {\r\n                this.columnList = [];\r\n                return;\r\n            }\r\n\r\n            if (this.updateSelectedSources()) {\r\n                // only run if sources are different from last request to avoid unnecessary traffic\r\n                var self = this;\r\n                $.ajax({\r\n                    method: 'POST',\r\n                    url: url,\r\n                    data: { DatabaseId: database.value * 1, Tables: self.selectedSourceList }\r\n                }, function(columns) {\r\n                    self.columnList = columns && columns.length ? columns : [];\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Fetch a list of tables from the server. Autocompletes will update automatically.\r\n         */\r\n        loadSourceList: function() {\r\n            var url = this.content.getAttribute('data-table-url');\r\n            var database = $.get('.dataset-database', this.content);\r\n            var type = $.get('.dataset-type', this.content);\r\n            if (!(url && database && type)) {\r\n                return;\r\n            }\r\n            if (!$.hasPositiveValue(database.value) || !$.hasPositiveValue(type.value)) {\r\n                this.sourceList = [];\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: url,\r\n                data: { databaseId: database.value, typeId: type.value }\r\n            }, function(tables) {\r\n                self.sourceList = tables && tables.length ? tables : [];\r\n                self.loadColumnList();\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get the list of table for the autocomplete.\r\n         * @returns {string[]} Returns array of tables.\r\n         */\r\n        getSourceList: function() {\r\n            return this.sourceList;\r\n        },\r\n\r\n        /**\r\n         * Get the list of selected tables.\r\n         * @returns {string[]} Returns array of tables.\r\n         */\r\n        getSelectedSourceList: function() {\r\n            return this.selectedSourceList;\r\n        },\r\n\r\n        /**\r\n         * Get the list of columns for the autocomplete.\r\n         * @returns {string[]} Returns array of columns.\r\n         */\r\n        getColumnList: function() {\r\n            return this.columnList;\r\n        },\r\n\r\n        /**\r\n         * Refresh the column list.\r\n         */\r\n        updateColumnList: function() {\r\n            // need timeout delay so the field value is updated before we load the list\r\n            setTimeout(this.loadColumnList.bind(this), 10);\r\n        },\r\n\r\n        /**\r\n         * Clean up our mess.\r\n         */\r\n        destroy: function() {\r\n            $.destroy(this.columnForm);\r\n            $.destroy(this.joinForm);\r\n\r\n            var primary = $.get('.dataset-primary-source', this.content);\r\n            if (primary) {\r\n                m.mount(primary, null);\r\n            }\r\n        }\r\n    };\r\n\r\n    return Dataset;\r\n});\r\n","/*!\r\n * Wraps shared functionality for report and chart detail pages.\r\n */\r\n(function(root, factory) {\r\n    root.BaseDetails = factory(root.$, root.Alertify, root.Prism);\r\n})(this, function($, Alertify, Prism) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare base details class.\r\n     * @param {Object} opts - Form settings\r\n     */\r\n    function BaseDetails(opts) {\r\n        opts = opts || {};\r\n        this.content = opts.content;\r\n        this.columnList = opts.columns || [];\r\n\r\n        $.on($.get('.view-sql', opts.content), 'click', function() {\r\n            $.dialogs.openDialog($.get('.modal-sql', opts.content).outerHTML);\r\n        });\r\n\r\n        if (!opts.allowEdit) {\r\n            this.initDate = new Date();\r\n        }\r\n    }\r\n\r\n    BaseDetails.prototype = {\r\n        /**\r\n         * Handle the result of a query for report data.\r\n         * @param {Object} json - Query result.\r\n         * @returns {bool}  True if data is valid.\r\n         */\r\n        processJson: function(json) {\r\n            if (json.updatedDate && this.initDate) {\r\n                var updateDate = new Date(json.updatedDate);\r\n                if (updateDate && updateDate > this.initDate) {\r\n                    // report has been modified - warn the user to refresh\r\n                    Alertify.error($.resx('reportModified'));\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if (json.dataSql) {\r\n                this.setSql($.get('.sql-data-content', this.content), json.dataSql, json.dataError);\r\n            }\r\n            if (json.countSql) {\r\n                this.setSql($.get('.sql-count-content', this.content), json.countSql, json.countError);\r\n            }\r\n\r\n            if ($.isNull(json.rows)) {\r\n                Alertify.error($.resx('errorConnectingToDataSource'));\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Show sql and error message in the correct place.\r\n         * @param {Node} node - DOM node to update.\r\n         * @param {string} sql - SQL statement to display.\r\n         * @param {string} error - Error to display if any.\r\n         */\r\n        setSql: function(node, sql, error) {\r\n            if (node) {\r\n                var elem = $.get('.sql-text', node);\r\n                if (elem) {\r\n                    elem.textContent = sql;\r\n                    Prism.highlightElement(elem);\r\n                }\r\n                elem = $.get('.sql-error', node);\r\n                if (elem) {\r\n                    elem.textContent = error || '';\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the list of columns for the autocomplete.\r\n         * @returns {string[]} Returns array of columns.\r\n         */\r\n        getColumnList: function() {\r\n            return this.columnList;\r\n        }\r\n    };\r\n\r\n    return BaseDetails;\r\n});\r\n","/*!\r\n * Wraps report form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.ReportDetails = factory(root.m, root.$, root.Alertify, root.BaseDetails, root.FilterForm, root.GroupForm, root.Table);\r\n})(this, function(m, $, Alertify, BaseDetails, FilterForm, GroupForm, Table) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare ReportDetails class.\r\n     * @param {Object} opts - Report settings\r\n     */\r\n    function ReportDetails(opts) {\r\n        opts = opts || {};\r\n\r\n        BaseDetails.call(this, opts);\r\n\r\n        if (!(opts.reportColumns && opts.reportColumns.length)) {\r\n            return;\r\n        }\r\n\r\n        this.isProc = opts.loadAllData;\r\n\r\n        var self = this;\r\n        var saveUrl = opts.saveColumnsUrl;\r\n        var saveStorageFunc = $.debounce(!opts.allowEdit ? $.noop : function(settings) {\r\n            if ($.isNull(self.dataTable.previousColumnWidths) || !$.equals(settings.columnWidths, self.dataTable.previousColumnWidths)) {\r\n                $.ajax({\r\n                    method: 'PUT',\r\n                    url: saveUrl,\r\n                    data: {\r\n                        Id: opts.reportId,\r\n                        Columns: $.toPascalKeys(settings.columnWidths),\r\n                        ReportWidth: settings.width * 1\r\n                    },\r\n                    block: false\r\n                });\r\n                self.dataTable.previousColumnWidths = settings.columnWidths;\r\n            }\r\n        }, 250);\r\n\r\n        this.dataTable = new Table({\r\n            content: $.get('.report-data-container', opts.content),\r\n            url: opts.dataUrl,\r\n            requestMethod: 'POST',\r\n            requestParams: { Id: opts.reportId, Save: true },\r\n            searchable: false,\r\n            loadAllData: opts.loadAllData,\r\n            editable: opts.allowEdit,\r\n            headerButtons: [m('a.btn.btn-primary.mr-2', { href: opts.exportUrl, target: '_blank' }, $.resx('export'))],\r\n            itemsPerPage: opts.rowLimit,\r\n            currentStartItem: 0,\r\n            sorting: opts.sortColumns || [],\r\n            storageFunction: saveStorageFunc,\r\n            width: opts.width,\r\n            columns: opts.reportColumns || [],\r\n            displayDateFormat: opts.dateFormat,\r\n            displayCurrencyFormat: opts.currencyFormat,\r\n            dataCallback: this.processJson.bind(this),\r\n            errorCallback: this.processJson.bind(this)\r\n        });\r\n        this.dataTable.previousColumnWidths = opts.reportColumns.map(function(x) { return { field: x.field, width: x.width * 1.0 }; });\r\n\r\n        this.filterForm = new FilterForm({\r\n            reportId: opts.reportId,\r\n            content: opts.content,\r\n            filters: opts.filters,\r\n            columns: {\r\n                id: { type: 'int' },\r\n                columnId: { type: 'int' },\r\n                operatorId: { type: 'int' },\r\n                criteria: { type: 'str' },\r\n                criteria2: { type: 'str' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: null, columnId: '', operatorId: '', criteria: null, criteria2: null },\r\n            dateFormat: opts.dateFormat,\r\n            saveFiltersUrl: opts.saveFiltersUrl,\r\n            filterOperators: opts.filterOperators,\r\n            filterOperatorIds: opts.filterOperatorIds,\r\n            filterTypes: opts.filterTypes,\r\n            dateOperators: opts.dateOperators,\r\n            lookups: opts.lookups,\r\n            isProc: opts.isProc,\r\n            dataTable: this.dataTable,\r\n            columnFn: this.getColumnList.bind(this)\r\n        });\r\n        this.filterForm.run();\r\n\r\n        this.groupForm = new GroupForm({\r\n            reportId: opts.reportId,\r\n            content: opts.content,\r\n            groups: opts.groups,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            saveGroupsUrl: opts.saveGroupsUrl,\r\n            aggregatorId: opts.aggregatorId,\r\n            aggregator: opts.aggregator,\r\n            aggregators: opts.aggregators,\r\n            isProc: opts.isProc,\r\n            dataTable: this.dataTable,\r\n            columnFn: this.getColumnList.bind(this)\r\n        });\r\n        this.groupForm.run();\r\n    }\r\n\r\n    ReportDetails.prototype = Object.create(BaseDetails.prototype);\r\n    ReportDetails.prototype.constructor = BaseDetails;\r\n\r\n    /**\r\n     * Handle the result of a query for report data.\r\n     * @param {Object} json - Query result.\r\n     * @returns {bool}  True if data is valid.\r\n     */\r\n    ReportDetails.prototype.processJson = function(json) {\r\n        if (json.updatedDate && this.initDate) {\r\n            var updateDate = new Date(json.updatedDate);\r\n            if (updateDate && updateDate > this.initDate) {\r\n                // report has been modified - warn the user to refresh\r\n                Alertify.error($.resx('reportModified'));\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (json.dataSql) {\r\n            this.setSql($.get('.sql-data-content', this.content), json.dataSql, json.dataError);\r\n        }\r\n        if (json.countSql) {\r\n            this.setSql($.get('.sql-count-content', this.content), json.countSql, json.countError);\r\n        }\r\n\r\n        if ($.isNull(json.rows)) {\r\n            Alertify.error($.resx('errorConnectingToDataSource'));\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Clean up our mess.\r\n     */\r\n    ReportDetails.prototype.destroy = function() {\r\n        $.destroy(this.dataTable);\r\n        $.destroy(this.filterForm);\r\n        $.destroy(this.groupForm);\r\n    };\r\n\r\n    return ReportDetails;\r\n});\r\n","/*!\r\n * Wraps report form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.ChartDetails = factory(root.$, root.Alertify, root.BaseDetails, root.RangeForm);\r\n})(this, function($, Alertify, BaseDetails, RangeForm) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare ChartDetails class.\r\n     * @param {Object} opts - Report settings\r\n     */\r\n    function ChartDetails(opts) {\r\n        opts = opts || {};\r\n\r\n        BaseDetails.call(this, opts);\r\n\r\n        this.enableExport = false;\r\n\r\n        this.rangeForm = new RangeForm({\r\n            chartId: opts.chartId,\r\n            content: opts.content,\r\n            ranges: opts.ranges,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            filterTypes: opts.filterTypes || {},\r\n            saveRangesUrl: opts.saveRangesUrl,\r\n            dateIntervals: opts.dateIntervals,\r\n            aggregators: opts.aggregators,\r\n            reports: opts.reports,\r\n            columns: opts.columns,\r\n            processJsonFn: this.processJson.bind(this),\r\n            canExportFn: this.canExport.bind(this),\r\n            toggleExportFn: this.toggleExport.bind(this)\r\n        });\r\n        this.rangeForm.run();\r\n\r\n        if (this.rangeForm.records && this.rangeForm.records.length) {\r\n            this.rangeForm.makeChart();\r\n        }\r\n    }\r\n\r\n    ChartDetails.prototype = Object.create(BaseDetails.prototype);\r\n    ChartDetails.prototype.constructor = BaseDetails;\r\n\r\n    /**\r\n     * Handle the result of a query for report data.\r\n     * @param {Object} json - Query result.\r\n     * @returns {bool}  True if data is valid.\r\n     */\r\n    ChartDetails.prototype.processJson = function(json) {\r\n        if (json.updatedDate && this.initDate) {\r\n            var updateDate = new Date(json.updatedDate);\r\n            if (updateDate && updateDate > this.initDate) {\r\n                // chart has been modified - warn the user to refresh\r\n                document.dispatchEvent($.events.chartLoad);\r\n                Alertify.success($.resx('chartModified'));\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if ($.isNull(json.ranges) || json.ranges.length === 0) {\r\n            Alertify.error($.resx('errorConnectingToDataSource'));\r\n            this.enableExport = false;\r\n            $.show($.get('.chart-error', this));\r\n            return false;\r\n        }\r\n\r\n        this.enableExport = true;\r\n        $.get('.export-filename', this.content).value = json.title;\r\n\r\n        var elem = $.get('.sql-content', this.content);\r\n        var ranges = json.ranges.map(function(x) { return { title: x.title, sql: x.sql, error: x.error }; });\r\n        this.setSql(elem, ranges.filter(function(x) { return x.sql; }).map(function(x) { return '-- ' + x.title + '\\n' + x.sql + '\\n'; }).join('\\n'),\r\n            ranges.filter(function(x) { return x.error; }).map(function(x) { return x.title + ':<br>' + x.error + '<br>'; }).join('<br>'));\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Get export flag.\r\n     */\r\n    ChartDetails.prototype.canExport = function() {\r\n        return this.enableExport;\r\n    };\r\n\r\n    /**\r\n     * Set export flag.\r\n     * @param {bool} val - Enable export if true, else disable.\r\n     */\r\n    ChartDetails.prototype.toggleExport = function(val) {\r\n        this.enableExport = val;\r\n    };\r\n\r\n    /**\r\n     * Clean up our mess.\r\n     */\r\n    ChartDetails.prototype.destroy = function() {\r\n        $.destroy(this.rangeForm);\r\n        $.destroy(this.chart);\r\n    };\r\n\r\n    return ChartDetails;\r\n});\r\n","/*!\r\n * Wraps functionality needed to display a dashboard widget.\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Widget = factory(root.m, root.$, root.Alertify, root.Table, root.DashChart, root.Draggabilly, root.Rect);\r\n})(this, function(m, $, Alertify, Table, DashChart, Draggabilly, Rect) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Use object properties to make class list for a widget container.\r\n     * @param {Object} obj - Widget properties.\r\n     * @returns {string} CSS class list.\r\n     */\r\n    var buildClassList = function(obj) {\r\n        return 'grid-item grid-item-width-' + obj.width + ' grid-item-height-' + obj.height +\r\n            ' grid-item-x-' + obj.x + ' grid-item-y-' + obj.y;\r\n    };\r\n\r\n    /**\r\n     * Declare Widget class.\r\n     * @param {Object} opts - Widget settings\r\n     */\r\n    var Widget = function(opts) {\r\n        this.init(opts);\r\n\r\n        // attach this to the container for reference in the dashboard\r\n        var container = this.getContainer();\r\n        container.widget = this;\r\n    };\r\n\r\n    /**\r\n     * Declare Widget class methods.\r\n     */\r\n    Widget.prototype = {\r\n        /**\r\n         * Initialize the widget.\r\n         * @param {Object} opts - Widget settings\r\n         */\r\n        init: function(opts) {\r\n            opts.isData = $.coalesce(opts.isData, true);\r\n            opts.refreshSeconds = $.coalesce(opts.refreshSeconds, 0);\r\n            opts.baseUrl = $.get('body').getAttribute('data-base-url');\r\n            this.opts = opts;\r\n\r\n            this.id = opts.id;\r\n            this.table = null;\r\n            this.chart = null;\r\n            this.interval = null;\r\n            this.isFullscreen = false;\r\n            this.initDate = new Date();\r\n            this.dragMargin = 0;\r\n\r\n            this.render();\r\n\r\n            var container = this.getContainer();\r\n            this.rect = new Rect(opts.width, opts.height, opts.x, opts.y);\r\n            this.setupDraggie(container);\r\n\r\n            if (opts.isData) {\r\n                $.show('#widgetData_' + opts.id);\r\n                $.hide('#widgetChart_' + opts.id);\r\n\r\n                this.table = new Table({\r\n                    content: '#widgetData_' + opts.id,\r\n                    id: 'widgetTable_' + opts.id,\r\n                    url: opts.url,\r\n                    requestMethod: 'POST',\r\n                    requestParams: { Id: opts.reportId },\r\n                    loadAllData: false,\r\n                    editable: false,\r\n                    itemsPerPage: opts.reportRowLimit || 10,\r\n                    currentStartItem: 0,\r\n                    sorting: opts.sortColumns,\r\n                    storageFunction: $.noop,\r\n                    width: Math.max(opts.reportWidth || 100, 100),\r\n                    columns: opts.columns,\r\n                    dataCallback: this.processJson.bind(this),\r\n                    errorCallback: this.onError.bind(this),\r\n                    displayDateFormat: opts.displayDateFormat,\r\n                    displayCurrencyFormat: opts.displayCurrencyFormat\r\n                });\r\n            } else {\r\n                $.hide('#widgetData_' + opts.id);\r\n                $.show('#widgetChart_' + opts.id);\r\n                this.chart = new DashChart(container, false, this.processJson.bind(this), this.onError.bind(this));\r\n            }\r\n            if (opts.refreshSeconds > 0) {\r\n                this.interval = setInterval(this.refresh.bind(this), opts.refreshSeconds * 1000);\r\n            }\r\n\r\n            if (opts.title) {\r\n                $.setText($.get('.grid-title', container), opts.title);\r\n            }\r\n        },\r\n\r\n        render: function() {\r\n            var parentNode = $.get('#widget_' + this.opts.id);\r\n            var firstRender = !parentNode;\r\n\r\n            if (firstRender) {\r\n                // have to create the parent node by hand first - rendering multiple views to the same parentNode with mithril causes an overwrite\r\n                parentNode = $.createNode();\r\n                parentNode.id = 'widget_' + this.opts.id;\r\n                parentNode.setAttribute('data-url', this.opts.url);\r\n                parentNode.className = buildClassList(this.opts);\r\n                $.get('#dashboard').appendChild(parentNode);\r\n            }\r\n\r\n            // now render the rest of the widget content\r\n            m.render(parentNode, [\r\n                m('.row.grid-header', [\r\n                    m('span.grid-title.col-11', this.opts.title),\r\n                    m('span.grid-buttons.col-1', [\r\n                        m('span.float-right', [\r\n                            m('a.btn.btn-link.btn-refresh', { title: $.resx('refresh'), onclick: this.forceRefresh.bind(this) },\r\n                                m('i.dash.dash-arrows-cw')\r\n                            ),\r\n                            m('a.btn.btn-link.btn-fullscreen', { title: $.resx('toggleFullScreen'), onclick: this.toggleFullScreen.bind(this) },\r\n                                m('i.dash.dash-max')\r\n                            ),\r\n                            m('a.btn.btn-link.dash-ajax.dash-dialog.fs-disabled', {\r\n                                href: this.opts.baseUrl + (this.opts.isData ? 'Report' : 'Chart') + '/Details/' + (this.opts.isData ? this.opts.reportId : this.opts.chartId),\r\n                                title: $.resx(this.opts.isData ? 'viewReport' : 'viewChart')\r\n                            }, m('i.dash.dash-info')),\r\n                            m('a.btn.btn-link.dash-ajax.dash-dialog.fs-disabled', { href: this.opts.baseUrl + 'Dashboard/Edit/' + this.opts.id, title: $.resx('editWidget') },\r\n                                m('i.dash.dash-pencil')\r\n                            ),\r\n                            m('a.btn.btn-link.dash-ajax.dash-dialog.fs-disabled', { title: $.resx('deleteWidget'), onclick: this.deleteWidget.bind(this) },\r\n                                m('i.dash.dash-trash')\r\n                            )\r\n                        ])\r\n                    ])\r\n                ]),\r\n                m('.grid-body', [\r\n                    m('.widget-data d-none', { id: 'widgetData_' + this.opts.id }),\r\n                    m('.widget-chart d-none', { id: 'widgetChart_' + this.opts.id }, [\r\n                        m('.chart-spinner', m('.loading.loading-lg')),\r\n                        m('.chart-error.d-none.pl-1',\r\n                            m('div', [\r\n                                m('p', $.resx('errorChartLoad')),\r\n                                m('.btn.btn-info.btn-sm', { onclick: this.refresh.bind(this) }, $.resx('tryAgain'))\r\n                            ])\r\n                        ),\r\n                        m('canvas.chart-canvas.d-none')\r\n                    ])\r\n                ]),\r\n                m('.grid-footer', [\r\n                    m('span.grid-updated-time', new Date().toLocaleTimeString()),\r\n                    m('span.resizable-handle.float-right', m('i.dash.dash-corner')),\r\n                    m('span.drag-handle.float-right', m('i.dash.dash-move'))\r\n                ])\r\n            ]);\r\n\r\n            if (firstRender) {\r\n                // add our system wide events\r\n                $.dialogs.processContent($.get('#widget_' + this.opts.id));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the container element for the widget.\r\n         * @returns {Node} DOM node that contains the widget content.\r\n         */\r\n        getContainer: function() {\r\n            return $.get('#widget_' + this.opts.id);\r\n        },\r\n\r\n        /**\r\n         * Add the draggabilly handlers.\r\n         * @param {Node} container - DOM node that contains the widget content.\r\n         * @param {Object} grid - Object that contains the grid columnWidth and rowHeight.\r\n         */\r\n        setupDraggie: function(container, grid) {\r\n            container = $.coalesce(container, this.getContainer());\r\n            var g = this.opts.grid = $.coalesce(grid, this.opts.grid);\r\n\r\n            $.destroy(this.moveDraggie);\r\n            this.moveDraggie = new Draggabilly(container, { handle: '.drag-handle', grid: [g.columnWidth, g.rowHeight], minZero: true }).on('dragEnd', this.stopDrag.bind(this));\r\n\r\n            $.destroy(this.resizeDraggie);\r\n            var handle = $.get('.resizable-handle', container);\r\n            this.resizeDraggie = new Draggabilly(handle, { grid: [g.columnWidth, g.rowHeight] }).on('dragStart', this.initResize.bind(this)).on('dragEnd', this.stopResize.bind(this));\r\n\r\n            var style = handle.currentStyle || window.getComputedStyle(handle);\r\n            this.dragMargin = style.marginRight.replace('px', '') * 1;\r\n        },\r\n\r\n        /**\r\n         * Stop dragging the widget and updates its location.\r\n         */\r\n        stopDrag: function() {\r\n            var x = Math.max(Math.round(this.moveDraggie.position.x / this.opts.grid.columnWidth), 0);\r\n            var y = Math.max(Math.round(this.moveDraggie.position.y / this.opts.grid.rowHeight), 0);\r\n            if (x + this.rect.width > this.opts.grid.columns) {\r\n                x = this.opts.grid.columns - this.rect.width;\r\n            }\r\n            if (y + this.rect.height > this.opts.grid.rows) {\r\n                y = this.opts.grid.rows - this.rect.height;\r\n            }\r\n            this.setLocation(x, y);\r\n            this.rect.updated = true;\r\n            this.opts.layoutCallback();\r\n        },\r\n\r\n        /**\r\n         * Start resizing a widget\r\n         * @param {Event} event - Original mousedown or touchstart event\r\n         */\r\n        initResize: function(event) {\r\n            // clear any selection so browser doesn't think we are dragging the selection\r\n            window.getSelection().removeAllRanges();\r\n\r\n            var container = this.getContainer();\r\n            container.style['z-index'] = 9999;\r\n            var pos = event.changedTouches ? event.changedTouches[0] : event;\r\n            this.x = pos.clientX;\r\n            this.y = pos.clientY;\r\n\r\n            var styles = document.defaultView.getComputedStyle(container);\r\n            this.width = styles.width.replace('px', '') * 1;\r\n            this.height = styles.height.replace('px', '') * 1;\r\n\r\n            if (event.target !== event.currentTarget) {\r\n                event.stopPropagation();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update the widget after the user finishes resizing.\r\n         */\r\n        stopResize: function() {\r\n            var container = this.getContainer();\r\n            var w = Math.max(this.width + this.resizeDraggie.position.x + this.dragMargin, this.opts.grid.columnWidth * 4);\r\n            var h = Math.max(this.height + this.resizeDraggie.position.y, this.opts.grid.rowHeight * 4);\r\n\r\n            this.setSize(Math.min(Math.round(w / this.opts.grid.columnWidth), this.opts.grid.columns), Math.min(Math.round(h / this.opts.grid.rowHeight), this.opts.grid.rows));\r\n\r\n            var handle = $.get('.resizable-handle', container);\r\n            if (handle) {\r\n                handle.removeAttribute('style');\r\n            }\r\n\r\n            this.opts.layoutCallback();\r\n\r\n            if (this.opts.isData) {\r\n                this.table.updateLayout();\r\n            }\r\n\r\n            this.rect.updated = true;\r\n        },\r\n\r\n        /**\r\n         * Delete this widget.\r\n         */\r\n        deleteWidget: function() {\r\n            var self = this;\r\n            Alertify.confirm($.resx('areYouSure'), function() {\r\n                $.ajax({\r\n                    method: 'DELETE',\r\n                    url: self.opts.baseUrl + 'Dashboard/Delete/' + self.opts.id\r\n                }, self.destroy.bind(self));\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Handle the result of a query for report data.\r\n         * @param {Object} json - Data to display in the widget.\r\n         * @returns {bool} True if the json data is valid\r\n         */\r\n        processJson: function(json) {\r\n            if (json.updatedDate && this.initDate) {\r\n                var updateDate = new Date(json.updatedDate);\r\n                if (updateDate && updateDate > this.initDate) {\r\n                    this.reload();\r\n                    return false;\r\n                }\r\n            }\r\n            if ((this.opts.isData && $.isNull(json.rows)) || (!this.opts.isData && ($.isNull(json.ranges) || json.ranges.length === 0))) {\r\n                Alertify.error($.resx('errorConnectingToDataSource'));\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Reload the widget options and reinitialize.\r\n         * @param {bool} showMsg - If true show the widget reloaded message to the user.\r\n         * @param {Object} options - Options to use to reload the widget instead of requesting from the server.\r\n         */\r\n        reload: function(showMsg, options) {\r\n            var callback = function(opts) {\r\n                this.destroy(false);\r\n                this.init($.extend(this.opts, opts));\r\n                if ($.coalesce(showMsg, true)) {\r\n                    Alertify.success($.resx('widgetReloaded').replace('{0}', this.opts.title));\r\n                }\r\n                return;\r\n            };\r\n\r\n            if (!$.isNull(options)) {\r\n                callback.call(this, options);\r\n            } else {\r\n                $.ajax({ method: 'GET', url: this.opts.baseUrl + 'Dashboard/WidgetOptions/' + this.opts.id }, callback.bind(this));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Refresh the data for the widget.\r\n         */\r\n        refresh: function() {\r\n            if ($.dialogs.hasOpenDialog()) {\r\n                // don't refresh when a dialog is open\r\n                return;\r\n            }\r\n\r\n            if (this.opts.isData) {\r\n                this.table.refresh();\r\n            } else {\r\n                this.chart.run();\r\n            }\r\n\r\n            var updatedAt = $.get('.grid-updated-time', this.getContainer());\r\n            if (updatedAt) {\r\n                updatedAt.innerText = new Date().toLocaleTimeString();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Force the widget to refresh now.\r\n         */\r\n        forceRefresh: function() {\r\n            if (this.opts.refreshSeconds > 0) {\r\n                clearInterval(this.interval);\r\n                this.interval = setInterval(this.refresh.bind(this), this.opts.refreshSeconds * 1000);\r\n            }\r\n            this.refresh();\r\n        },\r\n\r\n        /**\r\n         * Refresh the style based on the dimensions.\r\n         * @param {number} width - New width of the widget.\r\n         * @param {number} height - New height of the widget.\r\n         */\r\n        setSize: function(width, height) {\r\n            this.rect.width = width;\r\n            this.rect.height = height;\r\n            this.updateStyle();\r\n        },\r\n\r\n        /**\r\n         * Refresh the style based on the dimensions.\r\n         * @param {number} x - New x coordinate of the widget.\r\n         * @param {number} y - New y coordinate of the widget.\r\n         */\r\n        setLocation: function(x, y) {\r\n            this.rect.x = x;\r\n            this.rect.y = y;\r\n            this.updateStyle();\r\n        },\r\n\r\n        /**\r\n        * Refresh the style based on the dimensions.\r\n        */\r\n        updateStyle: function() {\r\n            var container = this.getContainer();\r\n            container.className = buildClassList(this.rect);\r\n            container.removeAttribute('style');\r\n        },\r\n\r\n        /**\r\n         * Handle an error.\r\n         * @returns {bool} Always returns true.\r\n         */\r\n        onError: function() {\r\n            if (this.interval) {\r\n                clearInterval(this.interval);\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Destroy the widget.\r\n         * @param {bool} totalDestruction - Remove the container node and null out the widget object if true.\r\n         */\r\n        destroy: function(totalDestruction) {\r\n            $.destroy(this.table);\r\n            $.destroy(this.chart);\r\n            $.destroy(this.moveDraggie);\r\n            $.destroy(this.resizeDraggie);\r\n\r\n            if (this.interval) {\r\n                clearInterval(this.interval);\r\n                this.interval = null;\r\n            }\r\n\r\n            if ($.coalesce(totalDestruction, true)) {\r\n                var container = this.getContainer();\r\n                container.widget = null;\r\n                container.parentNode.removeChild(container);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Switch this widget in/out of full screen mode.\r\n         */\r\n        toggleFullScreen: function() {\r\n            var container = this.getContainer();\r\n            var fullScreenIcon = $.get('.btn-fullscreen i', container);\r\n            var headerHideBtns = $.getAll('.fs-disabled', container);\r\n\r\n            if (this.isFullscreen) {\r\n                this.isFullscreen = false;\r\n                $.removeClass(container, 'full-screen');\r\n                $.removeClass(fullScreenIcon, 'dash-min');\r\n                $.addClass(fullScreenIcon, 'dash-max');\r\n                headerHideBtns.forEach(function(x) { $.removeClass(x, 'disabled'); });\r\n            } else {\r\n                this.isFullscreen = true;\r\n                $.addClass(container, 'full-screen');\r\n                $.addClass(fullScreenIcon, 'dash-min');\r\n                $.removeClass(fullScreenIcon, 'dash-max');\r\n                headerHideBtns.forEach(function(x) { $.addClass(x, 'disabled'); });\r\n            }\r\n\r\n            if (this.opts.isData) {\r\n                this.table.updateLayout();\r\n            }\r\n        }\r\n    };\r\n\r\n    return Widget;\r\n});\r\n","/*!\r\n * Wraps dialog functionality.\r\n */\r\n(function($, Alertify, Dialog, Table, Dropdown, Tab, CollapsibleList, Validator, DatePicker) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Set focus on an element after a dialog closes.\r\n     * @this {Event} Event that originally opened the dialog.\r\n     */\r\n    var focusOnClose = function() {\r\n        if (this && this.target) {\r\n            this.target.focus();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Selectors and callback function to create events.\r\n     */\r\n    var _contentActions = [\r\n        //{ selector: '[data-toggle=\"dropdown\"]', action: function() { new Dropdown(this); } },\r\n        { selector: '[data-toggle=\"tab\"], [data-toggle=\"pill\"]', action: function() { new Tab(this); } },\r\n        { selector: '.dash-table', action: function() { tableLoad(this); } },\r\n        { selector: '.dash-ajax', action: function() { $.on(this, 'click', handleAjaxRequest); } },\r\n        { selector: '.dash-form', action: function() { $.on(this, 'submit', function(e) { e.preventDefault(); }, true); } },\r\n        {\r\n            selector: '.dash-context-help', action: function() {\r\n                $.on(this, 'click', function(e) {\r\n                    Alertify.alert(this.getAttribute('data-message').replace(/&quot;/g, '\"'), focusOnClose.bind(e), focusOnClose.bind(e));\r\n                });\r\n            }\r\n        },\r\n        { selector: '.dash-collapsible-list', action: function() { new CollapsibleList(this); } },\r\n        {\r\n            selector: '[data-toggle=\"validator\"]', action: function() {\r\n                new Validator(this, { match: $.resx('errorMatch'), minlength: $.resx('errorMinLength') });\r\n            }\r\n        },\r\n        { selector: '.dash-input-replace', action: function() { $.on(this, 'click', inputReplace); } }\r\n    ];\r\n\r\n    /**\r\n     * Store list of open dialogs.\r\n     */\r\n    var _dialogs = [];\r\n\r\n    /**\r\n     * Find a dialog in the internal list by ID.\r\n     * @param {number} id - Dialog ID\r\n     */\r\n    var findDialogById = function(id) {\r\n        var dlgs = _dialogs.filter(function(x) {\r\n            return x.getId() === id;\r\n        });\r\n        return dlgs.length ? dlgs[0] : null;\r\n    };\r\n\r\n    /**\r\n     * Get active dialog.\r\n     * @param {Object} Return currently open dialog object.\r\n     */\r\n    var getActiveDialog = function() {\r\n        if (!_dialogs.length) {\r\n            return null;\r\n        }\r\n        return findDialogById(Math.max.apply(Math, _dialogs.map(function(x) { return x.getId(); })));\r\n    };\r\n\r\n    /**\r\n     * Get active dialog content.\r\n     * @param {Object} Return content node of currently open dialog object.\r\n     */\r\n    var getActiveContent = function() {\r\n        var dlg = getActiveDialog();\r\n        return dlg ? dlg.getContent() : null;\r\n    };\r\n\r\n    /**\r\n     * Check if any dialogs are open.\r\n     */\r\n    var hasOpenDialog = function() {\r\n        return _dialogs.length > 0;\r\n    };\r\n\r\n    /**\r\n     * Remove a dialog from internal list.\r\n     * @param {number} id - Dialog ID\r\n     */\r\n    var removeDialog = function(id) {\r\n        _dialogs = _dialogs.filter(function(x) {\r\n            return x.getId() !== id;\r\n        });\r\n        var activeDialog = getActiveDialog();\r\n        if (activeDialog) {\r\n            setTimeout(activeDialog.onShow.bind(activeDialog), 25);\r\n        } else {\r\n            // back to dashboard so set title\r\n            var dashboard = $.get('#dashboard');\r\n            if (dashboard) {\r\n                document.title = dashboard.getAttribute('data-title');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle action from a click on an ajax link.\r\n     * @param {Event} e - Event that triggered the request.\r\n     */\r\n    var handleAjaxRequest = function(e) {\r\n        if (!(e && e.target)) {\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n        e.target.blur();\r\n\r\n        var obj = e.target;\r\n        while (obj !== document.body && obj.parentNode && !$.hasClass(obj, 'dash-ajax')) {\r\n            obj = obj.parentNode;\r\n        }\r\n        if (!obj || !(obj.hasAttribute('href') || obj.hasAttribute('data-href')) || $.hasClass(obj, 'disabled')) {\r\n            return;\r\n        }\r\n\r\n        var url = obj.getAttribute('href') || obj.getAttribute('data-href');\r\n        var method = obj.getAttribute('data-method') || 'GET';\r\n        var message = obj.getAttribute('data-message');\r\n        var target = obj.getAttribute('target');\r\n\r\n        if ($.hasClass(obj, 'dash-confirm')) {\r\n            Alertify.dismissAll();\r\n            Alertify.confirm(message, sendAjaxRequest.bind(this, url, method, obj), function() { e.target.focus(); });\r\n        } else if ($.hasClass(obj, 'dash-prompt')) {\r\n            Alertify.dismissAll();\r\n            Alertify.prompt(message, checkPrompt.bind(this, url, method, obj));\r\n        } else if (target) {\r\n            window.open(url, target);\r\n        } else {\r\n            sendAjaxRequest(url, method, obj);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Send a request to the server and display the results\r\n     * @param {string} url - URL to send request for.\r\n     * @param {string} method - Request method type.\r\n     * @param {Node} target - Node that requested the data.\r\n     * @param {Event} e - Event that triggered the request.\r\n     * @param {string} promptValue - If coming from a prompt dialog, the value entered.\r\n     */\r\n    var sendAjaxRequest = function(url, method, target, e, promptValue) {\r\n        if (!url) {\r\n            return;\r\n        }\r\n\r\n        if (promptValue) {\r\n            if (url.indexOf('?') > -1) {\r\n                url += '&Prompt=' + encodeURIComponent(promptValue);\r\n            } else {\r\n                url += '?Prompt=' + encodeURIComponent(promptValue);\r\n            }\r\n        }\r\n        $.ajax({\r\n            method: method || 'GET',\r\n            url: url\r\n        }, function(responseData) {\r\n            if (!responseData.content) {\r\n                refreshTable();\r\n                return;\r\n            }\r\n\r\n            if (target && target.hasAttribute('data-update-target')) {\r\n                var targetSelector = target.getAttribute('data-update-target');\r\n                var updateObj;\r\n                if (targetSelector.substr(1) === '#') {\r\n                    updateObj = $.get(targetSelector);\r\n                } else {\r\n                    var dialog = getActiveDialog();\r\n                    if (dialog) {\r\n                        updateObj = $.get(targetSelector, dialog.getContainer());\r\n                    }\r\n                }\r\n                if (updateObj) {\r\n                    if (responseData.html) {\r\n                        updateObj.innerHTML = responseData.content;\r\n                        processContent(updateObj);\r\n                    } else {\r\n                        $.setText(updateObj, responseData.content);\r\n                    }\r\n                }\r\n            } else {\r\n                openDialog(responseData.content, target);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Open a new dialog.\r\n     * @param {string} content - HTML content for the dialog\r\n     * @param {Node} target - Node that triggered the dialog to open.\r\n     * @param {Function} onOkay - Function to run if the user clicks ok.\r\n     * @param {Function} onCancel - Function to run if the user clicks cancel.\r\n     * @param {Function} onShow - Function to run after the dialog loads.\r\n     */\r\n    var openDialog = function(content, target, onOkay, onCancel, onShow) {\r\n        Alertify.dismissAll();\r\n\r\n        // get max dialog id, and increment\r\n        var id = _dialogs.length ? Math.max.apply(Math, _dialogs.map(function(x) { return x.getId(); })) + 1 : 1;\r\n        var activeDlg = getActiveDialog();\r\n        _dialogs.push(new Dialog({\r\n            id: id, content: content, target: target, onOkay: onOkay, onCancel: onCancel, onShow: onShow,\r\n            buttons: { 'ok': $.resx('okay'), 'cancel': $.resx('cancel'), 'close': $.resx('close') },\r\n            parent: activeDlg ? activeDlg.getId() : null\r\n        }));\r\n    };\r\n\r\n    /**\r\n     * Check that a prompt value was supplied.\r\n     * @param {string} url - URL to send request for.\r\n     * @param {string} method - Request method type.\r\n     * @param {Node} target - Node that requested the data.\r\n     * @param {string} promptValue - If coming from a prompt dialog, the value entered.\r\n     * @param {Event} e - Event that triggered the request.\r\n     */\r\n    var checkPrompt = function(url, method, target, promptValue, e) {\r\n        if (!$.hasValue(promptValue)) {\r\n            Alertify.error($.resx('errorNameRequired'));\r\n            return false;\r\n        }\r\n        sendAjaxRequest.call(this, url, method, target, e, promptValue);\r\n    };\r\n\r\n    /**\r\n     * Initialize an table instance\r\n     * @param {Node} node - Node containing the data url for the table settings.\r\n     */\r\n    var tableLoad = function(node) {\r\n        var json = node.getAttribute('data-json');\r\n        if (json) {\r\n            var opts = JSON.parse(json);\r\n            opts.content = node;\r\n            node.table = new Table(opts);\r\n            node.removeAttribute('data-json');\r\n        } else {\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: node.getAttribute('data-url')\r\n            }, function(opts) {\r\n                node.table = new Table(opts);\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Refresh data for the table instance in the active dialog.\r\n     */\r\n    var refreshTable = function() {\r\n        var node = $.get('.dash-table', getActiveContent());\r\n        if (node && node.table) {\r\n            node.table.refresh();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Focus on the first error or input.\r\n     * @param {Node} node - Parent node to search in.\r\n     */\r\n    var focusNode = function(node) {\r\n        if (!node) {\r\n            return null;\r\n        }\r\n        var elems = $.getAll('.form-control-error:not([type=\"hidden\"]):not([disabled]):not([readonly]), .mform-control-error:not([type=\"hidden\"]):not([disabled]):not([readonly])', node).filter($.isVisible);\r\n        if (!elems.length) {\r\n            elems = $.getAll('input:not([type=\"hidden\"]):not([disabled]):not([readonly]), select:not([disabled]):not([readonly])', node).filter($.isVisible);\r\n        }\r\n        if (!elems.length) {\r\n            elems = $.getAll('button:not([disabled]), a:not([disabled]), [tabindex]:not([disabled]):not([tabindex=\"-1\"])', node).filter($.isVisible);\r\n        }\r\n        if (!elems.length) {\r\n            var dlg = $.closest('.rd-dialog', node);\r\n            if (dlg) {\r\n                elems = $.getAll('.rd-close', dlg).filter($.isVisible);\r\n            }\r\n        }\r\n        if (elems.length) {\r\n            elems[0].focus();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Replace the value of the data-target node with the data-value from this. Used for providing defaults via a dropdown.\r\n     */\r\n    var inputReplace = function() {\r\n        if (this.hasAttribute('data-target') && this.hasAttribute('data-value')) {\r\n            var target = $.get('#' + this.getAttribute('data-target'));\r\n            if (target && !$.isNull(target.value)) {\r\n                target.value = this.getAttribute('data-value');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Process node content adding events.\r\n     * @param {Node} node - Node to add events to.\r\n     */\r\n    var processContent = function(node) {\r\n        node = node instanceof Event ? null : node instanceof Table ? node.table : node;\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        // process all the content actions\r\n        var elems;\r\n        _contentActions.forEach(function(act) {\r\n            elems = $.getAll(act.selector, node);\r\n            if ($.matches(node, act.selector)) {\r\n                elems.push(node);\r\n            }\r\n            elems.forEach(function(x) {\r\n                act.action.call(x);\r\n            });\r\n        });\r\n\r\n        if (node.nodeName === 'BODY') {\r\n            var lang = node.getAttribute('data-lang');\r\n            if (lang && lang !== 'en') {\r\n                DatePicker.localize({ locale: lang });\r\n            }\r\n            focusNode(node);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set up the functions that are exposed publicly.\r\n     */\r\n    $.dialogs = {\r\n        openDialog: openDialog,\r\n        findDialogById: findDialogById,\r\n        focusNode: focusNode,\r\n        focusOnClose: focusOnClose,\r\n        getActiveContent: getActiveContent,\r\n        getActiveDialog: getActiveDialog,\r\n        hasOpenDialog: hasOpenDialog,\r\n        processContent: processContent,\r\n        refreshTable: refreshTable,\r\n        removeDialog: removeDialog,\r\n        sendAjaxRequest: sendAjaxRequest\r\n    };\r\n})(this.$, this.Alertify, this.Dialog, this.Table, this.Dropdown, this.Tab, this.CollapsibleList, this.Validator, this.DatePicker);\r\n","/*!\r\n * Wraps dataset form functionality.\r\n */\r\n(function($, Dataset) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Store references to the dataset form mithril modules and value lists.\r\n     * @type {Object}\r\n     */\r\n    var _datasets = {};\r\n\r\n    /**\r\n     * Initialize the dataset form when the datasetFormLoad event fires.\r\n     */\r\n    $.on(document, 'datasetFormLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'dataset-form')) {\r\n            return;\r\n        }\r\n\r\n        var dataset = $.get('.dataset-id', form);\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-url'),\r\n            data: dataset ? { id: dataset.value } : null\r\n        }, function(data) {\r\n            var dlg = $.dialogs.getActiveDialog();\r\n            data.content = dlg.getContent();\r\n            _datasets[dlg.getId()] = new Dataset(data);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Destroy the form when the dialog closes.\r\n     */\r\n    $.on(document, 'datasetFormUnload', function() {\r\n        if (!_datasets) {\r\n            return;\r\n        }\r\n\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var dataset = _datasets[dlg.getId()];\r\n        if (dataset) {\r\n            dataset.destroy();\r\n        }\r\n        delete _datasets[dlg.getId()];\r\n    });\r\n})(this.$, this.Dataset);\r\n","/*!\r\n * Wraps functionality for displaying reports.\r\n */\r\n(function($, Draggabilly, ShareForm, ReportDetails) {\r\n    'use strict';\r\n\r\n    var _reports = {};\r\n    var _shares = {};\r\n\r\n    /**\r\n     * Update zIndex of column being dragged so it is on top.\r\n     * @param {Event} event - Original mousedown or touchstart event\r\n     */\r\n    var startDrag = function(event) {\r\n        var target = $.hasClass(event.target, 'column-item') ? event.target : event.target.parentNode;\r\n        target.style['z-index'] = 9999;\r\n    };\r\n\r\n    /**\r\n     * Update column lists when the user stops dragging a column.\r\n     * @param {Event} event - Original mouseup or touchend event\r\n     * @param {MouseEvent|Touch} pointer - Event object that has .pageX and .pageY\r\n     */\r\n    var stopDrag = function(event, pointer) {\r\n        var target = $.hasClass(event.target, 'column-item') ? event.target : event.target.parentNode;\r\n        var isLeft = pointer.x + target.offsetWidth / 2 < document.documentElement.clientWidth / 2;\r\n        var newPos = Math.max(Math.round(target.offsetTop / target.offsetHeight), 0);\r\n\r\n        $.removeClass(target, 'column-item-right');\r\n        $.removeClass(target, 'column-item-left');\r\n        target.removeAttribute('style');\r\n\r\n        var leftItems = $.getAll('.column-item-left');\r\n        leftItems.sort(columnSort);\r\n        var rightItems = $.getAll('.column-item-right');\r\n        rightItems.sort(columnSort);\r\n        newPos = Math.min(newPos, isLeft ? leftItems.length : rightItems.length);\r\n\r\n        if (isLeft) {\r\n            $.addClass(target, 'column-item-left');\r\n            leftItems.splice(newPos, 0, target);\r\n        } else {\r\n            $.addClass(target, 'column-item-right');\r\n            rightItems.splice(newPos, 0, target);\r\n        }\r\n\r\n        updateList(leftItems, true);\r\n        updateList(rightItems, false);\r\n    };\r\n\r\n    /**\r\n     * Sort columns by their vertical position.\r\n     * @param {Object} a - Object for first column.\r\n     * @param {Object} b - Object for second column.\r\n     * @returns {bool} True if first column should be after second column, else false;\r\n     */\r\n    var columnSort = function(a, b) {\r\n        return a.offsetTop > b.offsetTop;\r\n    };\r\n\r\n    /**\r\n     * Update the position and displayOrder of columns in a list.\r\n     * @param {Node[]} items - Array of column nodes.\r\n     * @param {bool} isLeft - True if the left column list, else false.\r\n     */\r\n    var updateList = function(items, isLeft) {\r\n        items.forEach(function(x, i) {\r\n            updateColumn(x, i, isLeft);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Update the class list and displayOrder for a column item.\r\n     * @param {Node} element - DOM node for the column.\r\n     * @param {number} index - New index of the column in the list.\r\n     * @param {bool} isLeft - True if the column is in the left list, else false.\r\n     */\r\n    var updateColumn = function(element, index, isLeft) {\r\n        element.className = element.className.replace(/column-item-y-([0-9]*)/i, '').trim() + ' column-item-y-' + index;\r\n        var input = $.get('.column-grid-display-order', element);\r\n        if (input) {\r\n            if (isLeft) {\r\n                input.value = 0;\r\n            } else {\r\n                input.value = index + 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initialize the report column selector.\r\n     */\r\n    $.on(document, 'columnSelectorLoad', function() {\r\n        $.getAll('.column-item').forEach(function(x) {\r\n            new Draggabilly(x).on('dragStart', startDrag).on('dragEnd', stopDrag);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Request settings to display a report and call the method to initialize it.\r\n     */\r\n    $.on(document, 'reportLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'report-form')) {\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-url')\r\n        }, function(data) {\r\n            var dlg = $.dialogs.getActiveDialog();\r\n            data.content = dlg.getContent();\r\n            _reports[dlg.getId()] = new ReportDetails(data);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Clean up when closing the report dialog.\r\n     */\r\n    $.on(document, 'reportUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var report = _reports[dlg.getId()];\r\n        if (report) {\r\n            report.destroy();\r\n        }\r\n        delete _reports[dlg.getId()];\r\n        document.dispatchEvent($.events.dashboardReload);\r\n    });\r\n\r\n    /**\r\n     * Load the settings to display the report share form.\r\n     */\r\n    $.on(document, 'reportShareLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'report-share-form')) {\r\n            return;\r\n        }\r\n\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        _shares[dlg.getId()] = new ShareForm({ content: dlg.getContent(), formName: 'Shares' });\r\n        _shares[dlg.getId()].run();\r\n    });\r\n\r\n    /**\r\n     * Clean up when the report share dialog closes.\r\n     */\r\n    $.on(document, 'reportShareUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var share = _shares[dlg.getId()];\r\n        if (share) {\r\n            share.destroy();\r\n        }\r\n        delete _shares[dlg.getId()];\r\n    });\r\n})(this.$, this.Draggabilly, this.ShareForm, this.ReportDetails);\r\n","/*!\r\n * Wraps functionality for displaying charts.\r\n */\r\n(function($, Alertify, Chart, ChartDetails, ShareForm) {\r\n    'use strict';\r\n\r\n    // Change chart settings.\r\n    Chart.defaults.global.maintainAspectRatio = false;\r\n    Chart.defaults.global.title.display = false;\r\n    Chart.defaults.global.legend.position = 'bottom';\r\n    Chart.defaults.global.legend.labels.fontSize = 16;\r\n    Chart.defaults.global.legend.labels.fontFamily = 'Calibri';\r\n    Chart.defaults.global.layout = { padding: 10 };\r\n    Chart.defaults.scale.ticks.fontFamily = 'Calibri';\r\n    Chart.defaults.scale.ticks.fontSize = 12;\r\n\r\n    var _charts = {};\r\n    var _shares = {};\r\n\r\n    /**\r\n     * Request settings to display a chart and call the method to initialize it.\r\n     */\r\n    $.on(document, 'chartLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'chart-form')) {\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-url')\r\n        }, function(data) {\r\n            var dlg = $.dialogs.getActiveDialog();\r\n            data.content = dlg.getContent();\r\n            _charts[dlg.getId()] = new ChartDetails(data);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Clean up when closing the chart dialog.\r\n     */\r\n    $.on(document, 'chartUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var chart = _charts[dlg.getId()];\r\n        if (chart) {\r\n            chart.destroy();\r\n        }\r\n        delete _charts[dlg.getId()];\r\n        document.dispatchEvent($.events.dashboardReload);\r\n    });\r\n\r\n    /**\r\n     * Load the settings to display the chart share form.\r\n     */\r\n    $.on(document, 'chartShareLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'chart-share-form')) {\r\n            return;\r\n        }\r\n\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        _shares[dlg.getId()] = new ShareForm({ content: dlg.getContent(), formName: 'Shares' });\r\n        _shares[dlg.getId()].run();\r\n    });\r\n\r\n    /**\r\n     * Clean up when the chart share dialog closes.\r\n     */\r\n    $.on(document, 'chartShareUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var share = _shares[dlg.getId()];\r\n        if (share) {\r\n            share.destroy();\r\n        }\r\n        delete _shares[dlg.getId()];\r\n    });\r\n})(this.$, this.Alertify, this.Chart, this.ChartDetails, this.ShareForm);\r\n","/*!\r\n * Wraps functionality for displaying/moving/resizing widgets and their contents.\r\n */\r\n(function($, Widget) {\r\n    'use strict';\r\n\r\n    var _columns = 20;\r\n    var _rows = 20;\r\n    var _currentPositions = null;\r\n\r\n    /**\r\n     * Initialize the dashboard.\r\n     * @param {Object} widgets - Widgets options.\r\n     */\r\n    var create = function(widgets) {\r\n        var dashboard = $.get('#dashboard');\r\n        widgets = $.coalesce(widgets, []);\r\n\r\n        var opts = makeWidgetOpts(dashboard);\r\n        if (widgets.length) {\r\n            widgets.forEach(function(x) { new Widget($.extend(x, opts)); });\r\n            $.on(window, 'keydown', checkKeyPress);\r\n            $.on(window, 'resize', $.debounce(resizeLayout, 100));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Make the extra options needed to create a widget.\r\n     * @param {Node} dashboard - Dashboard node.\r\n     * @returns {Object} Object with grid and layoutCallback.\r\n     */\r\n    var makeWidgetOpts = function(dashboard) {\r\n        dashboard = $.coalesce(dashboard, $.get('#dashboard'));\r\n        return {\r\n            grid: { columns: _columns, rows: _rows, columnWidth: dashboard.parentNode.offsetWidth / _columns, rowHeight: dashboard.parentNode.offsetHeight / _rows },\r\n            layoutCallback: $.debounce(updatePosition, 100)\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Get the config for the dashboard from the server.\r\n     */\r\n    $.on(document, 'dashboardLoad', function() {\r\n        var dash = $.get('#dashboard');\r\n        if (!dash) {\r\n            return;\r\n        }\r\n        var json = dash.getAttribute('data-json');\r\n        if (json) {\r\n            dash.removeAttribute('data-json');\r\n            create(JSON.parse(json));\r\n        } else if (dash.hasAttribute('data-url')) {\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: dash.getAttribute('data-url')\r\n            }, function(data) {\r\n                create(data);\r\n            });\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Fetch widget settings from server and add/reload/delete widgets as needed.\r\n     */\r\n    $.on(document, 'dashboardReload', function() {\r\n        var dash = $.get('#dashboard');\r\n        if (!(dash && dash.hasAttribute('data-url'))) {\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: dash.getAttribute('data-url')\r\n        }, function(widgetOpts) {\r\n            if (widgetOpts) {\r\n                var widgets = getWidgets();\r\n\r\n                widgetOpts.forEach(function(x) {\r\n                    var widgetDate = new Date(x.widgetDateUpdated);\r\n                    var oldWidget = $.findByKey(widgets, 'id', x.id);\r\n                    if (!oldWidget) {\r\n                        // newly added widget\r\n                        new Widget($.extend(x, makeWidgetOpts()));\r\n                    } else {\r\n                        // existing widget - remove this widget from the list\r\n                        widgets.splice(oldWidget._i, 1);\r\n\r\n                        if (oldWidget.initDate < widgetDate) {\r\n                            // this widget needs to be reloaded\r\n                            oldWidget.reload(null, x);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                if (widgets.length) {\r\n                    // any widgets still left need to be deleted\r\n                    widgets.forEach(function(x) { x.destroy(true); });\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Get the widget objects for the dashboard.\r\n     * @returns {Widget[]} Array of widgets.\r\n     */\r\n    var getWidgets = function() {\r\n        return $.getAll('.grid-item').map(function(x) { return x.widget; });\r\n    };\r\n\r\n    /**\r\n     * Update widget tables on window resize.\r\n     */\r\n    var resizeLayout = function() {\r\n        var grid = makeWidgetOpts().grid;\r\n        getWidgets().forEach(function(x) {\r\n            if (x.opts.isData) {\r\n                x.table.updateLayout();\r\n            }\r\n            x.setupDraggie(null, grid);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Update widget position to avoid collisions after a resize or drag.\r\n     */\r\n    var updatePosition = function() {\r\n        var sorted = getWidgets();\r\n        sorted.sort(rectSort);\r\n\r\n        var l = sorted.length, aWidget, bWidget;\r\n        for (var i = 0; i < l; i++) {\r\n            aWidget = sorted[i];\r\n            aWidget.rect.updated = false;\r\n\r\n            for (var j = 0; j < l; j++) {\r\n                if (i === j) {\r\n                    continue;\r\n                }\r\n\r\n                bWidget = sorted[j];\r\n                if (bWidget.rect.overlaps(aWidget.rect)) {\r\n                    if (bWidget.rect.y > aWidget.rect.y) {\r\n                        // need to move down\r\n                        bWidget.setLocation(bWidget.rect.x, aWidget.rect.y + aWidget.rect.height);\r\n                    } else if (aWidget.rect.x + aWidget.rect.width + bWidget.rect.width > _columns) {\r\n                        // need to move down\r\n                        bWidget.setLocation(bWidget.rect.x, aWidget.rect.y + aWidget.rect.height);\r\n                    } else {\r\n                        // safe to move right\r\n                        bWidget.setLocation(aWidget.rect.x + aWidget.rect.width, bWidget.rect.y);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        saveDashboard();\r\n    };\r\n\r\n    /**\r\n     * Sort widgets from top left to bottom right.\r\n     * @param {Widget} a - First widget to compare.\r\n     * @param {Widget} b - Second widget to compare.\r\n     * @returns {number} Negative number if a comes first, positive number if b, zero if equal.\r\n     */\r\n    var rectSort = function(a, b) {\r\n        if (a.rect.y === b.rect.y && a.rect.x === b.rect.x) {\r\n            return a.rect.updated ? -1 : b.rect.updated ? 1 : 0;\r\n        }\r\n        if (a.rect.x === b.rect.x) {\r\n            return a.rect.y - b.rect.y;\r\n        }\r\n        return a.rect.x - b.rect.x;\r\n    };\r\n\r\n    /**\r\n     * Save dashboard settings back to server.\r\n     */\r\n    var saveDashboard = function() {\r\n        var positions = getWidgets().map(function(w) {\r\n            return {\r\n                Id: w.opts.id || 0,\r\n                Width: w.rect.width || 1,\r\n                Height: w.rect.height || 1,\r\n                X: w.rect.x || 0,\r\n                Y: w.rect.y || 0\r\n            };\r\n        });\r\n\r\n        if (_currentPositions && $.equals(_currentPositions, positions)) {\r\n            return;\r\n        }\r\n        _currentPositions = positions;\r\n\r\n        var dash = $.get('#dashboard');\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: dash.getAttribute('data-save-url'),\r\n            data: { Widgets: positions },\r\n            block: false\r\n        }, null);\r\n    };\r\n\r\n    /**\r\n     * Toggle full screen on escape key.\r\n     * @param {Event} evt - Key press event.\r\n     */\r\n    var checkKeyPress = function(evt) {\r\n        evt = evt || window.event;\r\n        if (evt.keyCode === 27) {\r\n            getWidgets().filter(function(x) { return x.isFullscreen; }).forEach(function(x) { x.toggleFullScreen(); });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set up content after page has loaded.\r\n     */\r\n    var pageLoaded = function() {\r\n        $.dialogs.processContent($.get('body'));\r\n\r\n        $.on('#toggleContextHelpBtn', 'click', function(e) {\r\n            e.preventDefault();\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: this.getAttribute('href')\r\n            }, function(data) {\r\n                if (data.enabled) {\r\n                    $.addClass('#toggleContextHelpBtn', 'help-active');\r\n                } else {\r\n                    $.removeClass('#toggleContextHelpBtn', 'help-active');\r\n                }\r\n            });\r\n        });\r\n\r\n        $.on('#menuBtn', 'click', function() {\r\n            var body = $.get('body');\r\n            if ($.hasClass(body, 'toggled')) {\r\n                $.removeClass(body, 'toggled');\r\n            } else {\r\n                $.addClass(body, 'toggled');\r\n            }\r\n\r\n            // fire window resize in cross browser friendly way so tables and charts will resize\r\n            var evt = document.createEvent('HTMLEvents');\r\n            evt.initEvent('resize', true, false);\r\n            window.dispatchEvent(evt);\r\n        });\r\n\r\n        document.dispatchEvent($.events.dashboardLoad);\r\n    };\r\n\r\n    /**\r\n     * Run events needed for the inital page load.\r\n     */\r\n    if ($.resxLoaded) {\r\n        pageLoaded();\r\n    } else {\r\n        $.on(document, 'resxLoaded', pageLoaded);\r\n    }\r\n})(this.$, this.Widget);\r\n"]}