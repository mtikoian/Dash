{"version":3,"sources":["native.bootstrap.js","fecha.js","accounting.js","Help.js","Table.js","Dialog.js","Autocomplete.js","DatePicker.js","Rect.js","Draggabilly.js","Chart.js","Prism.js","CollapsibleList.js","Validator.js","colors.js","ColorPicker.js","DashChart.js","Form.js","JoinForm.js","ColumnForm.js","ShareForm.js","FilterForm.js","GroupForm.js","RangeForm.js","Dataset.js","BaseDetails.js","ReportDetails.js","ChartDetails.js","Widget.js","dialogs.js","datasets.js","reports.js","charts.js","dashboard.js"],"names":["root","factory","Tab","$","element","this","tab","get","tabs","parentNode","duration","init","prototype","actions","on","action","self","e","window","preventDefault","next","target","nextContent","getAttribute","activeTab","getActiveTab","activeContent","getActiveContent","hasClass","removeClass","getAll","addClass","setTimeout","activeTabs","length","a","b","shorten","arr","sLen","newArr","i","len","push","substr","monthUpdate","arrName","d","v","i18n","index","indexOf","charAt","toUpperCase","toLowerCase","month","pad","val","String","fecha","token","twoDigits","word","literal","noop","dayNames","monthNames","monthNamesShort","dayNamesShort","amPm","DoFn","D","formatFlags","dateObj","getDate","DD","Do","getDay","dd","ddd","dddd","M","getMonth","MM","MMM","MMMM","YY","getFullYear","YYYY","h","getHours","hh","H","HH","m","getMinutes","mm","s","getSeconds","ss","S","Math","round","getMilliseconds","SS","SSS","A","ZZ","o","getTimezoneOffset","floor","abs","l","onejan","Date","ceil","ll","q","parseFlags","day","RegExp","source","parseInt","cent","year","hour","minute","second","millisecond","isPm","minutes","parts","match","timezoneOffset","masks","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","format","mask","i18nSettings","isNaN","getTime","literals","replace","$0","$1","slice","shift","parse","dateStr","Error","isValid","dateInfo","isUtc","info","search","result","today","date","UTC","lib","version","settings","currency","symbol","decimal","thousand","precision","grouping","number","tokens","value","checkPrecision","parseFormat","isString","x","res","newFormat","exec","unformat","regex","unformatted","parseFloat","toFixed","power","pow","formatNumber","opts","extend","usePrecision","negative","base","mod","split","accounting","formatMoney","formats","isFunction","pos","neg","zero","checkCurrencyFormat","Help","Alertify","oninit","vnode","attrs","enabled","message","showHelp","alert","dialogs","focusOnClose","bind","view","children","concat","type","role","onclick","isArray","Table","pageOptions","store","key","myKey","id","isUndefined","isNull","storageFunction","localStorage","coalesce","itemsPerPage","currentStartItem","searchQuery","width","sorting","columnWidths","columns","map","c","field","processData","data","dataCallback","rows","j","_index","intColumns","dateColumns","dataDateFormat","currencyColumns","filteredTotal","loading","sort","filterResults","loadData","loadingError","ajax","method","requestMethod","url","buildParams","block","errorCallback","refresh","obj","dir","requestUsePascalCase","requestParams","StartItem","Items","Query","Sort","toPascalKeys","startItem","items","query","setCurrentStartItem","setItemsPerPage","setSearchQuery","runSearch","requestTimer","loadAllData","constructor","Array","results","filter","filterArray","pageTotal","moveToPage","changePage","page","changeSort","fieldName","dataType","findByKey","shiftKey","document","getSelection","removeAllRanges","splice","_i","compare","defaultCompare","JSON","stringify","setLayout","layoutSet","table","content","style","tableLayout","tableHeaderRow","tHead","clientWidth","offsetWidth","hWidth","tWidth","cells","forEach","onResize","cWidth","scale","pixelToFloat","updateLayout","isVisible","paddingTop","offsetHeight","colGroup","onScroll","head","scroll","offsetLeft","scrollLeft","left","onHeaderMouseDown","button","inResizeArea","cellEl","stopImmediatePropagation","resizeContext","colIndex","cellIndex","initX","clientX","scrWidth","initTblWidth","initColWidth","layoutTimer","onMouseMove","newStyle","cursor","ctx","newColWidth","max","columnMinWidth","onMouseUp","clearTimeout","newTblWidth","callback","el","tblX","offsetParent","clientLeft","nodeName","call","previousElementSibling","touchHandler","mouseEvent","simulatedEvent","createEvent","touch","changedTouches","totalDistance","lastSeenAt","y","clientY","sqrt","initMouseEvent","screenX","screenY","dispatch","getFieldValue","getDisplayValue","displayCurrencyFormat","displayDateFormat","aa","bb","hasOwnProperty","tableHeaders","class","classes","label","sortable","arrowAttrs","editable","onmousedown","ontableRefresh","ontableDestroy","destroy","onlayoutUpdate","searchable","oninput","disabled","headerButtons","attributes","resources","perPage","onchange","onscroll","colGroups","ontouchstart","ontouchend","ontouchmove","ontouchcancel","tableBodyView","tableFooterView","tableCellView","column","columnRenderer","tableRowView","colspan","tryAgain","noData","currentPage","pageDropdown","min","optionList","title","firstPage","previousPage","nextPage","lastPage","showing","off","events","resize","move","up","inputTimeout","resx","hasPositiveValue","links","link","attr","clone","href","prop","isBtn","join","handleAjaxRequest","icon","oncreate","dom","debounce","onupdate","Dialog","basic","buttons","_buttons","onOkay","onCancel","onShow","parent","elements","container","changed","run","ok","cancel","close","_keys","ENTER","ESC","tryGetValue","name","pop","substring","trySetValue","onkeydown","checkKey","tabindex","contentView","component","trust","node","firstElementChild","hasAttribute","redraw","createElement","body","appendChild","mount","processContent","checkEvent","getId","getContainer","getContent","getTarget","findForm","matches","focusNode","form","validateForm","formData","serializeForm","__RequestVerificationToken","responseData","parentDlg","findDialogById","parentTarget","closeParent","dialogUrl","sendAjaxRequest","confirm","focus","keyCode","attrName","ev","bracketRegEx","apply","options","selected","checked","pieces","setTabStatus","closest","toggleClass","formValidate","mErrors","error","tableDestroy","removeChild","removeDialog","refreshTable","Autocomplete","DOWN","TAB","UP","valueChanged","placeholder","active","required","onSelect","list","filteredList","selectedIndex","autocomplete","setList","onKeyDown","selectItem","stopPropagation","selectIndex","onInput","onBlur","ul","scrollIntoView","item","input","highlightItem","text","regExpEscape","trim","hasValue","aria-autocomplete","onblur","aria-selected","DatePicker","chooseDate","props","box","selectedDate","textContent","setFullYear","setDate","relatedTarget","dismissAndCommit","prevNext","delta","newDate","setMonth","pushToLastDay","lastDateInMonth","over","under","adjustedProps","oldDate","stringsForLocale","locale","_months","_days","toLocaleDateString","weekday","days","months","classForBox","SPACE","hours","prevNextTitles","weekStart","formatOptions","Header","theseMonths","MonthView","prevDates","firstDay","array","lastDate","daysFromLastMonth","theseDates","daysFromThisMonth","nextDates","prev","these","n","daysFromNextMonth","theseWeekdays","_","idx","wrapAround","setHours","setMinutes","YearView","DecadeView","decade","start","yearsForDecade","Editor","requestAnimationFrame","classList","add","onbeforeremove","remove","Promise","done","localize","loc","isNumber","strings","now","defaultDate","state","onbeforeupdate","chosen","showEditor","KeyboardEvent","readonly","Rect","height","updated","overlaps","rect","thisRight","thisBottom","rectRight","rectBottom","getSize","getStyleSize","num","elem","isSetup","div","padding","borderStyle","borderWidth","boxSizing","documentElement","getComputedStyle","isBoxSizeOuter","setup","isNode","display","size","innerWidth","innerHeight","outerWidth","outerHeight","measurementsLength","measurements","getZeroSize","isBorderBox","measurement","paddingWidth","paddingLeft","paddingRight","paddingHeight","paddingBottom","marginWidth","marginLeft","marginRight","marginHeight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderHeight","borderTopWidth","borderBottomWidth","isBorderBoxSizeOuter","styleWidth","styleHeight","EvEmitter","eventName","listener","_events","listeners","emitEvent","args","Unipointer","proto","Object","create","bindStartEvent","_bindStartEvent","unbindStartEvent","isBind","bindMethod","navigator","pointerEnabled","msPointerEnabled","handleEvent","event","getTouch","touches","pointerIdentifier","_pointerDown","onMSPointerDown","onpointerdown","pointer","isPointerDown","undefined","pointerId","identifier","pointerDown","_bindPostStartEvents","postStartEvents","mousedown","touchstart","pointerdown","MSPointerDown","addEventListener","_boundPointerEvents","_unbindPostStartEvents","removeEventListener","onmousemove","_pointerMove","onMSPointerMove","onpointermove","pointerMove","onmouseup","_pointerUp","onMSPointerUp","onpointerup","_pointerDone","pointerUp","pointerDone","onMSPointerCancel","onpointercancel","_pointerCancel","pointerCancel","getPointerPoint","pageX","pageY","Unidragger","bindHandles","_bindHandles","unbindHandles","binderExtra","handle","handles","_dragPointerDown","focused","activeElement","blur","pointerDownPoint","canPreventDefaultOnPointerDown","moveVector","_dragPointerMove","_dragMove","movePoint","isDragging","hasDragStarted","_dragStart","_dragPointerUp","_dragEnd","_staticClick","dragStartPoint","isPreventingClicks","dragStart","dragMove","dragEnd","isIgnoringMouseUp","staticClick","Draggabilly","_create","applyGrid","grid","applyMinZero","drag","lastTime","webkitRequestAnimationFrame","mozRequestAnimationFrame","currTime","timeToCall","transformProperty","transform","positionValues","relative","absolute","fixed","position","_getPosition","startPoint","dragPoint","startPosition","enable","setHandles","dispatchEvent","_getPositionCoord","top","_addTransformPosition","styleSide","measure","parentSize","matrixValues","xIndex","translateX","translateY","isEnabled","measureContainment","setLeftTop","animate","containment","elemSize","containerSize","elemRect","getBoundingClientRect","containerRect","borderSizeX","borderSizeY","relativeStartPosition","containSize","dragX","dragY","gridX","gridY","containDrag","axis","minZero","positionDrag","disable","removeAttribute","f","exports","module","define","amd","global","Chart","t","r","u","require","code","1","getRgba","string","rgb","colorNames","getHsla","alpha","getHwb","rgbaString","rgba","percentaString","hslaString","hsla","hexDouble","str","toString","getRgb","getHsl","getAlpha","vals","hexString","rgbString","percentString","hslString","hwbString","hwb","keyword","reverseNames","5","2","convert","Color","valid","values","hsl","hsv","cmyk","setValues","red","lightness","w","whiteness","cyan","setSpace","arguments","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","p","w1","w2","toJSON","console","spaces","maxes","getValues","space","chans","capped","sname","svalues","4","3","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","k","rgb2keyword","reverseKeywords","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","hwb2rgb","wh","bl","cmyk2rgb","xyz2rgb","xyz2lab","lab2xyz","lab","y2","lab2lch","hr","atan2","PI","lab2rgb","lch2lab","lch","cos","sin","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","conversions","Converter","func","arg","pair","from","to","convs","routeSpace","fspace","6","helpers","defaults","Element","Interaction","layouts","platform","plugins","Ticks","register","initialize","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","31","36","39","40","44","45","46","7","8","9","Bar","context","config","Doughnut","Line","_set","hover","mode","scales","xAxes","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","yAxes","rectangle","borderSkipped","tooltips","callbacks","yLabel","labels","datasets","datasetIndex","xLabel","controllers","bar","DatasetController","dataElementType","Rectangle","meta","getMeta","stack","getDataset","update","reset","ilen","rects","_ruler","getRuler","updateElement","chart","dataset","custom","rectangleOptions","_xScale","getScaleForId","xAxisID","_yScale","yAxisID","_datasetIndex","_model","datasetLabel","backgroundColor","valueAtIndexOrDefault","borderColor","updateElementGeometry","pivot","model","vscale","getValueScale","getBasePixel","horizontal","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","center","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","last","stacked","stacks","getDatasetMeta","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","isNullOrUndef","barThickness","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","count","computeFitCategoryTraits","stackIndex","valueOrDefault","maxBarThickness","Infinity","draw","canvas","clipArea","chartArea","unclipArea","setHoverStyle","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","rectangleElementOptions","horizontalBar","animation","animateRotate","animateScale","legendCallback","legend","generateLabels","ds","arc","arcOpts","fillStyle","strokeStyle","lineWidth","hidden","onClick","legendItem","cutoutPercentage","rotation","circumference","tooltipItem","dataLabel","doughnut","pie","Arc","linkScales","getRingIndex","ringIndex","me","availableWidth","right","availableHeight","bottom","minSize","startAngle","endAngle","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","each","animationOpts","centerX","centerY","calculateCircumference","arcs","hoverWidth","_chart","showLines","spanGaps","lineEnabled","showLine","line","datasetElementType","Point","points","lineElementOptions","tension","lineTension","_scale","_children","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","fill","steppedLine","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","point","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","yScale","xScale","pointOptions","radius","pointRadius","hitRadius","pointHitRadius","NaN","calculatePointY","skip","pointStyle","dsMeta","sumPos","sumNeg","stackedRightValue","Number","rightValue","capControlPoint","pt","controlPoints","area","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","controlPointNextY","capBezierPoints","hoverRadius","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","easing","onProgress","onComplete","Animation","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","framesToDrop","advance","endTime","defineProperty","set","positionIsHorizontal","types","instances","construct","configMerge","initConfig","acquireContext","uid","aspectRatio","_bufferedRender","notify","retinaScale","devicePixelRatio","bindEvents","responsive","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","clear","stop","silent","maintainAspectRatio","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","responsiveAnimationDuration","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","keys","reduce","dtype","dposition","isDefault","scaleType","scaleClass","scaleService","getScaleConstructor","mergeTicksOptions","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","ControllerClass","resetElements","tooltip","newOptions","removeBox","_options","updateConfig","_invalidate","_data","buildOrUpdateElements","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","effects","stepDecimal","easingValue","transition","boxes","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","modes","single","getElementsAtEvent","intersect","getElementsAtXAxis","getElementsAtEventForMode","getDatasetAtEvent","_meta","generateLegend","unbindEvents","releaseContext","toBase64Image","toDataURL","Tooltip","_chartInstance","_listeners","eventHandler","updateHoverStyle","_start","bufferedRequest","animationDuration","hoverOptions","onHover","native","arrayEquals","Controller","unlistenArrayEvents","stub","_chartjs","arrayEvents","addElements","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","configurable","enumerable","object","listenArrayEvents","resyncElements","elementOpts","numMeta","numData","insertElements","onDataPush","onDataPop","onDataShift","onDataSplice","onDataUnshift","inherits","scope","merge","color","configuration","_view","ease","actual","origin","c0","c1","isFinite","interpolate","tooltipPosition","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","constrainedNode","constrainedContainer","hasCNode","hasCContainer","infinity","POSITIVE_INFINITY","merger","tval","sval","scaleMerge","getScaleDefaults","_merger","slen","where","collection","filterCallback","filtered","findNextWhere","arrayToSearch","startIndex","currentItem","findPreviousWhere","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","log10","exponent","log","LOG10E","powerOf10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distance","distanceBetweenPoints","pt1","pt2","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","current","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","alphaK","betaK","tauK","squaredMagnitude","deltaX","loop","niceNum","fraction","oRequestAnimationFrame","msRequestAnimationFrame","getRelativePosition","evt","mouseX","mouseY","originalEvent","currentTarget","srcElement","boundingRect","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","cw","clientHeight","ch","property","currentStyle","getPropertyValue","forceRatio","pixelRatio","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","cache","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","defaultColor","colorValue","CanvasPattern","parseVisibleItems","handler","jlen","getIntersectItems","inRange","getNearestItems","distanceMetric","minDistance","nearestItems","getCenterPoint","getDistanceMetricForAxis","useX","useY","deltaY","indexMode","x-axis","nearest","ret","getArea","intersectsItem","inXRange","inYRange","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","layout","filterByPosition","sortByWeight","reverse","_tmpIndex_","v0","v1","addBox","fullWidth","layoutItem","configure","fitBox","minBoxSize","minBoxSizes","minBox","scaleMargin","totalLeftBoxesWidth","maxHorizontalLeftPadding","totalRightBoxesWidth","maxHorizontalRightPadding","chartWidth","maxChartAreaWidth","chartHeight","maxChartAreaHeight","placeBox","leftPadding","rightPadding","totalTopBoxesHeight","layoutOptions","toPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","totalBottomBoxesHeight","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","_plugins","_cacheId","plugin","unregister","hook","descriptor","params","descriptors","$plugins","labelsFromTicks","getLineValue","lineValue","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","formatters","minor","major","computeTextSize","tick","parseFontOptions","globalDefaults","fontSize","family","parseLineHeight","toLineHeight","Scale","_ticks","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","rawValue","getLabelForIndex","getValueForPixel","pixel","finalVal","getPixelForDecimal","valueOffset","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","optionMajorTicks","isRotated","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","zeroLineIndex","tx1","ty1","tx2","ty2","x1","y1","x2","labelX","labelY","textAlign","textBaseline","labelYOffset","xLineValue","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","save","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","constructors","registerScaleType","scaleConstructor","scaleDefaults","updateScaleDefaults","additions","linear","tickValue","logDelta","tickString","numDecimal","logarithmic","remain","toExponential","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","createTooltipItem","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","dataPoints","vm","paddingAndSize","radiusAndPadding","getBackgroundPoint","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","quadraticCurveTo","closePath","hasTooltipContent","average","eventPosition","nearestElement","tp","27","inLabelRange","chartX","chartY","pointRelativePosition","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","28","currentVM","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","29","xRange","drawPoint","30","isVertical","getBarBounds","halfWidth","halfHeight","cornerAt","corners","startCorner","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corner","bounds","32","clearRect","roundedRect","rx","ry","edgeLength","xOffset","yOffset","SQRT2","leftX","topY","sideSize","drawImage","clip","flip","bezierCurveTo","drawRoundedRectangle","33","isObject","defaultValue","fn","thisArg","loopable","a0","a1","klen","_mergerIf","mergeIf","sources","setFn","extensions","ChartElement","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","34","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","35","resolve","inputs","37","getContext","38","readUsedSize","eventListenerOptions","nativeEvent","addResizeListener","expando","EXPANDO_KEY","resizer","cls","CSS_PREFIX","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollTop","createResizer","ticking","throttled","proxy","renderProxy","animationName","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","reflow","CSS_RENDER_MONITOR","watchForRender","insertBefore","firstChild","removeResizeListener","unwatchForRender","EVENT_TYPES","touchmove","touchend","pointerenter","pointermove","pointerup","pointerleave","pointerout","supports","passive","_enabled","getElementById","renderHeight","renderWidth","initial","displayWidth","displayHeight","initCanvas","setAttribute","proxies","fromNativeEvent","addEvent","removeEvent","implementation","filler","41","42","43","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","getBasePosition","resolveTarget","propagate","visited","visible","createMapper","mappers","isDrawable","drawArea","curve0","curve1","len0","len1","boundary","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","span","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","createNewLegendAndAttach","legendOpts","Legend","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","_element","beforeInit","afterEvent","createNewTitleBlockAndAttach","titleOpts","Title","titleBlock","textSize","titleX","titleY","titleFont","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","LinearScaleBase","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","tickFontSize","handleDirectionalChanges","innerDimension","ticksAsNumbers","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","stepSize","fixedStepSize","generationOptions","dataRange","spacing","niceRange","niceMin","niceMax","numSpaces","generateTicks","lang","prism","util","encode","Token","alias","languages","redef","inside","insert","grammar","newToken","DFS","highlightAll","async","querySelectorAll","highlightElement","language","test","env","hooks","Worker","worker","filename","onmessage","highlightedCode","postMessage","immediateClose","highlight","tokenize","strarr","rest","tokenloop","patterns","pattern","lookbehind","lookbehindLength","lastIndex","wrapped","all","tag","aliases","Prism","sql","comment","variable","function","boolean","operator","punctuation","CollapsibleList","lis","createClickListener","toggle","pi","checkedRelative","relatives","forceOpen","open","uls","li","Validator","errorMsgs","_errors","targetElement","resetAll","validateInput","onSubmit","validate","minlength","VALIDATORS","checkValidity","setCustomValidity","isValidatableInput","defaultPrevented","errors","runValidators","showErrors","clearErrors","inputSelector","visibility","tagName","validator","validationMessage","group","errorElement","errHtml","hasErrors","colors","hex2rgb","hex","rgb2hex","ColorPicker","trigger","setRed","setColor","setGreen","setBlue","withAttr","DashChart","showLegend","dataFn","errorFn","toggleExportFn","randomWithin","random","randomColor","randomColors","cnt","parseColor","show","hide","ranges","some","yTitle","xType","currencyFormat","dateFormat","chartType","isRadial","yType","chartData","Form","records","wantsHelp","appendRecord","deleteRecord","confirmDelete","confirmDeleteAll","areYouSure","moveUp","moveDown","help","addedCount","targetVal","setter","addRecord","newRecord","unshift","deleteFn","afterDeleteFn","deleteAllRecords","hasRecords","keyInput","withHelp","helpBody","innerContent","withError","requirePositive","isDate","withDisabled","isDisabled","withChecked","isChecked","withOptions","selectedValue","valueKey","textKey","buttonView","includeMove","btns","JoinForm","joinTypeId","tableName","columnUpdateFn","joins","joinTypes","sourceFn","setJoinTable","isProc","record","ColumnForm","columnName","dataTypeId","derived","filterTypeId","filterQuery","isParam","isExpanded","dataTypes","filterTypes","columnFn","selectedSourceFn","columnTitleSort","aTitle","bTitle","toggleExpanded","checkStatus","database","primarySource","importColumns","databaseId","newColumns","newRecords","existingColumns","colName","success","import","readOnly","for","ShareForm","formOpts","userId","roleId","shares","users","userList","roles","roleList","formName","userSelectAttr","share","roleSelectAttr","FilterForm","columnId","operatorId","criteria","criteria2","allowEdit","filters","reportId","saveFiltersUrl","filterOperators","filterOperatorIds","dateOperators","lookups","refreshFn","boolOptions","setColumnId","setOperator","setCriteria","criteriaJson","saveFilters","Id","Filters","criteriaView","select","isRange","dateInterval","equal","multiple","lookup","numeric","isDatePicker","attrs2","criteriaArr","operatorView","filterView","filterColumns","GroupForm","displayOrder","groups","saveGroupsUrl","aggregator","aggregatorId","aggregators","saveGroups","GroupAggregator","Groups","setAggregator","groupView","RangeForm","xAxisColumnId","yAxisColumnId","dateIntervalId","chartId","saveRangesUrl","dateIntervals","reports","processJsonFn","canExportFn","saveRanges","Ranges","makeChart","chartContent","dashChart","exportChart","chartContainer","submit","setReport","rangeView","report","xColumns","yColumns","dateIntervalDisabled","inputsDisabled","col","Dataset","sourceList","columnList","formChanged","selectedSourceList","checkType","loadSourceList","loadColumnList","joinForm","getSourceList","columnForm","getColumnList","getSelectedSourceList","onChange","primary","updateColumnList","updateSelectedSources","equals","updateList","DatabaseId","Tables","typeId","tables","BaseDetails","openDialog","outerHTML","initDate","processJson","json","updatedDate","updateDate","dataSql","setSql","dataError","countSql","countError","ReportDetails","reportColumns","saveUrl","saveColumnsUrl","saveStorageFunc","previousColumnWidths","Columns","ReportWidth","dataUrl","Save","exportUrl","rowLimit","sortColumns","filterForm","groupForm","tableRefresh","ChartDetails","enableExport","rangeForm","canExport","toggleExport","chartLoad","Widget","buildClassList","widget","isData","refreshSeconds","baseUrl","interval","isFullscreen","dragMargin","tableOpts","reportRowLimit","reportWidth","onError","setupDraggie","setInterval","setText","firstRender","createNode","forceRefresh","toggleFullScreen","deleteWidget","toLocaleTimeString","moveDraggie","columnWidth","rowHeight","stopDrag","resizeDraggie","initResize","stopResize","setLocation","layoutCallback","styles","setSize","reload","showMsg","hasOpenDialog","layoutUpdate","clearInterval","updateStyle","totalDestruction","fullScreenIcon","_contentActions","selector","inputReplace","_dialogs","dlgs","getActiveDialog","dlg","dismissAll","prompt","checkPrompt","promptValue","encodeURIComponent","updateObj","targetSelector","dialog","html","activeDlg","elems","isEvent","act","activeDialog","dashboard","_datasets","_reports","_shares","startDrag","newPos","offsetTop","leftItems","columnSort","rightItems","updateColumn","dashboardReload","_charts","_currentPositions","widgets","makeWidgetOpts","checkKeyPress","resizeLayout","updatePosition","dash","widgetOpts","getWidgets","widgetDate","widgetDateUpdated","oldWidget","sorted","rectSort","aWidget","bWidget","saveDashboard","positions","Width","Height","X","Y","Widgets","pageLoaded","dashboardLoad","resxLoaded"],"mappings":"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","file":"modules.js","sourcesContent":["/*!\r\n * Native Javascript for Bootstrap 3\r\n * by dnp_theme\r\n * https://github.com/thednp/bootstrap.native\r\n *\r\n * Modified to use Dash's core library, and remove unneeded functionality.\r\n */\r\n(function(root, factory) {\r\n    root.Tab = factory(root.$);\r\n})(this, function($) {\r\n    /**\r\n     * Declare Tab class.\r\n     * @param {Node} element - Node to trigger the tab.\r\n     */\r\n    var Tab = function(element) {\r\n        this.tab = $.get(element);\r\n        this.tabs = this.tab.parentNode.parentNode;\r\n        this.duration = 100;\r\n        this.init();\r\n    };\r\n\r\n    Tab.prototype = {\r\n        init: function() {\r\n            this.actions();\r\n            $.on(this.tab, 'click', this.action, false);\r\n        },\r\n\r\n        actions: function() {\r\n            var self = this;\r\n\r\n            /**\r\n             * Display content of a tab.\r\n             * @param {Event} e - Event that triggered the tab change.\r\n             */\r\n            this.action = function(e) {\r\n                e = e || window.e; e.preventDefault();\r\n                var next = e.target; //the tab we clicked is now the next tab\r\n                var nextContent = $.get(next.getAttribute('href')); //this is the actual object, the next tab content to activate\r\n\r\n                // get current active tab and content\r\n                var activeTab = self.getActiveTab();\r\n                var activeContent = self.getActiveContent();\r\n\r\n                if (!$.hasClass(next.parentNode, 'active')) {\r\n                    // toggle \"active\" class name\r\n                    $.removeClass($.getAll('a', activeTab)[0], 'active');\r\n                    $.addClass(next, 'active');\r\n\r\n                    //1. hide current active content first\r\n                    $.removeClass(activeContent, 'show');\r\n\r\n                    setTimeout(function() {\r\n                        //2. toggle current active content from view\r\n                        $.removeClass(activeContent, 'active');\r\n                        $.addClass(nextContent, 'active');\r\n                    }, self.duration);\r\n                    setTimeout(function() {\r\n                        //3. show next active content\r\n                        $.addClass(nextContent, 'show');\r\n                    }, self.duration * 2);\r\n                }\r\n            };\r\n\r\n            /**\r\n            * Gets the currently active tab.\r\n            * @returns {Node} Active tab element.\r\n            */\r\n            this.getActiveTab = function() {\r\n                var activeTabs = $.getAll('.active', this.tabs);\r\n                if (activeTabs.length === 1) {\r\n                    return activeTabs[0].parentNode;\r\n                } else if (activeTabs.length > 1) {\r\n                    return activeTabs[activeTabs.length - 1].parentNode;\r\n                }\r\n            };\r\n\r\n            /**\r\n            * Get the currently active tab content.\r\n            * @returns {Node} Active content element\r\n            */\r\n            this.getActiveContent = function() {\r\n                var a = this.getActiveTab();\r\n                var b = a && $.getAll('a', a);\r\n                return b.length && $.get(b[0].getAttribute('href'));\r\n            };\r\n        }\r\n    };\r\n\r\n    return Tab;\r\n});\r\n","/*!\r\n * Lightweight date library\r\n * https://github.com/taylorhakes/fecha\r\n *\r\n * Modified to add date manipulation methods similar to moment.js.\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Parse or format dates\r\n     * @class fecha\r\n     */\r\n    var fecha = {};\r\n    var token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\r\n    var twoDigits = /\\d\\d?/;\r\n    var threeDigits = /\\d{3}/;\r\n    var fourDigits = /\\d{4}/;\r\n    var word = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\r\n    var literal = /\\[([^]*?)\\]/gm;\r\n    var noop = function() { };\r\n\r\n    /**\r\n     * Abbreviate a string.\r\n     * @param {string[]} arr - Array of strings to shorten.\r\n     * @param {number} sLen - Max length of new strings.\r\n     * @returns {string[]} New array of strings.\r\n     */\r\n    function shorten(arr, sLen) {\r\n        var newArr = [];\r\n        for (var i = 0, len = arr.length; i < len; i++) {\r\n            newArr.push(arr[i].substr(0, sLen));\r\n        }\r\n        return newArr;\r\n    }\r\n\r\n    /**\r\n     * Update months names based on i18n resource.\r\n     * @param {string[]} arrName - Array of month names.\r\n     * @returns {string[]} Updated array of month names.\r\n     */\r\n    function monthUpdate(arrName) {\r\n        return function(d, v, i18n) {\r\n            var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());\r\n            if (~index) {\r\n                d.month = index;\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Left pad a number to length len using zeros.\r\n     * @param {number|string} val - Value to pad.\r\n     * @param {number} len - Length to pad number to.\r\n     * @returns {string} Zero padded string.\r\n     */\r\n    function pad(val, len) {\r\n        val = String(val);\r\n        len = len || 2;\r\n        while (val.length < len) {\r\n            val = '0' + val;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    var monthNamesShort = shorten(monthNames, 3);\r\n    var dayNamesShort = shorten(dayNames, 3);\r\n    fecha.i18n = {\r\n        dayNamesShort: dayNamesShort,\r\n        dayNames: dayNames,\r\n        monthNamesShort: monthNamesShort,\r\n        monthNames: monthNames,\r\n        amPm: ['am', 'pm'],\r\n        DoFn: function DoFn(D) {\r\n            return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];\r\n        }\r\n    };\r\n\r\n    var formatFlags = {\r\n        D: function(dateObj) {\r\n            return dateObj.getDate();\r\n        },\r\n        DD: function(dateObj) {\r\n            return pad(dateObj.getDate());\r\n        },\r\n        Do: function(dateObj, i18n) {\r\n            return i18n.DoFn(dateObj.getDate());\r\n        },\r\n        d: function(dateObj) {\r\n            return dateObj.getDay();\r\n        },\r\n        dd: function(dateObj) {\r\n            return pad(dateObj.getDay());\r\n        },\r\n        ddd: function(dateObj, i18n) {\r\n            return i18n.dayNamesShort[dateObj.getDay()];\r\n        },\r\n        dddd: function(dateObj, i18n) {\r\n            return i18n.dayNames[dateObj.getDay()];\r\n        },\r\n        M: function(dateObj) {\r\n            return dateObj.getMonth() + 1;\r\n        },\r\n        MM: function(dateObj) {\r\n            return pad(dateObj.getMonth() + 1);\r\n        },\r\n        MMM: function(dateObj, i18n) {\r\n            return i18n.monthNamesShort[dateObj.getMonth()];\r\n        },\r\n        MMMM: function(dateObj, i18n) {\r\n            return i18n.monthNames[dateObj.getMonth()];\r\n        },\r\n        YY: function(dateObj) {\r\n            return String(dateObj.getFullYear()).substr(2);\r\n        },\r\n        YYYY: function(dateObj) {\r\n            return dateObj.getFullYear();\r\n        },\r\n        h: function(dateObj) {\r\n            return dateObj.getHours() % 12 || 12;\r\n        },\r\n        hh: function(dateObj) {\r\n            return pad(dateObj.getHours() % 12 || 12);\r\n        },\r\n        H: function(dateObj) {\r\n            return dateObj.getHours();\r\n        },\r\n        HH: function(dateObj) {\r\n            return pad(dateObj.getHours());\r\n        },\r\n        m: function(dateObj) {\r\n            return dateObj.getMinutes();\r\n        },\r\n        mm: function(dateObj) {\r\n            return pad(dateObj.getMinutes());\r\n        },\r\n        s: function(dateObj) {\r\n            return dateObj.getSeconds();\r\n        },\r\n        ss: function(dateObj) {\r\n            return pad(dateObj.getSeconds());\r\n        },\r\n        S: function(dateObj) {\r\n            return Math.round(dateObj.getMilliseconds() / 100);\r\n        },\r\n        SS: function(dateObj) {\r\n            return pad(Math.round(dateObj.getMilliseconds() / 10), 2);\r\n        },\r\n        SSS: function(dateObj) {\r\n            return pad(dateObj.getMilliseconds(), 3);\r\n        },\r\n        a: function(dateObj, i18n) {\r\n            return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];\r\n        },\r\n        A: function(dateObj, i18n) {\r\n            return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();\r\n        },\r\n        ZZ: function(dateObj) {\r\n            var o = dateObj.getTimezoneOffset();\r\n            return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);\r\n        },\r\n        l: function(dateObj) {\r\n            var onejan = new Date(dateObj.getFullYear(), 0, 1);\r\n            return Math.ceil((((dateObj - onejan) / 86400000) + onejan.getDay() + 1) / 7);\r\n        },\r\n        ll: function(dateObj) {\r\n            var onejan = new Date(dateObj.getFullYear(), 0, 1);\r\n            return pad(Math.ceil((((dateObj - onejan) / 86400000) + onejan.getDay() + 1) / 7), 2);\r\n        },\r\n        q: function(dateObj) {\r\n            return (Math.ceil(dateObj.getMonth() + 1 / 3));\r\n        }\r\n    };\r\n\r\n    var parseFlags = {\r\n        D: [twoDigits, function(d, v) {\r\n            d.day = v;\r\n        }],\r\n        Do: [new RegExp(twoDigits.source + word.source), function(d, v) {\r\n            d.day = parseInt(v, 10);\r\n        }],\r\n        M: [twoDigits, function(d, v) {\r\n            d.month = v - 1;\r\n        }],\r\n        YY: [twoDigits, function(d, v) {\r\n            var da = new Date(), cent = +('' + da.getFullYear()).substr(0, 2);\r\n            d.year = '' + (v > 68 ? cent - 1 : cent) + v;\r\n        }],\r\n        h: [twoDigits, function(d, v) {\r\n            d.hour = v;\r\n        }],\r\n        m: [twoDigits, function(d, v) {\r\n            d.minute = v;\r\n        }],\r\n        s: [twoDigits, function(d, v) {\r\n            d.second = v;\r\n        }],\r\n        YYYY: [fourDigits, function(d, v) {\r\n            d.year = v;\r\n        }],\r\n        S: [/\\d/, function(d, v) {\r\n            d.millisecond = v * 100;\r\n        }],\r\n        SS: [/\\d{2}/, function(d, v) {\r\n            d.millisecond = v * 10;\r\n        }],\r\n        SSS: [threeDigits, function(d, v) {\r\n            d.millisecond = v;\r\n        }],\r\n        d: [twoDigits, noop],\r\n        ddd: [word, noop],\r\n        MMM: [word, monthUpdate('monthNamesShort')],\r\n        MMMM: [word, monthUpdate('monthNames')],\r\n        a: [word, function(d, v, i18n) {\r\n            var val = v.toLowerCase();\r\n            if (val === i18n.amPm[0]) {\r\n                d.isPm = false;\r\n            } else if (val === i18n.amPm[1]) {\r\n                d.isPm = true;\r\n            }\r\n        }],\r\n        ZZ: [/[+-]\\d\\d:?\\d\\d/, function(d, v) {\r\n            var parts = (v + '').match(/([+-]|\\d\\d)/gi), minutes;\r\n\r\n            if (parts) {\r\n                minutes = +(parts[1] * 60) + parseInt(parts[2], 10);\r\n                d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;\r\n            }\r\n        }]\r\n    };\r\n    parseFlags.dd = parseFlags.d;\r\n    parseFlags.dddd = parseFlags.ddd;\r\n    parseFlags.DD = parseFlags.D;\r\n    parseFlags.mm = parseFlags.m;\r\n    parseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;\r\n    parseFlags.MM = parseFlags.M;\r\n    parseFlags.ss = parseFlags.s;\r\n    parseFlags.A = parseFlags.a;\r\n\r\n    // Some common format strings\r\n    fecha.masks = {\r\n        'default': 'ddd MMM DD YYYY HH:mm:ss',\r\n        shortDate: 'M/D/YY',\r\n        mediumDate: 'MMM D, YYYY',\r\n        longDate: 'MMMM D, YYYY',\r\n        fullDate: 'dddd, MMMM D, YYYY',\r\n        shortTime: 'HH:mm',\r\n        mediumTime: 'HH:mm:ss',\r\n        longTime: 'HH:mm:ss.SSS'\r\n    };\r\n\r\n    /***\r\n     * Format a date.\r\n     * @method format\r\n     * @param {Date|number} dateObj - JS date to format.\r\n     * @param {string} mask - New format for the date, i.e. 'mm-dd-yy' or 'shortDate'.\r\n     * @param {Object} i18nSettings - i18n resources.\r\n     * @return {string} Formatted date string.\r\n     */\r\n    fecha.format = function(dateObj, mask, i18nSettings) {\r\n        var i18n = i18nSettings || fecha.i18n;\r\n\r\n        if (typeof dateObj === 'number') {\r\n            dateObj = new Date(dateObj);\r\n        }\r\n\r\n        if (!dateObj.getMonth || isNaN(dateObj.getTime())) {\r\n            return '';\r\n            // throw new Error('Invalid Date in fecha.format');\r\n        }\r\n\r\n        mask = fecha.masks[mask] || mask || fecha.masks['default'];\r\n\r\n        var literals = [];\r\n\r\n        // Make literals inactive by replacing them with ??\r\n        mask = mask.replace(literal, function($0, $1) {\r\n            literals.push($1);\r\n            return '??';\r\n        });\r\n        // Apply formatting rules\r\n        mask = mask.replace(token, function($0) {\r\n            return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);\r\n        });\r\n        // Inline literal values back into the formatted value\r\n        return mask.replace(/\\?\\?/g, function() {\r\n            return literals.shift();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Parse a date string into an object.\r\n     * @method parse\r\n     * @param {string} dateStr - Date string\r\n     * @param {string} format - Date parse format\r\n     * @param {Object} i18nSettings - i18n resources.\r\n     * @returns {Date|boolean} JS date object or false.\r\n     */\r\n    fecha.parse = function(dateStr, format, i18nSettings) {\r\n        var i18n = i18nSettings || fecha.i18n;\r\n\r\n        if (typeof format !== 'string') {\r\n            throw new Error('Invalid format in fecha.parse');\r\n        }\r\n\r\n        format = fecha.masks[format] || format;\r\n\r\n        // Avoid regular expression denial of service, fail early for really long strings\r\n        // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\r\n        if (!dateStr || dateStr.length > 1000) {\r\n            return false;\r\n        }\r\n\r\n        var isValid = true;\r\n        var dateInfo = {};\r\n        var isUtc = false;\r\n\r\n        // Special handler for UTC. String will end in a Z but with no offset specified (ie '-0400')\r\n        if (dateStr.indexOf('Z') === dateStr.length - 1 && dateStr.indexOf('ZZ') === -1) {\r\n            dateStr = dateStr.substr(0, dateStr.length - 2);\r\n            dateInfo.timezoneOffset = new Date().getTimezoneOffset();\r\n            isUtc = true;\r\n        }\r\n\r\n        format.replace(token, function($0) {\r\n            if (parseFlags[$0]) {\r\n                var info = parseFlags[$0];\r\n                var index = dateStr.search(info[0]);\r\n                if (!~index) {\r\n                    isValid = false;\r\n                } else {\r\n                    dateStr.replace(info[0], function(result) {\r\n                        info[1](dateInfo, result, i18n);\r\n                        dateStr = dateStr.substr(index + result.length);\r\n                        return result;\r\n                    });\r\n                }\r\n            }\r\n\r\n            return parseFlags[$0] ? '' : $0.slice(1, $0.length - 1);\r\n        });\r\n\r\n        if (!isValid) {\r\n            return false;\r\n        }\r\n\r\n        var today = new Date();\r\n        if (dateInfo.isPm === true && typeof dateInfo.hour !== 'undefined' && +dateInfo.hour !== 12) {\r\n            dateInfo.hour = +dateInfo.hour + 12;\r\n        } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {\r\n            dateInfo.hour = 0;\r\n        }\r\n\r\n        var date;\r\n        if (typeof dateInfo.timezoneOffset !== 'undefined') {\r\n            if (!isUtc) {\r\n                dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;\r\n            }\r\n            date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\r\n                dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));\r\n        } else {\r\n            date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\r\n                dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);\r\n        }\r\n        return date;\r\n    };\r\n\r\n    $.fecha = fecha;\r\n})(this.$);\r\n","/*!\r\n * accounting.js v0.4.2\r\n * Copyright 2014 Open Exchange Rates\r\n *\r\n * Freely distributable under the MIT license.\r\n * Portions of accounting.js are inspired or borrowed from underscore.js\r\n *\r\n * Full details and documentation:\r\n * http://openexchangerates.github.io/accounting.js/\r\n */\r\n\r\n(function($) {\r\n    /**\r\n     * Create the local library object, to be exported or referenced globally later\r\n     */\r\n    var lib = {\r\n        version: '0.4.2',\r\n        settings: {\r\n            currency: {\r\n                symbol: '$',\t\t// default currency symbol is '$'\r\n                format: '%s%v',\t    // controls output: %s = symbol, %v = value (can be object, see docs)\r\n                decimal: '.',\t\t// decimal point separator\r\n                thousand: ',',\t\t// thousands separator\r\n                precision: 2,\t\t// decimal places\r\n                grouping: 3\t\t    // digit grouping (not implemented yet)\r\n            },\r\n            number: {\r\n                precision: 0,\t\t// default precision on numbers is 0\r\n                grouping: 3,\t\t// digit grouping (not implemented yet)\r\n                thousand: ',',\r\n                decimal: '.'\r\n            }\r\n        }\r\n    };\r\n\r\n    var tokens = {\r\n        symbol: /\\{s:(.?)\\}/i,\r\n        decimal: /\\[d:(.?)\\]/i,\r\n        thousand: /\\[t:(.?)\\]/i,\r\n        precision: /\\[p:(.?)\\]/i,\r\n        value: /\\{#+\\}/i\r\n    };\r\n\r\n    /**\r\n     * Check and normalise the value of precision (must be positive integer).\r\n     * @param {number} val - Value of precision to validate\r\n     * @returns {number} Positive integer value.\r\n     */\r\n    var checkPrecision = function(val) {\r\n        val = Math.round(Math.abs(val));\r\n        return isNaN(val) ? lib.settings.number.precision : val;\r\n    };\r\n\r\n    /**\r\n     * Parses a format string or object and returns format obj for use in rendering.\r\n     * @param {string|Object} format - Default (positive) format, or object containing `pos` (required), `neg` and `zero` values (or a function returning either a string or object)\r\n     * @returns {Object} Format object with pos, neg, and zero properties.\r\n     */\r\n    var checkCurrencyFormat = function(format) {\r\n        // Allow function as format parameter (should return string or object):\r\n        if ($.isFunction(format)) {\r\n            format = format();\r\n        }\r\n\r\n        // Format can be a string, in which case `value` (\"%v\") must be present:\r\n        if ($.isString(format) && format.match('%v')) {\r\n            // Create and return positive, negative and zero formats:\r\n            return {\r\n                pos: format,\r\n                neg: format.replace('-', '').replace('%v', '-%v'),\r\n                zero: format\r\n            };\r\n        }\r\n        if (!format || !format.pos || !format.pos.match('%v')) {\r\n            // If no format, or object is missing valid positive value, use default.\r\n            // If default is a string, casts it to an object for faster checking next time.\r\n            var x = lib.settings.currency.format;\r\n            if ($.isString(x)) {\r\n                lib.settings.currency.format = x = { pos: x, neg: x.replace('%v', '-%v'), zero: x };\r\n            }\r\n            return x;\r\n        }\r\n        return format;\r\n    };\r\n\r\n    /**\r\n     * Takes a format string and parses it into an object.\r\n     * @param {string} format - Format string`\r\n     * @returns {Object} Object with format settings.\r\n     */\r\n    var parseFormat = function(format) {\r\n        if (!$.isString(format)) {\r\n            return format || {};\r\n        }\r\n\r\n        var res = {}, x;\r\n        var newFormat = format;\r\n        if ((x = tokens.symbol.exec(newFormat)) !== null && x.length > 1) {\r\n            res.symbol = x[1];\r\n            newFormat = newFormat.replace(x[0], '%s');\r\n        }\r\n        if ((x = tokens.decimal.exec(newFormat)) !== null && x.length > 1) {\r\n            res.decimal = x[1];\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.thousand.exec(newFormat)) !== null && x.length > 1) {\r\n            res.thousand = x[1];\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.precision.exec(newFormat)) !== null && x.length > 1) {\r\n            res.precision = x[1] * 1;\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.value.exec(newFormat)) !== null) {\r\n            res.format = newFormat.replace(x[0], '%v');\r\n        } else {\r\n            res.format = newFormat + ' %v';\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Takes a string/array of strings, removes all formatting/cruft and returns the raw float value.\r\n     * @param {string|number} value - Value to remove formatting from.\r\n     * @returns {number} Number with no formatting.\r\n     */\r\n    var unformat = function(value) {\r\n        // Fails silently (need decent errors):\r\n        value = value || 0;\r\n\r\n        // Return the value as-is if it's already a number:\r\n        if (typeof value === 'number') {\r\n            return value;\r\n        }\r\n\r\n        // Build regex to strip out everything except digits, decimal point and minus sign:\r\n        var regex = new RegExp('[^0-9-' + lib.settings.number.decimal + ']', ['g']),\r\n            unformatted = parseFloat(\r\n                ('' + value)\r\n                    .replace(/\\((.*)\\)/, '-$1') // replace bracketed values with negatives\r\n                    .replace(regex, '')         // strip out any cruft\r\n                    .replace(lib.settings.number.decimal, '.')      // make sure decimal point is standard\r\n            );\r\n\r\n        // This will fail silently which may cause trouble, let's wait and see:\r\n        return !isNaN(unformatted) ? unformatted : 0;\r\n    };\r\n\r\n    /**\r\n     * Implementation of toFixed() that treats floats more like decimals.\r\n     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === \"0.61\") that present problems for accounting- and finance-related software.\r\n     * @param {number|string} value - Number to convert\r\n     * @param {number} precision - Number of digits after the decimal.\r\n     * @returns {number} Formatted value.\r\n     */\r\n    var toFixed = function(value, precision) {\r\n        precision = checkPrecision(precision);\r\n        var power = Math.pow(10, precision);\r\n\r\n        // Multiply up by precision, round accurately, then divide and use native toFixed():\r\n        return (Math.round(unformat(value) * power) / power).toFixed(precision);\r\n    };\r\n\r\n    /**\r\n     * Format a number, with comma-separated thousands and custom precision/decimal places.\r\n     * @param {number} number - Number to format.\r\n     * @param {string} format - Tokenized string format.\r\n     * @returns {string} Formatted number.\r\n     */\r\n    var formatNumber = function(number, format) {\r\n        // Clean up number:\r\n        number = unformat(number);\r\n\r\n        // Build options object from second param (if object) or all params, extending defaults:\r\n        var opts = $.extend({}, lib.settings.number, parseFormat(format));\r\n\r\n        // Clean up precision\r\n        var usePrecision = checkPrecision(opts.precision);\r\n\r\n        // Do some calc:\r\n        var negative = number < 0 ? '-' : '';\r\n        var base = parseInt(toFixed(Math.abs(number || 0), usePrecision), 10) + '';\r\n        var mod = base.length > 3 ? base.length % 3 : 0;\r\n\r\n        // Format the number:\r\n        return negative + (mod ? base.substr(0, mod) + opts.thousand : '') + base.substr(mod).replace(/(\\d{3})(?=\\d)/g, '$1' + opts.thousand) +\r\n            (usePrecision ? opts.decimal + toFixed(Math.abs(number), usePrecision).split('.')[1] : '');\r\n    };\r\n\r\n    /**\r\n     * Format a number as currency, with comma-separated thousands and custom precision/decimal places.\r\n     * @param {number} number - Number to format.\r\n     * @param {string} format - Tokenized string format.\r\n     * @returns {string} Formatted currency.\r\n     */\r\n    var formatMoney = function(number, format) {\r\n        // Clean up number:\r\n        number = unformat(number);\r\n\r\n        // Build options object from second param (if object) or all params, extending defaults:\r\n        var opts = $.extend({}, lib.settings.currency, parseFormat(format));\r\n\r\n        // Check format (returns object with pos, neg and zero):\r\n        var formats = checkCurrencyFormat(opts.format);\r\n\r\n        // Choose which format to use for this value:\r\n        var useFormat = number > 0 ? formats.pos : number < 0 ? formats.neg : formats.zero;\r\n\r\n        // Return with currency symbol added:\r\n        return useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(number), format));\r\n    };\r\n\r\n    $.accounting = {\r\n        formatMoney: formatMoney,\r\n        formatNumber: formatNumber,\r\n        parseFormat: parseFormat,\r\n        unformat: unformat\r\n    };\r\n}(this.$));\r\n","/*!\r\n * Help mithril component. Shows input groups with help button.\r\n */\r\n(function(root, factory) {\r\n    root.Help = factory(root.m, root.$, root.Alertify);\r\n})(this, function(m, $, Alertify) {\r\n    'use strict';\r\n\r\n    var Help = {\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            this.opts = {\r\n                enabled: attrs.enabled,\r\n                message: attrs.message\r\n            };\r\n        },\r\n\r\n        showHelp: function(e) {\r\n            Alertify.alert(this.opts.message, $.dialogs.focusOnClose.bind(e), $.dialogs.focusOnClose.bind(e));\r\n        },\r\n\r\n        view: function(vnode) {\r\n            if (!this.opts.enabled) {\r\n                return $.isArray(vnode.children) ? m('.input-group', vnode.children) : vnode.children;\r\n            }\r\n            if (!(vnode.children && vnode.children.length)) {\r\n                return m('span', m('button.btn.btn-secondary.dash-context-help', {\r\n                    type: 'button', role: 'button', onclick: this.showHelp.bind(this)\r\n                }, m('i.dash.dash-help')));\r\n            }\r\n            return m('.input-group',\r\n                vnode.children.concat(m('span.input-group-addon.input-group-custom', m('button.btn.btn-secondary.dash-context-help', {\r\n                    type: 'button', role: 'button', onclick: this.showHelp.bind(this)\r\n                }, m('i.dash.dash-help'))))\r\n            );\r\n        }\r\n    };\r\n\r\n    return Help;\r\n});\r\n","/*!\r\n * Mithril based table component. Supports ajax data, searching, sorting, paging, & resizing columns.\r\n */\r\n(function(root, factory) {\r\n    root.Table = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    var Table = {\r\n        pageOptions: [m('option', { value: '10' }, '10'), m('option', { value: '20' }, '20'), m('option', { value: '50' }, '50'), m('option', { value: '100' }, '100')],\r\n\r\n        /**\r\n         * Get/set persistent values.\r\n         * @param {string} key - Key name of the value to get/set.\r\n         * @param {*} value - Value to set.\r\n         * @returns {string|undefined} Value if getting, else undefined.\r\n         */\r\n        store: function(key, value) {\r\n            var myKey = this.opts.id + '.' + key;\r\n            // getter\r\n            if ($.isUndefined(value)) {\r\n                return $.isNull(this.opts.storageFunction) ? localStorage[myKey] : $.coalesce(this.opts[key], null);\r\n            }\r\n\r\n            // setter\r\n            if ($.isNull(this.opts.storageFunction)) {\r\n                localStorage[myKey] = value;\r\n            } else {\r\n                // ignore the param actually passed and use the values from the object\r\n                // passing the whole object lets the storage function decide when to actually save using a debounce\r\n                if ($.isFunction(this.opts.storageFunction)) {\r\n                    this.opts.storageFunction({\r\n                        itemsPerPage: this.itemsPerPage,\r\n                        currentStartItem: this.currentStartItem,\r\n                        searchQuery: this.searchQuery,\r\n                        width: this.width,\r\n                        sorting: this.sorting,\r\n                        columnWidths: this.opts.columns.map(function(c) { return { field: c.field, width: c.width * 1.0 }; })\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Process the data array result from the ajax request.\r\n         * @param {Object[]} data - Array of records to display.\r\n         */\r\n        processData: function(data) {\r\n            if (this.opts.dataCallback) {\r\n                this.opts.dataCallback(data);\r\n            }\r\n\r\n            var i = 0, len = data.rows.length, j = 0;\r\n            for (; i < len; i++) {\r\n                // add an index to the data so we can reset to the default sort order later if the user wants\r\n                data.rows[i]._index = i;\r\n\r\n                var x;\r\n                // convert input to appropriate types\r\n                for (j = 0; j < this.intColumns.length; j++) {\r\n                    x = this.intColumns[j];\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : data.rows[i][x] * 1;\r\n                }\r\n                for (j = 0; j < this.dateColumns.length; j++) {\r\n                    x = this.dateColumns[j];\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : $.fecha.parse(data.rows[i][x], this.opts.dataDateFormat);\r\n                }\r\n                for (j = 0; j < this.currencyColumns.length; j++) {\r\n                    x = this.currencyColumns[j];\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : $.accounting.unformat(data.rows[i][x]);\r\n                }\r\n            }\r\n            this.data = data.rows;\r\n            this.filteredTotal = data.filteredTotal;\r\n\r\n            this.loading = false;\r\n            this.sort(false);\r\n            this.filterResults();\r\n        },\r\n\r\n        /**\r\n         * Load the data to populate the table.\r\n         */\r\n        loadData: function() {\r\n            this.loading = true;\r\n            this.loadingError = false;\r\n\r\n            var self = this;\r\n            $.ajax({\r\n                method: this.opts.requestMethod,\r\n                url: this.opts.url,\r\n                data: this.buildParams(),\r\n                block: false\r\n            }, this.processData.bind(this), function(data) {\r\n                self.loading = false;\r\n                self.loadingError = true;\r\n                if (self.opts.errorCallback) {\r\n                    self.opts.errorCallback(data);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Force the table to refresh its data.\r\n         */\r\n        refresh: function() {\r\n            this.loading = true;\r\n            this.loadingError = false;\r\n            this.loadData();\r\n        },\r\n\r\n        /**\r\n         * Build querystring params to fetch data from the server.\r\n         * @returns {Object} Request parameters.\r\n         */\r\n        buildParams: function() {\r\n            var sort = this.sorting.length > 0 ? this.sorting.map(function(obj, i) { return { field: obj.field, dir: obj.dir, index: i }; }) : null;\r\n            if (this.opts.requestUsePascalCase) {\r\n                return $.extend(this.opts.requestParams, {\r\n                    StartItem: this.currentStartItem,\r\n                    Items: this.itemsPerPage,\r\n                    Query: this.searchQuery,\r\n                    Sort: $.toPascalKeys(sort)\r\n                });\r\n            }\r\n            return $.extend(this.opts.requestParams, {\r\n                startItem: this.currentStartItem,\r\n                items: this.itemsPerPage,\r\n                query: this.searchQuery,\r\n                sort: sort\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Set the first item index to display.\r\n         * @param {type} index - Record index to start on.\r\n         */\r\n        setCurrentStartItem: function(index) {\r\n            this.currentStartItem = index;\r\n            this.store('currentStartItem', index);\r\n            this.filterResults(true);\r\n        },\r\n\r\n        /**\r\n         * Set the number of items to display per page.\r\n         * @param {number|Event} e - Number or items per page, or an event that triggered the change.\r\n         */\r\n        setItemsPerPage: function(e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var items = (isNaN(e) ? e.target.value : e) * 1;\r\n            if (this.itemsPerPage !== items) {\r\n                this.itemsPerPage = items;\r\n                this.store('itemsPerPage', items);\r\n                this.setCurrentStartItem(0);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set the search query for filtering table data.\r\n         * @param {string} val - New search text.\r\n         */\r\n        setSearchQuery: function(val) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var query = val.target ? val.target.value : val;\r\n            if (this.searchQuery !== query) {\r\n                this.searchQuery = query;\r\n                this.runSearch(query);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change search query and filter results.\r\n         * @param {string} query - New search text.\r\n         */\r\n        runSearch: function(query) {\r\n            this.store('searchQuery', query);\r\n            this.requestTimer = null;\r\n            this.currentStartItem = 0;\r\n            this.filterResults(true);\r\n        },\r\n\r\n        /**\r\n         * Filter the data based on the search query, current page, and items per page.\r\n         * @param {bool} refresh - Force it to refresh its data.\r\n         */\r\n        filterResults: function(refresh) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            if (refresh && !this.opts.loadAllData) {\r\n                // force the data to reload. filterResults will get called again after the data loads\r\n                this.loadData();\r\n            } else if (!this.opts.loadAllData) {\r\n                // we're not loading all the data to begin with. so whatever data we have should be displayed.\r\n                this.results = this.data;\r\n                this.pageTotal = Math.ceil(this.filteredTotal / this.itemsPerPage);\r\n            } else {\r\n                // we're loading all the data to begin with. so figure out what data to display.\r\n                var filteredTotal = 0;\r\n                if (this.data.constructor !== Array) {\r\n                    this.loading = true;\r\n                    this.results = [];\r\n                } else {\r\n                    var startItem = this.currentStartItem;\r\n                    var res = this.searchQuery ? this.data.filter(this.filterArray.bind(this.searchQuery.toLowerCase())) : this.data;\r\n                    filteredTotal = res.length;\r\n                    this.results = res.slice(startItem, startItem + this.itemsPerPage);\r\n                }\r\n\r\n                this.filteredTotal = filteredTotal;\r\n                this.pageTotal = Math.ceil(filteredTotal / this.itemsPerPage);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Page forward or backward.\r\n         * @param {number} d - Direction to move, 1 is forward, -1 is backward.\r\n         * @param {number} m - Move to end (first or last page) if true.\r\n         */\r\n        moveToPage: function(d, m) {\r\n            this.changePage(d === 1 ? m ? this.pageTotal : this.currentStartItem / this.itemsPerPage + 2 : m ? 1 : this.currentStartItem / this.itemsPerPage);\r\n        },\r\n\r\n        /**\r\n         * Move to the specified page number.\r\n         * @param {number|Event} e - New page number, or an event that triggered the change.\r\n         */\r\n        changePage: function(e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var page = (isNaN(e) ? e.target.value : e) * 1;\r\n            if (page <= this.pageTotal && page > 0) {\r\n                this.setCurrentStartItem((page - 1) * this.itemsPerPage);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change the sorting order.\r\n         * @param {string} fieldName - Name of the field to sort on.\r\n         * @param {string} dataType - Data type of the field.\r\n         * @param {Event} e - Event that triggered the change.\r\n         */\r\n        changeSort: function(fieldName, dataType, e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var val = $.findByKey(this.sorting, 'field', fieldName);\r\n            if (e.shiftKey) {\r\n                document.getSelection().removeAllRanges();\r\n            } else {\r\n                this.sorting = [];\r\n            }\r\n\r\n            if (val === null) {\r\n                this.sorting.push({ field: fieldName, dir: 'ASC', dataType: dataType || 'string' });\r\n            } else if (e.shiftKey) {\r\n                if (val.dir === 'DESC') {\r\n                    this.sorting.splice(val._i, 1);\r\n                } else {\r\n                    val.dir = 'DESC';\r\n                    this.sorting[val._i] = val;\r\n                }\r\n            } else {\r\n                val.dir = val.dir === 'ASC' ? 'DESC' : 'ASC';\r\n                this.sorting.push(val);\r\n            }\r\n\r\n            this.sort();\r\n            this.setCurrentStartItem(0);\r\n        },\r\n\r\n        /**\r\n         * Sort the underlying data.\r\n         * @param {bool} refresh - Refresh the data from the server.\r\n         */\r\n        sort: function(refresh) {\r\n            refresh = $.coalesce(refresh, true);\r\n            this.data.sort(this.sorting.length > 0 ? this.compare.bind(this) : this.defaultCompare);\r\n            this.filterResults(refresh);\r\n            this.store('sorting', JSON.stringify(this.sorting));\r\n        },\r\n\r\n        /**\r\n         * Set up the table and column styles and events.\r\n         */\r\n        setLayout: function() {\r\n            if (this.layoutSet) {\r\n                return;\r\n            }\r\n\r\n            this.layoutSet = true;\r\n            this.table = $.get('.table-data', this.content);\r\n            this.table.style.tableLayout = 'fixed';\r\n            this.tableHeaderRow = this.table.tHead.rows[0];\r\n\r\n            if (this.table !== null) {\r\n                this.clientWidth = this.content.clientWidth;\r\n                this.table.tHead.style.width = this.table.style.width = (this.width / 100 * this.table.offsetWidth) + 'px';\r\n\r\n                var hWidth = this.table.tHead.offsetWidth;\r\n                var tWidth = this.table.offsetWidth;\r\n                var i = 0;\r\n                var cells = this.tableHeaderRow.cells;\r\n                this.opts.columns.forEach(function(x) {\r\n                    if (!x.width) {\r\n                        x.width = cells[i].offsetWidth / hWidth * 100;\r\n                    }\r\n                    cells[i].style.width = x.width / 100 * tWidth + 'px';\r\n                    ++i;\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update the table and column widths based on a window resize.\r\n         */\r\n        onResize: function() {\r\n            var cWidth = this.content.clientWidth;\r\n            if (cWidth === 0) {\r\n                return;\r\n            }\r\n            var scale = cWidth / this.clientWidth;\r\n            this.clientWidth = cWidth;\r\n            this.table.tHead.style.width = this.table.style.width = (this.pixelToFloat(this.table.style.width) * scale) + 'px';\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                this.tableHeaderRow.cells[i].style.width = (this.pixelToFloat(this.tableHeaderRow.cells[i].style.width) * scale) + 'px';\r\n            }\r\n            this.updateLayout();\r\n        },\r\n\r\n        /**\r\n         * Update the table header style.\r\n         */\r\n        updateLayout: function() {\r\n            if (!$.isVisible(this.table)) {\r\n                return;\r\n            }\r\n            $.get('.table-scrollable', this.content).style.paddingTop = this.table.tHead.offsetHeight + 'px';\r\n            var colGroup = $.get('.table-column-group', this.content);\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                colGroup.children[i].style.width = this.tableHeaderRow.cells[i].style.width;\r\n            }\r\n            if (this.clientWidth > 0 && this.content.clientWidth / this.clientWidth !== 1) {\r\n                this.onResize();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Make the table header scroll horizontally with the table\r\n         * @param {Event} e - Event that triggered the scroll.\r\n         */\r\n        onScroll: function(e) {\r\n            var head = this.table.tHead;\r\n            var scroll = e.target;\r\n            if (-head.offsetLeft !== scroll.scrollLeft) {\r\n                head.style.left = '-' + scroll.scrollLeft + 'px';\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handle dragging to change column widths.\r\n         * @param {type} e - Event that triggered the change.\r\n         */\r\n        onHeaderMouseDown: function(e) {\r\n            if (e.button !== 0) {\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            var callbackFunc = function(cellEl) {\r\n                e.stopImmediatePropagation();\r\n                e.preventDefault();\r\n\r\n                self.resizeContext = {\r\n                    colIndex: cellEl.cellIndex,\r\n                    initX: e.clientX,\r\n                    scrWidth: $.get('.table-scrollable', self.content).offsetWidth,\r\n                    initTblWidth: self.table.offsetWidth,\r\n                    initColWidth: self.pixelToFloat($.get('.table-column-group', self.content).children[cellEl.cellIndex].style.width),\r\n                    layoutTimer: null\r\n                };\r\n            };\r\n            self.inResizeArea(e, callbackFunc);\r\n        },\r\n\r\n        /**\r\n         * Handle resizing columns.\r\n         * @param {Event} e - Event that triggered the change.\r\n         */\r\n        onMouseMove: function(e) {\r\n            var newStyle = '';\r\n            var cursorFunc = function() {\r\n                newStyle = 'col-resize';\r\n            };\r\n            this.inResizeArea(e, cursorFunc);\r\n            if (this.table.tHead.style.cursor !== newStyle) {\r\n                this.table.tHead.style.cursor = newStyle;\r\n            }\r\n\r\n            var ctx = this.resizeContext;\r\n            if ($.isNull(ctx)) {\r\n                return;\r\n            }\r\n\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n\r\n            var newColWidth = Math.max(ctx.initColWidth + e.clientX - ctx.initX, this.opts.columnMinWidth);\r\n            this.table.tHead.style.width = this.table.style.width = (ctx.initTblWidth + (newColWidth - ctx.initColWidth)) + 'px';\r\n            $.get('.table-column-group', this.content).children[ctx.colIndex].style.width = this.tableHeaderRow.cells[ctx.colIndex].style.width = newColWidth + 'px';\r\n\r\n            if (ctx.layoutTimer === null) {\r\n                var self = this;\r\n                var timerFunc = function() {\r\n                    self.resizeContext.layoutTimer = null;\r\n                    self.updateLayout();\r\n                };\r\n                ctx.layoutTimer = setTimeout(timerFunc, 25);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update column widths and save them.\r\n         */\r\n        onMouseUp: function() {\r\n            var ctx = this.resizeContext;\r\n            if ($.isNull(ctx)) {\r\n                return;\r\n            }\r\n\r\n            if (ctx.layoutTimer !== null) {\r\n                clearTimeout(ctx.layoutTimer);\r\n            }\r\n            this.resizeContext = null;\r\n\r\n            var newTblWidth = this.table.offsetWidth;\r\n            this.width = (newTblWidth / ctx.scrWidth * 100).toFixed(2);\r\n            this.store('width', this.width);\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                this.opts.columns[i].width = (this.pixelToFloat(this.tableHeaderRow.cells[i].style.width) / newTblWidth * 100).toFixed(2);\r\n                this.store(this.opts.columns[i].field + '.width', this.opts.columns[i].width);\r\n            }\r\n\r\n            this.updateLayout();\r\n        },\r\n\r\n        /**\r\n         * Check if the cursor is in the area where the user can click to drag a column.\r\n         * @param {Event} e - Event that triggered the check.\r\n         * @param {Function} callback - Function to run if in the resize area.\r\n         */\r\n        inResizeArea: function(e, callback) {\r\n            var tblX = e.clientX;\r\n            var el;\r\n            for (el = this.table.tHead; el !== null; el = el.offsetParent) {\r\n                tblX -= el.offsetLeft + el.clientLeft - el.scrollLeft;\r\n            }\r\n\r\n            var cellEl = e.target;\r\n            while (cellEl !== this.table.tHead && cellEl !== null) {\r\n                if (cellEl.nodeName === 'TH') {\r\n                    break;\r\n                }\r\n                cellEl = cellEl.parentNode;\r\n            }\r\n\r\n            if (cellEl === this.table.tHead) {\r\n                for (var i = this.tableHeaderRow.cells.length - 1; i >= 0; i--) {\r\n                    cellEl = this.tableHeaderRow.cells[i];\r\n                    if (cellEl.offsetLeft <= tblX) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (cellEl !== null) {\r\n                var x = tblX;\r\n                for (el = cellEl; el !== this.table.tHead; el = el.offsetParent) {\r\n                    if (el === null) {\r\n                        break;\r\n                    }\r\n                    x -= el.offsetLeft - el.scrollLeft + el.clientLeft;\r\n                }\r\n                if (x < 10 && cellEl.cellIndex !== 0) {\r\n                    callback.call(this, cellEl.previousElementSibling);\r\n                } else if (x > cellEl.clientWidth - 10) {\r\n                    callback.call(this, cellEl);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Make column resizing play nice with touch. \r\n         * http://stackoverflow.com/questions/28218888/touch-event-handler-overrides-click-handlers\r\n         * @param {Event} e Event that triggered the handler.\r\n         */\r\n        touchHandler: function(e) {\r\n            var mouseEvent = null;\r\n            var simulatedEvent = document.createEvent('MouseEvent');\r\n            var touch = e.changedTouches[0];\r\n\r\n            switch (e.type) {\r\n                case 'touchstart':\r\n                    mouseEvent = 'mousedown';\r\n                    this.totalDistance = 0;\r\n                    this.lastSeenAt.x = touch.clientX;\r\n                    this.lastSeenAt.y = touch.clientY;\r\n                    break;\r\n                case 'touchmove':\r\n                    mouseEvent = 'mousemove';\r\n                    break;\r\n                case 'touchend':\r\n                    if (this.lastSeenAt.x) {\r\n                        this.totalDistance += Math.sqrt(Math.pow(this.lastSeenAt.y - touch.clientY, 2) + Math.pow(this.lastSeenAt.x - touch.clientX, 2));\r\n                    }\r\n                    mouseEvent = this.totalDistance > 5 ? 'mouseup' : 'click';\r\n                    this.lastSeenAt = { x: null, y: null };\r\n                    break;\r\n            }\r\n\r\n            simulatedEvent.initMouseEvent(mouseEvent, true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);\r\n            $.dispatch(touch.target, simulatedEvent);\r\n            e.preventDefault();\r\n        },\r\n\r\n        /**\r\n         * Get the value for the field coverted to the correct data type.\r\n         * @param {string} value - Value to convert.\r\n         * @returns {*} Converted value.\r\n         */\r\n        getFieldValue: function(value) {\r\n            if ($.isNull(value)) {\r\n                return null;\r\n            }\r\n            return value.getMonth ? value : value.toLowerCase ? value.toLowerCase() : value;\r\n        },\r\n\r\n        /**\r\n         * Get the formatted value to display for the field.\r\n         * @param {string} value - Value to format.\r\n         * @param {string} dataType - Data type to format to.\r\n         * @returns {*} Converted value.\r\n         */\r\n        getDisplayValue: function(value, dataType) {\r\n            if (!dataType || $.isNull(value)) {\r\n                return value;\r\n            }\r\n\r\n            var val = value;\r\n            if (dataType === 'currency') {\r\n                val = $.accounting.formatMoney(val, this.opts.displayCurrencyFormat);\r\n            } else if (dataType === 'date') {\r\n                val = $.fecha.format(val, this.opts.displayDateFormat);\r\n            }\r\n            return val;\r\n        },\r\n\r\n        /**\r\n         * Default sorting function for the data - resets to order when data was loaded.\r\n         * @param {Object} a - First object to compare.\r\n         * @param {Object} b - Object to compare to.\r\n         * @returns {number} 1 if a comes first, -1 if b comes first, else 0.\r\n         */\r\n        defaultCompare: function(a, b) {\r\n            return a._index > b._index ? 1 : a._index < b._index ? -1 : 0;\r\n        },\r\n\r\n        /**\r\n         * Multi-sorting function for the data.\r\n         * @param {Object} a - First object to compare.\r\n         * @param {Object} b - Object to compare to.\r\n         * @returns {number} 1 if a comes first, -1 if b comes first, else 0.\r\n         */\r\n        compare: function(a, b) {\r\n            var sorting = this.sorting;\r\n            var i = 0, len = sorting.length;\r\n            for (; i < len; i++) {\r\n                var sort = sorting[i];\r\n                var aa = this.getFieldValue(a[sort.field]);\r\n                var bb = this.getFieldValue(b[sort.field]);\r\n\r\n                if (aa === null) {\r\n                    return 1;\r\n                }\r\n                if (bb === null) {\r\n                    return -1;\r\n                }\r\n                if (aa < bb) {\r\n                    return sort.dir === 'ASC' ? -1 : 1;\r\n                }\r\n                if (aa > bb) {\r\n                    return sort.dir === 'ASC' ? 1 : -1;\r\n                }\r\n            }\r\n            return 0;\r\n        },\r\n\r\n        /**\r\n         * Filter an array of objects to find objects where value contains the value of `this`\r\n         * @param {Object} obj - Object to search in.\r\n         * @returns {bool} True if object contains `this`.\r\n         */\r\n        filterArray: function(obj) {\r\n            for (var key in obj) {\r\n                if (key.indexOf('_') < 0 && obj.hasOwnProperty(key) && (obj[key] + '').toLowerCase().indexOf(this) > -1) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Convert a style with 'px' to a float.\r\n         * @param {string} val - CSS style to convert.\r\n         * @returns {number} Numeric value.\r\n         */\r\n        pixelToFloat: function(val) {\r\n            return val.replace('px', '').replace('%', '') * 1.0;\r\n        },\r\n\r\n        /**\r\n         * Build the table header tags.\r\n         * @param {Object} obj - Column to build the tag for.\r\n         * @returns {Object} Mithril TH node.\r\n         */\r\n        tableHeaders: function(obj) {\r\n            var field = obj.field;\r\n            var attrs = { class: obj.classes || '' };\r\n\r\n            var content = [obj.label || field];\r\n            if ($.isUndefined(obj.sortable) || obj.sortable === true) {\r\n                var val = $.findByKey(this.sorting, 'field', field);\r\n                var arrowAttrs = {\r\n                    class: val ? (val.dir === 'ASC' ? 'dash-sort-up' : 'dash-sort-down') : this.opts.editable ? 'dash-sort' : ''\r\n                };\r\n                if (this.opts.editable) {\r\n                    arrowAttrs.onclick = this.changeSort.bind(this, field, obj.dataType.toLowerCase());\r\n                }\r\n                content.push(m('i.float-right.dash.data-table-arrow', arrowAttrs));\r\n            } else {\r\n                attrs.class += ' disabled';\r\n            }\r\n            if (this.opts.editable) {\r\n                attrs.onmousedown = this.onHeaderMouseDown.bind(this);\r\n            }\r\n            return m('th.text-no-select', attrs, content);\r\n        },\r\n\r\n        /**\r\n         * Build the view that actually shows the table.\r\n         * @returns {Object}  Mithril DIV node.\r\n         */\r\n        view: function() {\r\n            return m('.dash-table',\r\n                {\r\n                    ontableRefresh: this.refresh.bind(this),\r\n                    ontableDestroy: this.destroy.bind(this),\r\n                    onlayoutUpdate: this.updateLayout.bind(this)\r\n                }, [\r\n                    !this.opts.editable ? m('span#table-items-per-page') :\r\n                        m('.container',\r\n                            m('.columns.form-horizontal.m-2', [\r\n                                m('.col-4',\r\n                                    this.opts.searchable ? m('.input-group.col-8.col-mr-auto', [\r\n                                        m('span.input-group-addon.text-no-select', m('i.dash.dash-search')),\r\n                                        m('input.form-input', { type: 'text', oninput: this.setSearchQuery.bind(this), value: this.searchQuery, disabled: this.loading })\r\n                                    ]) : null\r\n                                ),\r\n                                m('.col-4',\r\n                                    m('.text-center', (this.opts.headerButtons || []).map(function(x) {\r\n                                        return m(x.type, x.attributes, x.label);\r\n                                    }))\r\n                                ),\r\n                                m('.col-4',\r\n                                    m('.input-group.col-8.col-ml-auto', [\r\n                                        m('span.input-group-addon.text-no-select', this.opts.resources.perPage),\r\n                                        m('select.form-select', {\r\n                                            id: 'table-items-per-page', onchange: this.setItemsPerPage.bind(this),\r\n                                            value: this.itemsPerPage, disabled: this.loading\r\n                                        }, this.pageOptions)\r\n                                    ])\r\n                                )\r\n                            ])\r\n                        ),\r\n                    m('.table-scrollable', { class: this.opts.editable ? '' : ' table-no-edit' }, [\r\n                        m('.table-area', { onscroll: this.onScroll.bind(this) }, [\r\n                            m('table.table.table-hover.table-sm.table-striped.table-data', [\r\n                                m('colgroup.table-column-group', this.colGroups),\r\n                                m('thead', {\r\n                                    ontouchstart: this.touchHandler.bind(this),\r\n                                    ontouchend: this.touchHandler.bind(this),\r\n                                    ontouchmove: this.touchHandler.bind(this),\r\n                                    ontouchcancel: this.touchHandler.bind(this)\r\n                                }, [m('tr', this.opts.columns.map(this.tableHeaders.bind(this)))]),\r\n                                m('tbody', this.tableBodyView())\r\n                            ])\r\n                        ])\r\n                    ]),\r\n                    this.tableFooterView()\r\n                ]);\r\n        },\r\n\r\n        /**\r\n         * Build a single table cell.\r\n         * @param {Object} obj - Table record to build cell for.\r\n         * @param {number} index - Row index of this row.\r\n         * @param {Object} column - Column to build cell for.\r\n         * @returns {Object} Mithril TD node.\r\n         */\r\n        tableCellView: function(obj, index, column) {\r\n            return m('td', this.columnRenderer[column.field](obj, column, index));\r\n        },\r\n\r\n        /**\r\n         * Build a table row.\r\n         * @param {Object} obj - Table record to build row for.\r\n         * @param {number} index - Row index of this row.\r\n         * @returns {Object} Mithril TR node.\r\n         */\r\n        tableRowView: function(obj, index) {\r\n            return m('tr', { key: obj._index }, this.opts.columns.map(this.tableCellView.bind(this, obj, index)));\r\n        },\r\n\r\n        /**\r\n         * Build the table footer nodes\r\n         * @returns {Object} Mithril TR node(s).\r\n         */\r\n        tableBodyView: function() {\r\n            if (this.loading) {\r\n                return m('tr', m('td', { colspan: this.opts.columns.length }, m('.loading.loading-lg')));\r\n            }\r\n            if (this.loadingError) {\r\n                return m('tr.table-loading-error', m('td', { colspan: this.opts.columns.length }, [\r\n                    m('.table-loading-error-message', this.opts.resources.loadingError),\r\n                    m('.btn.btn-info', { onclick: this.refresh.bind(this) }, this.opts.resources.tryAgain)\r\n                ]));\r\n            }\r\n            if (this.filteredTotal === 0) {\r\n                return m('tr', [m('td', { colspan: this.opts.columns.length }, this.opts.resources.noData)]);\r\n            }\r\n            return this.results.map(this.tableRowView.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Build the table footer nodes.\r\n         * @returns {Object} Mithril DIV node.\r\n         */\r\n        tableFooterView: function() {\r\n            if (this.loading || this.loadingError) {\r\n                return null;\r\n            }\r\n\r\n            var currentPage = (this.currentStartItem + this.itemsPerPage) / this.itemsPerPage;\r\n            if (this.opts.pageDropdown) {\r\n                // limit page dropdown to 10000 options\r\n                var max = Math.min(this.pageTotal, 10000);\r\n                var optionList = [max], i = max;\r\n                while (i > 0) {\r\n                    optionList[i] = m('option', { value: i }, i);\r\n                    --i;\r\n                }\r\n            }\r\n\r\n            var res = this.opts.resources;\r\n            return m('.container', m('.columns.m-2', [\r\n                m('.col-4.btn-toolbar', { class: this.filteredTotal > this.itemsPerPage ? '' : ' invisible' }, [\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.firstPage, onclick: this.moveToPage.bind(this, -1, true)\r\n                    }, m('i.dash.dash-to-start-alt.text-primary')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.previousPage, onclick: this.moveToPage.bind(this, -1, false)\r\n                    }, m('i.dash.dash-to-start.text-primary')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.nextPage, onclick: this.moveToPage.bind(this, 1, false)\r\n                    }, m('i.dash.dash-to-end.text-primary')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.lastPage, onclick: this.moveToPage.bind(this, 1, true)\r\n                    }, m('i.dash.dash-to-end-alt.text-primary'))\r\n                ]),\r\n                m('.col-4', { class: this.filteredTotal > this.itemsPerPage ? '' : ' invisible' },\r\n                    !this.opts.pageDropdown ? null : m('.input-group.col-8.col-mx-auto', [\r\n                        m('span.input-group-addon.text-no-select', res.page),\r\n                        m('select.form-select', { onchange: this.changePage.bind(this), value: currentPage, disabled: this.pageTotal === 0 }, optionList)\r\n                    ])\r\n                ),\r\n                m('.col-4.text-right.my-auto', res.showing\r\n                    .replace('{0}', Math.min(this.currentStartItem + 1, this.filteredTotal))\r\n                    .replace('{1}', Math.min(this.currentStartItem + this.itemsPerPage, this.filteredTotal))\r\n                    .replace('{2}', this.filteredTotal)\r\n                )\r\n            ]));\r\n        },\r\n\r\n        destroy: function() {\r\n            if (this.opts.editable) {\r\n                $.off(window, 'resize', this.events.resize);\r\n                $.off(window, 'mousemove', this.events.move);\r\n                $.off(window, 'mouseup', this.events.up);\r\n            }\r\n        },\r\n\r\n        oninit: function(vnode) {\r\n            var opts = vnode.attrs || {};\r\n\r\n            var data = null;\r\n            if (opts.data) {\r\n                data = opts.data;\r\n                delete opts.data;\r\n            }\r\n\r\n            this.opts = $.extend({\r\n                content: null,\r\n                id: null,\r\n                columns: [],\r\n                url: '',\r\n                requestMethod: 'GET',\r\n                requestUsePascalCase: true,\r\n                requestParams: {},\r\n                searchable: true,\r\n                loadAllData: true,\r\n                inputTimeout: 200,\r\n                columnMinWidth: 50,\r\n                width: 100,\r\n                editable: true,\r\n                pageDropdown: true,\r\n                headerButtons: null,\r\n                storageFunction: null,\r\n                itemsPerPage: null,\r\n                searchQuery: null,\r\n                currentStartItem: null,\r\n                sorting: null,\r\n                dataCallback: null,\r\n                errorCallback: null,\r\n                dataDateFormat: 'YYYY-MM-DD HH:mm:ss',\r\n                displayDateFormat: 'YYYY-MM-DD HH:mm',\r\n                displayCurrencyFormat: '{s:$} {[t:,][d:.][p:2]}',\r\n                resources: {\r\n                    firstPage: $.resx('firstPage'),\r\n                    previousPage: $.resx('previousPage'),\r\n                    nextPage: $.resx('nextPage'),\r\n                    lastPage: $.resx('lastPage'),\r\n                    noData: $.resx('noData'),\r\n                    showing: $.resx('showing'),\r\n                    page: $.resx('page') || 'Page',\r\n                    perPage: $.resx('perPage'),\r\n                    loadingError: $.resx('loadingError'),\r\n                    tryAgain: $.resx('tryAgain')\r\n                }\r\n            }, opts);\r\n\r\n            this.layoutSet = false;\r\n            this.data = null;\r\n            this.loading = true;\r\n            this.loadingError = false;\r\n            this.filteredTotal = 0;\r\n            this.results = [];\r\n            this.pageTotal = 0;\r\n            this.totalDistance = 0;\r\n            this.lastSeenAt = { x: null, y: null };\r\n            this.columnRenderer = {};\r\n            this.colGroups = [];\r\n            this.intColumns = [];\r\n            this.dateColumns = [];\r\n            this.currencyColumns = [];\r\n\r\n            var self = this;\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                var column = this.opts.columns[i];\r\n                column.width = $.hasPositiveValue(column.width) ? column.width : this.store(column.field + '.width');\r\n                if (!($.isNull(column.links) || column.links.length === 0)) {\r\n                    column.links = column.links.filter(function(link) {\r\n                        return !$.isNull(link);\r\n                    });\r\n                }\r\n\r\n                this.columnRenderer[column.field] = $.isNull(column.links) || column.links.length === 0 ?\r\n                    function(obj, column) { return self.getDisplayValue(obj[column.field], column.dataType.toLowerCase()); } :\r\n                    function(obj, column) {\r\n                        return column.links.map(function(link) {\r\n                            var label = $.coalesce(link.label, self.getDisplayValue(obj[column.field], column.dataType.toLowerCase()));\r\n                            var attr = $.clone(link.attributes) || {};\r\n                            var href = link.href || null;\r\n                            if (href) {\r\n                                for (var prop in obj) {\r\n                                    if (href.indexOf('{' + prop + '}') > -1 && obj.hasOwnProperty(prop)) {\r\n                                        href = href.replace(new RegExp('{' + prop + '}', 'g'), obj[prop]);\r\n                                    }\r\n                                }\r\n                            }\r\n                            var classes = attr['class'].split(' ');\r\n                            var isBtn = classes.indexOf('btn') !== -1;\r\n                            if (isBtn) {\r\n                                attr['type'] = attr['role'] = 'button';\r\n                            } else {\r\n                                classes.push('btn');\r\n                                classes.push('btn-link');\r\n                            }\r\n                            if (classes.indexOf('dash-ajax') === -1) {\r\n                                classes.push('dash-ajax');\r\n                            }\r\n                            attr['class'] = classes.filter(function(x) { return x && x.length; }).join(' ');\r\n                            attr['data-method'] = link.method ? link.method.toUpperCase() : 'GET';\r\n                            attr['data-href'] = href;\r\n                            attr['title'] = label;\r\n                            attr['onclick'] = $.dialogs.handleAjaxRequest;\r\n                            return m(isBtn ? 'button' : 'a', attr, $.isNull(link.icon) ? label : m('i', { class: 'dash dash-' + link.icon.toLowerCase() }));\r\n                        });\r\n                    };\r\n\r\n                this.colGroups.push(m('col'));\r\n\r\n                var type = column.dataType.toLowerCase();\r\n                if (type === 'int') {\r\n                    this.intColumns.push(column.field);\r\n                } else if (type === 'date') {\r\n                    this.dateColumns.push(column.field);\r\n                } else if (type === 'currency') {\r\n                    this.currencyColumns.push(column.field);\r\n                }\r\n            }\r\n\r\n            if (this.opts.headerButtons) {\r\n                this.opts.headerButtons = this.opts.headerButtons.filter(function(x) { return !$.isNull(x); });\r\n                this.opts.headerButtons.forEach(function(x) {\r\n                    if (!x.attributes.onclick && !x.attributes.target) {\r\n                        x.attributes.onclick = $.dialogs.handleAjaxRequest;\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.itemsPerPage = this.store('itemsPerPage') * 1 || 10;\r\n            this.currentStartItem = this.store('currentStartItem') * 1 || 0;\r\n            this.searchQuery = this.store('searchQuery') || '';\r\n            this.width = this.store('width') * 1 || 100;\r\n            var sorting = this.store('sorting');\r\n            this.sorting = (typeof sorting === 'string' ? JSON.parse(sorting) : sorting) || [];\r\n\r\n            if (data) {\r\n                this.processData({ rows: data });\r\n            } else {\r\n                this.loadData();\r\n            }\r\n        },\r\n\r\n        oncreate: function(vnode) {\r\n            this.content = vnode.dom;\r\n            if (this.opts.editable) {\r\n                this.events = {\r\n                    resize: $.debounce(this.onResize.bind(this), 50),\r\n                    move: this.onMouseMove.bind(this),\r\n                    up: this.onMouseUp.bind(this)\r\n                };\r\n                $.on(window, 'resize', this.events.resize);\r\n                $.on(window, 'mousemove', this.events.move);\r\n                $.on(window, 'mouseup', this.events.up);\r\n            }\r\n\r\n            this.setLayout();\r\n            this.updateLayout();\r\n        },\r\n\r\n        onupdate: function() {\r\n            this.updateLayout();\r\n        }\r\n    };\r\n\r\n    return Table;\r\n});\r\n","/*!\r\n * Dialog mithril component.\r\n */\r\n(function(root, factory) {\r\n    root.Dialog = factory(root.m, root.$, root.Alertify, root.Table);\r\n})(this, function(m, $, Alertify, Table) {\r\n    'use strict';\r\n\r\n    var _buttons = {\r\n        'ok': 'Okay',\r\n        'cancel': 'Cancel',\r\n        'close': 'Close'\r\n    };\r\n\r\n    var _keys = {\r\n        ENTER: 13,\r\n        ESC: 27\r\n    };\r\n\r\n    /**\r\n     * Convert a value for a field to the correct data type.\r\n     * @param {Node} field - Input that we are converting value for.\r\n     * @param {string} val - Value to convert.\r\n     * @returns {string|number|bool} Returns correctly casted value.\r\n     */\r\n    var tryGetValue = function(field, val) {\r\n        var fieldName = field.name.split('.').pop();\r\n        if ((fieldName.substring(0, 2) === 'Is' || fieldName.substring(0, 5) === 'Allow') && (field.value.toLowerCase() === 'true' || field.value.toLowerCase() === 'false')) {\r\n            return field.value.toLowerCase() === 'true';\r\n        } else if (field.type.toLowerCase() === 'number' || field.name.slice(-2) === 'Id' || !($.isNull(val) || val.length == 0 || isNaN(val))) {\r\n            return val.length ? parseInt(val) : null;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    /**\r\n     * Try to set a value in an object.\r\n     * @param {Object} obj - Object to add value to.\r\n     * @param {Node} field - Input that we are converting value for.\r\n     * @param {string} name - Name of property.\r\n     * @param {string} val - Value to set.\r\n     * @returns {Object} Returns correctly updated object.\r\n     */\r\n    var trySetValue = function(obj, field, name, val) {\r\n        if (obj.hasOwnProperty(name) || $.hasClass(field, 'custom-control-input-multiple')) {\r\n            if (!$.isArray(obj[name])) {\r\n                obj[name] = $.isNull(obj[name]) ? [] : [obj[name]];\r\n            }\r\n            if (!$.isNull(val)) {\r\n                obj[name].push(val);\r\n            }\r\n        } else if (!$.isNull(val)) {\r\n            obj[name] = val;\r\n        }\r\n        return obj;\r\n    };\r\n\r\n    /**\r\n     * Declare Dialog class.\r\n     * @param {Object} opts - Dialog settings\r\n     */\r\n    function Dialog(opts) {\r\n        this.opts = $.extend({\r\n            id: null,\r\n            title: null,\r\n            basic: true,\r\n            buttons: _buttons,\r\n            content: null,\r\n            target: null,\r\n            onOkay: null,\r\n            onCancel: null,\r\n            onShow: null,\r\n            parent: null\r\n        }, opts || {});\r\n        this.elements = {\r\n            container: null,\r\n            content: null\r\n        };\r\n        this.changed = false;\r\n        this.run();\r\n    }\r\n\r\n    Dialog.prototype = {\r\n        /**\r\n         * Generates the components HTML.\r\n         * @returns {Object} Mithril virtual node\r\n         */\r\n        view: function() {\r\n            return m('.rd-dialog', { onkeydown: this.checkKey.bind(this), tabindex: 0 }, [\r\n                m('.rd-header.columns', [\r\n                    m('.col-8.mt-1.text-no-select.dialog-header', this.opts.title),\r\n                    m('.col-4.text-right', m('button.btn.btn-secondary.rd-close', { type: 'button', role: 'button', onclick: this.onCancel.bind(this) },\r\n                        m('i.dash.dash-cancel.text-error', { title: this.opts.buttons.close })\r\n                    ))\r\n                ]),\r\n                m('.rd-content', { class: this.opts.basic ? 'rd-no-footer' : '' }, this.contentView()),\r\n                this.opts.basic ? null : m('.rd-footer', [\r\n                    m('button.btn.btn-primary', {\r\n                        type: 'button', role: 'button', onclick: this.onOkay.bind(this)\r\n                    }, this.opts.buttons.ok),\r\n                    m('button.btn.btn-warning', {\r\n                        type: 'button', role: 'button', onclick: this.onCancel.bind(this)\r\n                    }, this.opts.buttons.cancel)\r\n                ])\r\n            ]);\r\n        },\r\n\r\n        contentView: function() {\r\n            if (!this.opts.content.component) {\r\n                return m.trust(this.opts.content);\r\n            }\r\n\r\n            this.opts.title = this.opts.content.title;\r\n            this.opts.basic = this.opts.content.basic;\r\n            if (this.opts.content.component.toLowerCase() === 'table') {\r\n                return m('.col-12', m(Table, this.opts.content.data));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Runs after the dialog is first created by mithril.\r\n         * @param {Object} vnode - Mithril virtual node.\r\n         */\r\n        oncreate: function(vnode) {\r\n            if (this.elements.content) {\r\n                return;\r\n            }\r\n            var node = $.get('.rd-content', vnode.dom);\r\n            if (!(node && node.firstElementChild)) {\r\n                return;\r\n            }\r\n            node = node.firstElementChild;\r\n            if ($.isNull(this.opts.title)) {\r\n                this.opts.title = node.getAttribute('data-title');\r\n                this.opts.basic = node.hasAttribute('data-basic-dialog');\r\n                m.redraw();\r\n            }\r\n            var self = this;\r\n            $.on(node, 'change', function() {\r\n                self.changed = true;\r\n            });\r\n            this.elements.content = node;\r\n            setTimeout(this.onShow.bind(this), 25);\r\n        },\r\n\r\n        run: function() {\r\n            this.elements.container = document.createElement('div');\r\n            this.elements.container.id = 'dialog' + this.opts.id;\r\n            $.addClass(this.elements.container, 'rd-dialog-container');\r\n            document.body.appendChild(this.elements.container);\r\n            m.mount(this.elements.container, {\r\n                view: this.view.bind(this),\r\n                oncreate: this.oncreate.bind(this),\r\n            });\r\n\r\n            if (!this.opts.content.component) {\r\n                $.dialogs.processContent(this.elements.content);\r\n                setTimeout(this.checkEvent.bind(this, this.elements.content, 'data-event'), 25);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the dialog id.\r\n         * @returns {number} ID of dialog.\r\n         */\r\n        getId: function() {\r\n            return this.opts.id;\r\n        },\r\n\r\n        /**\r\n         * Get the dialog container node.\r\n         * @returns {Node} DOM node of dialog container.\r\n         */\r\n        getContainer: function() {\r\n            return this.elements.container;\r\n        },\r\n\r\n        /**\r\n         * Get the dialog content node.\r\n         * @returns {Node} DOM node of dialog content.\r\n         */\r\n        getContent: function() {\r\n            return this.elements.content;\r\n        },\r\n\r\n        /**\r\n         * Get the dialog target node.\r\n         * @returns {Node} DOM node to target on close.\r\n         */\r\n        getTarget: function() {\r\n            return this.opts.target;\r\n        },\r\n\r\n        /**\r\n         * Find a form node inside the dialog.\r\n         * @returns {Node} Form node if exists else null.\r\n         */\r\n        findForm: function() {\r\n            return $.matches(this.elements.content, 'form.dash-form') ? this.elements.content : $.get('form.dash-form', this.elements.content);\r\n        },\r\n\r\n        /**\r\n         * Find element to focus on when dialog is displayed.\r\n         */\r\n        onShow: function() {\r\n            if ($.isFunction(this.opts.onShow)) {\r\n                if (!this.opts.onShow.call(this)) {\r\n                    return;\r\n                }\r\n            }\r\n            document.title = this.opts.title;\r\n            $.dialogs.focusNode(this.elements.content);\r\n        },\r\n\r\n        /**\r\n         * User okayed dialog. Save changes; close dialog.\r\n         */\r\n        onOkay: function() {\r\n            if ($.isFunction(this.opts.onOkay)) {\r\n                if (!this.opts.onOkay.call(this)) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            var form = this.findForm();\r\n            if (!form) {\r\n                this.destroy();\r\n                return;\r\n            }\r\n            if (!this.validateForm()) {\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            var formData = this.serializeForm();\r\n            $.ajax({\r\n                method: form.hasAttribute('data-method') ? form.getAttribute('data-method') : 'POST',\r\n                url: form.getAttribute('action'),\r\n                data: formData,\r\n                token: formData.__RequestVerificationToken\r\n            }, function(responseData) {\r\n                var target = self.opts.target;\r\n                var parentDlg = $.dialogs.findDialogById(self.opts.parent);\r\n                if (responseData.parentTarget && parentDlg) {\r\n                    target = parentDlg.getTarget();\r\n                }\r\n\r\n                self.destroy();\r\n                if (responseData.closeParent && parentDlg) {\r\n                    parentDlg.destroy();\r\n                }\r\n                if (responseData.dialogUrl) {\r\n                    $.dialogs.sendAjaxRequest(responseData.dialogUrl, 'GET', target);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * User canceled dialog. Check for changes; close dialog.\r\n         * @param {Event} e - Event that triggered the cancel.\r\n         */\r\n        onCancel: function(e) {\r\n            if ($.isFunction(this.opts.onCancel)) {\r\n                if (!this.opts.onCancel.call(this)) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (!this.changed || !this.findForm()) {\r\n                this.destroy();\r\n                return;\r\n            }\r\n\r\n            Alertify.confirm($.resx('discardChanges'), this.destroy.bind(this), function() {\r\n                if (e.target) {\r\n                    e.target.focus();\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Trigger okay or cancel action based on keydown.\r\n         * @param {KeyboardEvent} e - Keydown event that triggered this.\r\n         */\r\n        checkKey: function(e) {\r\n            if (e.keyCode === _keys.ESC) {\r\n                this.onCancel(e);\r\n            }\r\n            if (e.keyCode === _keys.ENTER && !this.opts.basic) {\r\n                this.onOkay(e);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Dispatch event named in attribute `attrName` if it exists.\r\n         * @param {Node} node - Node to look for an event attribute in.\r\n         * @param {string} attrName - Name of the attribute to check for the event in.\r\n         */\r\n        checkEvent: function(node, attrName) {\r\n            if (!node || !node.hasAttribute(attrName)) {\r\n                return;\r\n            }\r\n            var ev = node.getAttribute(attrName);\r\n            if ($.events.hasOwnProperty(ev)) {\r\n                $.dispatch(document, $.events[ev]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Convert form data into an object.\r\n         * @returns {Object} Form data.\r\n         */\r\n        serializeForm: function() {\r\n            var form = this.findForm();\r\n            if (!form) {\r\n                return {};\r\n            }\r\n\r\n            var field, data = {};\r\n            var len = form.elements.length;\r\n            var bracketRegEx = /\\[([^\\]]+)\\]/;\r\n            for (var i = 0; i < len; i++) {\r\n                field = form.elements[i];\r\n                if (!field.name || field.disabled || ['file', 'reset', 'submit', 'button'].indexOf(field.type) > -1) {\r\n                    continue;\r\n                }\r\n\r\n                var value = null;\r\n                if (field.type === 'select' && field.hasAttribute('multiple')) {\r\n                    value = Array.apply(null, form.elements[i].options).filter(function(x) {\r\n                        return x.selected;\r\n                    }).map(function(x) {\r\n                        return tryGetValue(field, x.value);\r\n                    });\r\n                } else if (field.type === 'checkbox') {\r\n                    if (field.checked) {\r\n                        value = tryGetValue(field, field.value);\r\n                    }\r\n                } else if (field.type !== 'radio' || field.checked) {\r\n                    value = tryGetValue(field, field.value);\r\n                }\r\n\r\n                var pieces = field.name.split('.');\r\n                var name = field.name;\r\n                if (pieces.length > 1) {\r\n                    var matches = bracketRegEx.exec(pieces[0]);\r\n                    name = matches.length > 1 ? pieces[0].replace(matches[0], '') : pieces[0];\r\n                    if (!data.hasOwnProperty(name)) {\r\n                        data[name] = [];\r\n                    }\r\n                    if (matches.length > 1) {\r\n                        if (!data[name].hasOwnProperty(matches[1])) {\r\n                            data[name][matches[1]] = {};\r\n                        }\r\n                        data[name][matches[1]] = trySetValue(data[name][matches[1]], field, pieces[1], value);\r\n                    } else {\r\n                        data[name][matches[0]] = trySetValue(data[name][matches[0]], field, pieces[1], value);\r\n                    }\r\n                } else {\r\n                    data = trySetValue(data, field, name, value);\r\n                }\r\n            }\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Set tab status when validating form.\r\n         * @param {Node} el - Node that has a validation error.\r\n         */\r\n        setTabStatus: function(el) {\r\n            var tab = $.closest('.tab-pane', el);\r\n            if (tab) {\r\n                // add error class to tab\r\n                var id = tab.getAttribute('aria-labelledby');\r\n                if (id) {\r\n                    $.toggleClass($.get('#' + id), 'tab-validation-error', $.hasClass(el, 'mform-control-error'));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Run the form validator and display an error if needed.\r\n         * @returns {bool} Return true if form is valid, else false.\r\n         */\r\n        validateForm: function() {\r\n            var form = this.findForm();\r\n            $.getAll('.tab-validation-error', form).forEach(function(x) {\r\n                $.removeClass(x, 'tab-validation-error');\r\n            });\r\n\r\n            $.dispatch(form, $.events.formValidate);\r\n\r\n            var mErrors = $.getAll('.mform-control-error', form);\r\n            if (mErrors.length) {\r\n                mErrors.forEach(this.setTabStatus);\r\n            }\r\n\r\n            if (mErrors.length || $.getAll('.form-control-error', form).length) {\r\n                Alertify.error($.resx('fixIt'));\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        destroy: function() {\r\n            this.checkEvent(this.elements.content, 'data-close-event');\r\n            $.dispatch($.get('.dash-table', this.elements.content), $.events.tableDestroy);\r\n            m.mount(this.elements.container, null);\r\n            document.body.removeChild(this.elements.container);\r\n            $.dialogs.removeDialog(this.opts.id);\r\n            $.dialogs.refreshTable();\r\n        }\r\n    };\r\n\r\n    return Dialog;\r\n});\r\n","/*!\r\n * Autocomplete mithril component.\r\n */\r\n(function(root, factory) {\r\n    root.Autocomplete = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    var _keys = {\r\n        DOWN: 40,\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        TAB: 9,\r\n        UP: 38\r\n    };\r\n\r\n    /**\r\n     * Escape a string for use with a regex.\r\n     * @param {string} s - String to escape.\r\n     * @returns Escaped string.\r\n     */\r\n    var regExpEscape = function(s) {\r\n        return s.replace(/[-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n    };\r\n\r\n    var Autocomplete = {\r\n        /**\r\n         * Initialize the component.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            this.opts = {\r\n                value: attrs.value,\r\n                valueChanged: false,\r\n                name: attrs.name,\r\n                placeholder: attrs.placeholder,\r\n                active: false,\r\n                required: attrs.required,\r\n                disabled: attrs.disabled,\r\n                onSelect: attrs.onSelect,\r\n                onCancel: attrs.onCancel,\r\n                class: attrs.class,\r\n                list: attrs.list || [],\r\n                filteredList: [],\r\n                container: null,\r\n                selectedIndex: -1\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Update the opts in case the component name is changed.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         * @param vnode\r\n         */\r\n        onupdate: function(vnode) {\r\n            if (vnode.attrs) {\r\n                this.opts.name = vnode.attrs.name;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Grab the DOM containing node after it is created.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oncreate: function(vnode) {\r\n            this.opts.container = vnode.dom;\r\n            this.opts.container.autocomplete = this;\r\n        },\r\n\r\n        /**\r\n         * Update the list of items.\r\n         * @param {string[]} list - Array of strings to show.\r\n         */\r\n        setList: function(list) {\r\n            this.close();\r\n            this.opts.list = list;\r\n            this.opts.filteredList = [];\r\n        },\r\n\r\n        /**\r\n         * Check special keys and respond accordingly.\r\n         * @param {Event} e - Keypress event.\r\n         */\r\n        onKeyDown: function(e) {\r\n            if (this.opts.disabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.opts.active) {\r\n                if (e.keyCode === _keys.ENTER) {\r\n                    var selected = this.opts.filteredList[this.opts.selectedIndex];\r\n                    if (selected) {\r\n                        this.selectItem(selected);\r\n                    } else {\r\n                        this.cancel(true);\r\n                    }\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                } else if (e.keyCode === _keys.ESC) {\r\n                    this.cancel(true);\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                } else if (e.keyCode === _keys.DOWN) {\r\n                    this.selectIndex(Math.min(this.opts.selectedIndex + 1, this.opts.filteredList.length - 1));\r\n                } else if (e.keyCode === _keys.UP) {\r\n                    this.selectIndex(Math.max(this.opts.selectedIndex - 1, 0));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handle the input's value changing and show the list.\r\n         * @param {Event} e - Event that triggered the change.\r\n         */\r\n        onInput: function(e) {\r\n            if (this.opts.value !== e.target.value) {\r\n                this.opts.valueChanged = true;\r\n                this.opts.value = e.target.value;\r\n            }\r\n            if (this.opts.value.length > 1) {\r\n                this.opts.active = true;\r\n                this.opts.selectedIndex = 0;\r\n                var val = this.opts.value.toLowerCase();\r\n                this.opts.filteredList = ($.isFunction(this.opts.list) ? this.opts.list() : this.opts.list).filter(function(x) {\r\n                    return x.toLowerCase().indexOf(val) > -1;\r\n                });\r\n            } else {\r\n                this.opts.filteredList = [];\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Close autocomplete dropdown on lost focus.\r\n         */\r\n        onBlur: function() {\r\n            if (this.opts.active || this.opts.valueChanged) {\r\n                this.cancel(false);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select an item from the list by index.\r\n         * @param {number} index - Filtered list item index.\r\n         */\r\n        selectIndex: function(index) {\r\n            this.opts.selectedIndex = index;\r\n            var ul = $.get('ul', this.opts.container);\r\n            if (ul && ul.children[index]) {\r\n                ul.children[index].scrollIntoView();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select an item by text value.\r\n         * @param {string} item - Text to select.\r\n         * @param {Event} e - Event that triggered this.\r\n         */\r\n        selectItem: function(item, e, focus) {\r\n            if ($.isFunction(this.opts.onSelect)) {\r\n                this.opts.onSelect.call(null, item);\r\n            }\r\n            this.opts.value = item;\r\n            this.close($.isNull(focus) ? true : focus);\r\n            if (e && e.preventDefault) {\r\n                e.preventDefault();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Discard value and close the autocomplete.\r\n         * @param {bool} focus - Focus on the original control after closing if true.\r\n         */\r\n        cancel: function(focus) {\r\n            if (this.opts.valueChanged) {\r\n                this.opts.value = '';\r\n            }\r\n            if ($.isFunction(this.opts.onCancel)) {\r\n                this.opts.onCancel();\r\n            }\r\n            this.close(focus);\r\n        },\r\n\r\n        /**\r\n         * Set value and close the autocomplete.\r\n         * @param {bool} focus - Focus on the original control after closing if true.\r\n         */\r\n        close: function(focus) {\r\n            this.opts.active = false;\r\n            this.opts.selectedIndex = -1;\r\n            this.opts.valueChanged = false;\r\n            if (focus) {\r\n                var input = $.get('input', this.opts.container);\r\n                if (input) {\r\n                    input.focus();\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Highlight val inside item.\r\n         * @param {string} text - Text to highlight in.\r\n         * @param {string} val - Substring to highlight.\r\n         * @returns Marked up string.\r\n         */\r\n        highlightItem: function(text, val) {\r\n            return val === '' ? text : text.replace(RegExp(regExpEscape(val.trim()), 'gi'), '<mark>$&</mark>');\r\n        },\r\n\r\n        /**\r\n         * Create HTML to display component.\r\n         * @returns {Object} Mithril vnode\r\n         */\r\n        view: function() {\r\n            var self = this;\r\n            return m('.mithril-autocomplete-container.autocomplete', { class: self.opts.active ? 'autocomplete-active' : '' },\r\n                m('input.form-input', {\r\n                    type: 'text',\r\n                    name: self.opts.name,\r\n                    placeholder: self.opts.placeholder,\r\n                    class: (self.opts.class || '') + (self.opts.required && !$.hasValue(self.opts.value) ? ' mform-control-error' : ''),\r\n                    autocomplete: 'off',\r\n                    'aria-autocomplete': 'list',\r\n                    onkeydown: self.onKeyDown.bind(self),\r\n                    oninput: self.onInput.bind(self),\r\n                    value: self.opts.value,\r\n                    onblur: self.onBlur.bind(self)\r\n                }),\r\n                self.opts.active && m('ul', self.opts.filteredList.map(function(x, index) {\r\n                    return m('li', {\r\n                        'aria-selected': self.opts.selectedIndex == index,\r\n                        onmousedown: self.selectItem.bind(self, x)\r\n                    }, m.trust(self.highlightItem(x, self.opts.value)));\r\n                }))\r\n            );\r\n        }\r\n    };\r\n\r\n    return Autocomplete;\r\n});\r\n","/*!\r\n * DatePicker mithril component.\r\n * Modified from https://github.com/CreaturesInUnitards/mithril-datepicker\r\n */\r\n(function(root, factory) {\r\n    root.DatePicker = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    var _keys = {\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        SPACE: 32\r\n    };\r\n\r\n    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    var hours = [];\r\n    var minutes = [];\r\n    var i = 0;\r\n    while (hours.push(i++) < 24) { /* nothing to do here */ }\r\n    i = 0;\r\n    while (minutes.push(i++) < 60) { /* nothing to do here */ }\r\n    var prevNextTitles = ['1 Mo', '1 Yr', '10 Yr'];\r\n    var weekStart = 0;\r\n    var locale = 'en-us';\r\n    var formatOptions = null;\r\n    var defaultFormat = 'YYYY-MM-DD HH:mm';\r\n\r\n    function chooseDate(props, e) {\r\n        var box = e.target;\r\n        var selectedDate = parseInt(box.textContent);\r\n        var dateObj = props.date;\r\n        if ($.hasClass(box, 'other-scope')) {\r\n            dateObj.setFullYear(dateObj.getFullYear(), dateObj.getMonth() + (selectedDate > 6 ? -1 : 1), selectedDate);\r\n        } else {\r\n            dateObj.setDate(selectedDate);\r\n        }\r\n    }\r\n\r\n    function dismissAndCommit(props, e) {\r\n        if (e) {\r\n            if (e.target && $.hasClass('number', e.target)) {\r\n                e.preventDefault();\r\n                chooseDate(props, e);\r\n            } else {\r\n                var parent = e.relatedTarget && $.closest('.mithril-date-picker-container', e.relatedTarget);\r\n                if (!parent) {\r\n                    e.preventDefault();\r\n                    props.view = 0;\r\n                    props.active = false;\r\n                }\r\n            }\r\n        }\r\n        // @todo this probably needs more testing to make sure it triggers correctly\r\n        if (props.onchange) {\r\n            props.onchange(props.date);\r\n        }\r\n    }\r\n\r\n    function checkKey(props, e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (e.keyCode === _keys.ESC) {\r\n            dismissAndCommit(props, e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function prevNext(props, delta) {\r\n        var newDate = new Date(props.date);\r\n        switch (props.view) {\r\n            case 0:\r\n                newDate.setMonth(newDate.getMonth() + delta);\r\n                break;\r\n            case 1:\r\n                newDate.setFullYear(newDate.getFullYear() + delta);\r\n                break;\r\n            default:\r\n                newDate.setFullYear(newDate.getFullYear() + (delta * 10));\r\n        }\r\n        props.date = pushToLastDay(props.date, newDate);\r\n    }\r\n\r\n    function adjustedProps(date, delta) {\r\n        var month = date.getMonth() + delta, year = date.getFullYear();\r\n        var over = month > 11, under = month < 0;\r\n        return {\r\n            month: over ? 0 : under ? 11 : month,\r\n            year: over ? year + 1 : under ? year - 1 : year\r\n        };\r\n    }\r\n\r\n    function lastDateInMonth(date, delta) {\r\n        var obj = adjustedProps(date, delta);\r\n        if ([0, 2, 4, 6, 7, 9, 11].indexOf(obj.month) > -1) {\r\n            return 31; // array of 31-day props.months\r\n        }\r\n        if (obj.month === 1) { // February\r\n            if (!(obj.year % 400)) {\r\n                return 29;\r\n            }\r\n            if (!(obj.year % 100)) {\r\n                return 28;\r\n            }\r\n            return (obj.year % 4) ? 28 : 29;\r\n        }\r\n        return 30;\r\n    }\r\n\r\n    function pushToLastDay(oldDate, newDate) {\r\n        if (oldDate.getDate() !== newDate.getDate()) {\r\n            newDate.setMonth(newDate.getMonth() - 1, lastDateInMonth(newDate, -1));\r\n        }\r\n        return newDate;\r\n    }\r\n\r\n    function stringsForLocale(locale) {\r\n        var date = new Date('jan 1 2017'), _months = [], _days = []; // 1/1/2017 was month:0 and weekday:0, so perfect\r\n        while (_days.length < 7) {\r\n            _days.push(date.toLocaleDateString(locale, { weekday: 'long' }));\r\n            date.setDate(date.getDate() + 1);\r\n        }\r\n        while (_months.length < 12) {\r\n            _months.push(date.toLocaleDateString(locale, { month: 'long' }));\r\n            date.setMonth(date.getMonth() + 1);\r\n        }\r\n        return { days: _days, months: _months };\r\n    }\r\n\r\n    function wrapAround(idx, array) {\r\n        var len = array.length;\r\n        var n = idx >= len ? idx - len : idx;\r\n        return array[n];\r\n    }\r\n\r\n    function daysFromLastMonth(props) {\r\n        var month = props.date.getMonth(), year = props.date.getFullYear();\r\n        var firstDay = (new Date(year, month, 1)).getDay() - props.weekStart;\r\n        if (firstDay < 0) firstDay += 7;\r\n        var array = [];\r\n        var lastDate = lastDateInMonth(props.date, -1);\r\n        var offsetStart = lastDate - firstDay + 1;\r\n        for (var i = offsetStart; i <= lastDate; i++) {\r\n            array.push(i);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function daysFromThisMonth(props) {\r\n        var max = lastDateInMonth(props.date, 0);\r\n        var array = [];\r\n        for (var i = 1; i <= max; i++) {\r\n            array.push(i);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function daysFromNextMonth(prev, these) {\r\n        var soFar = prev.concat(these);\r\n        var mod = soFar.length % 7;\r\n        var array = [];\r\n        if (mod > 0) {\r\n            var n = 7 - mod;\r\n            for (var i = 1; i <= n; i++) {\r\n                array.push(i);\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function defaultDate() {\r\n        var now = new Date();\r\n        now.setHours(0, 0, 0, 0);\r\n        return now;\r\n    }\r\n\r\n    function yearsForDecade(date) {\r\n        var year = date.getFullYear();\r\n        var start = year - (year % 10);\r\n        var array = [];\r\n        for (var i = start; i < start + 10; i++) {\r\n            array.push(i);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function classForBox(a, b) {\r\n        return a === b ? 'chosen' : '';\r\n    }\r\n\r\n    var Header = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var date = props.date;\r\n            var theseMonths = props.months || months;\r\n            return m('.header',\r\n                m('button.header-button.prev', { onclick: prevNext.bind(null, props, -1) }, [\r\n                    m('i.dash.dash-to-start'),\r\n                    prevNextTitles[props.view]\r\n                ]),\r\n                m('button.header-button.segment', { onclick: function() { props.view = 0; } }, date.getDate()),\r\n                m('button.header-button.segment', { onclick: function() { props.view = 1; } }, theseMonths[date.getMonth()].substr(0, 3)),\r\n                m('button.header-button.segment', { onclick: function() { props.view = 2; } }, date.getFullYear()),\r\n                m('button.header-button.next', { onclick: prevNext.bind(null, props, 1) }, [\r\n                    prevNextTitles[props.view],\r\n                    m('i.dash.dash-to-end')\r\n                ])\r\n            );\r\n        }\r\n    };\r\n\r\n    var MonthView = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var prevDates = daysFromLastMonth(props);\r\n            var theseDates = daysFromThisMonth(props);\r\n            var nextDates = daysFromNextMonth(prevDates, theseDates);\r\n            var theseWeekdays = props.days || days;\r\n            return m('.calendar',\r\n                m('.weekdays', theseWeekdays.map(function(_, idx) {\r\n                    var day = wrapAround(idx + props.weekStart, theseWeekdays);\r\n                    return m('.day.dummy', day.substring(0, 2));\r\n                })),\r\n                m('.weekdays', {\r\n                    onclick: function(e) {\r\n                        chooseDate(props, e);\r\n                    }\r\n                }, prevDates.map(function(date) {\r\n                    return m('button.day.other-scope', date);\r\n                }), theseDates.map(function(date) {\r\n                    return m('button.day', { class: classForBox(props.date.getDate(), date) }, m('.number', date));\r\n                }), nextDates.map(function(date) {\r\n                    return m('button.day.other-scope', date);\r\n                })),\r\n                m('.time',\r\n                    m('select.form-select', {\r\n                        value: props.date.getHours(), onchange: function(e) {\r\n                            props.date.setHours(e.target.value);\r\n                            props.date.setHours(e.target.value);\r\n                            if (props.onchange) {\r\n                                props.onchange(props.date);\r\n                            }\r\n                        }\r\n                    }, hours.map(function(x) {\r\n                        return m('option', { value: x }, ('00' + x).slice(-2));\r\n                    })),\r\n                    m('select.form-select', {\r\n                        value: props.date.getMinutes(), onchange: function(e) {\r\n                            props.date.setMinutes(e.target.value);\r\n                            props.date.setMinutes(e.target.value);\r\n                            if (props.onchange) {\r\n                                props.onchange(props.date);\r\n                            }\r\n                        }\r\n                    }, minutes.map(function(x) {\r\n                        return m('option', { value: x }, ('00' + x).slice(-2));\r\n                    }))\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var YearView = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var theseMonths = props.months || months;\r\n            return m('.calendar',\r\n                m('.months',\r\n                    theseMonths.map(function(month, idx) {\r\n                        return m('button.month', {\r\n                            class: classForBox(props.date.getMonth(), idx), onclick: function() {\r\n                                var newDate = new Date(props.date);\r\n                                newDate.setMonth(idx);\r\n                                props.date = pushToLastDay(props.date, newDate);\r\n                                props.view = 0;\r\n                            }\r\n                        }, m('.number', month));\r\n                    })\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var DecadeView = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var decade = yearsForDecade(props.date);\r\n            return m('.calendar',\r\n                m('.years',\r\n                    decade.map(function(year) {\r\n                        return m('button.year', {\r\n                            class: classForBox(props.date.getFullYear(), year), onclick: function() {\r\n                                var newDate = new Date(props.date);\r\n                                newDate.setFullYear(year);\r\n                                props.date = pushToLastDay(props.date, newDate);\r\n                                props.view = 1;\r\n                            }\r\n                        }, m('.number', year));\r\n                    })\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var Editor = {\r\n        oncreate: function(vnode) {\r\n            requestAnimationFrame(function() {\r\n                vnode.dom.classList.add('active');\r\n            });\r\n        },\r\n        onbeforeremove: function(vnode) {\r\n            vnode.dom.classList.remove('active');\r\n            return new Promise(function(done) {\r\n                setTimeout(done, 200);\r\n            });\r\n        },\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            return m('.editor', { onkeydown: checkKey.bind(null, props) },\r\n                m(Header, { props: props }),\r\n                m('.sled', { class: 'p' + props.view },\r\n                    m(MonthView, { props: props }),\r\n                    m(YearView, { props: props }),\r\n                    m(DecadeView, { props: props })\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var DatePicker = {\r\n        localize: function(loc) {\r\n            if (loc) {\r\n                prevNextTitles = loc.prevNextTitles || prevNextTitles;\r\n                locale = loc.locale || locale;\r\n                formatOptions = loc.formatOptions || formatOptions;\r\n                weekStart = $.isNumber(loc.weekStart) ? loc.weekStart : weekStart;\r\n                var strings = stringsForLocale(locale);\r\n                days = strings.days;\r\n                months = strings.months;\r\n            }\r\n        },\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            var date = new Date(attrs.date || defaultDate());\r\n            if (!attrs.date) {\r\n                attrs.onchange(date);\r\n            }\r\n            var props = {\r\n                date: date,\r\n                format: attrs.format || defaultFormat,\r\n                name: attrs.name,\r\n                active: false,\r\n                view: 0,\r\n                required: attrs.required,\r\n                disabled: attrs.disabled,\r\n                onchange: attrs.onchange,\r\n                class: attrs.class\r\n            };\r\n\r\n            ['prevNextTitles', 'locale', 'formatOptions'].forEach(function(prop) {\r\n                props[prop] = attrs[prop] || prop;\r\n            });\r\n            props.weekStart = $.isNumber(attrs.weekStart) ? attrs.weekStart : weekStart;\r\n\r\n            if (attrs.locale && attrs.locale !== locale) {\r\n                var strings = stringsForLocale(props.locale);\r\n                props.days = strings.days;\r\n                props.months = strings.months;\r\n            }\r\n\r\n            vnode.state.props = props;\r\n        },\r\n        onbeforeupdate: function(vnode) {\r\n            vnode.state.props.class = vnode.attrs.class;\r\n        },\r\n        onupdate: function(vnode) {\r\n            var chosen = $.get('.chosen', vnode.dom);\r\n            if (chosen) {\r\n                chosen.focus();\r\n            }\r\n        },\r\n        showEditor: function(props, e) {\r\n            if (e && e instanceof KeyboardEvent) {\r\n                if (e.keyCode !== _keys.SPACE && e.keyCode !== _keys.ENTER) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (props.disabled) {\r\n                return;\r\n            }\r\n            if (props.active) {\r\n                props.view = 0;\r\n            }\r\n            props.active = !props.active;\r\n        },\r\n        view: function(vnode) {\r\n            var props = vnode.state.props;\r\n            return m('.mithril-date-picker-container', { class: ((props.active ? 'active' : '') + ' ' + props.class).trim() },\r\n                m('input.current-date.form-input', {\r\n                    name: props.name,\r\n                    class: props.required ? 'required' : null,\r\n                    format: props.format,\r\n                    readonly: true,\r\n                    onclick: this.showEditor.bind(null, props),\r\n                    onkeydown: this.showEditor.bind(null, props),\r\n                    value: $.fecha.format(props.date, props.format || defaultFormat)\r\n                }),\r\n                m('i.dash.current-date-indicator', { class: props.active ? 'dash-sort-up' : 'dash-sort-down' }),\r\n                props.active && m(Editor, { props: props })\r\n            );\r\n        }\r\n    };\r\n\r\n    return DatePicker;\r\n});\r\n","/*!\r\n * Library for storing widget positions and detecting collisions.\r\n */\r\n(function(root, factory) {\r\n    root.Rect = factory(root.$);\r\n})(this, function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Constructor for a rect.\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     */\r\n    function Rect(width, height, x, y) {\r\n        this.x = $.coalesce(x, 0);\r\n        this.y = $.coalesce(y, 0);\r\n        this.width = $.coalesce(width, 0);\r\n        this.height = $.coalesce(height, 0);\r\n        this.updated = false;\r\n    }\r\n\r\n    Rect.prototype = {\r\n        /**\r\n         * Check if rect intersects with this rect.\r\n         * @param {Rect} rect - Rect to check for intersection with.\r\n         * @returns {bool} True if the rectangles collide, else false.\r\n         */\r\n        overlaps: function(rect) {\r\n            var thisRight = this.x + this.width;\r\n            var thisBottom = this.y + this.height;\r\n            var rectRight = rect.x + rect.width;\r\n            var rectBottom = rect.y + rect.height;\r\n\r\n            // http://stackoverflow.com/a/306332\r\n            return this.x < rectRight && thisRight > rect.x && this.y < rectBottom && thisBottom > rect.y;\r\n        }\r\n    };\r\n\r\n    return Rect;\r\n});\r\n","/*!\r\n * Draggabilly PACKAGED v2.1.1\r\n * Make that shiz draggable\r\n * http://draggabilly.desandro.com\r\n * MIT license\r\n *\r\n * Modified to remove jQuery completely.\r\n */\r\n\r\n/*!\r\n * getSize v2.0.2\r\n * measure size of elements\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    root.getSize = factory(root.$);\r\n})(this, function factory($) {\r\n    /**\r\n     * Get a number from a string, not a percentage.\r\n     * @param {string} value - String to parse.\r\n     * @returns {Number} Returns the number.\r\n     */\r\n    function getStyleSize(value) {\r\n        var num = parseFloat(value);\r\n        // not a percent like '100%', and a number\r\n        return value.indexOf('%') === -1 && !isNaN(num) && num;\r\n    }\r\n\r\n    var measurements = [\r\n        'paddingLeft',\r\n        'paddingRight',\r\n        'paddingTop',\r\n        'paddingBottom',\r\n        'marginLeft',\r\n        'marginRight',\r\n        'marginTop',\r\n        'marginBottom',\r\n        'borderLeftWidth',\r\n        'borderRightWidth',\r\n        'borderTopWidth',\r\n        'borderBottomWidth'\r\n    ];\r\n\r\n    var measurementsLength = measurements.length;\r\n\r\n    /**\r\n     * Build the size measurements for a hidden element.\r\n     * @returns {Object} Measurements for the element.\r\n     */\r\n    function getZeroSize() {\r\n        var size = {\r\n            width: 0,\r\n            height: 0,\r\n            innerWidth: 0,\r\n            innerHeight: 0,\r\n            outerWidth: 0,\r\n            outerHeight: 0\r\n        };\r\n        for (var i = 0; i < measurementsLength; i++) {\r\n            size[measurements[i]] = 0;\r\n        }\r\n        return size;\r\n    }\r\n\r\n    var isSetup = false;\r\n    var isBoxSizeOuter;\r\n\r\n    /**\r\n     * Setup the instance.\r\n     */\r\n    function setup() {\r\n        // setup once\r\n        if (isSetup) {\r\n            return;\r\n        }\r\n        isSetup = true;\r\n\r\n        /**\r\n         * WebKit measures the outer-width on style.width on border-box elems\r\n         * IE & Firefox<29 measures the inner-width\r\n         */\r\n        var div = document.createElement('div');\r\n        $.style(div, { width: '200px', padding: '1px 2px 3px 4px', borderStyle: 'solid', borderWidth: '1px 2px 3px 4px', boxSizing: 'border-box' });\r\n\r\n        var body = document.body || document.documentElement;\r\n        body.appendChild(div);\r\n        var style = getComputedStyle(div);\r\n\r\n        getSize.isBoxSizeOuter = isBoxSizeOuter = getStyleSize(style.width) === 200;\r\n        body.removeChild(div);\r\n    }\r\n\r\n    /**\r\n     * Get the dimensions of a node.\r\n     * @param {Node|string} elem - Node object or query selector.\r\n     * @returns {Object} Dimensions for node.\r\n     */\r\n    function getSize(elem) {\r\n        setup();\r\n\r\n        elem = $.get(elem);\r\n        if (!$.isNode(elem)) {\r\n            return;\r\n        }\r\n\r\n        var style = getComputedStyle(elem);\r\n\r\n        // if hidden, everything is 0\r\n        if (style.display === 'none') {\r\n            return getZeroSize();\r\n        }\r\n\r\n        var size = { width: elem.offsetWidth, height: elem.offsetHeight };\r\n        var isBorderBox = size.isBorderBox = style.boxSizing === 'border-box';\r\n\r\n        // get all measurements\r\n        for (var i = 0; i < measurementsLength; i++) {\r\n            var measurement = measurements[i];\r\n            var value = style[measurement];\r\n            var num = parseFloat(value);\r\n            // any 'auto', 'medium' value will be 0\r\n            size[measurement] = !isNaN(num) ? num : 0;\r\n        }\r\n\r\n        var paddingWidth = size.paddingLeft + size.paddingRight;\r\n        var paddingHeight = size.paddingTop + size.paddingBottom;\r\n        var marginWidth = size.marginLeft + size.marginRight;\r\n        var marginHeight = size.marginTop + size.marginBottom;\r\n        var borderWidth = size.borderLeftWidth + size.borderRightWidth;\r\n        var borderHeight = size.borderTopWidth + size.borderBottomWidth;\r\n        var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\r\n\r\n        // overwrite width and height if we can get it from style\r\n        var styleWidth = getStyleSize(style.width);\r\n        if (styleWidth !== false) {\r\n            // add padding and border unless it's already including it\r\n            size.width = styleWidth + (isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth);\r\n        }\r\n\r\n        var styleHeight = getStyleSize(style.height);\r\n        if (styleHeight !== false) {\r\n            // add padding and border unless it's already including it\r\n            size.height = styleHeight + (isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight);\r\n        }\r\n\r\n        size.innerWidth = size.width - (paddingWidth + borderWidth);\r\n        size.innerHeight = size.height - (paddingHeight + borderHeight);\r\n        size.outerWidth = size.width + marginWidth;\r\n        size.outerHeight = size.height + marginHeight;\r\n\r\n        return size;\r\n    }\r\n\r\n    return getSize;\r\n});\r\n\r\n/**\r\n * EvEmitter v1.0.3\r\n * Lil' event emitter\r\n * MIT License\r\n */\r\n\r\n/* jshint unused: true, undef: true, strict: true */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.EvEmitter = factory();\r\n}(this, function() {\r\n    /**\r\n     * Constructor for the event emitter.\r\n     */\r\n    function EvEmitter() { }\r\n\r\n    EvEmitter.prototype = {\r\n        /**\r\n         * Add an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Function} listener - Callback function\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        on: function(eventName, listener) {\r\n            if (!eventName || !listener) {\r\n                return;\r\n            }\r\n            // set events hash\r\n            var events = this._events = this._events || {};\r\n            // set listeners array\r\n            var listeners = events[eventName] = events[eventName] || [];\r\n            // only add once\r\n            if (listeners.indexOf(listener) === -1) {\r\n                listeners.push(listener);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Remove an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Function} listener - Callback function\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        off: function(eventName, listener) {\r\n            var listeners = this._events && this._events[eventName];\r\n            if (!listeners || !listeners.length) {\r\n                return;\r\n            }\r\n            var index = listeners.indexOf(listener);\r\n            if (index !== -1) {\r\n                listeners.splice(index, 1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Dispatch an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Array} args - Arguments for the callback.\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        emitEvent: function(eventName, args) {\r\n            var listeners = this._events && this._events[eventName];\r\n            if (!listeners || !listeners.length) {\r\n                return;\r\n            }\r\n            args = args || [];\r\n            listeners.forEach(function(x) {\r\n                x.apply(this, args);\r\n            });\r\n            return this;\r\n        }\r\n    };\r\n\r\n    return EvEmitter;\r\n}));\r\n\r\n/*!\r\n * Unipointer v2.1.0\r\n * base class for doing one thing with pointer event\r\n * MIT license\r\n */\r\n\r\n/*jshint browser: true, undef: true, unused: true, strict: true */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Unipointer = factory(root.$, root, root.EvEmitter);\r\n}(this, function factory($, root, EvEmitter) {\r\n    /**\r\n     * Constructor for the Unipointer\r\n     */\r\n    function Unipointer() { }\r\n\r\n    // inherit EvEmitter\r\n    var proto = Unipointer.prototype = Object.create(EvEmitter.prototype);\r\n\r\n    /**\r\n     * Add an event to start dragging.\r\n     * @param {Node} elem - Node to add the event to.\r\n     */\r\n    proto.bindStartEvent = function(elem) {\r\n        this._bindStartEvent(elem, true);\r\n    };\r\n\r\n    /**\r\n     * Remove an event to start dragging.\r\n     * @param {Node} elem - Node to remove the event from.\r\n     */\r\n    proto.unbindStartEvent = function(elem) {\r\n        this._bindStartEvent(elem, false);\r\n    };\r\n\r\n    /**\r\n     * Add/remove the event to start dragging.\r\n     * @param {Node} elem - Node to add/remove the event to.\r\n     * @param {Boolean} isBind - will unbind if falsey.\r\n     * @private\r\n     */\r\n    proto._bindStartEvent = function(elem, isBind) {\r\n        var bindMethod = $.coalesce(isBind, true) ? 'addEventListener' : 'removeEventListener';\r\n\r\n        if (window.navigator.pointerEnabled) {\r\n            // W3C Pointer Events, IE11. See https://coderwall.com/p/mfreca\r\n            elem[bindMethod]('pointerdown', this);\r\n        } else if (window.navigator.msPointerEnabled) {\r\n            // IE10 Pointer Events\r\n            elem[bindMethod]('MSPointerDown', this);\r\n        } else {\r\n            // listen for both, for devices like Chrome Pixel\r\n            elem[bindMethod]('mousedown', this);\r\n            elem[bindMethod]('touchstart', this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Trigger handler methods for events\r\n     * @param {Event} event - Event to trigger.\r\n     */\r\n    proto.handleEvent = function(event) {\r\n        var method = 'on' + event.type;\r\n        if (this[method]) {\r\n            this[method](event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns the touch that we're keeping track of.\r\n     * @param {Touch[]} touches - Touch history\r\n     * @returns {Touch} Touch event.\r\n     */\r\n    proto.getTouch = function(touches) {\r\n        return $.findByKey(touches, 'identifier', this.pointerIdentifier);\r\n    };\r\n\r\n    /**\r\n     * Handle a mouse click.\r\n     * @param {Event} event - Click event.\r\n     */\r\n    proto.onmousedown = function(event) {\r\n        // dismiss clicks from right or middle buttons\r\n        var button = event.button;\r\n        if (button && (button !== 0 && button !== 1)) {\r\n            return;\r\n        }\r\n        this._pointerDown(event, event);\r\n    };\r\n\r\n    /**\r\n     * Handle a touch.\r\n     * @param {Touch} event - Touch event.\r\n     */\r\n    proto.ontouchstart = function(event) {\r\n        this._pointerDown(event, event.changedTouches[0]);\r\n    };\r\n\r\n    /**\r\n     * Handle a mouse click for IE.\r\n     * @param {Event} event - Click event.\r\n     */\r\n    proto.onMSPointerDown = proto.onpointerdown = function(event) {\r\n        this._pointerDown(event, event);\r\n    };\r\n\r\n    /**\r\n     * Start a click/touch event.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerDown = function(event, pointer) {\r\n        // dismiss other pointers\r\n        if (this.isPointerDown) {\r\n            return;\r\n        }\r\n\r\n        this.isPointerDown = true;\r\n        // save pointer identifier to match up touch events\r\n        // pointerId for pointer events, touch.indentifier for touch events\r\n        this.pointerIdentifier = pointer.pointerId !== undefined ? pointer.pointerId : pointer.identifier;\r\n        this.pointerDown(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Bind events after the start of a click/touch event.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        this._bindPostStartEvents(event);\r\n        this.emitEvent('pointerDown', [event, pointer]);\r\n    };\r\n\r\n    // hash of events to be bound after start event\r\n    var postStartEvents = {\r\n        mousedown: ['mousemove', 'mouseup'],\r\n        touchstart: ['touchmove', 'touchend', 'touchcancel'],\r\n        pointerdown: ['pointermove', 'pointerup', 'pointercancel'],\r\n        MSPointerDown: ['MSPointerMove', 'MSPointerUp', 'MSPointerCancel']\r\n    };\r\n\r\n    /**\r\n     * Add all of the events that are needed after start dragging.\r\n     * @param {Event} event - Original click/touch event.\r\n     * @private\r\n     */\r\n    proto._bindPostStartEvents = function(event) {\r\n        if (!event) {\r\n            return;\r\n        }\r\n        // get proper events to match start event\r\n        var events = postStartEvents[event.type];\r\n        // bind events to node\r\n        events.forEach(function(eventName) {\r\n            window.addEventListener(eventName, this);\r\n        }, this);\r\n        // save these arguments\r\n        this._boundPointerEvents = events;\r\n    };\r\n\r\n    /**\r\n     * Remove all of the events that are needed after start dragging.\r\n     * @param {Event} event - Original click/touch event.\r\n     * @private\r\n     */\r\n    proto._unbindPostStartEvents = function() {\r\n        // check for _boundEvents, in case dragEnd triggered twice (old IE8 bug)\r\n        if (!this._boundPointerEvents) {\r\n            return;\r\n        }\r\n        this._boundPointerEvents.forEach(function(eventName) {\r\n            window.removeEventListener(eventName, this);\r\n        }, this);\r\n\r\n        delete this._boundPointerEvents;\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse moves.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onmousemove = function(event) {\r\n        this._pointerMove(event, event);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse moves for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerMove = proto.onpointermove = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerMove(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch moves.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchmove = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerMove(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer move from all the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerMove = function(event, pointer) {\r\n        this.pointerMove(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer move event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        this.emitEvent('pointerMove', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse button is released.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onmouseup = function(event) {\r\n        this._pointerUp(event, event);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse button is released for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerUp = proto.onpointerup = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerUp(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch is released.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchend = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerUp(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer up from all the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerUp = function(event, pointer) {\r\n        this._pointerDone();\r\n        this.pointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer up event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        this.emitEvent('pointerUp', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Event handler for when the dragging stops.\r\n     * @private\r\n     */\r\n    proto._pointerDone = function() {\r\n        // reset properties\r\n        this.isPointerDown = false;\r\n        delete this.pointerIdentifier;\r\n        // remove events\r\n        this._unbindPostStartEvents();\r\n        this.pointerDone();\r\n    };\r\n\r\n    proto.pointerDone = $.noop;\r\n\r\n    /**\r\n     * Event handler when the mouse click is canceled for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerCancel = proto.onpointercancel = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerCancel(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch is canceled.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchcancel = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerCancel(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer cancel from all of the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerCancel = function(event, pointer) {\r\n        this._pointerDone();\r\n        this.pointerCancel(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer cancel event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerCancel = function(event, pointer) {\r\n        this.emitEvent('pointerCancel', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Utility function for getting x/y coords from event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @returns {Object} Object with x & y coordinates.\r\n     */\r\n    Unipointer.getPointerPoint = function(pointer) {\r\n        return {\r\n            x: pointer.pageX,\r\n            y: pointer.pageY\r\n        };\r\n    };\r\n\r\n    return Unipointer;\r\n}));\r\n\r\n/*!\r\n * Unidragger v2.1.0\r\n * Draggable base class\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Unidragger = factory(root.$, root, root.Unipointer);\r\n}(this, function factory($, root, Unipointer) {\r\n    /**\r\n     * Unidragger constructor.\r\n     */\r\n    function Unidragger() { }\r\n\r\n    /**\r\n     * Inherit Unipointer & EvEmitter\r\n     */\r\n    var proto = Unidragger.prototype = Object.create(Unipointer.prototype);\r\n\r\n    /**\r\n     * Add events for drag handle.\r\n     */\r\n    proto.bindHandles = function() {\r\n        this._bindHandles(true);\r\n    };\r\n\r\n    /**\r\n     * Remove events for drag handle.\r\n     */\r\n    proto.unbindHandles = function() {\r\n        this._bindHandles(false);\r\n    };\r\n\r\n    /**\r\n     * Handle adding/removing events for the drag handle.\r\n     * @param {Bool} isBind - Unbind if falsey.\r\n     */\r\n    proto._bindHandles = function(isBind) {\r\n        isBind = $.coalesce(isBind, true);\r\n        // extra bind logic\r\n        var binderExtra;\r\n        var navigator = window.navigator;\r\n        if (navigator.pointerEnabled || navigator.msPointerEnabled) {\r\n            var prop = navigator.pointerEnabled ? 'touchAction' : 'msTouchAction';\r\n            binderExtra = function(handle) {\r\n                // disable scrolling on the element\r\n                handle.style[prop] = isBind ? 'none' : '';\r\n            };\r\n        } else {\r\n            binderExtra = $.noop;\r\n        }\r\n        // bind each handle\r\n        var bindMethod = isBind ? 'addEventListener' : 'removeEventListener';\r\n        for (var i = 0; i < this.handles.length; i++) {\r\n            var handle = this.handles[i];\r\n            this._bindStartEvent(handle, isBind);\r\n            binderExtra(handle);\r\n            handle[bindMethod]('click', this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Pointer start\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        // dismiss range sliders\r\n        if (event.target.nodeName === 'INPUT' && event.target.type === 'range') {\r\n            // reset pointerDown logic\r\n            this.isPointerDown = false;\r\n            delete this.pointerIdentifier;\r\n            return;\r\n        }\r\n\r\n        this._dragPointerDown(event, pointer);\r\n        // kludge to blur focused inputs in dragger\r\n        var focused = document.activeElement;\r\n        if (focused && focused.blur) {\r\n            focused.blur();\r\n        }\r\n        // bind move and end events\r\n        this._bindPostStartEvents(event);\r\n        this.emitEvent('pointerDown', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Base pointer down logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragPointerDown = function(event, pointer) {\r\n        // track to see when dragging starts\r\n        this.pointerDownPoint = Unipointer.getPointerPoint(pointer);\r\n        if (this.canPreventDefaultOnPointerDown(event, pointer)) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Overwriteable method so Flickity can prevent for scrolling\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @returns {Bool} True if allowed to prevent default event, else false.\r\n     */\r\n    proto.canPreventDefaultOnPointerDown = function(event) {\r\n        // prevent default, unless touchstart or <select>\r\n        return event.target.nodeName !== 'SELECT';\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        var moveVector = this._dragPointerMove(event, pointer);\r\n        this.emitEvent('pointerMove', [event, pointer, moveVector]);\r\n        this._dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Base pointer move logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @returns {Object} Object with x & y coordinates.\r\n     */\r\n    proto._dragPointerMove = function(event, pointer) {\r\n        var movePoint = Unipointer.getPointerPoint(pointer);\r\n        var moveVector = {\r\n            x: movePoint.x - this.pointerDownPoint.x,\r\n            y: movePoint.y - this.pointerDownPoint.y\r\n        };\r\n        // start drag if pointer has moved far enough to start drag\r\n        if (!this.isDragging && this.hasDragStarted(moveVector)) {\r\n            this._dragStart(event, pointer);\r\n        }\r\n        return moveVector;\r\n    };\r\n\r\n    /**\r\n     * Check if pointer has moved far enough to start drag.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     * @returns {Bool} True if moved far enough to count as move.\r\n     */\r\n    proto.hasDragStarted = function(moveVector) {\r\n        return Math.abs(moveVector.x) > 3 || Math.abs(moveVector.y) > 3;\r\n    };\r\n\r\n    /**\r\n     * Pointer up.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        this.emitEvent('pointerUp', [event, pointer]);\r\n        this._dragPointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Handle mouse/touch up.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragPointerUp = function(event, pointer) {\r\n        if (this.isDragging) {\r\n            this._dragEnd(event, pointer);\r\n        } else {\r\n            // pointer didn't move enough for drag to start\r\n            this._staticClick(event, pointer);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Base drag start logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._dragStart = function(event, pointer) {\r\n        this.isDragging = true;\r\n        this.dragStartPoint = Unipointer.getPointerPoint(pointer);\r\n        this.isPreventingClicks = true;\r\n        this.dragStart(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag start event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragStart = function(event, pointer) {\r\n        this.emitEvent('dragStart', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Base drag move logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     * @private\r\n     */\r\n    proto._dragMove = function(event, pointer, moveVector) {\r\n        // do not drag if not dragging yet\r\n        if (!this.isDragging) {\r\n            return;\r\n        }\r\n        this.dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag move event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     */\r\n    proto.dragMove = function(event, pointer, moveVector) {\r\n        event.preventDefault();\r\n        this.emitEvent('dragMove', [event, pointer, moveVector]);\r\n    };\r\n\r\n    /**\r\n     * Base logic for drag end.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragEnd = function(event, pointer) {\r\n        this.isDragging = false;\r\n        // re-enable clicking async\r\n        setTimeout(function() {\r\n            delete this.isPreventingClicks;\r\n        }.bind(this));\r\n        this.dragEnd(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag end event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragEnd = function(event, pointer) {\r\n        this.emitEvent('dragEnd', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Handle all clicks and prevent clicks when dragging\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     */\r\n    proto.onclick = function(event) {\r\n        if (this.isPreventingClicks) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Triggered after pointer down & up with no/tiny movement.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._staticClick = function(event, pointer) {\r\n        // ignore emulated mouse up clicks\r\n        if (this.isIgnoringMouseUp && event.type === 'mouseup') {\r\n            return;\r\n        }\r\n\r\n        // allow click in <input>s and <textarea>s\r\n        var nodeName = event.target.nodeName;\r\n        if (nodeName === 'INPUT' || nodeName === 'TEXTAREA') {\r\n            event.target.focus();\r\n        }\r\n        this.staticClick(event, pointer);\r\n\r\n        // set flag for emulated clicks 300ms after touchend\r\n        if (event.type !== 'mouseup') {\r\n            this.isIgnoringMouseUp = true;\r\n            // reset flag after 300ms\r\n            setTimeout(function() {\r\n                delete this.isIgnoringMouseUp;\r\n            }.bind(this), 400);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Dispatch event for staticClick for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.staticClick = function(event, pointer) {\r\n        this.emitEvent('staticClick', [event, pointer]);\r\n    };\r\n\r\n    return Unidragger;\r\n}));\r\n\r\n/*!\r\n * Draggabilly v2.1.1\r\n * Make that shiz draggable\r\n * http://draggabilly.desandro.com\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Draggabilly = factory(root.$, root, root.getSize, root.Unidragger);\r\n}(this, function factory($, root, getSize, Unidragger) {\r\n    var lastTime = 0;\r\n    // get rAF, prefixed, if present. fallback to setTimeout\r\n    var requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(callback) {\r\n        var currTime = new Date().getTime();\r\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n        var id = setTimeout(callback, timeToCall);\r\n        lastTime = currTime + timeToCall;\r\n        return id;\r\n    };\r\n    var transformProperty = $.isString(document.documentElement.style.transform) ? 'transform' : 'WebkitTransform';\r\n\r\n    /**\r\n     * Draggabilly constructor.\r\n     * @param {Node|string} element - Node, or querySelector string of node, to make draggable.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    function Draggabilly(element, options) {\r\n        this.element = $.get(element);\r\n        this.options = options || {};\r\n        this._create();\r\n    }\r\n\r\n    /**\r\n     * Inherit Unidragger methods.\r\n     */\r\n    var proto = Draggabilly.prototype = Object.create(Unidragger.prototype);\r\n\r\n    /**\r\n     * CSS position values that don't need to be set.\r\n     */\r\n    var positionValues = { relative: true, absolute: true, fixed: true };\r\n\r\n    /**\r\n     * Initialize draggabilly.\r\n     */\r\n    proto._create = function() {\r\n        // properties\r\n        this.position = {};\r\n        this._getPosition();\r\n\r\n        this.startPoint = { x: 0, y: 0 };\r\n        this.dragPoint = { x: 0, y: 0 };\r\n        this.startPosition = {};\r\n\r\n        // set relative positioning\r\n        var style = getComputedStyle(this.element);\r\n        if (!positionValues[style.position]) {\r\n            this.element.style.position = 'relative';\r\n        }\r\n\r\n        this.enable();\r\n        this.setHandles();\r\n    };\r\n\r\n    /**\r\n     * Set this.handles and bind start events to the handles.\r\n     */\r\n    proto.setHandles = function() {\r\n        this.handles = this.options.handle ? $.getAll(this.options.handle, this.element) : [this.element];\r\n        this.bindHandles();\r\n    };\r\n\r\n    /**\r\n     * Emits events via EvEmitter.\r\n     * @param {String} type - Name of event.\r\n     * @param {Event} event - Original event.\r\n     * @param {Array} args - Extra arguments.\r\n     */\r\n    proto.dispatchEvent = function(type, event, args) {\r\n        this.emitEvent(type, [event].concat(args));\r\n    };\r\n\r\n    /**\r\n     * Get x/y position from style.\r\n     */\r\n    proto._getPosition = function() {\r\n        var style = getComputedStyle(this.element);\r\n        var x = this._getPositionCoord(style.left, 'width');\r\n        var y = this._getPositionCoord(style.top, 'height');\r\n        // clean up 'auto' or other non-integer values\r\n        this.position.x = isNaN(x) ? 0 : x;\r\n        this.position.y = isNaN(y) ? 0 : y;\r\n\r\n        this._addTransformPosition(style);\r\n    };\r\n\r\n    /**\r\n     * Get a numeric coordinate from a style.\r\n     * @param {String} styleSide - CSS style to parse.\r\n     * @param {String} measure - Property name to get the size for.\r\n     * @returns {Number} Resulting size in pixels.\r\n     */\r\n    proto._getPositionCoord = function(styleSide, measure) {\r\n        if (styleSide.indexOf('%') !== -1) {\r\n            // convert percent into pixel for Safari, #75\r\n            var parentSize = getSize(this.element.parentNode);\r\n            // prevent not-in-DOM element throwing bug, #131\r\n            return !parentSize ? 0 : (parseFloat(styleSide) / 100) * parentSize[measure];\r\n        }\r\n        return parseInt(styleSide, 10);\r\n    };\r\n\r\n    /**\r\n     * Add `transform: translate( x, y )` to position.\r\n     * @param {CSSStyleDeclaration} style - Element styles to add to.\r\n     */\r\n    proto._addTransformPosition = function(style) {\r\n        var transform = style[transformProperty];\r\n        // bail out if value is 'none'\r\n        if (transform.indexOf('matrix') !== 0) {\r\n            return;\r\n        }\r\n        // split matrix(1, 0, 0, 1, x, y)\r\n        var matrixValues = transform.split(',');\r\n        // translate X value is in 12th or 4th position\r\n        var xIndex = transform.indexOf('matrix3d') === 0 ? 12 : 4;\r\n        var translateX = parseInt(matrixValues[xIndex], 10);\r\n        // translate Y value is in 13th or 5th position\r\n        var translateY = parseInt(matrixValues[xIndex + 1], 10);\r\n        this.position.x += translateX;\r\n        this.position.y += translateY;\r\n    };\r\n\r\n    /**\r\n     * Pointer start.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        this._dragPointerDown(event, pointer);\r\n        // kludge to blur focused inputs in dragger\r\n        var focused = document.activeElement;\r\n        // do not blur body for IE10, metafizzy/flickity#117\r\n        if (focused && focused.blur && focused !== document.body) {\r\n            focused.blur();\r\n        }\r\n        // bind move and end events\r\n        this._bindPostStartEvents(event);\r\n        $.addClass(this.element, 'is-pointer-down');\r\n        this.dispatchEvent('pointerDown', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        var moveVector = this._dragPointerMove(event, pointer);\r\n        this.dispatchEvent('pointerMove', event, [pointer, moveVector]);\r\n        this._dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Drag start.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragStart = function(event, pointer) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n        this._getPosition();\r\n        this.measureContainment();\r\n        // position _when_ drag began\r\n        this.startPosition.x = this.position.x;\r\n        this.startPosition.y = this.position.y;\r\n        // reset left/top style\r\n        this.setLeftTop();\r\n\r\n        this.dragPoint.x = 0;\r\n        this.dragPoint.y = 0;\r\n\r\n        $.addClass(this.element, 'is-dragging');\r\n        this.dispatchEvent('dragStart', event, [pointer]);\r\n        // start animation\r\n        this.animate();\r\n    };\r\n\r\n    /**\r\n     * Calculate the correct position of the element within its container.\r\n     */\r\n    proto.measureContainment = function() {\r\n        var containment = this.options.containment;\r\n        if (!containment) {\r\n            return;\r\n        }\r\n\r\n        // use element if element, otherwise just `true`, use the parent\r\n        var container = $.isNode(containment) ? containment : $.isString(containment) ? $.get(containment) : this.element.parentNode;\r\n        var elemSize = getSize(this.element);\r\n        var containerSize = getSize(container);\r\n        var elemRect = this.element.getBoundingClientRect();\r\n        var containerRect = container.getBoundingClientRect();\r\n        var borderSizeX = containerSize.borderLeftWidth + containerSize.borderRightWidth;\r\n        var borderSizeY = containerSize.borderTopWidth + containerSize.borderBottomWidth;\r\n\r\n        var position = this.relativeStartPosition = {\r\n            x: elemRect.left - (containerRect.left + containerSize.borderLeftWidth),\r\n            y: elemRect.top - (containerRect.top + containerSize.borderTopWidth)\r\n        };\r\n\r\n        this.containSize = {\r\n            width: (containerSize.width - borderSizeX) - position.x - elemSize.width,\r\n            height: (containerSize.height - borderSizeY) - position.y - elemSize.height\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x and y coordinates of current position.\r\n     */\r\n    proto.dragMove = function(event, pointer, moveVector) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n\r\n        var dragX = moveVector.x;\r\n        var dragY = moveVector.y;\r\n        var grid = this.options.grid;\r\n        var gridX = grid && grid[0];\r\n        var gridY = grid && grid[1];\r\n\r\n        dragX = applyGrid(dragX, gridX);\r\n        dragY = applyGrid(dragY, gridY);\r\n\r\n        dragX = this.containDrag('x', dragX, gridX);\r\n        dragY = this.containDrag('y', dragY, gridY);\r\n\r\n        // constrain to axis\r\n        dragX = this.options.axis === 'y' ? 0 : dragX;\r\n        dragY = this.options.axis === 'x' ? 0 : dragY;\r\n\r\n        if (this.options.minZero) {\r\n            dragX = applyMinZero(this.startPosition.x, dragX);\r\n            dragY = applyMinZero(this.startPosition.y, dragY);\r\n        }\r\n\r\n        this.position.x = this.startPosition.x + dragX;\r\n        this.position.y = this.startPosition.y + dragY;\r\n        // set dragPoint properties\r\n        this.dragPoint.x = dragX;\r\n        this.dragPoint.y = dragY;\r\n\r\n        this.dispatchEvent('dragMove', event, [pointer, moveVector]);\r\n    };\r\n\r\n    /**\r\n     * Adjust a coordinate to snap to the grid.\r\n     * @param {Number} value - Coordinate to snap to grid.\r\n     * @param {Number} grid - Grid width/height.\r\n     * @param {String} method - Math method to apply.\r\n     * @returns {Number} Closes number that snaps to grid.\r\n     */\r\n    function applyGrid(value, grid, method) {\r\n        return grid ? Math[method || 'round'](value / grid) * grid : value;\r\n    }\r\n\r\n    /**\r\n     * Adjust the drag position to prevent the item from moving out of the container to the left or top.\r\n     * @param {Number} start - Element starting coordinate.\r\n     * @param {Number} drag - Distance element was dragged.\r\n     * @returns {Number} Corrected drag coordinate.\r\n     */\r\n    function applyMinZero(start, drag) {\r\n        return start + drag < 0 ? -start : drag;\r\n    }\r\n\r\n    /**\r\n     * Limit dragging within boundaries.\r\n     * @param {string} axis - X or Y Axis\r\n     * @param {number} drag - Position coordinate on axis\r\n     * @param {number} grid - Boundary coordinate on axis.\r\n     * @returns {number} Coordinate contained with drag.\r\n     */\r\n    proto.containDrag = function(axis, drag, grid) {\r\n        if (!this.options.containment) {\r\n            return drag;\r\n        }\r\n        var measure = axis === 'x' ? 'width' : 'height';\r\n\r\n        var rel = this.relativeStartPosition[axis];\r\n        var min = applyGrid(-rel, grid, 'ceil');\r\n        var max = this.containSize[measure];\r\n        max = applyGrid(max, grid, 'floor');\r\n        return Math.min(max, Math.max(min, drag));\r\n    };\r\n\r\n    /**\r\n     * pointer up\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        $.removeClass(this.element, 'is-pointer-down');\r\n        this.dispatchEvent('pointerUp', event, [pointer]);\r\n        this._dragPointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Drag end.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragEnd = function(event, pointer) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n        // use top left position when complete\r\n        if (transformProperty) {\r\n            this.element.style[transformProperty] = '';\r\n            this.setLeftTop();\r\n        }\r\n        $.removeClass(this.element, 'is-dragging');\r\n        this.dispatchEvent('dragEnd', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Animate while dragging.\r\n     */\r\n    proto.animate = function() {\r\n        if (!this.isDragging) {\r\n            return;\r\n        }\r\n        this.positionDrag();\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    };\r\n\r\n    /**\r\n     * Set left/top positioning.\r\n     */\r\n    proto.setLeftTop = function() {\r\n        $.style(this.element, { left: this.position.x + 'px', top: this.position.y + 'px' });\r\n    };\r\n\r\n    /**\r\n     * Set position transform based on drag.\r\n     */\r\n    proto.positionDrag = function() {\r\n        this.element.style[transformProperty] = 'translate3d( ' + this.dragPoint.x + 'px, ' + this.dragPoint.y + 'px, 0)';\r\n    };\r\n\r\n    /**\r\n     * Dispatch the event for static click callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.staticClick = function(event, pointer) {\r\n        this.dispatchEvent('staticClick', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Enable dragging.\r\n     */\r\n    proto.enable = function() {\r\n        this.isEnabled = true;\r\n    };\r\n\r\n    /**\r\n     * Disable dragging.\r\n     */\r\n    proto.disable = function() {\r\n        this.isEnabled = false;\r\n        if (this.isDragging) {\r\n            this.dragEnd();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy this instance.\r\n     */\r\n    proto.destroy = function() {\r\n        this.disable();\r\n        this.element.removeAttribute('style');\r\n        this.unbindHandles();\r\n    };\r\n\r\n    return Draggabilly;\r\n}));\r\n","/*!\r\n * Chart.js\r\n * http://chartjs.org/\r\n * Version: 2.7.1\r\n *\r\n * Copyright 2018 Chart.js Contributors\r\n * Released under the MIT license\r\n * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md\r\n */\r\n(function(f) { if (typeof exports === \"object\" && typeof module !== \"undefined\") { module.exports = f() } else if (typeof define === \"function\" && define.amd) { define([], f) } else { var g; if (typeof window !== \"undefined\") { g = window } else if (typeof global !== \"undefined\") { g = global } else if (typeof self !== \"undefined\") { g = self } else { g = this } g.Chart = f() } })(function() {\r\n    var define, module, exports; return (function e(t, n, r) { function s(o, u) { if (!n[o]) { if (!t[o]) { var a = typeof require == \"function\" && require; if (!u && a) return a(o, !0); if (i) return i(o, !0); var f = new Error(\"Cannot find module '\" + o + \"'\"); throw f.code = \"MODULE_NOT_FOUND\", f } var l = n[o] = { exports: {} }; t[o][0].call(l.exports, function(e) { var n = t[o][1][e]; return s(n ? n : e) }, l, l.exports, e, t, n, r) } return n[o].exports } var i = typeof require == \"function\" && require; for (var o = 0; o < r.length; o++)s(r[o]); return s })({\r\n        1: [function(require, module, exports) {\r\n            /* MIT license */\r\n            var colorNames = require(5);\r\n\r\n            module.exports = {\r\n                getRgba: getRgba,\r\n                getHsla: getHsla,\r\n                getRgb: getRgb,\r\n                getHsl: getHsl,\r\n                getHwb: getHwb,\r\n                getAlpha: getAlpha,\r\n\r\n                hexString: hexString,\r\n                rgbString: rgbString,\r\n                rgbaString: rgbaString,\r\n                percentString: percentString,\r\n                percentaString: percentaString,\r\n                hslString: hslString,\r\n                hslaString: hslaString,\r\n                hwbString: hwbString,\r\n                keyword: keyword\r\n            }\r\n\r\n            function getRgba(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var abbr = /^#([a-fA-F0-9]{3})$/i,\r\n                    hex = /^#([a-fA-F0-9]{6})$/i,\r\n                    rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n                    per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n                    keyword = /(\\w+)/;\r\n\r\n                var rgb = [0, 0, 0],\r\n                    a = 1,\r\n                    match = string.match(abbr);\r\n                if (match) {\r\n                    match = match[1];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match[i] + match[i], 16);\r\n                    }\r\n                }\r\n                else if (match = string.match(hex)) {\r\n                    match = match[1];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n                    }\r\n                }\r\n                else if (match = string.match(rgba)) {\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match[i + 1]);\r\n                    }\r\n                    a = parseFloat(match[4]);\r\n                }\r\n                else if (match = string.match(per)) {\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n                    }\r\n                    a = parseFloat(match[4]);\r\n                }\r\n                else if (match = string.match(keyword)) {\r\n                    if (match[1] == \"transparent\") {\r\n                        return [0, 0, 0, 0];\r\n                    }\r\n                    rgb = colorNames[match[1]];\r\n                    if (!rgb) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                for (var i = 0; i < rgb.length; i++) {\r\n                    rgb[i] = scale(rgb[i], 0, 255);\r\n                }\r\n                if (!a && a != 0) {\r\n                    a = 1;\r\n                }\r\n                else {\r\n                    a = scale(a, 0, 1);\r\n                }\r\n                rgb[3] = a;\r\n                return rgb;\r\n            }\r\n\r\n            function getHsla(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n                var match = string.match(hsl);\r\n                if (match) {\r\n                    var alpha = parseFloat(match[4]);\r\n                    var h = scale(parseInt(match[1]), 0, 360),\r\n                        s = scale(parseFloat(match[2]), 0, 100),\r\n                        l = scale(parseFloat(match[3]), 0, 100),\r\n                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n                    return [h, s, l, a];\r\n                }\r\n            }\r\n\r\n            function getHwb(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n                var match = string.match(hwb);\r\n                if (match) {\r\n                    var alpha = parseFloat(match[4]);\r\n                    var h = scale(parseInt(match[1]), 0, 360),\r\n                        w = scale(parseFloat(match[2]), 0, 100),\r\n                        b = scale(parseFloat(match[3]), 0, 100),\r\n                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n                    return [h, w, b, a];\r\n                }\r\n            }\r\n\r\n            function getRgb(string) {\r\n                var rgba = getRgba(string);\r\n                return rgba && rgba.slice(0, 3);\r\n            }\r\n\r\n            function getHsl(string) {\r\n                var hsla = getHsla(string);\r\n                return hsla && hsla.slice(0, 3);\r\n            }\r\n\r\n            function getAlpha(string) {\r\n                var vals = getRgba(string);\r\n                if (vals) {\r\n                    return vals[3];\r\n                }\r\n                else if (vals = getHsla(string)) {\r\n                    return vals[3];\r\n                }\r\n                else if (vals = getHwb(string)) {\r\n                    return vals[3];\r\n                }\r\n            }\r\n\r\n            // generators\r\n            function hexString(rgb) {\r\n                return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n                    + hexDouble(rgb[2]);\r\n            }\r\n\r\n            function rgbString(rgba, alpha) {\r\n                if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n                    return rgbaString(rgba, alpha);\r\n                }\r\n                return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n            }\r\n\r\n            function rgbaString(rgba, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n                }\r\n                return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n                    + \", \" + alpha + \")\";\r\n            }\r\n\r\n            function percentString(rgba, alpha) {\r\n                if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n                    return percentaString(rgba, alpha);\r\n                }\r\n                var r = Math.round(rgba[0] / 255 * 100),\r\n                    g = Math.round(rgba[1] / 255 * 100),\r\n                    b = Math.round(rgba[2] / 255 * 100);\r\n\r\n                return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n            }\r\n\r\n            function percentaString(rgba, alpha) {\r\n                var r = Math.round(rgba[0] / 255 * 100),\r\n                    g = Math.round(rgba[1] / 255 * 100),\r\n                    b = Math.round(rgba[2] / 255 * 100);\r\n                return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n            }\r\n\r\n            function hslString(hsla, alpha) {\r\n                if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n                    return hslaString(hsla, alpha);\r\n                }\r\n                return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n            }\r\n\r\n            function hslaString(hsla, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n                }\r\n                return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n                    + alpha + \")\";\r\n            }\r\n\r\n            // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n            // (hwb have alpha optional & 1 is default value)\r\n            function hwbString(hwb, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n                }\r\n                return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n                    + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n            }\r\n\r\n            function keyword(rgb) {\r\n                return reverseNames[rgb.slice(0, 3)];\r\n            }\r\n\r\n            // helpers\r\n            function scale(num, min, max) {\r\n                return Math.min(Math.max(min, num), max);\r\n            }\r\n\r\n            function hexDouble(num) {\r\n                var str = num.toString(16).toUpperCase();\r\n                return (str.length < 2) ? \"0\" + str : str;\r\n            }\r\n\r\n            //create a list of reverse color names\r\n            var reverseNames = {};\r\n            for (var name in colorNames) {\r\n                reverseNames[colorNames[name]] = name;\r\n            }\r\n        }, { \"5\": 5 }], 2: [function(require, module, exports) {\r\n            /* MIT license */\r\n            var convert = require(4);\r\n            var string = require(1);\r\n\r\n            var Color = function(obj) {\r\n                if (obj instanceof Color) {\r\n                    return obj;\r\n                }\r\n                if (!(this instanceof Color)) {\r\n                    return new Color(obj);\r\n                }\r\n\r\n                this.valid = false;\r\n                this.values = {\r\n                    rgb: [0, 0, 0],\r\n                    hsl: [0, 0, 0],\r\n                    hsv: [0, 0, 0],\r\n                    hwb: [0, 0, 0],\r\n                    cmyk: [0, 0, 0, 0],\r\n                    alpha: 1\r\n                };\r\n\r\n                // parse Color() argument\r\n                var vals;\r\n                if (typeof obj === 'string') {\r\n                    vals = string.getRgba(obj);\r\n                    if (vals) {\r\n                        this.setValues('rgb', vals);\r\n                    } else if (vals = string.getHsla(obj)) {\r\n                        this.setValues('hsl', vals);\r\n                    } else if (vals = string.getHwb(obj)) {\r\n                        this.setValues('hwb', vals);\r\n                    }\r\n                } else if (typeof obj === 'object') {\r\n                    vals = obj;\r\n                    if (vals.r !== undefined || vals.red !== undefined) {\r\n                        this.setValues('rgb', vals);\r\n                    } else if (vals.l !== undefined || vals.lightness !== undefined) {\r\n                        this.setValues('hsl', vals);\r\n                    } else if (vals.v !== undefined || vals.value !== undefined) {\r\n                        this.setValues('hsv', vals);\r\n                    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\r\n                        this.setValues('hwb', vals);\r\n                    } else if (vals.c !== undefined || vals.cyan !== undefined) {\r\n                        this.setValues('cmyk', vals);\r\n                    }\r\n                }\r\n            };\r\n\r\n            Color.prototype = {\r\n                isValid: function() {\r\n                    return this.valid;\r\n                },\r\n                rgb: function() {\r\n                    return this.setSpace('rgb', arguments);\r\n                },\r\n                hsl: function() {\r\n                    return this.setSpace('hsl', arguments);\r\n                },\r\n                hsv: function() {\r\n                    return this.setSpace('hsv', arguments);\r\n                },\r\n                hwb: function() {\r\n                    return this.setSpace('hwb', arguments);\r\n                },\r\n                cmyk: function() {\r\n                    return this.setSpace('cmyk', arguments);\r\n                },\r\n\r\n                rgbArray: function() {\r\n                    return this.values.rgb;\r\n                },\r\n                hslArray: function() {\r\n                    return this.values.hsl;\r\n                },\r\n                hsvArray: function() {\r\n                    return this.values.hsv;\r\n                },\r\n                hwbArray: function() {\r\n                    var values = this.values;\r\n                    if (values.alpha !== 1) {\r\n                        return values.hwb.concat([values.alpha]);\r\n                    }\r\n                    return values.hwb;\r\n                },\r\n                cmykArray: function() {\r\n                    return this.values.cmyk;\r\n                },\r\n                rgbaArray: function() {\r\n                    var values = this.values;\r\n                    return values.rgb.concat([values.alpha]);\r\n                },\r\n                hslaArray: function() {\r\n                    var values = this.values;\r\n                    return values.hsl.concat([values.alpha]);\r\n                },\r\n                alpha: function(val) {\r\n                    if (val === undefined) {\r\n                        return this.values.alpha;\r\n                    }\r\n                    this.setValues('alpha', val);\r\n                    return this;\r\n                },\r\n\r\n                red: function(val) {\r\n                    return this.setChannel('rgb', 0, val);\r\n                },\r\n                green: function(val) {\r\n                    return this.setChannel('rgb', 1, val);\r\n                },\r\n                blue: function(val) {\r\n                    return this.setChannel('rgb', 2, val);\r\n                },\r\n                hue: function(val) {\r\n                    if (val) {\r\n                        val %= 360;\r\n                        val = val < 0 ? 360 + val : val;\r\n                    }\r\n                    return this.setChannel('hsl', 0, val);\r\n                },\r\n                saturation: function(val) {\r\n                    return this.setChannel('hsl', 1, val);\r\n                },\r\n                lightness: function(val) {\r\n                    return this.setChannel('hsl', 2, val);\r\n                },\r\n                saturationv: function(val) {\r\n                    return this.setChannel('hsv', 1, val);\r\n                },\r\n                whiteness: function(val) {\r\n                    return this.setChannel('hwb', 1, val);\r\n                },\r\n                blackness: function(val) {\r\n                    return this.setChannel('hwb', 2, val);\r\n                },\r\n                value: function(val) {\r\n                    return this.setChannel('hsv', 2, val);\r\n                },\r\n                cyan: function(val) {\r\n                    return this.setChannel('cmyk', 0, val);\r\n                },\r\n                magenta: function(val) {\r\n                    return this.setChannel('cmyk', 1, val);\r\n                },\r\n                yellow: function(val) {\r\n                    return this.setChannel('cmyk', 2, val);\r\n                },\r\n                black: function(val) {\r\n                    return this.setChannel('cmyk', 3, val);\r\n                },\r\n\r\n                hexString: function() {\r\n                    return string.hexString(this.values.rgb);\r\n                },\r\n                rgbString: function() {\r\n                    return string.rgbString(this.values.rgb, this.values.alpha);\r\n                },\r\n                rgbaString: function() {\r\n                    return string.rgbaString(this.values.rgb, this.values.alpha);\r\n                },\r\n                percentString: function() {\r\n                    return string.percentString(this.values.rgb, this.values.alpha);\r\n                },\r\n                hslString: function() {\r\n                    return string.hslString(this.values.hsl, this.values.alpha);\r\n                },\r\n                hslaString: function() {\r\n                    return string.hslaString(this.values.hsl, this.values.alpha);\r\n                },\r\n                hwbString: function() {\r\n                    return string.hwbString(this.values.hwb, this.values.alpha);\r\n                },\r\n                keyword: function() {\r\n                    return string.keyword(this.values.rgb, this.values.alpha);\r\n                },\r\n\r\n                rgbNumber: function() {\r\n                    var rgb = this.values.rgb;\r\n                    return (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\r\n                },\r\n\r\n                luminosity: function() {\r\n                    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n                    var rgb = this.values.rgb;\r\n                    var lum = [];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        var chan = rgb[i] / 255;\r\n                        lum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\r\n                    }\r\n                    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n                },\r\n\r\n                contrast: function(color2) {\r\n                    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n                    var lum1 = this.luminosity();\r\n                    var lum2 = color2.luminosity();\r\n                    if (lum1 > lum2) {\r\n                        return (lum1 + 0.05) / (lum2 + 0.05);\r\n                    }\r\n                    return (lum2 + 0.05) / (lum1 + 0.05);\r\n                },\r\n\r\n                level: function(color2) {\r\n                    var contrastRatio = this.contrast(color2);\r\n                    if (contrastRatio >= 7.1) {\r\n                        return 'AAA';\r\n                    }\r\n\r\n                    return (contrastRatio >= 4.5) ? 'AA' : '';\r\n                },\r\n\r\n                dark: function() {\r\n                    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\r\n                    var rgb = this.values.rgb;\r\n                    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\r\n                    return yiq < 128;\r\n                },\r\n\r\n                light: function() {\r\n                    return !this.dark();\r\n                },\r\n\r\n                negate: function() {\r\n                    var rgb = [];\r\n                    for (var i = 0; i < 3; i++) {\r\n                        rgb[i] = 255 - this.values.rgb[i];\r\n                    }\r\n                    this.setValues('rgb', rgb);\r\n                    return this;\r\n                },\r\n\r\n                lighten: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[2] += hsl[2] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                darken: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[2] -= hsl[2] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                saturate: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[1] += hsl[1] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                desaturate: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[1] -= hsl[1] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                whiten: function(ratio) {\r\n                    var hwb = this.values.hwb;\r\n                    hwb[1] += hwb[1] * ratio;\r\n                    this.setValues('hwb', hwb);\r\n                    return this;\r\n                },\r\n\r\n                blacken: function(ratio) {\r\n                    var hwb = this.values.hwb;\r\n                    hwb[2] += hwb[2] * ratio;\r\n                    this.setValues('hwb', hwb);\r\n                    return this;\r\n                },\r\n\r\n                greyscale: function() {\r\n                    var rgb = this.values.rgb;\r\n                    // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\r\n                    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\r\n                    this.setValues('rgb', [val, val, val]);\r\n                    return this;\r\n                },\r\n\r\n                clearer: function(ratio) {\r\n                    var alpha = this.values.alpha;\r\n                    this.setValues('alpha', alpha - (alpha * ratio));\r\n                    return this;\r\n                },\r\n\r\n                opaquer: function(ratio) {\r\n                    var alpha = this.values.alpha;\r\n                    this.setValues('alpha', alpha + (alpha * ratio));\r\n                    return this;\r\n                },\r\n\r\n                rotate: function(degrees) {\r\n                    var hsl = this.values.hsl;\r\n                    var hue = (hsl[0] + degrees) % 360;\r\n                    hsl[0] = hue < 0 ? 360 + hue : hue;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                /**\r\n                 * Ported from sass implementation in C\r\n                 * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\r\n                 */\r\n                mix: function(mixinColor, weight) {\r\n                    var color1 = this;\r\n                    var color2 = mixinColor;\r\n                    var p = weight === undefined ? 0.5 : weight;\r\n\r\n                    var w = 2 * p - 1;\r\n                    var a = color1.alpha() - color2.alpha();\r\n\r\n                    var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n                    var w2 = 1 - w1;\r\n\r\n                    return this\r\n                        .rgb(\r\n                        w1 * color1.red() + w2 * color2.red(),\r\n                        w1 * color1.green() + w2 * color2.green(),\r\n                        w1 * color1.blue() + w2 * color2.blue()\r\n                        )\r\n                        .alpha(color1.alpha() * p + color2.alpha() * (1 - p));\r\n                },\r\n\r\n                toJSON: function() {\r\n                    return this.rgb();\r\n                },\r\n\r\n                clone: function() {\r\n                    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\r\n                    // making the final build way to big to embed in Chart.js. So let's do it manually,\r\n                    // assuming that values to clone are 1 dimension arrays containing only numbers,\r\n                    // except 'alpha' which is a number.\r\n                    var result = new Color();\r\n                    var source = this.values;\r\n                    var target = result.values;\r\n                    var value, type;\r\n\r\n                    for (var prop in source) {\r\n                        if (source.hasOwnProperty(prop)) {\r\n                            value = source[prop];\r\n                            type = ({}).toString.call(value);\r\n                            if (type === '[object Array]') {\r\n                                target[prop] = value.slice(0);\r\n                            } else if (type === '[object Number]') {\r\n                                target[prop] = value;\r\n                            } else {\r\n                                console.error('unexpected color value:', value);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return result;\r\n                }\r\n            };\r\n\r\n            Color.prototype.spaces = {\r\n                rgb: ['red', 'green', 'blue'],\r\n                hsl: ['hue', 'saturation', 'lightness'],\r\n                hsv: ['hue', 'saturation', 'value'],\r\n                hwb: ['hue', 'whiteness', 'blackness'],\r\n                cmyk: ['cyan', 'magenta', 'yellow', 'black']\r\n            };\r\n\r\n            Color.prototype.maxes = {\r\n                rgb: [255, 255, 255],\r\n                hsl: [360, 100, 100],\r\n                hsv: [360, 100, 100],\r\n                hwb: [360, 100, 100],\r\n                cmyk: [100, 100, 100, 100]\r\n            };\r\n\r\n            Color.prototype.getValues = function(space) {\r\n                var values = this.values;\r\n                var vals = {};\r\n\r\n                for (var i = 0; i < space.length; i++) {\r\n                    vals[space.charAt(i)] = values[space][i];\r\n                }\r\n\r\n                if (values.alpha !== 1) {\r\n                    vals.a = values.alpha;\r\n                }\r\n\r\n                // {r: 255, g: 255, b: 255, a: 0.4}\r\n                return vals;\r\n            };\r\n\r\n            Color.prototype.setValues = function(space, vals) {\r\n                var values = this.values;\r\n                var spaces = this.spaces;\r\n                var maxes = this.maxes;\r\n                var alpha = 1;\r\n                var i;\r\n\r\n                this.valid = true;\r\n\r\n                if (space === 'alpha') {\r\n                    alpha = vals;\r\n                } else if (vals.length) {\r\n                    // [10, 10, 10]\r\n                    values[space] = vals.slice(0, space.length);\r\n                    alpha = vals[space.length];\r\n                } else if (vals[space.charAt(0)] !== undefined) {\r\n                    // {r: 10, g: 10, b: 10}\r\n                    for (i = 0; i < space.length; i++) {\r\n                        values[space][i] = vals[space.charAt(i)];\r\n                    }\r\n\r\n                    alpha = vals.a;\r\n                } else if (vals[spaces[space][0]] !== undefined) {\r\n                    // {red: 10, green: 10, blue: 10}\r\n                    var chans = spaces[space];\r\n\r\n                    for (i = 0; i < space.length; i++) {\r\n                        values[space][i] = vals[chans[i]];\r\n                    }\r\n\r\n                    alpha = vals.alpha;\r\n                }\r\n\r\n                values.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\r\n\r\n                if (space === 'alpha') {\r\n                    return false;\r\n                }\r\n\r\n                var capped;\r\n\r\n                // cap values of the space prior converting all values\r\n                for (i = 0; i < space.length; i++) {\r\n                    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\r\n                    values[space][i] = Math.round(capped);\r\n                }\r\n\r\n                // convert to all the other color spaces\r\n                for (var sname in spaces) {\r\n                    if (sname !== space) {\r\n                        values[sname] = convert[space][sname](values[space]);\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            };\r\n\r\n            Color.prototype.setSpace = function(space, args) {\r\n                var vals = args[0];\r\n\r\n                if (vals === undefined) {\r\n                    // color.rgb()\r\n                    return this.getValues(space);\r\n                }\r\n\r\n                // color.rgb(10, 10, 10)\r\n                if (typeof vals === 'number') {\r\n                    vals = Array.prototype.slice.call(args);\r\n                }\r\n\r\n                this.setValues(space, vals);\r\n                return this;\r\n            };\r\n\r\n            Color.prototype.setChannel = function(space, index, val) {\r\n                var svalues = this.values[space];\r\n                if (val === undefined) {\r\n                    // color.red()\r\n                    return svalues[index];\r\n                } else if (val === svalues[index]) {\r\n                    // color.red(color.red())\r\n                    return this;\r\n                }\r\n\r\n                // color.red(100)\r\n                svalues[index] = val;\r\n                this.setValues(space, svalues);\r\n\r\n                return this;\r\n            };\r\n\r\n            if (typeof window !== 'undefined') {\r\n                window.Color = Color;\r\n            }\r\n\r\n            module.exports = Color;\r\n        }, { \"1\": 1, \"4\": 4 }], 3: [function(require, module, exports) {\r\n            /* MIT license */\r\n\r\n            module.exports = {\r\n                rgb2hsl: rgb2hsl,\r\n                rgb2hsv: rgb2hsv,\r\n                rgb2hwb: rgb2hwb,\r\n                rgb2cmyk: rgb2cmyk,\r\n                rgb2keyword: rgb2keyword,\r\n                rgb2xyz: rgb2xyz,\r\n                rgb2lab: rgb2lab,\r\n                rgb2lch: rgb2lch,\r\n\r\n                hsl2rgb: hsl2rgb,\r\n                hsl2hsv: hsl2hsv,\r\n                hsl2hwb: hsl2hwb,\r\n                hsl2cmyk: hsl2cmyk,\r\n                hsl2keyword: hsl2keyword,\r\n\r\n                hsv2rgb: hsv2rgb,\r\n                hsv2hsl: hsv2hsl,\r\n                hsv2hwb: hsv2hwb,\r\n                hsv2cmyk: hsv2cmyk,\r\n                hsv2keyword: hsv2keyword,\r\n\r\n                hwb2rgb: hwb2rgb,\r\n                hwb2hsl: hwb2hsl,\r\n                hwb2hsv: hwb2hsv,\r\n                hwb2cmyk: hwb2cmyk,\r\n                hwb2keyword: hwb2keyword,\r\n\r\n                cmyk2rgb: cmyk2rgb,\r\n                cmyk2hsl: cmyk2hsl,\r\n                cmyk2hsv: cmyk2hsv,\r\n                cmyk2hwb: cmyk2hwb,\r\n                cmyk2keyword: cmyk2keyword,\r\n\r\n                keyword2rgb: keyword2rgb,\r\n                keyword2hsl: keyword2hsl,\r\n                keyword2hsv: keyword2hsv,\r\n                keyword2hwb: keyword2hwb,\r\n                keyword2cmyk: keyword2cmyk,\r\n                keyword2lab: keyword2lab,\r\n                keyword2xyz: keyword2xyz,\r\n\r\n                xyz2rgb: xyz2rgb,\r\n                xyz2lab: xyz2lab,\r\n                xyz2lch: xyz2lch,\r\n\r\n                lab2xyz: lab2xyz,\r\n                lab2rgb: lab2rgb,\r\n                lab2lch: lab2lch,\r\n\r\n                lch2lab: lch2lab,\r\n                lch2xyz: lch2xyz,\r\n                lch2rgb: lch2rgb\r\n            }\r\n\r\n            function rgb2hsl(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255,\r\n                    min = Math.min(r, g, b),\r\n                    max = Math.max(r, g, b),\r\n                    delta = max - min,\r\n                    h, s, l;\r\n\r\n                if (max == min)\r\n                    h = 0;\r\n                else if (r == max)\r\n                    h = (g - b) / delta;\r\n                else if (g == max)\r\n                    h = 2 + (b - r) / delta;\r\n                else if (b == max)\r\n                    h = 4 + (r - g) / delta;\r\n\r\n                h = Math.min(h * 60, 360);\r\n\r\n                if (h < 0)\r\n                    h += 360;\r\n\r\n                l = (min + max) / 2;\r\n\r\n                if (max == min)\r\n                    s = 0;\r\n                else if (l <= 0.5)\r\n                    s = delta / (max + min);\r\n                else\r\n                    s = delta / (2 - max - min);\r\n\r\n                return [h, s * 100, l * 100];\r\n            }\r\n\r\n            function rgb2hsv(rgb) {\r\n                var r = rgb[0],\r\n                    g = rgb[1],\r\n                    b = rgb[2],\r\n                    min = Math.min(r, g, b),\r\n                    max = Math.max(r, g, b),\r\n                    delta = max - min,\r\n                    h, s, v;\r\n\r\n                if (max == 0)\r\n                    s = 0;\r\n                else\r\n                    s = (delta / max * 1000) / 10;\r\n\r\n                if (max == min)\r\n                    h = 0;\r\n                else if (r == max)\r\n                    h = (g - b) / delta;\r\n                else if (g == max)\r\n                    h = 2 + (b - r) / delta;\r\n                else if (b == max)\r\n                    h = 4 + (r - g) / delta;\r\n\r\n                h = Math.min(h * 60, 360);\r\n\r\n                if (h < 0)\r\n                    h += 360;\r\n\r\n                v = ((max / 255) * 1000) / 10;\r\n\r\n                return [h, s, v];\r\n            }\r\n\r\n            function rgb2hwb(rgb) {\r\n                var r = rgb[0],\r\n                    g = rgb[1],\r\n                    b = rgb[2],\r\n                    h = rgb2hsl(rgb)[0],\r\n                    w = 1 / 255 * Math.min(r, Math.min(g, b)),\r\n                    b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\r\n\r\n                return [h, w * 100, b * 100];\r\n            }\r\n\r\n            function rgb2cmyk(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255,\r\n                    c, m, y, k;\r\n\r\n                k = Math.min(1 - r, 1 - g, 1 - b);\r\n                c = (1 - r - k) / (1 - k) || 0;\r\n                m = (1 - g - k) / (1 - k) || 0;\r\n                y = (1 - b - k) / (1 - k) || 0;\r\n                return [c * 100, m * 100, y * 100, k * 100];\r\n            }\r\n\r\n            function rgb2keyword(rgb) {\r\n                return reverseKeywords[JSON.stringify(rgb)];\r\n            }\r\n\r\n            function rgb2xyz(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255;\r\n\r\n                // assume sRGB\r\n                r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\r\n                g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\r\n                b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\r\n\r\n                var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\r\n                var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\r\n                var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\r\n\r\n                return [x * 100, y * 100, z * 100];\r\n            }\r\n\r\n            function rgb2lab(rgb) {\r\n                var xyz = rgb2xyz(rgb),\r\n                    x = xyz[0],\r\n                    y = xyz[1],\r\n                    z = xyz[2],\r\n                    l, a, b;\r\n\r\n                x /= 95.047;\r\n                y /= 100;\r\n                z /= 108.883;\r\n\r\n                x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\r\n                y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\r\n                z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\r\n\r\n                l = (116 * y) - 16;\r\n                a = 500 * (x - y);\r\n                b = 200 * (y - z);\r\n\r\n                return [l, a, b];\r\n            }\r\n\r\n            function rgb2lch(args) {\r\n                return lab2lch(rgb2lab(args));\r\n            }\r\n\r\n            function hsl2rgb(hsl) {\r\n                var h = hsl[0] / 360,\r\n                    s = hsl[1] / 100,\r\n                    l = hsl[2] / 100,\r\n                    t1, t2, t3, rgb, val;\r\n\r\n                if (s == 0) {\r\n                    val = l * 255;\r\n                    return [val, val, val];\r\n                }\r\n\r\n                if (l < 0.5)\r\n                    t2 = l * (1 + s);\r\n                else\r\n                    t2 = l + s - l * s;\r\n                t1 = 2 * l - t2;\r\n\r\n                rgb = [0, 0, 0];\r\n                for (var i = 0; i < 3; i++) {\r\n                    t3 = h + 1 / 3 * - (i - 1);\r\n                    t3 < 0 && t3++;\r\n                    t3 > 1 && t3--;\r\n\r\n                    if (6 * t3 < 1)\r\n                        val = t1 + (t2 - t1) * 6 * t3;\r\n                    else if (2 * t3 < 1)\r\n                        val = t2;\r\n                    else if (3 * t3 < 2)\r\n                        val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\r\n                    else\r\n                        val = t1;\r\n\r\n                    rgb[i] = val * 255;\r\n                }\r\n\r\n                return rgb;\r\n            }\r\n\r\n            function hsl2hsv(hsl) {\r\n                var h = hsl[0],\r\n                    s = hsl[1] / 100,\r\n                    l = hsl[2] / 100,\r\n                    sv, v;\r\n\r\n                if (l === 0) {\r\n                    // no need to do calc on black\r\n                    // also avoids divide by 0 error\r\n                    return [0, 0, 0];\r\n                }\r\n\r\n                l *= 2;\r\n                s *= (l <= 1) ? l : 2 - l;\r\n                v = (l + s) / 2;\r\n                sv = (2 * s) / (l + s);\r\n                return [h, sv * 100, v * 100];\r\n            }\r\n\r\n            function hsl2hwb(args) {\r\n                return rgb2hwb(hsl2rgb(args));\r\n            }\r\n\r\n            function hsl2cmyk(args) {\r\n                return rgb2cmyk(hsl2rgb(args));\r\n            }\r\n\r\n            function hsl2keyword(args) {\r\n                return rgb2keyword(hsl2rgb(args));\r\n            }\r\n\r\n            function hsv2rgb(hsv) {\r\n                var h = hsv[0] / 60,\r\n                    s = hsv[1] / 100,\r\n                    v = hsv[2] / 100,\r\n                    hi = Math.floor(h) % 6;\r\n\r\n                var f = h - Math.floor(h),\r\n                    p = 255 * v * (1 - s),\r\n                    q = 255 * v * (1 - (s * f)),\r\n                    t = 255 * v * (1 - (s * (1 - f))),\r\n                    v = 255 * v;\r\n\r\n                switch (hi) {\r\n                    case 0:\r\n                        return [v, t, p];\r\n                    case 1:\r\n                        return [q, v, p];\r\n                    case 2:\r\n                        return [p, v, t];\r\n                    case 3:\r\n                        return [p, q, v];\r\n                    case 4:\r\n                        return [t, p, v];\r\n                    case 5:\r\n                        return [v, p, q];\r\n                }\r\n            }\r\n\r\n            function hsv2hsl(hsv) {\r\n                var h = hsv[0],\r\n                    s = hsv[1] / 100,\r\n                    v = hsv[2] / 100,\r\n                    sl, l;\r\n\r\n                l = (2 - s) * v;\r\n                sl = s * v;\r\n                sl /= (l <= 1) ? l : 2 - l;\r\n                sl = sl || 0;\r\n                l /= 2;\r\n                return [h, sl * 100, l * 100];\r\n            }\r\n\r\n            function hsv2hwb(args) {\r\n                return rgb2hwb(hsv2rgb(args))\r\n            }\r\n\r\n            function hsv2cmyk(args) {\r\n                return rgb2cmyk(hsv2rgb(args));\r\n            }\r\n\r\n            function hsv2keyword(args) {\r\n                return rgb2keyword(hsv2rgb(args));\r\n            }\r\n\r\n            // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\r\n            function hwb2rgb(hwb) {\r\n                var h = hwb[0] / 360,\r\n                    wh = hwb[1] / 100,\r\n                    bl = hwb[2] / 100,\r\n                    ratio = wh + bl,\r\n                    i, v, f, n;\r\n\r\n                // wh + bl cant be > 1\r\n                if (ratio > 1) {\r\n                    wh /= ratio;\r\n                    bl /= ratio;\r\n                }\r\n\r\n                i = Math.floor(6 * h);\r\n                v = 1 - bl;\r\n                f = 6 * h - i;\r\n                if ((i & 0x01) != 0) {\r\n                    f = 1 - f;\r\n                }\r\n                n = wh + f * (v - wh);  // linear interpolation\r\n\r\n                switch (i) {\r\n                    default:\r\n                    case 6:\r\n                    case 0: r = v; g = n; b = wh; break;\r\n                    case 1: r = n; g = v; b = wh; break;\r\n                    case 2: r = wh; g = v; b = n; break;\r\n                    case 3: r = wh; g = n; b = v; break;\r\n                    case 4: r = n; g = wh; b = v; break;\r\n                    case 5: r = v; g = wh; b = n; break;\r\n                }\r\n\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function hwb2hsl(args) {\r\n                return rgb2hsl(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2hsv(args) {\r\n                return rgb2hsv(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2cmyk(args) {\r\n                return rgb2cmyk(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2keyword(args) {\r\n                return rgb2keyword(hwb2rgb(args));\r\n            }\r\n\r\n            function cmyk2rgb(cmyk) {\r\n                var c = cmyk[0] / 100,\r\n                    m = cmyk[1] / 100,\r\n                    y = cmyk[2] / 100,\r\n                    k = cmyk[3] / 100,\r\n                    r, g, b;\r\n\r\n                r = 1 - Math.min(1, c * (1 - k) + k);\r\n                g = 1 - Math.min(1, m * (1 - k) + k);\r\n                b = 1 - Math.min(1, y * (1 - k) + k);\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function cmyk2hsl(args) {\r\n                return rgb2hsl(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2hsv(args) {\r\n                return rgb2hsv(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2hwb(args) {\r\n                return rgb2hwb(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2keyword(args) {\r\n                return rgb2keyword(cmyk2rgb(args));\r\n            }\r\n\r\n            function xyz2rgb(xyz) {\r\n                var x = xyz[0] / 100,\r\n                    y = xyz[1] / 100,\r\n                    z = xyz[2] / 100,\r\n                    r, g, b;\r\n\r\n                r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\r\n                g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\r\n                b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\r\n\r\n                // assume sRGB\r\n                r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\r\n                    : r = (r * 12.92);\r\n\r\n                g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\r\n                    : g = (g * 12.92);\r\n\r\n                b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\r\n                    : b = (b * 12.92);\r\n\r\n                r = Math.min(Math.max(0, r), 1);\r\n                g = Math.min(Math.max(0, g), 1);\r\n                b = Math.min(Math.max(0, b), 1);\r\n\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function xyz2lab(xyz) {\r\n                var x = xyz[0],\r\n                    y = xyz[1],\r\n                    z = xyz[2],\r\n                    l, a, b;\r\n\r\n                x /= 95.047;\r\n                y /= 100;\r\n                z /= 108.883;\r\n\r\n                x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\r\n                y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\r\n                z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\r\n\r\n                l = (116 * y) - 16;\r\n                a = 500 * (x - y);\r\n                b = 200 * (y - z);\r\n\r\n                return [l, a, b];\r\n            }\r\n\r\n            function xyz2lch(args) {\r\n                return lab2lch(xyz2lab(args));\r\n            }\r\n\r\n            function lab2xyz(lab) {\r\n                var l = lab[0],\r\n                    a = lab[1],\r\n                    b = lab[2],\r\n                    x, y, z, y2;\r\n\r\n                if (l <= 8) {\r\n                    y = (l * 100) / 903.3;\r\n                    y2 = (7.787 * (y / 100)) + (16 / 116);\r\n                } else {\r\n                    y = 100 * Math.pow((l + 16) / 116, 3);\r\n                    y2 = Math.pow(y / 100, 1 / 3);\r\n                }\r\n\r\n                x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\r\n\r\n                z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\r\n\r\n                return [x, y, z];\r\n            }\r\n\r\n            function lab2lch(lab) {\r\n                var l = lab[0],\r\n                    a = lab[1],\r\n                    b = lab[2],\r\n                    hr, h, c;\r\n\r\n                hr = Math.atan2(b, a);\r\n                h = hr * 360 / 2 / Math.PI;\r\n                if (h < 0) {\r\n                    h += 360;\r\n                }\r\n                c = Math.sqrt(a * a + b * b);\r\n                return [l, c, h];\r\n            }\r\n\r\n            function lab2rgb(args) {\r\n                return xyz2rgb(lab2xyz(args));\r\n            }\r\n\r\n            function lch2lab(lch) {\r\n                var l = lch[0],\r\n                    c = lch[1],\r\n                    h = lch[2],\r\n                    a, b, hr;\r\n\r\n                hr = h / 360 * 2 * Math.PI;\r\n                a = c * Math.cos(hr);\r\n                b = c * Math.sin(hr);\r\n                return [l, a, b];\r\n            }\r\n\r\n            function lch2xyz(args) {\r\n                return lab2xyz(lch2lab(args));\r\n            }\r\n\r\n            function lch2rgb(args) {\r\n                return lab2rgb(lch2lab(args));\r\n            }\r\n\r\n            function keyword2rgb(keyword) {\r\n                return cssKeywords[keyword];\r\n            }\r\n\r\n            function keyword2hsl(args) {\r\n                return rgb2hsl(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2hsv(args) {\r\n                return rgb2hsv(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2hwb(args) {\r\n                return rgb2hwb(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2cmyk(args) {\r\n                return rgb2cmyk(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2lab(args) {\r\n                return rgb2lab(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2xyz(args) {\r\n                return rgb2xyz(keyword2rgb(args));\r\n            }\r\n\r\n            var cssKeywords = {\r\n                aliceblue: [240, 248, 255],\r\n                antiquewhite: [250, 235, 215],\r\n                aqua: [0, 255, 255],\r\n                aquamarine: [127, 255, 212],\r\n                azure: [240, 255, 255],\r\n                beige: [245, 245, 220],\r\n                bisque: [255, 228, 196],\r\n                black: [0, 0, 0],\r\n                blanchedalmond: [255, 235, 205],\r\n                blue: [0, 0, 255],\r\n                blueviolet: [138, 43, 226],\r\n                brown: [165, 42, 42],\r\n                burlywood: [222, 184, 135],\r\n                cadetblue: [95, 158, 160],\r\n                chartreuse: [127, 255, 0],\r\n                chocolate: [210, 105, 30],\r\n                coral: [255, 127, 80],\r\n                cornflowerblue: [100, 149, 237],\r\n                cornsilk: [255, 248, 220],\r\n                crimson: [220, 20, 60],\r\n                cyan: [0, 255, 255],\r\n                darkblue: [0, 0, 139],\r\n                darkcyan: [0, 139, 139],\r\n                darkgoldenrod: [184, 134, 11],\r\n                darkgray: [169, 169, 169],\r\n                darkgreen: [0, 100, 0],\r\n                darkgrey: [169, 169, 169],\r\n                darkkhaki: [189, 183, 107],\r\n                darkmagenta: [139, 0, 139],\r\n                darkolivegreen: [85, 107, 47],\r\n                darkorange: [255, 140, 0],\r\n                darkorchid: [153, 50, 204],\r\n                darkred: [139, 0, 0],\r\n                darksalmon: [233, 150, 122],\r\n                darkseagreen: [143, 188, 143],\r\n                darkslateblue: [72, 61, 139],\r\n                darkslategray: [47, 79, 79],\r\n                darkslategrey: [47, 79, 79],\r\n                darkturquoise: [0, 206, 209],\r\n                darkviolet: [148, 0, 211],\r\n                deeppink: [255, 20, 147],\r\n                deepskyblue: [0, 191, 255],\r\n                dimgray: [105, 105, 105],\r\n                dimgrey: [105, 105, 105],\r\n                dodgerblue: [30, 144, 255],\r\n                firebrick: [178, 34, 34],\r\n                floralwhite: [255, 250, 240],\r\n                forestgreen: [34, 139, 34],\r\n                fuchsia: [255, 0, 255],\r\n                gainsboro: [220, 220, 220],\r\n                ghostwhite: [248, 248, 255],\r\n                gold: [255, 215, 0],\r\n                goldenrod: [218, 165, 32],\r\n                gray: [128, 128, 128],\r\n                green: [0, 128, 0],\r\n                greenyellow: [173, 255, 47],\r\n                grey: [128, 128, 128],\r\n                honeydew: [240, 255, 240],\r\n                hotpink: [255, 105, 180],\r\n                indianred: [205, 92, 92],\r\n                indigo: [75, 0, 130],\r\n                ivory: [255, 255, 240],\r\n                khaki: [240, 230, 140],\r\n                lavender: [230, 230, 250],\r\n                lavenderblush: [255, 240, 245],\r\n                lawngreen: [124, 252, 0],\r\n                lemonchiffon: [255, 250, 205],\r\n                lightblue: [173, 216, 230],\r\n                lightcoral: [240, 128, 128],\r\n                lightcyan: [224, 255, 255],\r\n                lightgoldenrodyellow: [250, 250, 210],\r\n                lightgray: [211, 211, 211],\r\n                lightgreen: [144, 238, 144],\r\n                lightgrey: [211, 211, 211],\r\n                lightpink: [255, 182, 193],\r\n                lightsalmon: [255, 160, 122],\r\n                lightseagreen: [32, 178, 170],\r\n                lightskyblue: [135, 206, 250],\r\n                lightslategray: [119, 136, 153],\r\n                lightslategrey: [119, 136, 153],\r\n                lightsteelblue: [176, 196, 222],\r\n                lightyellow: [255, 255, 224],\r\n                lime: [0, 255, 0],\r\n                limegreen: [50, 205, 50],\r\n                linen: [250, 240, 230],\r\n                magenta: [255, 0, 255],\r\n                maroon: [128, 0, 0],\r\n                mediumaquamarine: [102, 205, 170],\r\n                mediumblue: [0, 0, 205],\r\n                mediumorchid: [186, 85, 211],\r\n                mediumpurple: [147, 112, 219],\r\n                mediumseagreen: [60, 179, 113],\r\n                mediumslateblue: [123, 104, 238],\r\n                mediumspringgreen: [0, 250, 154],\r\n                mediumturquoise: [72, 209, 204],\r\n                mediumvioletred: [199, 21, 133],\r\n                midnightblue: [25, 25, 112],\r\n                mintcream: [245, 255, 250],\r\n                mistyrose: [255, 228, 225],\r\n                moccasin: [255, 228, 181],\r\n                navajowhite: [255, 222, 173],\r\n                navy: [0, 0, 128],\r\n                oldlace: [253, 245, 230],\r\n                olive: [128, 128, 0],\r\n                olivedrab: [107, 142, 35],\r\n                orange: [255, 165, 0],\r\n                orangered: [255, 69, 0],\r\n                orchid: [218, 112, 214],\r\n                palegoldenrod: [238, 232, 170],\r\n                palegreen: [152, 251, 152],\r\n                paleturquoise: [175, 238, 238],\r\n                palevioletred: [219, 112, 147],\r\n                papayawhip: [255, 239, 213],\r\n                peachpuff: [255, 218, 185],\r\n                peru: [205, 133, 63],\r\n                pink: [255, 192, 203],\r\n                plum: [221, 160, 221],\r\n                powderblue: [176, 224, 230],\r\n                purple: [128, 0, 128],\r\n                rebeccapurple: [102, 51, 153],\r\n                red: [255, 0, 0],\r\n                rosybrown: [188, 143, 143],\r\n                royalblue: [65, 105, 225],\r\n                saddlebrown: [139, 69, 19],\r\n                salmon: [250, 128, 114],\r\n                sandybrown: [244, 164, 96],\r\n                seagreen: [46, 139, 87],\r\n                seashell: [255, 245, 238],\r\n                sienna: [160, 82, 45],\r\n                silver: [192, 192, 192],\r\n                skyblue: [135, 206, 235],\r\n                slateblue: [106, 90, 205],\r\n                slategray: [112, 128, 144],\r\n                slategrey: [112, 128, 144],\r\n                snow: [255, 250, 250],\r\n                springgreen: [0, 255, 127],\r\n                steelblue: [70, 130, 180],\r\n                tan: [210, 180, 140],\r\n                teal: [0, 128, 128],\r\n                thistle: [216, 191, 216],\r\n                tomato: [255, 99, 71],\r\n                turquoise: [64, 224, 208],\r\n                violet: [238, 130, 238],\r\n                wheat: [245, 222, 179],\r\n                white: [255, 255, 255],\r\n                whitesmoke: [245, 245, 245],\r\n                yellow: [255, 255, 0],\r\n                yellowgreen: [154, 205, 50]\r\n            };\r\n\r\n            var reverseKeywords = {};\r\n            for (var key in cssKeywords) {\r\n                reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\r\n            }\r\n        }, {}], 4: [function(require, module, exports) {\r\n            var conversions = require(3);\r\n\r\n            var convert = function() {\r\n                return new Converter();\r\n            }\r\n\r\n            for (var func in conversions) {\r\n                // export Raw versions\r\n                convert[func + \"Raw\"] = (function(func) {\r\n                    // accept array or plain args\r\n                    return function(arg) {\r\n                        if (typeof arg == \"number\")\r\n                            arg = Array.prototype.slice.call(arguments);\r\n                        return conversions[func](arg);\r\n                    }\r\n                })(func);\r\n\r\n                var pair = /(\\w+)2(\\w+)/.exec(func),\r\n                    from = pair[1],\r\n                    to = pair[2];\r\n\r\n                // export rgb2hsl and [\"rgb\"][\"hsl\"]\r\n                convert[from] = convert[from] || {};\r\n\r\n                convert[from][to] = convert[func] = (function(func) {\r\n                    return function(arg) {\r\n                        if (typeof arg == \"number\")\r\n                            arg = Array.prototype.slice.call(arguments);\r\n\r\n                        var val = conversions[func](arg);\r\n                        if (typeof val == \"string\" || val === undefined)\r\n                            return val; // keyword\r\n\r\n                        for (var i = 0; i < val.length; i++)\r\n                            val[i] = Math.round(val[i]);\r\n                        return val;\r\n                    }\r\n                })(func);\r\n            }\r\n\r\n            /* Converter does lazy conversion and caching */\r\n            var Converter = function() {\r\n                this.convs = {};\r\n            };\r\n\r\n            /* Either get the values for a space or\r\n              set the values for a space, depending on args */\r\n            Converter.prototype.routeSpace = function(space, args) {\r\n                var values = args[0];\r\n                if (values === undefined) {\r\n                    // color.rgb()\r\n                    return this.getValues(space);\r\n                }\r\n                // color.rgb(10, 10, 10)\r\n                if (typeof values == \"number\") {\r\n                    values = Array.prototype.slice.call(args);\r\n                }\r\n\r\n                return this.setValues(space, values);\r\n            };\r\n\r\n            /* Set the values for a space, invalidating cache */\r\n            Converter.prototype.setValues = function(space, values) {\r\n                this.space = space;\r\n                this.convs = {};\r\n                this.convs[space] = values;\r\n                return this;\r\n            };\r\n\r\n            /* Get the values for a space. If there's already\r\n              a conversion for the space, fetch it, otherwise\r\n              compute it */\r\n            Converter.prototype.getValues = function(space) {\r\n                var vals = this.convs[space];\r\n                if (!vals) {\r\n                    var fspace = this.space,\r\n                        from = this.convs[fspace];\r\n                    vals = convert[fspace][space](from);\r\n\r\n                    this.convs[space] = vals;\r\n                }\r\n                return vals;\r\n            };\r\n\r\n            [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\r\n                Converter.prototype[space] = function(vals) {\r\n                    return this.routeSpace(space, arguments);\r\n                }\r\n            });\r\n\r\n            module.exports = convert;\r\n        }, { \"3\": 3 }], 5: [function(require, module, exports) {\r\n            'use strict'\r\n\r\n            module.exports = {\r\n                \"aliceblue\": [240, 248, 255],\r\n                \"antiquewhite\": [250, 235, 215],\r\n                \"aqua\": [0, 255, 255],\r\n                \"aquamarine\": [127, 255, 212],\r\n                \"azure\": [240, 255, 255],\r\n                \"beige\": [245, 245, 220],\r\n                \"bisque\": [255, 228, 196],\r\n                \"black\": [0, 0, 0],\r\n                \"blanchedalmond\": [255, 235, 205],\r\n                \"blue\": [0, 0, 255],\r\n                \"blueviolet\": [138, 43, 226],\r\n                \"brown\": [165, 42, 42],\r\n                \"burlywood\": [222, 184, 135],\r\n                \"cadetblue\": [95, 158, 160],\r\n                \"chartreuse\": [127, 255, 0],\r\n                \"chocolate\": [210, 105, 30],\r\n                \"coral\": [255, 127, 80],\r\n                \"cornflowerblue\": [100, 149, 237],\r\n                \"cornsilk\": [255, 248, 220],\r\n                \"crimson\": [220, 20, 60],\r\n                \"cyan\": [0, 255, 255],\r\n                \"darkblue\": [0, 0, 139],\r\n                \"darkcyan\": [0, 139, 139],\r\n                \"darkgoldenrod\": [184, 134, 11],\r\n                \"darkgray\": [169, 169, 169],\r\n                \"darkgreen\": [0, 100, 0],\r\n                \"darkgrey\": [169, 169, 169],\r\n                \"darkkhaki\": [189, 183, 107],\r\n                \"darkmagenta\": [139, 0, 139],\r\n                \"darkolivegreen\": [85, 107, 47],\r\n                \"darkorange\": [255, 140, 0],\r\n                \"darkorchid\": [153, 50, 204],\r\n                \"darkred\": [139, 0, 0],\r\n                \"darksalmon\": [233, 150, 122],\r\n                \"darkseagreen\": [143, 188, 143],\r\n                \"darkslateblue\": [72, 61, 139],\r\n                \"darkslategray\": [47, 79, 79],\r\n                \"darkslategrey\": [47, 79, 79],\r\n                \"darkturquoise\": [0, 206, 209],\r\n                \"darkviolet\": [148, 0, 211],\r\n                \"deeppink\": [255, 20, 147],\r\n                \"deepskyblue\": [0, 191, 255],\r\n                \"dimgray\": [105, 105, 105],\r\n                \"dimgrey\": [105, 105, 105],\r\n                \"dodgerblue\": [30, 144, 255],\r\n                \"firebrick\": [178, 34, 34],\r\n                \"floralwhite\": [255, 250, 240],\r\n                \"forestgreen\": [34, 139, 34],\r\n                \"fuchsia\": [255, 0, 255],\r\n                \"gainsboro\": [220, 220, 220],\r\n                \"ghostwhite\": [248, 248, 255],\r\n                \"gold\": [255, 215, 0],\r\n                \"goldenrod\": [218, 165, 32],\r\n                \"gray\": [128, 128, 128],\r\n                \"green\": [0, 128, 0],\r\n                \"greenyellow\": [173, 255, 47],\r\n                \"grey\": [128, 128, 128],\r\n                \"honeydew\": [240, 255, 240],\r\n                \"hotpink\": [255, 105, 180],\r\n                \"indianred\": [205, 92, 92],\r\n                \"indigo\": [75, 0, 130],\r\n                \"ivory\": [255, 255, 240],\r\n                \"khaki\": [240, 230, 140],\r\n                \"lavender\": [230, 230, 250],\r\n                \"lavenderblush\": [255, 240, 245],\r\n                \"lawngreen\": [124, 252, 0],\r\n                \"lemonchiffon\": [255, 250, 205],\r\n                \"lightblue\": [173, 216, 230],\r\n                \"lightcoral\": [240, 128, 128],\r\n                \"lightcyan\": [224, 255, 255],\r\n                \"lightgoldenrodyellow\": [250, 250, 210],\r\n                \"lightgray\": [211, 211, 211],\r\n                \"lightgreen\": [144, 238, 144],\r\n                \"lightgrey\": [211, 211, 211],\r\n                \"lightpink\": [255, 182, 193],\r\n                \"lightsalmon\": [255, 160, 122],\r\n                \"lightseagreen\": [32, 178, 170],\r\n                \"lightskyblue\": [135, 206, 250],\r\n                \"lightslategray\": [119, 136, 153],\r\n                \"lightslategrey\": [119, 136, 153],\r\n                \"lightsteelblue\": [176, 196, 222],\r\n                \"lightyellow\": [255, 255, 224],\r\n                \"lime\": [0, 255, 0],\r\n                \"limegreen\": [50, 205, 50],\r\n                \"linen\": [250, 240, 230],\r\n                \"magenta\": [255, 0, 255],\r\n                \"maroon\": [128, 0, 0],\r\n                \"mediumaquamarine\": [102, 205, 170],\r\n                \"mediumblue\": [0, 0, 205],\r\n                \"mediumorchid\": [186, 85, 211],\r\n                \"mediumpurple\": [147, 112, 219],\r\n                \"mediumseagreen\": [60, 179, 113],\r\n                \"mediumslateblue\": [123, 104, 238],\r\n                \"mediumspringgreen\": [0, 250, 154],\r\n                \"mediumturquoise\": [72, 209, 204],\r\n                \"mediumvioletred\": [199, 21, 133],\r\n                \"midnightblue\": [25, 25, 112],\r\n                \"mintcream\": [245, 255, 250],\r\n                \"mistyrose\": [255, 228, 225],\r\n                \"moccasin\": [255, 228, 181],\r\n                \"navajowhite\": [255, 222, 173],\r\n                \"navy\": [0, 0, 128],\r\n                \"oldlace\": [253, 245, 230],\r\n                \"olive\": [128, 128, 0],\r\n                \"olivedrab\": [107, 142, 35],\r\n                \"orange\": [255, 165, 0],\r\n                \"orangered\": [255, 69, 0],\r\n                \"orchid\": [218, 112, 214],\r\n                \"palegoldenrod\": [238, 232, 170],\r\n                \"palegreen\": [152, 251, 152],\r\n                \"paleturquoise\": [175, 238, 238],\r\n                \"palevioletred\": [219, 112, 147],\r\n                \"papayawhip\": [255, 239, 213],\r\n                \"peachpuff\": [255, 218, 185],\r\n                \"peru\": [205, 133, 63],\r\n                \"pink\": [255, 192, 203],\r\n                \"plum\": [221, 160, 221],\r\n                \"powderblue\": [176, 224, 230],\r\n                \"purple\": [128, 0, 128],\r\n                \"rebeccapurple\": [102, 51, 153],\r\n                \"red\": [255, 0, 0],\r\n                \"rosybrown\": [188, 143, 143],\r\n                \"royalblue\": [65, 105, 225],\r\n                \"saddlebrown\": [139, 69, 19],\r\n                \"salmon\": [250, 128, 114],\r\n                \"sandybrown\": [244, 164, 96],\r\n                \"seagreen\": [46, 139, 87],\r\n                \"seashell\": [255, 245, 238],\r\n                \"sienna\": [160, 82, 45],\r\n                \"silver\": [192, 192, 192],\r\n                \"skyblue\": [135, 206, 235],\r\n                \"slateblue\": [106, 90, 205],\r\n                \"slategray\": [112, 128, 144],\r\n                \"slategrey\": [112, 128, 144],\r\n                \"snow\": [255, 250, 250],\r\n                \"springgreen\": [0, 255, 127],\r\n                \"steelblue\": [70, 130, 180],\r\n                \"tan\": [210, 180, 140],\r\n                \"teal\": [0, 128, 128],\r\n                \"thistle\": [216, 191, 216],\r\n                \"tomato\": [255, 99, 71],\r\n                \"turquoise\": [64, 224, 208],\r\n                \"violet\": [238, 130, 238],\r\n                \"wheat\": [245, 222, 179],\r\n                \"white\": [255, 255, 255],\r\n                \"whitesmoke\": [245, 245, 245],\r\n                \"yellow\": [255, 255, 0],\r\n                \"yellowgreen\": [154, 205, 50]\r\n            };\r\n        }, {}], 6: [function(require, module, exports) {\r\n            /**\r\n             * @namespace Chart\r\n             */\r\n            var Chart = require(20)();\r\n\r\n            Chart.helpers = require(36);\r\n\r\n            // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\r\n            require(18)(Chart);\r\n\r\n            Chart.defaults = require(16);\r\n            Chart.Element = require(17);\r\n            Chart.elements = require(31);\r\n            Chart.Interaction = require(19);\r\n            Chart.layouts = require(21);\r\n            Chart.platform = require(39);\r\n            Chart.plugins = require(22);\r\n            Chart.Ticks = require(25);\r\n\r\n            require(13)(Chart);\r\n            require(14)(Chart);\r\n            require(15)(Chart);\r\n            require(24)(Chart);\r\n            require(23)(Chart);\r\n            require(26)(Chart);\r\n\r\n            require(46)(Chart);\r\n            require(44)(Chart);\r\n            require(45)(Chart);\r\n            // require('./scales/scale.logarithmic')(Chart);\r\n            // require('./scales/scale.radialLinear')(Chart);\r\n            // require('./scales/scale.time')(Chart);\r\n\r\n            // Controllers must be loaded after elements\r\n            // See Chart.core.datasetController.dataElementType\r\n            require(10)(Chart);\r\n            // require('./controllers/controller.bubble')(Chart);\r\n            require(11)(Chart);\r\n            require(12)(Chart);\r\n            // require('./controllers/controller.polarArea')(Chart);\r\n            // require('./controllers/controller.radar')(Chart);\r\n            // require('./controllers/controller.scatter')(Chart);\r\n\r\n            require(7)(Chart);\r\n            // require('./charts/Chart.Bubble')(Chart);\r\n            require(8)(Chart);\r\n            require(9)(Chart);\r\n            // require('./charts/Chart.PolarArea')(Chart);\r\n            // require('./charts/Chart.Radar')(Chart);\r\n            // require('./charts/Chart.Scatter')(Chart);\r\n\r\n            // Loading built-it plugins\r\n            var plugins = require(40);\r\n            for (var k in plugins) {\r\n                if (plugins.hasOwnProperty(k)) {\r\n                    Chart.plugins.register(plugins[k]);\r\n                }\r\n            }\r\n\r\n            Chart.platform.initialize();\r\n\r\n            module.exports = Chart;\r\n            if (typeof window !== 'undefined') {\r\n                window.Chart = Chart;\r\n            }\r\n        }, { \"10\": 10, \"11\": 11, \"12\": 12, \"13\": 13, \"14\": 14, \"15\": 15, \"16\": 16, \"17\": 17, \"18\": 18, \"19\": 19, \"20\": 20, \"21\": 21, \"22\": 22, \"23\": 23, \"24\": 24, \"25\": 25, \"26\": 26, \"31\": 31, \"36\": 36, \"39\": 39, \"40\": 40, \"44\": 44, \"45\": 45, \"46\": 46, \"7\": 7, \"8\": 8, \"9\": 9 }], 7: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Bar = function(context, config) {\r\n                    config.type = 'bar';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 8: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Doughnut = function(context, config) {\r\n                    config.type = 'doughnut';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 9: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Line = function(context, config) {\r\n                    config.type = 'line';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 10: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('bar', {\r\n                hover: {\r\n                    mode: 'label'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'category',\r\n\r\n                        // Specific to Bar Controller\r\n                        categoryPercentage: 0.8,\r\n                        barPercentage: 0.9,\r\n\r\n                        // offset settings\r\n                        offset: true,\r\n\r\n                        // grid line settings\r\n                        gridLines: {\r\n                            offsetGridLines: true\r\n                        }\r\n                    }],\r\n\r\n                    yAxes: [{\r\n                        type: 'linear'\r\n                    }]\r\n                }\r\n            });\r\n\r\n            defaults._set('horizontalBar', {\r\n                hover: {\r\n                    mode: 'index',\r\n                    axis: 'y'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'linear',\r\n                        position: 'bottom'\r\n                    }],\r\n\r\n                    yAxes: [{\r\n                        position: 'left',\r\n                        type: 'category',\r\n\r\n                        // Specific to Horizontal Bar Controller\r\n                        categoryPercentage: 0.8,\r\n                        barPercentage: 0.9,\r\n\r\n                        // offset settings\r\n                        offset: true,\r\n\r\n                        // grid line settings\r\n                        gridLines: {\r\n                            offsetGridLines: true\r\n                        }\r\n                    }]\r\n                },\r\n\r\n                elements: {\r\n                    rectangle: {\r\n                        borderSkipped: 'left'\r\n                    }\r\n                },\r\n\r\n                tooltips: {\r\n                    callbacks: {\r\n                        title: function(item, data) {\r\n                            // Pick first xLabel for now\r\n                            var title = '';\r\n\r\n                            if (item.length > 0) {\r\n                                if (item[0].yLabel) {\r\n                                    title = item[0].yLabel;\r\n                                } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\r\n                                    title = data.labels[item[0].index];\r\n                                }\r\n                            }\r\n\r\n                            return title;\r\n                        },\r\n\r\n                        label: function(item, data) {\r\n                            var datasetLabel = data.datasets[item.datasetIndex].label || '';\r\n                            return datasetLabel + ': ' + item.xLabel;\r\n                        }\r\n                    },\r\n                    mode: 'index',\r\n                    axis: 'y'\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\r\n             * @private\r\n             */\r\n            function computeMinSampleSize(scale, pixels) {\r\n                var min = scale.isHorizontal() ? scale.width : scale.height;\r\n                var ticks = scale.getTicks();\r\n                var prev, curr, i, ilen;\r\n\r\n                for (i = 1, ilen = pixels.length; i < ilen; ++i) {\r\n                    min = Math.min(min, pixels[i] - pixels[i - 1]);\r\n                }\r\n\r\n                for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n                    curr = scale.getPixelForTick(i);\r\n                    min = i > 0 ? Math.min(min, curr - prev) : min;\r\n                    prev = curr;\r\n                }\r\n\r\n                return min;\r\n            }\r\n\r\n            /**\r\n             * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\r\n             * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\r\n             * mode currently always generates bars equally sized (until we introduce scriptable options?).\r\n             * @private\r\n             */\r\n            function computeFitCategoryTraits(index, ruler, options) {\r\n                var thickness = options.barThickness;\r\n                var count = ruler.stackCount;\r\n                var curr = ruler.pixels[index];\r\n                var size, ratio;\r\n\r\n                if (helpers.isNullOrUndef(thickness)) {\r\n                    size = ruler.min * options.categoryPercentage;\r\n                    ratio = options.barPercentage;\r\n                } else {\r\n                    // When bar thickness is enforced, category and bar percentages are ignored.\r\n                    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\r\n                    // and deprecate barPercentage since this value is ignored when thickness is absolute.\r\n                    size = thickness * count;\r\n                    ratio = 1;\r\n                }\r\n\r\n                return {\r\n                    chunk: size / count,\r\n                    ratio: ratio,\r\n                    start: curr - (size / 2)\r\n                };\r\n            }\r\n\r\n            /**\r\n             * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\r\n             * percentage options are 1), based on the previous and following categories. This mode\r\n             * generates bars with different widths when data are not evenly spaced.\r\n             * @private\r\n             */\r\n            function computeFlexCategoryTraits(index, ruler, options) {\r\n                var pixels = ruler.pixels;\r\n                var curr = pixels[index];\r\n                var prev = index > 0 ? pixels[index - 1] : null;\r\n                var next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n                var percent = options.categoryPercentage;\r\n                var start, size;\r\n\r\n                if (prev === null) {\r\n                    // first data: its size is double based on the next point or,\r\n                    // if it's also the last data, we use the scale end extremity.\r\n                    prev = curr - (next === null ? ruler.end - curr : next - curr);\r\n                }\r\n\r\n                if (next === null) {\r\n                    // last data: its size is also double based on the previous point.\r\n                    next = curr + curr - prev;\r\n                }\r\n\r\n                start = curr - ((curr - prev) / 2) * percent;\r\n                size = ((next - prev) / 2) * percent;\r\n\r\n                return {\r\n                    chunk: size / ruler.stackCount,\r\n                    ratio: options.barPercentage,\r\n                    start: start\r\n                };\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.controllers.bar = Chart.DatasetController.extend({\r\n                    dataElementType: elements.Rectangle,\r\n\r\n                    initialize: function() {\r\n                        var me = this;\r\n                        var meta;\r\n\r\n                        Chart.DatasetController.prototype.initialize.apply(me, arguments);\r\n\r\n                        meta = me.getMeta();\r\n                        meta.stack = me.getDataset().stack;\r\n                        meta.bar = true;\r\n                    },\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var rects = me.getMeta().data;\r\n                        var i, ilen;\r\n\r\n                        me._ruler = me.getRuler();\r\n\r\n                        for (i = 0, ilen = rects.length; i < ilen; ++i) {\r\n                            me.updateElement(rects[i], i, reset);\r\n                        }\r\n                    },\r\n\r\n                    updateElement: function(rectangle, index, reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var dataset = me.getDataset();\r\n                        var custom = rectangle.custom || {};\r\n                        var rectangleOptions = chart.options.elements.rectangle;\r\n\r\n                        rectangle._xScale = me.getScaleForId(meta.xAxisID);\r\n                        rectangle._yScale = me.getScaleForId(meta.yAxisID);\r\n                        rectangle._datasetIndex = me.index;\r\n                        rectangle._index = index;\r\n\r\n                        rectangle._model = {\r\n                            datasetLabel: dataset.label,\r\n                            label: chart.data.labels[index],\r\n                            borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\r\n                            backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\r\n                            borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\r\n                            borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\r\n                        };\r\n\r\n                        me.updateElementGeometry(rectangle, index, reset);\r\n\r\n                        rectangle.pivot();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    updateElementGeometry: function(rectangle, index, reset) {\r\n                        var me = this;\r\n                        var model = rectangle._model;\r\n                        var vscale = me.getValueScale();\r\n                        var base = vscale.getBasePixel();\r\n                        var horizontal = vscale.isHorizontal();\r\n                        var ruler = me._ruler || me.getRuler();\r\n                        var vpixels = me.calculateBarValuePixels(me.index, index);\r\n                        var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\r\n\r\n                        model.horizontal = horizontal;\r\n                        model.base = reset ? base : vpixels.base;\r\n                        model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\r\n                        model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\r\n                        model.height = horizontal ? ipixels.size : undefined;\r\n                        model.width = horizontal ? undefined : ipixels.size;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScaleId: function() {\r\n                        return this.getMeta().yAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScaleId: function() {\r\n                        return this.getMeta().xAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScale: function() {\r\n                        return this.getScaleForId(this.getValueScaleId());\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScale: function() {\r\n                        return this.getScaleForId(this.getIndexScaleId());\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the stacks based on groups and bar visibility.\r\n                     * @param {Number} [last] - The dataset index\r\n                     * @returns {Array} The stack list\r\n                     * @private\r\n                     */\r\n                    _getStacks: function(last) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var scale = me.getIndexScale();\r\n                        var stacked = scale.options.stacked;\r\n                        var ilen = last === undefined ? chart.data.datasets.length : last + 1;\r\n                        var stacks = [];\r\n                        var i, meta;\r\n\r\n                        for (i = 0; i < ilen; ++i) {\r\n                            meta = chart.getDatasetMeta(i);\r\n                            if (meta.bar && chart.isDatasetVisible(i) &&\r\n                                (stacked === false ||\r\n                                    (stacked === true && stacks.indexOf(meta.stack) === -1) ||\r\n                                    (stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\r\n                                stacks.push(meta.stack);\r\n                            }\r\n                        }\r\n\r\n                        return stacks;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the effective number of stacks based on groups and bar visibility.\r\n                     * @private\r\n                     */\r\n                    getStackCount: function() {\r\n                        return this._getStacks().length;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the stack index for the given dataset based on groups and bar visibility.\r\n                     * @param {Number} [datasetIndex] - The dataset index\r\n                     * @param {String} [name] - The stack name to find\r\n                     * @returns {Number} The stack index\r\n                     * @private\r\n                     */\r\n                    getStackIndex: function(datasetIndex, name) {\r\n                        var stacks = this._getStacks(datasetIndex);\r\n                        var index = (name !== undefined)\r\n                            ? stacks.indexOf(name)\r\n                            : -1; // indexOf returns -1 if element is not present\r\n\r\n                        return (index === -1)\r\n                            ? stacks.length - 1\r\n                            : index;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getRuler: function() {\r\n                        var me = this;\r\n                        var scale = me.getIndexScale();\r\n                        var stackCount = me.getStackCount();\r\n                        var datasetIndex = me.index;\r\n                        var isHorizontal = scale.isHorizontal();\r\n                        var start = isHorizontal ? scale.left : scale.top;\r\n                        var end = start + (isHorizontal ? scale.width : scale.height);\r\n                        var pixels = [];\r\n                        var i, ilen, min;\r\n\r\n                        for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\r\n                            pixels.push(scale.getPixelForValue(null, i, datasetIndex));\r\n                        }\r\n\r\n                        min = helpers.isNullOrUndef(scale.options.barThickness)\r\n                            ? computeMinSampleSize(scale, pixels)\r\n                            : -1;\r\n\r\n                        return {\r\n                            min: min,\r\n                            pixels: pixels,\r\n                            start: start,\r\n                            end: end,\r\n                            stackCount: stackCount,\r\n                            scale: scale\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Note: pixel values are not clamped to the scale area.\r\n                     * @private\r\n                     */\r\n                    calculateBarValuePixels: function(datasetIndex, index) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var scale = me.getValueScale();\r\n                        var datasets = chart.data.datasets;\r\n                        var value = scale.getRightValue(datasets[datasetIndex].data[index]);\r\n                        var stacked = scale.options.stacked;\r\n                        var stack = meta.stack;\r\n                        var start = 0;\r\n                        var i, imeta, ivalue, base, head, size;\r\n\r\n                        if (stacked || (stacked === undefined && stack !== undefined)) {\r\n                            for (i = 0; i < datasetIndex; ++i) {\r\n                                imeta = chart.getDatasetMeta(i);\r\n\r\n                                if (imeta.bar &&\r\n                                    imeta.stack === stack &&\r\n                                    imeta.controller.getValueScaleId() === scale.id &&\r\n                                    chart.isDatasetVisible(i)) {\r\n                                    ivalue = scale.getRightValue(datasets[i].data[index]);\r\n                                    if ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\r\n                                        start += ivalue;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        base = scale.getPixelForValue(start);\r\n                        head = scale.getPixelForValue(start + value);\r\n                        size = (head - base) / 2;\r\n\r\n                        return {\r\n                            size: size,\r\n                            base: base,\r\n                            head: head,\r\n                            center: head + size / 2\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    calculateBarIndexPixels: function(datasetIndex, index, ruler) {\r\n                        var me = this;\r\n                        var options = ruler.scale.options;\r\n                        var range = options.barThickness === 'flex'\r\n                            ? computeFlexCategoryTraits(index, ruler, options)\r\n                            : computeFitCategoryTraits(index, ruler, options);\r\n\r\n                        var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\r\n                        var center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\r\n                        var size = Math.min(\r\n                            helpers.valueOrDefault(options.maxBarThickness, Infinity),\r\n                            range.chunk * range.ratio);\r\n\r\n                        return {\r\n                            base: center - size / 2,\r\n                            head: center + size / 2,\r\n                            center: center,\r\n                            size: size\r\n                        };\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var scale = me.getValueScale();\r\n                        var rects = me.getMeta().data;\r\n                        var dataset = me.getDataset();\r\n                        var ilen = rects.length;\r\n                        var i = 0;\r\n\r\n                        helpers.canvas.clipArea(chart.ctx, chart.chartArea);\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            if (!isNaN(scale.getRightValue(dataset.data[i]))) {\r\n                                rects[i].draw();\r\n                            }\r\n                        }\r\n\r\n                        helpers.canvas.unclipArea(chart.ctx);\r\n                    },\r\n\r\n                    setHoverStyle: function(rectangle) {\r\n                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n                        var index = rectangle._index;\r\n                        var custom = rectangle.custom || {};\r\n                        var model = rectangle._model;\r\n\r\n                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    removeHoverStyle: function(rectangle) {\r\n                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n                        var index = rectangle._index;\r\n                        var custom = rectangle.custom || {};\r\n                        var model = rectangle._model;\r\n                        var rectangleElementOptions = this.chart.options.elements.rectangle;\r\n\r\n                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\r\n                        model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\r\n                        model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\r\n                    }\r\n                });\r\n\r\n                Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScaleId: function() {\r\n                        return this.getMeta().xAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScaleId: function() {\r\n                        return this.getMeta().yAxisID;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 11: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('doughnut', {\r\n                animation: {\r\n                    // Boolean - Whether we animate the rotation of the Doughnut\r\n                    animateRotate: true,\r\n                    // Boolean - Whether we animate scaling the Doughnut from the centre\r\n                    animateScale: false\r\n                },\r\n                hover: {\r\n                    mode: 'single'\r\n                },\r\n                legendCallback: function(chart) {\r\n                    var text = [];\r\n                    text.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n                    var data = chart.data;\r\n                    var datasets = data.datasets;\r\n                    var labels = data.labels;\r\n\r\n                    if (datasets.length) {\r\n                        for (var i = 0; i < datasets[0].data.length; ++i) {\r\n                            text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\r\n                            if (labels[i]) {\r\n                                text.push(labels[i]);\r\n                            }\r\n                            text.push('</li>');\r\n                        }\r\n                    }\r\n\r\n                    text.push('</ul>');\r\n                    return text.join('');\r\n                },\r\n                legend: {\r\n                    labels: {\r\n                        generateLabels: function(chart) {\r\n                            var data = chart.data;\r\n                            if (data.labels.length && data.datasets.length) {\r\n                                return data.labels.map(function(label, i) {\r\n                                    var meta = chart.getDatasetMeta(0);\r\n                                    var ds = data.datasets[0];\r\n                                    var arc = meta.data[i];\r\n                                    var custom = arc && arc.custom || {};\r\n                                    var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n                                    var arcOpts = chart.options.elements.arc;\r\n                                    var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n                                    var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n                                    var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\r\n                                    return {\r\n                                        text: label,\r\n                                        fillStyle: fill,\r\n                                        strokeStyle: stroke,\r\n                                        lineWidth: bw,\r\n                                        hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n                                        // Extra data used for toggling the correct item\r\n                                        index: i\r\n                                    };\r\n                                });\r\n                            }\r\n                            return [];\r\n                        }\r\n                    },\r\n\r\n                    onClick: function(e, legendItem) {\r\n                        var index = legendItem.index;\r\n                        var chart = this.chart;\r\n                        var i, ilen, meta;\r\n\r\n                        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n                            meta = chart.getDatasetMeta(i);\r\n                            // toggle visibility of index if exists\r\n                            if (meta.data[index]) {\r\n                                meta.data[index].hidden = !meta.data[index].hidden;\r\n                            }\r\n                        }\r\n\r\n                        chart.update();\r\n                    }\r\n                },\r\n\r\n                // The percentage of the chart that we cut out of the middle.\r\n                cutoutPercentage: 50,\r\n\r\n                // The rotation of the chart, where the first data arc begins.\r\n                rotation: Math.PI * -0.5,\r\n\r\n                // The total circumference of the chart.\r\n                circumference: Math.PI * 2.0,\r\n\r\n                // Need to override these to give a nice default\r\n                tooltips: {\r\n                    callbacks: {\r\n                        title: function() {\r\n                            return '';\r\n                        },\r\n                        label: function(tooltipItem, data) {\r\n                            var dataLabel = data.labels[tooltipItem.index];\r\n                            var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\r\n                            if (helpers.isArray(dataLabel)) {\r\n                                // show value on first line of multiline label\r\n                                // need to clone because we are changing the value\r\n                                dataLabel = dataLabel.slice();\r\n                                dataLabel[0] += value;\r\n                            } else {\r\n                                dataLabel += value;\r\n                            }\r\n\r\n                            return dataLabel;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            defaults._set('pie', helpers.clone(defaults.doughnut));\r\n            defaults._set('pie', {\r\n                cutoutPercentage: 0\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\r\n                    dataElementType: elements.Arc,\r\n\r\n                    linkScales: helpers.noop,\r\n\r\n                    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\r\n                    getRingIndex: function(datasetIndex) {\r\n                        var ringIndex = 0;\r\n\r\n                        for (var j = 0; j < datasetIndex; ++j) {\r\n                            if (this.chart.isDatasetVisible(j)) {\r\n                                ++ringIndex;\r\n                            }\r\n                        }\r\n\r\n                        return ringIndex;\r\n                    },\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var chartArea = chart.chartArea;\r\n                        var opts = chart.options;\r\n                        var arcOpts = opts.elements.arc;\r\n                        var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\r\n                        var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\r\n                        var minSize = Math.min(availableWidth, availableHeight);\r\n                        var offset = { x: 0, y: 0 };\r\n                        var meta = me.getMeta();\r\n                        var cutoutPercentage = opts.cutoutPercentage;\r\n                        var circumference = opts.circumference;\r\n\r\n                        // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\r\n                        if (circumference < Math.PI * 2.0) {\r\n                            var startAngle = opts.rotation % (Math.PI * 2.0);\r\n                            startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\r\n                            var endAngle = startAngle + circumference;\r\n                            var start = { x: Math.cos(startAngle), y: Math.sin(startAngle) };\r\n                            var end = { x: Math.cos(endAngle), y: Math.sin(endAngle) };\r\n                            var contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\r\n                            var contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\r\n                            var contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\r\n                            var contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\r\n                            var cutout = cutoutPercentage / 100.0;\r\n                            var min = { x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout)) };\r\n                            var max = { x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout)) };\r\n                            var size = { width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5 };\r\n                            minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\r\n                            offset = { x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5 };\r\n                        }\r\n\r\n                        chart.borderWidth = me.getMaxBorderWidth(meta.data);\r\n                        chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\r\n                        chart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\r\n                        chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n                        chart.offsetX = offset.x * chart.outerRadius;\r\n                        chart.offsetY = offset.y * chart.outerRadius;\r\n\r\n                        meta.total = me.calculateTotal();\r\n\r\n                        me.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\r\n                        me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\r\n\r\n                        helpers.each(meta.data, function(arc, index) {\r\n                            me.updateElement(arc, index, reset);\r\n                        });\r\n                    },\r\n\r\n                    updateElement: function(arc, index, reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var chartArea = chart.chartArea;\r\n                        var opts = chart.options;\r\n                        var animationOpts = opts.animation;\r\n                        var centerX = (chartArea.left + chartArea.right) / 2;\r\n                        var centerY = (chartArea.top + chartArea.bottom) / 2;\r\n                        var startAngle = opts.rotation; // non reset case handled later\r\n                        var endAngle = opts.rotation; // non reset case handled later\r\n                        var dataset = me.getDataset();\r\n                        var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\r\n                        var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\r\n                        var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\r\n                        var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n\r\n                        helpers.extend(arc, {\r\n                            // Utility\r\n                            _datasetIndex: me.index,\r\n                            _index: index,\r\n\r\n                            // Desired view properties\r\n                            _model: {\r\n                                x: centerX + chart.offsetX,\r\n                                y: centerY + chart.offsetY,\r\n                                startAngle: startAngle,\r\n                                endAngle: endAngle,\r\n                                circumference: circumference,\r\n                                outerRadius: outerRadius,\r\n                                innerRadius: innerRadius,\r\n                                label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\r\n                            }\r\n                        });\r\n\r\n                        var model = arc._model;\r\n                        // Resets the visual styles\r\n                        this.removeHoverStyle(arc);\r\n\r\n                        // Set correct angles if not resetting\r\n                        if (!reset || !animationOpts.animateRotate) {\r\n                            if (index === 0) {\r\n                                model.startAngle = opts.rotation;\r\n                            } else {\r\n                                model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\r\n                            }\r\n\r\n                            model.endAngle = model.startAngle + model.circumference;\r\n                        }\r\n\r\n                        arc.pivot();\r\n                    },\r\n\r\n                    removeHoverStyle: function(arc) {\r\n                        Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n                    },\r\n\r\n                    calculateTotal: function() {\r\n                        var dataset = this.getDataset();\r\n                        var meta = this.getMeta();\r\n                        var total = 0;\r\n                        var value;\r\n\r\n                        helpers.each(meta.data, function(element, index) {\r\n                            value = dataset.data[index];\r\n                            if (!isNaN(value) && !element.hidden) {\r\n                                total += Math.abs(value);\r\n                            }\r\n                        });\r\n\r\n                        /* if (total === 0) {\r\n                            total = NaN;\r\n                        }*/\r\n\r\n                        return total;\r\n                    },\r\n\r\n                    calculateCircumference: function(value) {\r\n                        var total = this.getMeta().total;\r\n                        if (total > 0 && !isNaN(value)) {\r\n                            return (Math.PI * 2.0) * (Math.abs(value) / total);\r\n                        }\r\n                        return 0;\r\n                    },\r\n\r\n                    // gets the max border or hover width to properly scale pie charts\r\n                    getMaxBorderWidth: function(arcs) {\r\n                        var max = 0;\r\n                        var index = this.index;\r\n                        var length = arcs.length;\r\n                        var borderWidth;\r\n                        var hoverWidth;\r\n\r\n                        for (var i = 0; i < length; i++) {\r\n                            borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\r\n                            hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\r\n\r\n                            max = borderWidth > max ? borderWidth : max;\r\n                            max = hoverWidth > max ? hoverWidth : max;\r\n                        }\r\n                        return max;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 12: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('line', {\r\n                showLines: true,\r\n                spanGaps: false,\r\n\r\n                hover: {\r\n                    mode: 'label'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'category',\r\n                        id: 'x-axis-0'\r\n                    }],\r\n                    yAxes: [{\r\n                        type: 'linear',\r\n                        id: 'y-axis-0'\r\n                    }]\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                function lineEnabled(dataset, options) {\r\n                    return helpers.valueOrDefault(dataset.showLine, options.showLines);\r\n                }\r\n\r\n                Chart.controllers.line = Chart.DatasetController.extend({\r\n                    datasetElementType: elements.Line,\r\n\r\n                    dataElementType: elements.Point,\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var line = meta.dataset;\r\n                        var points = meta.data || [];\r\n                        var options = me.chart.options;\r\n                        var lineElementOptions = options.elements.line;\r\n                        var scale = me.getScaleForId(meta.yAxisID);\r\n                        var i, ilen, custom;\r\n                        var dataset = me.getDataset();\r\n                        var showLine = lineEnabled(dataset, options);\r\n\r\n                        // Update Line\r\n                        if (showLine) {\r\n                            custom = line.custom || {};\r\n\r\n                            // Compatibility: If the properties are defined with only the old name, use those values\r\n                            if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n                                dataset.lineTension = dataset.tension;\r\n                            }\r\n\r\n                            // Utility\r\n                            line._scale = scale;\r\n                            line._datasetIndex = me.index;\r\n                            // Data\r\n                            line._children = points;\r\n                            // Model\r\n                            line._model = {\r\n                                // Appearance\r\n                                // The default behavior of lines is to break at null values, according\r\n                                // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\r\n                                // This option gives lines the ability to span gaps\r\n                                spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\r\n                                tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n                                backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n                                borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n                                borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n                                borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n                                borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n                                borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n                                borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n                                fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n                                steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\r\n                                cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\r\n                            };\r\n\r\n                            line.pivot();\r\n                        }\r\n\r\n                        // Update Points\r\n                        for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                            me.updateElement(points[i], i, reset);\r\n                        }\r\n\r\n                        if (showLine && line._model.tension !== 0) {\r\n                            me.updateBezierControlPoints();\r\n                        }\r\n\r\n                        // Now pivot the point for animation\r\n                        for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                            points[i].pivot();\r\n                        }\r\n                    },\r\n\r\n                    getPointBackgroundColor: function(point, index) {\r\n                        var backgroundColor = this.chart.options.elements.point.backgroundColor;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (custom.backgroundColor) {\r\n                            backgroundColor = custom.backgroundColor;\r\n                        } else if (dataset.pointBackgroundColor) {\r\n                            backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\r\n                        } else if (dataset.backgroundColor) {\r\n                            backgroundColor = dataset.backgroundColor;\r\n                        }\r\n\r\n                        return backgroundColor;\r\n                    },\r\n\r\n                    getPointBorderColor: function(point, index) {\r\n                        var borderColor = this.chart.options.elements.point.borderColor;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (custom.borderColor) {\r\n                            borderColor = custom.borderColor;\r\n                        } else if (dataset.pointBorderColor) {\r\n                            borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\r\n                        } else if (dataset.borderColor) {\r\n                            borderColor = dataset.borderColor;\r\n                        }\r\n\r\n                        return borderColor;\r\n                    },\r\n\r\n                    getPointBorderWidth: function(point, index) {\r\n                        var borderWidth = this.chart.options.elements.point.borderWidth;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (!isNaN(custom.borderWidth)) {\r\n                            borderWidth = custom.borderWidth;\r\n                        } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\r\n                            borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\r\n                        } else if (!isNaN(dataset.borderWidth)) {\r\n                            borderWidth = dataset.borderWidth;\r\n                        }\r\n\r\n                        return borderWidth;\r\n                    },\r\n\r\n                    updateElement: function(point, index, reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var custom = point.custom || {};\r\n                        var dataset = me.getDataset();\r\n                        var datasetIndex = me.index;\r\n                        var value = dataset.data[index];\r\n                        var yScale = me.getScaleForId(meta.yAxisID);\r\n                        var xScale = me.getScaleForId(meta.xAxisID);\r\n                        var pointOptions = me.chart.options.elements.point;\r\n                        var x, y;\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n                            dataset.pointRadius = dataset.radius;\r\n                        }\r\n                        if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\r\n                            dataset.pointHitRadius = dataset.hitRadius;\r\n                        }\r\n\r\n                        x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\r\n                        y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\r\n\r\n                        // Utility\r\n                        point._xScale = xScale;\r\n                        point._yScale = yScale;\r\n                        point._datasetIndex = datasetIndex;\r\n                        point._index = index;\r\n\r\n                        // Desired view properties\r\n                        point._model = {\r\n                            x: x,\r\n                            y: y,\r\n                            skip: custom.skip || isNaN(x) || isNaN(y),\r\n                            // Appearance\r\n                            radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\r\n                            pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\r\n                            backgroundColor: me.getPointBackgroundColor(point, index),\r\n                            borderColor: me.getPointBorderColor(point, index),\r\n                            borderWidth: me.getPointBorderWidth(point, index),\r\n                            tension: meta.dataset._model ? meta.dataset._model.tension : 0,\r\n                            steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\r\n                            // Tooltip\r\n                            hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\r\n                        };\r\n                    },\r\n\r\n                    calculatePointY: function(value, index, datasetIndex) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var yScale = me.getScaleForId(meta.yAxisID);\r\n                        var sumPos = 0;\r\n                        var sumNeg = 0;\r\n                        var i, ds, dsMeta;\r\n\r\n                        if (yScale.options.stacked) {\r\n                            for (i = 0; i < datasetIndex; i++) {\r\n                                ds = chart.data.datasets[i];\r\n                                dsMeta = chart.getDatasetMeta(i);\r\n                                if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\r\n                                    var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\r\n                                    if (stackedRightValue < 0) {\r\n                                        sumNeg += stackedRightValue || 0;\r\n                                    } else {\r\n                                        sumPos += stackedRightValue || 0;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            var rightValue = Number(yScale.getRightValue(value));\r\n                            if (rightValue < 0) {\r\n                                return yScale.getPixelForValue(sumNeg + rightValue);\r\n                            }\r\n                            return yScale.getPixelForValue(sumPos + rightValue);\r\n                        }\r\n\r\n                        return yScale.getPixelForValue(value);\r\n                    },\r\n\r\n                    updateBezierControlPoints: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var area = me.chart.chartArea;\r\n                        var points = (meta.data || []);\r\n                        var i, ilen, point, model, controlPoints;\r\n\r\n                        // Only consider points that are drawn in case the spanGaps option is used\r\n                        if (meta.dataset._model.spanGaps) {\r\n                            points = points.filter(function(pt) {\r\n                                return !pt._model.skip;\r\n                            });\r\n                        }\r\n\r\n                        function capControlPoint(pt, min, max) {\r\n                            return Math.max(Math.min(pt, max), min);\r\n                        }\r\n\r\n                        if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\r\n                            helpers.splineCurveMonotone(points);\r\n                        } else {\r\n                            for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                                point = points[i];\r\n                                model = point._model;\r\n                                controlPoints = helpers.splineCurve(\r\n                                    helpers.previousItem(points, i)._model,\r\n                                    model,\r\n                                    helpers.nextItem(points, i)._model,\r\n                                    meta.dataset._model.tension\r\n                                );\r\n                                model.controlPointPreviousX = controlPoints.previous.x;\r\n                                model.controlPointPreviousY = controlPoints.previous.y;\r\n                                model.controlPointNextX = controlPoints.next.x;\r\n                                model.controlPointNextY = controlPoints.next.y;\r\n                            }\r\n                        }\r\n\r\n                        if (me.chart.options.elements.line.capBezierPoints) {\r\n                            for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                                model = points[i]._model;\r\n                                model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\r\n                                model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\r\n                                model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\r\n                                model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var points = meta.data || [];\r\n                        var area = chart.chartArea;\r\n                        var ilen = points.length;\r\n                        var i = 0;\r\n\r\n                        helpers.canvas.clipArea(chart.ctx, area);\r\n\r\n                        if (lineEnabled(me.getDataset(), chart.options)) {\r\n                            meta.dataset.draw();\r\n                        }\r\n\r\n                        helpers.canvas.unclipArea(chart.ctx);\r\n\r\n                        // Draw the points\r\n                        for (; i < ilen; ++i) {\r\n                            points[i].draw(area);\r\n                        }\r\n                    },\r\n\r\n                    setHoverStyle: function(point) {\r\n                        // Point\r\n                        var dataset = this.chart.data.datasets[point._datasetIndex];\r\n                        var index = point._index;\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n\r\n                        model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n                        model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    removeHoverStyle: function(point) {\r\n                        var me = this;\r\n                        var dataset = me.chart.data.datasets[point._datasetIndex];\r\n                        var index = point._index;\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n                            dataset.pointRadius = dataset.radius;\r\n                        }\r\n\r\n                        model.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\r\n                        model.backgroundColor = me.getPointBackgroundColor(point, index);\r\n                        model.borderColor = me.getPointBorderColor(point, index);\r\n                        model.borderWidth = me.getPointBorderWidth(point, index);\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 13: [function(require, module, exports) {\r\n            /* global window: false */\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                animation: {\r\n                    duration: 1000,\r\n                    easing: 'easeOutQuart',\r\n                    onProgress: helpers.noop,\r\n                    onComplete: helpers.noop\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Animation = Element.extend({\r\n                    chart: null, // the animation associated chart instance\r\n                    currentStep: 0, // the current animation step\r\n                    numSteps: 60, // default number of steps\r\n                    easing: '', // the easing to use for this animation\r\n                    render: null, // render function used by the animation service\r\n\r\n                    onAnimationProgress: null, // user specified callback to fire on each step of the animation\r\n                    onAnimationComplete: null, // user specified callback to fire when the animation finishes\r\n                });\r\n\r\n                Chart.animationService = {\r\n                    frameDuration: 17,\r\n                    animations: [],\r\n                    dropFrames: 0,\r\n                    request: null,\r\n\r\n                    /**\r\n                     * @param {Chart} chart - The chart to animate.\r\n                     * @param {Chart.Animation} animation - The animation that we will animate.\r\n                     * @param {Number} duration - The animation duration in ms.\r\n                     * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\r\n                     */\r\n                    addAnimation: function(chart, animation, duration, lazy) {\r\n                        var animations = this.animations;\r\n                        var i, ilen;\r\n\r\n                        animation.chart = chart;\r\n\r\n                        if (!lazy) {\r\n                            chart.animating = true;\r\n                        }\r\n\r\n                        for (i = 0, ilen = animations.length; i < ilen; ++i) {\r\n                            if (animations[i].chart === chart) {\r\n                                animations[i] = animation;\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        animations.push(animation);\r\n\r\n                        // If there are no animations queued, manually kickstart a digest, for lack of a better word\r\n                        if (animations.length === 1) {\r\n                            this.requestAnimationFrame();\r\n                        }\r\n                    },\r\n\r\n                    cancelAnimation: function(chart) {\r\n                        var index = helpers.findIndex(this.animations, function(animation) {\r\n                            return animation.chart === chart;\r\n                        });\r\n\r\n                        if (index !== -1) {\r\n                            this.animations.splice(index, 1);\r\n                            chart.animating = false;\r\n                        }\r\n                    },\r\n\r\n                    requestAnimationFrame: function() {\r\n                        var me = this;\r\n                        if (me.request === null) {\r\n                            // Skip animation frame requests until the active one is executed.\r\n                            // This can happen when processing mouse events, e.g. 'mousemove'\r\n                            // and 'mouseout' events will trigger multiple renders.\r\n                            me.request = helpers.requestAnimFrame.call(window, function() {\r\n                                me.request = null;\r\n                                me.startDigest();\r\n                            });\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    startDigest: function() {\r\n                        var me = this;\r\n                        var startTime = Date.now();\r\n                        var framesToDrop = 0;\r\n\r\n                        if (me.dropFrames > 1) {\r\n                            framesToDrop = Math.floor(me.dropFrames);\r\n                            me.dropFrames = me.dropFrames % 1;\r\n                        }\r\n\r\n                        me.advance(1 + framesToDrop);\r\n\r\n                        var endTime = Date.now();\r\n\r\n                        me.dropFrames += (endTime - startTime) / me.frameDuration;\r\n\r\n                        // Do we have more stuff to animate?\r\n                        if (me.animations.length > 0) {\r\n                            me.requestAnimationFrame();\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    advance: function(count) {\r\n                        var animations = this.animations;\r\n                        var animation, chart;\r\n                        var i = 0;\r\n\r\n                        while (i < animations.length) {\r\n                            animation = animations[i];\r\n                            chart = animation.chart;\r\n\r\n                            animation.currentStep = (animation.currentStep || 0) + count;\r\n                            animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\r\n\r\n                            helpers.callback(animation.render, [chart, animation], chart);\r\n                            helpers.callback(animation.onAnimationProgress, [animation], chart);\r\n\r\n                            if (animation.currentStep >= animation.numSteps) {\r\n                                helpers.callback(animation.onAnimationComplete, [animation], chart);\r\n                                chart.animating = false;\r\n                                animations.splice(i, 1);\r\n                            } else {\r\n                                ++i;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.Animation instead\r\n                 * @prop Chart.Animation#animationObject\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 */\r\n                Object.defineProperty(Chart.Animation.prototype, 'animationObject', {\r\n                    get: function() {\r\n                        return this;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.Animation#chart instead\r\n                 * @prop Chart.Animation#chartInstance\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 */\r\n                Object.defineProperty(Chart.Animation.prototype, 'chartInstance', {\r\n                    get: function() {\r\n                        return this.chart;\r\n                    },\r\n                    set: function(value) {\r\n                        this.chart = value;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 14: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var Interaction = require(19);\r\n            var layouts = require(21);\r\n            var platform = require(39);\r\n            var plugins = require(22);\r\n\r\n            module.exports = function(Chart) {\r\n                // Create a dictionary of chart types, to allow for extension of existing types\r\n                Chart.types = {};\r\n\r\n                // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\r\n                // Destroy method on the chart will remove the instance of the chart from this reference.\r\n                Chart.instances = {};\r\n\r\n                // Controllers available for dataset visualization eg. bar, line, slice, etc.\r\n                Chart.controllers = {};\r\n\r\n                /**\r\n                 * Initializes the given config with global and chart default values.\r\n                 */\r\n                function initConfig(config) {\r\n                    config = config || {};\r\n\r\n                    // Do NOT use configMerge() for the data object because this method merges arrays\r\n                    // and so would change references to labels and datasets, preventing data updates.\r\n                    var data = config.data = config.data || {};\r\n                    data.datasets = data.datasets || [];\r\n                    data.labels = data.labels || [];\r\n\r\n                    config.options = helpers.configMerge(\r\n                        defaults.global,\r\n                        defaults[config.type],\r\n                        config.options || {});\r\n\r\n                    return config;\r\n                }\r\n\r\n                /**\r\n                 * Updates the config of the chart\r\n                 * @param chart {Chart} chart to update the options for\r\n                 */\r\n                function updateConfig(chart) {\r\n                    var newOptions = chart.options;\r\n\r\n                    helpers.each(chart.scales, function(scale) {\r\n                        layouts.removeBox(chart, scale);\r\n                    });\r\n\r\n                    newOptions = helpers.configMerge(\r\n                        Chart.defaults.global,\r\n                        Chart.defaults[chart.config.type],\r\n                        newOptions);\r\n\r\n                    chart.options = chart.config.options = newOptions;\r\n                    chart.ensureScalesHaveIDs();\r\n                    chart.buildOrUpdateScales();\r\n                    // Tooltip\r\n                    chart.tooltip._options = newOptions.tooltips;\r\n                    chart.tooltip.initialize();\r\n                }\r\n\r\n                function positionIsHorizontal(position) {\r\n                    return position === 'top' || position === 'bottom';\r\n                }\r\n\r\n                helpers.extend(Chart.prototype, /** @lends Chart */ {\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    construct: function(item, config) {\r\n                        var me = this;\r\n\r\n                        config = initConfig(config);\r\n\r\n                        var context = platform.acquireContext(item, config);\r\n                        var canvas = context && context.canvas;\r\n                        var height = canvas && canvas.height;\r\n                        var width = canvas && canvas.width;\r\n\r\n                        me.id = helpers.uid();\r\n                        me.ctx = context;\r\n                        me.canvas = canvas;\r\n                        me.config = config;\r\n                        me.width = width;\r\n                        me.height = height;\r\n                        me.aspectRatio = height ? width / height : null;\r\n                        me.options = config.options;\r\n                        me._bufferedRender = false;\r\n\r\n                        /**\r\n                         * Provided for backward compatibility, Chart and Chart.Controller have been merged,\r\n                         * the \"instance\" still need to be defined since it might be called from plugins.\r\n                         * @prop Chart#chart\r\n                         * @deprecated since version 2.6.0\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        me.chart = me;\r\n                        me.controller = me; // chart.chart.controller #inception\r\n\r\n                        // Add the chart instance to the global namespace\r\n                        Chart.instances[me.id] = me;\r\n\r\n                        // Define alias to the config data: `chart.data === chart.config.data`\r\n                        Object.defineProperty(me, 'data', {\r\n                            get: function() {\r\n                                return me.config.data;\r\n                            },\r\n                            set: function(value) {\r\n                                me.config.data = value;\r\n                            }\r\n                        });\r\n\r\n                        if (!context || !canvas) {\r\n                            // The given item is not a compatible context2d element, let's return before finalizing\r\n                            // the chart initialization but after setting basic chart / controller properties that\r\n                            // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\r\n                            // https://github.com/chartjs/Chart.js/issues/2807\r\n                            console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n                            return;\r\n                        }\r\n\r\n                        me.initialize();\r\n                        me.update();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    initialize: function() {\r\n                        var me = this;\r\n\r\n                        // Before init plugin notification\r\n                        plugins.notify(me, 'beforeInit');\r\n\r\n                        helpers.retinaScale(me, me.options.devicePixelRatio);\r\n\r\n                        me.bindEvents();\r\n\r\n                        if (me.options.responsive) {\r\n                            // Initial resize before chart draws (must be silent to preserve initial animations).\r\n                            me.resize(true);\r\n                        }\r\n\r\n                        // Make sure scales have IDs and are built before we build any controllers.\r\n                        me.ensureScalesHaveIDs();\r\n                        me.buildOrUpdateScales();\r\n                        me.initToolTip();\r\n\r\n                        // After init plugin notification\r\n                        plugins.notify(me, 'afterInit');\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    clear: function() {\r\n                        helpers.canvas.clear(this);\r\n                        return this;\r\n                    },\r\n\r\n                    stop: function() {\r\n                        // Stops any current animation loop occurring\r\n                        Chart.animationService.cancelAnimation(this);\r\n                        return this;\r\n                    },\r\n\r\n                    resize: function(silent) {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        var canvas = me.canvas;\r\n                        var aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\r\n\r\n                        // the canvas render width and height will be casted to integers so make sure that\r\n                        // the canvas display style uses the same integer values to avoid blurring effect.\r\n\r\n                        // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\r\n                        var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\r\n                        var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\r\n\r\n                        if (me.width === newWidth && me.height === newHeight) {\r\n                            return;\r\n                        }\r\n\r\n                        canvas.width = me.width = newWidth;\r\n                        canvas.height = me.height = newHeight;\r\n                        canvas.style.width = newWidth + 'px';\r\n                        canvas.style.height = newHeight + 'px';\r\n\r\n                        helpers.retinaScale(me, options.devicePixelRatio);\r\n\r\n                        if (!silent) {\r\n                            // Notify any plugins about the resize\r\n                            var newSize = { width: newWidth, height: newHeight };\r\n                            plugins.notify(me, 'resize', [newSize]);\r\n\r\n                            // Notify of resize\r\n                            if (me.options.onResize) {\r\n                                me.options.onResize(me, newSize);\r\n                            }\r\n\r\n                            me.stop();\r\n                            me.update(me.options.responsiveAnimationDuration);\r\n                        }\r\n                    },\r\n\r\n                    ensureScalesHaveIDs: function() {\r\n                        var options = this.options;\r\n                        var scalesOptions = options.scales || {};\r\n                        var scaleOptions = options.scale;\r\n\r\n                        helpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\r\n                            xAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\r\n                        });\r\n\r\n                        helpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\r\n                            yAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\r\n                        });\r\n\r\n                        if (scaleOptions) {\r\n                            scaleOptions.id = scaleOptions.id || 'scale';\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Builds a map of scale ID to scale object for future lookup.\r\n                     */\r\n                    buildOrUpdateScales: function() {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        var scales = me.scales || {};\r\n                        var items = [];\r\n                        var updated = Object.keys(scales).reduce(function(obj, id) {\r\n                            obj[id] = false;\r\n                            return obj;\r\n                        }, {});\r\n\r\n                        if (options.scales) {\r\n                            items = items.concat(\r\n                                (options.scales.xAxes || []).map(function(xAxisOptions) {\r\n                                    return { options: xAxisOptions, dtype: 'category', dposition: 'bottom' };\r\n                                }),\r\n                                (options.scales.yAxes || []).map(function(yAxisOptions) {\r\n                                    return { options: yAxisOptions, dtype: 'linear', dposition: 'left' };\r\n                                })\r\n                            );\r\n                        }\r\n\r\n                        if (options.scale) {\r\n                            items.push({\r\n                                options: options.scale,\r\n                                dtype: 'radialLinear',\r\n                                isDefault: true,\r\n                                dposition: 'chartArea'\r\n                            });\r\n                        }\r\n\r\n                        helpers.each(items, function(item) {\r\n                            var scaleOptions = item.options;\r\n                            var id = scaleOptions.id;\r\n                            var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\r\n\r\n                            if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\r\n                                scaleOptions.position = item.dposition;\r\n                            }\r\n\r\n                            updated[id] = true;\r\n                            var scale = null;\r\n                            if (id in scales && scales[id].type === scaleType) {\r\n                                scale = scales[id];\r\n                                scale.options = scaleOptions;\r\n                                scale.ctx = me.ctx;\r\n                                scale.chart = me;\r\n                            } else {\r\n                                var scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\r\n                                if (!scaleClass) {\r\n                                    return;\r\n                                }\r\n                                scale = new scaleClass({\r\n                                    id: id,\r\n                                    type: scaleType,\r\n                                    options: scaleOptions,\r\n                                    ctx: me.ctx,\r\n                                    chart: me\r\n                                });\r\n                                scales[scale.id] = scale;\r\n                            }\r\n\r\n                            scale.mergeTicksOptions();\r\n\r\n                            // TODO(SB): I think we should be able to remove this custom case (options.scale)\r\n                            // and consider it as a regular scale part of the \"scales\"\" map only! This would\r\n                            // make the logic easier and remove some useless? custom code.\r\n                            if (item.isDefault) {\r\n                                me.scale = scale;\r\n                            }\r\n                        });\r\n                        // clear up discarded scales\r\n                        helpers.each(updated, function(hasUpdated, id) {\r\n                            if (!hasUpdated) {\r\n                                delete scales[id];\r\n                            }\r\n                        });\r\n\r\n                        me.scales = scales;\r\n\r\n                        Chart.scaleService.addScalesToLayout(this);\r\n                    },\r\n\r\n                    buildOrUpdateControllers: function() {\r\n                        var me = this;\r\n                        var types = [];\r\n                        var newControllers = [];\r\n\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            var meta = me.getDatasetMeta(datasetIndex);\r\n                            var type = dataset.type || me.config.type;\r\n\r\n                            if (meta.type && meta.type !== type) {\r\n                                me.destroyDatasetMeta(datasetIndex);\r\n                                meta = me.getDatasetMeta(datasetIndex);\r\n                            }\r\n                            meta.type = type;\r\n\r\n                            types.push(meta.type);\r\n\r\n                            if (meta.controller) {\r\n                                meta.controller.updateIndex(datasetIndex);\r\n                                meta.controller.linkScales();\r\n                            } else {\r\n                                var ControllerClass = Chart.controllers[meta.type];\r\n                                if (ControllerClass === undefined) {\r\n                                    throw new Error('\"' + meta.type + '\" is not a chart type.');\r\n                                }\r\n\r\n                                meta.controller = new ControllerClass(me, datasetIndex);\r\n                                newControllers.push(meta.controller);\r\n                            }\r\n                        }, me);\r\n\r\n                        return newControllers;\r\n                    },\r\n\r\n                    /**\r\n                     * Reset the elements of all datasets\r\n                     * @private\r\n                     */\r\n                    resetElements: function() {\r\n                        var me = this;\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            me.getDatasetMeta(datasetIndex).controller.reset();\r\n                        }, me);\r\n                    },\r\n\r\n                    /**\r\n                    * Resets the chart back to it's state before the initial animation\r\n                    */\r\n                    reset: function() {\r\n                        this.resetElements();\r\n                        this.tooltip.initialize();\r\n                    },\r\n\r\n                    update: function(config) {\r\n                        var me = this;\r\n\r\n                        if (!config || typeof config !== 'object') {\r\n                            // backwards compatibility\r\n                            config = {\r\n                                duration: config,\r\n                                lazy: arguments[1]\r\n                            };\r\n                        }\r\n\r\n                        updateConfig(me);\r\n\r\n                        // plugins options references might have change, let's invalidate the cache\r\n                        // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\r\n                        plugins._invalidate(me);\r\n\r\n                        if (plugins.notify(me, 'beforeUpdate') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // In case the entire data object changed\r\n                        me.tooltip._data = me.data;\r\n\r\n                        // Make sure dataset controllers are updated and new controllers are reset\r\n                        var newControllers = me.buildOrUpdateControllers();\r\n\r\n                        // Make sure all dataset controllers have correct meta data counts\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\r\n                        }, me);\r\n\r\n                        me.updateLayout();\r\n\r\n                        // Can only reset the new controllers after the scales have been updated\r\n                        if (me.options.animation && me.options.animation.duration) {\r\n                            helpers.each(newControllers, function(controller) {\r\n                                controller.reset();\r\n                            });\r\n                        }\r\n\r\n                        me.updateDatasets();\r\n\r\n                        // Need to reset tooltip in case it is displayed with elements that are removed\r\n                        // after update.\r\n                        me.tooltip.initialize();\r\n\r\n                        // Last active contains items that were previously in the tooltip.\r\n                        // When we reset the tooltip, we need to clear it\r\n                        me.lastActive = [];\r\n\r\n                        // Do this before render so that any plugins that need final scale updates can use it\r\n                        plugins.notify(me, 'afterUpdate');\r\n\r\n                        if (me._bufferedRender) {\r\n                            me._bufferedRequest = {\r\n                                duration: config.duration,\r\n                                easing: config.easing,\r\n                                lazy: config.lazy\r\n                            };\r\n                        } else {\r\n                            me.render(config);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\r\n                     * hook, in which case, plugins will not be called on `afterLayout`.\r\n                     * @private\r\n                     */\r\n                    updateLayout: function() {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeLayout') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        layouts.update(this, this.width, this.height);\r\n\r\n                        /**\r\n                         * Provided for backward compatibility, use `afterLayout` instead.\r\n                         * @method IPlugin#afterScaleUpdate\r\n                         * @deprecated since version 2.5.0\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        plugins.notify(me, 'afterScaleUpdate');\r\n                        plugins.notify(me, 'afterLayout');\r\n                    },\r\n\r\n                    /**\r\n                     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\r\n                     * @private\r\n                     */\r\n                    updateDatasets: function() {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                            me.updateDataset(i);\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterDatasetsUpdate');\r\n                    },\r\n\r\n                    /**\r\n                     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\r\n                     * @private\r\n                     */\r\n                    updateDataset: function(index) {\r\n                        var me = this;\r\n                        var meta = me.getDatasetMeta(index);\r\n                        var args = {\r\n                            meta: meta,\r\n                            index: index\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        meta.controller.update();\r\n\r\n                        plugins.notify(me, 'afterDatasetUpdate', [args]);\r\n                    },\r\n\r\n                    render: function(config) {\r\n                        var me = this;\r\n\r\n                        if (!config || typeof config !== 'object') {\r\n                            // backwards compatibility\r\n                            config = {\r\n                                duration: config,\r\n                                lazy: arguments[1]\r\n                            };\r\n                        }\r\n\r\n                        var duration = config.duration;\r\n                        var lazy = config.lazy;\r\n\r\n                        if (plugins.notify(me, 'beforeRender') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        var animationOptions = me.options.animation;\r\n                        var onComplete = function(animation) {\r\n                            plugins.notify(me, 'afterRender');\r\n                            helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\r\n                        };\r\n\r\n                        if (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\r\n                            var animation = new Chart.Animation({\r\n                                numSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\r\n                                easing: config.easing || animationOptions.easing,\r\n\r\n                                render: function(chart, animationObject) {\r\n                                    var easingFunction = helpers.easing.effects[animationObject.easing];\r\n                                    var currentStep = animationObject.currentStep;\r\n                                    var stepDecimal = currentStep / animationObject.numSteps;\r\n\r\n                                    chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\r\n                                },\r\n\r\n                                onAnimationProgress: animationOptions.onProgress,\r\n                                onAnimationComplete: onComplete\r\n                            });\r\n\r\n                            Chart.animationService.addAnimation(me, animation, duration, lazy);\r\n                        } else {\r\n                            me.draw();\r\n\r\n                            // See https://github.com/chartjs/Chart.js/issues/3781\r\n                            onComplete(new Chart.Animation({ numSteps: 0, chart: me }));\r\n                        }\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    draw: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        me.clear();\r\n\r\n                        if (helpers.isNullOrUndef(easingValue)) {\r\n                            easingValue = 1;\r\n                        }\r\n\r\n                        me.transition(easingValue);\r\n\r\n                        if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Draw all the scales\r\n                        helpers.each(me.boxes, function(box) {\r\n                            box.draw(me.chartArea);\r\n                        }, me);\r\n\r\n                        if (me.scale) {\r\n                            me.scale.draw();\r\n                        }\r\n\r\n                        me.drawDatasets(easingValue);\r\n                        me._drawTooltip(easingValue);\r\n\r\n                        plugins.notify(me, 'afterDraw', [easingValue]);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    transition: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\r\n                            if (me.isDatasetVisible(i)) {\r\n                                me.getDatasetMeta(i).controller.transition(easingValue);\r\n                            }\r\n                        }\r\n\r\n                        me.tooltip.transition(easingValue);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\r\n                     * @private\r\n                     */\r\n                    drawDatasets: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Draw datasets reversed to support proper line stacking\r\n                        for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\r\n                            if (me.isDatasetVisible(i)) {\r\n                                me.drawDataset(i, easingValue);\r\n                            }\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\r\n                     * @private\r\n                     */\r\n                    drawDataset: function(index, easingValue) {\r\n                        var me = this;\r\n                        var meta = me.getDatasetMeta(index);\r\n                        var args = {\r\n                            meta: meta,\r\n                            index: index,\r\n                            easingValue: easingValue\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        meta.controller.draw(easingValue);\r\n\r\n                        plugins.notify(me, 'afterDatasetDraw', [args]);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\r\n                     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\r\n                     * @private\r\n                     */\r\n                    _drawTooltip: function(easingValue) {\r\n                        var me = this;\r\n                        var tooltip = me.tooltip;\r\n                        var args = {\r\n                            tooltip: tooltip,\r\n                            easingValue: easingValue\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        tooltip.draw();\r\n\r\n                        plugins.notify(me, 'afterTooltipDraw', [args]);\r\n                    },\r\n\r\n                    // Get the single element that was clicked on\r\n                    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\r\n                    getElementAtEvent: function(e) {\r\n                        return Interaction.modes.single(this, e);\r\n                    },\r\n\r\n                    getElementsAtEvent: function(e) {\r\n                        return Interaction.modes.label(this, e, { intersect: true });\r\n                    },\r\n\r\n                    getElementsAtXAxis: function(e) {\r\n                        return Interaction.modes['x-axis'](this, e, { intersect: true });\r\n                    },\r\n\r\n                    getElementsAtEventForMode: function(e, mode, options) {\r\n                        var method = Interaction.modes[mode];\r\n                        if (typeof method === 'function') {\r\n                            return method(this, e, options);\r\n                        }\r\n\r\n                        return [];\r\n                    },\r\n\r\n                    getDatasetAtEvent: function(e) {\r\n                        return Interaction.modes.dataset(this, e, { intersect: true });\r\n                    },\r\n\r\n                    getDatasetMeta: function(datasetIndex) {\r\n                        var me = this;\r\n                        var dataset = me.data.datasets[datasetIndex];\r\n                        if (!dataset._meta) {\r\n                            dataset._meta = {};\r\n                        }\r\n\r\n                        var meta = dataset._meta[me.id];\r\n                        if (!meta) {\r\n                            meta = dataset._meta[me.id] = {\r\n                                type: null,\r\n                                data: [],\r\n                                dataset: null,\r\n                                controller: null,\r\n                                hidden: null,\t\t\t// See isDatasetVisible() comment\r\n                                xAxisID: null,\r\n                                yAxisID: null\r\n                            };\r\n                        }\r\n\r\n                        return meta;\r\n                    },\r\n\r\n                    getVisibleDatasetCount: function() {\r\n                        var count = 0;\r\n                        for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n                            if (this.isDatasetVisible(i)) {\r\n                                count++;\r\n                            }\r\n                        }\r\n                        return count;\r\n                    },\r\n\r\n                    isDatasetVisible: function(datasetIndex) {\r\n                        var meta = this.getDatasetMeta(datasetIndex);\r\n\r\n                        // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\r\n                        // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\r\n                        return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\r\n                    },\r\n\r\n                    generateLegend: function() {\r\n                        return this.options.legendCallback(this);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    destroyDatasetMeta: function(datasetIndex) {\r\n                        var id = this.id;\r\n                        var dataset = this.data.datasets[datasetIndex];\r\n                        var meta = dataset._meta && dataset._meta[id];\r\n\r\n                        if (meta) {\r\n                            meta.controller.destroy();\r\n                            delete dataset._meta[id];\r\n                        }\r\n                    },\r\n\r\n                    destroy: function() {\r\n                        var me = this;\r\n                        var canvas = me.canvas;\r\n                        var i, ilen;\r\n\r\n                        me.stop();\r\n\r\n                        // dataset controllers need to cleanup associated data\r\n                        for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                            me.destroyDatasetMeta(i);\r\n                        }\r\n\r\n                        if (canvas) {\r\n                            me.unbindEvents();\r\n                            helpers.canvas.clear(me);\r\n                            platform.releaseContext(me.ctx);\r\n                            me.canvas = null;\r\n                            me.ctx = null;\r\n                        }\r\n\r\n                        plugins.notify(me, 'destroy');\r\n\r\n                        delete Chart.instances[me.id];\r\n                    },\r\n\r\n                    toBase64Image: function() {\r\n                        return this.canvas.toDataURL.apply(this.canvas, arguments);\r\n                    },\r\n\r\n                    initToolTip: function() {\r\n                        var me = this;\r\n                        me.tooltip = new Chart.Tooltip({\r\n                            _chart: me,\r\n                            _chartInstance: me, // deprecated, backward compatibility\r\n                            _data: me.data,\r\n                            _options: me.options.tooltips\r\n                        }, me);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    bindEvents: function() {\r\n                        var me = this;\r\n                        var listeners = me._listeners = {};\r\n                        var listener = function() {\r\n                            me.eventHandler.apply(me, arguments);\r\n                        };\r\n\r\n                        helpers.each(me.options.events, function(type) {\r\n                            platform.addEventListener(me, type, listener);\r\n                            listeners[type] = listener;\r\n                        });\r\n\r\n                        // Elements used to detect size change should not be injected for non responsive charts.\r\n                        // See https://github.com/chartjs/Chart.js/issues/2210\r\n                        if (me.options.responsive) {\r\n                            listener = function() {\r\n                                me.resize();\r\n                            };\r\n\r\n                            platform.addEventListener(me, 'resize', listener);\r\n                            listeners.resize = listener;\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    unbindEvents: function() {\r\n                        var me = this;\r\n                        var listeners = me._listeners;\r\n                        if (!listeners) {\r\n                            return;\r\n                        }\r\n\r\n                        delete me._listeners;\r\n                        helpers.each(listeners, function(listener, type) {\r\n                            platform.removeEventListener(me, type, listener);\r\n                        });\r\n                    },\r\n\r\n                    updateHoverStyle: function(elements, mode, enabled) {\r\n                        var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\r\n                        var element, i, ilen;\r\n\r\n                        for (i = 0, ilen = elements.length; i < ilen; ++i) {\r\n                            element = elements[i];\r\n                            if (element) {\r\n                                this.getDatasetMeta(element._datasetIndex).controller[method](element);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    eventHandler: function(e) {\r\n                        var me = this;\r\n                        var tooltip = me.tooltip;\r\n\r\n                        if (plugins.notify(me, 'beforeEvent', [e]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Buffer any update calls so that renders do not occur\r\n                        me._bufferedRender = true;\r\n                        me._bufferedRequest = null;\r\n\r\n                        var changed = me.handleEvent(e);\r\n                        // for smooth tooltip animations issue #4989\r\n                        // the tooltip should be the source of change\r\n                        // Animation check workaround:\r\n                        // tooltip._start will be null when tooltip isn't animating\r\n                        if (tooltip) {\r\n                            changed = tooltip._start\r\n                                ? tooltip.handleEvent(e)\r\n                                : changed | tooltip.handleEvent(e);\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterEvent', [e]);\r\n\r\n                        var bufferedRequest = me._bufferedRequest;\r\n                        if (bufferedRequest) {\r\n                            // If we have an update that was triggered, we need to do a normal render\r\n                            me.render(bufferedRequest);\r\n                        } else if (changed && !me.animating) {\r\n                            // If entering, leaving, or changing elements, animate the change via pivot\r\n                            me.stop();\r\n\r\n                            // We only need to render at this point. Updating will cause scales to be\r\n                            // recomputed generating flicker & using more memory than necessary.\r\n                            me.render(me.options.hover.animationDuration, true);\r\n                        }\r\n\r\n                        me._bufferedRender = false;\r\n                        me._bufferedRequest = null;\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    /**\r\n                     * Handle an event\r\n                     * @private\r\n                     * @param {IEvent} event the event to handle\r\n                     * @return {Boolean} true if the chart needs to re-render\r\n                     */\r\n                    handleEvent: function(e) {\r\n                        var me = this;\r\n                        var options = me.options || {};\r\n                        var hoverOptions = options.hover;\r\n                        var changed = false;\r\n\r\n                        me.lastActive = me.lastActive || [];\r\n\r\n                        // Find Active Elements for hover and tooltips\r\n                        if (e.type === 'mouseout') {\r\n                            me.active = [];\r\n                        } else {\r\n                            me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\r\n                        }\r\n\r\n                        // Invoke onHover hook\r\n                        // Need to call with native event here to not break backwards compatibility\r\n                        helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\r\n\r\n                        if (e.type === 'mouseup' || e.type === 'click') {\r\n                            if (options.onClick) {\r\n                                // Use e.native here for backwards compatibility\r\n                                options.onClick.call(me, e.native, me.active);\r\n                            }\r\n                        }\r\n\r\n                        // Remove styling for last active (even if it may still be active)\r\n                        if (me.lastActive.length) {\r\n                            me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\r\n                        }\r\n\r\n                        // Built in hover styling\r\n                        if (me.active.length && hoverOptions.mode) {\r\n                            me.updateHoverStyle(me.active, hoverOptions.mode, true);\r\n                        }\r\n\r\n                        changed = !helpers.arrayEquals(me.active, me.lastActive);\r\n\r\n                        // Remember Last Actives\r\n                        me.lastActive = me.active;\r\n\r\n                        return changed;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart instead.\r\n                 * @class Chart.Controller\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 * @private\r\n                 */\r\n                Chart.Controller = Chart;\r\n            };\r\n        }, { \"16\": 16, \"19\": 19, \"21\": 21, \"22\": 22, \"36\": 36, \"39\": 39 }], 15: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            module.exports = function(Chart) {\r\n                var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\r\n\r\n                /**\r\n                 * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\r\n                 * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\r\n                 * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\r\n                 */\r\n                function listenArrayEvents(array, listener) {\r\n                    if (array._chartjs) {\r\n                        array._chartjs.listeners.push(listener);\r\n                        return;\r\n                    }\r\n\r\n                    Object.defineProperty(array, '_chartjs', {\r\n                        configurable: true,\r\n                        enumerable: false,\r\n                        value: {\r\n                            listeners: [listener]\r\n                        }\r\n                    });\r\n\r\n                    arrayEvents.forEach(function(key) {\r\n                        var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\r\n                        var base = array[key];\r\n\r\n                        Object.defineProperty(array, key, {\r\n                            configurable: true,\r\n                            enumerable: false,\r\n                            value: function() {\r\n                                var args = Array.prototype.slice.call(arguments);\r\n                                var res = base.apply(this, args);\r\n\r\n                                helpers.each(array._chartjs.listeners, function(object) {\r\n                                    if (typeof object[method] === 'function') {\r\n                                        object[method].apply(object, args);\r\n                                    }\r\n                                });\r\n\r\n                                return res;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Removes the given array event listener and cleanup extra attached properties (such as\r\n                 * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\r\n                 */\r\n                function unlistenArrayEvents(array, listener) {\r\n                    var stub = array._chartjs;\r\n                    if (!stub) {\r\n                        return;\r\n                    }\r\n\r\n                    var listeners = stub.listeners;\r\n                    var index = listeners.indexOf(listener);\r\n                    if (index !== -1) {\r\n                        listeners.splice(index, 1);\r\n                    }\r\n\r\n                    if (listeners.length > 0) {\r\n                        return;\r\n                    }\r\n\r\n                    arrayEvents.forEach(function(key) {\r\n                        delete array[key];\r\n                    });\r\n\r\n                    delete array._chartjs;\r\n                }\r\n\r\n                // Base class for all dataset controllers (line, bar, etc)\r\n                Chart.DatasetController = function(chart, datasetIndex) {\r\n                    this.initialize(chart, datasetIndex);\r\n                };\r\n\r\n                helpers.extend(Chart.DatasetController.prototype, {\r\n                    /**\r\n                     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\r\n                     * @type {Chart.core.element}\r\n                     */\r\n                    datasetElementType: null,\r\n\r\n                    /**\r\n                     * Element type used to generate a meta data (e.g. Chart.element.Point).\r\n                     * @type {Chart.core.element}\r\n                     */\r\n                    dataElementType: null,\r\n\r\n                    initialize: function(chart, datasetIndex) {\r\n                        var me = this;\r\n                        me.chart = chart;\r\n                        me.index = datasetIndex;\r\n                        me.linkScales();\r\n                        me.addElements();\r\n                    },\r\n\r\n                    updateIndex: function(datasetIndex) {\r\n                        this.index = datasetIndex;\r\n                    },\r\n\r\n                    linkScales: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var dataset = me.getDataset();\r\n\r\n                        if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\r\n                            meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\r\n                        }\r\n                        if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\r\n                            meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\r\n                        }\r\n                    },\r\n\r\n                    getDataset: function() {\r\n                        return this.chart.data.datasets[this.index];\r\n                    },\r\n\r\n                    getMeta: function() {\r\n                        return this.chart.getDatasetMeta(this.index);\r\n                    },\r\n\r\n                    getScaleForId: function(scaleID) {\r\n                        return this.chart.scales[scaleID];\r\n                    },\r\n\r\n                    reset: function() {\r\n                        this.update(true);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    destroy: function() {\r\n                        if (this._data) {\r\n                            unlistenArrayEvents(this._data, this);\r\n                        }\r\n                    },\r\n\r\n                    createMetaDataset: function() {\r\n                        var me = this;\r\n                        var type = me.datasetElementType;\r\n                        return type && new type({\r\n                            _chart: me.chart,\r\n                            _datasetIndex: me.index\r\n                        });\r\n                    },\r\n\r\n                    createMetaData: function(index) {\r\n                        var me = this;\r\n                        var type = me.dataElementType;\r\n                        return type && new type({\r\n                            _chart: me.chart,\r\n                            _datasetIndex: me.index,\r\n                            _index: index\r\n                        });\r\n                    },\r\n\r\n                    addElements: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var data = me.getDataset().data || [];\r\n                        var metaData = meta.data;\r\n                        var i, ilen;\r\n\r\n                        for (i = 0, ilen = data.length; i < ilen; ++i) {\r\n                            metaData[i] = metaData[i] || me.createMetaData(i);\r\n                        }\r\n\r\n                        meta.dataset = meta.dataset || me.createMetaDataset();\r\n                    },\r\n\r\n                    addElementAndReset: function(index) {\r\n                        var element = this.createMetaData(index);\r\n                        this.getMeta().data.splice(index, 0, element);\r\n                        this.updateElement(element, index, true);\r\n                    },\r\n\r\n                    buildOrUpdateElements: function() {\r\n                        var me = this;\r\n                        var dataset = me.getDataset();\r\n                        var data = dataset.data || (dataset.data = []);\r\n\r\n                        // In order to correctly handle data addition/deletion animation (an thus simulate\r\n                        // real-time charts), we need to monitor these data modifications and synchronize\r\n                        // the internal meta data accordingly.\r\n                        if (me._data !== data) {\r\n                            if (me._data) {\r\n                                // This case happens when the user replaced the data array instance.\r\n                                unlistenArrayEvents(me._data, me);\r\n                            }\r\n\r\n                            listenArrayEvents(data, me);\r\n                            me._data = data;\r\n                        }\r\n\r\n                        // Re-sync meta data in case the user replaced the data array or if we missed\r\n                        // any updates and so make sure that we handle number of datapoints changing.\r\n                        me.resyncElements();\r\n                    },\r\n\r\n                    update: helpers.noop,\r\n\r\n                    transition: function(easingValue) {\r\n                        var meta = this.getMeta();\r\n                        var elements = meta.data || [];\r\n                        var ilen = elements.length;\r\n                        var i = 0;\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            elements[i].transition(easingValue);\r\n                        }\r\n\r\n                        if (meta.dataset) {\r\n                            meta.dataset.transition(easingValue);\r\n                        }\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var meta = this.getMeta();\r\n                        var elements = meta.data || [];\r\n                        var ilen = elements.length;\r\n                        var i = 0;\r\n\r\n                        if (meta.dataset) {\r\n                            meta.dataset.draw();\r\n                        }\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            elements[i].draw();\r\n                        }\r\n                    },\r\n\r\n                    removeHoverStyle: function(element, elementOpts) {\r\n                        var dataset = this.chart.data.datasets[element._datasetIndex];\r\n                        var index = element._index;\r\n                        var custom = element.custom || {};\r\n                        var valueOrDefault = helpers.valueAtIndexOrDefault;\r\n                        var model = element._model;\r\n\r\n                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\r\n                        model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\r\n                        model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\r\n                    },\r\n\r\n                    setHoverStyle: function(element) {\r\n                        var dataset = this.chart.data.datasets[element._datasetIndex];\r\n                        var index = element._index;\r\n                        var custom = element.custom || {};\r\n                        var valueOrDefault = helpers.valueAtIndexOrDefault;\r\n                        var getHoverColor = helpers.getHoverColor;\r\n                        var model = element._model;\r\n\r\n                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    resyncElements: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var data = me.getDataset().data;\r\n                        var numMeta = meta.data.length;\r\n                        var numData = data.length;\r\n\r\n                        if (numData < numMeta) {\r\n                            meta.data.splice(numData, numMeta - numData);\r\n                        } else if (numData > numMeta) {\r\n                            me.insertElements(numMeta, numData - numMeta);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    insertElements: function(start, count) {\r\n                        for (var i = 0; i < count; ++i) {\r\n                            this.addElementAndReset(start + i);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataPush: function() {\r\n                        this.insertElements(this.getDataset().data.length - 1, arguments.length);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataPop: function() {\r\n                        this.getMeta().data.pop();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataShift: function() {\r\n                        this.getMeta().data.shift();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataSplice: function(start, count) {\r\n                        this.getMeta().data.splice(start, count);\r\n                        this.insertElements(start, arguments.length - 2);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataUnshift: function() {\r\n                        this.insertElements(0, arguments.length);\r\n                    }\r\n                });\r\n\r\n                Chart.DatasetController.extend = helpers.inherits;\r\n            };\r\n        }, { \"36\": 36 }], 16: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            module.exports = {\r\n                /**\r\n                 * @private\r\n                 */\r\n                _set: function(scope, values) {\r\n                    return helpers.merge(this[scope] || (this[scope] = {}), values);\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 17: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var color = require(2);\r\n            var helpers = require(36);\r\n\r\n            function interpolate(start, view, model, ease) {\r\n                var keys = Object.keys(model);\r\n                var i, ilen, key, actual, origin, target, type, c0, c1;\r\n\r\n                for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n                    key = keys[i];\r\n\r\n                    target = model[key];\r\n\r\n                    // if a value is added to the model after pivot() has been called, the view\r\n                    // doesn't contain it, so let's initialize the view to the target value.\r\n                    if (!view.hasOwnProperty(key)) {\r\n                        view[key] = target;\r\n                    }\r\n\r\n                    actual = view[key];\r\n\r\n                    if (actual === target || key[0] === '_') {\r\n                        continue;\r\n                    }\r\n\r\n                    if (!start.hasOwnProperty(key)) {\r\n                        start[key] = actual;\r\n                    }\r\n\r\n                    origin = start[key];\r\n\r\n                    type = typeof target;\r\n\r\n                    if (type === typeof origin) {\r\n                        if (type === 'string') {\r\n                            c0 = color(origin);\r\n                            if (c0.valid) {\r\n                                c1 = color(target);\r\n                                if (c1.valid) {\r\n                                    view[key] = c1.mix(c0, ease).rgbString();\r\n                                    continue;\r\n                                }\r\n                            }\r\n                        } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\r\n                            view[key] = origin + (target - origin) * ease;\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    view[key] = target;\r\n                }\r\n            }\r\n\r\n            var Element = function(configuration) {\r\n                helpers.extend(this, configuration);\r\n                this.initialize.apply(this, arguments);\r\n            };\r\n\r\n            helpers.extend(Element.prototype, {\r\n                initialize: function() {\r\n                    this.hidden = false;\r\n                },\r\n\r\n                pivot: function() {\r\n                    var me = this;\r\n                    if (!me._view) {\r\n                        me._view = helpers.clone(me._model);\r\n                    }\r\n                    me._start = {};\r\n                    return me;\r\n                },\r\n\r\n                transition: function(ease) {\r\n                    var me = this;\r\n                    var model = me._model;\r\n                    var start = me._start;\r\n                    var view = me._view;\r\n\r\n                    // No animation -> No Transition\r\n                    if (!model || ease === 1) {\r\n                        me._view = model;\r\n                        me._start = null;\r\n                        return me;\r\n                    }\r\n\r\n                    if (!view) {\r\n                        view = me._view = {};\r\n                    }\r\n\r\n                    if (!start) {\r\n                        start = me._start = {};\r\n                    }\r\n\r\n                    interpolate(start, view, model, ease);\r\n\r\n                    return me;\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    return {\r\n                        x: this._model.x,\r\n                        y: this._model.y\r\n                    };\r\n                },\r\n\r\n                hasValue: function() {\r\n                    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\r\n                }\r\n            });\r\n\r\n            Element.extend = helpers.inherits;\r\n\r\n            module.exports = Element;\r\n        }, { \"2\": 2, \"36\": 36 }], 18: [function(require, module, exports) {\r\n            /* global window: false */\r\n            /* global document: false */\r\n            'use strict';\r\n\r\n            var color = require(2);\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n\r\n            module.exports = function(Chart) {\r\n                // -- Basic js utility methods\r\n\r\n                helpers.configMerge = function(/* objects ... */) {\r\n                    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\r\n                        merger: function(key, target, source, options) {\r\n                            var tval = target[key] || {};\r\n                            var sval = source[key];\r\n\r\n                            if (key === 'scales') {\r\n                                // scale config merging is complex. Add our own function here for that\r\n                                target[key] = helpers.scaleMerge(tval, sval);\r\n                            } else if (key === 'scale') {\r\n                                // used in polar area & radar charts since there is only one scale\r\n                                target[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\r\n                            } else {\r\n                                helpers._merger(key, target, source, options);\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n\r\n                helpers.scaleMerge = function(/* objects ... */) {\r\n                    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\r\n                        merger: function(key, target, source, options) {\r\n                            if (key === 'xAxes' || key === 'yAxes') {\r\n                                var slen = source[key].length;\r\n                                var i, type, scale;\r\n\r\n                                if (!target[key]) {\r\n                                    target[key] = [];\r\n                                }\r\n\r\n                                for (i = 0; i < slen; ++i) {\r\n                                    scale = source[key][i];\r\n                                    type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\r\n\r\n                                    if (i >= target[key].length) {\r\n                                        target[key].push({});\r\n                                    }\r\n\r\n                                    if (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\r\n                                        // new/untyped scale or type changed: let's apply the new defaults\r\n                                        // then merge source scale to correctly overwrite the defaults.\r\n                                        helpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\r\n                                    } else {\r\n                                        // scales type are the same\r\n                                        helpers.merge(target[key][i], scale);\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                helpers._merger(key, target, source, options);\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n\r\n                helpers.where = function(collection, filterCallback) {\r\n                    if (helpers.isArray(collection) && Array.prototype.filter) {\r\n                        return collection.filter(filterCallback);\r\n                    }\r\n                    var filtered = [];\r\n\r\n                    helpers.each(collection, function(item) {\r\n                        if (filterCallback(item)) {\r\n                            filtered.push(item);\r\n                        }\r\n                    });\r\n\r\n                    return filtered;\r\n                };\r\n                helpers.findIndex = Array.prototype.findIndex ?\r\n                    function(array, callback, scope) {\r\n                        return array.findIndex(callback, scope);\r\n                    } :\r\n                    function(array, callback, scope) {\r\n                        scope = scope === undefined ? array : scope;\r\n                        for (var i = 0, ilen = array.length; i < ilen; ++i) {\r\n                            if (callback.call(scope, array[i], i, array)) {\r\n                                return i;\r\n                            }\r\n                        }\r\n                        return -1;\r\n                    };\r\n                helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n                    // Default to start of the array\r\n                    if (helpers.isNullOrUndef(startIndex)) {\r\n                        startIndex = -1;\r\n                    }\r\n                    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\r\n                        var currentItem = arrayToSearch[i];\r\n                        if (filterCallback(currentItem)) {\r\n                            return currentItem;\r\n                        }\r\n                    }\r\n                };\r\n                helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n                    // Default to end of the array\r\n                    if (helpers.isNullOrUndef(startIndex)) {\r\n                        startIndex = arrayToSearch.length;\r\n                    }\r\n                    for (var i = startIndex - 1; i >= 0; i--) {\r\n                        var currentItem = arrayToSearch[i];\r\n                        if (filterCallback(currentItem)) {\r\n                            return currentItem;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // -- Math methods\r\n                helpers.isNumber = function(n) {\r\n                    return !isNaN(parseFloat(n)) && isFinite(n);\r\n                };\r\n                helpers.almostEquals = function(x, y, epsilon) {\r\n                    return Math.abs(x - y) < epsilon;\r\n                };\r\n                helpers.almostWhole = function(x, epsilon) {\r\n                    var rounded = Math.round(x);\r\n                    return (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\r\n                };\r\n                helpers.max = function(array) {\r\n                    return array.reduce(function(max, value) {\r\n                        if (!isNaN(value)) {\r\n                            return Math.max(max, value);\r\n                        }\r\n                        return max;\r\n                    }, Number.NEGATIVE_INFINITY);\r\n                };\r\n                helpers.min = function(array) {\r\n                    return array.reduce(function(min, value) {\r\n                        if (!isNaN(value)) {\r\n                            return Math.min(min, value);\r\n                        }\r\n                        return min;\r\n                    }, Number.POSITIVE_INFINITY);\r\n                };\r\n                helpers.sign = Math.sign ?\r\n                    function(x) {\r\n                        return Math.sign(x);\r\n                    } :\r\n                    function(x) {\r\n                        x = +x; // convert to a number\r\n                        if (x === 0 || isNaN(x)) {\r\n                            return x;\r\n                        }\r\n                        return x > 0 ? 1 : -1;\r\n                    };\r\n                helpers.log10 = Math.log10 ?\r\n                    function(x) {\r\n                        return Math.log10(x);\r\n                    } :\r\n                    function(x) {\r\n                        var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\r\n                        // Check for whole powers of 10,\r\n                        // which due to floating point rounding error should be corrected.\r\n                        var powerOf10 = Math.round(exponent);\r\n                        var isPowerOf10 = x === Math.pow(10, powerOf10);\r\n\r\n                        return isPowerOf10 ? powerOf10 : exponent;\r\n                    };\r\n                helpers.toRadians = function(degrees) {\r\n                    return degrees * (Math.PI / 180);\r\n                };\r\n                helpers.toDegrees = function(radians) {\r\n                    return radians * (180 / Math.PI);\r\n                };\r\n                // Gets the angle from vertical upright to the point about a centre.\r\n                helpers.getAngleFromPoint = function(centrePoint, anglePoint) {\r\n                    var distanceFromXCenter = anglePoint.x - centrePoint.x;\r\n                    var distanceFromYCenter = anglePoint.y - centrePoint.y;\r\n                    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n\r\n                    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n\r\n                    if (angle < (-0.5 * Math.PI)) {\r\n                        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\r\n                    }\r\n\r\n                    return {\r\n                        angle: angle,\r\n                        distance: radialDistanceFromCenter\r\n                    };\r\n                };\r\n                helpers.distanceBetweenPoints = function(pt1, pt2) {\r\n                    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\r\n                };\r\n                helpers.aliasPixel = function(pixelWidth) {\r\n                    return (pixelWidth % 2 === 0) ? 0 : 0.5;\r\n                };\r\n                helpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\r\n                    // Props to Rob Spencer at scaled innovation for his post on splining between points\r\n                    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\r\n\r\n                    // This function must also respect \"skipped\" points\r\n\r\n                    var previous = firstPoint.skip ? middlePoint : firstPoint;\r\n                    var current = middlePoint;\r\n                    var next = afterPoint.skip ? middlePoint : afterPoint;\r\n\r\n                    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\r\n                    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\r\n\r\n                    var s01 = d01 / (d01 + d12);\r\n                    var s12 = d12 / (d01 + d12);\r\n\r\n                    // If all points are the same, s01 & s02 will be inf\r\n                    s01 = isNaN(s01) ? 0 : s01;\r\n                    s12 = isNaN(s12) ? 0 : s12;\r\n\r\n                    var fa = t * s01; // scaling factor for triangle Ta\r\n                    var fb = t * s12;\r\n\r\n                    return {\r\n                        previous: {\r\n                            x: current.x - fa * (next.x - previous.x),\r\n                            y: current.y - fa * (next.y - previous.y)\r\n                        },\r\n                        next: {\r\n                            x: current.x + fb * (next.x - previous.x),\r\n                            y: current.y + fb * (next.y - previous.y)\r\n                        }\r\n                    };\r\n                };\r\n                helpers.EPSILON = Number.EPSILON || 1e-14;\r\n                helpers.splineCurveMonotone = function(points) {\r\n                    // This function calculates Bézier control points in a similar way than |splineCurve|,\r\n                    // but preserves monotonicity of the provided data and ensures no local extremums are added\r\n                    // between the dataset discrete points due to the interpolation.\r\n                    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\r\n\r\n                    var pointsWithTangents = (points || []).map(function(point) {\r\n                        return {\r\n                            model: point._model,\r\n                            deltaK: 0,\r\n                            mK: 0\r\n                        };\r\n                    });\r\n\r\n                    // Calculate slopes (deltaK) and initialize tangents (mK)\r\n                    var pointsLen = pointsWithTangents.length;\r\n                    var i, pointBefore, pointCurrent, pointAfter;\r\n                    for (i = 0; i < pointsLen; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        if (pointCurrent.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n                        if (pointAfter && !pointAfter.model.skip) {\r\n                            var slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\r\n\r\n                            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\r\n                            pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\r\n                        }\r\n\r\n                        if (!pointBefore || pointBefore.model.skip) {\r\n                            pointCurrent.mK = pointCurrent.deltaK;\r\n                        } else if (!pointAfter || pointAfter.model.skip) {\r\n                            pointCurrent.mK = pointBefore.deltaK;\r\n                        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\r\n                            pointCurrent.mK = 0;\r\n                        } else {\r\n                            pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\r\n                        }\r\n                    }\r\n\r\n                    // Adjust tangents to ensure monotonic properties\r\n                    var alphaK, betaK, tauK, squaredMagnitude;\r\n                    for (i = 0; i < pointsLen - 1; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        pointAfter = pointsWithTangents[i + 1];\r\n                        if (pointCurrent.model.skip || pointAfter.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\r\n                            pointCurrent.mK = pointAfter.mK = 0;\r\n                            continue;\r\n                        }\r\n\r\n                        alphaK = pointCurrent.mK / pointCurrent.deltaK;\r\n                        betaK = pointAfter.mK / pointCurrent.deltaK;\r\n                        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\r\n                        if (squaredMagnitude <= 9) {\r\n                            continue;\r\n                        }\r\n\r\n                        tauK = 3 / Math.sqrt(squaredMagnitude);\r\n                        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\r\n                        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\r\n                    }\r\n\r\n                    // Compute control points\r\n                    var deltaX;\r\n                    for (i = 0; i < pointsLen; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        if (pointCurrent.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n                        if (pointBefore && !pointBefore.model.skip) {\r\n                            deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\r\n                            pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\r\n                            pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\r\n                        }\r\n                        if (pointAfter && !pointAfter.model.skip) {\r\n                            deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\r\n                            pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\r\n                            pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\r\n                        }\r\n                    }\r\n                };\r\n                helpers.nextItem = function(collection, index, loop) {\r\n                    if (loop) {\r\n                        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\r\n                    }\r\n                    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\r\n                };\r\n                helpers.previousItem = function(collection, index, loop) {\r\n                    if (loop) {\r\n                        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\r\n                    }\r\n                    return index <= 0 ? collection[0] : collection[index - 1];\r\n                };\r\n                // Implementation of the nice number algorithm used in determining where axis labels will go\r\n                helpers.niceNum = function(range, round) {\r\n                    var exponent = Math.floor(helpers.log10(range));\r\n                    var fraction = range / Math.pow(10, exponent);\r\n                    var niceFraction;\r\n\r\n                    if (round) {\r\n                        if (fraction < 1.5) {\r\n                            niceFraction = 1;\r\n                        } else if (fraction < 3) {\r\n                            niceFraction = 2;\r\n                        } else if (fraction < 7) {\r\n                            niceFraction = 5;\r\n                        } else {\r\n                            niceFraction = 10;\r\n                        }\r\n                    } else if (fraction <= 1.0) {\r\n                        niceFraction = 1;\r\n                    } else if (fraction <= 2) {\r\n                        niceFraction = 2;\r\n                    } else if (fraction <= 5) {\r\n                        niceFraction = 5;\r\n                    } else {\r\n                        niceFraction = 10;\r\n                    }\r\n\r\n                    return niceFraction * Math.pow(10, exponent);\r\n                };\r\n                // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n                helpers.requestAnimFrame = (function() {\r\n                    if (typeof window === 'undefined') {\r\n                        return function(callback) {\r\n                            callback();\r\n                        };\r\n                    }\r\n                    return window.requestAnimationFrame ||\r\n                        window.webkitRequestAnimationFrame ||\r\n                        window.mozRequestAnimationFrame ||\r\n                        window.oRequestAnimationFrame ||\r\n                        window.msRequestAnimationFrame ||\r\n                        function(callback) {\r\n                            return window.setTimeout(callback, 1000 / 60);\r\n                        };\r\n                }());\r\n                // -- DOM methods\r\n                helpers.getRelativePosition = function(evt, chart) {\r\n                    var mouseX, mouseY;\r\n                    var e = evt.originalEvent || evt;\r\n                    var canvas = evt.currentTarget || evt.srcElement;\r\n                    var boundingRect = canvas.getBoundingClientRect();\r\n\r\n                    var touches = e.touches;\r\n                    if (touches && touches.length > 0) {\r\n                        mouseX = touches[0].clientX;\r\n                        mouseY = touches[0].clientY;\r\n                    } else {\r\n                        mouseX = e.clientX;\r\n                        mouseY = e.clientY;\r\n                    }\r\n\r\n                    // Scale mouse coordinates into canvas coordinates\r\n                    // by following the pattern laid out by 'jerryj' in the comments of\r\n                    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\r\n                    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\r\n                    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\r\n                    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\r\n                    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\r\n                    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\r\n                    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\r\n\r\n                    // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\r\n                    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\r\n                    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\r\n                    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\r\n\r\n                    return {\r\n                        x: mouseX,\r\n                        y: mouseY\r\n                    };\r\n                };\r\n\r\n                // Private helper function to convert max-width/max-height values that may be percentages into a number\r\n                function parseMaxStyle(styleValue, node, parentProperty) {\r\n                    var valueInPixels;\r\n                    if (typeof styleValue === 'string') {\r\n                        valueInPixels = parseInt(styleValue, 10);\r\n\r\n                        if (styleValue.indexOf('%') !== -1) {\r\n                            // percentage * size in dimension\r\n                            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\r\n                        }\r\n                    } else {\r\n                        valueInPixels = styleValue;\r\n                    }\r\n\r\n                    return valueInPixels;\r\n                }\r\n\r\n                /**\r\n                 * Returns if the given value contains an effective constraint.\r\n                 * @private\r\n                 */\r\n                function isConstrainedValue(value) {\r\n                    return value !== undefined && value !== null && value !== 'none';\r\n                }\r\n\r\n                // Private helper to get a constraint dimension\r\n                // @param domNode : the node to check the constraint on\r\n                // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\r\n                // @param percentageProperty : property of parent to use when calculating width as a percentage\r\n                // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\r\n                function getConstraintDimension(domNode, maxStyle, percentageProperty) {\r\n                    var view = document.defaultView;\r\n                    var parentNode = domNode.parentNode;\r\n                    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\r\n                    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\r\n                    var hasCNode = isConstrainedValue(constrainedNode);\r\n                    var hasCContainer = isConstrainedValue(constrainedContainer);\r\n                    var infinity = Number.POSITIVE_INFINITY;\r\n\r\n                    if (hasCNode || hasCContainer) {\r\n                        return Math.min(\r\n                            hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\r\n                            hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\r\n                    }\r\n\r\n                    return 'none';\r\n                }\r\n                // returns Number or undefined if no constraint\r\n                helpers.getConstraintWidth = function(domNode) {\r\n                    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\r\n                };\r\n                // returns Number or undefined if no constraint\r\n                helpers.getConstraintHeight = function(domNode) {\r\n                    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\r\n                };\r\n                helpers.getMaximumWidth = function(domNode) {\r\n                    var container = domNode.parentNode;\r\n                    if (!container) {\r\n                        return domNode.clientWidth;\r\n                    }\r\n\r\n                    var paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\r\n                    var paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\r\n                    var w = container.clientWidth - paddingLeft - paddingRight;\r\n                    var cw = helpers.getConstraintWidth(domNode);\r\n                    return isNaN(cw) ? w : Math.min(w, cw);\r\n                };\r\n                helpers.getMaximumHeight = function(domNode) {\r\n                    var container = domNode.parentNode;\r\n                    if (!container) {\r\n                        return domNode.clientHeight;\r\n                    }\r\n\r\n                    var paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\r\n                    var paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\r\n                    var h = container.clientHeight - paddingTop - paddingBottom;\r\n                    var ch = helpers.getConstraintHeight(domNode);\r\n                    return isNaN(ch) ? h : Math.min(h, ch);\r\n                };\r\n                helpers.getStyle = function(el, property) {\r\n                    return el.currentStyle ?\r\n                        el.currentStyle[property] :\r\n                        document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\r\n                };\r\n                helpers.retinaScale = function(chart, forceRatio) {\r\n                    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\r\n                    if (pixelRatio === 1) {\r\n                        return;\r\n                    }\r\n\r\n                    var canvas = chart.canvas;\r\n                    var height = chart.height;\r\n                    var width = chart.width;\r\n\r\n                    canvas.height = height * pixelRatio;\r\n                    canvas.width = width * pixelRatio;\r\n                    chart.ctx.scale(pixelRatio, pixelRatio);\r\n\r\n                    // If no style has been set on the canvas, the render size is used as display size,\r\n                    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\r\n                    // See https://github.com/chartjs/Chart.js/issues/3575\r\n                    if (!canvas.style.height && !canvas.style.width) {\r\n                        canvas.style.height = height + 'px';\r\n                        canvas.style.width = width + 'px';\r\n                    }\r\n                };\r\n                // -- Canvas methods\r\n                helpers.fontString = function(pixelSize, fontStyle, fontFamily) {\r\n                    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\r\n                };\r\n                helpers.longestText = function(ctx, font, arrayOfThings, cache) {\r\n                    cache = cache || {};\r\n                    var data = cache.data = cache.data || {};\r\n                    var gc = cache.garbageCollect = cache.garbageCollect || [];\r\n\r\n                    if (cache.font !== font) {\r\n                        data = cache.data = {};\r\n                        gc = cache.garbageCollect = [];\r\n                        cache.font = font;\r\n                    }\r\n\r\n                    ctx.font = font;\r\n                    var longest = 0;\r\n                    helpers.each(arrayOfThings, function(thing) {\r\n                        // Undefined strings and arrays should not be measured\r\n                        if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\r\n                            longest = helpers.measureText(ctx, data, gc, longest, thing);\r\n                        } else if (helpers.isArray(thing)) {\r\n                            // if it is an array lets measure each element\r\n                            // to do maybe simplify this function a bit so we can do this more recursively?\r\n                            helpers.each(thing, function(nestedThing) {\r\n                                // Undefined strings and arrays should not be measured\r\n                                if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\r\n                                    longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    var gcLen = gc.length / 2;\r\n                    if (gcLen > arrayOfThings.length) {\r\n                        for (var i = 0; i < gcLen; i++) {\r\n                            delete data[gc[i]];\r\n                        }\r\n                        gc.splice(0, gcLen);\r\n                    }\r\n                    return longest;\r\n                };\r\n                helpers.measureText = function(ctx, data, gc, longest, string) {\r\n                    var textWidth = data[string];\r\n                    if (!textWidth) {\r\n                        textWidth = data[string] = ctx.measureText(string).width;\r\n                        gc.push(string);\r\n                    }\r\n                    if (textWidth > longest) {\r\n                        longest = textWidth;\r\n                    }\r\n                    return longest;\r\n                };\r\n                helpers.numberOfLabelLines = function(arrayOfThings) {\r\n                    var numberOfLines = 1;\r\n                    helpers.each(arrayOfThings, function(thing) {\r\n                        if (helpers.isArray(thing)) {\r\n                            if (thing.length > numberOfLines) {\r\n                                numberOfLines = thing.length;\r\n                            }\r\n                        }\r\n                    });\r\n                    return numberOfLines;\r\n                };\r\n\r\n                helpers.color = !color ?\r\n                    function(value) {\r\n                        console.error('Color.js not found!');\r\n                        return value;\r\n                    } :\r\n                    function(value) {\r\n                        /* global CanvasGradient */\r\n                        if (value instanceof CanvasGradient) {\r\n                            value = defaults.global.defaultColor;\r\n                        }\r\n\r\n                        return color(value);\r\n                    };\r\n\r\n                helpers.getHoverColor = function(colorValue) {\r\n                    /* global CanvasPattern */\r\n                    return (colorValue instanceof CanvasPattern) ?\r\n                        colorValue :\r\n                        helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"2\": 2, \"36\": 36 }], 19: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Helper function to get relative position for an event\r\n             * @param {Event|IEvent} event - The event to get the position for\r\n             * @param {Chart} chart - The chart\r\n             * @returns {Point} the event position\r\n             */\r\n            function getRelativePosition(e, chart) {\r\n                if (e.native) {\r\n                    return {\r\n                        x: e.x,\r\n                        y: e.y\r\n                    };\r\n                }\r\n\r\n                return helpers.getRelativePosition(e, chart);\r\n            }\r\n\r\n            /**\r\n             * Helper function to traverse all of the visible elements in the chart\r\n             * @param chart {chart} the chart\r\n             * @param handler {Function} the callback to execute for each visible item\r\n             */\r\n            function parseVisibleItems(chart, handler) {\r\n                var datasets = chart.data.datasets;\r\n                var meta, i, j, ilen, jlen;\r\n\r\n                for (i = 0, ilen = datasets.length; i < ilen; ++i) {\r\n                    if (!chart.isDatasetVisible(i)) {\r\n                        continue;\r\n                    }\r\n\r\n                    meta = chart.getDatasetMeta(i);\r\n                    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\r\n                        var element = meta.data[j];\r\n                        if (!element._view.skip) {\r\n                            handler(element);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the items that intersect the event position\r\n             * @param items {ChartElement[]} elements to filter\r\n             * @param position {Point} the point to be nearest to\r\n             * @return {ChartElement[]} the nearest items\r\n             */\r\n            function getIntersectItems(chart, position) {\r\n                var elements = [];\r\n\r\n                parseVisibleItems(chart, function(element) {\r\n                    if (element.inRange(position.x, position.y)) {\r\n                        elements.push(element);\r\n                    }\r\n                });\r\n\r\n                return elements;\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the items nearest to the event position considering all visible items in teh chart\r\n             * @param chart {Chart} the chart to look at elements from\r\n             * @param position {Point} the point to be nearest to\r\n             * @param intersect {Boolean} if true, only consider items that intersect the position\r\n             * @param distanceMetric {Function} function to provide the distance between points\r\n             * @return {ChartElement[]} the nearest items\r\n             */\r\n            function getNearestItems(chart, position, intersect, distanceMetric) {\r\n                var minDistance = Number.POSITIVE_INFINITY;\r\n                var nearestItems = [];\r\n\r\n                parseVisibleItems(chart, function(element) {\r\n                    if (intersect && !element.inRange(position.x, position.y)) {\r\n                        return;\r\n                    }\r\n\r\n                    var center = element.getCenterPoint();\r\n                    var distance = distanceMetric(position, center);\r\n\r\n                    if (distance < minDistance) {\r\n                        nearestItems = [element];\r\n                        minDistance = distance;\r\n                    } else if (distance === minDistance) {\r\n                        // Can have multiple items at the same distance in which case we sort by size\r\n                        nearestItems.push(element);\r\n                    }\r\n                });\r\n\r\n                return nearestItems;\r\n            }\r\n\r\n            /**\r\n             * Get a distance metric function for two points based on the\r\n             * axis mode setting\r\n             * @param {String} axis the axis mode. x|y|xy\r\n             */\r\n            function getDistanceMetricForAxis(axis) {\r\n                var useX = axis.indexOf('x') !== -1;\r\n                var useY = axis.indexOf('y') !== -1;\r\n\r\n                return function(pt1, pt2) {\r\n                    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n                    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n                    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n                };\r\n            }\r\n\r\n            function indexMode(chart, e, options) {\r\n                var position = getRelativePosition(e, chart);\r\n                // Default axis for index mode is 'x' to match old behaviour\r\n                options.axis = options.axis || 'x';\r\n                var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\r\n                var elements = [];\r\n\r\n                if (!items.length) {\r\n                    return [];\r\n                }\r\n\r\n                chart.data.datasets.forEach(function(dataset, datasetIndex) {\r\n                    if (chart.isDatasetVisible(datasetIndex)) {\r\n                        var meta = chart.getDatasetMeta(datasetIndex);\r\n                        var element = meta.data[items[0]._index];\r\n\r\n                        // don't count items that are skipped (null data)\r\n                        if (element && !element._view.skip) {\r\n                            elements.push(element);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                return elements;\r\n            }\r\n\r\n            /**\r\n             * @interface IInteractionOptions\r\n             */\r\n            /**\r\n             * If true, only consider items that intersect the point\r\n             * @name IInterfaceOptions#boolean\r\n             * @type Boolean\r\n             */\r\n\r\n            /**\r\n             * Contains interaction related functions\r\n             * @namespace Chart.Interaction\r\n             */\r\n            module.exports = {\r\n                // Helper function for different modes\r\n                modes: {\r\n                    single: function(chart, e) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var elements = [];\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                elements.push(element);\r\n                                return elements;\r\n                            }\r\n                        });\r\n\r\n                        return elements.slice(0, 1);\r\n                    },\r\n\r\n                    /**\r\n                     * @function Chart.Interaction.modes.label\r\n                     * @deprecated since version 2.4.0\r\n                     * @todo remove at version 3\r\n                     * @private\r\n                     */\r\n                    label: indexMode,\r\n\r\n                    /**\r\n                     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\r\n                     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\r\n                     * @function Chart.Interaction.modes.index\r\n                     * @since v2.4.0\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use during interaction\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    index: indexMode,\r\n\r\n                    /**\r\n                     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\r\n                     * If the options.intersect is false, we find the nearest item and return the items in that dataset\r\n                     * @function Chart.Interaction.modes.dataset\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use during interaction\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    dataset: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        options.axis = options.axis || 'xy';\r\n                        var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\r\n\r\n                        if (items.length > 0) {\r\n                            items = chart.getDatasetMeta(items[0]._datasetIndex).data;\r\n                        }\r\n\r\n                        return items;\r\n                    },\r\n\r\n                    /**\r\n                     * @function Chart.Interaction.modes.x-axis\r\n                     * @deprecated since version 2.4.0. Use index mode and intersect == true\r\n                     * @todo remove at version 3\r\n                     * @private\r\n                     */\r\n                    'x-axis': function(chart, e) {\r\n                        return indexMode(chart, e, { intersect: false });\r\n                    },\r\n\r\n                    /**\r\n                     * Point mode returns all elements that hit test based on the event position\r\n                     * of the event\r\n                     * @function Chart.Interaction.modes.intersect\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    point: function(chart, e) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        return getIntersectItems(chart, position);\r\n                    },\r\n\r\n                    /**\r\n                     * nearest mode returns the element closest to the point\r\n                     * @function Chart.Interaction.modes.intersect\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    nearest: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        options.axis = options.axis || 'xy';\r\n                        var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                        var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\r\n\r\n                        // We have multiple items at the same distance from the event. Now sort by smallest\r\n                        if (nearestItems.length > 1) {\r\n                            nearestItems.sort(function(a, b) {\r\n                                var sizeA = a.getArea();\r\n                                var sizeB = b.getArea();\r\n                                var ret = sizeA - sizeB;\r\n\r\n                                if (ret === 0) {\r\n                                    // if equal sort by dataset index\r\n                                    ret = a._datasetIndex - b._datasetIndex;\r\n                                }\r\n\r\n                                return ret;\r\n                            });\r\n                        }\r\n\r\n                        // Return only 1 item\r\n                        return nearestItems.slice(0, 1);\r\n                    },\r\n\r\n                    /**\r\n                     * x mode returns the elements that hit-test at the current x coordinate\r\n                     * @function Chart.Interaction.modes.x\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    x: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var items = [];\r\n                        var intersectsItem = false;\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inXRange(position.x)) {\r\n                                items.push(element);\r\n                            }\r\n\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                intersectsItem = true;\r\n                            }\r\n                        });\r\n\r\n                        // If we want to trigger on an intersect and we don't have any items\r\n                        // that intersect the position, return nothing\r\n                        if (options.intersect && !intersectsItem) {\r\n                            items = [];\r\n                        }\r\n                        return items;\r\n                    },\r\n\r\n                    /**\r\n                     * y mode returns the elements that hit-test at the current y coordinate\r\n                     * @function Chart.Interaction.modes.y\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    y: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var items = [];\r\n                        var intersectsItem = false;\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inYRange(position.y)) {\r\n                                items.push(element);\r\n                            }\r\n\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                intersectsItem = true;\r\n                            }\r\n                        });\r\n\r\n                        // If we want to trigger on an intersect and we don't have any items\r\n                        // that intersect the position, return nothing\r\n                        if (options.intersect && !intersectsItem) {\r\n                            items = [];\r\n                        }\r\n                        return items;\r\n                    }\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 20: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n\r\n            defaults._set('global', {\r\n                responsive: true,\r\n                responsiveAnimationDuration: 0,\r\n                maintainAspectRatio: true,\r\n                events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\r\n                hover: {\r\n                    onHover: null,\r\n                    mode: 'nearest',\r\n                    intersect: true,\r\n                    animationDuration: 400\r\n                },\r\n                onClick: null,\r\n                defaultColor: 'rgba(0,0,0,0.1)',\r\n                defaultFontColor: '#666',\r\n                defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n                defaultFontSize: 12,\r\n                defaultFontStyle: 'normal',\r\n                showLines: true,\r\n\r\n                // Element defaults defined in element extensions\r\n                elements: {},\r\n\r\n                // Layout options such as padding\r\n                layout: {\r\n                    padding: {\r\n                        top: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        left: 0\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = function() {\r\n                // Occupy the global variable of Chart, and create a simple base class\r\n                var Chart = function(item, config) {\r\n                    this.construct(item, config);\r\n                    return this;\r\n                };\r\n\r\n                Chart.Chart = Chart;\r\n\r\n                return Chart;\r\n            };\r\n        }, { \"16\": 16 }], 21: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            function filterByPosition(array, position) {\r\n                return helpers.where(array, function(v) {\r\n                    return v.position === position;\r\n                });\r\n            }\r\n\r\n            function sortByWeight(array, reverse) {\r\n                array.forEach(function(v, i) {\r\n                    v._tmpIndex_ = i;\r\n                    return v;\r\n                });\r\n                array.sort(function(a, b) {\r\n                    var v0 = reverse ? b : a;\r\n                    var v1 = reverse ? a : b;\r\n                    return v0.weight === v1.weight ?\r\n                        v0._tmpIndex_ - v1._tmpIndex_ :\r\n                        v0.weight - v1.weight;\r\n                });\r\n                array.forEach(function(v) {\r\n                    delete v._tmpIndex_;\r\n                });\r\n            }\r\n\r\n            /**\r\n             * @interface ILayoutItem\r\n             * @prop {String} position - The position of the item in the chart layout. Possible values are\r\n             * 'left', 'top', 'right', 'bottom', and 'chartArea'\r\n             * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\r\n             * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\r\n             * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\r\n             * @prop {Function} update - Takes two parameters: width and height. Returns size of item\r\n             * @prop {Function} getPadding -  Returns an object with padding on the edges\r\n             * @prop {Number} width - Width of item. Must be valid after update()\r\n             * @prop {Number} height - Height of item. Must be valid after update()\r\n             * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\r\n             */\r\n\r\n            // The layout service is very self explanatory.  It's responsible for the layout within a chart.\r\n            // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\r\n            // It is this service's responsibility of carrying out that layout.\r\n            module.exports = {\r\n                defaults: {},\r\n\r\n                /**\r\n                 * Register a box to a chart.\r\n                 * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\r\n                 * @param {Chart} chart - the chart to use\r\n                 * @param {ILayoutItem} item - the item to add to be layed out\r\n                 */\r\n                addBox: function(chart, item) {\r\n                    if (!chart.boxes) {\r\n                        chart.boxes = [];\r\n                    }\r\n\r\n                    // initialize item with default values\r\n                    item.fullWidth = item.fullWidth || false;\r\n                    item.position = item.position || 'top';\r\n                    item.weight = item.weight || 0;\r\n\r\n                    chart.boxes.push(item);\r\n                },\r\n\r\n                /**\r\n                 * Remove a layoutItem from a chart\r\n                 * @param {Chart} chart - the chart to remove the box from\r\n                 * @param {Object} layoutItem - the item to remove from the layout\r\n                 */\r\n                removeBox: function(chart, layoutItem) {\r\n                    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n                    if (index !== -1) {\r\n                        chart.boxes.splice(index, 1);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Sets (or updates) options on the given `item`.\r\n                 * @param {Chart} chart - the chart in which the item lives (or will be added to)\r\n                 * @param {Object} item - the item to configure with the given options\r\n                 * @param {Object} options - the new item options.\r\n                 */\r\n                configure: function(chart, item, options) {\r\n                    var props = ['fullWidth', 'position', 'weight'];\r\n                    var ilen = props.length;\r\n                    var i = 0;\r\n                    var prop;\r\n\r\n                    for (; i < ilen; ++i) {\r\n                        prop = props[i];\r\n                        if (options.hasOwnProperty(prop)) {\r\n                            item[prop] = options[prop];\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Fits boxes of the given chart into the given size by having each box measure itself\r\n                 * then running a fitting algorithm\r\n                 * @param {Chart} chart - the chart\r\n                 * @param {Number} width - the width to fit into\r\n                 * @param {Number} height - the height to fit into\r\n                 */\r\n                update: function(chart, width, height) {\r\n                    if (!chart) {\r\n                        return;\r\n                    }\r\n\r\n                    var layoutOptions = chart.options.layout || {};\r\n                    var padding = helpers.options.toPadding(layoutOptions.padding);\r\n                    var leftPadding = padding.left;\r\n                    var rightPadding = padding.right;\r\n                    var topPadding = padding.top;\r\n                    var bottomPadding = padding.bottom;\r\n\r\n                    var leftBoxes = filterByPosition(chart.boxes, 'left');\r\n                    var rightBoxes = filterByPosition(chart.boxes, 'right');\r\n                    var topBoxes = filterByPosition(chart.boxes, 'top');\r\n                    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\r\n                    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\r\n\r\n                    // Sort boxes by weight. A higher weight is further away from the chart area\r\n                    sortByWeight(leftBoxes, true);\r\n                    sortByWeight(rightBoxes, false);\r\n                    sortByWeight(topBoxes, true);\r\n                    sortByWeight(bottomBoxes, false);\r\n\r\n                    // Essentially we now have any number of boxes on each of the 4 sides.\r\n                    // Our canvas looks like the following.\r\n                    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\r\n                    // B1 is the bottom axis\r\n                    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\r\n                    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\r\n                    // an error will be thrown.\r\n                    //\r\n                    // |----------------------------------------------------|\r\n                    // |                  T1 (Full Width)                   |\r\n                    // |----------------------------------------------------|\r\n                    // |    |    |                 T2                  |    |\r\n                    // |    |----|-------------------------------------|----|\r\n                    // |    |    | C1 |                           | C2 |    |\r\n                    // |    |    |----|                           |----|    |\r\n                    // |    |    |                                     |    |\r\n                    // | L1 | L2 |           ChartArea (C0)            | R1 |\r\n                    // |    |    |                                     |    |\r\n                    // |    |    |----|                           |----|    |\r\n                    // |    |    | C3 |                           | C4 |    |\r\n                    // |    |----|-------------------------------------|----|\r\n                    // |    |    |                 B1                  |    |\r\n                    // |----------------------------------------------------|\r\n                    // |                  B2 (Full Width)                   |\r\n                    // |----------------------------------------------------|\r\n                    //\r\n                    // What we do to find the best sizing, we do the following\r\n                    // 1. Determine the minimum size of the chart area.\r\n                    // 2. Split the remaining width equally between each vertical axis\r\n                    // 3. Split the remaining height equally between each horizontal axis\r\n                    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\r\n                    // 5. Adjust the sizes of each axis based on it's minimum reported size.\r\n                    // 6. Refit each axis\r\n                    // 7. Position each axis in the final location\r\n                    // 8. Tell the chart the final location of the chart area\r\n                    // 9. Tell any axes that overlay the chart area the positions of the chart area\r\n\r\n                    // Step 1\r\n                    var chartWidth = width - leftPadding - rightPadding;\r\n                    var chartHeight = height - topPadding - bottomPadding;\r\n                    var chartAreaWidth = chartWidth / 2; // min 50%\r\n                    var chartAreaHeight = chartHeight / 2; // min 50%\r\n\r\n                    // Step 2\r\n                    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\r\n\r\n                    // Step 3\r\n                    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\r\n\r\n                    // Step 4\r\n                    var maxChartAreaWidth = chartWidth;\r\n                    var maxChartAreaHeight = chartHeight;\r\n                    var minBoxSizes = [];\r\n\r\n                    function getMinimumBoxSize(box) {\r\n                        var minSize;\r\n                        var isHorizontal = box.isHorizontal();\r\n\r\n                        if (isHorizontal) {\r\n                            minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\r\n                            maxChartAreaHeight -= minSize.height;\r\n                        } else {\r\n                            minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\r\n                            maxChartAreaWidth -= minSize.width;\r\n                        }\r\n\r\n                        minBoxSizes.push({\r\n                            horizontal: isHorizontal,\r\n                            minSize: minSize,\r\n                            box: box,\r\n                        });\r\n                    }\r\n\r\n                    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\r\n\r\n                    // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\r\n                    var maxHorizontalLeftPadding = 0;\r\n                    var maxHorizontalRightPadding = 0;\r\n                    var maxVerticalTopPadding = 0;\r\n                    var maxVerticalBottomPadding = 0;\r\n\r\n                    helpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\r\n                        if (horizontalBox.getPadding) {\r\n                            var boxPadding = horizontalBox.getPadding();\r\n                            maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\r\n                            maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\r\n                        }\r\n                    });\r\n\r\n                    helpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\r\n                        if (verticalBox.getPadding) {\r\n                            var boxPadding = verticalBox.getPadding();\r\n                            maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\r\n                            maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\r\n                        }\r\n                    });\r\n\r\n                    // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\r\n                    // be if the axes are drawn at their minimum sizes.\r\n                    // Steps 5 & 6\r\n                    var totalLeftBoxesWidth = leftPadding;\r\n                    var totalRightBoxesWidth = rightPadding;\r\n                    var totalTopBoxesHeight = topPadding;\r\n                    var totalBottomBoxesHeight = bottomPadding;\r\n\r\n                    // Function to fit a box\r\n                    function fitBox(box) {\r\n                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\r\n                            return minBox.box === box;\r\n                        });\r\n\r\n                        if (minBoxSize) {\r\n                            if (box.isHorizontal()) {\r\n                                var scaleMargin = {\r\n                                    left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\r\n                                    right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\r\n                                    top: 0,\r\n                                    bottom: 0\r\n                                };\r\n\r\n                                // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\r\n                                // on the margin. Sometimes they need to increase in size slightly\r\n                                box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\r\n                            } else {\r\n                                box.update(minBoxSize.minSize.width, maxChartAreaHeight);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Update, and calculate the left and right margins for the horizontal boxes\r\n                    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\r\n\r\n                    helpers.each(leftBoxes, function(box) {\r\n                        totalLeftBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(rightBoxes, function(box) {\r\n                        totalRightBoxesWidth += box.width;\r\n                    });\r\n\r\n                    // Set the Left and Right margins for the horizontal boxes\r\n                    helpers.each(topBoxes.concat(bottomBoxes), fitBox);\r\n\r\n                    // Figure out how much margin is on the top and bottom of the vertical boxes\r\n                    helpers.each(topBoxes, function(box) {\r\n                        totalTopBoxesHeight += box.height;\r\n                    });\r\n\r\n                    helpers.each(bottomBoxes, function(box) {\r\n                        totalBottomBoxesHeight += box.height;\r\n                    });\r\n\r\n                    function finalFitVerticalBox(box) {\r\n                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\r\n                            return minSize.box === box;\r\n                        });\r\n\r\n                        var scaleMargin = {\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: totalTopBoxesHeight,\r\n                            bottom: totalBottomBoxesHeight\r\n                        };\r\n\r\n                        if (minBoxSize) {\r\n                            box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\r\n                        }\r\n                    }\r\n\r\n                    // Let the left layout know the final margin\r\n                    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\r\n\r\n                    // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\r\n                    totalLeftBoxesWidth = leftPadding;\r\n                    totalRightBoxesWidth = rightPadding;\r\n                    totalTopBoxesHeight = topPadding;\r\n                    totalBottomBoxesHeight = bottomPadding;\r\n\r\n                    helpers.each(leftBoxes, function(box) {\r\n                        totalLeftBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(rightBoxes, function(box) {\r\n                        totalRightBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(topBoxes, function(box) {\r\n                        totalTopBoxesHeight += box.height;\r\n                    });\r\n                    helpers.each(bottomBoxes, function(box) {\r\n                        totalBottomBoxesHeight += box.height;\r\n                    });\r\n\r\n                    // We may be adding some padding to account for rotated x axis labels\r\n                    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\r\n                    totalLeftBoxesWidth += leftPaddingAddition;\r\n                    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\r\n\r\n                    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\r\n                    totalTopBoxesHeight += topPaddingAddition;\r\n                    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\r\n\r\n                    // Figure out if our chart area changed. This would occur if the dataset layout label rotation\r\n                    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\r\n                    // without calling `fit` again\r\n                    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\r\n                    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\r\n\r\n                    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\r\n                        helpers.each(leftBoxes, function(box) {\r\n                            box.height = newMaxChartAreaHeight;\r\n                        });\r\n\r\n                        helpers.each(rightBoxes, function(box) {\r\n                            box.height = newMaxChartAreaHeight;\r\n                        });\r\n\r\n                        helpers.each(topBoxes, function(box) {\r\n                            if (!box.fullWidth) {\r\n                                box.width = newMaxChartAreaWidth;\r\n                            }\r\n                        });\r\n\r\n                        helpers.each(bottomBoxes, function(box) {\r\n                            if (!box.fullWidth) {\r\n                                box.width = newMaxChartAreaWidth;\r\n                            }\r\n                        });\r\n\r\n                        maxChartAreaHeight = newMaxChartAreaHeight;\r\n                        maxChartAreaWidth = newMaxChartAreaWidth;\r\n                    }\r\n\r\n                    // Step 7 - Position the boxes\r\n                    var left = leftPadding + leftPaddingAddition;\r\n                    var top = topPadding + topPaddingAddition;\r\n\r\n                    function placeBox(box) {\r\n                        if (box.isHorizontal()) {\r\n                            box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\r\n                            box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\r\n                            box.top = top;\r\n                            box.bottom = top + box.height;\r\n\r\n                            // Move to next point\r\n                            top = box.bottom;\r\n                        } else {\r\n                            box.left = left;\r\n                            box.right = left + box.width;\r\n                            box.top = totalTopBoxesHeight;\r\n                            box.bottom = totalTopBoxesHeight + maxChartAreaHeight;\r\n\r\n                            // Move to next point\r\n                            left = box.right;\r\n                        }\r\n                    }\r\n\r\n                    helpers.each(leftBoxes.concat(topBoxes), placeBox);\r\n\r\n                    // Account for chart width and height\r\n                    left += maxChartAreaWidth;\r\n                    top += maxChartAreaHeight;\r\n\r\n                    helpers.each(rightBoxes, placeBox);\r\n                    helpers.each(bottomBoxes, placeBox);\r\n\r\n                    // Step 8\r\n                    chart.chartArea = {\r\n                        left: totalLeftBoxesWidth,\r\n                        top: totalTopBoxesHeight,\r\n                        right: totalLeftBoxesWidth + maxChartAreaWidth,\r\n                        bottom: totalTopBoxesHeight + maxChartAreaHeight\r\n                    };\r\n\r\n                    // Step 9\r\n                    helpers.each(chartAreaBoxes, function(box) {\r\n                        box.left = chart.chartArea.left;\r\n                        box.top = chart.chartArea.top;\r\n                        box.right = chart.chartArea.right;\r\n                        box.bottom = chart.chartArea.bottom;\r\n\r\n                        box.update(maxChartAreaWidth, maxChartAreaHeight);\r\n                    });\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 22: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                plugins: {}\r\n            });\r\n\r\n            /**\r\n             * The plugin service singleton\r\n             * @namespace Chart.plugins\r\n             * @since 2.1.0\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Globally registered plugins.\r\n                 * @private\r\n                 */\r\n                _plugins: [],\r\n\r\n                /**\r\n                 * This identifier is used to invalidate the descriptors cache attached to each chart\r\n                 * when a global plugin is registered or unregistered. In this case, the cache ID is\r\n                 * incremented and descriptors are regenerated during following API calls.\r\n                 * @private\r\n                 */\r\n                _cacheId: 0,\r\n\r\n                /**\r\n                 * Registers the given plugin(s) if not already registered.\r\n                 * @param {Array|Object} plugins plugin instance(s).\r\n                 */\r\n                register: function(plugins) {\r\n                    var p = this._plugins;\r\n                    ([]).concat(plugins).forEach(function(plugin) {\r\n                        if (p.indexOf(plugin) === -1) {\r\n                            p.push(plugin);\r\n                        }\r\n                    });\r\n\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Unregisters the given plugin(s) only if registered.\r\n                 * @param {Array|Object} plugins plugin instance(s).\r\n                 */\r\n                unregister: function(plugins) {\r\n                    var p = this._plugins;\r\n                    ([]).concat(plugins).forEach(function(plugin) {\r\n                        var idx = p.indexOf(plugin);\r\n                        if (idx !== -1) {\r\n                            p.splice(idx, 1);\r\n                        }\r\n                    });\r\n\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Remove all registered plugins.\r\n                 * @since 2.1.5\r\n                 */\r\n                clear: function() {\r\n                    this._plugins = [];\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Returns the number of registered plugins?\r\n                 * @returns {Number}\r\n                 * @since 2.1.5\r\n                 */\r\n                count: function() {\r\n                    return this._plugins.length;\r\n                },\r\n\r\n                /**\r\n                 * Returns all registered plugin instances.\r\n                 * @returns {Array} array of plugin objects.\r\n                 * @since 2.1.5\r\n                 */\r\n                getAll: function() {\r\n                    return this._plugins;\r\n                },\r\n\r\n                /**\r\n                 * Calls enabled plugins for `chart` on the specified hook and with the given args.\r\n                 * This method immediately returns as soon as a plugin explicitly returns false. The\r\n                 * returned value can be used, for instance, to interrupt the current action.\r\n                 * @param {Object} chart - The chart instance for which plugins should be called.\r\n                 * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\r\n                 * @param {Array} [args] - Extra arguments to apply to the hook call.\r\n                 * @returns {Boolean} false if any of the plugins return false, else returns true.\r\n                 */\r\n                notify: function(chart, hook, args) {\r\n                    var descriptors = this.descriptors(chart);\r\n                    var ilen = descriptors.length;\r\n                    var i, descriptor, plugin, params, method;\r\n\r\n                    for (i = 0; i < ilen; ++i) {\r\n                        descriptor = descriptors[i];\r\n                        plugin = descriptor.plugin;\r\n                        method = plugin[hook];\r\n                        if (typeof method === 'function') {\r\n                            params = [chart].concat(args || []);\r\n                            params.push(descriptor.options);\r\n                            if (method.apply(plugin, params) === false) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                },\r\n\r\n                /**\r\n                 * Returns descriptors of enabled plugins for the given chart.\r\n                 * @returns {Array} [{ plugin, options }]\r\n                 * @private\r\n                 */\r\n                descriptors: function(chart) {\r\n                    var cache = chart.$plugins || (chart.$plugins = {});\r\n                    if (cache.id === this._cacheId) {\r\n                        return cache.descriptors;\r\n                    }\r\n\r\n                    var plugins = [];\r\n                    var descriptors = [];\r\n                    var config = (chart && chart.config) || {};\r\n                    var options = (config.options && config.options.plugins) || {};\r\n\r\n                    this._plugins.concat(config.plugins || []).forEach(function(plugin) {\r\n                        var idx = plugins.indexOf(plugin);\r\n                        if (idx !== -1) {\r\n                            return;\r\n                        }\r\n\r\n                        var id = plugin.id;\r\n                        var opts = options[id];\r\n                        if (opts === false) {\r\n                            return;\r\n                        }\r\n\r\n                        if (opts === true) {\r\n                            opts = helpers.clone(defaults.global.plugins[id]);\r\n                        }\r\n\r\n                        plugins.push(plugin);\r\n                        descriptors.push({\r\n                            plugin: plugin,\r\n                            options: opts || {}\r\n                        });\r\n                    });\r\n\r\n                    cache.descriptors = descriptors;\r\n                    cache.id = this._cacheId;\r\n                    return descriptors;\r\n                },\r\n\r\n                /**\r\n                 * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\r\n                 * but in some cases, this reference can be changed by the user when updating options.\r\n                 * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\r\n                 * @private\r\n                 */\r\n                _invalidate: function(chart) {\r\n                    delete chart.$plugins;\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Plugin extension hooks.\r\n             * @interface IPlugin\r\n             * @since 2.1.0\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeInit\r\n             * @desc Called before initializing `chart`.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterInit\r\n             * @desc Called after `chart` has been initialized and before the first update.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeUpdate\r\n             * @desc Called before updating `chart`. If any plugin returns `false`, the update\r\n             * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart update.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterUpdate\r\n             * @desc Called after `chart` has been updated and before rendering. Note that this\r\n             * hook will not be called if the chart update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetsUpdate\r\n             * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\r\n             * the datasets update is cancelled until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} false to cancel the datasets update.\r\n             * @since version 2.1.5\r\n            */\r\n            /**\r\n             * @method IPlugin#afterDatasetsUpdate\r\n             * @desc Called after the `chart` datasets have been updated. Note that this hook\r\n             * will not be called if the datasets update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @since version 2.1.5\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetUpdate\r\n             * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\r\n             * returns `false`, the datasets update is cancelled until another `update` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetUpdate\r\n             * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\r\n             * that this hook will not be called if the datasets update has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeLayout\r\n             * @desc Called before laying out `chart`. If any plugin returns `false`,\r\n             * the layout update is cancelled until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart layout.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterLayout\r\n             * @desc Called after the `chart` has been layed out. Note that this hook will not\r\n             * be called if the layout update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeRender\r\n             * @desc Called before rendering `chart`. If any plugin returns `false`,\r\n             * the rendering is cancelled until another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart rendering.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterRender\r\n             * @desc Called after the `chart` has been fully rendered (and animation completed). Note\r\n             * that this hook will not be called if the rendering has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDraw\r\n             * @desc Called before drawing `chart` at every animation frame specified by the given\r\n             * easing value. If any plugin returns `false`, the frame drawing is cancelled until\r\n             * another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDraw\r\n             * @desc Called after the `chart` has been drawn for the specific easing value. Note\r\n             * that this hook will not be called if the drawing has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetsDraw\r\n             * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\r\n             * the datasets drawing is cancelled until another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetsDraw\r\n             * @desc Called after the `chart` datasets have been drawn. Note that this hook\r\n             * will not be called if the datasets drawing has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetDraw\r\n             * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\r\n             * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\r\n             * is cancelled until another `render` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetDraw\r\n             * @desc Called after the `chart` datasets at the given `args.index` have been drawn\r\n             * (datasets are drawn in the reverse order). Note that this hook will not be called\r\n             * if the datasets drawing has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeTooltipDraw\r\n             * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\r\n             * the tooltip drawing is cancelled until another `render` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Object} args.tooltip - The tooltip.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart tooltip drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterTooltipDraw\r\n             * @desc Called after drawing the `tooltip`. Note that this hook will not\r\n             * be called if the tooltip drawing has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Object} args.tooltip - The tooltip.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeEvent\r\n             * @desc Called before processing the specified `event`. If any plugin returns `false`,\r\n             * the event will be discarded.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {IEvent} event - The event object.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterEvent\r\n             * @desc Called after the `event` has been consumed. Note that this hook\r\n             * will not be called if the `event` has been previously discarded.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {IEvent} event - The event object.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#resize\r\n             * @desc Called after the chart as been resized.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#destroy\r\n             * @desc Called after the chart as been destroyed.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n        }, { \"16\": 16, \"36\": 36 }], 23: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var Ticks = require(25);\r\n\r\n            defaults._set('scale', {\r\n                display: true,\r\n                position: 'left',\r\n                offset: false,\r\n\r\n                // grid line settings\r\n                gridLines: {\r\n                    display: true,\r\n                    color: 'rgba(0, 0, 0, 0.1)',\r\n                    lineWidth: 1,\r\n                    drawBorder: true,\r\n                    drawOnChartArea: true,\r\n                    drawTicks: true,\r\n                    tickMarkLength: 10,\r\n                    zeroLineWidth: 1,\r\n                    zeroLineColor: 'rgba(0,0,0,0.25)',\r\n                    zeroLineBorderDash: [],\r\n                    zeroLineBorderDashOffset: 0.0,\r\n                    offsetGridLines: false,\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0\r\n                },\r\n\r\n                // scale label\r\n                scaleLabel: {\r\n                    // display property\r\n                    display: false,\r\n\r\n                    // actual label\r\n                    labelString: '',\r\n\r\n                    // line height\r\n                    lineHeight: 1.2,\r\n\r\n                    // top/bottom padding\r\n                    padding: {\r\n                        top: 4,\r\n                        bottom: 4\r\n                    }\r\n                },\r\n\r\n                // label settings\r\n                ticks: {\r\n                    beginAtZero: false,\r\n                    minRotation: 0,\r\n                    maxRotation: 50,\r\n                    mirror: false,\r\n                    padding: 0,\r\n                    reverse: false,\r\n                    display: true,\r\n                    autoSkip: true,\r\n                    autoSkipPadding: 0,\r\n                    labelOffset: 0,\r\n                    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\r\n                    callback: Ticks.formatters.values,\r\n                    minor: {},\r\n                    major: {}\r\n                }\r\n            });\r\n\r\n            function labelsFromTicks(ticks) {\r\n                var labels = [];\r\n                var i, ilen;\r\n\r\n                for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n                    labels.push(ticks[i].label);\r\n                }\r\n\r\n                return labels;\r\n            }\r\n\r\n            function getLineValue(scale, index, offsetGridLines) {\r\n                var lineValue = scale.getPixelForTick(index);\r\n\r\n                if (offsetGridLines) {\r\n                    if (index === 0) {\r\n                        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\r\n                    } else {\r\n                        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\r\n                    }\r\n                }\r\n                return lineValue;\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                function computeTextSize(context, tick, font) {\r\n                    return helpers.isArray(tick) ?\r\n                        helpers.longestText(context, font, tick) :\r\n                        context.measureText(tick).width;\r\n                }\r\n\r\n                function parseFontOptions(options) {\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var globalDefaults = defaults.global;\r\n                    var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\r\n                    var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\r\n                    var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\r\n\r\n                    return {\r\n                        size: size,\r\n                        style: style,\r\n                        family: family,\r\n                        font: helpers.fontString(size, style, family)\r\n                    };\r\n                }\r\n\r\n                function parseLineHeight(options) {\r\n                    return helpers.options.toLineHeight(\r\n                        helpers.valueOrDefault(options.lineHeight, 1.2),\r\n                        helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\r\n                }\r\n\r\n                Chart.Scale = Element.extend({\r\n                    /**\r\n                     * Get the padding needed for the scale\r\n                     * @method getPadding\r\n                     * @private\r\n                     * @returns {Padding} the necessary padding\r\n                     */\r\n                    getPadding: function() {\r\n                        var me = this;\r\n                        return {\r\n                            left: me.paddingLeft || 0,\r\n                            top: me.paddingTop || 0,\r\n                            right: me.paddingRight || 0,\r\n                            bottom: me.paddingBottom || 0\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the scale tick objects ({label, major})\r\n                     * @since 2.7\r\n                     */\r\n                    getTicks: function() {\r\n                        return this._ticks;\r\n                    },\r\n\r\n                    // These methods are ordered by lifecyle. Utilities then follow.\r\n                    // Any function defined here is inherited by all scale types.\r\n                    // Any function can be extended by the scale type\r\n\r\n                    mergeTicksOptions: function() {\r\n                        var ticks = this.options.ticks;\r\n                        if (ticks.minor === false) {\r\n                            ticks.minor = {\r\n                                display: false\r\n                            };\r\n                        }\r\n                        if (ticks.major === false) {\r\n                            ticks.major = {\r\n                                display: false\r\n                            };\r\n                        }\r\n                        for (var key in ticks) {\r\n                            if (key !== 'major' && key !== 'minor') {\r\n                                if (typeof ticks.minor[key] === 'undefined') {\r\n                                    ticks.minor[key] = ticks[key];\r\n                                }\r\n                                if (typeof ticks.major[key] === 'undefined') {\r\n                                    ticks.major[key] = ticks[key];\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    beforeUpdate: function() {\r\n                        helpers.callback(this.options.beforeUpdate, [this]);\r\n                    },\r\n                    update: function(maxWidth, maxHeight, margins) {\r\n                        var me = this;\r\n                        var i, ilen, labels, label, ticks, tick;\r\n\r\n                        // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                        me.beforeUpdate();\r\n\r\n                        // Absorb the master measurements\r\n                        me.maxWidth = maxWidth;\r\n                        me.maxHeight = maxHeight;\r\n                        me.margins = helpers.extend({\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: 0,\r\n                            bottom: 0\r\n                        }, margins);\r\n                        me.longestTextCache = me.longestTextCache || {};\r\n\r\n                        // Dimensions\r\n                        me.beforeSetDimensions();\r\n                        me.setDimensions();\r\n                        me.afterSetDimensions();\r\n\r\n                        // Data min/max\r\n                        me.beforeDataLimits();\r\n                        me.determineDataLimits();\r\n                        me.afterDataLimits();\r\n\r\n                        // Ticks - `this.ticks` is now DEPRECATED!\r\n                        // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\r\n                        // and must not be accessed directly from outside this class. `this.ticks` being\r\n                        // around for long time and not marked as private, we can't change its structure\r\n                        // without unexpected breaking changes. If you need to access the scale ticks,\r\n                        // use scale.getTicks() instead.\r\n\r\n                        me.beforeBuildTicks();\r\n\r\n                        // New implementations should return an array of objects but for BACKWARD COMPAT,\r\n                        // we still support no return (`this.ticks` internally set by calling this method).\r\n                        ticks = me.buildTicks() || [];\r\n\r\n                        me.afterBuildTicks();\r\n\r\n                        me.beforeTickToLabelConversion();\r\n\r\n                        // New implementations should return the formatted tick labels but for BACKWARD\r\n                        // COMPAT, we still support no return (`this.ticks` internally changed by calling\r\n                        // this method and supposed to contain only string values).\r\n                        labels = me.convertTicksToLabels(ticks) || me.ticks;\r\n\r\n                        me.afterTickToLabelConversion();\r\n\r\n                        me.ticks = labels;   // BACKWARD COMPATIBILITY\r\n\r\n                        // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\r\n\r\n                        // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\r\n                        for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n                            label = labels[i];\r\n                            tick = ticks[i];\r\n                            if (!tick) {\r\n                                ticks.push(tick = {\r\n                                    label: label,\r\n                                    major: false\r\n                                });\r\n                            } else {\r\n                                tick.label = label;\r\n                            }\r\n                        }\r\n\r\n                        me._ticks = ticks;\r\n\r\n                        // Tick Rotation\r\n                        me.beforeCalculateTickRotation();\r\n                        me.calculateTickRotation();\r\n                        me.afterCalculateTickRotation();\r\n                        // Fit\r\n                        me.beforeFit();\r\n                        me.fit();\r\n                        me.afterFit();\r\n                        //\r\n                        me.afterUpdate();\r\n\r\n                        return me.minSize;\r\n                    },\r\n                    afterUpdate: function() {\r\n                        helpers.callback(this.options.afterUpdate, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeSetDimensions: function() {\r\n                        helpers.callback(this.options.beforeSetDimensions, [this]);\r\n                    },\r\n                    setDimensions: function() {\r\n                        var me = this;\r\n                        // Set the unconstrained dimension before label rotation\r\n                        if (me.isHorizontal()) {\r\n                            // Reset position before calculating rotation\r\n                            me.width = me.maxWidth;\r\n                            me.left = 0;\r\n                            me.right = me.width;\r\n                        } else {\r\n                            me.height = me.maxHeight;\r\n\r\n                            // Reset position before calculating rotation\r\n                            me.top = 0;\r\n                            me.bottom = me.height;\r\n                        }\r\n\r\n                        // Reset padding\r\n                        me.paddingLeft = 0;\r\n                        me.paddingTop = 0;\r\n                        me.paddingRight = 0;\r\n                        me.paddingBottom = 0;\r\n                    },\r\n                    afterSetDimensions: function() {\r\n                        helpers.callback(this.options.afterSetDimensions, [this]);\r\n                    },\r\n\r\n                    // Data limits\r\n                    beforeDataLimits: function() {\r\n                        helpers.callback(this.options.beforeDataLimits, [this]);\r\n                    },\r\n                    determineDataLimits: helpers.noop,\r\n                    afterDataLimits: function() {\r\n                        helpers.callback(this.options.afterDataLimits, [this]);\r\n                    },\r\n\r\n                    //\r\n                    beforeBuildTicks: function() {\r\n                        helpers.callback(this.options.beforeBuildTicks, [this]);\r\n                    },\r\n                    buildTicks: helpers.noop,\r\n                    afterBuildTicks: function() {\r\n                        helpers.callback(this.options.afterBuildTicks, [this]);\r\n                    },\r\n\r\n                    beforeTickToLabelConversion: function() {\r\n                        helpers.callback(this.options.beforeTickToLabelConversion, [this]);\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        // Convert ticks to strings\r\n                        var tickOpts = me.options.ticks;\r\n                        me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\r\n                    },\r\n                    afterTickToLabelConversion: function() {\r\n                        helpers.callback(this.options.afterTickToLabelConversion, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeCalculateTickRotation: function() {\r\n                        helpers.callback(this.options.beforeCalculateTickRotation, [this]);\r\n                    },\r\n                    calculateTickRotation: function() {\r\n                        var me = this;\r\n                        var context = me.ctx;\r\n                        var tickOpts = me.options.ticks;\r\n                        var labels = labelsFromTicks(me._ticks);\r\n\r\n                        // Get the width of each grid by calculating the difference\r\n                        // between x offsets between 0 and 1.\r\n                        var tickFont = parseFontOptions(tickOpts);\r\n                        context.font = tickFont.font;\r\n\r\n                        var labelRotation = tickOpts.minRotation || 0;\r\n\r\n                        if (labels.length && me.options.display && me.isHorizontal()) {\r\n                            var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\r\n                            var labelWidth = originalLabelWidth;\r\n                            var cosRotation, sinRotation;\r\n\r\n                            // Allow 3 pixels x2 padding either side for label readability\r\n                            var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\r\n\r\n                            // Max label rotation can be set or default to 90 - also act as a loop counter\r\n                            while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\r\n                                var angleRadians = helpers.toRadians(labelRotation);\r\n                                cosRotation = Math.cos(angleRadians);\r\n                                sinRotation = Math.sin(angleRadians);\r\n\r\n                                if (sinRotation * originalLabelWidth > me.maxHeight) {\r\n                                    // go back one step\r\n                                    labelRotation--;\r\n                                    break;\r\n                                }\r\n\r\n                                labelRotation++;\r\n                                labelWidth = cosRotation * originalLabelWidth;\r\n                            }\r\n                        }\r\n\r\n                        me.labelRotation = labelRotation;\r\n                    },\r\n                    afterCalculateTickRotation: function() {\r\n                        helpers.callback(this.options.afterCalculateTickRotation, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeFit: function() {\r\n                        helpers.callback(this.options.beforeFit, [this]);\r\n                    },\r\n                    fit: function() {\r\n                        var me = this;\r\n                        // Reset\r\n                        var minSize = me.minSize = {\r\n                            width: 0,\r\n                            height: 0\r\n                        };\r\n\r\n                        var labels = labelsFromTicks(me._ticks);\r\n\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n                        var scaleLabelOpts = opts.scaleLabel;\r\n                        var gridLineOpts = opts.gridLines;\r\n                        var display = opts.display;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        var tickFont = parseFontOptions(tickOpts);\r\n                        var tickMarkLength = opts.gridLines.tickMarkLength;\r\n\r\n                        // Width\r\n                        if (isHorizontal) {\r\n                            // subtract the margins to line up with the chartArea if we are a full width scale\r\n                            minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\r\n                        } else {\r\n                            minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n                        }\r\n\r\n                        // height\r\n                        if (isHorizontal) {\r\n                            minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n                        } else {\r\n                            minSize.height = me.maxHeight; // fill all the height\r\n                        }\r\n\r\n                        // Are we showing a title for the scale?\r\n                        if (scaleLabelOpts.display && display) {\r\n                            var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\r\n                            var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\r\n                            var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\r\n\r\n                            if (isHorizontal) {\r\n                                minSize.height += deltaHeight;\r\n                            } else {\r\n                                minSize.width += deltaHeight;\r\n                            }\r\n                        }\r\n\r\n                        // Don't bother fitting the ticks if we are not showing them\r\n                        if (tickOpts.display && display) {\r\n                            var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\r\n                            var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\r\n                            var lineSpace = tickFont.size * 0.5;\r\n                            var tickPadding = me.options.ticks.padding;\r\n\r\n                            if (isHorizontal) {\r\n                                // A horizontal axis is more constrained by the height.\r\n                                me.longestLabelWidth = largestTextWidth;\r\n\r\n                                var angleRadians = helpers.toRadians(me.labelRotation);\r\n                                var cosRotation = Math.cos(angleRadians);\r\n                                var sinRotation = Math.sin(angleRadians);\r\n\r\n                                // TODO - improve this calculation\r\n                                var labelHeight = (sinRotation * largestTextWidth)\r\n                                    + (tickFont.size * tallestLabelHeightInLines)\r\n                                    + (lineSpace * (tallestLabelHeightInLines - 1))\r\n                                    + lineSpace; // padding\r\n\r\n                                minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\r\n\r\n                                me.ctx.font = tickFont.font;\r\n                                var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\r\n                                var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\r\n\r\n                                // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\r\n                                // which means that the right padding is dominated by the font height\r\n                                if (me.labelRotation !== 0) {\r\n                                    me.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\r\n                                    me.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\r\n                                } else {\r\n                                    me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\r\n                                    me.paddingRight = lastLabelWidth / 2 + 3;\r\n                                }\r\n                            } else {\r\n                                // A vertical axis is more constrained by the width. Labels are the\r\n                                // dominant factor here, so get that length first and account for padding\r\n                                if (tickOpts.mirror) {\r\n                                    largestTextWidth = 0;\r\n                                } else {\r\n                                    // use lineSpace for consistency with horizontal axis\r\n                                    // tickPadding is not implemented for horizontal\r\n                                    largestTextWidth += tickPadding + lineSpace;\r\n                                }\r\n\r\n                                minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\r\n\r\n                                me.paddingTop = tickFont.size / 2;\r\n                                me.paddingBottom = tickFont.size / 2;\r\n                            }\r\n                        }\r\n\r\n                        me.handleMargins();\r\n\r\n                        me.width = minSize.width;\r\n                        me.height = minSize.height;\r\n                    },\r\n\r\n                    /**\r\n                     * Handle margins and padding interactions\r\n                     * @private\r\n                     */\r\n                    handleMargins: function() {\r\n                        var me = this;\r\n                        if (me.margins) {\r\n                            me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\r\n                            me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\r\n                            me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\r\n                            me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\r\n                        }\r\n                    },\r\n\r\n                    afterFit: function() {\r\n                        helpers.callback(this.options.afterFit, [this]);\r\n                    },\r\n\r\n                    // Shared Methods\r\n                    isHorizontal: function() {\r\n                        return this.options.position === 'top' || this.options.position === 'bottom';\r\n                    },\r\n                    isFullWidth: function() {\r\n                        return (this.options.fullWidth);\r\n                    },\r\n\r\n                    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\r\n                    getRightValue: function(rawValue) {\r\n                        // Null and undefined values first\r\n                        if (helpers.isNullOrUndef(rawValue)) {\r\n                            return NaN;\r\n                        }\r\n                        // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\r\n                        if (typeof rawValue === 'number' && !isFinite(rawValue)) {\r\n                            return NaN;\r\n                        }\r\n                        // If it is in fact an object, dive in one more level\r\n                        if (rawValue) {\r\n                            if (this.isHorizontal()) {\r\n                                if (rawValue.x !== undefined) {\r\n                                    return this.getRightValue(rawValue.x);\r\n                                }\r\n                            } else if (rawValue.y !== undefined) {\r\n                                return this.getRightValue(rawValue.y);\r\n                            }\r\n                        }\r\n\r\n                        // Value is good, return it\r\n                        return rawValue;\r\n                    },\r\n\r\n                    /**\r\n                     * Used to get the value to display in the tooltip for the data at the given index\r\n                     * @param index\r\n                     * @param datasetIndex\r\n                     */\r\n                    getLabelForIndex: helpers.noop,\r\n\r\n                    /**\r\n                     * Returns the location of the given data point. Value can either be an index or a numerical value\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     * @param value\r\n                     * @param index\r\n                     * @param datasetIndex\r\n                     */\r\n                    getPixelForValue: helpers.noop,\r\n\r\n                    /**\r\n                     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     * @param pixel\r\n                     */\r\n                    getValueForPixel: helpers.noop,\r\n\r\n                    /**\r\n                     * Returns the location of the tick at the given index\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getPixelForTick: function(index) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        if (me.isHorizontal()) {\r\n                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n                            var tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\r\n                            var pixel = (tickWidth * index) + me.paddingLeft;\r\n\r\n                            if (offset) {\r\n                                pixel += tickWidth / 2;\r\n                            }\r\n\r\n                            var finalVal = me.left + Math.round(pixel);\r\n                            finalVal += me.isFullWidth() ? me.margins.left : 0;\r\n                            return finalVal;\r\n                        }\r\n                        var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\r\n                        return me.top + (index * (innerHeight / (me._ticks.length - 1)));\r\n                    },\r\n\r\n                    /**\r\n                     * Utility for getting the pixel location of a percentage of scale\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getPixelForDecimal: function(decimal) {\r\n                        var me = this;\r\n                        if (me.isHorizontal()) {\r\n                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n                            var valueOffset = (innerWidth * decimal) + me.paddingLeft;\r\n\r\n                            var finalVal = me.left + Math.round(valueOffset);\r\n                            finalVal += me.isFullWidth() ? me.margins.left : 0;\r\n                            return finalVal;\r\n                        }\r\n                        return me.top + (decimal * me.height);\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the pixel for the minimum chart value\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getBasePixel: function() {\r\n                        return this.getPixelForValue(this.getBaseValue());\r\n                    },\r\n\r\n                    getBaseValue: function() {\r\n                        var me = this;\r\n                        var min = me.min;\r\n                        var max = me.max;\r\n\r\n                        return me.beginAtZero ? 0 :\r\n                            min < 0 && max < 0 ? max :\r\n                                min > 0 && max > 0 ? min :\r\n                                    0;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns a subset of ticks to be plotted to avoid overlapping labels.\r\n                     * @private\r\n                     */\r\n                    _autoSkip: function(ticks) {\r\n                        var skipRatio;\r\n                        var me = this;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var optionTicks = me.options.ticks.minor;\r\n                        var tickCount = ticks.length;\r\n                        var labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n                        var cosRotation = Math.cos(labelRotationRadians);\r\n                        var longestRotatedLabel = me.longestLabelWidth * cosRotation;\r\n                        var result = [];\r\n                        var i, tick, shouldSkip;\r\n\r\n                        // figure out the maximum number of gridlines to show\r\n                        var maxTicks;\r\n                        if (optionTicks.maxTicksLimit) {\r\n                            maxTicks = optionTicks.maxTicksLimit;\r\n                        }\r\n\r\n                        if (isHorizontal) {\r\n                            skipRatio = false;\r\n\r\n                            if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\r\n                                skipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\r\n                            }\r\n\r\n                            // if they defined a max number of optionTicks,\r\n                            // increase skipRatio until that number is met\r\n                            if (maxTicks && tickCount > maxTicks) {\r\n                                skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\r\n                            }\r\n                        }\r\n\r\n                        for (i = 0; i < tickCount; i++) {\r\n                            tick = ticks[i];\r\n\r\n                            // Since we always show the last tick,we need may need to hide the last shown one before\r\n                            shouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\r\n                            if (shouldSkip && i !== tickCount - 1) {\r\n                                // leave tick in place but make sure it's not displayed (#4635)\r\n                                delete tick.label;\r\n                            }\r\n                            result.push(tick);\r\n                        }\r\n                        return result;\r\n                    },\r\n\r\n                    // Actually draw the scale on the canvas\r\n                    // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\r\n                    draw: function(chartArea) {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        if (!options.display) {\r\n                            return;\r\n                        }\r\n\r\n                        var context = me.ctx;\r\n                        var globalDefaults = defaults.global;\r\n                        var optionTicks = options.ticks.minor;\r\n                        var optionMajorTicks = options.ticks.major || optionTicks;\r\n                        var gridLines = options.gridLines;\r\n                        var scaleLabel = options.scaleLabel;\r\n\r\n                        var isRotated = me.labelRotation !== 0;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\r\n                        var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\r\n                        var tickFont = parseFontOptions(optionTicks);\r\n                        var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\r\n                        var majorTickFont = parseFontOptions(optionMajorTicks);\r\n\r\n                        var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\r\n\r\n                        var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\r\n                        var scaleLabelFont = parseFontOptions(scaleLabel);\r\n                        var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\r\n                        var labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n\r\n                        var itemsToDraw = [];\r\n\r\n                        var axisWidth = me.options.gridLines.lineWidth;\r\n                        var xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\r\n                        var xTickEnd = options.position === 'right' ? me.right + tl : me.right;\r\n                        var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\r\n                        var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\r\n\r\n                        helpers.each(ticks, function(tick, index) {\r\n                            // autoskipper skipped this tick (#4635)\r\n                            if (helpers.isNullOrUndef(tick.label)) {\r\n                                return;\r\n                            }\r\n\r\n                            var label = tick.label;\r\n                            var lineWidth, lineColor, borderDash, borderDashOffset;\r\n                            if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\r\n                                // Draw the first index specially\r\n                                lineWidth = gridLines.zeroLineWidth;\r\n                                lineColor = gridLines.zeroLineColor;\r\n                                borderDash = gridLines.zeroLineBorderDash;\r\n                                borderDashOffset = gridLines.zeroLineBorderDashOffset;\r\n                            } else {\r\n                                lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\r\n                                lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\r\n                                borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\r\n                                borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\r\n                            }\r\n\r\n                            // Common properties\r\n                            var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\r\n                            var textAlign = 'middle';\r\n                            var textBaseline = 'middle';\r\n                            var tickPadding = optionTicks.padding;\r\n\r\n                            if (isHorizontal) {\r\n                                var labelYOffset = tl + tickPadding;\r\n\r\n                                if (options.position === 'bottom') {\r\n                                    // bottom\r\n                                    textBaseline = !isRotated ? 'top' : 'middle';\r\n                                    textAlign = !isRotated ? 'center' : 'right';\r\n                                    labelY = me.top + labelYOffset;\r\n                                } else {\r\n                                    // top\r\n                                    textBaseline = !isRotated ? 'bottom' : 'middle';\r\n                                    textAlign = !isRotated ? 'center' : 'left';\r\n                                    labelY = me.bottom - labelYOffset;\r\n                                }\r\n\r\n                                var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\r\n                                if (xLineValue < me.left) {\r\n                                    lineColor = 'rgba(0,0,0,0)';\r\n                                }\r\n                                xLineValue += helpers.aliasPixel(lineWidth);\r\n\r\n                                labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\r\n\r\n                                tx1 = tx2 = x1 = x2 = xLineValue;\r\n                                ty1 = yTickStart;\r\n                                ty2 = yTickEnd;\r\n                                y1 = chartArea.top;\r\n                                y2 = chartArea.bottom + axisWidth;\r\n                            } else {\r\n                                var isLeft = options.position === 'left';\r\n                                var labelXOffset;\r\n\r\n                                if (optionTicks.mirror) {\r\n                                    textAlign = isLeft ? 'left' : 'right';\r\n                                    labelXOffset = tickPadding;\r\n                                } else {\r\n                                    textAlign = isLeft ? 'right' : 'left';\r\n                                    labelXOffset = tl + tickPadding;\r\n                                }\r\n\r\n                                labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\r\n\r\n                                var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\r\n                                if (yLineValue < me.top) {\r\n                                    lineColor = 'rgba(0,0,0,0)';\r\n                                }\r\n                                yLineValue += helpers.aliasPixel(lineWidth);\r\n\r\n                                labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\r\n\r\n                                tx1 = xTickStart;\r\n                                tx2 = xTickEnd;\r\n                                x1 = chartArea.left;\r\n                                x2 = chartArea.right + axisWidth;\r\n                                ty1 = ty2 = y1 = y2 = yLineValue;\r\n                            }\r\n\r\n                            itemsToDraw.push({\r\n                                tx1: tx1,\r\n                                ty1: ty1,\r\n                                tx2: tx2,\r\n                                ty2: ty2,\r\n                                x1: x1,\r\n                                y1: y1,\r\n                                x2: x2,\r\n                                y2: y2,\r\n                                labelX: labelX,\r\n                                labelY: labelY,\r\n                                glWidth: lineWidth,\r\n                                glColor: lineColor,\r\n                                glBorderDash: borderDash,\r\n                                glBorderDashOffset: borderDashOffset,\r\n                                rotation: -1 * labelRotationRadians,\r\n                                label: label,\r\n                                major: tick.major,\r\n                                textBaseline: textBaseline,\r\n                                textAlign: textAlign\r\n                            });\r\n                        });\r\n\r\n                        // Draw all of the tick labels, tick marks, and grid lines at the correct places\r\n                        helpers.each(itemsToDraw, function(itemToDraw) {\r\n                            if (gridLines.display) {\r\n                                context.save();\r\n                                context.lineWidth = itemToDraw.glWidth;\r\n                                context.strokeStyle = itemToDraw.glColor;\r\n                                if (context.setLineDash) {\r\n                                    context.setLineDash(itemToDraw.glBorderDash);\r\n                                    context.lineDashOffset = itemToDraw.glBorderDashOffset;\r\n                                }\r\n\r\n                                context.beginPath();\r\n\r\n                                if (gridLines.drawTicks) {\r\n                                    context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\r\n                                    context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\r\n                                }\r\n\r\n                                if (gridLines.drawOnChartArea) {\r\n                                    context.moveTo(itemToDraw.x1, itemToDraw.y1);\r\n                                    context.lineTo(itemToDraw.x2, itemToDraw.y2);\r\n                                }\r\n\r\n                                context.stroke();\r\n                                context.restore();\r\n                            }\r\n\r\n                            if (optionTicks.display) {\r\n                                // Make sure we draw text in the correct color and font\r\n                                context.save();\r\n                                context.translate(itemToDraw.labelX, itemToDraw.labelY);\r\n                                context.rotate(itemToDraw.rotation);\r\n                                context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\r\n                                context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\r\n                                context.textBaseline = itemToDraw.textBaseline;\r\n                                context.textAlign = itemToDraw.textAlign;\r\n\r\n                                var label = itemToDraw.label;\r\n                                if (helpers.isArray(label)) {\r\n                                    var lineCount = label.length;\r\n                                    var lineHeight = tickFont.size * 1.5;\r\n                                    var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\r\n\r\n                                    for (var i = 0; i < lineCount; ++i) {\r\n                                        // We just make sure the multiline element is a string here..\r\n                                        context.fillText('' + label[i], 0, y);\r\n                                        // apply same lineSpacing as calculated @ L#320\r\n                                        y += lineHeight;\r\n                                    }\r\n                                } else {\r\n                                    context.fillText(label, 0, 0);\r\n                                }\r\n                                context.restore();\r\n                            }\r\n                        });\r\n\r\n                        if (scaleLabel.display) {\r\n                            // Draw the scale label\r\n                            var scaleLabelX;\r\n                            var scaleLabelY;\r\n                            var rotation = 0;\r\n                            var halfLineHeight = parseLineHeight(scaleLabel) / 2;\r\n\r\n                            if (isHorizontal) {\r\n                                scaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\r\n                                scaleLabelY = options.position === 'bottom'\r\n                                    ? me.bottom - halfLineHeight - scaleLabelPadding.bottom\r\n                                    : me.top + halfLineHeight + scaleLabelPadding.top;\r\n                            } else {\r\n                                var isLeft = options.position === 'left';\r\n                                scaleLabelX = isLeft\r\n                                    ? me.left + halfLineHeight + scaleLabelPadding.top\r\n                                    : me.right - halfLineHeight - scaleLabelPadding.top;\r\n                                scaleLabelY = me.top + ((me.bottom - me.top) / 2);\r\n                                rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\r\n                            }\r\n\r\n                            context.save();\r\n                            context.translate(scaleLabelX, scaleLabelY);\r\n                            context.rotate(rotation);\r\n                            context.textAlign = 'center';\r\n                            context.textBaseline = 'middle';\r\n                            context.fillStyle = scaleLabelFontColor; // render in correct colour\r\n                            context.font = scaleLabelFont.font;\r\n                            context.fillText(scaleLabel.labelString, 0, 0);\r\n                            context.restore();\r\n                        }\r\n\r\n                        if (gridLines.drawBorder) {\r\n                            // Draw the line at the edge of the axis\r\n                            context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\r\n                            context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\r\n                            var x1 = me.left;\r\n                            var x2 = me.right + axisWidth;\r\n                            var y1 = me.top;\r\n                            var y2 = me.bottom + axisWidth;\r\n\r\n                            var aliasPixel = helpers.aliasPixel(context.lineWidth);\r\n                            if (isHorizontal) {\r\n                                y1 = y2 = options.position === 'top' ? me.bottom : me.top;\r\n                                y1 += aliasPixel;\r\n                                y2 += aliasPixel;\r\n                            } else {\r\n                                x1 = x2 = options.position === 'left' ? me.right : me.left;\r\n                                x1 += aliasPixel;\r\n                                x2 += aliasPixel;\r\n                            }\r\n\r\n                            context.beginPath();\r\n                            context.moveTo(x1, y1);\r\n                            context.lineTo(x2, y2);\r\n                            context.stroke();\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"25\": 25, \"36\": 36 }], 24: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.scaleService = {\r\n                    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\r\n                    // use the new chart options to grab the correct scale\r\n                    constructors: {},\r\n                    // Use a registration function so that we can move to an ES6 map when we no longer need to support\r\n                    // old browsers\r\n\r\n                    // Scale config defaults\r\n                    defaults: {},\r\n                    registerScaleType: function(type, scaleConstructor, scaleDefaults) {\r\n                        this.constructors[type] = scaleConstructor;\r\n                        this.defaults[type] = helpers.clone(scaleDefaults);\r\n                    },\r\n                    getScaleConstructor: function(type) {\r\n                        return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\r\n                    },\r\n                    getScaleDefaults: function(type) {\r\n                        // Return the scale defaults merged with the global settings so that we always use the latest ones\r\n                        return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\r\n                    },\r\n                    updateScaleDefaults: function(type, additions) {\r\n                        var me = this;\r\n                        if (me.defaults.hasOwnProperty(type)) {\r\n                            me.defaults[type] = helpers.extend(me.defaults[type], additions);\r\n                        }\r\n                    },\r\n                    addScalesToLayout: function(chart) {\r\n                        // Adds each scale to the chart.boxes array to be sized accordingly\r\n                        helpers.each(chart.scales, function(scale) {\r\n                            // Set ILayoutItem parameters for backwards compatibility\r\n                            scale.fullWidth = scale.options.fullWidth;\r\n                            scale.position = scale.options.position;\r\n                            scale.weight = scale.options.weight;\r\n                            layouts.addBox(chart, scale);\r\n                        });\r\n                    }\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"21\": 21, \"36\": 36 }], 25: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Namespace to hold static tick generation functions\r\n             * @namespace Chart.Ticks\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Namespace to hold formatters for different types of ticks\r\n                 * @namespace Chart.Ticks.formatters\r\n                 */\r\n                formatters: {\r\n                    /**\r\n                     * Formatter for value labels\r\n                     * @method Chart.Ticks.formatters.values\r\n                     * @param value the value to display\r\n                     * @return {String|Array} the label to display\r\n                     */\r\n                    values: function(value) {\r\n                        return helpers.isArray(value) ? value : '' + value;\r\n                    },\r\n\r\n                    /**\r\n                     * Formatter for linear numeric ticks\r\n                     * @method Chart.Ticks.formatters.linear\r\n                     * @param tickValue {Number} the value to be formatted\r\n                     * @param index {Number} the position of the tickValue parameter in the ticks array\r\n                     * @param ticks {Array<Number>} the list of ticks being converted\r\n                     * @return {String} string representation of the tickValue parameter\r\n                     */\r\n                    linear: function(tickValue, index, ticks) {\r\n                        // If we have lots of ticks, don't use the ones\r\n                        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\r\n\r\n                        // If we have a number like 2.5 as the delta, figure out how many decimal places we need\r\n                        if (Math.abs(delta) > 1) {\r\n                            if (tickValue !== Math.floor(tickValue)) {\r\n                                // not an integer\r\n                                delta = tickValue - Math.floor(tickValue);\r\n                            }\r\n                        }\r\n\r\n                        var logDelta = helpers.log10(Math.abs(delta));\r\n                        var tickString = '';\r\n\r\n                        if (tickValue !== 0) {\r\n                            var numDecimal = -1 * Math.floor(logDelta);\r\n                            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\r\n                            tickString = tickValue.toFixed(numDecimal);\r\n                        } else {\r\n                            tickString = '0'; // never show decimal places for 0\r\n                        }\r\n\r\n                        return tickString;\r\n                    },\r\n\r\n                    logarithmic: function(tickValue, index, ticks) {\r\n                        var remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\r\n\r\n                        if (tickValue === 0) {\r\n                            return '0';\r\n                        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\r\n                            return tickValue.toExponential();\r\n                        }\r\n                        return '';\r\n                    }\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 26: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                tooltips: {\r\n                    enabled: true,\r\n                    custom: null,\r\n                    mode: 'nearest',\r\n                    position: 'average',\r\n                    intersect: true,\r\n                    backgroundColor: 'rgba(0,0,0,0.8)',\r\n                    titleFontStyle: 'bold',\r\n                    titleSpacing: 2,\r\n                    titleMarginBottom: 6,\r\n                    titleFontColor: '#fff',\r\n                    titleAlign: 'left',\r\n                    bodySpacing: 2,\r\n                    bodyFontColor: '#fff',\r\n                    bodyAlign: 'left',\r\n                    footerFontStyle: 'bold',\r\n                    footerSpacing: 2,\r\n                    footerMarginTop: 6,\r\n                    footerFontColor: '#fff',\r\n                    footerAlign: 'left',\r\n                    yPadding: 6,\r\n                    xPadding: 6,\r\n                    caretPadding: 2,\r\n                    caretSize: 5,\r\n                    cornerRadius: 6,\r\n                    multiKeyBackground: '#fff',\r\n                    displayColors: true,\r\n                    borderColor: 'rgba(0,0,0,0)',\r\n                    borderWidth: 0,\r\n                    callbacks: {\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeTitle: helpers.noop,\r\n                        title: function(tooltipItems, data) {\r\n                            // Pick first xLabel for now\r\n                            var title = '';\r\n                            var labels = data.labels;\r\n                            var labelCount = labels ? labels.length : 0;\r\n\r\n                            if (tooltipItems.length > 0) {\r\n                                var item = tooltipItems[0];\r\n\r\n                                if (item.xLabel) {\r\n                                    title = item.xLabel;\r\n                                } else if (labelCount > 0 && item.index < labelCount) {\r\n                                    title = labels[item.index];\r\n                                }\r\n                            }\r\n\r\n                            return title;\r\n                        },\r\n                        afterTitle: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeBody: helpers.noop,\r\n\r\n                        // Args are: (tooltipItem, data)\r\n                        beforeLabel: helpers.noop,\r\n                        label: function(tooltipItem, data) {\r\n                            var label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\r\n                            if (label) {\r\n                                label += ': ';\r\n                            }\r\n                            label += tooltipItem.yLabel;\r\n                            return label;\r\n                        },\r\n                        labelColor: function(tooltipItem, chart) {\r\n                            var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n                            var activeElement = meta.data[tooltipItem.index];\r\n                            var view = activeElement._view;\r\n                            return {\r\n                                borderColor: view.borderColor,\r\n                                backgroundColor: view.backgroundColor\r\n                            };\r\n                        },\r\n                        labelTextColor: function() {\r\n                            return this._options.bodyFontColor;\r\n                        },\r\n                        afterLabel: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        afterBody: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeFooter: helpers.noop,\r\n                        footer: helpers.noop,\r\n                        afterFooter: helpers.noop\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                /**\r\n                   * Helper method to merge the opacity into a color\r\n                   */\r\n                function mergeOpacity(colorString, opacity) {\r\n                    var color = helpers.color(colorString);\r\n                    return color.alpha(opacity * color.alpha()).rgbaString();\r\n                }\r\n\r\n                // Helper to push or concat based on if the 2nd parameter is an array or not\r\n                function pushOrConcat(base, toPush) {\r\n                    if (toPush) {\r\n                        if (helpers.isArray(toPush)) {\r\n                            // base = base.concat(toPush);\r\n                            Array.prototype.push.apply(base, toPush);\r\n                        } else {\r\n                            base.push(toPush);\r\n                        }\r\n                    }\r\n\r\n                    return base;\r\n                }\r\n\r\n                // Private helper to create a tooltip item model\r\n                // @param element : the chart element (point, arc, bar) to create the tooltip item for\r\n                // @return : new tooltip item\r\n                function createTooltipItem(element) {\r\n                    var xScale = element._xScale;\r\n                    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\r\n                    var index = element._index;\r\n                    var datasetIndex = element._datasetIndex;\r\n\r\n                    return {\r\n                        xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\r\n                        yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\r\n                        index: index,\r\n                        datasetIndex: datasetIndex,\r\n                        x: element._model.x,\r\n                        y: element._model.y\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Helper to get the reset model for the tooltip\r\n                 * @param tooltipOpts {Object} the tooltip options\r\n                 */\r\n                function getBaseModel(tooltipOpts) {\r\n                    var globalDefaults = defaults.global;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n\r\n                    return {\r\n                        // Positioning\r\n                        xPadding: tooltipOpts.xPadding,\r\n                        yPadding: tooltipOpts.yPadding,\r\n                        xAlign: tooltipOpts.xAlign,\r\n                        yAlign: tooltipOpts.yAlign,\r\n\r\n                        // Body\r\n                        bodyFontColor: tooltipOpts.bodyFontColor,\r\n                        _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\r\n                        _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\r\n                        _bodyAlign: tooltipOpts.bodyAlign,\r\n                        bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\r\n                        bodySpacing: tooltipOpts.bodySpacing,\r\n\r\n                        // Title\r\n                        titleFontColor: tooltipOpts.titleFontColor,\r\n                        _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\r\n                        _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\r\n                        titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\r\n                        _titleAlign: tooltipOpts.titleAlign,\r\n                        titleSpacing: tooltipOpts.titleSpacing,\r\n                        titleMarginBottom: tooltipOpts.titleMarginBottom,\r\n\r\n                        // Footer\r\n                        footerFontColor: tooltipOpts.footerFontColor,\r\n                        _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\r\n                        _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\r\n                        footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\r\n                        _footerAlign: tooltipOpts.footerAlign,\r\n                        footerSpacing: tooltipOpts.footerSpacing,\r\n                        footerMarginTop: tooltipOpts.footerMarginTop,\r\n\r\n                        // Appearance\r\n                        caretSize: tooltipOpts.caretSize,\r\n                        cornerRadius: tooltipOpts.cornerRadius,\r\n                        backgroundColor: tooltipOpts.backgroundColor,\r\n                        opacity: 0,\r\n                        legendColorBackground: tooltipOpts.multiKeyBackground,\r\n                        displayColors: tooltipOpts.displayColors,\r\n                        borderColor: tooltipOpts.borderColor,\r\n                        borderWidth: tooltipOpts.borderWidth\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Get the size of the tooltip\r\n                 */\r\n                function getTooltipSize(tooltip, model) {\r\n                    var ctx = tooltip._chart.ctx;\r\n\r\n                    var height = model.yPadding * 2; // Tooltip Padding\r\n                    var width = 0;\r\n\r\n                    // Count of all lines in the body\r\n                    var body = model.body;\r\n                    var combinedBodyLength = body.reduce(function(count, bodyItem) {\r\n                        return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\r\n                    }, 0);\r\n                    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\r\n\r\n                    var titleLineCount = model.title.length;\r\n                    var footerLineCount = model.footer.length;\r\n                    var titleFontSize = model.titleFontSize;\r\n                    var bodyFontSize = model.bodyFontSize;\r\n                    var footerFontSize = model.footerFontSize;\r\n\r\n                    height += titleLineCount * titleFontSize; // Title Lines\r\n                    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\r\n                    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\r\n                    height += combinedBodyLength * bodyFontSize; // Body Lines\r\n                    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\r\n                    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\r\n                    height += footerLineCount * (footerFontSize); // Footer Lines\r\n                    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\r\n\r\n                    // Title width\r\n                    var widthPadding = 0;\r\n                    var maxLineWidth = function(line) {\r\n                        width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n                    };\r\n\r\n                    ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\r\n                    helpers.each(model.title, maxLineWidth);\r\n\r\n                    // Body width\r\n                    ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\r\n                    helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\r\n\r\n                    // Body lines may include some extra width due to the color box\r\n                    widthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\r\n                    helpers.each(body, function(bodyItem) {\r\n                        helpers.each(bodyItem.before, maxLineWidth);\r\n                        helpers.each(bodyItem.lines, maxLineWidth);\r\n                        helpers.each(bodyItem.after, maxLineWidth);\r\n                    });\r\n\r\n                    // Reset back to 0\r\n                    widthPadding = 0;\r\n\r\n                    // Footer width\r\n                    ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\r\n                    helpers.each(model.footer, maxLineWidth);\r\n\r\n                    // Add padding\r\n                    width += 2 * model.xPadding;\r\n\r\n                    return {\r\n                        width: width,\r\n                        height: height\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Helper to get the alignment of a tooltip given the size\r\n                 */\r\n                function determineAlignment(tooltip, size) {\r\n                    var model = tooltip._model;\r\n                    var chart = tooltip._chart;\r\n                    var chartArea = tooltip._chart.chartArea;\r\n                    var xAlign = 'center';\r\n                    var yAlign = 'center';\r\n\r\n                    if (model.y < size.height) {\r\n                        yAlign = 'top';\r\n                    } else if (model.y > (chart.height - size.height)) {\r\n                        yAlign = 'bottom';\r\n                    }\r\n\r\n                    var lf, rf; // functions to determine left, right alignment\r\n                    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\r\n                    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\r\n                    var midX = (chartArea.left + chartArea.right) / 2;\r\n                    var midY = (chartArea.top + chartArea.bottom) / 2;\r\n\r\n                    if (yAlign === 'center') {\r\n                        lf = function(x) {\r\n                            return x <= midX;\r\n                        };\r\n                        rf = function(x) {\r\n                            return x > midX;\r\n                        };\r\n                    } else {\r\n                        lf = function(x) {\r\n                            return x <= (size.width / 2);\r\n                        };\r\n                        rf = function(x) {\r\n                            return x >= (chart.width - (size.width / 2));\r\n                        };\r\n                    }\r\n\r\n                    olf = function(x) {\r\n                        return x + size.width + model.caretSize + model.caretPadding > chart.width;\r\n                    };\r\n                    orf = function(x) {\r\n                        return x - size.width - model.caretSize - model.caretPadding < 0;\r\n                    };\r\n                    yf = function(y) {\r\n                        return y <= midY ? 'top' : 'bottom';\r\n                    };\r\n\r\n                    if (lf(model.x)) {\r\n                        xAlign = 'left';\r\n\r\n                        // Is tooltip too wide and goes over the right side of the chart.?\r\n                        if (olf(model.x)) {\r\n                            xAlign = 'center';\r\n                            yAlign = yf(model.y);\r\n                        }\r\n                    } else if (rf(model.x)) {\r\n                        xAlign = 'right';\r\n\r\n                        // Is tooltip too wide and goes outside left edge of canvas?\r\n                        if (orf(model.x)) {\r\n                            xAlign = 'center';\r\n                            yAlign = yf(model.y);\r\n                        }\r\n                    }\r\n\r\n                    var opts = tooltip._options;\r\n                    return {\r\n                        xAlign: opts.xAlign ? opts.xAlign : xAlign,\r\n                        yAlign: opts.yAlign ? opts.yAlign : yAlign\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\r\n                 */\r\n                function getBackgroundPoint(vm, size, alignment, chart) {\r\n                    // Background Position\r\n                    var x = vm.x;\r\n                    var y = vm.y;\r\n\r\n                    var caretSize = vm.caretSize;\r\n                    var caretPadding = vm.caretPadding;\r\n                    var cornerRadius = vm.cornerRadius;\r\n                    var xAlign = alignment.xAlign;\r\n                    var yAlign = alignment.yAlign;\r\n                    var paddingAndSize = caretSize + caretPadding;\r\n                    var radiusAndPadding = cornerRadius + caretPadding;\r\n\r\n                    if (xAlign === 'right') {\r\n                        x -= size.width;\r\n                    } else if (xAlign === 'center') {\r\n                        x -= (size.width / 2);\r\n                        if (x + size.width > chart.width) {\r\n                            x = chart.width - size.width;\r\n                        }\r\n                        if (x < 0) {\r\n                            x = 0;\r\n                        }\r\n                    }\r\n\r\n                    if (yAlign === 'top') {\r\n                        y += paddingAndSize;\r\n                    } else if (yAlign === 'bottom') {\r\n                        y -= size.height + paddingAndSize;\r\n                    } else {\r\n                        y -= (size.height / 2);\r\n                    }\r\n\r\n                    if (yAlign === 'center') {\r\n                        if (xAlign === 'left') {\r\n                            x += paddingAndSize;\r\n                        } else if (xAlign === 'right') {\r\n                            x -= paddingAndSize;\r\n                        }\r\n                    } else if (xAlign === 'left') {\r\n                        x -= radiusAndPadding;\r\n                    } else if (xAlign === 'right') {\r\n                        x += radiusAndPadding;\r\n                    }\r\n\r\n                    return {\r\n                        x: x,\r\n                        y: y\r\n                    };\r\n                }\r\n\r\n                Chart.Tooltip = Element.extend({\r\n                    initialize: function() {\r\n                        this._model = getBaseModel(this._options);\r\n                        this._lastActive = [];\r\n                    },\r\n\r\n                    // Get the title\r\n                    // Args are: (tooltipItem, data)\r\n                    getTitle: function() {\r\n                        var me = this;\r\n                        var opts = me._options;\r\n                        var callbacks = opts.callbacks;\r\n\r\n                        var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\r\n                        var title = callbacks.title.apply(me, arguments);\r\n                        var afterTitle = callbacks.afterTitle.apply(me, arguments);\r\n\r\n                        var lines = [];\r\n                        lines = pushOrConcat(lines, beforeTitle);\r\n                        lines = pushOrConcat(lines, title);\r\n                        lines = pushOrConcat(lines, afterTitle);\r\n\r\n                        return lines;\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getBeforeBody: function() {\r\n                        var lines = this._options.callbacks.beforeBody.apply(this, arguments);\r\n                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getBody: function(tooltipItems, data) {\r\n                        var me = this;\r\n                        var callbacks = me._options.callbacks;\r\n                        var bodyItems = [];\r\n\r\n                        helpers.each(tooltipItems, function(tooltipItem) {\r\n                            var bodyItem = {\r\n                                before: [],\r\n                                lines: [],\r\n                                after: []\r\n                            };\r\n                            pushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\r\n                            pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\r\n                            pushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\r\n\r\n                            bodyItems.push(bodyItem);\r\n                        });\r\n\r\n                        return bodyItems;\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getAfterBody: function() {\r\n                        var lines = this._options.callbacks.afterBody.apply(this, arguments);\r\n                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n                    },\r\n\r\n                    // Get the footer and beforeFooter and afterFooter lines\r\n                    // Args are: (tooltipItem, data)\r\n                    getFooter: function() {\r\n                        var me = this;\r\n                        var callbacks = me._options.callbacks;\r\n\r\n                        var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\r\n                        var footer = callbacks.footer.apply(me, arguments);\r\n                        var afterFooter = callbacks.afterFooter.apply(me, arguments);\r\n\r\n                        var lines = [];\r\n                        lines = pushOrConcat(lines, beforeFooter);\r\n                        lines = pushOrConcat(lines, footer);\r\n                        lines = pushOrConcat(lines, afterFooter);\r\n\r\n                        return lines;\r\n                    },\r\n\r\n                    update: function(changed) {\r\n                        var me = this;\r\n                        var opts = me._options;\r\n\r\n                        // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\r\n                        // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\r\n                        // which breaks any animations.\r\n                        var existingModel = me._model;\r\n                        var model = me._model = getBaseModel(opts);\r\n                        var active = me._active;\r\n\r\n                        var data = me._data;\r\n\r\n                        // In the case where active.length === 0 we need to keep these at existing values for good animations\r\n                        var alignment = {\r\n                            xAlign: existingModel.xAlign,\r\n                            yAlign: existingModel.yAlign\r\n                        };\r\n                        var backgroundPoint = {\r\n                            x: existingModel.x,\r\n                            y: existingModel.y\r\n                        };\r\n                        var tooltipSize = {\r\n                            width: existingModel.width,\r\n                            height: existingModel.height\r\n                        };\r\n                        var tooltipPosition = {\r\n                            x: existingModel.caretX,\r\n                            y: existingModel.caretY\r\n                        };\r\n\r\n                        var i, len;\r\n\r\n                        if (active.length) {\r\n                            model.opacity = 1;\r\n\r\n                            var labelColors = [];\r\n                            var labelTextColors = [];\r\n                            tooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\r\n\r\n                            var tooltipItems = [];\r\n                            for (i = 0, len = active.length; i < len; ++i) {\r\n                                tooltipItems.push(createTooltipItem(active[i]));\r\n                            }\r\n\r\n                            // If the user provided a filter function, use it to modify the tooltip items\r\n                            if (opts.filter) {\r\n                                tooltipItems = tooltipItems.filter(function(a) {\r\n                                    return opts.filter(a, data);\r\n                                });\r\n                            }\r\n\r\n                            // If the user provided a sorting function, use it to modify the tooltip items\r\n                            if (opts.itemSort) {\r\n                                tooltipItems = tooltipItems.sort(function(a, b) {\r\n                                    return opts.itemSort(a, b, data);\r\n                                });\r\n                            }\r\n\r\n                            // Determine colors for boxes\r\n                            helpers.each(tooltipItems, function(tooltipItem) {\r\n                                labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\r\n                                labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\r\n                            });\r\n\r\n                            // Build the Text Lines\r\n                            model.title = me.getTitle(tooltipItems, data);\r\n                            model.beforeBody = me.getBeforeBody(tooltipItems, data);\r\n                            model.body = me.getBody(tooltipItems, data);\r\n                            model.afterBody = me.getAfterBody(tooltipItems, data);\r\n                            model.footer = me.getFooter(tooltipItems, data);\r\n\r\n                            // Initial positioning and colors\r\n                            model.x = Math.round(tooltipPosition.x);\r\n                            model.y = Math.round(tooltipPosition.y);\r\n                            model.caretPadding = opts.caretPadding;\r\n                            model.labelColors = labelColors;\r\n                            model.labelTextColors = labelTextColors;\r\n\r\n                            // data points\r\n                            model.dataPoints = tooltipItems;\r\n\r\n                            // We need to determine alignment of the tooltip\r\n                            tooltipSize = getTooltipSize(this, model);\r\n                            alignment = determineAlignment(this, tooltipSize);\r\n                            // Final Size and Position\r\n                            backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\r\n                        } else {\r\n                            model.opacity = 0;\r\n                        }\r\n\r\n                        model.xAlign = alignment.xAlign;\r\n                        model.yAlign = alignment.yAlign;\r\n                        model.x = backgroundPoint.x;\r\n                        model.y = backgroundPoint.y;\r\n                        model.width = tooltipSize.width;\r\n                        model.height = tooltipSize.height;\r\n\r\n                        // Point where the caret on the tooltip points to\r\n                        model.caretX = tooltipPosition.x;\r\n                        model.caretY = tooltipPosition.y;\r\n\r\n                        me._model = model;\r\n\r\n                        if (changed && opts.custom) {\r\n                            opts.custom.call(me, model);\r\n                        }\r\n\r\n                        return me;\r\n                    },\r\n                    drawCaret: function(tooltipPoint, size) {\r\n                        var ctx = this._chart.ctx;\r\n                        var vm = this._view;\r\n                        var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\r\n\r\n                        ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n                        ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n                        ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n                    },\r\n                    getCaretPosition: function(tooltipPoint, size, vm) {\r\n                        var x1, x2, x3, y1, y2, y3;\r\n                        var caretSize = vm.caretSize;\r\n                        var cornerRadius = vm.cornerRadius;\r\n                        var xAlign = vm.xAlign;\r\n                        var yAlign = vm.yAlign;\r\n                        var ptX = tooltipPoint.x;\r\n                        var ptY = tooltipPoint.y;\r\n                        var width = size.width;\r\n                        var height = size.height;\r\n\r\n                        if (yAlign === 'center') {\r\n                            y2 = ptY + (height / 2);\r\n\r\n                            if (xAlign === 'left') {\r\n                                x1 = ptX;\r\n                                x2 = x1 - caretSize;\r\n                                x3 = x1;\r\n\r\n                                y1 = y2 + caretSize;\r\n                                y3 = y2 - caretSize;\r\n                            } else {\r\n                                x1 = ptX + width;\r\n                                x2 = x1 + caretSize;\r\n                                x3 = x1;\r\n\r\n                                y1 = y2 - caretSize;\r\n                                y3 = y2 + caretSize;\r\n                            }\r\n                        } else {\r\n                            if (xAlign === 'left') {\r\n                                x2 = ptX + cornerRadius + (caretSize);\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            } else if (xAlign === 'right') {\r\n                                x2 = ptX + width - cornerRadius - caretSize;\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            } else {\r\n                                x2 = vm.caretX;\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            }\r\n                            if (yAlign === 'top') {\r\n                                y1 = ptY;\r\n                                y2 = y1 - caretSize;\r\n                                y3 = y1;\r\n                            } else {\r\n                                y1 = ptY + height;\r\n                                y2 = y1 + caretSize;\r\n                                y3 = y1;\r\n                                // invert drawing order\r\n                                var tmp = x3;\r\n                                x3 = x1;\r\n                                x1 = tmp;\r\n                            }\r\n                        }\r\n                        return { x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3 };\r\n                    },\r\n                    drawTitle: function(pt, vm, ctx, opacity) {\r\n                        var title = vm.title;\r\n\r\n                        if (title.length) {\r\n                            ctx.textAlign = vm._titleAlign;\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            var titleFontSize = vm.titleFontSize;\r\n                            var titleSpacing = vm.titleSpacing;\r\n\r\n                            ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\r\n                            ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\r\n                            var i, len;\r\n                            for (i = 0, len = title.length; i < len; ++i) {\r\n                                ctx.fillText(title[i], pt.x, pt.y);\r\n                                pt.y += titleFontSize + titleSpacing; // Line Height and spacing\r\n\r\n                                if (i + 1 === title.length) {\r\n                                    pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    drawBody: function(pt, vm, ctx, opacity) {\r\n                        var bodyFontSize = vm.bodyFontSize;\r\n                        var bodySpacing = vm.bodySpacing;\r\n                        var body = vm.body;\r\n\r\n                        ctx.textAlign = vm._bodyAlign;\r\n                        ctx.textBaseline = 'top';\r\n                        ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\r\n                        // Before Body\r\n                        var xLinePadding = 0;\r\n                        var fillLineOfText = function(line) {\r\n                            ctx.fillText(line, pt.x + xLinePadding, pt.y);\r\n                            pt.y += bodyFontSize + bodySpacing;\r\n                        };\r\n\r\n                        // Before body lines\r\n                        ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\r\n                        helpers.each(vm.beforeBody, fillLineOfText);\r\n\r\n                        var drawColorBoxes = vm.displayColors;\r\n                        xLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\r\n\r\n                        // Draw body lines now\r\n                        helpers.each(body, function(bodyItem, i) {\r\n                            var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\r\n                            ctx.fillStyle = textColor;\r\n                            helpers.each(bodyItem.before, fillLineOfText);\r\n\r\n                            helpers.each(bodyItem.lines, function(line) {\r\n                                // Draw Legend-like boxes if needed\r\n                                if (drawColorBoxes) {\r\n                                    // Fill a white rect so that colours merge nicely if the opacity is < 1\r\n                                    ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\r\n                                    ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n                                    // Border\r\n                                    ctx.lineWidth = 1;\r\n                                    ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\r\n                                    ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n                                    // Inner square\r\n                                    ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\r\n                                    ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\r\n                                    ctx.fillStyle = textColor;\r\n                                }\r\n\r\n                                fillLineOfText(line);\r\n                            });\r\n\r\n                            helpers.each(bodyItem.after, fillLineOfText);\r\n                        });\r\n\r\n                        // Reset back to 0 for after body\r\n                        xLinePadding = 0;\r\n\r\n                        // After body lines\r\n                        helpers.each(vm.afterBody, fillLineOfText);\r\n                        pt.y -= bodySpacing; // Remove last body spacing\r\n                    },\r\n                    drawFooter: function(pt, vm, ctx, opacity) {\r\n                        var footer = vm.footer;\r\n\r\n                        if (footer.length) {\r\n                            pt.y += vm.footerMarginTop;\r\n\r\n                            ctx.textAlign = vm._footerAlign;\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\r\n                            ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\r\n                            helpers.each(footer, function(line) {\r\n                                ctx.fillText(line, pt.x, pt.y);\r\n                                pt.y += vm.footerFontSize + vm.footerSpacing;\r\n                            });\r\n                        }\r\n                    },\r\n                    drawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\r\n                        ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\r\n                        ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\r\n                        ctx.lineWidth = vm.borderWidth;\r\n                        var xAlign = vm.xAlign;\r\n                        var yAlign = vm.yAlign;\r\n                        var x = pt.x;\r\n                        var y = pt.y;\r\n                        var width = tooltipSize.width;\r\n                        var height = tooltipSize.height;\r\n                        var radius = vm.cornerRadius;\r\n\r\n                        ctx.beginPath();\r\n                        ctx.moveTo(x + radius, y);\r\n                        if (yAlign === 'top') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + width - radius, y);\r\n                        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n                        if (yAlign === 'center' && xAlign === 'right') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + width, y + height - radius);\r\n                        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n                        if (yAlign === 'bottom') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + radius, y + height);\r\n                        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n                        if (yAlign === 'center' && xAlign === 'left') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x, y + radius);\r\n                        ctx.quadraticCurveTo(x, y, x + radius, y);\r\n                        ctx.closePath();\r\n\r\n                        ctx.fill();\r\n\r\n                        if (vm.borderWidth > 0) {\r\n                            ctx.stroke();\r\n                        }\r\n                    },\r\n                    draw: function() {\r\n                        var ctx = this._chart.ctx;\r\n                        var vm = this._view;\r\n\r\n                        if (vm.opacity === 0) {\r\n                            return;\r\n                        }\r\n\r\n                        var tooltipSize = {\r\n                            width: vm.width,\r\n                            height: vm.height\r\n                        };\r\n                        var pt = {\r\n                            x: vm.x,\r\n                            y: vm.y\r\n                        };\r\n\r\n                        // IE11/Edge does not like very small opacities, so snap to 0\r\n                        var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\r\n\r\n                        // Truthy/falsey value for empty tooltip\r\n                        var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\r\n\r\n                        if (this._options.enabled && hasTooltipContent) {\r\n                            // Draw Background\r\n                            this.drawBackground(pt, vm, ctx, tooltipSize, opacity);\r\n\r\n                            // Draw Title, Body, and Footer\r\n                            pt.x += vm.xPadding;\r\n                            pt.y += vm.yPadding;\r\n\r\n                            // Titles\r\n                            this.drawTitle(pt, vm, ctx, opacity);\r\n\r\n                            // Body\r\n                            this.drawBody(pt, vm, ctx, opacity);\r\n\r\n                            // Footer\r\n                            this.drawFooter(pt, vm, ctx, opacity);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Handle an event\r\n                     * @private\r\n                     * @param {IEvent} event - The event to handle\r\n                     * @returns {Boolean} true if the tooltip changed\r\n                     */\r\n                    handleEvent: function(e) {\r\n                        var me = this;\r\n                        var options = me._options;\r\n                        var changed = false;\r\n\r\n                        me._lastActive = me._lastActive || [];\r\n\r\n                        // Find Active Elements for tooltips\r\n                        if (e.type === 'mouseout') {\r\n                            me._active = [];\r\n                        } else {\r\n                            me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\r\n                        }\r\n\r\n                        // Remember Last Actives\r\n                        changed = !helpers.arrayEquals(me._active, me._lastActive);\r\n\r\n                        // Only handle target event on tooltip change\r\n                        if (changed) {\r\n                            me._lastActive = me._active;\r\n\r\n                            if (options.enabled || options.custom) {\r\n                                me._eventPosition = {\r\n                                    x: e.x,\r\n                                    y: e.y\r\n                                };\r\n\r\n                                me.update(true);\r\n                                me.pivot();\r\n                            }\r\n                        }\r\n\r\n                        return changed;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * @namespace Chart.Tooltip.positioners\r\n                 */\r\n                Chart.Tooltip.positioners = {\r\n                    /**\r\n                     * Average mode places the tooltip at the average position of the elements shown\r\n                     * @function Chart.Tooltip.positioners.average\r\n                     * @param elements {ChartElement[]} the elements being displayed in the tooltip\r\n                     * @returns {Point} tooltip position\r\n                     */\r\n                    average: function(elements) {\r\n                        if (!elements.length) {\r\n                            return false;\r\n                        }\r\n\r\n                        var i, len;\r\n                        var x = 0;\r\n                        var y = 0;\r\n                        var count = 0;\r\n\r\n                        for (i = 0, len = elements.length; i < len; ++i) {\r\n                            var el = elements[i];\r\n                            if (el && el.hasValue()) {\r\n                                var pos = el.tooltipPosition();\r\n                                x += pos.x;\r\n                                y += pos.y;\r\n                                ++count;\r\n                            }\r\n                        }\r\n\r\n                        return {\r\n                            x: Math.round(x / count),\r\n                            y: Math.round(y / count)\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Gets the tooltip position nearest of the item nearest to the event position\r\n                     * @function Chart.Tooltip.positioners.nearest\r\n                     * @param elements {Chart.Element[]} the tooltip elements\r\n                     * @param eventPosition {Point} the position of the event in canvas coordinates\r\n                     * @returns {Point} the tooltip position\r\n                     */\r\n                    nearest: function(elements, eventPosition) {\r\n                        var x = eventPosition.x;\r\n                        var y = eventPosition.y;\r\n                        var minDistance = Number.POSITIVE_INFINITY;\r\n                        var i, len, nearestElement;\r\n\r\n                        for (i = 0, len = elements.length; i < len; ++i) {\r\n                            var el = elements[i];\r\n                            if (el && el.hasValue()) {\r\n                                var center = el.getCenterPoint();\r\n                                var d = helpers.distanceBetweenPoints(eventPosition, center);\r\n\r\n                                if (d < minDistance) {\r\n                                    minDistance = d;\r\n                                    nearestElement = el;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (nearestElement) {\r\n                            var tp = nearestElement.tooltipPosition();\r\n                            x = tp.x;\r\n                            y = tp.y;\r\n                        }\r\n\r\n                        return {\r\n                            x: x,\r\n                            y: y\r\n                        };\r\n                    }\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 27: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    arc: {\r\n                        backgroundColor: defaults.global.defaultColor,\r\n                        borderColor: '#fff',\r\n                        borderWidth: 2\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = Element.extend({\r\n                inLabelRange: function(mouseX) {\r\n                    var vm = this._view;\r\n\r\n                    if (vm) {\r\n                        return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                inRange: function(chartX, chartY) {\r\n                    var vm = this._view;\r\n\r\n                    if (vm) {\r\n                        var pointRelativePosition = helpers.getAngleFromPoint(vm, { x: chartX, y: chartY });\r\n                        var angle = pointRelativePosition.angle;\r\n                        var distance = pointRelativePosition.distance;\r\n\r\n                        // Sanitise angle range\r\n                        var startAngle = vm.startAngle;\r\n                        var endAngle = vm.endAngle;\r\n                        while (endAngle < startAngle) {\r\n                            endAngle += 2.0 * Math.PI;\r\n                        }\r\n                        while (angle > endAngle) {\r\n                            angle -= 2.0 * Math.PI;\r\n                        }\r\n                        while (angle < startAngle) {\r\n                            angle += 2.0 * Math.PI;\r\n                        }\r\n\r\n                        // Check if within the range of the open/close angle\r\n                        var betweenAngles = (angle >= startAngle && angle <= endAngle);\r\n                        var withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\r\n\r\n                        return (betweenAngles && withinRadius);\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\r\n                    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\r\n                    return {\r\n                        x: vm.x + Math.cos(halfAngle) * halfRadius,\r\n                        y: vm.y + Math.sin(halfAngle) * halfRadius\r\n                    };\r\n                },\r\n\r\n                getArea: function() {\r\n                    var vm = this._view;\r\n                    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\r\n                    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\r\n\r\n                    return {\r\n                        x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\r\n                        y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\r\n                    };\r\n                },\r\n\r\n                draw: function() {\r\n                    var ctx = this._chart.ctx;\r\n                    var vm = this._view;\r\n                    var sA = vm.startAngle;\r\n                    var eA = vm.endAngle;\r\n\r\n                    ctx.beginPath();\r\n\r\n                    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\r\n                    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\r\n\r\n                    ctx.closePath();\r\n                    ctx.strokeStyle = vm.borderColor;\r\n                    ctx.lineWidth = vm.borderWidth;\r\n\r\n                    ctx.fillStyle = vm.backgroundColor;\r\n\r\n                    ctx.fill();\r\n                    ctx.lineJoin = 'bevel';\r\n\r\n                    if (vm.borderWidth) {\r\n                        ctx.stroke();\r\n                    }\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 28: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            var globalDefaults = defaults.global;\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    line: {\r\n                        tension: 0.4,\r\n                        backgroundColor: globalDefaults.defaultColor,\r\n                        borderWidth: 3,\r\n                        borderColor: globalDefaults.defaultColor,\r\n                        borderCapStyle: 'butt',\r\n                        borderDash: [],\r\n                        borderDashOffset: 0.0,\r\n                        borderJoinStyle: 'miter',\r\n                        capBezierPoints: true,\r\n                        fill: true, // do we fill in the area between the line and its base axis\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = Element.extend({\r\n                draw: function() {\r\n                    var me = this;\r\n                    var vm = me._view;\r\n                    var ctx = me._chart.ctx;\r\n                    var spanGaps = vm.spanGaps;\r\n                    var points = me._children.slice(); // clone array\r\n                    var globalOptionLineElements = globalDefaults.elements.line;\r\n                    var lastDrawnIndex = -1;\r\n                    var index, current, previous, currentVM;\r\n\r\n                    // If we are looping, adding the first point again\r\n                    if (me._loop && points.length) {\r\n                        points.push(points[0]);\r\n                    }\r\n\r\n                    ctx.save();\r\n\r\n                    // Stroke Line Options\r\n                    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\r\n\r\n                    // IE 9 and 10 do not support line dash\r\n                    if (ctx.setLineDash) {\r\n                        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\r\n                    }\r\n\r\n                    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\r\n                    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\r\n                    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\r\n                    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\r\n\r\n                    // Stroke Line\r\n                    ctx.beginPath();\r\n                    lastDrawnIndex = -1;\r\n\r\n                    for (index = 0; index < points.length; ++index) {\r\n                        current = points[index];\r\n                        previous = helpers.previousItem(points, index);\r\n                        currentVM = current._view;\r\n\r\n                        // First point moves to it's starting position no matter what\r\n                        if (index === 0) {\r\n                            if (!currentVM.skip) {\r\n                                ctx.moveTo(currentVM.x, currentVM.y);\r\n                                lastDrawnIndex = index;\r\n                            }\r\n                        } else {\r\n                            previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\r\n\r\n                            if (!currentVM.skip) {\r\n                                if ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\r\n                                    // There was a gap and this is the first point after the gap\r\n                                    ctx.moveTo(currentVM.x, currentVM.y);\r\n                                } else {\r\n                                    // Line to next point\r\n                                    helpers.canvas.lineTo(ctx, previous._view, current._view);\r\n                                }\r\n                                lastDrawnIndex = index;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    ctx.stroke();\r\n                    ctx.restore();\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 29: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            var defaultColor = defaults.global.defaultColor;\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    point: {\r\n                        radius: 3,\r\n                        pointStyle: 'circle',\r\n                        backgroundColor: defaultColor,\r\n                        borderColor: defaultColor,\r\n                        borderWidth: 1,\r\n                        // Hover\r\n                        hitRadius: 1,\r\n                        hoverRadius: 4,\r\n                        hoverBorderWidth: 1\r\n                    }\r\n                }\r\n            });\r\n\r\n            function xRange(mouseX) {\r\n                var vm = this._view;\r\n                return vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\r\n            }\r\n\r\n            function yRange(mouseY) {\r\n                var vm = this._view;\r\n                return vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\r\n            }\r\n\r\n            module.exports = Element.extend({\r\n                inRange: function(mouseX, mouseY) {\r\n                    var vm = this._view;\r\n                    return vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\r\n                },\r\n\r\n                inLabelRange: xRange,\r\n                inXRange: xRange,\r\n                inYRange: yRange,\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y\r\n                    };\r\n                },\r\n\r\n                getArea: function() {\r\n                    return Math.PI * Math.pow(this._view.radius, 2);\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y,\r\n                        padding: vm.radius + vm.borderWidth\r\n                    };\r\n                },\r\n\r\n                draw: function(chartArea) {\r\n                    var vm = this._view;\r\n                    var model = this._model;\r\n                    var ctx = this._chart.ctx;\r\n                    var pointStyle = vm.pointStyle;\r\n                    var radius = vm.radius;\r\n                    var x = vm.x;\r\n                    var y = vm.y;\r\n                    var color = helpers.color;\r\n                    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\r\n                    var ratio = 0;\r\n\r\n                    if (vm.skip) {\r\n                        return;\r\n                    }\r\n\r\n                    ctx.strokeStyle = vm.borderColor || defaultColor;\r\n                    ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\r\n                    ctx.fillStyle = vm.backgroundColor || defaultColor;\r\n\r\n                    // Cliping for Points.\r\n                    // going out from inner charArea?\r\n                    if ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\r\n                        // Point fade out\r\n                        if (model.x < chartArea.left) {\r\n                            ratio = (x - model.x) / (chartArea.left - model.x);\r\n                        } else if (chartArea.right * errMargin < model.x) {\r\n                            ratio = (model.x - x) / (model.x - chartArea.right);\r\n                        } else if (model.y < chartArea.top) {\r\n                            ratio = (y - model.y) / (chartArea.top - model.y);\r\n                        } else if (chartArea.bottom * errMargin < model.y) {\r\n                            ratio = (model.y - y) / (model.y - chartArea.bottom);\r\n                        }\r\n                        ratio = Math.round(ratio * 100) / 100;\r\n                        ctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\r\n                        ctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\r\n                    }\r\n\r\n                    helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 30: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    rectangle: {\r\n                        backgroundColor: defaults.global.defaultColor,\r\n                        borderColor: defaults.global.defaultColor,\r\n                        borderSkipped: 'bottom',\r\n                        borderWidth: 0\r\n                    }\r\n                }\r\n            });\r\n\r\n            function isVertical(bar) {\r\n                return bar._view.width !== undefined;\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the bounds of the bar regardless of the orientation\r\n             * @param bar {Chart.Element.Rectangle} the bar\r\n             * @return {Bounds} bounds of the bar\r\n             * @private\r\n             */\r\n            function getBarBounds(bar) {\r\n                var vm = bar._view;\r\n                var x1, x2, y1, y2;\r\n\r\n                if (isVertical(bar)) {\r\n                    // vertical\r\n                    var halfWidth = vm.width / 2;\r\n                    x1 = vm.x - halfWidth;\r\n                    x2 = vm.x + halfWidth;\r\n                    y1 = Math.min(vm.y, vm.base);\r\n                    y2 = Math.max(vm.y, vm.base);\r\n                } else {\r\n                    // horizontal bar\r\n                    var halfHeight = vm.height / 2;\r\n                    x1 = Math.min(vm.x, vm.base);\r\n                    x2 = Math.max(vm.x, vm.base);\r\n                    y1 = vm.y - halfHeight;\r\n                    y2 = vm.y + halfHeight;\r\n                }\r\n\r\n                return {\r\n                    left: x1,\r\n                    top: y1,\r\n                    right: x2,\r\n                    bottom: y2\r\n                };\r\n            }\r\n\r\n            module.exports = Element.extend({\r\n                draw: function() {\r\n                    var ctx = this._chart.ctx;\r\n                    var vm = this._view;\r\n                    var left, right, top, bottom, signX, signY, borderSkipped;\r\n                    var borderWidth = vm.borderWidth;\r\n\r\n                    if (!vm.horizontal) {\r\n                        // bar\r\n                        left = vm.x - vm.width / 2;\r\n                        right = vm.x + vm.width / 2;\r\n                        top = vm.y;\r\n                        bottom = vm.base;\r\n                        signX = 1;\r\n                        signY = bottom > top ? 1 : -1;\r\n                        borderSkipped = vm.borderSkipped || 'bottom';\r\n                    } else {\r\n                        // horizontal bar\r\n                        left = vm.base;\r\n                        right = vm.x;\r\n                        top = vm.y - vm.height / 2;\r\n                        bottom = vm.y + vm.height / 2;\r\n                        signX = right > left ? 1 : -1;\r\n                        signY = 1;\r\n                        borderSkipped = vm.borderSkipped || 'left';\r\n                    }\r\n\r\n                    // Canvas doesn't allow us to stroke inside the width so we can\r\n                    // adjust the sizes to fit if we're setting a stroke on the line\r\n                    if (borderWidth) {\r\n                        // borderWidth shold be less than bar width and bar height.\r\n                        var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n                        borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n                        var halfStroke = borderWidth / 2;\r\n                        // Adjust borderWidth when bar top position is near vm.base(zero).\r\n                        var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n                        var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n                        var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n                        var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n                        // not become a vertical line?\r\n                        if (borderLeft !== borderRight) {\r\n                            top = borderTop;\r\n                            bottom = borderBottom;\r\n                        }\r\n                        // not become a horizontal line?\r\n                        if (borderTop !== borderBottom) {\r\n                            left = borderLeft;\r\n                            right = borderRight;\r\n                        }\r\n                    }\r\n\r\n                    ctx.beginPath();\r\n                    ctx.fillStyle = vm.backgroundColor;\r\n                    ctx.strokeStyle = vm.borderColor;\r\n                    ctx.lineWidth = borderWidth;\r\n\r\n                    // Corner points, from bottom-left to bottom-right clockwise\r\n                    // | 1 2 |\r\n                    // | 0 3 |\r\n                    var corners = [\r\n                        [left, bottom],\r\n                        [left, top],\r\n                        [right, top],\r\n                        [right, bottom]\r\n                    ];\r\n\r\n                    // Find first (starting) corner with fallback to 'bottom'\r\n                    var borders = ['bottom', 'left', 'top', 'right'];\r\n                    var startCorner = borders.indexOf(borderSkipped, 0);\r\n                    if (startCorner === -1) {\r\n                        startCorner = 0;\r\n                    }\r\n\r\n                    function cornerAt(index) {\r\n                        return corners[(startCorner + index) % 4];\r\n                    }\r\n\r\n                    // Draw rectangle from 'startCorner'\r\n                    var corner = cornerAt(0);\r\n                    ctx.moveTo(corner[0], corner[1]);\r\n\r\n                    for (var i = 1; i < 4; i++) {\r\n                        corner = cornerAt(i);\r\n                        ctx.lineTo(corner[0], corner[1]);\r\n                    }\r\n\r\n                    ctx.fill();\r\n                    if (borderWidth) {\r\n                        ctx.stroke();\r\n                    }\r\n                },\r\n\r\n                height: function() {\r\n                    var vm = this._view;\r\n                    return vm.base - vm.y;\r\n                },\r\n\r\n                inRange: function(mouseX, mouseY) {\r\n                    var inRange = false;\r\n\r\n                    if (this._view) {\r\n                        var bounds = getBarBounds(this);\r\n                        inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                    }\r\n\r\n                    return inRange;\r\n                },\r\n\r\n                inLabelRange: function(mouseX, mouseY) {\r\n                    var me = this;\r\n                    if (!me._view) {\r\n                        return false;\r\n                    }\r\n\r\n                    var inRange = false;\r\n                    var bounds = getBarBounds(me);\r\n\r\n                    if (isVertical(me)) {\r\n                        inRange = mouseX >= bounds.left && mouseX <= bounds.right;\r\n                    } else {\r\n                        inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                    }\r\n\r\n                    return inRange;\r\n                },\r\n\r\n                inXRange: function(mouseX) {\r\n                    var bounds = getBarBounds(this);\r\n                    return mouseX >= bounds.left && mouseX <= bounds.right;\r\n                },\r\n\r\n                inYRange: function(mouseY) {\r\n                    var bounds = getBarBounds(this);\r\n                    return mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                },\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    var x, y;\r\n                    if (isVertical(this)) {\r\n                        x = vm.x;\r\n                        y = (vm.y + vm.base) / 2;\r\n                    } else {\r\n                        x = (vm.x + vm.base) / 2;\r\n                        y = vm.y;\r\n                    }\r\n\r\n                    return { x: x, y: y };\r\n                },\r\n\r\n                getArea: function() {\r\n                    var vm = this._view;\r\n                    return vm.width * Math.abs(vm.y - vm.base);\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y\r\n                    };\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17 }], 31: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = {};\r\n            module.exports.Arc = require(27);\r\n            module.exports.Line = require(28);\r\n            module.exports.Point = require(29);\r\n            module.exports.Rectangle = require(30);\r\n        }, { \"27\": 27, \"28\": 28, \"29\": 29, \"30\": 30 }], 32: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * @namespace Chart.helpers.canvas\r\n             */\r\n            var exports = module.exports = {\r\n                /**\r\n                 * Clears the entire canvas associated to the given `chart`.\r\n                 * @param {Chart} chart - The chart for which to clear the canvas.\r\n                 */\r\n                clear: function(chart) {\r\n                    chart.ctx.clearRect(0, 0, chart.width, chart.height);\r\n                },\r\n\r\n                /**\r\n                 * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\r\n                 * given size (width, height) and the same `radius` for all corners.\r\n                 * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\r\n                 * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\r\n                 * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\r\n                 * @param {Number} width - The rectangle's width.\r\n                 * @param {Number} height - The rectangle's height.\r\n                 * @param {Number} radius - The rounded amount (in pixels) for the four corners.\r\n                 * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\r\n                 */\r\n                roundedRect: function(ctx, x, y, width, height, radius) {\r\n                    if (radius) {\r\n                        var rx = Math.min(radius, width / 2);\r\n                        var ry = Math.min(radius, height / 2);\r\n\r\n                        ctx.moveTo(x + rx, y);\r\n                        ctx.lineTo(x + width - rx, y);\r\n                        ctx.quadraticCurveTo(x + width, y, x + width, y + ry);\r\n                        ctx.lineTo(x + width, y + height - ry);\r\n                        ctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\r\n                        ctx.lineTo(x + rx, y + height);\r\n                        ctx.quadraticCurveTo(x, y + height, x, y + height - ry);\r\n                        ctx.lineTo(x, y + ry);\r\n                        ctx.quadraticCurveTo(x, y, x + rx, y);\r\n                    } else {\r\n                        ctx.rect(x, y, width, height);\r\n                    }\r\n                },\r\n\r\n                drawPoint: function(ctx, style, radius, x, y) {\r\n                    var type, edgeLength, xOffset, yOffset, height, size;\r\n\r\n                    if (style && typeof style === 'object') {\r\n                        type = style.toString();\r\n                        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n                            ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    if (isNaN(radius) || radius <= 0) {\r\n                        return;\r\n                    }\r\n\r\n                    switch (style) {\r\n                        // Default includes circle\r\n                        default:\r\n                            ctx.beginPath();\r\n                            ctx.arc(x, y, radius, 0, Math.PI * 2);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'triangle':\r\n                            ctx.beginPath();\r\n                            edgeLength = 3 * radius / Math.sqrt(3);\r\n                            height = edgeLength * Math.sqrt(3) / 2;\r\n                            ctx.moveTo(x - edgeLength / 2, y + height / 3);\r\n                            ctx.lineTo(x + edgeLength / 2, y + height / 3);\r\n                            ctx.lineTo(x, y - 2 * height / 3);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'rect':\r\n                            size = 1 / Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            ctx.fillRect(x - size, y - size, 2 * size, 2 * size);\r\n                            ctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\r\n                            break;\r\n                        case 'rectRounded':\r\n                            var offset = radius / Math.SQRT2;\r\n                            var leftX = x - offset;\r\n                            var topY = y - offset;\r\n                            var sideSize = Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'rectRot':\r\n                            size = 1 / Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x - size, y);\r\n                            ctx.lineTo(x, y + size);\r\n                            ctx.lineTo(x + size, y);\r\n                            ctx.lineTo(x, y - size);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'cross':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y + radius);\r\n                            ctx.lineTo(x, y - radius);\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'crossRot':\r\n                            ctx.beginPath();\r\n                            xOffset = Math.cos(Math.PI / 4) * radius;\r\n                            yOffset = Math.sin(Math.PI / 4) * radius;\r\n                            ctx.moveTo(x - xOffset, y - yOffset);\r\n                            ctx.lineTo(x + xOffset, y + yOffset);\r\n                            ctx.moveTo(x - xOffset, y + yOffset);\r\n                            ctx.lineTo(x + xOffset, y - yOffset);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'star':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y + radius);\r\n                            ctx.lineTo(x, y - radius);\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            xOffset = Math.cos(Math.PI / 4) * radius;\r\n                            yOffset = Math.sin(Math.PI / 4) * radius;\r\n                            ctx.moveTo(x - xOffset, y - yOffset);\r\n                            ctx.lineTo(x + xOffset, y + yOffset);\r\n                            ctx.moveTo(x - xOffset, y + yOffset);\r\n                            ctx.lineTo(x + xOffset, y - yOffset);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'line':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'dash':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                    }\r\n\r\n                    ctx.stroke();\r\n                },\r\n\r\n                clipArea: function(ctx, area) {\r\n                    ctx.save();\r\n                    ctx.beginPath();\r\n                    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\r\n                    ctx.clip();\r\n                },\r\n\r\n                unclipArea: function(ctx) {\r\n                    ctx.restore();\r\n                },\r\n\r\n                lineTo: function(ctx, previous, target, flip) {\r\n                    if (target.steppedLine) {\r\n                        if ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\r\n                            ctx.lineTo(previous.x, target.y);\r\n                        } else {\r\n                            ctx.lineTo(target.x, previous.y);\r\n                        }\r\n                        ctx.lineTo(target.x, target.y);\r\n                        return;\r\n                    }\r\n\r\n                    if (!target.tension) {\r\n                        ctx.lineTo(target.x, target.y);\r\n                        return;\r\n                    }\r\n\r\n                    ctx.bezierCurveTo(\r\n                        flip ? previous.controlPointPreviousX : previous.controlPointNextX,\r\n                        flip ? previous.controlPointPreviousY : previous.controlPointNextY,\r\n                        flip ? target.controlPointNextX : target.controlPointPreviousX,\r\n                        flip ? target.controlPointNextY : target.controlPointPreviousY,\r\n                        target.x,\r\n                        target.y);\r\n                }\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\r\n             * @namespace Chart.helpers.clear\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.clear = exports.clear;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\r\n             * @namespace Chart.helpers.drawRoundedRectangle\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.drawRoundedRectangle = function(ctx) {\r\n                ctx.beginPath();\r\n                exports.roundedRect.apply(exports, arguments);\r\n                ctx.closePath();\r\n            };\r\n        }, { \"33\": 33 }], 33: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            /**\r\n             * @namespace Chart.helpers\r\n             */\r\n            var helpers = {\r\n                /**\r\n                 * An empty function that can be used, for example, for optional callback.\r\n                 */\r\n                noop: function() { },\r\n\r\n                /**\r\n                 * Returns a unique id, sequentially generated from a global variable.\r\n                 * @returns {Number}\r\n                 * @function\r\n                 */\r\n                uid: (function() {\r\n                    var id = 0;\r\n                    return function() {\r\n                        return id++;\r\n                    };\r\n                }()),\r\n\r\n                /**\r\n                 * Returns true if `value` is neither null nor undefined, else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @since 2.7.0\r\n                 */\r\n                isNullOrUndef: function(value) {\r\n                    return value === null || typeof value === 'undefined';\r\n                },\r\n\r\n                /**\r\n                 * Returns true if `value` is an array, else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @function\r\n                 */\r\n                isArray: Array.isArray ? Array.isArray : function(value) {\r\n                    return Object.prototype.toString.call(value) === '[object Array]';\r\n                },\r\n\r\n                /**\r\n                 * Returns true if `value` is an object (excluding null), else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @since 2.7.0\r\n                 */\r\n                isObject: function(value) {\r\n                    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\r\n                },\r\n\r\n                /**\r\n                 * Returns `value` if defined, else returns `defaultValue`.\r\n                 * @param {*} value - The value to return if defined.\r\n                 * @param {*} defaultValue - The value to return if `value` is undefined.\r\n                 * @returns {*}\r\n                 */\r\n                valueOrDefault: function(value, defaultValue) {\r\n                    return typeof value === 'undefined' ? defaultValue : value;\r\n                },\r\n\r\n                /**\r\n                 * Returns value at the given `index` in array if defined, else returns `defaultValue`.\r\n                 * @param {Array} value - The array to lookup for value at `index`.\r\n                 * @param {Number} index - The index in `value` to lookup for value.\r\n                 * @param {*} defaultValue - The value to return if `value[index]` is undefined.\r\n                 * @returns {*}\r\n                 */\r\n                valueAtIndexOrDefault: function(value, index, defaultValue) {\r\n                    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\r\n                },\r\n\r\n                /**\r\n                 * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\r\n                 * value returned by `fn`. If `fn` is not a function, this method returns undefined.\r\n                 * @param {Function} fn - The function to call.\r\n                 * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\r\n                 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\r\n                 * @returns {*}\r\n                 */\r\n                callback: function(fn, args, thisArg) {\r\n                    if (fn && typeof fn.call === 'function') {\r\n                        return fn.apply(thisArg, args);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Note(SB) for performance sake, this method should only be used when loopable type\r\n                 * is unknown or in none intensive code (not called often and small loopable). Else\r\n                 * it's preferable to use a regular for() loop and save extra function calls.\r\n                 * @param {Object|Array} loopable - The object or array to be iterated.\r\n                 * @param {Function} fn - The function to call for each item.\r\n                 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\r\n                 * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\r\n                 */\r\n                each: function(loopable, fn, thisArg, reverse) {\r\n                    var i, len, keys;\r\n                    if (helpers.isArray(loopable)) {\r\n                        len = loopable.length;\r\n                        if (reverse) {\r\n                            for (i = len - 1; i >= 0; i--) {\r\n                                fn.call(thisArg, loopable[i], i);\r\n                            }\r\n                        } else {\r\n                            for (i = 0; i < len; i++) {\r\n                                fn.call(thisArg, loopable[i], i);\r\n                            }\r\n                        }\r\n                    } else if (helpers.isObject(loopable)) {\r\n                        keys = Object.keys(loopable);\r\n                        len = keys.length;\r\n                        for (i = 0; i < len; i++) {\r\n                            fn.call(thisArg, loopable[keys[i]], keys[i]);\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\r\n                 * @see http://stackoverflow.com/a/14853974\r\n                 * @param {Array} a0 - The array to compare\r\n                 * @param {Array} a1 - The array to compare\r\n                 * @returns {Boolean}\r\n                 */\r\n                arrayEquals: function(a0, a1) {\r\n                    var i, ilen, v0, v1;\r\n\r\n                    if (!a0 || !a1 || a0.length !== a1.length) {\r\n                        return false;\r\n                    }\r\n\r\n                    for (i = 0, ilen = a0.length; i < ilen; ++i) {\r\n                        v0 = a0[i];\r\n                        v1 = a1[i];\r\n\r\n                        if (v0 instanceof Array && v1 instanceof Array) {\r\n                            if (!helpers.arrayEquals(v0, v1)) {\r\n                                return false;\r\n                            }\r\n                        } else if (v0 !== v1) {\r\n                            // NOTE: two different object instances will never be equal: {x:20} != {x:20}\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                },\r\n\r\n                /**\r\n                 * Returns a deep copy of `source` without keeping references on objects and arrays.\r\n                 * @param {*} source - The value to clone.\r\n                 * @returns {*}\r\n                 */\r\n                clone: function(source) {\r\n                    if (helpers.isArray(source)) {\r\n                        return source.map(helpers.clone);\r\n                    }\r\n\r\n                    if (helpers.isObject(source)) {\r\n                        var target = {};\r\n                        var keys = Object.keys(source);\r\n                        var klen = keys.length;\r\n                        var k = 0;\r\n\r\n                        for (; k < klen; ++k) {\r\n                            target[keys[k]] = helpers.clone(source[keys[k]]);\r\n                        }\r\n\r\n                        return target;\r\n                    }\r\n\r\n                    return source;\r\n                },\r\n\r\n                /**\r\n                 * The default merger when Chart.helpers.merge is called without merger option.\r\n                 * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\r\n                 * @private\r\n                 */\r\n                _merger: function(key, target, source, options) {\r\n                    var tval = target[key];\r\n                    var sval = source[key];\r\n\r\n                    if (helpers.isObject(tval) && helpers.isObject(sval)) {\r\n                        helpers.merge(tval, sval, options);\r\n                    } else {\r\n                        target[key] = helpers.clone(sval);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Merges source[key] in target[key] only if target[key] is undefined.\r\n                 * @private\r\n                 */\r\n                _mergerIf: function(key, target, source) {\r\n                    var tval = target[key];\r\n                    var sval = source[key];\r\n\r\n                    if (helpers.isObject(tval) && helpers.isObject(sval)) {\r\n                        helpers.mergeIf(tval, sval);\r\n                    } else if (!target.hasOwnProperty(key)) {\r\n                        target[key] = helpers.clone(sval);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Recursively deep copies `source` properties into `target` with the given `options`.\r\n                 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n                 * @param {Object} target - The target object in which all sources are merged into.\r\n                 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\r\n                 * @param {Object} [options] - Merging options:\r\n                 * @param {Function} [options.merger] - The merge method (key, target, source, options)\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                merge: function(target, source, options) {\r\n                    var sources = helpers.isArray(source) ? source : [source];\r\n                    var ilen = sources.length;\r\n                    var merge, i, keys, klen, k;\r\n\r\n                    if (!helpers.isObject(target)) {\r\n                        return target;\r\n                    }\r\n\r\n                    options = options || {};\r\n                    merge = options.merger || helpers._merger;\r\n\r\n                    for (i = 0; i < ilen; ++i) {\r\n                        source = sources[i];\r\n                        if (!helpers.isObject(source)) {\r\n                            continue;\r\n                        }\r\n\r\n                        keys = Object.keys(source);\r\n                        for (k = 0, klen = keys.length; k < klen; ++k) {\r\n                            merge(keys[k], target, source, options);\r\n                        }\r\n                    }\r\n\r\n                    return target;\r\n                },\r\n\r\n                /**\r\n                 * Recursively deep copies `source` properties into `target` *only* if not defined in target.\r\n                 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n                 * @param {Object} target - The target object in which all sources are merged into.\r\n                 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                mergeIf: function(target, source) {\r\n                    return helpers.merge(target, source, { merger: helpers._mergerIf });\r\n                },\r\n\r\n                /**\r\n                 * Applies the contents of two or more objects together into the first object.\r\n                 * @param {Object} target - The target object in which all objects are merged into.\r\n                 * @param {Object} arg1 - Object containing additional properties to merge in target.\r\n                 * @param {Object} argN - Additional objects containing properties to merge in target.\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                extend: function(target) {\r\n                    var setFn = function(value, key) {\r\n                        target[key] = value;\r\n                    };\r\n                    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\r\n                        helpers.each(arguments[i], setFn);\r\n                    }\r\n                    return target;\r\n                },\r\n\r\n                /**\r\n                 * Basic javascript inheritance based on the model created in Backbone.js\r\n                 */\r\n                inherits: function(extensions) {\r\n                    var me = this;\r\n                    var ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\r\n                        return me.apply(this, arguments);\r\n                    };\r\n\r\n                    var Surrogate = function() {\r\n                        this.constructor = ChartElement;\r\n                    };\r\n\r\n                    Surrogate.prototype = me.prototype;\r\n                    ChartElement.prototype = new Surrogate();\r\n                    ChartElement.extend = helpers.inherits;\r\n\r\n                    if (extensions) {\r\n                        helpers.extend(ChartElement.prototype, extensions);\r\n                    }\r\n\r\n                    ChartElement.__super__ = me.prototype;\r\n                    return ChartElement;\r\n                }\r\n            };\r\n\r\n            module.exports = helpers;\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.callback instead.\r\n             * @function Chart.helpers.callCallback\r\n             * @deprecated since version 2.6.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.callCallback = helpers.callback;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Array.prototype.indexOf instead.\r\n             * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\r\n             * @function Chart.helpers.indexOf\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.indexOf = function(array, item, fromIndex) {\r\n                return Array.prototype.indexOf.call(array, item, fromIndex);\r\n            };\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\r\n             * @function Chart.helpers.getValueOrDefault\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.getValueOrDefault = helpers.valueOrDefault;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\r\n             * @function Chart.helpers.getValueAtIndexOrDefault\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n        }, {}], 34: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * Easing functions adapted from Robert Penner's easing equations.\r\n             * @namespace Chart.helpers.easingEffects\r\n             * @see http://www.robertpenner.com/easing/\r\n             */\r\n            var effects = {\r\n                linear: function(t) {\r\n                    return t;\r\n                },\r\n\r\n                easeInQuad: function(t) {\r\n                    return t * t;\r\n                },\r\n\r\n                easeOutQuad: function(t) {\r\n                    return -t * (t - 2);\r\n                },\r\n\r\n                easeInOutQuad: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t;\r\n                    }\r\n                    return -0.5 * ((--t) * (t - 2) - 1);\r\n                },\r\n\r\n                easeInCubic: function(t) {\r\n                    return t * t * t;\r\n                },\r\n\r\n                easeOutCubic: function(t) {\r\n                    return (t = t - 1) * t * t + 1;\r\n                },\r\n\r\n                easeInOutCubic: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t;\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * t + 2);\r\n                },\r\n\r\n                easeInQuart: function(t) {\r\n                    return t * t * t * t;\r\n                },\r\n\r\n                easeOutQuart: function(t) {\r\n                    return -((t = t - 1) * t * t * t - 1);\r\n                },\r\n\r\n                easeInOutQuart: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t * t;\r\n                    }\r\n                    return -0.5 * ((t -= 2) * t * t * t - 2);\r\n                },\r\n\r\n                easeInQuint: function(t) {\r\n                    return t * t * t * t * t;\r\n                },\r\n\r\n                easeOutQuint: function(t) {\r\n                    return (t = t - 1) * t * t * t * t + 1;\r\n                },\r\n\r\n                easeInOutQuint: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t * t * t;\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * t * t * t + 2);\r\n                },\r\n\r\n                easeInSine: function(t) {\r\n                    return -Math.cos(t * (Math.PI / 2)) + 1;\r\n                },\r\n\r\n                easeOutSine: function(t) {\r\n                    return Math.sin(t * (Math.PI / 2));\r\n                },\r\n\r\n                easeInOutSine: function(t) {\r\n                    return -0.5 * (Math.cos(Math.PI * t) - 1);\r\n                },\r\n\r\n                easeInExpo: function(t) {\r\n                    return (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\r\n                },\r\n\r\n                easeOutExpo: function(t) {\r\n                    return (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\r\n                },\r\n\r\n                easeInOutExpo: function(t) {\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * Math.pow(2, 10 * (t - 1));\r\n                    }\r\n                    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\r\n                },\r\n\r\n                easeInCirc: function(t) {\r\n                    if (t >= 1) {\r\n                        return t;\r\n                    }\r\n                    return -(Math.sqrt(1 - t * t) - 1);\r\n                },\r\n\r\n                easeOutCirc: function(t) {\r\n                    return Math.sqrt(1 - (t = t - 1) * t);\r\n                },\r\n\r\n                easeInOutCirc: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return -0.5 * (Math.sqrt(1 - t * t) - 1);\r\n                    }\r\n                    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\r\n                },\r\n\r\n                easeInElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.3;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\r\n                },\r\n\r\n                easeOutElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.3;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\r\n                },\r\n\r\n                easeInOutElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if ((t /= 0.5) === 2) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.45;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    if (t < 1) {\r\n                        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\r\n                    }\r\n                    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n                },\r\n                easeInBack: function(t) {\r\n                    var s = 1.70158;\r\n                    return t * t * ((s + 1) * t - s);\r\n                },\r\n\r\n                easeOutBack: function(t) {\r\n                    var s = 1.70158;\r\n                    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\r\n                },\r\n\r\n                easeInOutBack: function(t) {\r\n                    var s = 1.70158;\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n                },\r\n\r\n                easeInBounce: function(t) {\r\n                    return 1 - effects.easeOutBounce(1 - t);\r\n                },\r\n\r\n                easeOutBounce: function(t) {\r\n                    if (t < (1 / 2.75)) {\r\n                        return 7.5625 * t * t;\r\n                    }\r\n                    if (t < (2 / 2.75)) {\r\n                        return 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\r\n                    }\r\n                    if (t < (2.5 / 2.75)) {\r\n                        return 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\r\n                    }\r\n                    return 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\r\n                },\r\n\r\n                easeInOutBounce: function(t) {\r\n                    if (t < 0.5) {\r\n                        return effects.easeInBounce(t * 2) * 0.5;\r\n                    }\r\n                    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\r\n                }\r\n            };\r\n\r\n            module.exports = {\r\n                effects: effects\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\r\n             * @function Chart.helpers.easingEffects\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.easingEffects = effects;\r\n        }, { \"33\": 33 }], 35: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * @alias Chart.helpers.options\r\n             * @namespace\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Converts the given line height `value` in pixels for a specific font `size`.\r\n                 * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\r\n                 * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\r\n                 * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\r\n                 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\r\n                 * @since 2.7.0\r\n                 */\r\n                toLineHeight: function(value, size) {\r\n                    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\r\n                    if (!matches || matches[1] === 'normal') {\r\n                        return size * 1.2;\r\n                    }\r\n\r\n                    value = +matches[2];\r\n\r\n                    switch (matches[3]) {\r\n                        case 'px':\r\n                            return value;\r\n                        case '%':\r\n                            value /= 100;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n\r\n                    return size * value;\r\n                },\r\n\r\n                /**\r\n                 * Converts the given value into a padding object with pre-computed width/height.\r\n                 * @param {Number|Object} value - If a number, set the value to all TRBL component,\r\n                 *  else, if and object, use defined properties and sets undefined ones to 0.\r\n                 * @returns {Object} The padding values (top, right, bottom, left, width, height)\r\n                 * @since 2.7.0\r\n                 */\r\n                toPadding: function(value) {\r\n                    var t, r, b, l;\r\n\r\n                    if (helpers.isObject(value)) {\r\n                        t = +value.top || 0;\r\n                        r = +value.right || 0;\r\n                        b = +value.bottom || 0;\r\n                        l = +value.left || 0;\r\n                    } else {\r\n                        t = r = b = l = +value || 0;\r\n                    }\r\n\r\n                    return {\r\n                        top: t,\r\n                        right: r,\r\n                        bottom: b,\r\n                        left: l,\r\n                        height: t + b,\r\n                        width: l + r\r\n                    };\r\n                },\r\n\r\n                /**\r\n                 * Evaluates the given `inputs` sequentially and returns the first defined value.\r\n                 * @param {Array[]} inputs - An array of values, falling back to the last value.\r\n                 * @param {Object} [context] - If defined and the current value is a function, the value\r\n                 * is called with `context` as first argument and the result becomes the new input.\r\n                 * @param {Number} [index] - If defined and the current value is an array, the value\r\n                 * at `index` become the new input.\r\n                 * @since 2.7.0\r\n                 */\r\n                resolve: function(inputs, context, index) {\r\n                    var i, ilen, value;\r\n\r\n                    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\r\n                        value = inputs[i];\r\n                        if (value === undefined) {\r\n                            continue;\r\n                        }\r\n                        if (context !== undefined && typeof value === 'function') {\r\n                            value = value(context);\r\n                        }\r\n                        if (index !== undefined && helpers.isArray(value)) {\r\n                            value = value[index];\r\n                        }\r\n                        if (value !== undefined) {\r\n                            return value;\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }, { \"33\": 33 }], 36: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = require(33);\r\n            module.exports.easing = require(34);\r\n            module.exports.canvas = require(32);\r\n            module.exports.options = require(35);\r\n        }, { \"32\": 32, \"33\": 33, \"34\": 34, \"35\": 35 }], 37: [function(require, module, exports) {\r\n            /**\r\n             * Platform fallback implementation (minimal).\r\n             * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\r\n             */\r\n\r\n            module.exports = {\r\n                acquireContext: function(item) {\r\n                    if (item && item.canvas) {\r\n                        // Support for any object associated to a canvas (including a context2d)\r\n                        item = item.canvas;\r\n                    }\r\n\r\n                    return item && item.getContext('2d') || null;\r\n                }\r\n            };\r\n        }, {}], 38: [function(require, module, exports) {\r\n            /**\r\n             * Chart.Platform implementation for targeting a web browser\r\n             */\r\n\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            var EXPANDO_KEY = '$chartjs';\r\n            var CSS_PREFIX = 'chartjs-';\r\n            var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\r\n            var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\r\n            var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\r\n\r\n            /**\r\n             * DOM event types -> Chart.js event types.\r\n             * Note: only events with different types are mapped.\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/Events\r\n             */\r\n            var EVENT_TYPES = {\r\n                touchstart: 'mousedown',\r\n                touchmove: 'mousemove',\r\n                touchend: 'mouseup',\r\n                pointerenter: 'mouseenter',\r\n                pointerdown: 'mousedown',\r\n                pointermove: 'mousemove',\r\n                pointerup: 'mouseup',\r\n                pointerleave: 'mouseout',\r\n                pointerout: 'mouseout'\r\n            };\r\n\r\n            /**\r\n             * The \"used\" size is the final value of a dimension property after all calculations have\r\n             * been performed. This method uses the computed style of `element` but returns undefined\r\n             * if the computed style is not expressed in pixels. That can happen in some cases where\r\n             * `element` has a size relative to its parent and this last one is not yet displayed,\r\n             * for example because of `display: none` on a parent node.\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\r\n             * @returns {Number} Size in pixels or undefined if unknown.\r\n             */\r\n            function readUsedSize(element, property) {\r\n                var value = helpers.getStyle(element, property);\r\n                var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\r\n                return matches ? Number(matches[1]) : undefined;\r\n            }\r\n\r\n            /**\r\n             * Initializes the canvas style and render size without modifying the canvas display size,\r\n             * since responsiveness is handled by the controller.resize() method. The config is used\r\n             * to determine the aspect ratio to apply in case no explicit height has been specified.\r\n             */\r\n            function initCanvas(canvas, config) {\r\n                var style = canvas.style;\r\n\r\n                // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\r\n                // returns null or '' if no explicit value has been set to the canvas attribute.\r\n                var renderHeight = canvas.getAttribute('height');\r\n                var renderWidth = canvas.getAttribute('width');\r\n\r\n                // Chart.js modifies some canvas values that we want to restore on destroy\r\n                canvas[EXPANDO_KEY] = {\r\n                    initial: {\r\n                        height: renderHeight,\r\n                        width: renderWidth,\r\n                        style: {\r\n                            display: style.display,\r\n                            height: style.height,\r\n                            width: style.width\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // Force canvas to display as block to avoid extra space caused by inline\r\n                // elements, which would interfere with the responsive resize process.\r\n                // https://github.com/chartjs/Chart.js/issues/2538\r\n                style.display = style.display || 'block';\r\n\r\n                if (renderWidth === null || renderWidth === '') {\r\n                    var displayWidth = readUsedSize(canvas, 'width');\r\n                    if (displayWidth !== undefined) {\r\n                        canvas.width = displayWidth;\r\n                    }\r\n                }\r\n\r\n                if (renderHeight === null || renderHeight === '') {\r\n                    if (canvas.style.height === '') {\r\n                        // If no explicit render height and style height, let's apply the aspect ratio,\r\n                        // which one can be specified by the user but also by charts as default option\r\n                        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\r\n                        canvas.height = canvas.width / (config.options.aspectRatio || 2);\r\n                    } else {\r\n                        var displayHeight = readUsedSize(canvas, 'height');\r\n                        if (displayWidth !== undefined) {\r\n                            canvas.height = displayHeight;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return canvas;\r\n            }\r\n\r\n            /**\r\n             * Detects support for options object argument in addEventListener.\r\n             * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\r\n             * @private\r\n             */\r\n            var supportsEventListenerOptions = (function() {\r\n                var supports = false;\r\n                try {\r\n                    var options = Object.defineProperty({}, 'passive', {\r\n                        get: function() {\r\n                            supports = true;\r\n                        }\r\n                    });\r\n                    window.addEventListener('e', null, options);\r\n                } catch (e) {\r\n                    // continue regardless of error\r\n                }\r\n                return supports;\r\n            }());\r\n\r\n            // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\r\n            // https://github.com/chartjs/Chart.js/issues/4287\r\n            var eventListenerOptions = supportsEventListenerOptions ? { passive: true } : false;\r\n\r\n            function addEventListener(node, type, listener) {\r\n                node.addEventListener(type, listener, eventListenerOptions);\r\n            }\r\n\r\n            function removeEventListener(node, type, listener) {\r\n                node.removeEventListener(type, listener, eventListenerOptions);\r\n            }\r\n\r\n            function createEvent(type, chart, x, y, nativeEvent) {\r\n                return {\r\n                    type: type,\r\n                    chart: chart,\r\n                    native: nativeEvent || null,\r\n                    x: x !== undefined ? x : null,\r\n                    y: y !== undefined ? y : null,\r\n                };\r\n            }\r\n\r\n            function fromNativeEvent(event, chart) {\r\n                var type = EVENT_TYPES[event.type] || event.type;\r\n                var pos = helpers.getRelativePosition(event, chart);\r\n                return createEvent(type, chart, pos.x, pos.y, event);\r\n            }\r\n\r\n            function throttled(fn, thisArg) {\r\n                var ticking = false;\r\n                var args = [];\r\n\r\n                return function() {\r\n                    args = Array.prototype.slice.call(arguments);\r\n                    thisArg = thisArg || this;\r\n\r\n                    if (!ticking) {\r\n                        ticking = true;\r\n                        helpers.requestAnimFrame.call(window, function() {\r\n                            ticking = false;\r\n                            fn.apply(thisArg, args);\r\n                        });\r\n                    }\r\n                };\r\n            }\r\n\r\n            // Implementation based on https://github.com/marcj/css-element-queries\r\n            function createResizer(handler) {\r\n                var resizer = document.createElement('div');\r\n                var cls = CSS_PREFIX + 'size-monitor';\r\n                var maxSize = 1000000;\r\n                var style =\r\n                    'position:absolute;' +\r\n                    'left:0;' +\r\n                    'top:0;' +\r\n                    'right:0;' +\r\n                    'bottom:0;' +\r\n                    'overflow:hidden;' +\r\n                    'pointer-events:none;' +\r\n                    'visibility:hidden;' +\r\n                    'z-index:-1;';\r\n\r\n                resizer.style.cssText = style;\r\n                resizer.className = cls;\r\n                resizer.innerHTML =\r\n                    '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\r\n                    '<div style=\"' +\r\n                    'position:absolute;' +\r\n                    'width:' + maxSize + 'px;' +\r\n                    'height:' + maxSize + 'px;' +\r\n                    'left:0;' +\r\n                    'top:0\">' +\r\n                    '</div>' +\r\n                    '</div>' +\r\n                    '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\r\n                    '<div style=\"' +\r\n                    'position:absolute;' +\r\n                    'width:200%;' +\r\n                    'height:200%;' +\r\n                    'left:0; ' +\r\n                    'top:0\">' +\r\n                    '</div>' +\r\n                    '</div>';\r\n\r\n                var expand = resizer.childNodes[0];\r\n                var shrink = resizer.childNodes[1];\r\n\r\n                resizer._reset = function() {\r\n                    expand.scrollLeft = maxSize;\r\n                    expand.scrollTop = maxSize;\r\n                    shrink.scrollLeft = maxSize;\r\n                    shrink.scrollTop = maxSize;\r\n                };\r\n                var onScroll = function() {\r\n                    resizer._reset();\r\n                    handler();\r\n                };\r\n\r\n                addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\r\n                addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\r\n\r\n                return resizer;\r\n            }\r\n\r\n            // https://davidwalsh.name/detect-node-insertion\r\n            function watchForRender(node, handler) {\r\n                var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\r\n                var proxy = expando.renderProxy = function(e) {\r\n                    if (e.animationName === CSS_RENDER_ANIMATION) {\r\n                        handler();\r\n                    }\r\n                };\r\n\r\n                helpers.each(ANIMATION_START_EVENTS, function(type) {\r\n                    addEventListener(node, type, proxy);\r\n                });\r\n\r\n                // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\r\n                // is removed then added back immediately (same animation frame?). Accessing the\r\n                // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\r\n                // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\r\n                // https://github.com/chartjs/Chart.js/issues/4737\r\n                expando.reflow = !!node.offsetParent;\r\n\r\n                node.classList.add(CSS_RENDER_MONITOR);\r\n            }\r\n\r\n            function unwatchForRender(node) {\r\n                var expando = node[EXPANDO_KEY] || {};\r\n                var proxy = expando.renderProxy;\r\n\r\n                if (proxy) {\r\n                    helpers.each(ANIMATION_START_EVENTS, function(type) {\r\n                        removeEventListener(node, type, proxy);\r\n                    });\r\n\r\n                    delete expando.renderProxy;\r\n                }\r\n\r\n                node.classList.remove(CSS_RENDER_MONITOR);\r\n            }\r\n\r\n            function addResizeListener(node, listener, chart) {\r\n                var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\r\n\r\n                // Let's keep track of this added resizer and thus avoid DOM query when removing it.\r\n                var resizer = expando.resizer = createResizer(throttled(function() {\r\n                    if (expando.resizer) {\r\n                        return listener(createEvent('resize', chart));\r\n                    }\r\n                }));\r\n\r\n                // The resizer needs to be attached to the node parent, so we first need to be\r\n                // sure that `node` is attached to the DOM before injecting the resizer element.\r\n                watchForRender(node, function() {\r\n                    if (expando.resizer) {\r\n                        var container = node.parentNode;\r\n                        if (container && container !== resizer.parentNode) {\r\n                            container.insertBefore(resizer, container.firstChild);\r\n                        }\r\n\r\n                        // The container size might have changed, let's reset the resizer state.\r\n                        resizer._reset();\r\n                    }\r\n                });\r\n            }\r\n\r\n            function removeResizeListener(node) {\r\n                var expando = node[EXPANDO_KEY] || {};\r\n                var resizer = expando.resizer;\r\n\r\n                delete expando.resizer;\r\n                unwatchForRender(node);\r\n\r\n                if (resizer && resizer.parentNode) {\r\n                    resizer.parentNode.removeChild(resizer);\r\n                }\r\n            }\r\n\r\n            //function injectCSS(platform, css) {\r\n            //    // http://stackoverflow.com/q/3922139\r\n            //    var style = platform._style || document.createElement('style');\r\n            //    if (!platform._style) {\r\n            //        platform._style = style;\r\n            //        css = '/* Chart.js */\\n' + css;\r\n            //        style.setAttribute('type', 'text/css');\r\n            //        document.getElementsByTagName('head')[0].appendChild(style);\r\n            //    }\r\n\r\n            //    style.appendChild(document.createTextNode(css));\r\n            //}\r\n\r\n            module.exports = {\r\n                /**\r\n                 * This property holds whether this platform is enabled for the current environment.\r\n                 * Currently used by platform.js to select the proper implementation.\r\n                 * @private\r\n                 */\r\n                _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\r\n\r\n                initialize: function() {\r\n                    var keyframes = 'from{opacity:0.99}to{opacity:1}';\r\n                    //injectCSS(this,\r\n                    //    // DOM rendering detection\r\n                    //    // https://davidwalsh.name/detect-node-insertion\r\n                    //    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\r\n                    //    '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\r\n                    //    '.' + CSS_RENDER_MONITOR + '{' +\r\n                    //    '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\r\n                    //    'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\r\n                    //    '}'\r\n                    //);\r\n                },\r\n\r\n                acquireContext: function(item, config) {\r\n                    if (typeof item === 'string') {\r\n                        item = document.getElementById(item);\r\n                    } else if (item.length) {\r\n                        // Support for array based queries (such as jQuery)\r\n                        item = item[0];\r\n                    }\r\n\r\n                    if (item && item.canvas) {\r\n                        // Support for any object associated to a canvas (including a context2d)\r\n                        item = item.canvas;\r\n                    }\r\n\r\n                    // To prevent canvas fingerprinting, some add-ons undefine the getContext\r\n                    // method, for example: https://github.com/kkapsner/CanvasBlocker\r\n                    // https://github.com/chartjs/Chart.js/issues/2807\r\n                    var context = item && item.getContext && item.getContext('2d');\r\n\r\n                    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\r\n                    // inside an iframe or when running in a protected environment. We could guess the\r\n                    // types from their toString() value but let's keep things flexible and assume it's\r\n                    // a sufficient condition if the item has a context2D which has item as `canvas`.\r\n                    // https://github.com/chartjs/Chart.js/issues/3887\r\n                    // https://github.com/chartjs/Chart.js/issues/4102\r\n                    // https://github.com/chartjs/Chart.js/issues/4152\r\n                    if (context && context.canvas === item) {\r\n                        initCanvas(item, config);\r\n                        return context;\r\n                    }\r\n\r\n                    return null;\r\n                },\r\n\r\n                releaseContext: function(context) {\r\n                    var canvas = context.canvas;\r\n                    if (!canvas[EXPANDO_KEY]) {\r\n                        return;\r\n                    }\r\n\r\n                    var initial = canvas[EXPANDO_KEY].initial;\r\n                    ['height', 'width'].forEach(function(prop) {\r\n                        var value = initial[prop];\r\n                        if (helpers.isNullOrUndef(value)) {\r\n                            canvas.removeAttribute(prop);\r\n                        } else {\r\n                            canvas.setAttribute(prop, value);\r\n                        }\r\n                    });\r\n\r\n                    helpers.each(initial.style || {}, function(value, key) {\r\n                        canvas.style[key] = value;\r\n                    });\r\n\r\n                    // The canvas render size might have been changed (and thus the state stack discarded),\r\n                    // we can't use save() and restore() to restore the initial state. So make sure that at\r\n                    // least the canvas context is reset to the default state by setting the canvas width.\r\n                    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\r\n                    canvas.width = canvas.width;\r\n\r\n                    delete canvas[EXPANDO_KEY];\r\n                },\r\n\r\n                addEventListener: function(chart, type, listener) {\r\n                    var canvas = chart.canvas;\r\n                    if (type === 'resize') {\r\n                        // Note: the resize event is not supported on all browsers.\r\n                        addResizeListener(canvas, listener, chart);\r\n                        return;\r\n                    }\r\n\r\n                    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\r\n                    var proxies = expando.proxies || (expando.proxies = {});\r\n                    var proxy = proxies[chart.id + '_' + type] = function(event) {\r\n                        listener(fromNativeEvent(event, chart));\r\n                    };\r\n\r\n                    addEventListener(canvas, type, proxy);\r\n                },\r\n\r\n                removeEventListener: function(chart, type, listener) {\r\n                    var canvas = chart.canvas;\r\n                    if (type === 'resize') {\r\n                        // Note: the resize event is not supported on all browsers.\r\n                        removeResizeListener(canvas, listener);\r\n                        return;\r\n                    }\r\n\r\n                    var expando = listener[EXPANDO_KEY] || {};\r\n                    var proxies = expando.proxies || {};\r\n                    var proxy = proxies[chart.id + '_' + type];\r\n                    if (!proxy) {\r\n                        return;\r\n                    }\r\n\r\n                    removeEventListener(canvas, type, proxy);\r\n                }\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use EventTarget.addEventListener instead.\r\n             * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\r\n             * @function Chart.helpers.addEvent\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.addEvent = addEventListener;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use EventTarget.removeEventListener instead.\r\n             * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\r\n             * @function Chart.helpers.removeEvent\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.removeEvent = removeEventListener;\r\n        }, { \"36\": 36 }], 39: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n            var basic = require(37);\r\n            var dom = require(38);\r\n\r\n            // @TODO Make possible to select another platform at build time.\r\n            var implementation = dom._enabled ? dom : basic;\r\n\r\n            /**\r\n             * @namespace Chart.platform\r\n             * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\r\n             * @since 2.4.0\r\n             */\r\n            module.exports = helpers.extend({\r\n                /**\r\n                 * @since 2.7.0\r\n                 */\r\n                initialize: function() { },\r\n\r\n                /**\r\n                 * Called at chart construction time, returns a context2d instance implementing\r\n                 * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\r\n                 * @param {*} item - The native item from which to acquire context (platform specific)\r\n                 * @param {Object} options - The chart options\r\n                 * @returns {CanvasRenderingContext2D} context2d instance\r\n                 */\r\n                acquireContext: function() { },\r\n\r\n                /**\r\n                 * Called at chart destruction time, releases any resources associated to the context\r\n                 * previously returned by the acquireContext() method.\r\n                 * @param {CanvasRenderingContext2D} context - The context2d instance\r\n                 * @returns {Boolean} true if the method succeeded, else false\r\n                 */\r\n                releaseContext: function() { },\r\n\r\n                /**\r\n                 * Registers the specified listener on the given chart.\r\n                 * @param {Chart} chart - Chart from which to listen for event\r\n                 * @param {String} type - The ({@link IEvent}) type to listen for\r\n                 * @param {Function} listener - Receives a notification (an object that implements\r\n                 * the {@link IEvent} interface) when an event of the specified type occurs.\r\n                 */\r\n                addEventListener: function() { },\r\n\r\n                /**\r\n                 * Removes the specified listener previously registered with addEventListener.\r\n                 * @param {Chart} chart -Chart from which to remove the listener\r\n                 * @param {String} type - The ({@link IEvent}) type to remove\r\n                 * @param {Function} listener - The listener function to remove from the event target.\r\n                 */\r\n                removeEventListener: function() { }\r\n            }, implementation);\r\n\r\n            /**\r\n             * @interface IPlatform\r\n             * Allows abstracting platform dependencies away from the chart\r\n             * @borrows Chart.platform.acquireContext as acquireContext\r\n             * @borrows Chart.platform.releaseContext as releaseContext\r\n             * @borrows Chart.platform.addEventListener as addEventListener\r\n             * @borrows Chart.platform.removeEventListener as removeEventListener\r\n             */\r\n\r\n            /**\r\n             * @interface IEvent\r\n             * @prop {String} type - The event type name, possible values are:\r\n             * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\r\n             * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\r\n             * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\r\n             * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\r\n             * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\r\n             */\r\n        }, { \"36\": 36, \"37\": 37, \"38\": 38 }], 40: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = {};\r\n            module.exports.filler = require(41);\r\n            module.exports.legend = require(42);\r\n            module.exports.title = require(43);\r\n        }, { \"41\": 41, \"42\": 42, \"43\": 43 }], 41: [function(require, module, exports) {\r\n            /**\r\n             * Plugin based on discussion from the following Chart.js issues:\r\n             * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\r\n             * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\r\n             */\r\n\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                plugins: {\r\n                    filler: {\r\n                        propagate: true\r\n                    }\r\n                }\r\n            });\r\n\r\n            var mappers = {\r\n                dataset: function(source) {\r\n                    var index = source.fill;\r\n                    var chart = source.chart;\r\n                    var meta = chart.getDatasetMeta(index);\r\n                    var visible = meta && chart.isDatasetVisible(index);\r\n                    var points = (visible && meta.dataset._children) || [];\r\n                    var length = points.length || 0;\r\n\r\n                    return !length ? null : function(point, i) {\r\n                        return (i < length && points[i]._view) || null;\r\n                    };\r\n                },\r\n\r\n                boundary: function(source) {\r\n                    var boundary = source.boundary;\r\n                    var x = boundary ? boundary.x : null;\r\n                    var y = boundary ? boundary.y : null;\r\n\r\n                    return function(point) {\r\n                        return {\r\n                            x: x === null ? point.x : x,\r\n                            y: y === null ? point.y : y,\r\n                        };\r\n                    };\r\n                }\r\n            };\r\n\r\n            // @todo if (fill[0] === '#')\r\n            function decodeFill(el, index, count) {\r\n                var model = el._model || {};\r\n                var fill = model.fill;\r\n                var target;\r\n\r\n                if (fill === undefined) {\r\n                    fill = !!model.backgroundColor;\r\n                }\r\n\r\n                if (fill === false || fill === null) {\r\n                    return false;\r\n                }\r\n\r\n                if (fill === true) {\r\n                    return 'origin';\r\n                }\r\n\r\n                target = parseFloat(fill, 10);\r\n                if (isFinite(target) && Math.floor(target) === target) {\r\n                    if (fill[0] === '-' || fill[0] === '+') {\r\n                        target = index + target;\r\n                    }\r\n\r\n                    if (target === index || target < 0 || target >= count) {\r\n                        return false;\r\n                    }\r\n\r\n                    return target;\r\n                }\r\n\r\n                switch (fill) {\r\n                    // compatibility\r\n                    case 'bottom':\r\n                        return 'start';\r\n                    case 'top':\r\n                        return 'end';\r\n                    case 'zero':\r\n                        return 'origin';\r\n                    // supported boundaries\r\n                    case 'origin':\r\n                    case 'start':\r\n                    case 'end':\r\n                        return fill;\r\n                    // invalid fill values\r\n                    default:\r\n                        return false;\r\n                }\r\n            }\r\n\r\n            function computeBoundary(source) {\r\n                var model = source.el._model || {};\r\n                var scale = source.el._scale || {};\r\n                var fill = source.fill;\r\n                var target = null;\r\n                var horizontal;\r\n\r\n                if (isFinite(fill)) {\r\n                    return null;\r\n                }\r\n\r\n                // Backward compatibility: until v3, we still need to support boundary values set on\r\n                // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\r\n                // controllers might still use it (e.g. the Smith chart).\r\n\r\n                if (fill === 'start') {\r\n                    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\r\n                } else if (fill === 'end') {\r\n                    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\r\n                } else if (model.scaleZero !== undefined) {\r\n                    target = model.scaleZero;\r\n                } else if (scale.getBasePosition) {\r\n                    target = scale.getBasePosition();\r\n                } else if (scale.getBasePixel) {\r\n                    target = scale.getBasePixel();\r\n                }\r\n\r\n                if (target !== undefined && target !== null) {\r\n                    if (target.x !== undefined && target.y !== undefined) {\r\n                        return target;\r\n                    }\r\n\r\n                    if (typeof target === 'number' && isFinite(target)) {\r\n                        horizontal = scale.isHorizontal();\r\n                        return {\r\n                            x: horizontal ? target : null,\r\n                            y: horizontal ? null : target\r\n                        };\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n\r\n            function resolveTarget(sources, index, propagate) {\r\n                var source = sources[index];\r\n                var fill = source.fill;\r\n                var visited = [index];\r\n                var target;\r\n\r\n                if (!propagate) {\r\n                    return fill;\r\n                }\r\n\r\n                while (fill !== false && visited.indexOf(fill) === -1) {\r\n                    if (!isFinite(fill)) {\r\n                        return fill;\r\n                    }\r\n\r\n                    target = sources[fill];\r\n                    if (!target) {\r\n                        return false;\r\n                    }\r\n\r\n                    if (target.visible) {\r\n                        return fill;\r\n                    }\r\n\r\n                    visited.push(fill);\r\n                    fill = target.fill;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            function createMapper(source) {\r\n                var fill = source.fill;\r\n                var type = 'dataset';\r\n\r\n                if (fill === false) {\r\n                    return null;\r\n                }\r\n\r\n                if (!isFinite(fill)) {\r\n                    type = 'boundary';\r\n                }\r\n\r\n                return mappers[type](source);\r\n            }\r\n\r\n            function isDrawable(point) {\r\n                return point && !point.skip;\r\n            }\r\n\r\n            function drawArea(ctx, curve0, curve1, len0, len1) {\r\n                var i;\r\n\r\n                if (!len0 || !len1) {\r\n                    return;\r\n                }\r\n\r\n                // building first area curve (normal)\r\n                ctx.moveTo(curve0[0].x, curve0[0].y);\r\n                for (i = 1; i < len0; ++i) {\r\n                    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\r\n                }\r\n\r\n                // joining the two area curves\r\n                ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\r\n\r\n                // building opposite area curve (reverse)\r\n                for (i = len1 - 1; i > 0; --i) {\r\n                    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\r\n                }\r\n            }\r\n\r\n            function doFill(ctx, points, mapper, view, color, loop) {\r\n                var count = points.length;\r\n                var span = view.spanGaps;\r\n                var curve0 = [];\r\n                var curve1 = [];\r\n                var len0 = 0;\r\n                var len1 = 0;\r\n                var i, ilen, index, p0, p1, d0, d1;\r\n\r\n                ctx.beginPath();\r\n\r\n                for (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\r\n                    index = i % count;\r\n                    p0 = points[index]._view;\r\n                    p1 = mapper(p0, index, view);\r\n                    d0 = isDrawable(p0);\r\n                    d1 = isDrawable(p1);\r\n\r\n                    if (d0 && d1) {\r\n                        len0 = curve0.push(p0);\r\n                        len1 = curve1.push(p1);\r\n                    } else if (len0 && len1) {\r\n                        if (!span) {\r\n                            drawArea(ctx, curve0, curve1, len0, len1);\r\n                            len0 = len1 = 0;\r\n                            curve0 = [];\r\n                            curve1 = [];\r\n                        } else {\r\n                            if (d0) {\r\n                                curve0.push(p0);\r\n                            }\r\n                            if (d1) {\r\n                                curve1.push(p1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                drawArea(ctx, curve0, curve1, len0, len1);\r\n\r\n                ctx.closePath();\r\n                ctx.fillStyle = color;\r\n                ctx.fill();\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'filler',\r\n\r\n                afterDatasetsUpdate: function(chart, options) {\r\n                    var count = (chart.data.datasets || []).length;\r\n                    var propagate = options.propagate;\r\n                    var sources = [];\r\n                    var meta, i, el, source;\r\n\r\n                    for (i = 0; i < count; ++i) {\r\n                        meta = chart.getDatasetMeta(i);\r\n                        el = meta.dataset;\r\n                        source = null;\r\n\r\n                        if (el && el._model && el instanceof elements.Line) {\r\n                            source = {\r\n                                visible: chart.isDatasetVisible(i),\r\n                                fill: decodeFill(el, i, count),\r\n                                chart: chart,\r\n                                el: el\r\n                            };\r\n                        }\r\n\r\n                        meta.$filler = source;\r\n                        sources.push(source);\r\n                    }\r\n\r\n                    for (i = 0; i < count; ++i) {\r\n                        source = sources[i];\r\n                        if (!source) {\r\n                            continue;\r\n                        }\r\n\r\n                        source.fill = resolveTarget(sources, i, propagate);\r\n                        source.boundary = computeBoundary(source);\r\n                        source.mapper = createMapper(source);\r\n                    }\r\n                },\r\n\r\n                beforeDatasetDraw: function(chart, args) {\r\n                    var meta = args.meta.$filler;\r\n                    if (!meta) {\r\n                        return;\r\n                    }\r\n\r\n                    var ctx = chart.ctx;\r\n                    var el = meta.el;\r\n                    var view = el._view;\r\n                    var points = el._children || [];\r\n                    var mapper = meta.mapper;\r\n                    var color = view.backgroundColor || defaults.global.defaultColor;\r\n\r\n                    if (mapper && color && points.length) {\r\n                        helpers.canvas.clipArea(ctx, chart.chartArea);\r\n                        doFill(ctx, points, mapper, view, color, el._loop);\r\n                        helpers.canvas.unclipArea(ctx);\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 42: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            var noop = helpers.noop;\r\n\r\n            defaults._set('global', {\r\n                legend: {\r\n                    display: true,\r\n                    position: 'top',\r\n                    fullWidth: true,\r\n                    reverse: false,\r\n                    weight: 1000,\r\n\r\n                    // a callback that will handle\r\n                    onClick: function(e, legendItem) {\r\n                        var index = legendItem.datasetIndex;\r\n                        var ci = this.chart;\r\n                        var meta = ci.getDatasetMeta(index);\r\n\r\n                        // See controller.isDatasetVisible comment\r\n                        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\r\n\r\n                        // We hid a dataset ... rerender the chart\r\n                        ci.update();\r\n                    },\r\n\r\n                    onHover: null,\r\n\r\n                    labels: {\r\n                        boxWidth: 40,\r\n                        padding: 10,\r\n                        // Generates labels shown in the legend\r\n                        // Valid properties to return:\r\n                        // text : text to display\r\n                        // fillStyle : fill of coloured box\r\n                        // strokeStyle: stroke of coloured box\r\n                        // hidden : if this legend item refers to a hidden item\r\n                        // lineCap : cap style for line\r\n                        // lineDash\r\n                        // lineDashOffset :\r\n                        // lineJoin :\r\n                        // lineWidth :\r\n                        generateLabels: function(chart) {\r\n                            var data = chart.data;\r\n                            return helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\r\n                                return {\r\n                                    text: dataset.label,\r\n                                    fillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\r\n                                    hidden: !chart.isDatasetVisible(i),\r\n                                    lineCap: dataset.borderCapStyle,\r\n                                    lineDash: dataset.borderDash,\r\n                                    lineDashOffset: dataset.borderDashOffset,\r\n                                    lineJoin: dataset.borderJoinStyle,\r\n                                    lineWidth: dataset.borderWidth,\r\n                                    strokeStyle: dataset.borderColor,\r\n                                    pointStyle: dataset.pointStyle,\r\n\r\n                                    // Below is extra data used for toggling the datasets\r\n                                    datasetIndex: i\r\n                                };\r\n                            }, this) : [];\r\n                        }\r\n                    }\r\n                },\r\n\r\n                legendCallback: function(chart) {\r\n                    var text = [];\r\n                    text.push('<ul class=\"' + chart.id + '-legend\">');\r\n                    for (var i = 0; i < chart.data.datasets.length; i++) {\r\n                        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\r\n                        if (chart.data.datasets[i].label) {\r\n                            text.push(chart.data.datasets[i].label);\r\n                        }\r\n                        text.push('</li>');\r\n                    }\r\n                    text.push('</ul>');\r\n                    return text.join('');\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Helper function to get the box width based on the usePointStyle option\r\n             * @param labelopts {Object} the label options on the legend\r\n             * @param fontSize {Number} the label font size\r\n             * @return {Number} width of the color box area\r\n             */\r\n            function getBoxWidth(labelOpts, fontSize) {\r\n                return labelOpts.usePointStyle ?\r\n                    fontSize * Math.SQRT2 :\r\n                    labelOpts.boxWidth;\r\n            }\r\n\r\n            /**\r\n             * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\r\n             */\r\n            var Legend = Element.extend({\r\n                initialize: function(config) {\r\n                    helpers.extend(this, config);\r\n\r\n                    // Contains hit boxes for each dataset (in dataset order)\r\n                    this.legendHitBoxes = [];\r\n\r\n                    // Are we in doughnut mode which has a different data type\r\n                    this.doughnutMode = false;\r\n                },\r\n\r\n                // These methods are ordered by lifecycle. Utilities then follow.\r\n                // Any function defined here is inherited by all legend types.\r\n                // Any function can be extended by the legend type\r\n\r\n                beforeUpdate: noop,\r\n                update: function(maxWidth, maxHeight, margins) {\r\n                    var me = this;\r\n\r\n                    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                    me.beforeUpdate();\r\n\r\n                    // Absorb the master measurements\r\n                    me.maxWidth = maxWidth;\r\n                    me.maxHeight = maxHeight;\r\n                    me.margins = margins;\r\n\r\n                    // Dimensions\r\n                    me.beforeSetDimensions();\r\n                    me.setDimensions();\r\n                    me.afterSetDimensions();\r\n                    // Labels\r\n                    me.beforeBuildLabels();\r\n                    me.buildLabels();\r\n                    me.afterBuildLabels();\r\n\r\n                    // Fit\r\n                    me.beforeFit();\r\n                    me.fit();\r\n                    me.afterFit();\r\n                    //\r\n                    me.afterUpdate();\r\n\r\n                    return me.minSize;\r\n                },\r\n                afterUpdate: noop,\r\n\r\n                //\r\n\r\n                beforeSetDimensions: noop,\r\n                setDimensions: function() {\r\n                    var me = this;\r\n                    // Set the unconstrained dimension before label rotation\r\n                    if (me.isHorizontal()) {\r\n                        // Reset position before calculating rotation\r\n                        me.width = me.maxWidth;\r\n                        me.left = 0;\r\n                        me.right = me.width;\r\n                    } else {\r\n                        me.height = me.maxHeight;\r\n\r\n                        // Reset position before calculating rotation\r\n                        me.top = 0;\r\n                        me.bottom = me.height;\r\n                    }\r\n\r\n                    // Reset padding\r\n                    me.paddingLeft = 0;\r\n                    me.paddingTop = 0;\r\n                    me.paddingRight = 0;\r\n                    me.paddingBottom = 0;\r\n\r\n                    // Reset minSize\r\n                    me.minSize = {\r\n                        width: 0,\r\n                        height: 0\r\n                    };\r\n                },\r\n                afterSetDimensions: noop,\r\n\r\n                //\r\n\r\n                beforeBuildLabels: noop,\r\n                buildLabels: function() {\r\n                    var me = this;\r\n                    var labelOpts = me.options.labels || {};\r\n                    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\r\n\r\n                    if (labelOpts.filter) {\r\n                        legendItems = legendItems.filter(function(item) {\r\n                            return labelOpts.filter(item, me.chart.data);\r\n                        });\r\n                    }\r\n\r\n                    if (me.options.reverse) {\r\n                        legendItems.reverse();\r\n                    }\r\n\r\n                    me.legendItems = legendItems;\r\n                },\r\n                afterBuildLabels: noop,\r\n\r\n                //\r\n\r\n                beforeFit: noop,\r\n                fit: function() {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var labelOpts = opts.labels;\r\n                    var display = opts.display;\r\n\r\n                    var ctx = me.ctx;\r\n\r\n                    var globalDefault = defaults.global;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\r\n                    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\r\n                    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\r\n                    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n                    // Reset hit boxes\r\n                    var hitboxes = me.legendHitBoxes = [];\r\n\r\n                    var minSize = me.minSize;\r\n                    var isHorizontal = me.isHorizontal();\r\n\r\n                    if (isHorizontal) {\r\n                        minSize.width = me.maxWidth; // fill all the width\r\n                        minSize.height = display ? 10 : 0;\r\n                    } else {\r\n                        minSize.width = display ? 10 : 0;\r\n                        minSize.height = me.maxHeight; // fill all the height\r\n                    }\r\n\r\n                    // Increase sizes here\r\n                    if (display) {\r\n                        ctx.font = labelFont;\r\n\r\n                        if (isHorizontal) {\r\n                            // Labels\r\n\r\n                            // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\r\n                            var lineWidths = me.lineWidths = [0];\r\n                            var totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\r\n\r\n                            ctx.textAlign = 'left';\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            helpers.each(me.legendItems, function(legendItem, i) {\r\n                                var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                                var width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n                                if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\r\n                                    totalHeight += fontSize + (labelOpts.padding);\r\n                                    lineWidths[lineWidths.length] = me.left;\r\n                                }\r\n\r\n                                // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                                hitboxes[i] = {\r\n                                    left: 0,\r\n                                    top: 0,\r\n                                    width: width,\r\n                                    height: fontSize\r\n                                };\r\n\r\n                                lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\r\n                            });\r\n\r\n                            minSize.height += totalHeight;\r\n                        } else {\r\n                            var vPadding = labelOpts.padding;\r\n                            var columnWidths = me.columnWidths = [];\r\n                            var totalWidth = labelOpts.padding;\r\n                            var currentColWidth = 0;\r\n                            var currentColHeight = 0;\r\n                            var itemHeight = fontSize + vPadding;\r\n\r\n                            helpers.each(me.legendItems, function(legendItem, i) {\r\n                                var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                                var itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n                                // If too tall, go to new column\r\n                                if (currentColHeight + itemHeight > minSize.height) {\r\n                                    totalWidth += currentColWidth + labelOpts.padding;\r\n                                    columnWidths.push(currentColWidth); // previous column width\r\n\r\n                                    currentColWidth = 0;\r\n                                    currentColHeight = 0;\r\n                                }\r\n\r\n                                // Get max width\r\n                                currentColWidth = Math.max(currentColWidth, itemWidth);\r\n                                currentColHeight += itemHeight;\r\n\r\n                                // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                                hitboxes[i] = {\r\n                                    left: 0,\r\n                                    top: 0,\r\n                                    width: itemWidth,\r\n                                    height: fontSize\r\n                                };\r\n                            });\r\n\r\n                            totalWidth += currentColWidth;\r\n                            columnWidths.push(currentColWidth);\r\n                            minSize.width += totalWidth;\r\n                        }\r\n                    }\r\n\r\n                    me.width = minSize.width;\r\n                    me.height = minSize.height;\r\n                },\r\n                afterFit: noop,\r\n\r\n                // Shared Methods\r\n                isHorizontal: function() {\r\n                    return this.options.position === 'top' || this.options.position === 'bottom';\r\n                },\r\n\r\n                // Actually draw the legend on the canvas\r\n                draw: function() {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var labelOpts = opts.labels;\r\n                    var globalDefault = defaults.global;\r\n                    var lineDefault = globalDefault.elements.line;\r\n                    var legendWidth = me.width;\r\n                    var lineWidths = me.lineWidths;\r\n\r\n                    if (opts.display) {\r\n                        var ctx = me.ctx;\r\n                        var valueOrDefault = helpers.valueOrDefault;\r\n                        var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\r\n                        var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\r\n                        var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\r\n                        var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\r\n                        var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n                        var cursor;\r\n\r\n                        // Canvas setup\r\n                        ctx.textAlign = 'left';\r\n                        ctx.textBaseline = 'middle';\r\n                        ctx.lineWidth = 0.5;\r\n                        ctx.strokeStyle = fontColor; // for strikethrough effect\r\n                        ctx.fillStyle = fontColor; // render in correct colour\r\n                        ctx.font = labelFont;\r\n\r\n                        var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                        var hitboxes = me.legendHitBoxes;\r\n\r\n                        // current position\r\n                        var drawLegendBox = function(x, y, legendItem) {\r\n                            if (isNaN(boxWidth) || boxWidth <= 0) {\r\n                                return;\r\n                            }\r\n\r\n                            // Set the ctx for the box\r\n                            ctx.save();\r\n\r\n                            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\r\n                            ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\r\n                            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\r\n                            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\r\n                            ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\r\n                            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\r\n                            var isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\r\n\r\n                            if (ctx.setLineDash) {\r\n                                // IE 9 and 10 do not support line dash\r\n                                ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\r\n                            }\r\n\r\n                            if (opts.labels && opts.labels.usePointStyle) {\r\n                                // Recalculate x and y for drawPoint() because its expecting\r\n                                // x and y to be center of figure (instead of top left)\r\n                                var radius = fontSize * Math.SQRT2 / 2;\r\n                                var offSet = radius / Math.SQRT2;\r\n                                var centerX = x + offSet;\r\n                                var centerY = y + offSet;\r\n\r\n                                // Draw pointStyle as legend symbol\r\n                                helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\r\n                            } else {\r\n                                // Draw box as legend symbol\r\n                                if (!isLineWidthZero) {\r\n                                    ctx.strokeRect(x, y, boxWidth, fontSize);\r\n                                }\r\n                                ctx.fillRect(x, y, boxWidth, fontSize);\r\n                            }\r\n\r\n                            ctx.restore();\r\n                        };\r\n                        var fillText = function(x, y, legendItem, textWidth) {\r\n                            var halfFontSize = fontSize / 2;\r\n                            var xLeft = boxWidth + halfFontSize + x;\r\n                            var yMiddle = y + halfFontSize;\r\n\r\n                            ctx.fillText(legendItem.text, xLeft, yMiddle);\r\n\r\n                            if (legendItem.hidden) {\r\n                                // Strikethrough the text if hidden\r\n                                ctx.beginPath();\r\n                                ctx.lineWidth = 2;\r\n                                ctx.moveTo(xLeft, yMiddle);\r\n                                ctx.lineTo(xLeft + textWidth, yMiddle);\r\n                                ctx.stroke();\r\n                            }\r\n                        };\r\n\r\n                        // Horizontal\r\n                        var isHorizontal = me.isHorizontal();\r\n                        if (isHorizontal) {\r\n                            cursor = {\r\n                                x: me.left + ((legendWidth - lineWidths[0]) / 2),\r\n                                y: me.top + labelOpts.padding,\r\n                                line: 0\r\n                            };\r\n                        } else {\r\n                            cursor = {\r\n                                x: me.left + labelOpts.padding,\r\n                                y: me.top + labelOpts.padding,\r\n                                line: 0\r\n                            };\r\n                        }\r\n\r\n                        var itemHeight = fontSize + labelOpts.padding;\r\n                        helpers.each(me.legendItems, function(legendItem, i) {\r\n                            var textWidth = ctx.measureText(legendItem.text).width;\r\n                            var width = boxWidth + (fontSize / 2) + textWidth;\r\n                            var x = cursor.x;\r\n                            var y = cursor.y;\r\n\r\n                            if (isHorizontal) {\r\n                                if (x + width >= legendWidth) {\r\n                                    y = cursor.y += itemHeight;\r\n                                    cursor.line++;\r\n                                    x = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\r\n                                }\r\n                            } else if (y + itemHeight > me.bottom) {\r\n                                x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\r\n                                y = cursor.y = me.top + labelOpts.padding;\r\n                                cursor.line++;\r\n                            }\r\n\r\n                            drawLegendBox(x, y, legendItem);\r\n\r\n                            hitboxes[i].left = x;\r\n                            hitboxes[i].top = y;\r\n\r\n                            // Fill the actual label\r\n                            fillText(x, y, legendItem, textWidth);\r\n\r\n                            if (isHorizontal) {\r\n                                cursor.x += width + (labelOpts.padding);\r\n                            } else {\r\n                                cursor.y += itemHeight;\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Handle an event\r\n                 * @private\r\n                 * @param {IEvent} event - The event to handle\r\n                 * @return {Boolean} true if a change occured\r\n                 */\r\n                handleEvent: function(e) {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var type = e.type === 'mouseup' ? 'click' : e.type;\r\n                    var changed = false;\r\n\r\n                    if (type === 'mousemove') {\r\n                        if (!opts.onHover) {\r\n                            return;\r\n                        }\r\n                    } else if (type === 'click') {\r\n                        if (!opts.onClick) {\r\n                            return;\r\n                        }\r\n                    } else {\r\n                        return;\r\n                    }\r\n\r\n                    // Chart event already has relative position in it\r\n                    var x = e.x;\r\n                    var y = e.y;\r\n\r\n                    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\r\n                        // See if we are touching one of the dataset boxes\r\n                        var lh = me.legendHitBoxes;\r\n                        for (var i = 0; i < lh.length; ++i) {\r\n                            var hitBox = lh[i];\r\n\r\n                            if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n                                // Touching an element\r\n                                if (type === 'click') {\r\n                                    // use e.native for backwards compatibility\r\n                                    opts.onClick.call(me, e.native, me.legendItems[i]);\r\n                                    changed = true;\r\n                                    break;\r\n                                } else if (type === 'mousemove') {\r\n                                    // use e.native for backwards compatibility\r\n                                    opts.onHover.call(me, e.native, me.legendItems[i]);\r\n                                    changed = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return changed;\r\n                }\r\n            });\r\n\r\n            function createNewLegendAndAttach(chart, legendOpts) {\r\n                var legend = new Legend({\r\n                    ctx: chart.ctx,\r\n                    options: legendOpts,\r\n                    chart: chart\r\n                });\r\n\r\n                layouts.configure(chart, legend, legendOpts);\r\n                layouts.addBox(chart, legend);\r\n                chart.legend = legend;\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'legend',\r\n\r\n                /**\r\n                 * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\r\n                 * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\r\n                 * the plugin, which one will be re-exposed in the chart.js file.\r\n                 * https://github.com/chartjs/Chart.js/pull/2640\r\n                 * @private\r\n                 */\r\n                _element: Legend,\r\n\r\n                beforeInit: function(chart) {\r\n                    var legendOpts = chart.options.legend;\r\n\r\n                    if (legendOpts) {\r\n                        createNewLegendAndAttach(chart, legendOpts);\r\n                    }\r\n                },\r\n\r\n                beforeUpdate: function(chart) {\r\n                    var legendOpts = chart.options.legend;\r\n                    var legend = chart.legend;\r\n\r\n                    if (legendOpts) {\r\n                        helpers.mergeIf(legendOpts, defaults.global.legend);\r\n\r\n                        if (legend) {\r\n                            layouts.configure(chart, legend, legendOpts);\r\n                            legend.options = legendOpts;\r\n                        } else {\r\n                            createNewLegendAndAttach(chart, legendOpts);\r\n                        }\r\n                    } else if (legend) {\r\n                        layouts.removeBox(chart, legend);\r\n                        delete chart.legend;\r\n                    }\r\n                },\r\n\r\n                afterEvent: function(chart, e) {\r\n                    var legend = chart.legend;\r\n                    if (legend) {\r\n                        legend.handleEvent(e);\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"21\": 21, \"36\": 36 }], 43: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            var noop = helpers.noop;\r\n\r\n            defaults._set('global', {\r\n                title: {\r\n                    display: false,\r\n                    fontStyle: 'bold',\r\n                    fullWidth: true,\r\n                    lineHeight: 1.2,\r\n                    padding: 10,\r\n                    position: 'top',\r\n                    text: '',\r\n                    weight: 2000         // by default greater than legend (1000) to be above\r\n                }\r\n            });\r\n\r\n            /**\r\n             * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\r\n             */\r\n            var Title = Element.extend({\r\n                initialize: function(config) {\r\n                    var me = this;\r\n                    helpers.extend(me, config);\r\n\r\n                    // Contains hit boxes for each dataset (in dataset order)\r\n                    me.legendHitBoxes = [];\r\n                },\r\n\r\n                // These methods are ordered by lifecycle. Utilities then follow.\r\n\r\n                beforeUpdate: noop,\r\n                update: function(maxWidth, maxHeight, margins) {\r\n                    var me = this;\r\n\r\n                    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                    me.beforeUpdate();\r\n\r\n                    // Absorb the master measurements\r\n                    me.maxWidth = maxWidth;\r\n                    me.maxHeight = maxHeight;\r\n                    me.margins = margins;\r\n\r\n                    // Dimensions\r\n                    me.beforeSetDimensions();\r\n                    me.setDimensions();\r\n                    me.afterSetDimensions();\r\n                    // Labels\r\n                    me.beforeBuildLabels();\r\n                    me.buildLabels();\r\n                    me.afterBuildLabels();\r\n\r\n                    // Fit\r\n                    me.beforeFit();\r\n                    me.fit();\r\n                    me.afterFit();\r\n                    //\r\n                    me.afterUpdate();\r\n\r\n                    return me.minSize;\r\n                },\r\n                afterUpdate: noop,\r\n\r\n                //\r\n\r\n                beforeSetDimensions: noop,\r\n                setDimensions: function() {\r\n                    var me = this;\r\n                    // Set the unconstrained dimension before label rotation\r\n                    if (me.isHorizontal()) {\r\n                        // Reset position before calculating rotation\r\n                        me.width = me.maxWidth;\r\n                        me.left = 0;\r\n                        me.right = me.width;\r\n                    } else {\r\n                        me.height = me.maxHeight;\r\n\r\n                        // Reset position before calculating rotation\r\n                        me.top = 0;\r\n                        me.bottom = me.height;\r\n                    }\r\n\r\n                    // Reset padding\r\n                    me.paddingLeft = 0;\r\n                    me.paddingTop = 0;\r\n                    me.paddingRight = 0;\r\n                    me.paddingBottom = 0;\r\n\r\n                    // Reset minSize\r\n                    me.minSize = {\r\n                        width: 0,\r\n                        height: 0\r\n                    };\r\n                },\r\n                afterSetDimensions: noop,\r\n\r\n                //\r\n\r\n                beforeBuildLabels: noop,\r\n                buildLabels: noop,\r\n                afterBuildLabels: noop,\r\n\r\n                //\r\n\r\n                beforeFit: noop,\r\n                fit: function() {\r\n                    var me = this;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var opts = me.options;\r\n                    var display = opts.display;\r\n                    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\r\n                    var minSize = me.minSize;\r\n                    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\r\n                    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\r\n                    var textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\r\n\r\n                    if (me.isHorizontal()) {\r\n                        minSize.width = me.maxWidth; // fill all the width\r\n                        minSize.height = textSize;\r\n                    } else {\r\n                        minSize.width = textSize;\r\n                        minSize.height = me.maxHeight; // fill all the height\r\n                    }\r\n\r\n                    me.width = minSize.width;\r\n                    me.height = minSize.height;\r\n                },\r\n                afterFit: noop,\r\n\r\n                // Shared Methods\r\n                isHorizontal: function() {\r\n                    var pos = this.options.position;\r\n                    return pos === 'top' || pos === 'bottom';\r\n                },\r\n\r\n                // Actually draw the title block on the canvas\r\n                draw: function() {\r\n                    var me = this;\r\n                    var ctx = me.ctx;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var opts = me.options;\r\n                    var globalDefaults = defaults.global;\r\n\r\n                    if (opts.display) {\r\n                        var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\r\n                        var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\r\n                        var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\r\n                        var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n                        var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\r\n                        var offset = lineHeight / 2 + opts.padding;\r\n                        var rotation = 0;\r\n                        var top = me.top;\r\n                        var left = me.left;\r\n                        var bottom = me.bottom;\r\n                        var right = me.right;\r\n                        var maxWidth, titleX, titleY;\r\n\r\n                        ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\r\n                        ctx.font = titleFont;\r\n\r\n                        // Horizontal\r\n                        if (me.isHorizontal()) {\r\n                            titleX = left + ((right - left) / 2); // midpoint of the width\r\n                            titleY = top + offset;\r\n                            maxWidth = right - left;\r\n                        } else {\r\n                            titleX = opts.position === 'left' ? left + offset : right - offset;\r\n                            titleY = top + ((bottom - top) / 2);\r\n                            maxWidth = bottom - top;\r\n                            rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\r\n                        }\r\n\r\n                        ctx.save();\r\n                        ctx.translate(titleX, titleY);\r\n                        ctx.rotate(rotation);\r\n                        ctx.textAlign = 'center';\r\n                        ctx.textBaseline = 'middle';\r\n\r\n                        var text = opts.text;\r\n                        if (helpers.isArray(text)) {\r\n                            var y = 0;\r\n                            for (var i = 0; i < text.length; ++i) {\r\n                                ctx.fillText(text[i], 0, y, maxWidth);\r\n                                y += lineHeight;\r\n                            }\r\n                        } else {\r\n                            ctx.fillText(text, 0, 0, maxWidth);\r\n                        }\r\n\r\n                        ctx.restore();\r\n                    }\r\n                }\r\n            });\r\n\r\n            function createNewTitleBlockAndAttach(chart, titleOpts) {\r\n                var title = new Title({\r\n                    ctx: chart.ctx,\r\n                    options: titleOpts,\r\n                    chart: chart\r\n                });\r\n\r\n                layouts.configure(chart, title, titleOpts);\r\n                layouts.addBox(chart, title);\r\n                chart.titleBlock = title;\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'title',\r\n\r\n                /**\r\n                 * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\r\n                 * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\r\n                 * the plugin, which one will be re-exposed in the chart.js file.\r\n                 * https://github.com/chartjs/Chart.js/pull/2640\r\n                 * @private\r\n                 */\r\n                _element: Title,\r\n\r\n                beforeInit: function(chart) {\r\n                    var titleOpts = chart.options.title;\r\n\r\n                    if (titleOpts) {\r\n                        createNewTitleBlockAndAttach(chart, titleOpts);\r\n                    }\r\n                },\r\n\r\n                beforeUpdate: function(chart) {\r\n                    var titleOpts = chart.options.title;\r\n                    var titleBlock = chart.titleBlock;\r\n\r\n                    if (titleOpts) {\r\n                        helpers.mergeIf(titleOpts, defaults.global.title);\r\n\r\n                        if (titleBlock) {\r\n                            layouts.configure(chart, titleBlock, titleOpts);\r\n                            titleBlock.options = titleOpts;\r\n                        } else {\r\n                            createNewTitleBlockAndAttach(chart, titleOpts);\r\n                        }\r\n                    } else if (titleBlock) {\r\n                        layouts.removeBox(chart, titleBlock);\r\n                        delete chart.titleBlock;\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"21\": 21, \"36\": 36 }], 44: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                // Default config for a category scale\r\n                var defaultConfig = {\r\n                    position: 'bottom'\r\n                };\r\n\r\n                var DatasetScale = Chart.Scale.extend({\r\n                    /**\r\n                    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\r\n                    * else fall back to data.labels\r\n                    * @private\r\n                    */\r\n                    getLabels: function() {\r\n                        var data = this.chart.data;\r\n                        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\r\n                    },\r\n\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var labels = me.getLabels();\r\n                        me.minIndex = 0;\r\n                        me.maxIndex = labels.length - 1;\r\n                        var findIndex;\r\n\r\n                        if (me.options.ticks.min !== undefined) {\r\n                            // user specified min value\r\n                            findIndex = labels.indexOf(me.options.ticks.min);\r\n                            me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\r\n                        }\r\n\r\n                        if (me.options.ticks.max !== undefined) {\r\n                            // user specified max value\r\n                            findIndex = labels.indexOf(me.options.ticks.max);\r\n                            me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\r\n                        }\r\n\r\n                        me.min = labels[me.minIndex];\r\n                        me.max = labels[me.maxIndex];\r\n                    },\r\n\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var labels = me.getLabels();\r\n                        // If we are viewing some subset of labels, slice the original array\r\n                        me.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\r\n                    },\r\n\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        var me = this;\r\n                        var data = me.chart.data;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        if (data.yLabels && !isHorizontal) {\r\n                            return me.getRightValue(data.datasets[datasetIndex].data[index]);\r\n                        }\r\n                        return me.ticks[index - me.minIndex];\r\n                    },\r\n\r\n                    // Used to get data value locations.  Value can either be an index or a numerical value\r\n                    getPixelForValue: function(value, index) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        // 1 is added because we need the length but we have the indexes\r\n                        var offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\r\n\r\n                        // If value is a data object, then index is the index in the data array,\r\n                        // not the index of the scale. We need to change that.\r\n                        var valueCategory;\r\n                        if (value !== undefined && value !== null) {\r\n                            valueCategory = me.isHorizontal() ? value.x : value.y;\r\n                        }\r\n                        if (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\r\n                            var labels = me.getLabels();\r\n                            value = valueCategory || value;\r\n                            var idx = labels.indexOf(value);\r\n                            index = idx !== -1 ? idx : index;\r\n                        }\r\n\r\n                        if (me.isHorizontal()) {\r\n                            var valueWidth = me.width / offsetAmt;\r\n                            var widthOffset = (valueWidth * (index - me.minIndex));\r\n\r\n                            if (offset) {\r\n                                widthOffset += (valueWidth / 2);\r\n                            }\r\n\r\n                            return me.left + Math.round(widthOffset);\r\n                        }\r\n                        var valueHeight = me.height / offsetAmt;\r\n                        var heightOffset = (valueHeight * (index - me.minIndex));\r\n\r\n                        if (offset) {\r\n                            heightOffset += (valueHeight / 2);\r\n                        }\r\n\r\n                        return me.top + Math.round(heightOffset);\r\n                    },\r\n                    getPixelForTick: function(index) {\r\n                        return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        var value;\r\n                        var offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\r\n                        var horz = me.isHorizontal();\r\n                        var valueDimension = (horz ? me.width : me.height) / offsetAmt;\r\n\r\n                        pixel -= horz ? me.left : me.top;\r\n\r\n                        if (offset) {\r\n                            pixel -= (valueDimension / 2);\r\n                        }\r\n\r\n                        if (pixel <= 0) {\r\n                            value = 0;\r\n                        } else {\r\n                            value = Math.round(pixel / valueDimension);\r\n                        }\r\n\r\n                        return value + me.minIndex;\r\n                    },\r\n                    getBasePixel: function() {\r\n                        return this.bottom;\r\n                    }\r\n                });\r\n\r\n                Chart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\r\n            };\r\n        }, {}], 45: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var Ticks = require(25);\r\n\r\n            module.exports = function(Chart) {\r\n                var defaultConfig = {\r\n                    position: 'left',\r\n                    ticks: {\r\n                        callback: Ticks.formatters.linear\r\n                    }\r\n                };\r\n\r\n                var LinearScale = Chart.LinearScaleBase.extend({\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var chart = me.chart;\r\n                        var data = chart.data;\r\n                        var datasets = data.datasets;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var DEFAULT_MIN = 0;\r\n                        var DEFAULT_MAX = 1;\r\n\r\n                        function IDMatches(meta) {\r\n                            return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\r\n                        }\r\n\r\n                        // First Calculate the range\r\n                        me.min = null;\r\n                        me.max = null;\r\n\r\n                        var hasStacks = opts.stacked;\r\n                        if (hasStacks === undefined) {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                if (hasStacks) {\r\n                                    return;\r\n                                }\r\n\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\r\n                                    meta.stack !== undefined) {\r\n                                    hasStacks = true;\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        if (opts.stacked || hasStacks) {\r\n                            var valuesPerStack = {};\r\n\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                var key = [\r\n                                    meta.type,\r\n                                    // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\r\n                                    ((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\r\n                                    meta.stack\r\n                                ].join('.');\r\n\r\n                                if (valuesPerStack[key] === undefined) {\r\n                                    valuesPerStack[key] = {\r\n                                        positiveValues: [],\r\n                                        negativeValues: []\r\n                                    };\r\n                                }\r\n\r\n                                // Store these per type\r\n                                var positiveValues = valuesPerStack[key].positiveValues;\r\n                                var negativeValues = valuesPerStack[key].negativeValues;\r\n\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        positiveValues[index] = positiveValues[index] || 0;\r\n                                        negativeValues[index] = negativeValues[index] || 0;\r\n\r\n                                        if (opts.relativePoints) {\r\n                                            positiveValues[index] = 100;\r\n                                        } else if (value < 0) {\r\n                                            negativeValues[index] += value;\r\n                                        } else {\r\n                                            positiveValues[index] += value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n\r\n                            helpers.each(valuesPerStack, function(valuesForType) {\r\n                                var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\r\n                                var minVal = helpers.min(values);\r\n                                var maxVal = helpers.max(values);\r\n                                me.min = me.min === null ? minVal : Math.min(me.min, minVal);\r\n                                me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\r\n                            });\r\n                        } else {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        if (me.min === null) {\r\n                                            me.min = value;\r\n                                        } else if (value < me.min) {\r\n                                            me.min = value;\r\n                                        }\r\n\r\n                                        if (me.max === null) {\r\n                                            me.max = value;\r\n                                        } else if (value > me.max) {\r\n                                            me.max = value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\r\n                        me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\r\n\r\n                        // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\r\n                        this.handleTickRangeOptions();\r\n                    },\r\n                    getTickLimit: function() {\r\n                        var maxTicks;\r\n                        var me = this;\r\n                        var tickOpts = me.options.ticks;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\r\n                        } else {\r\n                            // The factor of 2 used to scale the font size has been experimentally determined.\r\n                            var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\r\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\r\n                        }\r\n\r\n                        return maxTicks;\r\n                    },\r\n                    // Called after the ticks are built. We need\r\n                    handleDirectionalChanges: function() {\r\n                        if (!this.isHorizontal()) {\r\n                            // We are in a vertical orientation. The top value is the highest. So reverse the array\r\n                            this.ticks.reverse();\r\n                        }\r\n                    },\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n                    },\r\n                    // Utils\r\n                    getPixelForValue: function(value) {\r\n                        // This must be called after fit has been run so that\r\n                        // this.left, this.top, this.right, and this.bottom have been defined\r\n                        var me = this;\r\n                        var start = me.start;\r\n\r\n                        var rightValue = +me.getRightValue(value);\r\n                        var pixel;\r\n                        var range = me.end - start;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            pixel = me.left + (me.width / range * (rightValue - start));\r\n                        } else {\r\n                            pixel = me.bottom - (me.height / range * (rightValue - start));\r\n                        }\r\n                        return pixel;\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var innerDimension = isHorizontal ? me.width : me.height;\r\n                        var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\r\n                        return me.start + ((me.end - me.start) * offset);\r\n                    },\r\n                    getPixelForTick: function(index) {\r\n                        return this.getPixelForValue(this.ticksAsNumbers[index]);\r\n                    }\r\n                });\r\n                Chart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\r\n            };\r\n        }, { \"16\": 16, \"25\": 25, \"36\": 36 }], 46: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Generate a set of linear ticks\r\n             * @param generationOptions the options used to generate the ticks\r\n             * @param dataRange the range of the data\r\n             * @returns {Array<Number>} array of tick values\r\n             */\r\n            function generateTicks(generationOptions, dataRange) {\r\n                var ticks = [];\r\n                // To get a \"nice\" value for the tick spacing, we will use the appropriately named\r\n                // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\r\n                // for details.\r\n\r\n                var spacing;\r\n                if (generationOptions.stepSize && generationOptions.stepSize > 0) {\r\n                    spacing = generationOptions.stepSize;\r\n                } else {\r\n                    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\r\n                    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\r\n                }\r\n                var niceMin = Math.floor(dataRange.min / spacing) * spacing;\r\n                var niceMax = Math.ceil(dataRange.max / spacing) * spacing;\r\n\r\n                // If min, max and stepSize is set and they make an evenly spaced scale use it.\r\n                if (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\r\n                    // If very close to our whole number, use it.\r\n                    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\r\n                        niceMin = generationOptions.min;\r\n                        niceMax = generationOptions.max;\r\n                    }\r\n                }\r\n\r\n                var numSpaces = (niceMax - niceMin) / spacing;\r\n                // If very close to our rounded value, use it.\r\n                if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n                    numSpaces = Math.round(numSpaces);\r\n                } else {\r\n                    numSpaces = Math.ceil(numSpaces);\r\n                }\r\n\r\n                var precision = 1;\r\n                if (spacing < 1) {\r\n                    precision = Math.pow(10, spacing.toString().length - 2);\r\n                    niceMin = Math.round(niceMin * precision) / precision;\r\n                    niceMax = Math.round(niceMax * precision) / precision;\r\n                }\r\n                ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\r\n                for (var j = 1; j < numSpaces; ++j) {\r\n                    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\r\n                }\r\n                ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\r\n\r\n                return ticks;\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                var noop = helpers.noop;\r\n\r\n                Chart.LinearScaleBase = Chart.Scale.extend({\r\n                    getRightValue: function(value) {\r\n                        if (typeof value === 'string') {\r\n                            return +value;\r\n                        }\r\n                        return Chart.Scale.prototype.getRightValue.call(this, value);\r\n                    },\r\n\r\n                    handleTickRangeOptions: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\r\n                        // do nothing since that would make the chart weird. If the user really wants a weird chart\r\n                        // axis, they can manually override it\r\n                        if (tickOpts.beginAtZero) {\r\n                            var minSign = helpers.sign(me.min);\r\n                            var maxSign = helpers.sign(me.max);\r\n\r\n                            if (minSign < 0 && maxSign < 0) {\r\n                                // move the top up to 0\r\n                                me.max = 0;\r\n                            } else if (minSign > 0 && maxSign > 0) {\r\n                                // move the bottom down to 0\r\n                                me.min = 0;\r\n                            }\r\n                        }\r\n\r\n                        var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\r\n                        var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\r\n\r\n                        if (tickOpts.min !== undefined) {\r\n                            me.min = tickOpts.min;\r\n                        } else if (tickOpts.suggestedMin !== undefined) {\r\n                            if (me.min === null) {\r\n                                me.min = tickOpts.suggestedMin;\r\n                            } else {\r\n                                me.min = Math.min(me.min, tickOpts.suggestedMin);\r\n                            }\r\n                        }\r\n\r\n                        if (tickOpts.max !== undefined) {\r\n                            me.max = tickOpts.max;\r\n                        } else if (tickOpts.suggestedMax !== undefined) {\r\n                            if (me.max === null) {\r\n                                me.max = tickOpts.suggestedMax;\r\n                            } else {\r\n                                me.max = Math.max(me.max, tickOpts.suggestedMax);\r\n                            }\r\n                        }\r\n\r\n                        if (setMin !== setMax) {\r\n                            // We set the min or the max but not both.\r\n                            // So ensure that our range is good\r\n                            // Inverted or 0 length range can happen when\r\n                            // ticks.min is set, and no datasets are visible\r\n                            if (me.min >= me.max) {\r\n                                if (setMin) {\r\n                                    me.max = me.min + 1;\r\n                                } else {\r\n                                    me.min = me.max - 1;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (me.min === me.max) {\r\n                            me.max++;\r\n\r\n                            if (!tickOpts.beginAtZero) {\r\n                                me.min--;\r\n                            }\r\n                        }\r\n                    },\r\n                    getTickLimit: noop,\r\n                    handleDirectionalChanges: noop,\r\n\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        // Figure out what the max number of ticks we can support it is based on the size of\r\n                        // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n                        // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n                        // the graph. Make sure we always have at least 2 ticks\r\n                        var maxTicks = me.getTickLimit();\r\n                        maxTicks = Math.max(2, maxTicks);\r\n\r\n                        var numericGeneratorOptions = {\r\n                            maxTicks: maxTicks,\r\n                            min: tickOpts.min,\r\n                            max: tickOpts.max,\r\n                            stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\r\n                        };\r\n                        var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\r\n\r\n                        me.handleDirectionalChanges();\r\n\r\n                        // At this point, we need to update our max and min given the tick values since we have expanded the\r\n                        // range of the scale\r\n                        me.max = helpers.max(ticks);\r\n                        me.min = helpers.min(ticks);\r\n\r\n                        if (tickOpts.reverse) {\r\n                            ticks.reverse();\r\n\r\n                            me.start = me.max;\r\n                            me.end = me.min;\r\n                        } else {\r\n                            me.start = me.min;\r\n                            me.end = me.max;\r\n                        }\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        me.ticksAsNumbers = me.ticks.slice();\r\n                        me.zeroLineIndex = me.ticks.indexOf(0);\r\n\r\n                        Chart.Scale.prototype.convertTicksToLabels.call(me);\r\n                    }\r\n                });\r\n            };\r\n        }, { \"36\": 36 }]\r\n    }, {}, [6])(6)\r\n});\r\n","/*!\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n * MIT license http://www.opensource.org/licenses/mit-license.php/\r\n * @author Lea Verou http://lea.verou.me\r\n */\r\n(function(root) {\r\n    // Private helper vars\r\n    var lang = /\\blang(?:uage)?-(?!\\*)(\\w+)\\b/i;\r\n\r\n    var _ = prism = {\r\n        util: {\r\n            encode: function(tokens) {\r\n                if (tokens instanceof Token) {\r\n                    return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\r\n                } else if (_.util.type(tokens) === 'Array') {\r\n                    return tokens.map(_.util.encode);\r\n                } else {\r\n                    return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\r\n                }\r\n            },\r\n\r\n            type: function(o) {\r\n                return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\r\n            },\r\n\r\n            // Deep clone a language definition (e.g. to extend it)\r\n            clone: function(o) {\r\n                var type = _.util.type(o);\r\n\r\n                switch (type) {\r\n                    case 'Object':\r\n                        var clone = {};\r\n\r\n                        for (var key in o) {\r\n                            if (o.hasOwnProperty(key)) {\r\n                                clone[key] = _.util.clone(o[key]);\r\n                            }\r\n                        }\r\n\r\n                        return clone;\r\n\r\n                    case 'Array':\r\n                        // Check for existence for IE8\r\n                        return o.map && o.map(function(v) { return _.util.clone(v); });\r\n                }\r\n\r\n                return o;\r\n            }\r\n        },\r\n\r\n        languages: {\r\n            extend: function(id, redef) {\r\n                var lang = _.util.clone(_.languages[id]);\r\n\r\n                for (var key in redef) {\r\n                    lang[key] = redef[key];\r\n                }\r\n\r\n                return lang;\r\n            },\r\n\r\n            /**\r\n             * Insert a token before another token in a language literal\r\n             * As this needs to recreate the object (we cannot actually insert before keys in object literals),\r\n             * we cannot just provide an object, we need anobject and a key.\r\n             * @param inside The key (or language id) of the parent\r\n             * @param before The key to insert before. If not provided, the function appends instead.\r\n             * @param insert Object with the key/value pairs to insert\r\n             * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\r\n             */\r\n            insertBefore: function(inside, before, insert, root) {\r\n                root = root || _.languages;\r\n                var grammar = root[inside];\r\n\r\n                if (arguments.length == 2) {\r\n                    insert = arguments[1];\r\n\r\n                    for (var newToken in insert) {\r\n                        if (insert.hasOwnProperty(newToken)) {\r\n                            grammar[newToken] = insert[newToken];\r\n                        }\r\n                    }\r\n\r\n                    return grammar;\r\n                }\r\n\r\n                var ret = {};\r\n\r\n                for (var token in grammar) {\r\n                    if (grammar.hasOwnProperty(token)) {\r\n                        if (token == before) {\r\n                            for (var newToken in insert) {\r\n                                if (insert.hasOwnProperty(newToken)) {\r\n                                    ret[newToken] = insert[newToken];\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        ret[token] = grammar[token];\r\n                    }\r\n                }\r\n\r\n                // Update references in other language definitions\r\n                _.languages.DFS(_.languages, function(key, value) {\r\n                    if (value === root[inside] && key != inside) {\r\n                        this[key] = ret;\r\n                    }\r\n                });\r\n\r\n                return root[inside] = ret;\r\n            },\r\n\r\n            // Traverse a language definition with Depth First Search\r\n            DFS: function(o, callback, type, visited) {\r\n                visited = visited || {};\r\n                for (var i in o) {\r\n                    if (o.hasOwnProperty(i)) {\r\n                        callback.call(o, i, o[i], type || i);\r\n\r\n                        if (_.util.type(o[i]) === 'Object' && !visited[o[i]]) {\r\n                            visited[o[i]] = true;\r\n                            _.languages.DFS(o[i], callback, null, visited);\r\n                        }\r\n                        else if (_.util.type(o[i]) === 'Array' && !visited[o[i]]) {\r\n                            visited[o[i]] = true;\r\n                            _.languages.DFS(o[i], callback, i, visited);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        plugins: {},\r\n\r\n        highlightAll: function(async, callback) {\r\n            var elements = document.querySelectorAll('code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code');\r\n\r\n            for (var i = 0, element; element = elements[i++];) {\r\n                _.highlightElement(element, async === true, callback);\r\n            }\r\n        },\r\n\r\n        highlightElement: function(element, async, callback) {\r\n            // Find language\r\n            var language, grammar, parent = element;\r\n\r\n            while (parent && !lang.test(parent.className)) {\r\n                parent = parent.parentNode;\r\n            }\r\n\r\n            if (parent) {\r\n                language = (parent.className.match(lang) || [, ''])[1];\r\n                grammar = _.languages[language];\r\n            }\r\n\r\n            // Set language on the element, if not present\r\n            element.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\r\n\r\n            // Set language on the parent, for styling\r\n            parent = element.parentNode;\r\n\r\n            if (/pre/i.test(parent.nodeName)) {\r\n                parent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\r\n            }\r\n\r\n            var code = element.textContent;\r\n\r\n            var env = {\r\n                element: element,\r\n                language: language,\r\n                grammar: grammar,\r\n                code: code\r\n            };\r\n\r\n            if (!code || !grammar) {\r\n                _.hooks.run('complete', env);\r\n                return;\r\n            }\r\n\r\n            _.hooks.run('before-highlight', env);\r\n\r\n            if (async && root.Worker) {\r\n                var worker = new Worker(_.filename);\r\n\r\n                worker.onmessage = function(evt) {\r\n                    env.highlightedCode = evt.data;\r\n\r\n                    _.hooks.run('before-insert', env);\r\n\r\n                    env.element.innerHTML = env.highlightedCode;\r\n\r\n                    callback && callback.call(env.element);\r\n                    _.hooks.run('after-highlight', env);\r\n                    _.hooks.run('complete', env);\r\n                };\r\n\r\n                worker.postMessage(JSON.stringify({\r\n                    language: env.language,\r\n                    code: env.code,\r\n                    immediateClose: true\r\n                }));\r\n            }\r\n            else {\r\n                env.highlightedCode = _.highlight(env.code, env.grammar, env.language);\r\n\r\n                _.hooks.run('before-insert', env);\r\n\r\n                env.element.innerHTML = env.highlightedCode;\r\n\r\n                callback && callback.call(element);\r\n\r\n                _.hooks.run('after-highlight', env);\r\n                _.hooks.run('complete', env);\r\n            }\r\n        },\r\n\r\n        highlight: function(text, grammar, language) {\r\n            var tokens = _.tokenize(text, grammar);\r\n            return Token.stringify(_.util.encode(tokens), language);\r\n        },\r\n\r\n        tokenize: function(text, grammar, language) {\r\n            var Token = _.Token;\r\n\r\n            var strarr = [text];\r\n\r\n            var rest = grammar.rest;\r\n\r\n            if (rest) {\r\n                for (var token in rest) {\r\n                    grammar[token] = rest[token];\r\n                }\r\n\r\n                delete grammar.rest;\r\n            }\r\n\r\n            tokenloop: for (var token in grammar) {\r\n                if (!grammar.hasOwnProperty(token) || !grammar[token]) {\r\n                    continue;\r\n                }\r\n\r\n                var patterns = grammar[token];\r\n                patterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\r\n\r\n                for (var j = 0; j < patterns.length; ++j) {\r\n                    var pattern = patterns[j],\r\n                        inside = pattern.inside,\r\n                        lookbehind = !!pattern.lookbehind,\r\n                        lookbehindLength = 0,\r\n                        alias = pattern.alias;\r\n\r\n                    pattern = pattern.pattern || pattern;\r\n\r\n                    for (var i = 0; i < strarr.length; i++) { // Don’t cache length as it changes during the loop\r\n                        var str = strarr[i];\r\n\r\n                        if (strarr.length > text.length) {\r\n                            // Something went terribly wrong, ABORT, ABORT!\r\n                            break tokenloop;\r\n                        }\r\n\r\n                        if (str instanceof Token) {\r\n                            continue;\r\n                        }\r\n\r\n                        pattern.lastIndex = 0;\r\n\r\n                        var match = pattern.exec(str);\r\n\r\n                        if (match) {\r\n                            if (lookbehind) {\r\n                                lookbehindLength = match[1].length;\r\n                            }\r\n\r\n                            var from = match.index - 1 + lookbehindLength,\r\n                                match = match[0].slice(lookbehindLength),\r\n                                len = match.length,\r\n                                to = from + len,\r\n                                before = str.slice(0, from + 1),\r\n                                after = str.slice(to + 1);\r\n\r\n                            var args = [i, 1];\r\n\r\n                            if (before) {\r\n                                args.push(before);\r\n                            }\r\n\r\n                            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias);\r\n\r\n                            args.push(wrapped);\r\n\r\n                            if (after) {\r\n                                args.push(after);\r\n                            }\r\n\r\n                            Array.prototype.splice.apply(strarr, args);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return strarr;\r\n        },\r\n\r\n        hooks: {\r\n            all: {},\r\n\r\n            add: function(name, callback) {\r\n                var hooks = _.hooks.all;\r\n\r\n                hooks[name] = hooks[name] || [];\r\n\r\n                hooks[name].push(callback);\r\n            },\r\n\r\n            run: function(name, env) {\r\n                var callbacks = _.hooks.all[name];\r\n\r\n                if (!callbacks || !callbacks.length) {\r\n                    return;\r\n                }\r\n\r\n                for (var i = 0, callback; callback = callbacks[i++];) {\r\n                    callback(env);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var Token = _.Token = function(type, content, alias) {\r\n        this.type = type;\r\n        this.content = content;\r\n        this.alias = alias;\r\n    };\r\n\r\n    Token.stringify = function(o, language, parent) {\r\n        if (typeof o == 'string') {\r\n            return o;\r\n        }\r\n\r\n        if (_.util.type(o) === 'Array') {\r\n            return o.map(function(element) {\r\n                return Token.stringify(element, language, o);\r\n            }).join('');\r\n        }\r\n\r\n        var env = {\r\n            type: o.type,\r\n            content: Token.stringify(o.content, language, parent),\r\n            tag: 'span',\r\n            classes: ['token', o.type],\r\n            attributes: {},\r\n            language: language,\r\n            parent: parent\r\n        };\r\n\r\n        if (env.type == 'comment') {\r\n            env.attributes['spellcheck'] = 'true';\r\n        }\r\n\r\n        if (o.alias) {\r\n            var aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\r\n            Array.prototype.push.apply(env.classes, aliases);\r\n        }\r\n\r\n        _.hooks.run('wrap', env);\r\n\r\n        var attributes = '';\r\n\r\n        for (var name in env.attributes) {\r\n            attributes += (attributes ? ' ' : '') + name + '=\"' + (env.attributes[name] || '') + '\"';\r\n        }\r\n\r\n        return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\" ' + attributes + '>' + env.content + '</' + env.tag + '>';\r\n    };\r\n\r\n    root.Prism = prism;\r\n})(this);\r\n\r\nPrism.languages.sql = {\r\n    'comment': {\r\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\w\\W]*?\\*\\/|(?:--|\\/\\/|#).*)/,\r\n        lookbehind: true\r\n    },\r\n    'string': {\r\n        pattern: /(^|[^@\\\\])(\"|')(?:\\\\?[\\s\\S])*?\\2/,\r\n        lookbehind: true\r\n    },\r\n    'variable': /@[\\w.$]+|@(\"|'|`)(?:\\\\?[\\s\\S])+?\\1/,\r\n    'function': /\\b(?:COUNT|SUM|AVG|MIN|MAX|FIRST|LAST|UCASE|LCASE|MID|LEN|ROUND|NOW|FORMAT)(?=\\s*\\()/i, // Should we highlight user defined functions too?\r\n    'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR VARYING|CHARACTER (?:SET|VARYING)|CHARSET|CHECK|CHECKPOINT|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMN|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS|CONTAINSTABLE|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|DATA(?:BASES?)?|DATETIME|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE(?: PRECISION)?|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE KEY|ELSE|ENABLE|ENCLOSED BY|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPE(?:D BY)?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTO|INVOKER|ISOLATION LEVEL|JOIN|KEYS?|KILL|LANGUAGE SQL|LAST|LEFT|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MODIFIES SQL DATA|MODIFY|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL(?: CHAR VARYING| CHARACTER(?: VARYING)?| VARCHAR)?|NATURAL|NCHAR(?: VARCHAR)?|NEXT|NO(?: SQL|CHECK|CYCLE)?|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READ(?:S SQL DATA|TEXT)?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEATABLE|REPLICATION|REQUIRE|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE MODE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|START(?:ING BY)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED BY|TEXT(?:SIZE)?|THEN|TIMESTAMP|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNPIVOT|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?)\\b/i,\r\n    'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\r\n    'number': /\\b-?(?:0x)?\\d*\\.?[\\da-f]+\\b/,\r\n    'operator': /[-+*\\/=%^~]|&&?|\\|?\\||!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\r\n    'punctuation': /[;[\\]()`,.]/\r\n};\r\n","/*!\r\n * Allowing lists to dynamically expand and collapse.\r\n * Created by Stephen Morley - http://code.stephenmorley.org/ - and released under the terms of the CC0 1.0 Universal legal code:\r\n * http://creativecommons.org/publicdomain/zero/1.0/legalcode\r\n *\r\n * Modified to work with bootstrap/fontAwesome and incorporate cascading checkboxes.\r\n */\r\n(function(root, factory) {\r\n    window.CollapsibleList = factory(root.$);\r\n})(this, function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare CollapsibleList class.\r\n     * @param {Node} element - Node to make collapsible.\r\n     */\r\n    var CollapsibleList = function(element) {\r\n        this.container = $.get(element);\r\n        this.init();\r\n    };\r\n\r\n    CollapsibleList.prototype = {\r\n        init: function() {\r\n            var node = this.container;\r\n            // loop over the list items within this node\r\n            var lis = $.getAll('li', node);\r\n            for (var i = 0; i < lis.length; i++) {\r\n                // prevent text from being selected unintentionally\r\n                $.on(lis[i], 'mousedown', function(e) { e.preventDefault(); }, false);\r\n                // add the click listener\r\n                $.on(lis[i], 'click', this.createClickListener(lis[i]), false);\r\n                // close the unordered lists within this list item\r\n                this.toggle(lis[i]);\r\n\r\n                // check any parent items if this item is checked\r\n                node = $.get('input[type=\"checkbox\"]', lis[i]);\r\n                if (node.checked) {\r\n                    var p = node;\r\n                    while (this.container !== (p = p.parentNode)) {\r\n                        if (p.nodeName === 'LI') {\r\n                            var parent = p.parentNode.parentNode;\r\n                            if (parent.nodeName === 'LI') {\r\n                                var pi = $.get('input[type=\"checkbox\"]', parent);\r\n                                if (pi && pi !== node) {\r\n                                    pi.checked = true;\r\n                                }\r\n                                this.toggle(parent, true);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Toggles the display status of any unordered list elements within the specified node.\r\n         * @param {Node} node - Node containing the unordered list elements.\r\n         * @returns {Function} Click handler function.\r\n         */\r\n        createClickListener: function(node) {\r\n            var self = this;\r\n            return function(e) {\r\n                // ensure the event object is defined\r\n                e = $.coalesce(e, window.event);\r\n\r\n                // find the list item containing the target of the event\r\n                var elem = $.coalesce(e.target, e.srcElement);\r\n\r\n                // handle checking/unchecking buttons\r\n                if (elem.nodeName === 'INPUT') {\r\n                    var checked = elem.checked;\r\n\r\n                    // first toggle the check for all of the children\r\n                    var inputs = $.getAll('ul input[type=\"checkbox\"]', $.closest('li', elem));\r\n                    i = inputs.length;\r\n                    while (i--) {\r\n                        inputs[i].checked = checked;\r\n                    }\r\n\r\n                    // then check all parents. if any of the children of a checkbox are checked, then it should be checked.\r\n                    var checkedRelative = false;\r\n                    var p = elem;\r\n                    while (self.container !== (p = p.parentNode)) {\r\n                        if (p.nodeName === 'LI') {\r\n                            // see if anybody else on this node level is checked\r\n                            var relatives = $.getAll('input[type=\"checkbox\"]', p.parentNode);\r\n                            var i = relatives.length;\r\n                            checkedRelative = false;\r\n                            while (i--) {\r\n                                if (relatives[i].checked) {\r\n                                    checkedRelative = true;\r\n                                }\r\n                            }\r\n\r\n                            if (p.parentNode.parentNode !== self.container) {\r\n                                var pi = $.get('input[type=\"checkbox\"]', p.parentNode.parentNode);\r\n                                if (pi && pi !== elem) {\r\n                                    pi.checked = checkedRelative || checked;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                if ($.hasClass(elem, 'form-group') || $.hasClass(elem, 'form-icon') || (elem.parentNode && $.hasClass(elem.parentNode, 'form-group'))) {\r\n                    // prevent toggling tree when checking/unchecking an element\r\n                    return;\r\n                }\r\n\r\n                // now handle the tree itself\r\n                while (elem.nodeName !== 'LI') {\r\n                    elem = elem.parentNode;\r\n                }\r\n\r\n                // toggle the state of the node if it was the target of the event\r\n                if (elem === node) {\r\n                    self.toggle(node);\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Opens or closes the unordered list elements directly within the specified node.\r\n         * @param {Node} node - Node containing the unordered list elements.\r\n         * @param {bool} forceOpen - Set to true to force the node to be open regardless of current status.\r\n         */\r\n        toggle: function(node, forceOpen) {\r\n            // determine whether to open or close the unordered lists\r\n            var open = $.coalesce(forceOpen, $.hasClass(node, 'collapsible-list-closed'));\r\n\r\n            // loop over the unordered list elements with the node\r\n            var uls = $.getAll('ul', node);\r\n            for (var i = 0; i < uls.length; i++) {\r\n                // find the parent list item of this unordered list\r\n                var li = uls[i];\r\n                while (li.nodeName !== 'LI') {\r\n                    li = li.parentNode;\r\n                }\r\n\r\n                // style the unordered list if it is directly within this node\r\n                if (li === node) {\r\n                    uls[i].style.display = open ? 'block' : 'none';\r\n                }\r\n            }\r\n\r\n            // remove the current class from the node\r\n            $.removeClass(node, 'collapsible-list-' + (open ? 'closed' : 'open'));\r\n\r\n            // if the node contains unordered lists, set its class\r\n            if (uls.length) {\r\n                $.addClass(node, 'collapsible-list-' + (open ? 'open' : 'closed'));\r\n            }\r\n        }\r\n    };\r\n\r\n    return CollapsibleList;\r\n});\r\n","/*!\r\n * Validator that converts HTML5 form validation errors into bootstrap friendly errors.\r\n * Based on the library below, but ported from jQuery to native js.\r\n *\r\n * Validator v0.9.0 for Bootstrap 3, by @1000hz\r\n * Copyright 2015 Cina Saffary\r\n * Licensed under http://opensource.org/licenses/MIT\r\n * https://github.com/1000hz/bootstrap-validator\r\n *\r\n * Modified to use Dash's core library instead of jQuery, with unneeded functionality removed.\r\n */\r\n(function(root, factory) {\r\n    root.Validator = factory(root.$);\r\n})(this, function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare validator class.\r\n     * @param {Node} element - Form to validate.\r\n     * @param {Object} errorMsgs - Error messages for custom errors.\r\n     */\r\n    var Validator = function(element, errorMsgs) {\r\n        this.element = element;\r\n        this.element.setAttribute('novalidate', true); // disable automatic native validation\r\n        this.errorMsgs = $.extend({}, Validator._errors, errorMsgs || {});\r\n\r\n        var inputs = $.getAll('[data-match]', this.element);\r\n        for (var i = 0; i < inputs.length; i++) {\r\n            // add the data match attribute to the target if it doesn't already exist\r\n            var target = inputs[i].getAttribute('data-match');\r\n            if (target) {\r\n                var targetElement = $.get('#' + target, this.element);\r\n                if (targetElement && !targetElement.hasAttribute('data-match')) {\r\n                    targetElement.setAttribute('data-match', inputs[i].id);\r\n                }\r\n            }\r\n        }\r\n\r\n        // check for pre-existing error classes because razor is weird sometimes\r\n        this.resetAll();\r\n\r\n        $.on(this.element, 'input', this.validateInput.bind(this));\r\n        $.on(this.element, 'change', this.validateInput.bind(this));\r\n        $.on(this.element, 'focusout', this.validateInput.bind(this));\r\n        $.on(this.element, 'submit', this.onSubmit.bind(this));\r\n        $.on(this.element, 'formValidate', this.validate.bind(this));\r\n    };\r\n\r\n    /**\r\n     * Default error messages for custom errors.\r\n     * @type {Object}\r\n     */\r\n    Validator._errors = {\r\n        match: '{0} does not match {1}.',\r\n        minlength: 'This field is not long enough.'\r\n    };\r\n\r\n    /**\r\n     * Functions to validate inputs against.\r\n     * @type {Object}\r\n     */\r\n    Validator.VALIDATORS = {\r\n        'native': function(el) {\r\n            return el.checkValidity();\r\n        },\r\n        'match': function(el) {\r\n            var target = $.get('#' + el.getAttribute('data-match'), this.element);\r\n            var res = !target ? false : el.value === target.value;\r\n            if (res) {\r\n                el.setCustomValidity('');\r\n            } else {\r\n                el.setCustomValidity(this.errorMsgs.match.replace('{0}', el.name).replace('{1}', el.getAttribute('data-match')));\r\n            }\r\n            return res;\r\n        },\r\n        'minlength': function(el) {\r\n            var minlength = el.getAttribute('data-minlength');\r\n            var res = !el.value || el.value.length >= minlength;\r\n            if (res) {\r\n                el.setCustomValidity('');\r\n            } else {\r\n                el.setCustomValidity(this.errorMsgs.minlength);\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n\r\n    Validator.prototype = {\r\n        /**\r\n         * Validate a single input element.\r\n         * @param {Node} e - Element to validate\r\n         */\r\n        validateInput: function(e) {\r\n            var el;\r\n            if (this.isValidatableInput(e)) {\r\n                el = e;\r\n            } else if (e.target && this.isValidatableInput(e.target)) {\r\n                el = e.target;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            if (el.type === 'radio') {\r\n                el = $.getAll('input[name=\"' + el.getAttribute('name') + '\"]', self.element);\r\n            }\r\n\r\n            if (e.defaultPrevented) {\r\n                return;\r\n            }\r\n\r\n            var errors = this.runValidators(el);\r\n            if (errors.length) {\r\n                self.showErrors(el, errors);\r\n            } else {\r\n                self.clearErrors(el);\r\n                if (el.getAttribute('data-match')) {\r\n                    self.clearErrors($.get('#' + el.getAttribute('data-match'), self.element));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get all the validatable inputs in the form.\r\n         * @returns {Node[]} Array of input elements.\r\n         */\r\n        inputSelector: function() {\r\n            var inputs = $.getAll('input,select,textarea', this.element);\r\n            var length = inputs.length, i = 0, results = [];\r\n            for (; i < length; i++) {\r\n                var input = inputs[i];\r\n                if (input.type !== 'submit' && input.type !== 'button' && !input.getAttribute('disabled') && input.style.visibility !== 'hidden') {\r\n                    results.push(input);\r\n                } else {\r\n                    // remove error class on disabled items\r\n                    $.removeClass(input, 'form-control-error');\r\n                }\r\n            }\r\n            return results;\r\n        },\r\n\r\n        /**\r\n         * Get all the inputs in the form and remove error styling.\r\n         */\r\n        resetAll: function() {\r\n            $.getAll('input,select,textarea', this.element).forEach(function(x) {\r\n                $.removeClass(x, 'form-control-error');\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Check if a node is an input that can be validated.\r\n         * @param {Node} input - Node to check.\r\n         * @returns {bool} True if input is an input that can be validated.\r\n         */\r\n        isValidatableInput: function(input) {\r\n            return (input.tagName === 'INPUT' || input.tagName === 'SELECT' || input.tagName === 'TEXTAREA') && !input.getAttribute('disabled') && input.style.visibility !== 'hidden';\r\n        },\r\n\r\n        /**\r\n         * Run all of the validator functions against an element.\r\n         * @param {Node} el - Element to validate.\r\n         * @returns {string[]} Array of error messages.\r\n         */\r\n        runValidators: function(el) {\r\n            var errors = [];\r\n\r\n            for (var key in Validator.VALIDATORS) {\r\n                if (Validator.VALIDATORS.hasOwnProperty(key)) {\r\n                    var validator = Validator.VALIDATORS[key];\r\n                    var attr = el.getAttribute('data-' + key);\r\n                    if ((attr || key === 'native') && !validator.call(this, el)) {\r\n                        var error = el.getAttribute('data' + key + '-error') || el.getAttribute('data-error') || (key === 'native' ? el.validationMessage : this.errorMsgs[key]);\r\n                        if (key === 'match') {\r\n                            error = error.replace('{0}', el.name).replace('{1}', attr);\r\n                        }\r\n                        !~errors.indexOf(error) && errors.push(error);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        validate: function() {\r\n            var inputs = this.inputSelector();\r\n            var length = inputs.length, i = 0;\r\n            for (; i < length; i++) {\r\n                this.validateInput(inputs[i]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Display errors for an element.\r\n         * @param {Node} el - Element to display errors for.\r\n         * @param {string[]} errors - List of error messages.\r\n         */\r\n        showErrors: function(el, errors) {\r\n            if (!errors.length) {\r\n                return;\r\n            }\r\n\r\n            var group = $.closest('.form-group', el);\r\n            var block = $.get('.help-block.with-errors', group);\r\n\r\n            if (block) {\r\n                var errorElement = document.createElement('ul');\r\n                $.addClass(errorElement, 'list-unstyled');\r\n\r\n                var errHtml = '', i = 0, len = errors.length;\r\n                for (; i < len; i++) {\r\n                    errHtml += '<li>' + errors[i] + '</li>';\r\n                }\r\n                errorElement.innerHTML = errHtml;\r\n\r\n                block.innerHTML = '';\r\n                block.appendChild(errorElement);\r\n            }\r\n\r\n            $.addClass(el, 'form-control-error');\r\n\r\n            var tab = $.closest('.tab-pane', el);\r\n            if (tab) {\r\n                // add error class to tab\r\n                var id = tab.getAttribute('aria-labelledby');\r\n                if (id) {\r\n                    $.addClass($.get('#' + id), 'tab-validation-error');\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Hide all error messages for an element.\r\n         * @param {Node} el - Element to hide errors for.\r\n         */\r\n        clearErrors: function(el) {\r\n            $.removeClass(el, 'form-control-error');\r\n\r\n            var group = $.closest('.form-group', el);\r\n            if (group) {\r\n                var block = $.get('.help-block.with-errors', group);\r\n                if (block) {\r\n                    block.innerHTML = '';\r\n                }\r\n            }\r\n            var tab = $.closest('.tab-pane', el);\r\n            if (tab) {\r\n                if ($.getAll('.form-control-error', tab).length == 0) {\r\n                    var id = tab.getAttribute('aria-labelledby');\r\n                    if (id) {\r\n                        $.removeClass($.get('#' + id), 'tab-validation-error');\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check if the validator found any errors.\r\n         * @returns {bool} True if there are any errors.\r\n         */\r\n        hasErrors: function() {\r\n            return $.getAll('.form-control-error', this.element).length;\r\n        },\r\n\r\n        /**\r\n         * Validate the form and prevent submit if there are errors.\r\n         * @param {Event} e - Form submit event.\r\n         */\r\n        onSubmit: function(e) {\r\n            this.validate();\r\n            if (this.hasErrors()) {\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    };\r\n\r\n    return Validator;\r\n});\r\n","/*!\r\n * Color helper library.\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Convert hex string to RGB.\r\n     * @param {string} hex - Hex string.\r\n     * @returns {Object} Object with RGB properties.\r\n     */\r\n    var hex2rgb = function(hex) {\r\n        return { r: parseInt(hex.substr(1, 2), 16), g: parseInt(hex.substr(3, 2), 16), b: parseInt(hex.substr(5, 2), 16) };\r\n    };\r\n\r\n    /**\r\n     * Convert RGB to hex string.\r\n     * @param {Object} color Object with r/g/b properties.\r\n     * @returns {string} hex - Hex string.\r\n     */\r\n    var rgb2hex = function(color) {\r\n        var hex = [\r\n            (color.r * 1).toString(16),\r\n            (color.g * 1).toString(16),\r\n            (color.b * 1).toString(16)\r\n        ];\r\n        return '#' + hex.map(function(x) {\r\n            return ('00' + x.toString()).slice(-2);\r\n        }).join('').toUpperCase();\r\n    };\r\n\r\n    /**\r\n     * Converts an RGB color value to HSL. Conversion formula\r\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n     * Assumes r, g, and b are contained in the set [0, 255] and\r\n     * returns h, s, and l in the set [0, 1].\r\n     * @param {Object} rgb - Object with r, g, and b properties.\r\n     * @return {Number[]} The HSL representation.\r\n     */\r\n    var rgb2hsl = function(rgb) {\r\n        var r = rgb.r, g = rgb.g, b = rgb.b;\r\n        r /= 255, g /= 255, b /= 255;\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if (max === min) {\r\n            h = s = 0; // achromatic\r\n        } else {\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch (max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        return [h, s, l];\r\n    };\r\n\r\n    $.colors = {\r\n        hex2rgb: hex2rgb,\r\n        rgb2hex: rgb2hex,\r\n        rgb2hsl: rgb2hsl,\r\n    };\r\n})(this.$);\r\n","/*!\r\n * ColorPicker mithril component.\r\n */\r\n(function(root, factory) {\r\n    root.ColorPicker = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    var _keys = { ESC: 27 };\r\n\r\n    var ColorPicker = {\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            this.value = attrs.value;\r\n            if (this.value && this.value.substring(0, 1) !== '#') {\r\n                this.value = '#' + this.value;\r\n            }\r\n            this.color = $.colors.hex2rgb(this.value);\r\n            this.opts = {\r\n                name: attrs.name,\r\n                active: false,\r\n                disabled: attrs.disabled,\r\n                onSelect: attrs.onSelect,\r\n                container: null\r\n            };\r\n        },\r\n\r\n        oncreate: function(vnode) {\r\n            this.opts.container = vnode.dom;\r\n        },\r\n\r\n        onupdate: function(vnode) {\r\n            if (vnode.attrs) {\r\n                this.opts.name = vnode.attrs.name;\r\n            }\r\n        },\r\n\r\n        onKeyDown: function(e) {\r\n            if (this.opts.disabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.opts.active && e.keyCode === _keys.ESC) {\r\n                this.close();\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n        },\r\n\r\n        close: function() {\r\n            this.opts.active = false;\r\n            var trigger = $.get('.colorpicker-trigger', this.opts.container);\r\n            if (trigger) {\r\n                trigger.focus();\r\n            }\r\n        },\r\n\r\n        showEditor: function() {\r\n            if (this.opts.disabled) {\r\n                return;\r\n            }\r\n            this.opts.active = !this.opts.active;\r\n        },\r\n\r\n        setRed: function(value) {\r\n            this.color.r = value * 1;\r\n            this.setColor();\r\n        },\r\n\r\n        setGreen: function(value) {\r\n            this.color.g = value * 1;\r\n            this.setColor();\r\n        },\r\n\r\n        setBlue: function(value) {\r\n            this.color.b = value * 1;\r\n            this.setColor();\r\n        },\r\n\r\n        setColor: function() {\r\n            this.value = $.colors.rgb2hex(this.color);\r\n            if (this.opts.onSelect) {\r\n                this.opts.onSelect(this.value);\r\n            }\r\n        },\r\n\r\n        view: function() {\r\n            return m('.mithril-colorpicker', {\r\n                class: this.opts.active ? 'active' : '', onkeydown: this.onKeyDown.bind(this)\r\n            }, [m('button.btn.btn-secondary.colorpicker-trigger', {\r\n                type: 'button', role: 'button', disabled: this.opts.disabled,\r\n                onclick: this.showEditor.bind(this),\r\n                style: 'background-color: ' + this.value\r\n            }, [m.trust('&nbsp;'), m('i.dash.colorpicker-indicator', { class: this.opts.active ? 'dash-sort-up' : 'dash-sort-down' })]),\r\n            this.opts.active && m('.editor',\r\n                m('div', [\r\n                    m('input.range-red', { type: 'range', min: 0, max: 255, oninput: m.withAttr('value', this.setRed.bind(this)), value: this.color.r }),\r\n                    m('input.range-green', { type: 'range', min: 0, max: 255, oninput: m.withAttr('value', this.setGreen.bind(this)), value: this.color.g }),\r\n                    m('input.range-blue', { type: 'range', min: 0, max: 255, oninput: m.withAttr('value', this.setBlue.bind(this)), value: this.color.b })\r\n                ])\r\n            ),\r\n            m('input', { type: 'hidden', name: this.opts.name, value: this.value })]);\r\n        }\r\n    };\r\n\r\n    return ColorPicker;\r\n});\r\n","/*!\r\n * Wraps functionality needed for creating charts using Chart.js.\r\n */\r\n(function(root, factory) {\r\n    root.DashChart = factory(root.$, root.Alertify, root.Chart);\r\n})(this, function($, Alertify, Chart) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare DashChart class.\r\n     * @param {Node} content - DOM node that contains the chart.\r\n     * @param {bool} showLegend - Show or hide the chart legend.\r\n     * @param {Function} dataFn - Function to call if after loading data. Runs before other functions.\r\n     * @param {Function} errorFn - Function to call if an error occurs loading data.\r\n     * @param {Function} toggleExportFn - Function to enable/disable export.\r\n     */\r\n    var DashChart = function(content, showLegend, dataFn, errorFn, toggleExportFn) {\r\n        this.content = content;\r\n        this.url = content.getAttribute('data-url');\r\n        this.canvas = $.get('.chart-canvas', content);\r\n        this.showLegend = $.coalesce(showLegend, true);\r\n        this.dataFn = dataFn;\r\n        this.errorFn = errorFn;\r\n        this.toggleExportFn = toggleExportFn;\r\n        this.chart = null;\r\n        this.events = { resize: $.debounce(this.resize.bind(this), 50) };\r\n        $.on(window, 'resize', this.events.resize);\r\n        this.run();\r\n    };\r\n\r\n    DashChart.prototype = {\r\n        /**\r\n         * Generate a random number within range.\r\n         * @param {number[]} range - Min and max value.\r\n         * @returns {number} Random number.\r\n         */\r\n        randomWithin: function(range) {\r\n            return Math.floor(range[0] + Math.random() * (range[1] + 1 - range[0]));\r\n        },\r\n\r\n        /**\r\n         * Generates a random color and a lighter partner color.\r\n         * @returns {string[]} Color codes.\r\n         */\r\n        randomColor: function() {\r\n            var hsl = [this.randomWithin([0, 360]), this.randomWithin([50, 100]), this.randomWithin([30, 80])];\r\n            return [\r\n                'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%, 1)',\r\n                'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%, .2)'\r\n            ];\r\n        },\r\n\r\n        /**\r\n         * Generates an array of random colors.\r\n         * @param {number} cnt - Number of colors to generate.\r\n         * @returns {string[]} Array of color codes.\r\n         */\r\n        randomColors: function(cnt) {\r\n            var result = new Array(cnt);\r\n            for (var i = 0; i < cnt; i++) {\r\n                result[i] = this.randomColor()[0];\r\n            }\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Parse a hex color into a hsla color and a lighter partner color.\r\n         * @param {string} hex - Hex color code with leading '#'.\r\n         * @returns {string[]} Color codes.\r\n         */\r\n        parseColor: function(hex) {\r\n            if (!hex) {\r\n                return this.randomColor();\r\n            }\r\n            var hsl = $.colors.rgb2hsl($.colors.hex2rgb(hex));\r\n            return [\r\n                'hsla(' + (hsl[0] * 360).toFixed(0) + ',' + (hsl[1] * 100).toFixed(0) + '%,' + (hsl[2] * 100).toFixed(0) + '%, 1)',\r\n                'hsla(' + (hsl[0] * 360).toFixed(0) + ',' + (hsl[1] * 100).toFixed(0) + '%,' + (hsl[2] * 100).toFixed(0) + '%, .2)'\r\n            ];\r\n        },\r\n\r\n        run: function() {\r\n            var self = this;\r\n\r\n            $.show($.get('.chart-spinner', self.content));\r\n            $.hide($.get('.chart-error', self.content));\r\n            $.hide(self.canvas);\r\n            if (self.toggleExportFn) {\r\n                self.toggleExportFn(false);\r\n            }\r\n\r\n            $.ajax({\r\n                method: 'POST',\r\n                url: self.url,\r\n                block: false\r\n            }, function(data) {\r\n                if ($.isFunction(self.dataFn)) {\r\n                    if (!self.dataFn(data)) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                var ranges = $.isArray(data.ranges) ? data.ranges : [data];\r\n                if (!ranges.some(function(x) { return x.rows && x.rows.length; })) {\r\n                    $.hide($.get('.chart-spinner', self.content));\r\n                    Alertify.error($.resx('chart.noData'));\r\n                    return;\r\n                }\r\n\r\n                $.hide($.get('.chart-spinner', self.content));\r\n                $.hide($.get('.chart-error', self.content));\r\n                $.show(self.canvas);\r\n                if (self.toggleExportFn) {\r\n                    self.toggleExportFn(true);\r\n                }\r\n\r\n                if (self.chart) {\r\n                    // this code is used for refreshing dashboard chart data, but won't be used on the chart dialog\r\n                    ranges.forEach(function(x, i) {\r\n                        self.chart.data.datasets[i].data = ranges[i].rows;\r\n                        self.chart.data.datasets[i].label = ranges[i].yTitle;\r\n                    });\r\n                    self.chart.data.labels = ranges[0].labels;\r\n                    self.chart.update();\r\n                } else {\r\n                    var scales = {};\r\n                    var tooltips = { callbacks: {} };\r\n                    if (ranges[0].xType === 'currency') {\r\n                        var currencyFormat = $.accounting.parseFormat(ranges[0].currencyFormat);\r\n                        scales.xAxes = [{\r\n                            ticks: {\r\n                                callback: function(value) {\r\n                                    return $.accounting.formatMoney(value, currencyFormat);\r\n                                }\r\n                            }\r\n                        }];\r\n                        tooltips.callbacks.title = function(tooltipItems, data) {\r\n                            var title = '';\r\n                            if (tooltipItems.length > 0) {\r\n                                if (tooltipItems[0].xLabel) {\r\n                                    title = tooltipItems[0].xLabel;\r\n                                } else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n                                    title = data.labels[tooltipItems[0].index];\r\n                                }\r\n                                title = $.accounting.formatMoney(title, currencyFormat);\r\n                            }\r\n                            return title;\r\n                        };\r\n                    } else if (ranges[0].xType === 'date') {\r\n                        var dateFormat = ranges[0].dateFormat;\r\n                        scales.xAxes = [{\r\n                            ticks: {\r\n                                callback: function(value) {\r\n                                    return $.fecha.format(new Date(value), dateFormat);\r\n                                }\r\n                            }\r\n                        }];\r\n                        tooltips.callbacks.title = function(tooltipItems, data) {\r\n                            var title = '';\r\n                            if (tooltipItems.length > 0) {\r\n                                if (tooltipItems[0].xLabel) {\r\n                                    title = tooltipItems[0].xLabel;\r\n                                } else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n                                    title = data.labels[tooltipItems[0].index];\r\n                                }\r\n                                title = $.fecha.format(new Date(title), dateFormat);\r\n                            }\r\n                            return title;\r\n                        };\r\n                    }\r\n\r\n                    var chartType = data.type.toLowerCase();\r\n                    var isRadial = chartType === 'pie' || chartType === 'doughnut';\r\n                    var datasets = [];\r\n                    scales.yAxes = [];\r\n                    ranges.forEach(function(x, i) {\r\n                        var color = self.parseColor(x.color);\r\n                        datasets.push({\r\n                            backgroundColor: color[0],\r\n                            borderColor: 'rgb(255, 255, 255)',\r\n                            borderWidth: 2,\r\n                            data: x.rows,\r\n                            label: x.yTitle,\r\n                            yAxisID: 'y-axis-' + i\r\n                        });\r\n\r\n                        var ticks = {};\r\n                        if (x.yType === 'currency') {\r\n                            var currencyFormat = $.accounting.parseFormat(x.currencyFormat);\r\n                            ticks.callback = function(value) {\r\n                                return $.accounting.formatMoney(value, currencyFormat);\r\n                            };\r\n                            tooltips.callbacks.label = function(item) {\r\n                                return $.accounting.formatMoney(item.yLabel, currencyFormat);\r\n                            };\r\n                        } else if (x.yType === 'date') {\r\n                            var dateFormat = x.dateFormat;\r\n                            ticks.callback = function(value) {\r\n                                return $.fecha.format(new Date(value), dateFormat);\r\n                            };\r\n                            tooltips.callbacks.label = function(item) {\r\n                                return $.fecha.format(new Date(item.yLabel), dateFormat);\r\n                            };\r\n                        }\r\n\r\n                        if (!isRadial) {\r\n                            scales.yAxes.push({\r\n                                id: 'y-axis-' + i,\r\n                                position: i === 0 ? 'left' : 'right',\r\n                                ticks: ticks,\r\n                                gridLines: {\r\n                                    color: color[1]\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    var chartData = {\r\n                        type: chartType === 'horizontalbar' ? 'horizontalBar' : chartType,\r\n                        options: {\r\n                            scales: isRadial ? null : scales,\r\n                            tooltips: tooltips,\r\n                            legend: { display: self.showLegend }\r\n                        },\r\n                        data: {\r\n                            labels: ranges[0].labels,\r\n                            datasets: datasets\r\n                        }\r\n                    };\r\n\r\n                    if (isRadial) {\r\n                        chartData.data.datasets[0].backgroundColor = self.randomColors(ranges[0].rows.length);\r\n                    }\r\n\r\n                    self.chart = new Chart(self.canvas.getContext('2d'), chartData);\r\n                }\r\n            }, function() {\r\n                if ($.isFunction(self.errorFn)) {\r\n                    if (!self.errorFn()) {\r\n                        return;\r\n                    }\r\n                }\r\n                $.hide($.get('.chart-spinner', self.content));\r\n                $.show($.get('.chart-error', self.content));\r\n                if (self.toggleExportFn) {\r\n                    self.toggleExportFn(false);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @todo Eventually this may not be necessary, but responsive functionality for Chart.js does not seem to work correctly.\r\n         */\r\n        resize: function() {\r\n            if (this.chart) {\r\n                this.chart.resize();\r\n            }\r\n        },\r\n\r\n        destroy: function() {\r\n            $.destroy(this.chart);\r\n            if (this.events) {\r\n                $.off(window, 'resize', this.events.resize);\r\n            }\r\n        }\r\n    };\r\n\r\n    return DashChart;\r\n});\r\n","/*!\r\n * Mithril based form component. For repetitive form elements.\r\n */\r\n(function(root, factory) {\r\n    root.Form = factory(root.m, root.$, root.Alertify, root.Help);\r\n})(this, function(m, $, Alertify, Help) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare form class.\r\n     * @param {Object} opts - Form settings\r\n     * @param {Object[]} records - Array of objects the form will display/update.\r\n     */\r\n    function Form(opts, records) {\r\n        opts = opts || {};\r\n        this.opts = $.extend({\r\n            container: null,\r\n            id: null,\r\n            columns: null,\r\n            wantsHelp: false,\r\n            appendRecord: false,\r\n            resx: {\r\n                deleteRecord: $.resx('delete'),\r\n                confirmDelete: $.resx('confirmDelete'),\r\n                confirmDeleteAll: $.resx('confirmDeleteAll'),\r\n                areYouSure: $.resx('areYouSure'),\r\n                moveUp: $.resx('moveUp'),\r\n                moveDown: $.resx('moveDown'),\r\n                help: $.resx('help')\r\n            }\r\n        }, opts);\r\n\r\n        this.container = $.get(this.opts.container);\r\n        this.records = $.isArray(records) ? records.map(function(x, i) { x._index = i; return x; }) : [];\r\n        this.addedCount = 0;\r\n        this.changed = false;\r\n    }\r\n\r\n    Form.prototype = {\r\n        /**\r\n         * Get the value of an element.\r\n         * @param {*} e - Event that triggered the value change, or the new value.\r\n         * @returns {string} Value of the element.\r\n         */\r\n        targetVal: function(e) {\r\n            return e && e.target ? e.target.value : e;\r\n        },\r\n\r\n        /**\r\n         * Set the value of a field on a record.\r\n         * @param {number} index - Record index.\r\n         * @param {string} field - Name of field to set.\r\n         * @param {Event} e - Event that triggered the change.\r\n         * @returns {bool} True if value changed, else false.\r\n         */\r\n        set: function(index, field, e) {\r\n            var val = this.targetVal(e);\r\n            if (this.opts.columns[field].type === 'int') {\r\n                val = $.isNull(val) ? null : val * 1;\r\n            }\r\n\r\n            if ($.isFunction(this.opts.columns[field].setter)) {\r\n                this.opts.columns[field].setter.call(this, index, field, e);\r\n            } else {\r\n                if (this.records[index][field] !== val) {\r\n                    this.records[index][field] = val;\r\n                    this.changed = true;\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        addRecord: function() {\r\n            --this.addedCount;\r\n            var obj = $.clone(this.opts.newRecord);\r\n            obj._index = this.addedCount;\r\n            if (this.opts.appendRecord) {\r\n                this.records.push(obj);\r\n            } else {\r\n                this.records.unshift(obj);\r\n            }\r\n            this.changed = true;\r\n        },\r\n\r\n        /**\r\n         * Delete a record.\r\n         * @param {number} index - Record index to delete.\r\n         * @param {Event} e - Event that triggered the delete.\r\n         */\r\n        deleteRecord: function(index, e) {\r\n            var self = this;\r\n            if ($.isFunction(this.opts.deleteFn)) {\r\n                this.opts.deleteFn.call(this, index, e);\r\n            } else {\r\n                // timeout prevents hitting enter on the button to trigger this confirmation from confirming it immediately\r\n                setTimeout(function() {\r\n                    Alertify.confirm(self.opts.resx.areYouSure, function(e) {\r\n                        self.records.splice(index, 1);\r\n                        if ($.isFunction(self.opts.afterDeleteFn)) {\r\n                            self.opts.afterDeleteFn.call(self, index, e);\r\n                        }\r\n                        self.changed = true;\r\n                        self.run();\r\n                    });\r\n                }, 100);\r\n            }\r\n        },\r\n\r\n        deleteAllRecords: function() {\r\n            var self = this;\r\n            setTimeout(function() {\r\n                Alertify.confirm(self.opts.resx.areYouSure, function() {\r\n                    self.records = [];\r\n                    self.changed = true;\r\n                    self.run();\r\n                });\r\n            }, 100);\r\n        },\r\n\r\n        /**\r\n         * Move a record up in the record list.\r\n         * @param {number} index - Index of record to move up.\r\n         */\r\n        moveUp: function(index) {\r\n            var t = this.records[index - 1];\r\n            if (t) {\r\n                this.records[index - 1] = this.records[index];\r\n                this.records[index] = t;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Move a record down in the record list.\r\n         * @param {number} index - Index of record to move down.\r\n         */\r\n        moveDown: function(index) {\r\n            var t = this.records[index + 1];\r\n            if (t) {\r\n                this.records[index + 1] = this.records[index];\r\n                this.records[index] = t;\r\n            }\r\n        },\r\n\r\n        hasRecords: function() {\r\n            return this.records && this.records.length > 0;\r\n        },\r\n\r\n        /**\r\n         * Trigger the click event if the enter or space key is hit.\r\n         * @param {Event} e - Event that triggered this.\r\n         */\r\n        keyInput: function(e) {\r\n            if (e && e.keyCode && (e.keyCode === 13 || e.keyCode === 32)) {\r\n                e.target.onclick.call(this, e);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Create the mithril node to show help wrapped around the provided content.\r\n         * @param {string} helpBody - Content of the help dialog.\r\n         * @param {Object} innerContent - Mithril node for the input that help is for.\r\n         * @returns {Object} Mithril node for input-group if help is enabled, else innerContent.\r\n         */\r\n        withHelp: function(helpBody, innerContent) {\r\n            return m(Help, { message: helpBody, enabled: this.opts.wantsHelp }, innerContent);\r\n        },\r\n\r\n        /**\r\n         * Return the error class if the value isn't valid.\r\n         * @param {string|number} value - Value to check against.\r\n         * @param {bool} requirePositive - Require the value be a positive number.\r\n         * @param {bool} isDate - Check if the value is a valid date.\r\n         * @returns {string}  Error class name if value isn't set, else empty string.\r\n         */\r\n        withError: function(value, requirePositive, isDate) {\r\n            requirePositive = $.coalesce(requirePositive, false);\r\n            isDate = $.coalesce(isDate, false);\r\n            var result = isDate ? $.fecha.parse(value, this.opts.dateFormat) : $.hasValue(value) && (!requirePositive || $.hasPositiveValue(value));\r\n            return result ? '' : ' mform-control-error';\r\n        },\r\n\r\n        /**\r\n         * Add a disabled attribute to the input attributes if isDisabled=true.\r\n         * @param {Object} attrs - Attribute object to update.\r\n         * @param {bool} isDisabled - Is the input diabled or not.\r\n         * @returns {Object} Updated attribute object.\r\n         */\r\n        withDisabled: function(attrs, isDisabled) {\r\n            if (isDisabled) {\r\n                attrs.disabled = true;\r\n            }\r\n            return attrs;\r\n        },\r\n\r\n        /**\r\n         * Add a checked attribute to the input attributes if isChecked=true.\r\n         * @param {Object} attrs - Attribute object to update.\r\n         * @param {bool} isChecked - Is the input checked or not.\r\n         * @returns {Object} Updated attribute object.\r\n         */\r\n        withChecked: function(attrs, isChecked) {\r\n            if (isChecked) {\r\n                attrs.checked = true;\r\n            }\r\n            return attrs;\r\n        },\r\n\r\n        /**\r\n         * Build list of options nodes.\r\n         * @param {Object[]} arr - Array of objects to build options for.\r\n         * @param {*} selectedValue - Value of the selected option. Can be a string, number, or array of either.\r\n         * @param {string} valueKey - Object key that stores the value of the option.\r\n         * @param {string} textKey - Object key that stores the text for the option.\r\n         * @returns {Object[]} Array of mithril option nodes.\r\n         */\r\n        withOptions: function(arr, selectedValue, valueKey, textKey) {\r\n            if (!$.isArray(arr)) {\r\n                return null;\r\n            }\r\n            return arr.map(function(x) {\r\n                var attr = { value: x[valueKey] === 0 ? '' : x[valueKey] };\r\n                if (x[valueKey] === 0) {\r\n                    attr.disabled = true;\r\n                }\r\n                if (x[valueKey] === selectedValue || ($.isArray(selectedValue) && selectedValue.indexOf(x[valueKey]) > -1)) {\r\n                    attr.selected = true;\r\n                }\r\n                return m('option', attr, x[textKey]);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Create the mithril node for the record buttons (move up/move down/delete).\r\n         * @param {number} index - Index of the record to create buttons for.\r\n         * @param {bool} includeMove - Optionally include the move up/down buttons.\r\n         * @returns {Object} Mithril node with buttons.\r\n         */\r\n        buttonView: function(index, includeMove) {\r\n            var btns = [];\r\n            if ($.coalesce(includeMove, false)) {\r\n                btns.push(m('button.btn.btn-sm.btn-secondary', {\r\n                    type: 'button', role: 'button', disabled: index < 1,\r\n                    onclick: this.moveUp.bind(this, index), title: this.opts.resx.moveUp\r\n                }, m('i.dash.dash-up-big.dash-lg.dash-fw'))\r\n                );\r\n                btns.push(m('button.btn.btn-sm.btn-secondary', {\r\n                    type: 'button', role: 'button', disabled: index === this.records.length - 1,\r\n                    onclick: this.moveDown.bind(this, index), title: this.opts.resx.moveDown\r\n                }, m('i.dash.dash-down-big.dash-lg.dash-fw'))\r\n                );\r\n            }\r\n            btns.push(m('button.btn.btn-sm.btn-secondary.confirm-delete-row-button', {\r\n                type: 'button', role: 'button', onclick: this.deleteRecord.bind(this, index), title: this.opts.resx.deleteRecord\r\n            }, m('i.dash.dash-trash.dash-lg.text-error')));\r\n            return m('.btn-toolbar.float-right', btns);\r\n        },\r\n\r\n        destroy: function() {\r\n            m.mount(this.container, null);\r\n        },\r\n\r\n        /**\r\n         * Build the view that actually shows the form. This is meant to be overridden.\r\n         * @returns {Object}  Mithril DIV node.\r\n         */\r\n        view: function() {\r\n            return m('div');\r\n        },\r\n\r\n        /**\r\n         * Render the view.\r\n         */\r\n        run: function() {\r\n            var self = this;\r\n            m.mount(self.container, {\r\n                view: self.view.bind(self)\r\n            });\r\n        }\r\n    };\r\n\r\n    return Form;\r\n});\r\n","/*!\r\n * Wraps dataset join form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.JoinForm = factory(root.m, root.$, root.Form, root.Autocomplete, root.Help);\r\n})(this, function(m, $, Form, Autocomplete, Help) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the join form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function JoinForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.join-table-wrapper', opts.content),\r\n            columns: {\r\n                joinTypeId: { type: 'int' },\r\n                tableName: { type: 'str' },\r\n                keys: { type: 'str' }\r\n            },\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, tableName: '', joinTypeId: 1, keys: null },\r\n            afterDeleteFn: opts.columnUpdateFn\r\n        }, opts.joins || []);\r\n\r\n        this.joinTypes = opts.joinTypes;\r\n        this.sourceFn = opts.sourceFn;\r\n        this.columnUpdateFn = opts.columnUpdateFn;\r\n    }\r\n\r\n    JoinForm.prototype = Object.create(Form.prototype);\r\n    JoinForm.prototype.constructor = JoinForm;\r\n\r\n    /**\r\n     * Set the table name for the join record, and update the column list.\r\n     * @param {number} index - Index of the record to update.\r\n     * @param {string} value - New table name value\r\n     */\r\n    JoinForm.prototype.setJoinTable = function(index, value) {\r\n        this.set(index, 'tableName', value);\r\n        this.columnUpdateFn();\r\n    };\r\n\r\n    /**\r\n     * Create the view for the joins tab.\r\n     * @returns {Object} Mithril node containing the join form.\r\n     */\r\n    JoinForm.prototype.view = function() {\r\n        var self = this;\r\n\r\n        if (self.isProc) {\r\n            return m('.table-wrapper.p-t-1.col-12', m('.card.bg-info.text-white', m('.card-body', $.resx('dataset.errorProcNoJoins'))));\r\n        }\r\n\r\n        return m('.table-wrapper', [\r\n            m('.columns.wrapper-row.pb-1',\r\n                m('.col-12', m('.text-right', [\r\n                    m('button.btn.btn-info.mr-2', { type: 'button', role: 'button', onclick: self.addRecord.bind(self) }, $.resx('add')),\r\n                    m(Help, { enabled: this.opts.wantsHelp, message: $.resx('dataset.joinsText') })\r\n                ]))\r\n            ),\r\n            self.records.map(function(record, index) {\r\n                return m('.columns.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: record._index }, [\r\n                    m('input', { type: 'hidden', name: 'DatasetJoin[' + index + '].Id', value: record.id }),\r\n                    m('input', { type: 'hidden', name: 'DatasetJoin[' + index + '].JoinOrder', value: index }),\r\n                    m('.col-3', self.withHelp($.resx('dataset.joinTableText'), m(Autocomplete, {\r\n                        name: 'DatasetJoin[' + index + '].TableName',\r\n                        required: true,\r\n                        placeholder: $.resx('dataset.joinTableName'),\r\n                        value: record.tableName,\r\n                        list: self.sourceFn,\r\n                        onSelect: self.setJoinTable.bind(self, index),\r\n                        onCancel: self.setJoinTable.bind(self, index),\r\n                    }))),\r\n                    m('.col-2', self.withHelp($.resx('dataset.joinTypeText'),\r\n                        m('select.form-select.required', {\r\n                            name: 'DatasetJoin[' + index + '].JoinTypeId', class: self.withError(record.joinTypeId),\r\n                            placeholder: $.resx('dataset.joinType'), oninput: self.set.bind(self, index, 'joinTypeId'), value: record.joinTypeId\r\n                        }, self.withOptions(self.joinTypes, record.joinTypeId, 'id', 'name'))\r\n                    )),\r\n                    m('.col-5', self.withHelp($.resx('dataset.joinKeysText'),\r\n                        m('input.form-input.required', {\r\n                            type: 'text', name: 'DatasetJoin[' + index + '].Keys', class: self.withError(record.keys),\r\n                            placeholder: $.resx('dataset.joinKeys'), oninput: self.set.bind(self, index, 'keys'), value: record.keys\r\n                        }))\r\n                    ),\r\n                    m('.col-2', self.buttonView.call(self, index, true))\r\n                ]);\r\n            })\r\n        ]);\r\n    };\r\n\r\n    return JoinForm;\r\n});\r\n","/*!\r\n * Wraps dataset column form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.ColumnForm = factory(root.m, root.$, root.Alertify, root.Form, root.Autocomplete, root.Help);\r\n})(this, function(m, $, Alertify, Form, Autocomplete, Help) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Sort columns by title.\r\n     * @param {Object} a - First column to compare.\r\n     * @param {Object} b - Second column to compare.\r\n     * @returns {bool} True if column a should be before column b.\r\n     */\r\n    var columnTitleSort = function(a, b) {\r\n        var aTitle = a.title.toLowerCase(), bTitle = b.title.toLowerCase();\r\n        return aTitle > bTitle ? 1 : (bTitle > aTitle ? -1 : 0);\r\n    };\r\n\r\n    /**\r\n     * Build the column form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function ColumnForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.column-table-wrapper', opts.content),\r\n            columns: {\r\n                title: { type: 'str' },\r\n                columnName: { type: 'str' },\r\n                dataTypeId: { type: 'int' },\r\n                derived: { type: 'str' },\r\n                filterTypeId: { type: 'int' },\r\n                filterQuery: { type: 'str' },\r\n                link: { type: 'str' },\r\n                isParam: { type: 'int' }\r\n            },\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, title: null, columnName: '', dataTypeId: '', derived: null, filterTypeId: '', filterQuery: null, link: null, isParam: 0, isExpanded: true }\r\n        }, opts.columns || []);\r\n\r\n        this.content = opts.content;\r\n        this.dataTypes = opts.dataTypes;\r\n        this.filterTypes = opts.filterTypes;\r\n        this.sourceFn = opts.sourceFn;\r\n        this.columnFn = opts.columnFn;\r\n        this.selectedSourceFn = opts.selectedSourceFn;\r\n    }\r\n\r\n    ColumnForm.prototype = Object.create(Form.prototype);\r\n    ColumnForm.prototype.constructor = ColumnForm;\r\n\r\n    /**\r\n     * Expand/collapse the fields for a column.\r\n     * @param {Object} column - The column record to expand/collapse.\r\n     */\r\n    ColumnForm.prototype.toggleExpanded = function(column) {\r\n        column.isExpanded = !column.isExpanded;\r\n    };\r\n\r\n    /**\r\n     * Check if the database and primary source are set.\r\n     * @returns {bool} True if a database and a primary source are provided, else false.\r\n     */\r\n    ColumnForm.prototype.checkStatus = function() {\r\n        var database = $.get('.dataset-database', this.content);\r\n        if (!(database && $.hasPositiveValue(database.value))) {\r\n            Alertify.error($.resx('dataset.importErrorDatabaseRequired'));\r\n            return false;\r\n        }\r\n        var primarySource = $.get('.primary-source-autocomplete', this.content);\r\n        if (!(primarySource && primarySource.value)) {\r\n            Alertify.error($.resx('dataset.importErrorPrimarySourceRequired'));\r\n            return false;\r\n        }\r\n        var type = $.get('.dataset-type', this.content);\r\n        if (type && type.value * 1 === 2) {\r\n            Alertify.error($.resx('dataset.importErrorNoProcs'));\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Import columns for the selected tables into the dataset.\r\n     * @param {Event} e - Event that triggered this.\r\n     */\r\n    ColumnForm.prototype.importColumns = function(e) {\r\n        var form = this.content;\r\n        if (!($.hasClass(form, 'dataset-form') && this.checkStatus())) {\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        var database = $.get('.dataset-database');\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-import-url'),\r\n            data: { databaseId: database.value, sources: self.selectedSourceFn() }\r\n        }, function(data) {\r\n            if (!data.columns || data.columns.length === 0) {\r\n                Alertify.error($.resx('dataset.importErrorNoColumns'));\r\n                return;\r\n            }\r\n\r\n            var newColumns = {};\r\n            data.columns.forEach(function(x) {\r\n                newColumns[x.columnName.toLowerCase()] = x;\r\n            });\r\n\r\n            var newRecords = [];\r\n            var existingColumns = [];\r\n            self.records.forEach(function(x) {\r\n                var colName = x.columnName.toLowerCase();\r\n                if (newColumns[colName]) {\r\n                    // record matches - update datatype and add to new list\r\n                    x.dataTypeId = newColumns[colName].dataTypeId;\r\n                    newRecords.push(x);\r\n                    existingColumns.push(colName);\r\n                }\r\n            });\r\n\r\n            data.columns.forEach(function(x) {\r\n                // now add any new columns from server\r\n                if (existingColumns.indexOf(x.columnName.toLowerCase()) === -1) {\r\n                    newRecords.push(x);\r\n                }\r\n            });\r\n\r\n            newRecords.sort(columnTitleSort);\r\n            self.records = newRecords;\r\n\r\n            Alertify.success($.resx('dataset.importSuccess'));\r\n            $.dialogs.focusOnClose.call(e);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Open the confirmation before importing columns.\r\n     * @param {Event} e - Event that triggered this.\r\n     */\r\n    ColumnForm.prototype.import = function(e) {\r\n        if (this.checkStatus()) {\r\n            Alertify.confirm($.resx('dataset.confirmImport'), this.importColumns.bind(this, e), $.dialogs.focusOnClose.bind(e));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Create the node for the column form.\r\n     * @returns {Object} Mithril node containing the form.\r\n     */\r\n    ColumnForm.prototype.view = function() {\r\n        var self = this;\r\n        return m('.table-wrapper', [\r\n            m('.columns.wrapper-row.pb-1',\r\n                m('.col-12',\r\n                    m('.text-right', [\r\n                        m('button.btn.btn-info.mr-2', {\r\n                            type: 'button', role: 'button', onclick: self.addRecord.bind(self)\r\n                        }, $.resx('add')),\r\n                        m('button.btn.btn-error.mr-2', {\r\n                            type: 'button', role: 'button', onclick: self.import.bind(self)\r\n                        }, $.resx('dataset.import')),\r\n                        m(Help, { enabled: this.opts.wantsHelp, message: $.resx('dataset.columnsText') })\r\n                    ])\r\n                )\r\n            ),\r\n            self.records.map(function(record, index) {\r\n                return m('.col-12.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: record._index }, [\r\n                    m('.columns', [\r\n                        m('input', { type: 'hidden', name: 'DatasetColumn[' + index + '].Id', value: record.id }),\r\n                        m('.col-4', self.withHelp($.resx('dataset.columnTitleText'), [\r\n                            m('span.input-group-addon.input-group-custom', m('button.btn.btn-secondary', {\r\n                                type: 'button', role: 'button',\r\n                                onclick: self.toggleExpanded.bind(self, record)\r\n                            }, m('i.dash.text-primary', { class: record.isExpanded ? 'dash-minus' : 'dash-plus' }))),\r\n                            m('input.form-input.required', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].Title', class: self.withError(record.title),\r\n                                placeholder: $.resx('dataset.columnTitle'), oninput: self.set.bind(self, index, 'title'), value: record.title\r\n                            }),\r\n                        ])),\r\n                        m('.col-4', self.withHelp($.resx('dataset.columnNameText'), m(Autocomplete, {\r\n                            name: 'DatasetColumn[' + index + '].ColumnName',\r\n                            required: true,\r\n                            placeholder: $.resx('dataset.columnName'),\r\n                            value: record.columnName,\r\n                            list: self.columnFn,\r\n                            onSelect: self.set.bind(self, index, 'columnName')\r\n                        }))),\r\n                        m('.col-3', self.withHelp($.resx('dataset.dataTypeText'),\r\n                            m('select.form-select.required', {\r\n                                name: 'DatasetColumn[' + index + '].DataTypeId', class: self.withError(record.dataTypeId),\r\n                                placeholder: $.resx('dataset.dataType'), oninput: self.set.bind(self, index, 'dataTypeId'), value: record.dataTypeId\r\n                            }, self.withOptions(self.dataTypes, record.dataTypeId, 'id', 'name'))\r\n                        )),\r\n                        m('.col-1', self.buttonView(index, false))\r\n                    ]),\r\n                    m('.columns', { class: record.isExpanded ? '' : ' d-none' },\r\n                        m('.col-10.col-mx-auto', self.withHelp($.resx('dataset.derivedText'),\r\n                            m('input.form-input', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].Derived', placeholder: $.resx('dataset.derived'),\r\n                                oninput: self.set.bind(self, index, 'derived'), value: record.derived\r\n                            })\r\n                        ))\r\n                    ),\r\n                    m('.columns', { class: record.isExpanded ? '' : ' d-none' }, [\r\n                        m('.col-3.col-mx-auto', self.withHelp($.resx('dataset.filterTypeText'),\r\n                            m('select.form-select', {\r\n                                name: 'DatasetColumn[' + index + '].FilterTypeId', class: self.withError(record.filterTypeId),\r\n                                placeholder: $.resx('dataset.filterType'), oninput: self.set.bind(self, index, 'filterTypeId'), value: record.filterTypeId\r\n                            }, self.withOptions(self.filterTypes, record.filterTypeId, 'id', 'name'))\r\n                        )),\r\n                        m('.col-7', self.withHelp($.resx('dataset.queryText'),\r\n                            m('input.form-input', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].FilterQuery', placeholder: $.resx('dataset.query'),\r\n                                oninput: self.set.bind(self, index, 'filterQuery'), value: record.filterQuery, readOnly: record.filterTypeId !== 3\r\n                            }))\r\n                        )\r\n                    ]),\r\n                    m('.columns', { class: record.isExpanded ? '' : ' d-none' }, [\r\n                        m('.col-8.col-mx-auto', self.withHelp($.resx('dataset.linkText'),\r\n                            m('input.form-input', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].Link', placeholder: $.resx('dataset.link'),\r\n                                oninput: self.set.bind(self, index, 'link'), value: record.link\r\n                            })\r\n                        )),\r\n                        m('.col-1', [\r\n                            m('label.form-checkbox', { for: 'DatasetColumn_' + index + '_.IsParam' }, [\r\n                                m('input.custom-control-input', self.withChecked({\r\n                                    type: 'checkbox', name: 'DatasetColumn[' + index + '].IsParam', id: 'DatasetColumn_' + index + '_.IsParam',\r\n                                    oninput: self.set.bind(self, index, 'isParam'), value: 'true'\r\n                                }, record.isParam)),\r\n                                m('i.form-icon'),\r\n                                $.resx('dataset.isParam')\r\n                            ])\r\n                        ]),\r\n                        m('.col-1', m(Help, { enabled: self.opts.wantsHelp, message: $.resx('dataset.isParamText') }))\r\n                    ])\r\n                ]);\r\n            })\r\n        ]);\r\n    };\r\n\r\n    return ColumnForm;\r\n});\r\n","/*!\r\n * Wraps share form functionality. Used for report and chart.\r\n */\r\n(function(root, factory) {\r\n    root.ShareForm = factory(root.m, root.$, root.Form);\r\n})(this, function(m, $, Form) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the share form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function ShareForm(opts) {\r\n        var container = $.get('.share-table-wrapper', opts.content);\r\n        var formOpts = JSON.parse(container.getAttribute('data-json'));\r\n        container.removeAttribute('data-json');\r\n\r\n        Form.call(this, {\r\n            container: container,\r\n            columns: {\r\n                id: { type: 'int' },\r\n                userId: { type: 'int' },\r\n                roleId: { type: 'int' }\r\n            },\r\n            appendRecord: true,\r\n            wantsHelp: formOpts.wantsHelp,\r\n            newRecord: { id: 0, userId: 0, roleId: 0 }\r\n        }, formOpts.shares || []);\r\n\r\n        this.users = formOpts.userList || [];\r\n        this.roles = formOpts.roleList || [];\r\n        this.formName = opts.formName;\r\n    }\r\n\r\n    ShareForm.prototype = Object.create(Form.prototype);\r\n    ShareForm.prototype.constructor = ShareForm;\r\n\r\n    /**\r\n     * Build the user dropdown attributes.\r\n     * @param {Object} share - Share to build the dropdown for.\r\n     * @param {number} index - Index of the share record.\r\n     * @returns {Object} Dropdown attribute object.\r\n     */\r\n    ShareForm.prototype.userSelectAttr = function(share, index) {\r\n        var res = {\r\n            name: this.formName + '[' + index + '].UserId', class: 'form-select' + ($.hasPositiveValue(share.userId) || $.hasPositiveValue(share.roleId) ? '' : ' mform-control-error'),\r\n            placeholder: $.resx('selectUser'), onchange: this.set.bind(this, index, 'userId'), value: share.userId\r\n        };\r\n        if ($.hasPositiveValue(share.roleId)) {\r\n            res['disabled'] = true;\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Build the role dropdown attributes.\r\n     * @param {Object} share - Share to build the dropdown for.\r\n     * @param {number} index - Index of the share record.\r\n     * @returns {Object} Dropdown attribute object.\r\n     */\r\n    ShareForm.prototype.roleSelectAttr = function(share, index) {\r\n        var res = {\r\n            name: this.formName + '[' + index + '].RoleId', class: 'form-select' + ($.hasPositiveValue(share.userId) || $.hasPositiveValue(share.roleId) ? '' : ' mform-control-error'),\r\n            placeholder: $.resx('selectRole'), onchange: this.set.bind(this, index, 'roleId'), value: share.roleId\r\n        };\r\n        if ($.hasPositiveValue(share.userId)) {\r\n            res['disabled'] = true;\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Create the view for the share form.\r\n     * @returns {Object} Mithril node containing the share form.\r\n     */\r\n    ShareForm.prototype.view = function() {\r\n        var self = this;\r\n        return m('.table-wrapper', [\r\n            m('.columns', [\r\n                m('.col-5', m('h5', $.resx('user'))),\r\n                m('.col-5', m('h5', $.resx('role'))),\r\n                m('.col-2')\r\n            ]),\r\n            self.records.map(function(share, index) {\r\n                return m('.columns.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: share._index }, [\r\n                    m('input', { type: 'hidden', name: self.formName + '[' + index + '].Id', value: share.id }),\r\n                    m('.col-5.pr-2',\r\n                        m('select', self.userSelectAttr(share, index), self.withOptions(self.users, share.userId, 'id', 'fullName'))\r\n                    ),\r\n                    m('.col-5',\r\n                        m('select', self.roleSelectAttr(share, index), self.withOptions(self.roles, share.roleId, 'id', 'name'))\r\n                    ),\r\n                    m('.col-2', self.buttonView(index, false))\r\n                ]);\r\n            }),\r\n            m('.columns.pt-1', [\r\n                m('.col-12', [\r\n                    m('.text-right', [\r\n                        m('button.btn.btn-info.mr-2', { type: 'button', role: 'button', onclick: self.addRecord.bind(self) }, $.resx('add')),\r\n                        m('button.btn.btn-warning', {\r\n                            type: 'button', role: 'button', disabled: !self.hasRecords(),\r\n                            onclick: self.hasRecords() ? self.deleteAllRecords.bind(self) : $.noop\r\n                        }, $.resx('deleteAll'))\r\n                    ])\r\n                ])\r\n            ])\r\n        ]);\r\n    };\r\n\r\n    return ShareForm;\r\n});\r\n","/*!\r\n * Wraps report filter form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.FilterForm = factory(root.m, root.$, root.Form, root.Help, root.Alertify, root.DatePicker);\r\n})(this, function(m, $, Form, Help, Alertify, DatePicker) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the filter form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function FilterForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.filter-table-wrapper', opts.content),\r\n            columns: {\r\n                id: { type: 'int' },\r\n                columnId: { type: 'int' },\r\n                operatorId: { type: 'int' },\r\n                criteria: { type: 'str' },\r\n                criteria2: { type: 'str' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, columnId: 0, operatorId: 0, criteria: null, criteria2: null },\r\n            dateFormat: opts.dateFormat\r\n        }, opts.filters || []);\r\n\r\n        this.reportId = opts.reportId;\r\n        this.isProc = opts.isProc;\r\n        this.saveFiltersUrl = opts.saveFiltersUrl;\r\n        this.filterOperators = opts.filterOperators || [];\r\n        this.filterOperatorIds = opts.filterOperatorIds || {};\r\n        this.filterTypes = opts.filterTypes || {};\r\n        this.dateOperators = opts.dateOperators || [];\r\n        this.lookups = opts.lookups || [];\r\n        this.refreshFn = opts.refreshFn;\r\n        this.columnFn = opts.columnFn;\r\n    }\r\n\r\n    FilterForm.prototype = Object.create(Form.prototype);\r\n    FilterForm.prototype.constructor = FilterForm;\r\n\r\n    /**\r\n     * Build the options select list for the boolean filter.\r\n     */\r\n    FilterForm.prototype.boolOptions = [\r\n        m('option', { value: '' }, $.resx('select')),\r\n        m('option', { value: 1 }, $.resx('report.true')),\r\n        m('option', { value: 0 }, $.resx('report.false'))\r\n    ];\r\n\r\n    /**\r\n     * Set the columnId for a filter and unset the criteria.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered showing the picker.\r\n     */\r\n    FilterForm.prototype.setColumnId = function(index, e) {\r\n        var val = this.targetVal(e) * 1;\r\n        if (this.records[index].columnId !== val) {\r\n            this.records[index].columnId = val;\r\n            this.records[index].operatorId = 0;\r\n            this.records[index].criteria = null;\r\n            this.records[index].criteria2 = null;\r\n            this.run();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the operatorId for a filter and unset the criteria.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered showing the picker.\r\n     */\r\n    FilterForm.prototype.setOperator = function(index, e) {\r\n        this.set(index, 'operatorId', e);\r\n    };\r\n\r\n    /**\r\n     * Set the criteria for a filter.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered the update.\r\n     */\r\n    FilterForm.prototype.setCriteria = function(index, e) {\r\n        var node = e.target;\r\n        if (node && node.nodeName === 'SELECT' && node.hasAttribute('multiple') && node.options) {\r\n            this.records[index].criteriaJson = Array.apply(null, node.options).filter(function(x) { return x.selected; }).map(function(x) { return x.value || x.text; });\r\n        }\r\n        this.set(index, 'criteria', e);\r\n    };\r\n\r\n    /**\r\n     * Set the criteria for a date filter.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {string} field - Name of field to set.\r\n     * @param {Date} val - Date value to save.\r\n     */\r\n    FilterForm.prototype.setDate = function(index, field, val) {\r\n        this.set(index, field, $.fecha.format(val, 'YYYY-MM-DD HH:mm'));\r\n    };\r\n\r\n    /**\r\n     * Save filters to the server then reload the table data.\r\n     */\r\n    FilterForm.prototype.saveFilters = function() {\r\n        if ($.getAll('.mform-control-error', this.container).length > 0) {\r\n            Alertify.error($.resx('fixIt'));\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: 'PUT',\r\n            url: self.saveFiltersUrl,\r\n            data: {\r\n                Id: self.reportId,\r\n                Filters: $.toPascalKeys(self.records)\r\n            }\r\n        }, function(data) {\r\n            if (data) {\r\n                self.changed = false;\r\n                if ($.isArray(data.filters)) {\r\n                    data.filters.forEach(function(x, i) { self.records[i].id = x.id; });\r\n                }\r\n            }\r\n            if (self.refreshFn) {\r\n                self.refreshFn();\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Build the criteria input(s) for a filter.\r\n     * @param {number} index - Index of the filter to build.\r\n     * @returns {Object} Mithril node containing the criteria input(s).\r\n     */\r\n    FilterForm.prototype.criteriaView = function(index) {\r\n        var filter = this.records[index];\r\n        var column = $.hasPositiveValue(filter.columnId) ? $.findByKey(this.columnFn(), 'id', filter.columnId) : null;\r\n        if (column === null || !$.hasPositiveValue(filter.operatorId)) {\r\n            return m('input.form-input', { disabled: true, placeholder: $.resx('report.filterCriteria') });\r\n        }\r\n\r\n        var criteria = null;\r\n        var attrs = {\r\n            name: 'ReportFilter[' + index + '].Criteria',\r\n            id: 'ReportFilter_' + index + '_Criteria',\r\n            class: 'form-input required' + this.withError(filter.criteria),\r\n            placeholder: $.resx('report.filterCriteria'),\r\n            oninput: this.setCriteria.bind(this, index)\r\n        };\r\n        if (!this.opts.allowEdit) {\r\n            attrs.disabled = true;\r\n        }\r\n\r\n        if (column.filterTypeId !== this.filterTypes.select) {\r\n            attrs.value = filter.criteria;\r\n        }\r\n        var isRange = filter.operatorId === this.filterOperatorIds.range;\r\n\r\n        switch (column.filterTypeId) {\r\n            case this.filterTypes.boolean:\r\n                attrs.class = 'form-select required' + this.withError(filter.criteria);\r\n                criteria = m('select', attrs, this.boolOptions);\r\n                break;\r\n            case this.filterTypes.date:\r\n                if (filter.operatorId === this.filterOperatorIds.dateInterval) {\r\n                    attrs.class = 'form-select required' + this.withError(filter.criteria);\r\n                    criteria = m('select', attrs, this.withOptions(this.dateOperators, filter.criteria * 1, 'id', 'name'));\r\n                } else {\r\n                    criteria = m(DatePicker, {\r\n                        name: attrs.name, required: true, date: filter.criteria, disabled: !this.opts.allowEdit,\r\n                        onchange: this.setDate.bind(this, index, 'criteria'), format: this.dateFormat,\r\n                        class: isRange ? 'col' : null\r\n                    });\r\n                }\r\n                break;\r\n            case this.filterTypes.select:\r\n                if (filter.operatorId !== this.filterOperatorIds.equal) {\r\n                    attrs.multiple = true;\r\n                } else {\r\n                    attrs.class = 'form-select required' + this.withError(filter.criteria);\r\n                }\r\n\r\n                try {\r\n                    if (filter.criteria.substring(0, 1) === '[') {\r\n                        filter.criteriaJson = JSON.parse(filter.criteria);\r\n                    }\r\n                } catch (e) {\r\n                    // do nothing\r\n                }\r\n\r\n                if (!filter.criteriaJson) {\r\n                    attrs.value = filter.criteria;\r\n                }\r\n\r\n                var lookup = $.isArray(this.lookups[filter.columnId]) ? this.lookups[filter.columnId] : [];\r\n                criteria = m('select', attrs, this.withOptions(lookup, filter.criteriaJson, 'value', 'text'));\r\n                break;\r\n            default:\r\n                attrs.type = column.filterTypeId === this.filterTypes.numeric ? 'number' : 'text';\r\n                criteria = m('input', attrs);\r\n        }\r\n\r\n        if (!isRange) {\r\n            return criteria;\r\n        }\r\n\r\n        var isDatePicker = column.filterTypeId === this.filterTypes.date && filter.operatorId !== this.filterOperatorIds.dateInterval;\r\n        var attrs2 = {\r\n            name: 'ReportFilter[' + index + '].Criteria2',\r\n            id: 'ReportFilter_' + index + '_Criteria2',\r\n            class: 'form-input required' + this.withError(filter.criteria2, null, column.filterTypeId === this.filterTypes.date),\r\n            placeholder: $.resx('report.filterCriteria2'),\r\n            onchange: isDatePicker ? this.setDate.bind(this, index, 'criteria2') : this.set.bind(this, index, 'criteria2'),\r\n            value: filter.criteria2,\r\n            type: column.filterTypeId === this.filterTypes.numeric ? 'number' : 'text'\r\n        };\r\n        if (!this.opts.allowEdit) {\r\n            attrs2.disabled = true;\r\n        }\r\n        var criteriaArr = [criteria];\r\n        if (isDatePicker) {\r\n            criteriaArr.push(m(DatePicker, {\r\n                name: attrs2.name, required: true, date: filter.criteria2, disabled: !this.opts.allowEdit,\r\n                onchange: this.setDate.bind(this, index, 'criteria2'), format: this.dateFormat, class: 'col'\r\n            }));\r\n        } else {\r\n            criteriaArr.push(m('input', attrs2));\r\n        }\r\n        return criteriaArr;\r\n    };\r\n\r\n    /**\r\n     * Build the operator dropdown for a filter.\r\n     * @param {number} index - Index of the filter to build.\r\n     * @param {Object} column - Column that the filter is for.\r\n     * @returns {Object} Mithril node containing the operator select.\r\n     */\r\n    FilterForm.prototype.operatorView = function(index, column) {\r\n        return m('select.form-select.required', {\r\n            name: 'ReportFilter[' + index + '].OperatorId', id: 'ReportFilter_' + index + '_OperatorId',\r\n            disabled: !column || !this.opts.allowEdit,\r\n            class: column ? this.withError(this.records[index].operatorId, true) : null,\r\n            placeholder: $.resx('report.filterOperator'), onchange: this.setOperator.bind(this, index), value: this.records[index].operatorId\r\n        }, this.withOptions(column && $.hasPositiveValue(column.filterTypeId) ?\r\n            this.filterOperators[column.filterTypeId] : [{ id: 0, name: $.resx('report.filterOperator') }], this.records[index].operatorId, 'id', 'name')\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Build the filters.\r\n     * @returns {Object[]} Array of Mithril nodes containing the filters.\r\n     */\r\n    FilterForm.prototype.filterView = function() {\r\n        if (!this.columnFn()) {\r\n            return null;\r\n        }\r\n\r\n        var self = this;\r\n        return this.records.map(function(x, index) {\r\n            var column = $.hasPositiveValue(x.columnId) ? $.findByKey(self.columnFn(), 'id', x.columnId) : null;\r\n\r\n            // @todo this isn't setting the `placeholder` default value correctly anymore it seems\r\n            var attrs = {\r\n                name: 'ReportFilter[' + index + '].ColumnId', class: 'form-select required' + self.withError(x.columnId, true),\r\n                placeholder: $.resx('report.filterColumn'), onchange: self.setColumnId.bind(self, index), value: x.columnId\r\n            };\r\n            if (!self.opts.allowEdit) {\r\n                attrs.disabled = true;\r\n            }\r\n\r\n            var filterColumns = self.isProc ? self.columnFn().filter(function(x) { return x.isParam; }) : self.columnFn();\r\n\r\n            return m('.columns.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even' }, [\r\n                m('input', { type: 'hidden', name: 'ReportFilter[' + index + '].Id', value: x.id }),\r\n                m('input', { type: 'hidden', name: 'ReportFilter[' + index + '].DisplayOrder', value: index }),\r\n                m('.col-4',\r\n                    self.withHelp($.resx('report.filterColumnText'), m('select', attrs, self.withOptions(filterColumns, x.columnId, 'id', 'title')))\r\n                ),\r\n                m('.col-2',\r\n                    self.withHelp($.resx('report.filterOperatorText'), self.operatorView.call(self, index, column))\r\n                ),\r\n                m('.col-5',\r\n                    self.withHelp($.resx('report.filterCriteriaText'), self.criteriaView.call(self, index))\r\n                ),\r\n                m('.col-1', self.opts.allowEdit ? self.buttonView.call(self, index, false) : null)\r\n            ]);\r\n        });\r\n    };\r\n\r\n    /**\r\n    * Create the view for the share form.\r\n    * @returns {Object} Mithril node containing the share form.\r\n    */\r\n    FilterForm.prototype.view = function() {\r\n        return [\r\n            this.filterView(),\r\n            this.opts.allowEdit ? m('.columns.pt-1', [\r\n                m('.col-6', m('button.btn.btn-primary', {\r\n                    type: 'button', role: 'button', onclick: this.saveFilters.bind(this)\r\n                }, $.resx('save'))),\r\n                m('.col-6', [\r\n                    m('.text-right', [\r\n                        m('button.btn.btn-info.mr-2', {\r\n                            type: 'button', role: 'button', onclick: this.addRecord.bind(this),\r\n                        }, $.resx('add')),\r\n                        m('button.btn.btn-warning.mr-2', {\r\n                            type: 'button', role: 'button', disabled: !this.hasRecords(),\r\n                            onclick: this.hasRecords() ? this.deleteAllRecords.bind(this) : $.noop\r\n                        }, $.resx('deleteAll')),\r\n                        m(Help, { enabled: this.opts.wantsHelp, message: $.resx('report.filterText') })\r\n                    ])\r\n                ])\r\n            ]) : null\r\n        ];\r\n    };\r\n\r\n    return FilterForm;\r\n});\r\n","/*!\r\n * Wraps report group form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.GroupForm = factory(root.m, root.$, root.Form, root.Help, root.Alertify);\r\n})(this, function(m, $, Form, Help, Alertify) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the group form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function GroupForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.group-table-wrapper', opts.content),\r\n            columns: {\r\n                id: { type: 'int' },\r\n                columnId: { type: 'int' },\r\n                operatorId: { type: 'int' },\r\n                criteria: { type: 'str' },\r\n                criteria2: { type: 'str' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, columnId: 0, displayOrder: 0 }\r\n        }, opts.groups || []);\r\n\r\n        this.reportId = opts.reportId;\r\n        this.isProc = opts.isProc;\r\n        this.saveGroupsUrl = opts.saveGroupsUrl;\r\n        this.aggregator = opts.aggregatorId === 0 ? '' : opts.aggregatorId;\r\n        this.aggregators = opts.aggregators || [];\r\n        this.refreshFn = opts.refreshFn;\r\n        this.columnFn = opts.columnFn;\r\n    }\r\n\r\n    GroupForm.prototype = Object.create(Form.prototype);\r\n    GroupForm.prototype.constructor = GroupForm;\r\n\r\n    /**\r\n     * Save groups to the server then reload the table data.\r\n     */\r\n    GroupForm.prototype.saveGroups = function() {\r\n        if ($.getAll('.mform-control-error', this.container).length > 0) {\r\n            Alertify.error($.resx('fixIt'));\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: 'PUT',\r\n            url: self.saveGroupsUrl,\r\n            data: {\r\n                Id: self.reportId,\r\n                GroupAggregator: self.aggregator === '' ? 0 : self.aggregator * 1,\r\n                Groups: $.toPascalKeys(self.records)\r\n            }\r\n        }, function(data) {\r\n            if (data) {\r\n                if ($.isArray(data.groups)) {\r\n                    data.groups.forEach(function(x, i) { self.records[i].id = x.id; });\r\n                }\r\n            }\r\n            if (self.refreshFn) {\r\n                self.refreshFn();\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Set the aggregator property.\r\n     * @param {Event} e - Event that triggered the function.\r\n     */\r\n    GroupForm.prototype.setAggregator = function(e) {\r\n        this.aggregator = this.targetVal(e);\r\n    };\r\n\r\n    /**\r\n     * Build the groups.\r\n     * @returns {Object[]} Array of Mithril nodes containing the groups.\r\n     */\r\n    GroupForm.prototype.groupView = function() {\r\n        if (!this.columnFn()) {\r\n            return null;\r\n        }\r\n\r\n        var self = this;\r\n        return this.records.map(function(x, index) {\r\n            x.displayOrder = index;\r\n            var attrs = {\r\n                name: 'ReportGroup[' + index + '].ColumnId', class: 'form-select required' + self.withError(x.columnId, true),\r\n                placeholder: $.resx('report.groupColumn'), onchange: self.set.bind(self, index, 'columnId'), value: x.columnId\r\n            };\r\n            if (!self.opts.allowEdit) {\r\n                attrs.disabled = true;\r\n            }\r\n            return m('.columns.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even' }, [\r\n                m('input', { type: 'hidden', name: 'ReportGroup[' + index + '].Id', value: x.id }),\r\n                m('input', { type: 'hidden', name: 'ReportGroup[' + index + '].DisplayOrder', value: index }),\r\n                m('.col-10', [\r\n                    m('select', attrs, self.withOptions(self.columnFn(), x.columnId, 'id', 'title'))\r\n                ]),\r\n                m('.col-2', self.opts.allowEdit ? self.buttonView.call(self, index, true) : null)\r\n            ]);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Build the group form.\r\n     * @returns {Object} Mithril node containing the form.\r\n     */\r\n    GroupForm.prototype.view = function() {\r\n        if (this.isProc) {\r\n            return m('.table-wrapper.p-t-1.col-12', m('.card.card-info', m('.card-body', $.resx('report.errorProcNoGroups'))));\r\n        }\r\n\r\n        var attrs = {\r\n            name: 'Report.Aggregator', class: 'form-select', placeholder: $.resx('report.aggregator'),\r\n            onchange: this.setAggregator.bind(this), value: this.aggregator\r\n        };\r\n        if (!this.opts.allowEdit) {\r\n            attrs.disabled = true;\r\n        }\r\n        return m('.col-12.table-wrapper', m('.columns', [\r\n            m('.col-2.mt-1', [\r\n                m('.form-group', [\r\n                    m('select', attrs, this.withOptions(this.aggregators, this.aggregator, 'id', 'name'))\r\n                ]),\r\n                this.opts.allowEdit ? m('.mt-1', m('button.btn.btn-primary', {\r\n                    type: 'button', role: 'button', onclick: this.saveGroups.bind(this)\r\n                }, $.resx('save'))) : null\r\n            ]),\r\n            m('.col-9.col-ml-auto.mt-1', [\r\n                this.groupView(),\r\n                this.opts.allowEdit ? m('.container.pt-1', m('.columns', [\r\n                    m('.col-12', [\r\n                        m('.btn-toolbar.text-right', [\r\n                            m('button.btn.btn-info.mr-1', {\r\n                                type: 'button', role: 'button', onclick: this.addRecord.bind(this)\r\n                            }, $.resx('add')),\r\n                            m('button.btn.btn-warning', {\r\n                                type: 'button', role: 'button', disabled: !this.hasRecords(),\r\n                                onclick: this.hasRecords() ? this.deleteAllRecords.bind(this) : $.noop\r\n                            }, $.resx('deleteAll')),\r\n                            m(Help, { enabled: this.opts.wantsHelp, message: $.resx('report.groupText') })\r\n                        ])\r\n                    ])\r\n                ])) : null\r\n            ])\r\n        ]));\r\n    };\r\n\r\n    return GroupForm;\r\n});\r\n","/*!\r\n * Wraps chart range form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.RangeForm = factory(root.m, root.$, root.Form, root.Help, root.Alertify, root.DashChart, root.ColorPicker);\r\n})(this, function(m, $, Form, Help, Alertify, DashChart, ColorPicker) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the range form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function RangeForm(opts) {\r\n        var ranges = opts.ranges || [];\r\n        ranges = opts.ranges.map(function(x) { x.isExpanded = false; return x; });\r\n\r\n        Form.call(this, {\r\n            container: $.get('.range-table-wrapper', opts.content),\r\n            columns: {\r\n                id: { type: 'int' },\r\n                reportId: { type: 'int' },\r\n                xAxisColumnId: { type: 'int' },\r\n                yAxisColumnId: { type: 'int' },\r\n                aggregatorId: { type: 'int' },\r\n                dateIntervalId: { type: 'int' },\r\n                color: { type: 'string' },\r\n                displayOrder: { type: 'int' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, reportId: 0, xAxisColumnId: 0, yAxisColumnId: 0, aggregatorId: 0, dateIntervalId: 0, color: '', displayOrder: 0 }\r\n        }, ranges || []);\r\n\r\n        this.content = opts.content;\r\n        this.chartId = opts.chartId;\r\n        this.filterTypes = opts.filterTypes || {};\r\n        this.saveRangesUrl = opts.saveRangesUrl;\r\n        this.dateIntervals = opts.dateIntervals || [];\r\n        this.aggregators = opts.aggregators || [];\r\n        this.reports = opts.reports || [];\r\n        this.columns = opts.columns || [];\r\n        this.processJsonFn = opts.processJsonFn;\r\n        this.canExportFn = opts.canExportFn;\r\n        this.toggleExportFn = opts.toggleExportFn;\r\n    }\r\n\r\n    RangeForm.prototype = Object.create(Form.prototype);\r\n    RangeForm.prototype.constructor = RangeForm;\r\n\r\n    /**\r\n     * Save ranges to the server then rebuild the chart.\r\n     */\r\n    RangeForm.prototype.saveRanges = function() {\r\n        if ($.getAll('.mform-control-error', this.container).length > 0) {\r\n            Alertify.error($.resx('fixIt'));\r\n            return;\r\n        }\r\n\r\n        this.records.forEach(function(x, i) { x.displayOrder = i; });\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: self.saveRangesUrl,\r\n            data: {\r\n                Id: self.chartId,\r\n                Ranges: $.toPascalKeys(self.records)\r\n            }\r\n        }, function(data) {\r\n            if (data) {\r\n                self.changed = false;\r\n                if ($.isArray(data.ranges)) {\r\n                    data.ranges.forEach(function(x, i) { self.records[i].id = x.id; });\r\n                }\r\n                Alertify.success($.resx('chart.saveSuccessful'));\r\n                self.makeChart();\r\n            }\r\n        });\r\n    };\r\n\r\n    RangeForm.prototype.makeChart = function() {\r\n        var chartContent = $.get('.chart-container', this.content);\r\n        if (!(chartContent && chartContent.hasAttribute('data-url'))) {\r\n            return;\r\n        }\r\n        if (!(this.records && this.records.length > 0)) {\r\n            Alertify.error($.resx('chart.rangesRequired'));\r\n            return;\r\n        }\r\n\r\n        if (this.dashChart && this.dashChart.chart) {\r\n            this.dashChart.chart.destroy();\r\n        }\r\n\r\n        this.dashChart = new DashChart(chartContent, true, this.processJsonFn, null, this.toggleExportFn);\r\n    };\r\n\r\n    RangeForm.prototype.exportChart = function() {\r\n        if (!this.canExportFn()) {\r\n            return;\r\n        }\r\n        var chartContainer = $.get('.chart-container', this.content);\r\n        if (chartContainer) {\r\n            $.get('.export-width', this.content).value = chartContainer.offsetWidth;\r\n            $.get('.export-data', this.content).value = this.dashChart.chart.toBase64Image();\r\n            $.get('.export-form', this.content).submit();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the operatorId for a filter and unset the criteria.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered.\r\n     */\r\n    RangeForm.prototype.setReport = function(index, e) {\r\n        if (this.set(index, 'reportId', e)) {\r\n            this.records[index].xAxisColumnId = 0;\r\n            this.records[index].yAxisColumnId = 0;\r\n            this.records[index].aggregatorId = 0;\r\n            this.records[index].dateIntervalId = 0;\r\n            this.run();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Expand/collapse the inputs for a range.\r\n     * @param {Object} record - Range object.\r\n     */\r\n    RangeForm.prototype.toggleExpanded = function(record) {\r\n        record.isExpanded = !record.isExpanded;\r\n    };\r\n\r\n    /**\r\n     * Build the ranges.\r\n     * @returns {Object[]} Array of Mithril nodes containing the ranges.\r\n     */\r\n    RangeForm.prototype.rangeView = function() {\r\n        if (!this.reports) {\r\n            return null;\r\n        }\r\n\r\n        var self = this;\r\n        return this.records.map(function(record, index) {\r\n            var report = record.reportId ? $.findByKey(self.columns, 'reportId', record.reportId) : null;\r\n            if (report && !report.xColumns) {\r\n                report.xColumns = $.clone(report.columns);\r\n                report.xColumns.unshift({ columnId: 0, title: $.resx('chart.xAxisColumn') });\r\n                report.yColumns = $.clone(report.columns);\r\n                report.yColumns.unshift({ columnId: 0, title: $.resx('chart.yAxisColumn') });\r\n            }\r\n\r\n            var dateIntervalDisabled = true;\r\n            var inputsDisabled = !(self.opts.allowEdit && report);\r\n            if (!inputsDisabled && self.filterTypes) {\r\n                var col = $.findByKey(report.columns, 'columnId', record.xAxisColumnId * 1);\r\n                if (col && col.filterTypeId === self.filterTypes.date) {\r\n                    // show for date\r\n                    dateIntervalDisabled = false;\r\n                }\r\n            }\r\n\r\n            return m('.container.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: record._index }, [\r\n                m('.columns', [\r\n                    m('input', { type: 'hidden', name: 'ChartRange[' + index + '].Id', value: record.id }),\r\n                    m('.col-4',\r\n                        self.withHelp($.resx('chart.reportText'), [\r\n                            m('span.input-group-addon.input-group-custom', m('button.btn.btn-secondary', { onclick: self.toggleExpanded.bind(self, record) },\r\n                                m('i.dash.text-primary', { class: record.isExpanded ? 'dash-minus' : 'dash-plus' })\r\n                            )),\r\n                            m('select.form-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].ReportId', class: self.withError(record.reportId, true),\r\n                                placeholder: $.resx('chart.report'), onchange: self.setReport.bind(self, index), value: record.reportId\r\n                            }, !self.opts.allowEdit), self.withOptions(self.reports, record.reportId, 'id', 'name'))\r\n                        ])\r\n                    ),\r\n                    m('.col-3',\r\n                        self.withHelp($.resx('chart.xAxisColumnText'),\r\n                            m('select.form-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].XAxisColumnId', id: 'xAxisColumnId' + index, class: report ? self.withError(record.xAxisColumnId, true) : null,\r\n                                placeholder: $.resx('chart.xAxisColumn'), onchange: self.set.bind(self, index, 'xAxisColumnId'), value: record.xAxisColumnId\r\n                            }, inputsDisabled), self.withOptions(report ? report.xColumns : [{ columnId: 0, title: $.resx('chart.xAxisColumn') }], record.xAxisColumnId, 'columnId', 'title'))\r\n                        )\r\n                    ),\r\n                    m('.col-3',\r\n                        self.withHelp($.resx('chart.yAxisColumnText'),\r\n                            m('select.form-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].YAxisColumnId', id: 'yAxisColumnId' + index, class: report ? self.withError(record.yAxisColumnId, true) : null,\r\n                                placeholder: $.resx('chart.yAxisColumn'), onchange: self.set.bind(self, index, 'yAxisColumnId'), value: record.yAxisColumnId\r\n                            }, inputsDisabled), self.withOptions(report ? report.yColumns : [{ columnId: 0, title: $.resx('chart.yAxisColumn') }], record.yAxisColumnId, 'columnId', 'title'))\r\n                        )\r\n                    ),\r\n                    m('.col-2', self.opts.allowEdit ? self.buttonView.call(self, index, true) : null)\r\n                ]),\r\n                m('.columns', { class: record.isExpanded ? '' : ' d-none' }, [\r\n                    m('.col-4.col-ml-auto',\r\n                        self.withHelp($.resx('chart.aggregatorText'),\r\n                            m('select.form-select', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].AggregatorId', id: 'aggregatorId' + index,\r\n                                placeholder: $.resx('chart.aggregator'), onchange: self.set.bind(self, index, 'aggregatorId'), value: record.aggregatorId\r\n                            }, inputsDisabled), self.withOptions(self.aggregators, record.aggregatorId, 'id', 'name'))\r\n                        )\r\n                    ),\r\n                    m('.col-4',\r\n                        self.withHelp($.resx('chart.dateIntervalText'),\r\n                            m('select.form-select', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].DateIntervalId', id: 'dateIntervalId' + index,\r\n                                placeholder: $.resx('chart.dateInterval'), onchange: self.set.bind(self, index, 'dateIntervalId'), value: record.dateIntervalId\r\n                            }, dateIntervalDisabled), self.withOptions(self.dateIntervals, record.dateIntervalId, 'id', 'name'))\r\n                        )\r\n                    ),\r\n                    m('.col-2', [\r\n                        self.withHelp($.resx('chart.colorText'),\r\n                            m(ColorPicker, {\r\n                                name: 'ChartRange[' + index + '].Color', value: record.color, disabled: inputsDisabled,\r\n                                onSelect: self.set.bind(self, index, 'color')\r\n                            })\r\n                        ),\r\n                    ]),\r\n                    m('.col-1')\r\n                ])\r\n            ]);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Build the range form.\r\n     * @returns {Object} Mithril node containing the form.\r\n     */\r\n    RangeForm.prototype.view = function() {\r\n        return [\r\n            this.rangeView(),\r\n            m('.container.pt-1', m('.columns', [\r\n                m('.col-6', [\r\n                    m('.btn-toolbar', [\r\n                        this.opts.allowEdit ? m('button.btn.btn-primary.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.saveRanges.bind(this)\r\n                        }, $.resx('save')) : null,\r\n                        m('button.btn.btn-info', {\r\n                            type: 'button', role: 'button', onclick: this.exportChart.bind(this), disabled: !this.canExportFn()\r\n                        }, $.resx('export'))\r\n                    ])\r\n                ]),\r\n                this.opts.allowEdit ? m('.col-6.text-right', [\r\n                    m('.text-right', [\r\n                        m('button.btn.btn-info.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.addRecord.bind(this)\r\n                        }, $.resx('add')),\r\n                        m('button.btn.btn-warning.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.deleteAllRecords.bind(this), disabled: !this.hasRecords()\r\n                        }, $.resx('deleteAll')),\r\n                        m(Help, { enabled: this.opts.wantsHelp, message: $.resx('chart.rangeText') })\r\n                    ])\r\n                ]) : null\r\n            ]))\r\n        ];\r\n    };\r\n\r\n    return RangeForm;\r\n});\r\n","/*!\r\n * Wraps dataset form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.Dataset = factory(root.m, root.$, root.Alertify, root.Form, root.Autocomplete, root.Help, root.JoinForm, root.ColumnForm);\r\n})(this, function(m, $, Alertify, Form, Autocomplete, Help, JoinForm, ColumnForm) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare Dataset class.\r\n     * @param {Object} opts - Dataset settings\r\n     */\r\n    function Dataset(opts) {\r\n        opts = opts || {};\r\n        if (opts.columns) {\r\n            opts.columns.forEach(function(x) { x.isExpanded = false; });\r\n        }\r\n\r\n        this.sourceList = null;\r\n        this.columnList = null;\r\n        this.formChanged = false;\r\n        this.selectedSourceList = [];\r\n        this.content = opts.content;\r\n\r\n        this.checkType(false);\r\n        this.loadSourceList();\r\n        this.loadColumnList();\r\n\r\n        this.joinForm = new JoinForm({\r\n            content: opts.content,\r\n            wantsHelp: opts.wantsHelp,\r\n            joins: opts.joins,\r\n            joinTypes: opts.joinTypes,\r\n            sourceFn: this.getSourceList.bind(this),\r\n            columnUpdateFn: this.loadColumnList.bind(this)\r\n        });\r\n        this.joinForm.run();\r\n\r\n        this.columnForm = new ColumnForm({\r\n            content: opts.content,\r\n            wantsHelp: opts.wantsHelp,\r\n            columns: opts.columns,\r\n            dataTypes: opts.dataTypes,\r\n            filterTypes: opts.filterTypes,\r\n            sourceFn: this.getSourceList.bind(this),\r\n            columnFn: this.getColumnList.bind(this),\r\n            selectedSourceFn: this.getSelectedSourceList.bind(this)\r\n        });\r\n        this.columnForm.run();\r\n\r\n        $.onChange($.get('.dataset-database', this.content), this.loadSourceList.bind(this), false);\r\n        $.onChange($.get('.dataset-type', this.content), this.checkType.bind(this), false);\r\n\r\n        var self = this;\r\n        var primary = $.get('.dataset-primary-source', this.content);\r\n        if (primary) {\r\n            m.mount(primary, {\r\n                view: function() {\r\n                    return m(Help, { message: $.resx('dataset.primarySourceHelp'), enabled: opts.wantsHelp }, m(Autocomplete, {\r\n                        name: 'PrimarySource',\r\n                        class: 'primary-source-autocomplete',\r\n                        value: primary.getAttribute('data-value'),\r\n                        required: true,\r\n                        list: self.getSourceList.bind(self),\r\n                        onSelect: self.updateColumnList.bind(self),\r\n                        onCancel: self.updateColumnList.bind(self)\r\n                    }));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    Dataset.prototype = {\r\n        /**\r\n         * Build a list of all tables used by this dataset.\r\n         * @returns {bool} Returns true if list has changed, else false.\r\n         */\r\n        updateSelectedSources: function() {\r\n            var list = [];\r\n            var primarySource = $.get('.primary-source-autocomplete', this.content);\r\n            if (primarySource && primarySource.value) {\r\n                list.push(primarySource.value);\r\n            }\r\n            if (this.joinForm) {\r\n                this.joinForm.records.map(function(x) { list.push(x.tableName); });\r\n            }\r\n            list = list.filter(function(x) {\r\n                return !$.isNull(x) && x.length > 0;\r\n            });\r\n            if (!$.equals(list, this.selectedSourceList)) {\r\n                this.selectedSourceList = list;\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Check if the dataset is using a proc instead of tables.\r\n         * @param {bool} updateList - If true update the table/proc list.\r\n         */\r\n        checkType: function(updateList) {\r\n            var type = $.get('.dataset-type', this.content);\r\n            if (!type) {\r\n                return;\r\n            }\r\n            if ($.coalesce(updateList, true)) {\r\n                this.loadSourceList();\r\n            }\r\n            if (this.joinForm) {\r\n                this.joinForm.isProc = type.value * 1 === 2;\r\n                this.joinForm.run();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Fetch a list of available columns from the server. Autocompletes will update automatically.\r\n         */\r\n        loadColumnList: function() {\r\n            var url = this.content.getAttribute('data-column-url');\r\n            var database = $.get('.dataset-database', this.content);\r\n            if (!(url && database && $.hasPositiveValue(database.value))) {\r\n                this.columnList = [];\r\n                return;\r\n            }\r\n\r\n            if (this.updateSelectedSources()) {\r\n                // only run if sources are different from last request to avoid unnecessary traffic\r\n                var self = this;\r\n                $.ajax({\r\n                    method: 'POST',\r\n                    url: url,\r\n                    data: { DatabaseId: database.value * 1, Tables: self.selectedSourceList }\r\n                }, function(columns) {\r\n                    self.columnList = columns && columns.length ? columns : [];\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Fetch a list of tables from the server. Autocompletes will update automatically.\r\n         */\r\n        loadSourceList: function() {\r\n            var url = this.content.getAttribute('data-table-url');\r\n            var database = $.get('.dataset-database', this.content);\r\n            var type = $.get('.dataset-type', this.content);\r\n            if (!(url && database && type)) {\r\n                return;\r\n            }\r\n            if (!$.hasPositiveValue(database.value) || !$.hasPositiveValue(type.value)) {\r\n                this.sourceList = [];\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: url,\r\n                data: { databaseId: database.value, typeId: type.value }\r\n            }, function(tables) {\r\n                self.sourceList = tables && tables.length ? tables : [];\r\n                self.loadColumnList();\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get the list of table for the autocomplete.\r\n         * @returns {string[]} Returns array of tables.\r\n         */\r\n        getSourceList: function() {\r\n            return this.sourceList;\r\n        },\r\n\r\n        /**\r\n         * Get the list of selected tables.\r\n         * @returns {string[]} Returns array of tables.\r\n         */\r\n        getSelectedSourceList: function() {\r\n            return this.selectedSourceList;\r\n        },\r\n\r\n        /**\r\n         * Get the list of columns for the autocomplete.\r\n         * @returns {string[]} Returns array of columns.\r\n         */\r\n        getColumnList: function() {\r\n            return this.columnList;\r\n        },\r\n\r\n        /**\r\n         * Refresh the column list.\r\n         */\r\n        updateColumnList: function() {\r\n            // need timeout delay so the field value is updated before we load the list\r\n            setTimeout(this.loadColumnList.bind(this), 10);\r\n        },\r\n\r\n        destroy: function() {\r\n            $.destroy(this.columnForm);\r\n            $.destroy(this.joinForm);\r\n\r\n            var primary = $.get('.dataset-primary-source', this.content);\r\n            if (primary) {\r\n                m.mount(primary, null);\r\n            }\r\n        }\r\n    };\r\n\r\n    return Dataset;\r\n});\r\n","/*!\r\n * Wraps shared functionality for report and chart detail pages.\r\n */\r\n(function(root, factory) {\r\n    root.BaseDetails = factory(root.$, root.Alertify, root.Prism);\r\n})(this, function($, Alertify, Prism) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare base details class.\r\n     * @param {Object} opts - Form settings\r\n     */\r\n    function BaseDetails(opts) {\r\n        opts = opts || {};\r\n        this.content = opts.content;\r\n        this.columnList = opts.columns || [];\r\n\r\n        $.on($.get('.view-sql', opts.content), 'click', function() {\r\n            $.dialogs.openDialog($.get('.modal-sql', opts.content).outerHTML);\r\n        });\r\n\r\n        if (!opts.allowEdit) {\r\n            this.initDate = new Date();\r\n        }\r\n    }\r\n\r\n    BaseDetails.prototype = {\r\n        /**\r\n         * Handle the result of a query for report data.\r\n         * @param {Object} json - Query result.\r\n         * @returns {bool}  True if data is valid.\r\n         */\r\n        processJson: function(json) {\r\n            if (json.updatedDate && this.initDate) {\r\n                var updateDate = new Date(json.updatedDate);\r\n                if (updateDate && updateDate > this.initDate) {\r\n                    // report has been modified - warn the user to refresh\r\n                    Alertify.error($.resx('reportModified'));\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if (json.dataSql) {\r\n                this.setSql($.get('.sql-data-content', this.content), json.dataSql, json.dataError);\r\n            }\r\n            if (json.countSql) {\r\n                this.setSql($.get('.sql-count-content', this.content), json.countSql, json.countError);\r\n            }\r\n\r\n            if ($.isNull(json.rows)) {\r\n                Alertify.error($.resx('errorConnectingToDataSource'));\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Show sql and error message in the correct place.\r\n         * @param {Node} node - DOM node to update.\r\n         * @param {string} sql - SQL statement to display.\r\n         * @param {string} error - Error to display if any.\r\n         */\r\n        setSql: function(node, sql, error) {\r\n            if (node) {\r\n                var elem = $.get('.sql-text', node);\r\n                if (elem) {\r\n                    elem.textContent = sql;\r\n                    Prism.highlightElement(elem);\r\n                }\r\n                elem = $.get('.sql-error', node);\r\n                if (elem) {\r\n                    elem.textContent = error || '';\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the list of columns for the autocomplete.\r\n         * @returns {string[]} Returns array of columns.\r\n         */\r\n        getColumnList: function() {\r\n            return this.columnList;\r\n        }\r\n    };\r\n\r\n    return BaseDetails;\r\n});\r\n","/*!\r\n * Wraps report form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.ReportDetails = factory(root.m, root.$, root.Alertify, root.BaseDetails, root.FilterForm, root.GroupForm, root.Table);\r\n})(this, function(m, $, Alertify, BaseDetails, FilterForm, GroupForm, Table) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare ReportDetails class.\r\n     * @param {Object} opts - Report settings\r\n     */\r\n    function ReportDetails(opts) {\r\n        opts = opts || {};\r\n\r\n        BaseDetails.call(this, opts);\r\n\r\n        if (!(opts.reportColumns && opts.reportColumns.length)) {\r\n            return;\r\n        }\r\n\r\n        this.content = opts.content;\r\n        this.isProc = opts.loadAllData;\r\n\r\n        var self = this;\r\n        var saveUrl = opts.saveColumnsUrl;\r\n        var saveStorageFunc = $.debounce(!opts.allowEdit ? $.noop : function(settings) {\r\n            if ($.isNull(self.previousColumnWidths) || !$.equals(settings.columnWidths, self.previousColumnWidths)) {\r\n                $.ajax({\r\n                    method: 'PUT',\r\n                    url: saveUrl,\r\n                    data: {\r\n                        Id: opts.reportId,\r\n                        Columns: $.toPascalKeys(settings.columnWidths),\r\n                        ReportWidth: settings.width * 1\r\n                    },\r\n                    block: false\r\n                });\r\n                self.previousColumnWidths = settings.columnWidths;\r\n            }\r\n        }, 250);\r\n\r\n        var callback = this.processJson.bind(this);\r\n        m.mount($.get('.report-data-container', opts.content), {\r\n            view: function() {\r\n                return m(Table, {\r\n                    url: opts.dataUrl,\r\n                    requestMethod: 'POST',\r\n                    requestParams: { Id: opts.reportId, Save: true },\r\n                    searchable: false,\r\n                    loadAllData: opts.loadAllData,\r\n                    editable: opts.allowEdit,\r\n                    headerButtons: [{ type: 'a', attributes: { class: 'btn btn-primary mr-2', href: opts.exportUrl, target: '_blank' }, label: $.resx('export') }],\r\n                    itemsPerPage: opts.rowLimit,\r\n                    currentStartItem: 0,\r\n                    sorting: opts.sortColumns || [],\r\n                    storageFunction: saveStorageFunc,\r\n                    width: opts.width,\r\n                    columns: opts.reportColumns || [],\r\n                    displayDateFormat: opts.dateFormat,\r\n                    displayCurrencyFormat: opts.currencyFormat,\r\n                    dataCallback: callback,\r\n                    errorCallback: callback\r\n                });\r\n            }\r\n        });\r\n        this.previousColumnWidths = opts.reportColumns.map(function(x) { return { field: x.field, width: x.width * 1.0 }; });\r\n\r\n        this.filterForm = new FilterForm({\r\n            reportId: opts.reportId,\r\n            content: opts.content,\r\n            filters: opts.filters,\r\n            columns: {\r\n                id: { type: 'int' },\r\n                columnId: { type: 'int' },\r\n                operatorId: { type: 'int' },\r\n                criteria: { type: 'str' },\r\n                criteria2: { type: 'str' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: null, columnId: '', operatorId: '', criteria: null, criteria2: null },\r\n            dateFormat: opts.dateFormat,\r\n            saveFiltersUrl: opts.saveFiltersUrl,\r\n            filterOperators: opts.filterOperators,\r\n            filterOperatorIds: opts.filterOperatorIds,\r\n            filterTypes: opts.filterTypes,\r\n            dateOperators: opts.dateOperators,\r\n            lookups: opts.lookups,\r\n            isProc: opts.isProc,\r\n            refreshFn: this.refresh.bind(this),\r\n            columnFn: this.getColumnList.bind(this)\r\n        });\r\n        this.filterForm.run();\r\n\r\n        this.groupForm = new GroupForm({\r\n            reportId: opts.reportId,\r\n            content: opts.content,\r\n            groups: opts.groups,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            saveGroupsUrl: opts.saveGroupsUrl,\r\n            aggregatorId: opts.aggregatorId,\r\n            aggregator: opts.aggregator,\r\n            aggregators: opts.aggregators,\r\n            isProc: opts.isProc,\r\n            refreshFn: this.refresh.bind(this),\r\n            columnFn: this.getColumnList.bind(this)\r\n        });\r\n        this.groupForm.run();\r\n    }\r\n\r\n    ReportDetails.prototype = Object.create(BaseDetails.prototype);\r\n    ReportDetails.prototype.constructor = BaseDetails;\r\n\r\n    /**\r\n     * Handle the result of a query for report data.\r\n     * @param {Object} json - Query result.\r\n     * @returns {bool}  True if data is valid.\r\n     */\r\n    ReportDetails.prototype.processJson = function(json) {\r\n        if (json.updatedDate && this.initDate) {\r\n            var updateDate = new Date(json.updatedDate);\r\n            if (updateDate && updateDate > this.initDate) {\r\n                // report has been modified - warn the user of the refresh\r\n                Alertify.error($.resx('reportModified'));\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (json.dataSql) {\r\n            this.setSql($.get('.sql-data-content', this.content), json.dataSql, json.dataError);\r\n        }\r\n        if (json.countSql) {\r\n            this.setSql($.get('.sql-count-content', this.content), json.countSql, json.countError);\r\n        }\r\n\r\n        if ($.isNull(json.rows)) {\r\n            Alertify.error($.resx('errorConnectingToDataSource'));\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    ReportDetails.prototype.refresh = function() {\r\n        $.dispatch($.get('.dash-table', this.content), $.events.tableRefresh);\r\n    };\r\n\r\n    ReportDetails.prototype.destroy = function() {\r\n        $.dispatch($.get('.dash-table', this.content), $.events.tableDestroy);\r\n        $.destroy(this.filterForm);\r\n        $.destroy(this.groupForm);\r\n    };\r\n\r\n    return ReportDetails;\r\n});\r\n","/*!\r\n * Wraps report form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.ChartDetails = factory(root.$, root.Alertify, root.BaseDetails, root.RangeForm);\r\n})(this, function($, Alertify, BaseDetails, RangeForm) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare ChartDetails class.\r\n     * @param {Object} opts - Report settings\r\n     */\r\n    function ChartDetails(opts) {\r\n        opts = opts || {};\r\n\r\n        BaseDetails.call(this, opts);\r\n\r\n        this.enableExport = false;\r\n\r\n        this.rangeForm = new RangeForm({\r\n            chartId: opts.chartId,\r\n            content: opts.content,\r\n            ranges: opts.ranges,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            filterTypes: opts.filterTypes || {},\r\n            saveRangesUrl: opts.saveRangesUrl,\r\n            dateIntervals: opts.dateIntervals,\r\n            aggregators: opts.aggregators,\r\n            reports: opts.reports,\r\n            columns: opts.columns,\r\n            processJsonFn: this.processJson.bind(this),\r\n            canExportFn: this.canExport.bind(this),\r\n            toggleExportFn: this.toggleExport.bind(this)\r\n        });\r\n        this.rangeForm.run();\r\n\r\n        if (this.rangeForm.records && this.rangeForm.records.length) {\r\n            this.rangeForm.makeChart();\r\n        }\r\n    }\r\n\r\n    ChartDetails.prototype = Object.create(BaseDetails.prototype);\r\n    ChartDetails.prototype.constructor = BaseDetails;\r\n\r\n    /**\r\n     * Handle the result of a query for report data.\r\n     * @param {Object} json - Query result.\r\n     * @returns {bool}  True if data is valid.\r\n     */\r\n    ChartDetails.prototype.processJson = function(json) {\r\n        if (json.updatedDate && this.initDate) {\r\n            var updateDate = new Date(json.updatedDate);\r\n            if (updateDate && updateDate > this.initDate) {\r\n                // chart has been modified - warn the user to refresh\r\n                $.dispatch(document, $.events.chartLoad);\r\n                Alertify.success($.resx('chartModified'));\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if ($.isNull(json.ranges) || json.ranges.length === 0) {\r\n            Alertify.error($.resx('errorConnectingToDataSource'));\r\n            this.enableExport = false;\r\n            $.show($.get('.chart-error', this));\r\n            return false;\r\n        }\r\n\r\n        this.enableExport = true;\r\n        $.get('.export-filename', this.content).value = json.title;\r\n\r\n        var elem = $.get('.sql-content', this.content);\r\n        var ranges = json.ranges.map(function(x) { return { title: x.title, sql: x.sql, error: x.error }; });\r\n        this.setSql(elem, ranges.filter(function(x) { return x.sql; }).map(function(x) { return '-- ' + x.title + '\\n' + x.sql + '\\n'; }).join('\\n'),\r\n            ranges.filter(function(x) { return x.error; }).map(function(x) { return x.title + ':<br>' + x.error + '<br>'; }).join('<br>'));\r\n\r\n        return true;\r\n    };\r\n\r\n    ChartDetails.prototype.canExport = function() {\r\n        return this.enableExport;\r\n    };\r\n\r\n    /**\r\n     * Set export flag.\r\n     * @param {bool} val - Enable export if true, else disable.\r\n     */\r\n    ChartDetails.prototype.toggleExport = function(val) {\r\n        this.enableExport = val;\r\n    };\r\n\r\n    ChartDetails.prototype.destroy = function() {\r\n        $.destroy(this.rangeForm);\r\n        $.destroy(this.chart);\r\n    };\r\n\r\n    return ChartDetails;\r\n});\r\n","/*!\r\n * Wraps functionality needed to display a dashboard widget.\r\n */\r\n(function(root, factory) {\r\n    root.Widget = factory(root.m, root.$, root.Alertify, root.Table, root.DashChart, root.Draggabilly, root.Rect);\r\n})(this, function(m, $, Alertify, Table, DashChart, Draggabilly, Rect) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Use object properties to make class list for a widget container.\r\n     * @param {Object} obj - Widget properties.\r\n     * @returns {string} CSS class list.\r\n     */\r\n    var buildClassList = function(obj) {\r\n        return 'grid-item grid-item-width-' + obj.width + ' grid-item-height-' + obj.height +\r\n            ' grid-item-x-' + obj.x + ' grid-item-y-' + obj.y;\r\n    };\r\n\r\n    /**\r\n     * Declare Widget class.\r\n     * @param {Object} opts - Widget settings\r\n     */\r\n    var Widget = function(opts) {\r\n        this.init(opts);\r\n\r\n        // attach this to the container for reference in the dashboard\r\n        var container = this.getContainer();\r\n        container.widget = this;\r\n    };\r\n\r\n    Widget.prototype = {\r\n        /**\r\n         * Initialize the widget.\r\n         * @param {Object} opts - Widget settings\r\n         */\r\n        init: function(opts) {\r\n            opts.isData = $.coalesce(opts.isData, true);\r\n            opts.refreshSeconds = $.coalesce(opts.refreshSeconds, 0);\r\n            opts.baseUrl = $.get('body').getAttribute('data-base-url');\r\n            this.opts = opts;\r\n\r\n            this.id = opts.id;\r\n            this.chart = null;\r\n            this.interval = null;\r\n            this.isFullscreen = false;\r\n            this.initDate = new Date();\r\n            this.dragMargin = 0;\r\n            this.updatedDate = new Date();\r\n\r\n            if (opts.isData) {\r\n                this.tableOpts = {\r\n                    id: 'widgetTable_' + opts.id,\r\n                    url: opts.url,\r\n                    requestMethod: 'POST',\r\n                    requestParams: { Id: opts.reportId },\r\n                    loadAllData: false,\r\n                    editable: false,\r\n                    itemsPerPage: opts.reportRowLimit || 10,\r\n                    currentStartItem: 0,\r\n                    sorting: opts.sortColumns,\r\n                    storageFunction: $.noop,\r\n                    width: Math.max(opts.reportWidth || 100, 100),\r\n                    columns: opts.columns,\r\n                    dataCallback: this.processJson.bind(this),\r\n                    errorCallback: this.onError.bind(this),\r\n                    displayDateFormat: opts.displayDateFormat,\r\n                    displayCurrencyFormat: opts.displayCurrencyFormat\r\n                };\r\n            }\r\n\r\n            this.render();\r\n\r\n            var container = this.getContainer();\r\n            this.rect = new Rect(opts.width, opts.height, opts.x, opts.y);\r\n            this.setupDraggie(container);\r\n\r\n            if (!opts.isData) {\r\n                this.chart = new DashChart(container, false, this.processJson.bind(this), this.onError.bind(this));\r\n            }\r\n            if (opts.refreshSeconds > 0) {\r\n                this.interval = setInterval(this.refresh.bind(this), opts.refreshSeconds * 1000);\r\n            }\r\n\r\n            if (opts.title) {\r\n                $.setText($.get('.grid-title', container), opts.title);\r\n            }\r\n        },\r\n\r\n        render: function() {\r\n            var parentNode = $.get('#widget_' + this.opts.id);\r\n            var firstRender = !parentNode;\r\n\r\n            if (firstRender) {\r\n                // have to create the parent node by hand first - rendering multiple views to the same parentNode with mithril causes an overwrite\r\n                parentNode = $.createNode();\r\n                parentNode.id = 'widget_' + this.opts.id;\r\n                parentNode.setAttribute('data-url', this.opts.url);\r\n                parentNode.className = buildClassList(this.opts);\r\n                $.get('#dashboard').appendChild(parentNode);\r\n            }\r\n\r\n            var self = this;\r\n            // now render the rest of the widget content\r\n            m.mount(parentNode, {\r\n                view: function() {\r\n                    return [\r\n                        m('.grid-header.columns', [\r\n                            m('span.grid-title.col-8', self.opts.title),\r\n                            m('span.grid-buttons.col-4.text-right', [\r\n                                m('a.btn.btn-link.btn-refresh', { title: $.resx('refresh'), onclick: self.forceRefresh.bind(self) },\r\n                                    m('i.dash.dash-arrows-cw')\r\n                                ),\r\n                                m('a.btn.btn-link.btn-fullscreen', { title: $.resx('toggleFullScreen'), onclick: self.toggleFullScreen.bind(self) },\r\n                                    m('i.dash.dash-max')\r\n                                ),\r\n                                m('a.btn.btn-link.dash-ajax.fs-disabled', {\r\n                                    href: self.opts.baseUrl + (self.opts.isData ? 'Report' : 'Chart') + '/Details/' + (self.opts.isData ? self.opts.reportId : self.opts.chartId),\r\n                                    title: $.resx(self.opts.isData ? 'viewReport' : 'viewChart')\r\n                                }, m('i.dash.dash-info')),\r\n                                m('a.btn.btn-link.dash-ajax.fs-disabled', { href: self.opts.baseUrl + 'Dashboard/Edit/' + self.opts.id, title: $.resx('editWidget') },\r\n                                    m('i.dash.dash-pencil')\r\n                                ),\r\n                                m('a.btn.btn-link.dash-ajax.fs-disabled', { title: $.resx('deleteWidget'), onclick: self.deleteWidget.bind(self) },\r\n                                    m('i.dash.dash-trash')\r\n                                )\r\n                            ])\r\n                        ]),\r\n                        m('.grid-body', [\r\n                            self.opts.isData ? m('.widget-data', { id: 'widgetData_' + self.opts.id }, m(Table, self.tableOpts)) :\r\n                                m('.widget-chart', { id: 'widgetChart_' + self.opts.id }, [\r\n                                    m('.chart-spinner', m('.loading.loading-lg')),\r\n                                    m('.chart-error.d-none.pl-1',\r\n                                        m('div', [\r\n                                            m('p', $.resx('errorChartLoad')),\r\n                                            m('.btn.btn-info.btn-sm', { onclick: self.refresh.bind(self) }, $.resx('tryAgain'))\r\n                                        ])\r\n                                    ),\r\n                                    m('.canvas-container', m('canvas.chart-canvas.d-none'))\r\n                                ])\r\n                        ]),\r\n                        m('.grid-footer', [\r\n                            m('span.grid-updated-time', self.updatedDate.toLocaleTimeString()),\r\n                            m('span.resizable-handle.float-right', m('i.dash.dash-corner')),\r\n                            m('span.drag-handle.float-right', m('i.dash.dash-move'))\r\n                        ])\r\n                    ];\r\n                }\r\n            });\r\n\r\n            if (firstRender) {\r\n                // add our system wide events\r\n                $.dialogs.processContent($.get('#widget_' + this.opts.id));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the container element for the widget.\r\n         * @returns {Node} DOM node that contains the widget content.\r\n         */\r\n        getContainer: function() {\r\n            return $.get('#widget_' + this.opts.id);\r\n        },\r\n\r\n        /**\r\n         * Add the draggabilly handlers.\r\n         * @param {Node} container - DOM node that contains the widget content.\r\n         * @param {Object} grid - Object that contains the grid columnWidth and rowHeight.\r\n         */\r\n        setupDraggie: function(container, grid) {\r\n            container = $.coalesce(container, this.getContainer());\r\n            var g = this.opts.grid = $.coalesce(grid, this.opts.grid);\r\n\r\n            $.destroy(this.moveDraggie);\r\n            this.moveDraggie = new Draggabilly(container, { handle: '.drag-handle', grid: [g.columnWidth, g.rowHeight], minZero: true }).on('dragEnd', this.stopDrag.bind(this));\r\n\r\n            $.destroy(this.resizeDraggie);\r\n            var handle = $.get('.resizable-handle', container);\r\n            this.resizeDraggie = new Draggabilly(handle, { grid: [g.columnWidth, g.rowHeight] }).on('dragStart', this.initResize.bind(this)).on('dragEnd', this.stopResize.bind(this));\r\n\r\n            var style = handle.currentStyle || window.getComputedStyle(handle);\r\n            this.dragMargin = style.marginRight.replace('px', '') * 1;\r\n        },\r\n\r\n        /**\r\n         * Stop dragging the widget and updates its location.\r\n         */\r\n        stopDrag: function() {\r\n            var x = Math.max(Math.round(this.moveDraggie.position.x / this.opts.grid.columnWidth), 0);\r\n            var y = Math.max(Math.round(this.moveDraggie.position.y / this.opts.grid.rowHeight), 0);\r\n            if (x + this.rect.width > this.opts.grid.columns) {\r\n                x = this.opts.grid.columns - this.rect.width;\r\n            }\r\n            if (y + this.rect.height > this.opts.grid.rows) {\r\n                y = this.opts.grid.rows - this.rect.height;\r\n            }\r\n            this.setLocation(x, y);\r\n            this.rect.updated = true;\r\n            this.opts.layoutCallback();\r\n        },\r\n\r\n        /**\r\n         * Start resizing a widget\r\n         * @param {Event} event - Original mousedown or touchstart event\r\n         */\r\n        initResize: function(event) {\r\n            // clear any selection so browser doesn't think we are dragging the selection\r\n            window.getSelection().removeAllRanges();\r\n\r\n            var container = this.getContainer();\r\n            container.style['z-index'] = 9999;\r\n            var pos = event.changedTouches ? event.changedTouches[0] : event;\r\n            this.x = pos.clientX;\r\n            this.y = pos.clientY;\r\n\r\n            var styles = document.defaultView.getComputedStyle(container);\r\n            this.width = styles.width.replace('px', '') * 1;\r\n            this.height = styles.height.replace('px', '') * 1;\r\n\r\n            if (event.target !== event.currentTarget) {\r\n                event.stopPropagation();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update the widget after the user finishes resizing.\r\n         */\r\n        stopResize: function() {\r\n            var container = this.getContainer();\r\n            var w = Math.max(this.width + this.resizeDraggie.position.x + this.dragMargin, this.opts.grid.columnWidth * 4);\r\n            var h = Math.max(this.height + this.resizeDraggie.position.y, this.opts.grid.rowHeight * 4);\r\n\r\n            this.setSize(Math.min(Math.round(w / this.opts.grid.columnWidth), this.opts.grid.columns), Math.min(Math.round(h / this.opts.grid.rowHeight), this.opts.grid.rows));\r\n\r\n            var handle = $.get('.resizable-handle', container);\r\n            if (handle) {\r\n                handle.removeAttribute('style');\r\n            }\r\n\r\n            this.opts.layoutCallback();\r\n            this.updateLayout();\r\n            this.rect.updated = true;\r\n        },\r\n\r\n        deleteWidget: function() {\r\n            var self = this;\r\n            Alertify.confirm($.resx('areYouSure'), function() {\r\n                $.ajax({\r\n                    method: 'DELETE',\r\n                    url: self.opts.baseUrl + 'Dashboard/Delete/' + self.opts.id\r\n                }, self.destroy.bind(self));\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Handle the result of a query for report data.\r\n         * @param {Object} json - Data to display in the widget.\r\n         * @returns {bool} True if the json data is valid\r\n         */\r\n        processJson: function(json) {\r\n            if (json.updatedDate && this.initDate) {\r\n                var updateDate = new Date(json.updatedDate);\r\n                if (updateDate && updateDate > this.initDate) {\r\n                    this.reload();\r\n                    return false;\r\n                }\r\n            }\r\n            if ((this.opts.isData && $.isNull(json.rows)) || (!this.opts.isData && ($.isNull(json.ranges) || json.ranges.length === 0))) {\r\n                Alertify.error($.resx('errorConnectingToDataSource'));\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Reload the widget options and reinitialize.\r\n         * @param {bool} showMsg - If true show the widget reloaded message to the user.\r\n         * @param {Object} options - Options to use to reload the widget instead of requesting from the server.\r\n         */\r\n        reload: function(showMsg, options) {\r\n            var callback = function(opts) {\r\n                this.destroy(false);\r\n                this.init($.extend(this.opts, opts));\r\n                if ($.coalesce(showMsg, true)) {\r\n                    Alertify.success($.resx('widgetReloaded').replace('{0}', this.opts.title));\r\n                }\r\n                return;\r\n            };\r\n\r\n            if (!$.isNull(options)) {\r\n                callback.call(this, options);\r\n            } else {\r\n                $.ajax({ method: 'GET', url: this.opts.baseUrl + 'Dashboard/WidgetOptions/' + this.opts.id }, callback.bind(this));\r\n            }\r\n        },\r\n\r\n        refresh: function() {\r\n            if ($.dialogs.hasOpenDialog()) {\r\n                // don't refresh when a dialog is open\r\n                return;\r\n            }\r\n\r\n            if (this.opts.isData) {\r\n                $.dispatch($.get('.dash-table', this.getContainer()), $.events.tableRefresh);\r\n            } else {\r\n                this.chart.run();\r\n            }\r\n\r\n            this.updatedDate = new Date();\r\n        },\r\n\r\n        updateLayout: function() {\r\n            if (this.opts.isData) {\r\n                $.dispatch($.get('.dash-table', this.getContainer()), $.events.layoutUpdate);\r\n            } else {\r\n                this.chart.resize();\r\n            }\r\n        },\r\n\r\n        forceRefresh: function() {\r\n            if (this.opts.refreshSeconds > 0) {\r\n                clearInterval(this.interval);\r\n                this.interval = setInterval(this.refresh.bind(this), this.opts.refreshSeconds * 1000);\r\n            }\r\n            this.refresh();\r\n        },\r\n\r\n        /**\r\n         * Refresh the style based on the dimensions.\r\n         * @param {number} width - New width of the widget.\r\n         * @param {number} height - New height of the widget.\r\n         */\r\n        setSize: function(width, height) {\r\n            this.rect.width = width;\r\n            this.rect.height = height;\r\n            this.updateStyle();\r\n        },\r\n\r\n        /**\r\n         * Refresh the style based on the dimensions.\r\n         * @param {number} x - New x coordinate of the widget.\r\n         * @param {number} y - New y coordinate of the widget.\r\n         */\r\n        setLocation: function(x, y) {\r\n            this.rect.x = x;\r\n            this.rect.y = y;\r\n            this.updateStyle();\r\n        },\r\n\r\n        /**\r\n        * Refresh the style based on the dimensions.\r\n        */\r\n        updateStyle: function() {\r\n            var container = this.getContainer();\r\n            container.className = buildClassList(this.rect);\r\n            container.removeAttribute('style');\r\n        },\r\n\r\n        /**\r\n         * Handle an error.\r\n         * @returns {bool} Always returns true.\r\n         */\r\n        onError: function() {\r\n            if (this.interval) {\r\n                clearInterval(this.interval);\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Destroy the widget.\r\n         * @param {bool} totalDestruction - Remove the container node and null out the widget object if true.\r\n         */\r\n        destroy: function(totalDestruction) {\r\n            if (this.opts.isData) {\r\n                $.dispatch($.get('.dash-table', this.getContainer()), $.events.tableDestroy);\r\n            } else {\r\n                $.destroy(this.chart);\r\n            }\r\n\r\n            $.destroy(this.moveDraggie);\r\n            $.destroy(this.resizeDraggie);\r\n\r\n            if (this.interval) {\r\n                clearInterval(this.interval);\r\n                this.interval = null;\r\n            }\r\n\r\n            if ($.coalesce(totalDestruction, true)) {\r\n                var container = this.getContainer();\r\n                container.widget = null;\r\n                container.parentNode.removeChild(container);\r\n            }\r\n        },\r\n\r\n        toggleFullScreen: function() {\r\n            var container = this.getContainer();\r\n            var fullScreenIcon = $.get('.btn-fullscreen i', container);\r\n            $.toggleClass(container, 'full-screen', !this.isFullscreen);\r\n            $.toggleClass(fullScreenIcon, 'dash-min', !this.isFullscreen);\r\n            $.toggleClass(fullScreenIcon, 'dash-max', this.isFullscreen);\r\n            var isFullscreen = this.isFullscreen;\r\n            $.getAll('.fs-disabled', container).forEach(function(x) { $.toggleClass(x, 'disabled', !isFullscreen); });\r\n            this.isFullscreen = !this.isFullscreen;\r\n            this.updateLayout();\r\n        }\r\n    };\r\n\r\n    return Widget;\r\n});\r\n","/*!\r\n * Wraps dialog functionality.\r\n */\r\n(function($, Alertify, Dialog, Table, Tab, CollapsibleList, Validator, DatePicker) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Set focus on an element after a dialog closes.\r\n     * @this {Event} Event that originally opened the dialog.\r\n     */\r\n    var focusOnClose = function() {\r\n        if (this && this.target) {\r\n            this.target.focus();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Selectors and callback function to create events.\r\n     */\r\n    var _contentActions = [\r\n        { selector: '[data-toggle=\"tab\"], [data-toggle=\"pill\"]', action: function() { new Tab(this); } },\r\n        { selector: '.dash-ajax', action: function() { $.on(this, 'click', handleAjaxRequest); } },\r\n        { selector: '.dash-form', action: function() { $.on(this, 'submit', function(e) { e.preventDefault(); }, true); } },\r\n        {\r\n            selector: '.dash-context-help', action: function() {\r\n                $.on(this, 'click', function(e) {\r\n                    Alertify.alert(this.getAttribute('data-message').replace(/&quot;/g, '\"'), focusOnClose.bind(e), focusOnClose.bind(e));\r\n                });\r\n            }\r\n        },\r\n        { selector: '.dash-collapsible-list', action: function() { new CollapsibleList(this); } },\r\n        {\r\n            selector: '[data-toggle=\"validator\"]', action: function() {\r\n                new Validator(this, { match: $.resx('errorMatch'), minlength: $.resx('errorMinLength') });\r\n            }\r\n        },\r\n        { selector: '.dash-input-replace', action: function() { $.on(this, 'click', inputReplace); } }\r\n    ];\r\n\r\n    var _dialogs = [];\r\n\r\n    /**\r\n     * Find a dialog in the internal list by ID.\r\n     * @param {number} id - Dialog ID\r\n     */\r\n    var findDialogById = function(id) {\r\n        var dlgs = _dialogs.filter(function(x) {\r\n            return x.getId() === id;\r\n        });\r\n        return dlgs.length ? dlgs[0] : null;\r\n    };\r\n\r\n    /**\r\n     * Get active dialog.\r\n     * @param {Object} Return currently open dialog object.\r\n     */\r\n    var getActiveDialog = function() {\r\n        if (!_dialogs.length) {\r\n            return null;\r\n        }\r\n        return findDialogById(Math.max.apply(Math, _dialogs.map(function(x) { return x.getId(); })));\r\n    };\r\n\r\n    /**\r\n     * Get active dialog content.\r\n     * @param {Object} Return content node of currently open dialog object.\r\n     */\r\n    var getActiveContent = function() {\r\n        var dlg = getActiveDialog();\r\n        return dlg ? dlg.getContent() : null;\r\n    };\r\n\r\n    var hasOpenDialog = function() {\r\n        return _dialogs.length > 0;\r\n    };\r\n\r\n    /**\r\n     * Remove a dialog from internal list.\r\n     * @param {number} id - Dialog ID\r\n     */\r\n    var removeDialog = function(id) {\r\n        _dialogs = _dialogs.filter(function(x) {\r\n            return x.getId() !== id;\r\n        });\r\n        var activeDialog = getActiveDialog();\r\n        if (activeDialog) {\r\n            setTimeout(activeDialog.onShow.bind(activeDialog), 25);\r\n        } else {\r\n            // back to dashboard so set title\r\n            var dashboard = $.get('#dashboard');\r\n            if (dashboard) {\r\n                document.title = dashboard.getAttribute('data-title');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle action from a click on an ajax link.\r\n     * @param {Event} e - Event that triggered the request.\r\n     */\r\n    var handleAjaxRequest = function(e) {\r\n        if (!(e && e.target)) {\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n        e.target.blur();\r\n\r\n        var obj = e.target;\r\n        while (obj !== document.body && obj.parentNode && !$.hasClass(obj, 'dash-ajax')) {\r\n            obj = obj.parentNode;\r\n        }\r\n        if (!obj || !(obj.hasAttribute('href') || obj.hasAttribute('data-href')) || $.hasClass(obj, 'disabled')) {\r\n            return;\r\n        }\r\n\r\n        var url = obj.getAttribute('href') || obj.getAttribute('data-href');\r\n        var method = obj.getAttribute('data-method') || 'GET';\r\n        var message = obj.getAttribute('data-message');\r\n        var target = obj.getAttribute('target');\r\n\r\n        if ($.hasClass(obj, 'dash-confirm')) {\r\n            Alertify.dismissAll();\r\n            Alertify.confirm(message, sendAjaxRequest.bind(this, url, method, obj), function() { e.target.focus(); });\r\n        } else if ($.hasClass(obj, 'dash-prompt')) {\r\n            Alertify.dismissAll();\r\n            Alertify.prompt(message, checkPrompt.bind(this, url, method, obj));\r\n        } else if (target) {\r\n            window.open(url, target);\r\n        } else {\r\n            sendAjaxRequest(url, method, obj);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Send a request to the server and display the results\r\n     * @param {string} url - URL to send request for.\r\n     * @param {string} method - Request method type.\r\n     * @param {Node} target - Node that requested the data.\r\n     * @param {Event} e - Event that triggered the request.\r\n     * @param {string} promptValue - If coming from a prompt dialog, the value entered.\r\n     */\r\n    var sendAjaxRequest = function(url, method, target, e, promptValue) {\r\n        if (!url) {\r\n            return;\r\n        }\r\n\r\n        if (promptValue) {\r\n            if (url.indexOf('?') > -1) {\r\n                url += '&Prompt=' + encodeURIComponent(promptValue);\r\n            } else {\r\n                url += '?Prompt=' + encodeURIComponent(promptValue);\r\n            }\r\n        }\r\n        $.ajax({\r\n            method: method || 'GET',\r\n            url: url\r\n        }, function(responseData) {\r\n            if (!(responseData.content || responseData.component)) {\r\n                refreshTable();\r\n                return;\r\n            }\r\n\r\n            if (target && target.hasAttribute('data-update-target')) {\r\n                var targetSelector = target.getAttribute('data-update-target');\r\n                var updateObj;\r\n                if (targetSelector.substr(1) === '#') {\r\n                    updateObj = $.get(targetSelector);\r\n                } else {\r\n                    var dialog = getActiveDialog();\r\n                    if (dialog) {\r\n                        updateObj = $.get(targetSelector, dialog.getContainer());\r\n                    }\r\n                }\r\n                if (updateObj) {\r\n                    if (responseData.html) {\r\n                        updateObj.innerHTML = responseData.content;\r\n                        processContent(updateObj);\r\n                    } else {\r\n                        $.setText(updateObj, responseData.content);\r\n                    }\r\n                }\r\n            } else {\r\n                openDialog($.isNull(responseData.component) ? responseData.content : responseData, target);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Open a new dialog.\r\n     * @param {string} content - HTML content for the dialog\r\n     * @param {Node} target - Node that triggered the dialog to open.\r\n     * @param {Function} onOkay - Function to run if the user clicks ok.\r\n     * @param {Function} onCancel - Function to run if the user clicks cancel.\r\n     * @param {Function} onShow - Function to run after the dialog loads.\r\n     */\r\n    var openDialog = function(content, target, onOkay, onCancel, onShow) {\r\n        Alertify.dismissAll();\r\n\r\n        // get max dialog id, and increment\r\n        var id = _dialogs.length ? Math.max.apply(Math, _dialogs.map(function(x) { return x.getId(); })) + 1 : 1;\r\n        var activeDlg = getActiveDialog();\r\n        _dialogs.push(new Dialog({\r\n            id: id, content: content, target: target, onOkay: onOkay, onCancel: onCancel, onShow: onShow,\r\n            buttons: { 'ok': $.resx('okay'), 'cancel': $.resx('cancel'), 'close': $.resx('close') },\r\n            parent: activeDlg ? activeDlg.getId() : null\r\n        }));\r\n    };\r\n\r\n    /**\r\n     * Check that a prompt value was supplied.\r\n     * @param {string} url - URL to send request for.\r\n     * @param {string} method - Request method type.\r\n     * @param {Node} target - Node that requested the data.\r\n     * @param {string} promptValue - If coming from a prompt dialog, the value entered.\r\n     * @param {Event} e - Event that triggered the request.\r\n     */\r\n    var checkPrompt = function(url, method, target, promptValue, e) {\r\n        if (!$.hasValue(promptValue)) {\r\n            Alertify.error($.resx('errorNameRequired'));\r\n            return false;\r\n        }\r\n        sendAjaxRequest.call(this, url, method, target, e, promptValue);\r\n    };\r\n\r\n    /**\r\n     * Refresh data for the table instance in the active dialog.\r\n     */\r\n    var refreshTable = function() {\r\n        var content = getActiveContent();\r\n        if (!content) {\r\n            return;\r\n        }\r\n        $.dispatch($.hasClass(content, 'dash-table') ? content : $.get('.dash-table', content), $.events.tableRefresh);\r\n    };\r\n\r\n    /**\r\n     * Focus on the first error or input.\r\n     * @param {Node} node - Parent node to search in.\r\n     */\r\n    var focusNode = function(node) {\r\n        if (!node) {\r\n            return null;\r\n        }\r\n        var elems = $.getAll('.form-control-error:not([type=\"hidden\"]):not([disabled]):not([readonly]), .mform-control-error:not([type=\"hidden\"]):not([disabled]):not([readonly])', node).filter($.isVisible);\r\n        if (!elems.length) {\r\n            elems = $.getAll('input:not([type=\"hidden\"]):not([disabled]):not([readonly]), select:not([disabled]):not([readonly])', node).filter($.isVisible);\r\n        }\r\n        if (!elems.length) {\r\n            elems = $.getAll('button:not([disabled]), a:not([disabled]), [tabindex]:not([disabled]):not([tabindex=\"-1\"])', node).filter($.isVisible);\r\n        }\r\n        if (!elems.length) {\r\n            var dlg = $.closest('.rd-dialog', node);\r\n            if (dlg) {\r\n                elems = $.getAll('.rd-close', dlg).filter($.isVisible);\r\n            }\r\n        }\r\n        if (elems.length) {\r\n            elems[0].focus();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Replace the value of the data-target node with the data-value from this. Used for providing defaults via a dropdown.\r\n     */\r\n    var inputReplace = function() {\r\n        if (this.hasAttribute('data-target') && this.hasAttribute('data-value')) {\r\n            var target = $.get('#' + this.getAttribute('data-target'));\r\n            if (target && !$.isNull(target.value)) {\r\n                target.value = this.getAttribute('data-value');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Process node content adding events.\r\n     * @param {Node} node - Node to add events to.\r\n     */\r\n    var processContent = function(node) {\r\n        node = $.isEvent(node) ? null : node;\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        // process all the content actions\r\n        var elems;\r\n        _contentActions.forEach(function(act) {\r\n            elems = $.getAll(act.selector, node);\r\n            if ($.matches(node, act.selector)) {\r\n                elems.push(node);\r\n            }\r\n            elems.forEach(function(x) {\r\n                act.action.call(x);\r\n            });\r\n        });\r\n\r\n        if (node.nodeName === 'BODY') {\r\n            var lang = node.getAttribute('data-lang');\r\n            if (lang && lang !== 'en') {\r\n                DatePicker.localize({ locale: lang });\r\n            }\r\n            focusNode(node);\r\n        }\r\n    };\r\n\r\n    $.dialogs = {\r\n        openDialog: openDialog,\r\n        findDialogById: findDialogById,\r\n        focusNode: focusNode,\r\n        focusOnClose: focusOnClose,\r\n        getActiveContent: getActiveContent,\r\n        getActiveDialog: getActiveDialog,\r\n        handleAjaxRequest: handleAjaxRequest,\r\n        hasOpenDialog: hasOpenDialog,\r\n        processContent: processContent,\r\n        refreshTable: refreshTable,\r\n        removeDialog: removeDialog,\r\n        sendAjaxRequest: sendAjaxRequest\r\n    };\r\n})(this.$, this.Alertify, this.Dialog, this.Table, this.Tab, this.CollapsibleList, this.Validator, this.DatePicker);\r\n","/*!\r\n * Wraps dataset form functionality.\r\n */\r\n(function($, Dataset) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Store references to the dataset form mithril modules and value lists.\r\n     * @type {Object}\r\n     */\r\n    var _datasets = {};\r\n\r\n    /**\r\n     * Initialize the dataset form when the datasetFormLoad event fires.\r\n     */\r\n    $.on(document, 'datasetFormLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'dataset-form')) {\r\n            return;\r\n        }\r\n\r\n        var dataset = $.get('.dataset-id', form);\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-url'),\r\n            data: dataset ? { id: dataset.value } : null\r\n        }, function(data) {\r\n            var dlg = $.dialogs.getActiveDialog();\r\n            data.content = dlg.getContent();\r\n            _datasets[dlg.getId()] = new Dataset(data);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Destroy the form when the dialog closes.\r\n     */\r\n    $.on(document, 'datasetFormUnload', function() {\r\n        if (!_datasets) {\r\n            return;\r\n        }\r\n\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var dataset = _datasets[dlg.getId()];\r\n        if (dataset) {\r\n            dataset.destroy();\r\n        }\r\n        delete _datasets[dlg.getId()];\r\n    });\r\n})(this.$, this.Dataset);\r\n","/*!\r\n * Wraps functionality for displaying reports.\r\n */\r\n(function($, Draggabilly, ShareForm, ReportDetails) {\r\n    'use strict';\r\n\r\n    var _reports = {};\r\n    var _shares = {};\r\n\r\n    /**\r\n     * Update zIndex of column being dragged so it is on top.\r\n     * @param {Event} event - Original mousedown or touchstart event\r\n     */\r\n    var startDrag = function(event) {\r\n        var target = $.hasClass(event.target, 'column-item') ? event.target : event.target.parentNode;\r\n        target.style['z-index'] = 9999;\r\n    };\r\n\r\n    /**\r\n     * Update column lists when the user stops dragging a column.\r\n     * @param {Event} event - Original mouseup or touchend event\r\n     * @param {MouseEvent|Touch} pointer - Event object that has .pageX and .pageY\r\n     */\r\n    var stopDrag = function(event, pointer) {\r\n        var target = $.hasClass(event.target, 'column-item') ? event.target : event.target.parentNode;\r\n        var isLeft = pointer.x + target.offsetWidth / 2 < document.documentElement.clientWidth / 2;\r\n        var newPos = Math.max(Math.round(target.offsetTop / target.offsetHeight), 0);\r\n\r\n        $.removeClass(target, 'column-item-right');\r\n        $.removeClass(target, 'column-item-left');\r\n        target.removeAttribute('style');\r\n\r\n        var leftItems = $.getAll('.column-item-left');\r\n        leftItems.sort(columnSort);\r\n        var rightItems = $.getAll('.column-item-right');\r\n        rightItems.sort(columnSort);\r\n        newPos = Math.min(newPos, isLeft ? leftItems.length : rightItems.length);\r\n\r\n        if (isLeft) {\r\n            $.addClass(target, 'column-item-left');\r\n            leftItems.splice(newPos, 0, target);\r\n        } else {\r\n            $.addClass(target, 'column-item-right');\r\n            rightItems.splice(newPos, 0, target);\r\n        }\r\n\r\n        updateList(leftItems, true);\r\n        updateList(rightItems, false);\r\n    };\r\n\r\n    /**\r\n     * Sort columns by their vertical position.\r\n     * @param {Object} a - Object for first column.\r\n     * @param {Object} b - Object for second column.\r\n     * @returns {bool} True if first column should be after second column, else false;\r\n     */\r\n    var columnSort = function(a, b) {\r\n        return a.offsetTop > b.offsetTop;\r\n    };\r\n\r\n    /**\r\n     * Update the position and displayOrder of columns in a list.\r\n     * @param {Node[]} items - Array of column nodes.\r\n     * @param {bool} isLeft - True if the left column list, else false.\r\n     */\r\n    var updateList = function(items, isLeft) {\r\n        items.forEach(function(x, i) {\r\n            updateColumn(x, i, isLeft);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Update the class list and displayOrder for a column item.\r\n     * @param {Node} element - DOM node for the column.\r\n     * @param {number} index - New index of the column in the list.\r\n     * @param {bool} isLeft - True if the column is in the left list, else false.\r\n     */\r\n    var updateColumn = function(element, index, isLeft) {\r\n        element.className = element.className.replace(/column-item-y-([0-9]*)/i, '').trim() + ' column-item-y-' + index;\r\n        var input = $.get('.column-grid-display-order', element);\r\n        if (input) {\r\n            if (isLeft) {\r\n                input.value = 0;\r\n            } else {\r\n                input.value = index + 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initialize the report column selector.\r\n     */\r\n    $.on(document, 'columnSelectorLoad', function() {\r\n        $.getAll('.column-item').forEach(function(x) {\r\n            new Draggabilly(x).on('dragStart', startDrag).on('dragEnd', stopDrag);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Request settings to display a report and call the method to initialize it.\r\n     */\r\n    $.on(document, 'reportLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'report-form')) {\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-url')\r\n        }, function(data) {\r\n            var dlg = $.dialogs.getActiveDialog();\r\n            data.content = dlg.getContent();\r\n            _reports[dlg.getId()] = new ReportDetails(data);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Clean up when closing the report dialog.\r\n     */\r\n    $.on(document, 'reportUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var report = _reports[dlg.getId()];\r\n        if (report) {\r\n            report.destroy();\r\n        }\r\n        delete _reports[dlg.getId()];\r\n        $.dispatch(document, $.events.dashboardReload);\r\n    });\r\n\r\n    /**\r\n     * Load the settings to display the report share form.\r\n     */\r\n    $.on(document, 'reportShareLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'report-share-form')) {\r\n            return;\r\n        }\r\n\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        _shares[dlg.getId()] = new ShareForm({ content: dlg.getContent(), formName: 'Shares' });\r\n        _shares[dlg.getId()].run();\r\n    });\r\n\r\n    /**\r\n     * Clean up when the report share dialog closes.\r\n     */\r\n    $.on(document, 'reportShareUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var share = _shares[dlg.getId()];\r\n        if (share) {\r\n            share.destroy();\r\n        }\r\n        delete _shares[dlg.getId()];\r\n    });\r\n})(this.$, this.Draggabilly, this.ShareForm, this.ReportDetails);\r\n","/*!\r\n * Wraps functionality for displaying charts.\r\n */\r\n(function($, Alertify, Chart, ChartDetails, ShareForm) {\r\n    'use strict';\r\n\r\n    // Change chart settings.\r\n    Chart.defaults.global.responsive = true;\r\n    Chart.defaults.global.maintainAspectRatio = false;\r\n    Chart.defaults.global.title.display = false;\r\n    Chart.defaults.global.legend.position = 'bottom';\r\n    Chart.defaults.global.legend.labels.fontSize = 16;\r\n    Chart.defaults.global.legend.labels.fontFamily = 'Calibri';\r\n    Chart.defaults.global.layout = { padding: 10 };\r\n    Chart.defaults.scale.ticks.fontFamily = 'Calibri';\r\n    Chart.defaults.scale.ticks.fontSize = 12;\r\n\r\n    var _charts = {};\r\n    var _shares = {};\r\n\r\n    /**\r\n     * Request settings to display a chart and call the method to initialize it.\r\n     */\r\n    $.on(document, 'chartLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'chart-form')) {\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-url')\r\n        }, function(data) {\r\n            var dlg = $.dialogs.getActiveDialog();\r\n            data.content = dlg.getContent();\r\n            _charts[dlg.getId()] = new ChartDetails(data);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Clean up when closing the chart dialog.\r\n     */\r\n    $.on(document, 'chartUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var chart = _charts[dlg.getId()];\r\n        if (chart) {\r\n            chart.destroy();\r\n        }\r\n        delete _charts[dlg.getId()];\r\n        $.dispatch(document, $.events.dashboardReload);\r\n    });\r\n\r\n    /**\r\n     * Load the settings to display the chart share form.\r\n     */\r\n    $.on(document, 'chartShareLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'chart-share-form')) {\r\n            return;\r\n        }\r\n\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        _shares[dlg.getId()] = new ShareForm({ content: dlg.getContent(), formName: 'Shares' });\r\n        _shares[dlg.getId()].run();\r\n    });\r\n\r\n    /**\r\n     * Clean up when the chart share dialog closes.\r\n     */\r\n    $.on(document, 'chartShareUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var share = _shares[dlg.getId()];\r\n        if (share) {\r\n            share.destroy();\r\n        }\r\n        delete _shares[dlg.getId()];\r\n    });\r\n})(this.$, this.Alertify, this.Chart, this.ChartDetails, this.ShareForm);\r\n","/*!\r\n * Wraps functionality for displaying/moving/resizing widgets and their contents.\r\n */\r\n(function($, Widget) {\r\n    'use strict';\r\n\r\n    var _columns = 20;\r\n    var _rows = 20;\r\n    var _currentPositions = null;\r\n\r\n    /**\r\n     * Initialize the dashboard.\r\n     * @param {Object} widgets - Widgets options.\r\n     */\r\n    var create = function(widgets) {\r\n        var dashboard = $.get('#dashboard');\r\n        widgets = $.coalesce(widgets, []);\r\n\r\n        var opts = makeWidgetOpts(dashboard);\r\n        if (widgets.length) {\r\n            widgets.forEach(function(x) { new Widget($.extend(x, opts)); });\r\n            $.on(window, 'keydown', checkKeyPress);\r\n            $.on(window, 'resize', $.debounce(resizeLayout, 100));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Make the extra options needed to create a widget.\r\n     * @param {Node} dashboard - Dashboard node.\r\n     * @returns {Object} Object with grid and layoutCallback.\r\n     */\r\n    var makeWidgetOpts = function(dashboard) {\r\n        dashboard = $.coalesce(dashboard, $.get('#dashboard'));\r\n        return {\r\n            grid: { columns: _columns, rows: _rows, columnWidth: dashboard.parentNode.offsetWidth / _columns, rowHeight: dashboard.parentNode.offsetHeight / _rows },\r\n            layoutCallback: $.debounce(updatePosition, 100)\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Get the config for the dashboard from the server.\r\n     */\r\n    $.on(document, 'dashboardLoad', function() {\r\n        var dash = $.get('#dashboard');\r\n        if (!dash) {\r\n            return;\r\n        }\r\n        var json = dash.getAttribute('data-json');\r\n        if (json) {\r\n            dash.removeAttribute('data-json');\r\n            create(JSON.parse(json));\r\n        } else if (dash.hasAttribute('data-url')) {\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: dash.getAttribute('data-url')\r\n            }, function(data) {\r\n                create(data);\r\n            });\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Fetch widget settings from server and add/reload/delete widgets as needed.\r\n     */\r\n    $.on(document, 'dashboardReload', function() {\r\n        var dash = $.get('#dashboard');\r\n        if (!(dash && dash.hasAttribute('data-url'))) {\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: dash.getAttribute('data-url')\r\n        }, function(widgetOpts) {\r\n            if (widgetOpts) {\r\n                var widgets = getWidgets();\r\n\r\n                widgetOpts.forEach(function(x) {\r\n                    var widgetDate = new Date(x.widgetDateUpdated);\r\n                    var oldWidget = $.findByKey(widgets, 'id', x.id);\r\n                    if (!oldWidget) {\r\n                        // newly added widget\r\n                        new Widget($.extend(x, makeWidgetOpts()));\r\n                    } else {\r\n                        // existing widget - remove this widget from the list\r\n                        widgets.splice(oldWidget._i, 1);\r\n\r\n                        if (oldWidget.initDate < widgetDate) {\r\n                            // this widget needs to be reloaded\r\n                            oldWidget.reload(null, x);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                if (widgets.length) {\r\n                    // any widgets still left need to be deleted\r\n                    widgets.forEach(function(x) { x.destroy(true); });\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Get the widget objects for the dashboard.\r\n     * @returns {Widget[]} Array of widgets.\r\n     */\r\n    var getWidgets = function() {\r\n        return $.getAll('.grid-item').map(function(x) { return x.widget; });\r\n    };\r\n\r\n    /**\r\n     * Update widget tables on window resize.\r\n     */\r\n    var resizeLayout = function() {\r\n        var grid = makeWidgetOpts().grid;\r\n        getWidgets().forEach(function(x) {\r\n            x.updateLayout();\r\n            x.setupDraggie(null, grid);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Update widget position to avoid collisions after a resize or drag.\r\n     */\r\n    var updatePosition = function() {\r\n        var sorted = getWidgets();\r\n        sorted.sort(rectSort);\r\n\r\n        var l = sorted.length, aWidget, bWidget;\r\n        for (var i = 0; i < l; i++) {\r\n            aWidget = sorted[i];\r\n            aWidget.rect.updated = false;\r\n\r\n            for (var j = 0; j < l; j++) {\r\n                if (i === j) {\r\n                    continue;\r\n                }\r\n\r\n                bWidget = sorted[j];\r\n                if (bWidget.rect.overlaps(aWidget.rect)) {\r\n                    if (bWidget.rect.y > aWidget.rect.y) {\r\n                        // need to move down\r\n                        bWidget.setLocation(bWidget.rect.x, aWidget.rect.y + aWidget.rect.height);\r\n                    } else if (aWidget.rect.x + aWidget.rect.width + bWidget.rect.width > _columns) {\r\n                        // need to move down\r\n                        bWidget.setLocation(bWidget.rect.x, aWidget.rect.y + aWidget.rect.height);\r\n                    } else {\r\n                        // safe to move right\r\n                        bWidget.setLocation(aWidget.rect.x + aWidget.rect.width, bWidget.rect.y);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        saveDashboard();\r\n    };\r\n\r\n    /**\r\n     * Sort widgets from top left to bottom right.\r\n     * @param {Widget} a - First widget to compare.\r\n     * @param {Widget} b - Second widget to compare.\r\n     * @returns {number} Negative number if a comes first, positive number if b, zero if equal.\r\n     */\r\n    var rectSort = function(a, b) {\r\n        if (a.rect.y === b.rect.y && a.rect.x === b.rect.x) {\r\n            return a.rect.updated ? -1 : b.rect.updated ? 1 : 0;\r\n        }\r\n        if (a.rect.x === b.rect.x) {\r\n            return a.rect.y - b.rect.y;\r\n        }\r\n        return a.rect.x - b.rect.x;\r\n    };\r\n\r\n    /**\r\n     * Save dashboard settings back to server.\r\n     */\r\n    var saveDashboard = function() {\r\n        var positions = getWidgets().map(function(w) {\r\n            return {\r\n                Id: w.opts.id || 0,\r\n                Width: w.rect.width || 1,\r\n                Height: w.rect.height || 1,\r\n                X: w.rect.x || 0,\r\n                Y: w.rect.y || 0\r\n            };\r\n        });\r\n\r\n        if (_currentPositions && $.equals(_currentPositions, positions)) {\r\n            return;\r\n        }\r\n        _currentPositions = positions;\r\n\r\n        var dash = $.get('#dashboard');\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: dash.getAttribute('data-save-url'),\r\n            data: { Widgets: positions },\r\n            block: false\r\n        }, null);\r\n    };\r\n\r\n    /**\r\n     * Toggle full screen on escape key.\r\n     * @param {Event} evt - Key press event.\r\n     */\r\n    var checkKeyPress = function(evt) {\r\n        evt = evt || window.event;\r\n        if (evt.keyCode === 27) {\r\n            getWidgets().filter(function(x) { return x.isFullscreen; }).forEach(function(x) { x.toggleFullScreen(); });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set up content after page has loaded.\r\n     */\r\n    var pageLoaded = function() {\r\n        $.dialogs.processContent($.get('body'));\r\n\r\n        $.on('#toggleContextHelpBtn', 'click', function(e) {\r\n            e.preventDefault();\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: this.getAttribute('href')\r\n            }, function(data) {\r\n                $.toggleClass('#toggleContextHelpBtn', 'help-active', data.enabled);\r\n            });\r\n        });\r\n\r\n        $.on('#menuBtn', 'click', $.toggleClass.bind(null, 'body', 'toggled', null));\r\n\r\n        $.dispatch(document, $.events.dashboardLoad);\r\n    };\r\n\r\n    /**\r\n     * Run events needed for the inital page load.\r\n     */\r\n    if ($.resxLoaded) {\r\n        pageLoaded();\r\n    } else {\r\n        $.on(document, 'resxLoaded', pageLoaded);\r\n    }\r\n})(this.$, this.Widget);\r\n"]}