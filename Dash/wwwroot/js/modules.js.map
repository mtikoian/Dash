{"version":3,"sources":["native.bootstrap.js","fecha.js","accounting.js","Help.js","Dialog.js","Autocomplete.js","DatePicker.js","Rect.js","Draggabilly.js","Chart.js","Prism.js","CollapsibleList.js","Validator.js","colors.js","ColorPicker.js","Table.js","DashChart.js","Form.js","JoinForm.js","ColumnForm.js","ShareForm.js","FilterForm.js","GroupForm.js","RangeForm.js","Dataset.js","BaseDetails.js","ReportDetails.js","ChartDetails.js","Widget.js","dialogs.js","datasets.js","reports.js","charts.js","dashboard.js"],"names":["root","factory","$","Tab","element","this","tab","get","tabs","parentNode","dropdown","hasClass","duration","init","prototype","actions","on","action","self","e","window","preventDefault","next","target","nextContent","getAttribute","activeTab","getActiveTab","activeContent","getActiveContent","removeClass","getAll","addClass","setTimeout","activeTabs","length","a","b","fecha","token","twoDigits","word","literal","noop","shorten","arr","sLen","newArr","i","len","push","substr","monthUpdate","arrName","d","v","i18n","index","indexOf","charAt","toUpperCase","toLowerCase","month","pad","val","String","dayNames","monthNames","monthNamesShort","dayNamesShort","amPm","DoFn","D","formatFlags","dateObj","getDate","DD","Do","getDay","dd","ddd","dddd","M","getMonth","MM","MMM","MMMM","YY","getFullYear","YYYY","h","getHours","hh","H","HH","m","getMinutes","mm","s","getSeconds","ss","S","Math","round","getMilliseconds","SS","SSS","A","ZZ","o","getTimezoneOffset","floor","abs","l","onejan","Date","ceil","ll","q","parseFlags","day","RegExp","source","parseInt","cent","year","hour","minute","second","millisecond","isPm","minutes","parts","match","timezoneOffset","masks","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","format","mask","i18nSettings","isNaN","getTime","literals","replace","$0","$1","slice","shift","parse","dateStr","Error","isValid","dateInfo","isUtc","info","search","result","date","today","UTC","lib","version","settings","currency","symbol","decimal","thousand","precision","grouping","number","tokens","value","checkPrecision","parseFormat","isString","x","res","newFormat","exec","unformat","regex","unformatted","parseFloat","toFixed","power","pow","formatNumber","opts","extend","usePrecision","negative","base","mod","split","accounting","formatMoney","formats","isFunction","pos","neg","zero","checkCurrencyFormat","Help","Alertify","oninit","vnode","attrs","enabled","message","showHelp","alert","dialogs","focusOnClose","bind","view","children","concat","type","role","onclick","isArray","Dialog","_buttons","ok","cancel","close","_keys","ENTER","ESC","tryGetValue","field","fieldName","name","pop","substring","isNull","trySetValue","obj","hasOwnProperty","id","title","basic","buttons","content","onOkay","onCancel","onShow","parent","elements","container","changed","run","onkeydown","checkKey","tabindex","class","trust","oncreate","node","dom","firstElementChild","hasAttribute","redraw","document","createElement","body","appendChild","mount","processContent","checkEvent","getId","getContainer","getContent","getTarget","findForm","matches","call","focusNode","form","validateForm","formData","serializeForm","ajax","method","url","data","__RequestVerificationToken","responseData","parentDlg","findDialogById","parentTarget","destroy","closeParent","dialogUrl","sendAjaxRequest","confirm","resx","focus","keyCode","attrName","ev","events","dispatchEvent","bracketRegEx","disabled","Array","apply","options","filter","selected","map","checked","pieces","setTabStatus","el","closest","formValidate","forEach","mErrors","error","tableNode","table","removeChild","removeDialog","refreshTable","Autocomplete","DOWN","TAB","UP","valueChanged","placeholder","active","required","onSelect","list","filteredList","selectedIndex","onupdate","autocomplete","setList","onKeyDown","selectItem","stopPropagation","selectIndex","min","max","onInput","onBlur","ul","scrollIntoView","item","input","highlightItem","text","trim","hasValue","aria-autocomplete","oninput","onblur","aria-selected","onmousedown","DatePicker","SPACE","days","months","hours","prevNextTitles","weekStart","locale","formatOptions","defaultFormat","chooseDate","props","box","selectedDate","textContent","setFullYear","setDate","dismissAndCommit","relatedTarget","onchange","prevNext","delta","newDate","setMonth","pushToLastDay","lastDateInMonth","over","under","oldDate","stringsForLocale","_months","_days","toLocaleDateString","weekday","classForBox","Header","theseMonths","MonthView","prevDates","firstDay","array","lastDate","daysFromLastMonth","theseDates","daysFromThisMonth","nextDates","prev","these","n","daysFromNextMonth","theseWeekdays","_","idx","setHours","setMinutes","YearView","DecadeView","decade","start","yearsForDecade","Editor","requestAnimationFrame","classList","add","onbeforeremove","remove","Promise","done","localize","loc","isNumber","strings","now","prop","state","onbeforeupdate","chosen","showEditor","KeyboardEvent","readonly","Rect","width","height","y","coalesce","updated","overlaps","rect","thisRight","thisBottom","rectRight","rectBottom","getSize","getStyleSize","num","measurements","measurementsLength","isBoxSizeOuter","isSetup","elem","div","style","padding","borderStyle","borderWidth","boxSizing","documentElement","getComputedStyle","setup","isNode","display","size","innerWidth","innerHeight","outerWidth","outerHeight","getZeroSize","offsetWidth","offsetHeight","isBorderBox","measurement","paddingWidth","paddingLeft","paddingRight","paddingHeight","paddingTop","paddingBottom","marginWidth","marginLeft","marginRight","marginHeight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderHeight","borderTopWidth","borderBottomWidth","isBorderBoxSizeOuter","styleWidth","styleHeight","EvEmitter","eventName","listener","_events","listeners","off","splice","emitEvent","args","Unipointer","proto","Object","create","bindStartEvent","_bindStartEvent","unbindStartEvent","isBind","bindMethod","navigator","pointerEnabled","msPointerEnabled","handleEvent","event","getTouch","touches","findByKey","pointerIdentifier","button","_pointerDown","ontouchstart","changedTouches","onMSPointerDown","onpointerdown","pointer","isPointerDown","undefined","pointerId","identifier","pointerDown","_bindPostStartEvents","postStartEvents","mousedown","touchstart","pointerdown","MSPointerDown","addEventListener","_boundPointerEvents","_unbindPostStartEvents","removeEventListener","onmousemove","_pointerMove","onMSPointerMove","onpointermove","ontouchmove","touch","pointerMove","onmouseup","_pointerUp","onMSPointerUp","onpointerup","ontouchend","_pointerDone","pointerUp","pointerDone","onMSPointerCancel","onpointercancel","_pointerCancel","ontouchcancel","pointerCancel","getPointerPoint","pageX","pageY","Unidragger","bindHandles","_bindHandles","unbindHandles","binderExtra","handle","handles","nodeName","_dragPointerDown","focused","activeElement","blur","pointerDownPoint","canPreventDefaultOnPointerDown","moveVector","_dragPointerMove","_dragMove","movePoint","isDragging","hasDragStarted","_dragStart","_dragPointerUp","_dragEnd","_staticClick","dragStartPoint","isPreventingClicks","dragStart","dragMove","dragEnd","isIgnoringMouseUp","staticClick","Draggabilly","lastTime","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","currTime","timeToCall","transformProperty","transform","_create","positionValues","relative","absolute","fixed","applyGrid","grid","applyMinZero","drag","position","_getPosition","startPoint","dragPoint","startPosition","enable","setHandles","_getPositionCoord","left","top","_addTransformPosition","styleSide","measure","parentSize","matrixValues","xIndex","translateX","translateY","isEnabled","measureContainment","setLeftTop","animate","containment","elemSize","containerSize","elemRect","getBoundingClientRect","containerRect","borderSizeX","borderSizeY","relativeStartPosition","containSize","dragX","dragY","gridX","gridY","containDrag","axis","minZero","positionDrag","disable","removeAttribute","f","exports","module","define","amd","global","Chart","t","r","u","require","code","1","colorNames","getRgba","string","rgb","scale","getHsla","alpha","getHwb","rgbaString","rgba","percentaString","hslaString","hsla","hexDouble","str","toString","getRgb","getHsl","getAlpha","vals","hexString","rgbString","percentString","g","hslString","hwbString","hwb","keyword","reverseNames","5","2","convert","Color","valid","values","hsl","hsv","cmyk","setValues","red","lightness","w","whiteness","c","cyan","setSpace","arguments","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","color1","p","w1","w2","toJSON","clone","console","spaces","maxes","getValues","space","capped","chans","sname","svalues","4","3","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","k","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","hwb2rgb","wh","bl","cmyk2rgb","xyz2rgb","xyz2lab","lab2xyz","lab","y2","lab2lch","atan2","PI","sqrt","lab2rgb","lch2lab","lch","hr","cos","sin","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","key","conversions","Converter","func","arg","pair","from","to","convs","routeSpace","fspace","6","helpers","defaults","Element","Interaction","layouts","platform","plugins","Ticks","register","initialize","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","31","36","39","40","44","45","46","7","8","9","Bar","context","config","Doughnut","Line","_set","hover","mode","scales","xAxes","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","yAxes","rectangle","borderSkipped","tooltips","callbacks","yLabel","labels","label","datasets","datasetIndex","xLabel","controllers","bar","DatasetController","dataElementType","Rectangle","meta","getMeta","stack","getDataset","update","reset","ilen","rects","_ruler","getRuler","updateElement","me","chart","dataset","custom","rectangleOptions","_xScale","getScaleForId","xAxisID","_yScale","yAxisID","_datasetIndex","_index","_model","datasetLabel","backgroundColor","valueAtIndexOrDefault","borderColor","updateElementGeometry","pivot","model","vscale","getValueScale","getBasePixel","horizontal","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","last","stacked","stacks","getDatasetMeta","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","isNullOrUndef","barThickness","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","controller","thickness","count","percent","range","chunk","stackIndex","valueOrDefault","maxBarThickness","Infinity","draw","canvas","clipArea","ctx","chartArea","unclipArea","setHoverStyle","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","rectangleElementOptions","horizontalBar","animation","animateRotate","animateScale","legendCallback","join","legend","generateLabels","ds","arc","arcOpts","fillStyle","strokeStyle","lineWidth","hidden","onClick","legendItem","cutoutPercentage","rotation","circumference","tooltipItem","dataLabel","doughnut","pie","Arc","linkScales","getRingIndex","ringIndex","j","availableWidth","right","availableHeight","bottom","minSize","startAngle","endAngle","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","each","animationOpts","centerX","centerY","calculateCircumference","arcs","hoverWidth","_chart","showLines","spanGaps","lineEnabled","showLine","line","datasetElementType","Point","points","lineElementOptions","tension","lineTension","_scale","_children","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","fill","steppedLine","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","point","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","yScale","xScale","pointOptions","radius","pointRadius","hitRadius","pointHitRadius","NaN","calculatePointY","skip","pointStyle","dsMeta","sumPos","sumNeg","stackedRightValue","Number","rightValue","controlPoints","area","capControlPoint","pt","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","controlPointNextY","capBezierPoints","hoverRadius","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","easing","onProgress","onComplete","Animation","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","framesToDrop","advance","endTime","defineProperty","set","positionIsHorizontal","types","instances","construct","configMerge","acquireContext","uid","aspectRatio","_bufferedRender","notify","retinaScale","devicePixelRatio","bindEvents","responsive","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","clear","stop","silent","maintainAspectRatio","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","responsiveAnimationDuration","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","items","keys","reduce","dtype","dposition","isDefault","scaleType","scaleClass","scaleService","getScaleConstructor","mergeTicksOptions","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","ControllerClass","resetElements","tooltip","newOptions","removeBox","_options","_invalidate","_data","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","effects","stepDecimal","easingValue","transition","boxes","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","modes","single","getElementsAtEvent","intersect","getElementsAtXAxis","getElementsAtEventForMode","getDatasetAtEvent","_meta","generateLegend","unbindEvents","releaseContext","toBase64Image","toDataURL","Tooltip","_chartInstance","_listeners","eventHandler","updateHoverStyle","_start","bufferedRequest","animationDuration","hoverOptions","onHover","native","arrayEquals","Controller","arrayEvents","unlistenArrayEvents","stub","_chartjs","addElements","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","configurable","enumerable","object","resyncElements","elementOpts","numMeta","numData","insertElements","onDataPush","onDataPop","onDataShift","onDataSplice","onDataUnshift","inherits","scope","merge","color","configuration","_view","ease","actual","origin","c0","c1","isFinite","interpolate","tooltipPosition","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","constrainedNode","constrainedContainer","hasCNode","hasCContainer","infinity","POSITIVE_INFINITY","merger","tval","sval","scaleMerge","getScaleDefaults","_merger","slen","where","collection","filterCallback","filtered","findNextWhere","arrayToSearch","startIndex","currentItem","findPreviousWhere","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","log10","exponent","log","LOG10E","powerOf10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distance","distanceBetweenPoints","pt1","pt2","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","current","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","deltaX","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","loop","niceNum","fraction","oRequestAnimationFrame","msRequestAnimationFrame","getRelativePosition","evt","mouseX","mouseY","originalEvent","currentTarget","srcElement","boundingRect","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","clientWidth","cw","clientHeight","ch","property","currentStyle","getPropertyValue","forceRatio","pixelRatio","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","cache","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","defaultColor","colorValue","CanvasPattern","parseVisibleItems","handler","jlen","getIntersectItems","inRange","getNearestItems","distanceMetric","minDistance","nearestItems","getCenterPoint","getDistanceMetricForAxis","useX","useY","deltaY","indexMode","x-axis","nearest","sort","ret","getArea","intersectsItem","inXRange","inYRange","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","layout","filterByPosition","sortByWeight","reverse","_tmpIndex_","v0","v1","addBox","fullWidth","layoutItem","configure","layoutOptions","toPadding","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","_plugins","_cacheId","plugin","unregister","hook","descriptor","params","descriptors","$plugins","labelsFromTicks","getLineValue","lineValue","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","formatters","minor","major","computeTextSize","tick","parseFontOptions","globalDefaults","fontSize","family","parseLineHeight","toLineHeight","Scale","_ticks","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","rawValue","getLabelForIndex","getValueForPixel","pixel","finalVal","getPixelForDecimal","valueOffset","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","optionMajorTicks","isRotated","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","labelX","labelY","zeroLineIndex","textAlign","textBaseline","labelYOffset","xLineValue","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","save","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","constructors","registerScaleType","scaleConstructor","scaleDefaults","updateScaleDefaults","additions","linear","tickValue","logDelta","tickString","numDecimal","logarithmic","remain","toExponential","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","vm","alignment","paddingAndSize","radiusAndPadding","existingModel","_active","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","dataPoints","lf","rf","olf","orf","yf","midX","midY","determineAlignment","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","getTooltipSize","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","quadraticCurveTo","closePath","hasTooltipContent","average","eventPosition","nearestElement","tp","27","inLabelRange","chartX","chartY","pointRelativePosition","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","28","currentVM","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","29","xRange","drawPoint","30","isVertical","getBarBounds","halfWidth","halfHeight","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","bounds","32","clearRect","roundedRect","rx","ry","edgeLength","xOffset","yOffset","SQRT2","leftX","topY","sideSize","drawImage","clip","flip","bezierCurveTo","drawRoundedRectangle","33","isObject","defaultValue","fn","thisArg","loopable","a0","a1","klen","_mergerIf","mergeIf","sources","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","34","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","35","resolve","inputs","37","getContext","38","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchmove","touchend","pointerenter","pointermove","pointerup","pointerleave","pointerout","readUsedSize","eventListenerOptions","supports","passive","createEvent","nativeEvent","addResizeListener","ticking","expando","proxy","resizer","cls","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","createResizer","insertBefore","firstChild","renderProxy","animationName","reflow","offsetParent","removeResizeListener","_enabled","getElementById","renderHeight","renderWidth","initial","displayWidth","displayHeight","initCanvas","setAttribute","proxies","addEvent","removeEvent","implementation","filler","41","42","43","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","getBasePosition","resolveTarget","visited","visible","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","span","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","lineDash","Legend","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","halfFontSize","xLeft","yMiddle","isLineWidthZero","offSet","drawLegendBox","lh","hitBox","createNewLegendAndAttach","legendOpts","_element","beforeInit","afterEvent","Title","textSize","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","LinearScaleBase","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","tickFontSize","handleDirectionalChanges","innerDimension","ticksAsNumbers","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","stepSize","fixedStepSize","generationOptions","dataRange","spacing","niceRange","niceMin","niceMax","numSpaces","generateTicks","lang","prism","util","encode","Token","alias","languages","redef","inside","insert","grammar","newToken","DFS","highlightAll","async","querySelectorAll","highlightElement","language","test","env","hooks","Worker","worker","filename","onmessage","highlightedCode","postMessage","immediateClose","highlight","tokenize","strarr","rest","tokenloop","patterns","pattern","lookbehind","lookbehindLength","lastIndex","wrapped","all","tag","classes","attributes","aliases","Prism","sql","comment","variable","function","boolean","operator","punctuation","CollapsibleList","lis","createClickListener","toggle","pi","checkedRelative","relatives","forceOpen","open","uls","li","Validator","errorMsgs","_errors","targetElement","resetAll","validateInput","onSubmit","validate","minlength","VALIDATORS","checkValidity","setCustomValidity","isValidatableInput","defaultPrevented","errors","runValidators","showErrors","clearErrors","inputSelector","results","visibility","tagName","validator","attr","validationMessage","group","block","errorElement","errHtml","hasErrors","colors","hex2rgb","hex","ColorPicker","LEFT","RIGHT","selectColor","swatches","trigger","data-value","Table","columns","requestMethod","requestUsePascalCase","requestParams","searchable","loadAllData","inputTimeout","columnMinWidth","editable","pageDropdown","headerButtons","storageFunction","itemsPerPage","searchQuery","currentStartItem","sorting","dataCallback","errorCallback","dataDateFormat","displayDateFormat","displayCurrencyFormat","resources","firstPage","previousPage","nextPage","lastPage","noData","showing","page","perPage","loadingError","tryAgain","layoutSet","loading","filteredTotal","pageTotal","totalDistance","lastSeenAt","columnRenderer","colGroups","intColumns","dateColumns","currencyColumns","column","hasPositiveValue","store","columnFunction","links","getDisplayValue","dataType","link","href","icon","processData","rows","pageOptions","myKey","isUndefined","localStorage","filterResults","loadData","buildParams","refresh","dir","StartItem","Items","Query","Sort","toPascalKeys","startItem","query","setCurrentStartItem","setItemsPerPage","setSearchQuery","clearTimeout","requestTimer","runSearch","filterArray","moveToPage","changePage","changeSort","shiftKey","getSelection","removeAllRanges","_i","compare","defaultCompare","setLayout","tableLayout","tableHeaderRow","tHead","hWidth","tWidth","cells","debounce","move","onMouseMove","up","onMouseUp","touchHandler","header","cWidth","pixelToFloat","isVisible","colGroup","scroll","offsetLeft","onHeaderMouseDown","inResizeArea","cellEl","stopImmediatePropagation","resizeContext","colIndex","cellIndex","initX","scrWidth","initTblWidth","initColWidth","layoutTimer","newStyle","newColWidth","newTblWidth","tblX","clientLeft","previousElementSibling","mouseEvent","simulatedEvent","initMouseEvent","screenX","screenY","getFieldValue","aa","bb","tableHeaders","thAttrs","divAttrs","divContent","sortable","onscroll","tableBodyView","tableFooterView","tableCellView","tableRowView","colspan","currentPage","optionList","DashChart","showLegend","dataFn","errorFn","toggleExportFn","randomWithin","random","randomColor","randomColors","cnt","parseColor","show","hide","ranges","some","yTitle","xType","currencyFormat","dateFormat","chartType","isRadial","yType","chartData","Form","records","wantsHelp","appendRecord","deleteRecord","confirmDelete","confirmDeleteAll","areYouSure","moveUp","moveDown","help","addedCount","targetVal","setter","addRecord","newRecord","unshift","deleteFn","afterDeleteFn","deleteAllRecords","hasRecords","keyInput","withHelp","helpBody","innerContent","withError","requirePositive","isDate","withDisabled","isDisabled","withChecked","isChecked","withOptions","selectedValue","valueKey","textKey","buttonView","includeMove","btns","JoinForm","joinTypeId","tableName","columnUpdateFn","joins","joinTypes","sourceFn","setJoinTable","isProc","record","ColumnForm","columnTitleSort","aTitle","bTitle","columnName","dataTypeId","derived","filterTypeId","filterQuery","isParam","isExpanded","dataTypes","filterTypes","columnFn","selectedSourceFn","toggleExpanded","checkStatus","database","primarySource","importColumns","databaseId","newColumns","newRecords","existingColumns","colName","success","import","readOnly","for","ShareForm","formOpts","userId","roleId","shares","users","userList","roles","roleList","formName","userSelectAttr","share","roleSelectAttr","FilterForm","columnId","operatorId","criteria","criteria2","allowEdit","filters","reportId","saveFiltersUrl","filterOperators","filterOperatorIds","dateOperators","lookups","dataTable","boolOptions","setColumnId","setOperator","setCriteria","criteriaJson","saveFilters","Id","Filters","criteriaView","select","isRange","dateInterval","equal","multiple","lookup","numeric","isDatePicker","attrs2","criteriaArr","operatorView","filterView","filterColumns","GroupForm","displayOrder","groups","saveGroupsUrl","aggregator","aggregatorId","aggregators","saveGroups","GroupAggregator","Groups","setAggregator","groupView","RangeForm","xAxisColumnId","yAxisColumnId","dateIntervalId","chartId","saveRangesUrl","dateIntervals","reports","processJsonFn","canExportFn","saveRanges","Ranges","makeChart","chartContent","dashChart","exportChart","chartContainer","submit","setReport","rangeView","report","xColumns","yColumns","dateIntervalDisabled","inputsDisabled","col","Dataset","sourceList","columnList","formChanged","selectedSourceList","checkType","loadSourceList","loadColumnList","joinForm","getSourceList","columnForm","getColumnList","getSelectedSourceList","onChange","primary","updateColumnList","updateSelectedSources","equals","updateList","DatabaseId","Tables","typeId","tables","BaseDetails","openDialog","outerHTML","initDate","processJson","json","updatedDate","updateDate","dataSql","setSql","dataError","countSql","countError","ReportDetails","reportColumns","saveUrl","saveColumnsUrl","saveStorageFunc","previousColumnWidths","Columns","ReportWidth","dataUrl","Save","exportUrl","rowLimit","sortColumns","filterForm","groupForm","ChartDetails","enableExport","rangeForm","canExport","toggleExport","chartLoad","Widget","buildClassList","widget","isData","refreshSeconds","baseUrl","interval","isFullscreen","dragMargin","setupDraggie","reportRowLimit","reportWidth","onError","setInterval","setText","firstRender","createNode","forceRefresh","toggleFullScreen","deleteWidget","toLocaleTimeString","moveDraggie","columnWidth","rowHeight","stopDrag","resizeDraggie","initResize","stopResize","setLocation","layoutCallback","styles","setSize","reload","showMsg","hasOpenDialog","updatedAt","innerText","clearInterval","updateStyle","totalDestruction","fullScreenIcon","headerHideBtns","Dropdown","_contentActions","selector","tableLoad","handleAjaxRequest","inputReplace","_dialogs","dlgs","getActiveDialog","dlg","dismissAll","prompt","checkPrompt","promptValue","encodeURIComponent","updateObj","targetSelector","dialog","html","activeDlg","elems","Event","act","activeDialog","dashboard","_datasets","_reports","_shares","startDrag","newPos","offsetTop","leftItems","columnSort","rightItems","updateColumn","dashboardReload","_charts","_currentPositions","widgets","makeWidgetOpts","checkKeyPress","resizeLayout","updatePosition","dash","widgetOpts","getWidgets","widgetDate","widgetDateUpdated","oldWidget","sorted","rectSort","aWidget","bWidget","saveDashboard","positions","Width","Height","X","Y","Widgets","pageLoaded","initEvent","dashboardLoad","resxLoaded"],"mappings":"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","file":"modules.js","sourcesContent":["/*!\r\n * Native Javascript for Bootstrap 3\r\n * by dnp_theme\r\n * https://github.com/thednp/bootstrap.native\r\n *\r\n * Modified to use Dash's core library, and remove unneeded functionality.\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Tab = factory(root.$);\r\n})(this, function($) {\r\n    /**\r\n     * Declare Tab class.\r\n     * @param {Node} element - Node to trigger the tab.\r\n     */\r\n    var Tab = function(element) {\r\n        this.tab = $.get(element);\r\n        this.tabs = this.tab.parentNode.parentNode;\r\n        this.dropdown = $.get('.dropdown', this.tabs);\r\n        if ($.hasClass(this.tabs, 'menu')) {\r\n            this.dropdown = this.tabs.parentNode;\r\n            this.tabs = this.tabs.parentNode.parentNode;\r\n        }\r\n        this.duration = 100;\r\n        this.init();\r\n    };\r\n\r\n    /**\r\n     * Declare Tab class methods.\r\n     */\r\n    Tab.prototype = {\r\n        init: function() {\r\n            this.actions();\r\n            $.on(this.tab, 'click', this.action, false);\r\n        },\r\n\r\n        /**\r\n         * Closure for class methods.\r\n         */\r\n        actions: function() {\r\n            var self = this;\r\n\r\n            /**\r\n             * Display content of a tab.\r\n             * @param {Event} e - Event that triggered the tab change.\r\n             */\r\n            this.action = function(e) {\r\n                e = e || window.e; e.preventDefault();\r\n                var next = e.target; //the tab we clicked is now the next tab\r\n                var nextContent = $.get(next.getAttribute('href')); //this is the actual object, the next tab content to activate\r\n\r\n                // get current active tab and content\r\n                var activeTab = self.getActiveTab();\r\n                var activeContent = self.getActiveContent();\r\n\r\n                if (!$.hasClass(next.parentNode, 'active')) {\r\n                    // toggle \"active\" class name\r\n                    $.removeClass($.getAll('a', activeTab)[0], 'active');\r\n                    $.addClass(next, 'active');\r\n\r\n                    // handle dropdown menu \"active\" class name\r\n                    if (self.dropdown) {\r\n                        if (!$.hasClass(self.tab.parentNode.parentNode, 'menu')) {\r\n                            $.removeClass(self.dropdown, 'active');\r\n                        } else {\r\n                            $.addClass(self.dropdown, 'active');\r\n                        }\r\n                    }\r\n\r\n                    //1. hide current active content first\r\n                    $.removeClass(activeContent, 'show');\r\n\r\n                    setTimeout(function() {\r\n                        //2. toggle current active content from view\r\n                        $.removeClass(activeContent, 'active');\r\n                        $.addClass(nextContent, 'active');\r\n                    }, self.duration);\r\n                    setTimeout(function() {\r\n                        //3. show next active content\r\n                        $.addClass(nextContent, 'show');\r\n                    }, self.duration * 2);\r\n                }\r\n            };\r\n\r\n            /**\r\n            * Gets the currently active tab.\r\n            * @returns {Node} Active tab element.\r\n            */\r\n            this.getActiveTab = function() {\r\n                var activeTabs = $.getAll('.active', this.tabs);\r\n                if (activeTabs.length === 1 && !$.hasClass(activeTabs[0], 'dropdown')) {\r\n                    return activeTabs[0].parentNode;\r\n                } else if (activeTabs.length > 1) {\r\n                    return activeTabs[activeTabs.length - 1].parentNode;\r\n                }\r\n            };\r\n\r\n            /**\r\n            * Get the currently active tab content.\r\n            * @returns {Node} Active content element\r\n            */\r\n            this.getActiveContent = function() {\r\n                var a = this.getActiveTab();\r\n                var b = a && $.getAll('a', a);\r\n                return b.length && $.get(b[0].getAttribute('href'));\r\n            };\r\n        }\r\n    };\r\n\r\n    return Tab;\r\n});\r\n","/*!\r\n * Lightweight date library\r\n * https://github.com/taylorhakes/fecha\r\n *\r\n * Modified to add date manipulation methods similar to moment.js.\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Parse or format dates\r\n     * @class fecha\r\n     */\r\n    var fecha = {};\r\n    var token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\r\n    var twoDigits = /\\d\\d?/;\r\n    var threeDigits = /\\d{3}/;\r\n    var fourDigits = /\\d{4}/;\r\n    var word = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\r\n    var literal = /\\[([^]*?)\\]/gm;\r\n    var noop = function() { };\r\n\r\n    /**\r\n     * Abbreviate a string.\r\n     * @param {string[]} arr - Array of strings to shorten.\r\n     * @param {number} sLen - Max length of new strings.\r\n     * @returns {string[]} New array of strings.\r\n     */\r\n    function shorten(arr, sLen) {\r\n        var newArr = [];\r\n        for (var i = 0, len = arr.length; i < len; i++) {\r\n            newArr.push(arr[i].substr(0, sLen));\r\n        }\r\n        return newArr;\r\n    }\r\n\r\n    /**\r\n     * Update months names based on i18n resource.\r\n     * @param {string[]} arrName - Array of month names.\r\n     * @returns {string[]} Updated array of month names.\r\n     */\r\n    function monthUpdate(arrName) {\r\n        return function(d, v, i18n) {\r\n            var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());\r\n            if (~index) {\r\n                d.month = index;\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Left pad a number to length len using zeros.\r\n     * @param {number|string} val - Value to pad.\r\n     * @param {number} len - Length to pad number to.\r\n     * @returns {string} Zero padded string.\r\n     */\r\n    function pad(val, len) {\r\n        val = String(val);\r\n        len = len || 2;\r\n        while (val.length < len) {\r\n            val = '0' + val;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    var monthNamesShort = shorten(monthNames, 3);\r\n    var dayNamesShort = shorten(dayNames, 3);\r\n    fecha.i18n = {\r\n        dayNamesShort: dayNamesShort,\r\n        dayNames: dayNames,\r\n        monthNamesShort: monthNamesShort,\r\n        monthNames: monthNames,\r\n        amPm: ['am', 'pm'],\r\n        DoFn: function DoFn(D) {\r\n            return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];\r\n        }\r\n    };\r\n\r\n    var formatFlags = {\r\n        D: function(dateObj) {\r\n            return dateObj.getDate();\r\n        },\r\n        DD: function(dateObj) {\r\n            return pad(dateObj.getDate());\r\n        },\r\n        Do: function(dateObj, i18n) {\r\n            return i18n.DoFn(dateObj.getDate());\r\n        },\r\n        d: function(dateObj) {\r\n            return dateObj.getDay();\r\n        },\r\n        dd: function(dateObj) {\r\n            return pad(dateObj.getDay());\r\n        },\r\n        ddd: function(dateObj, i18n) {\r\n            return i18n.dayNamesShort[dateObj.getDay()];\r\n        },\r\n        dddd: function(dateObj, i18n) {\r\n            return i18n.dayNames[dateObj.getDay()];\r\n        },\r\n        M: function(dateObj) {\r\n            return dateObj.getMonth() + 1;\r\n        },\r\n        MM: function(dateObj) {\r\n            return pad(dateObj.getMonth() + 1);\r\n        },\r\n        MMM: function(dateObj, i18n) {\r\n            return i18n.monthNamesShort[dateObj.getMonth()];\r\n        },\r\n        MMMM: function(dateObj, i18n) {\r\n            return i18n.monthNames[dateObj.getMonth()];\r\n        },\r\n        YY: function(dateObj) {\r\n            return String(dateObj.getFullYear()).substr(2);\r\n        },\r\n        YYYY: function(dateObj) {\r\n            return dateObj.getFullYear();\r\n        },\r\n        h: function(dateObj) {\r\n            return dateObj.getHours() % 12 || 12;\r\n        },\r\n        hh: function(dateObj) {\r\n            return pad(dateObj.getHours() % 12 || 12);\r\n        },\r\n        H: function(dateObj) {\r\n            return dateObj.getHours();\r\n        },\r\n        HH: function(dateObj) {\r\n            return pad(dateObj.getHours());\r\n        },\r\n        m: function(dateObj) {\r\n            return dateObj.getMinutes();\r\n        },\r\n        mm: function(dateObj) {\r\n            return pad(dateObj.getMinutes());\r\n        },\r\n        s: function(dateObj) {\r\n            return dateObj.getSeconds();\r\n        },\r\n        ss: function(dateObj) {\r\n            return pad(dateObj.getSeconds());\r\n        },\r\n        S: function(dateObj) {\r\n            return Math.round(dateObj.getMilliseconds() / 100);\r\n        },\r\n        SS: function(dateObj) {\r\n            return pad(Math.round(dateObj.getMilliseconds() / 10), 2);\r\n        },\r\n        SSS: function(dateObj) {\r\n            return pad(dateObj.getMilliseconds(), 3);\r\n        },\r\n        a: function(dateObj, i18n) {\r\n            return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];\r\n        },\r\n        A: function(dateObj, i18n) {\r\n            return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();\r\n        },\r\n        ZZ: function(dateObj) {\r\n            var o = dateObj.getTimezoneOffset();\r\n            return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);\r\n        },\r\n        l: function(dateObj) {\r\n            var onejan = new Date(dateObj.getFullYear(), 0, 1);\r\n            return Math.ceil((((dateObj - onejan) / 86400000) + onejan.getDay() + 1) / 7);\r\n        },\r\n        ll: function(dateObj) {\r\n            var onejan = new Date(dateObj.getFullYear(), 0, 1);\r\n            return pad(Math.ceil((((dateObj - onejan) / 86400000) + onejan.getDay() + 1) / 7), 2);\r\n        },\r\n        q: function(dateObj) {\r\n            return (Math.ceil(dateObj.getMonth() + 1 / 3));\r\n        }\r\n    };\r\n\r\n    var parseFlags = {\r\n        D: [twoDigits, function(d, v) {\r\n            d.day = v;\r\n        }],\r\n        Do: [new RegExp(twoDigits.source + word.source), function(d, v) {\r\n            d.day = parseInt(v, 10);\r\n        }],\r\n        M: [twoDigits, function(d, v) {\r\n            d.month = v - 1;\r\n        }],\r\n        YY: [twoDigits, function(d, v) {\r\n            var da = new Date(), cent = +('' + da.getFullYear()).substr(0, 2);\r\n            d.year = '' + (v > 68 ? cent - 1 : cent) + v;\r\n        }],\r\n        h: [twoDigits, function(d, v) {\r\n            d.hour = v;\r\n        }],\r\n        m: [twoDigits, function(d, v) {\r\n            d.minute = v;\r\n        }],\r\n        s: [twoDigits, function(d, v) {\r\n            d.second = v;\r\n        }],\r\n        YYYY: [fourDigits, function(d, v) {\r\n            d.year = v;\r\n        }],\r\n        S: [/\\d/, function(d, v) {\r\n            d.millisecond = v * 100;\r\n        }],\r\n        SS: [/\\d{2}/, function(d, v) {\r\n            d.millisecond = v * 10;\r\n        }],\r\n        SSS: [threeDigits, function(d, v) {\r\n            d.millisecond = v;\r\n        }],\r\n        d: [twoDigits, noop],\r\n        ddd: [word, noop],\r\n        MMM: [word, monthUpdate('monthNamesShort')],\r\n        MMMM: [word, monthUpdate('monthNames')],\r\n        a: [word, function(d, v, i18n) {\r\n            var val = v.toLowerCase();\r\n            if (val === i18n.amPm[0]) {\r\n                d.isPm = false;\r\n            } else if (val === i18n.amPm[1]) {\r\n                d.isPm = true;\r\n            }\r\n        }],\r\n        ZZ: [/[+-]\\d\\d:?\\d\\d/, function(d, v) {\r\n            var parts = (v + '').match(/([+-]|\\d\\d)/gi), minutes;\r\n\r\n            if (parts) {\r\n                minutes = +(parts[1] * 60) + parseInt(parts[2], 10);\r\n                d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;\r\n            }\r\n        }]\r\n    };\r\n    parseFlags.dd = parseFlags.d;\r\n    parseFlags.dddd = parseFlags.ddd;\r\n    parseFlags.DD = parseFlags.D;\r\n    parseFlags.mm = parseFlags.m;\r\n    parseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;\r\n    parseFlags.MM = parseFlags.M;\r\n    parseFlags.ss = parseFlags.s;\r\n    parseFlags.A = parseFlags.a;\r\n\r\n    // Some common format strings\r\n    fecha.masks = {\r\n        'default': 'ddd MMM DD YYYY HH:mm:ss',\r\n        shortDate: 'M/D/YY',\r\n        mediumDate: 'MMM D, YYYY',\r\n        longDate: 'MMMM D, YYYY',\r\n        fullDate: 'dddd, MMMM D, YYYY',\r\n        shortTime: 'HH:mm',\r\n        mediumTime: 'HH:mm:ss',\r\n        longTime: 'HH:mm:ss.SSS'\r\n    };\r\n\r\n    /***\r\n     * Format a date.\r\n     * @method format\r\n     * @param {Date|number} dateObj - JS date to format.\r\n     * @param {string} mask - New format for the date, i.e. 'mm-dd-yy' or 'shortDate'.\r\n     * @param {Object} i18nSettings - i18n resources.\r\n     * @return {string} Formatted date string.\r\n     */\r\n    fecha.format = function(dateObj, mask, i18nSettings) {\r\n        var i18n = i18nSettings || fecha.i18n;\r\n\r\n        if (typeof dateObj === 'number') {\r\n            dateObj = new Date(dateObj);\r\n        }\r\n\r\n        if (!dateObj.getMonth || isNaN(dateObj.getTime())) {\r\n            return '';\r\n            // throw new Error('Invalid Date in fecha.format');\r\n        }\r\n\r\n        mask = fecha.masks[mask] || mask || fecha.masks['default'];\r\n\r\n        var literals = [];\r\n\r\n        // Make literals inactive by replacing them with ??\r\n        mask = mask.replace(literal, function($0, $1) {\r\n            literals.push($1);\r\n            return '??';\r\n        });\r\n        // Apply formatting rules\r\n        mask = mask.replace(token, function($0) {\r\n            return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);\r\n        });\r\n        // Inline literal values back into the formatted value\r\n        return mask.replace(/\\?\\?/g, function() {\r\n            return literals.shift();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Parse a date string into an object.\r\n     * @method parse\r\n     * @param {string} dateStr - Date string\r\n     * @param {string} format - Date parse format\r\n     * @param {Object} i18nSettings - i18n resources.\r\n     * @returns {Date|boolean} JS date object or false.\r\n     */\r\n    fecha.parse = function(dateStr, format, i18nSettings) {\r\n        var i18n = i18nSettings || fecha.i18n;\r\n\r\n        if (typeof format !== 'string') {\r\n            throw new Error('Invalid format in fecha.parse');\r\n        }\r\n\r\n        format = fecha.masks[format] || format;\r\n\r\n        // Avoid regular expression denial of service, fail early for really long strings\r\n        // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\r\n        if (!dateStr || dateStr.length > 1000) {\r\n            return false;\r\n        }\r\n\r\n        var isValid = true;\r\n        var dateInfo = {};\r\n        var isUtc = false;\r\n\r\n        // Special handler for UTC. String will end in a Z but with no offset specified (ie '-0400')\r\n        if (dateStr.indexOf('Z') === dateStr.length - 1 && dateStr.indexOf('ZZ') === -1) {\r\n            dateStr = dateStr.substr(0, dateStr.length - 2);\r\n            dateInfo.timezoneOffset = new Date().getTimezoneOffset();\r\n            isUtc = true;\r\n        }\r\n\r\n        format.replace(token, function($0) {\r\n            if (parseFlags[$0]) {\r\n                var info = parseFlags[$0];\r\n                var index = dateStr.search(info[0]);\r\n                if (!~index) {\r\n                    isValid = false;\r\n                } else {\r\n                    dateStr.replace(info[0], function(result) {\r\n                        info[1](dateInfo, result, i18n);\r\n                        dateStr = dateStr.substr(index + result.length);\r\n                        return result;\r\n                    });\r\n                }\r\n            }\r\n\r\n            return parseFlags[$0] ? '' : $0.slice(1, $0.length - 1);\r\n        });\r\n\r\n        if (!isValid) {\r\n            return false;\r\n        }\r\n\r\n        var today = new Date();\r\n        if (dateInfo.isPm === true && typeof dateInfo.hour !== 'undefined' && +dateInfo.hour !== 12) {\r\n            dateInfo.hour = +dateInfo.hour + 12;\r\n        } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {\r\n            dateInfo.hour = 0;\r\n        }\r\n\r\n        var date;\r\n        if (typeof dateInfo.timezoneOffset !== 'undefined') {\r\n            if (!isUtc) {\r\n                dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;\r\n            }\r\n            date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\r\n                dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));\r\n        } else {\r\n            date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\r\n                dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);\r\n        }\r\n        return date;\r\n    };\r\n\r\n    // Assume a traditional browser.\r\n    $.fecha = fecha;\r\n})(this.$);\r\n","/*!\r\n * accounting.js v0.4.2\r\n * Copyright 2014 Open Exchange Rates\r\n *\r\n * Freely distributable under the MIT license.\r\n * Portions of accounting.js are inspired or borrowed from underscore.js\r\n *\r\n * Full details and documentation:\r\n * http://openexchangerates.github.io/accounting.js/\r\n */\r\n\r\n(function($) {\r\n    /**\r\n     * Create the local library object, to be exported or referenced globally later\r\n     */\r\n    var lib = {\r\n        version: '0.4.2',\r\n        settings: {\r\n            currency: {\r\n                symbol: '$',\t\t// default currency symbol is '$'\r\n                format: '%s%v',\t    // controls output: %s = symbol, %v = value (can be object, see docs)\r\n                decimal: '.',\t\t// decimal point separator\r\n                thousand: ',',\t\t// thousands separator\r\n                precision: 2,\t\t// decimal places\r\n                grouping: 3\t\t    // digit grouping (not implemented yet)\r\n            },\r\n            number: {\r\n                precision: 0,\t\t// default precision on numbers is 0\r\n                grouping: 3,\t\t// digit grouping (not implemented yet)\r\n                thousand: ',',\r\n                decimal: '.'\r\n            }\r\n        }\r\n    };\r\n\r\n    var tokens = {\r\n        symbol: /\\{s:(.?)\\}/i,\r\n        decimal: /\\[d:(.?)\\]/i,\r\n        thousand: /\\[t:(.?)\\]/i,\r\n        precision: /\\[p:(.?)\\]/i,\r\n        value: /\\{#+\\}/i\r\n    };\r\n\r\n    /**\r\n     * Check and normalise the value of precision (must be positive integer).\r\n     * @param {number} val - Value of precision to validate\r\n     * @returns {number} Positive integer value.\r\n     */\r\n    var checkPrecision = function(val) {\r\n        val = Math.round(Math.abs(val));\r\n        return isNaN(val) ? lib.settings.number.precision : val;\r\n    };\r\n\r\n    /**\r\n     * Parses a format string or object and returns format obj for use in rendering.\r\n     * @param {string|Object} format - Default (positive) format, or object containing `pos` (required), `neg` and `zero` values (or a function returning either a string or object)\r\n     * @returns {Object} Format object with pos, neg, and zero properties.\r\n     */\r\n    var checkCurrencyFormat = function(format) {\r\n        // Allow function as format parameter (should return string or object):\r\n        if ($.isFunction(format)) {\r\n            format = format();\r\n        }\r\n\r\n        // Format can be a string, in which case `value` (\"%v\") must be present:\r\n        if ($.isString(format) && format.match('%v')) {\r\n            // Create and return positive, negative and zero formats:\r\n            return {\r\n                pos: format,\r\n                neg: format.replace('-', '').replace('%v', '-%v'),\r\n                zero: format\r\n            };\r\n        }\r\n        if (!format || !format.pos || !format.pos.match('%v')) {\r\n            // If no format, or object is missing valid positive value, use default.\r\n            // If default is a string, casts it to an object for faster checking next time.\r\n            var x = lib.settings.currency.format;\r\n            if ($.isString(x)) {\r\n                lib.settings.currency.format = x = { pos: x, neg: x.replace('%v', '-%v'), zero: x };\r\n            }\r\n            return x;\r\n        }\r\n        return format;\r\n    };\r\n\r\n    /**\r\n     * Takes a format string and parses it into an object.\r\n     * @param {string} format - Format string`\r\n     * @returns {Object} Object with format settings.\r\n     */\r\n    var parseFormat = function(format) {\r\n        if (!$.isString(format)) {\r\n            return format || {};\r\n        }\r\n\r\n        var res = {}, x;\r\n        var newFormat = format;\r\n        if ((x = tokens.symbol.exec(newFormat)) !== null && x.length > 1) {\r\n            res.symbol = x[1];\r\n            newFormat = newFormat.replace(x[0], '%s');\r\n        }\r\n        if ((x = tokens.decimal.exec(newFormat)) !== null && x.length > 1) {\r\n            res.decimal = x[1];\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.thousand.exec(newFormat)) !== null && x.length > 1) {\r\n            res.thousand = x[1];\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.precision.exec(newFormat)) !== null && x.length > 1) {\r\n            res.precision = x[1] * 1;\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.value.exec(newFormat)) !== null) {\r\n            res.format = newFormat.replace(x[0], '%v');\r\n        } else {\r\n            res.format = newFormat + ' %v';\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Takes a string/array of strings, removes all formatting/cruft and returns the raw float value.\r\n     * @param {string|number} value - Value to remove formatting from.\r\n     * @returns {number} Number with no formatting.\r\n     */\r\n    var unformat = function(value) {\r\n        // Fails silently (need decent errors):\r\n        value = value || 0;\r\n\r\n        // Return the value as-is if it's already a number:\r\n        if (typeof value === 'number') {\r\n            return value;\r\n        }\r\n\r\n        // Build regex to strip out everything except digits, decimal point and minus sign:\r\n        var regex = new RegExp('[^0-9-' + lib.settings.number.decimal + ']', ['g']),\r\n            unformatted = parseFloat(\r\n                ('' + value)\r\n                    .replace(/\\((.*)\\)/, '-$1') // replace bracketed values with negatives\r\n                    .replace(regex, '')         // strip out any cruft\r\n                    .replace(lib.settings.number.decimal, '.')      // make sure decimal point is standard\r\n            );\r\n\r\n        // This will fail silently which may cause trouble, let's wait and see:\r\n        return !isNaN(unformatted) ? unformatted : 0;\r\n    };\r\n\r\n    /**\r\n     * Implementation of toFixed() that treats floats more like decimals.\r\n     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === \"0.61\") that present problems for accounting- and finance-related software.\r\n     * @param {number|string} value - Number to convert\r\n     * @param {number} precision - Number of digits after the decimal.\r\n     * @returns {number} Formatted value.\r\n     */\r\n    var toFixed = function(value, precision) {\r\n        precision = checkPrecision(precision);\r\n        var power = Math.pow(10, precision);\r\n\r\n        // Multiply up by precision, round accurately, then divide and use native toFixed():\r\n        return (Math.round(unformat(value) * power) / power).toFixed(precision);\r\n    };\r\n\r\n    /**\r\n     * Format a number, with comma-separated thousands and custom precision/decimal places.\r\n     * @param {number} number - Number to format.\r\n     * @param {string} format - Tokenized string format.\r\n     * @returns {string} Formatted number.\r\n     */\r\n    var formatNumber = function(number, format) {\r\n        // Clean up number:\r\n        number = unformat(number);\r\n\r\n        // Build options object from second param (if object) or all params, extending defaults:\r\n        var opts = $.extend({}, lib.settings.number, parseFormat(format));\r\n\r\n        // Clean up precision\r\n        var usePrecision = checkPrecision(opts.precision);\r\n\r\n        // Do some calc:\r\n        var negative = number < 0 ? '-' : '';\r\n        var base = parseInt(toFixed(Math.abs(number || 0), usePrecision), 10) + '';\r\n        var mod = base.length > 3 ? base.length % 3 : 0;\r\n\r\n        // Format the number:\r\n        return negative + (mod ? base.substr(0, mod) + opts.thousand : '') + base.substr(mod).replace(/(\\d{3})(?=\\d)/g, '$1' + opts.thousand) +\r\n            (usePrecision ? opts.decimal + toFixed(Math.abs(number), usePrecision).split('.')[1] : '');\r\n    };\r\n\r\n    /**\r\n     * Format a number as currency, with comma-separated thousands and custom precision/decimal places.\r\n     * @param {number} number - Number to format.\r\n     * @param {string} format - Tokenized string format.\r\n     * @returns {string} Formatted currency.\r\n     */\r\n    var formatMoney = function(number, format) {\r\n        // Clean up number:\r\n        number = unformat(number);\r\n\r\n        // Build options object from second param (if object) or all params, extending defaults:\r\n        var opts = $.extend({}, lib.settings.currency, parseFormat(format));\r\n\r\n        // Check format (returns object with pos, neg and zero):\r\n        var formats = checkCurrencyFormat(opts.format);\r\n\r\n        // Choose which format to use for this value:\r\n        var useFormat = number > 0 ? formats.pos : number < 0 ? formats.neg : formats.zero;\r\n\r\n        // Return with currency symbol added:\r\n        return useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(number), format));\r\n    };\r\n\r\n    $.accounting = {\r\n        formatMoney: formatMoney,\r\n        formatNumber: formatNumber,\r\n        parseFormat: parseFormat,\r\n        unformat: unformat\r\n    };\r\n}(this.$));\r\n","/*!\r\n * Help mithril component. Shows input groups with help button.\r\n */\r\n(function(root, factory) {\r\n    root.Help = factory(root.m, root.$, root.Alertify);\r\n})(this, function(m, $, Alertify) {\r\n    'use strict';\r\n\r\n    var Help = {\r\n        /**\r\n         * Initialize the component.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            this.opts = {\r\n                enabled: attrs.enabled,\r\n                message: attrs.message\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Show help dialog.\r\n         * @param {Event} e - Event that triggered the dialog to open.\r\n         */\r\n        showHelp: function(e) {\r\n            Alertify.alert(this.opts.message, $.dialogs.focusOnClose.bind(e), $.dialogs.focusOnClose.bind(e));\r\n        },\r\n\r\n        /**\r\n         * Create HTML to display content with help add on.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         * @returns {Object} Mithril vnode\r\n         */\r\n        view: function(vnode) {\r\n            if (!this.opts.enabled) {\r\n                return $.isArray(vnode.children) ? m('.input-group', vnode.children) : vnode.children;\r\n            }\r\n            if (!(vnode.children && vnode.children.length)) {\r\n                return m('span', m('button.btn.btn-secondary.dash-context-help', {\r\n                    type: 'button', role: 'button', onclick: this.showHelp.bind(this)\r\n                }, m('i.dash.dash-help')));\r\n            }\r\n            return m('.input-group',\r\n                vnode.children.concat(m('span.input-group-addon.input-group-custom', m('button.btn.btn-secondary.dash-context-help', {\r\n                    type: 'button', role: 'button', onclick: this.showHelp.bind(this)\r\n                }, m('i.dash.dash-help'))))\r\n            );\r\n        }\r\n    };\r\n\r\n    return Help;\r\n});\r\n","/*!\r\n * Dialog mithril component.\r\n */\r\n(function(root, factory) {\r\n    root.Dialog = factory(root.m, root.$, root.Alertify);\r\n})(this, function(m, $, Alertify) {\r\n    'use strict';\r\n\r\n    var _buttons = {\r\n        'ok': 'Okay',\r\n        'cancel': 'Cancel',\r\n        'close': 'Close'\r\n    };\r\n\r\n    var _keys = {\r\n        ENTER: 13,\r\n        ESC: 27\r\n    };\r\n\r\n    /**\r\n     * Convert a value for a field to the correct data type.\r\n     * @param {Node} field - Input that we are converting value for.\r\n     * @param {string} val - Value to convert.\r\n     * @returns {string|number|bool} Returns correctly casted value.\r\n     */\r\n    var tryGetValue = function(field, val) {\r\n        var fieldName = field.name.split('.').pop();\r\n        if ((fieldName.substring(0, 2) === 'Is' || fieldName.substring(0, 5) === 'Allow') && (field.value.toLowerCase() === 'true' || field.value.toLowerCase() === 'false')) {\r\n            return field.value.toLowerCase() === 'true';\r\n        } else if (field.type.toLowerCase() === 'number' || field.name.slice(-2) === 'Id' || !($.isNull(val) || val.length == 0 || isNaN(val))) {\r\n            return val.length ? parseInt(val) : null;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    /**\r\n     * Try to set a value in an object.\r\n     * @param {Object} obj - Object to add value to.\r\n     * @param {Node} field - Input that we are converting value for.\r\n     * @param {string} name - Name of property.\r\n     * @param {string} val - Value to set.\r\n     * @returns {Object} Returns correctly updated object.\r\n     */\r\n    var trySetValue = function(obj, field, name, val) {\r\n        if (obj.hasOwnProperty(name) || $.hasClass(field, 'custom-control-input-multiple')) {\r\n            if (!$.isArray(obj[name])) {\r\n                obj[name] = $.isNull(obj[name]) ? [] : [obj[name]];\r\n            }\r\n            if (!$.isNull(val)) {\r\n                obj[name].push(val);\r\n            }\r\n        } else if (!$.isNull(val)) {\r\n            obj[name] = val;\r\n        }\r\n        return obj;\r\n    };\r\n\r\n    /**\r\n     * Declare Dialog class.\r\n     * @param {Object} opts - Dialog settings\r\n     */\r\n    function Dialog(opts) {\r\n        this.opts = $.extend({\r\n            id: null,\r\n            title: null,\r\n            basic: true,\r\n            buttons: _buttons,\r\n            content: null,\r\n            target: null,\r\n            onOkay: null,\r\n            onCancel: null,\r\n            onShow: null,\r\n            parent: null\r\n        }, opts || {});\r\n        this.elements = {\r\n            container: null,\r\n            content: null\r\n        };\r\n        this.changed = false;\r\n        this.run();\r\n    }\r\n\r\n    Dialog.prototype = {\r\n        /**\r\n         * Generates the components HTML.\r\n         * @returns {Object} Mithril virtual node\r\n         */\r\n        view: function() {\r\n            return m('.rd-dialog', { onkeydown: this.checkKey.bind(this), tabindex: 0 }, [\r\n                m('.rd-commands', [\r\n                    m('button.btn.btn-secondary.rd-close', { type: 'button', role: 'button', onclick: this.onCancel.bind(this) },\r\n                        m('i.dash.dash-cancel.text-error', { title: this.opts.buttons.close })\r\n                    )\r\n                ]),\r\n                m('.rd-header.dialog-header', this.opts.title),\r\n                m('.rd-content.container', { class: this.opts.basic ? 'rd-no-footer' : '' }, m.trust(this.opts.content)),\r\n                this.opts.basic ? null : m('.rd-footer', [\r\n                    m('.rd-buttons', [\r\n                        m('button.rd-button.btn.btn-primary', {\r\n                            type: 'button', role: 'button', onclick: this.onOkay.bind(this)\r\n                        }, this.opts.buttons.ok),\r\n                        m('button.rd-button.btn.btn-warning', {\r\n                            type: 'button', role: 'button', onclick: this.onCancel.bind(this)\r\n                        }, this.opts.buttons.cancel)\r\n                    ])\r\n                ])\r\n            ]);\r\n        },\r\n\r\n        /**\r\n         * Runs after the dialog is first created by mithril.\r\n         * @param {Object} vnode - Mithril virtual node.\r\n         */\r\n        oncreate: function(vnode) {\r\n            if (this.elements.content) {\r\n                return;\r\n            }\r\n            var node = $.get('.rd-content', vnode.dom);\r\n            if (!(node && node.firstElementChild)) {\r\n                return;\r\n            }\r\n            node = node.firstElementChild;\r\n            this.opts.title = node.getAttribute('data-title');\r\n            this.opts.basic = node.hasAttribute('data-basic-dialog');\r\n            m.redraw();\r\n\r\n            var self = this;\r\n            $.on(node, 'change', function() {\r\n                self.changed = true;\r\n            });\r\n            this.elements.content = node;\r\n            setTimeout(this.onShow.bind(this), 25);\r\n        },\r\n\r\n        /**\r\n         * Run the component and render the dialog.\r\n         */\r\n        run: function() {\r\n            this.elements.container = document.createElement('div');\r\n            this.elements.container.id = 'dialog' + this.opts.id;\r\n            $.addClass(this.elements.container, 'rd-dialog-container');\r\n            document.body.appendChild(this.elements.container);\r\n            m.mount(this.elements.container, {\r\n                view: this.view.bind(this),\r\n                oncreate: this.oncreate.bind(this),\r\n            });\r\n\r\n            $.dialogs.processContent(this.elements.content);\r\n            setTimeout(this.checkEvent.bind(this, this.elements.content, 'data-event'), 25);\r\n        },\r\n\r\n        /**\r\n         * Get the dialog id.\r\n         * @returns {number} ID of dialog.\r\n         */\r\n        getId: function() {\r\n            return this.opts.id;\r\n        },\r\n\r\n        /**\r\n         * Get the dialog container node.\r\n         * @returns {Node} DOM node of dialog container.\r\n         */\r\n        getContainer: function() {\r\n            return this.elements.container;\r\n        },\r\n\r\n        /**\r\n         * Get the dialog content node.\r\n         * @returns {Node} DOM node of dialog content.\r\n         */\r\n        getContent: function() {\r\n            return this.elements.content;\r\n        },\r\n\r\n        /**\r\n         * Get the dialog target node.\r\n         * @returns {Node} DOM node to target on close.\r\n         */\r\n        getTarget: function() {\r\n            return this.opts.target;\r\n        },\r\n\r\n        /**\r\n         * Find a form node inside the dialog.\r\n         * @returns {Node} Form node if exists else null.\r\n         */\r\n        findForm: function() {\r\n            return $.matches(this.elements.content, 'form.dash-form') ? this.elements.content : $.get('form.dash-form', this.elements.content);\r\n        },\r\n\r\n        /**\r\n         * Find element to focus on when dialog is displayed.\r\n         */\r\n        onShow: function() {\r\n            if ($.isFunction(this.opts.onShow)) {\r\n                if (!this.opts.onShow.call(this)) {\r\n                    return;\r\n                }\r\n            }\r\n            document.title = this.opts.title;\r\n            $.dialogs.focusNode(this.elements.content);\r\n        },\r\n\r\n        /**\r\n         * User okayed dialog. Save changes; close dialog.\r\n         */\r\n        onOkay: function() {\r\n            if ($.isFunction(this.opts.onOkay)) {\r\n                if (!this.opts.onOkay.call(this)) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            var form = this.findForm();\r\n            if (!form) {\r\n                this.destroy();\r\n                return;\r\n            }\r\n            if (!this.validateForm()) {\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            var formData = this.serializeForm();\r\n            $.ajax({\r\n                method: form.hasAttribute('data-method') ? form.getAttribute('data-method') : 'POST',\r\n                url: form.getAttribute('action'),\r\n                data: formData,\r\n                token: formData.__RequestVerificationToken\r\n            }, function(responseData) {\r\n                var target = self.opts.target;\r\n                var parentDlg = $.dialogs.findDialogById(self.opts.parent);\r\n                if (responseData.parentTarget && parentDlg) {\r\n                    target = parentDlg.getTarget();\r\n                }\r\n\r\n                self.destroy();\r\n                if (responseData.closeParent && parentDlg) {\r\n                    parentDlg.destroy();\r\n                }\r\n                if (responseData.dialogUrl) {\r\n                    $.dialogs.sendAjaxRequest(responseData.dialogUrl, 'GET', target);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * User canceled dialog. Check for changes; close dialog.\r\n         * @param {Event} e - Event that triggered the cancel.\r\n         */\r\n        onCancel: function(e) {\r\n            if ($.isFunction(this.opts.onCancel)) {\r\n                if (!this.opts.onCancel.call(this)) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (!this.changed || !this.findForm()) {\r\n                this.destroy();\r\n                return;\r\n            }\r\n\r\n            Alertify.confirm($.resx('discardChanges'), this.destroy.bind(this), function() {\r\n                if (e.target) {\r\n                    e.target.focus();\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Trigger okay or cancel action based on keydown.\r\n         * @param {KeyboardEvent} e - Keydown event that triggered this.\r\n         */\r\n        checkKey: function(e) {\r\n            if (e.keyCode === _keys.ESC) {\r\n                this.onCancel(e);\r\n            }\r\n            if (e.keyCode === _keys.ENTER && !this.opts.basic) {\r\n                this.onOkay(e);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Dispatch event named in attribute `attrName` if it exists.\r\n         * @param {Node} node - Node to look for an event attribute in.\r\n         * @param {string} attrName - Name of the attribute to check for the event in.\r\n         */\r\n        checkEvent: function(node, attrName) {\r\n            if (!node || !node.hasAttribute(attrName)) {\r\n                return;\r\n            }\r\n            var ev = node.getAttribute(attrName);\r\n            if ($.events.hasOwnProperty(ev)) {\r\n                document.dispatchEvent($.events[ev]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Convert form data into an object.\r\n         * @returns {Object} Form data.\r\n         */\r\n        serializeForm: function() {\r\n            var form = this.findForm();\r\n            if (!form) {\r\n                return {};\r\n            }\r\n\r\n            var field, data = {};\r\n            var len = form.elements.length;\r\n            var bracketRegEx = /\\[([^\\]]+)\\]/;\r\n            for (var i = 0; i < len; i++) {\r\n                field = form.elements[i];\r\n                if (!field.name || field.disabled || ['file', 'reset', 'submit', 'button'].indexOf(field.type) > -1) {\r\n                    continue;\r\n                }\r\n\r\n                var value = null;\r\n                if (field.type === 'select' && field.hasAttribute('multiple')) {\r\n                    value = Array.apply(null, form.elements[i].options).filter(function(x) {\r\n                        return x.selected;\r\n                    }).map(function(x) {\r\n                        return tryGetValue(field, x.value);\r\n                    });\r\n                } else if (field.type === 'checkbox') {\r\n                    if (field.checked) {\r\n                        value = tryGetValue(field, field.value);\r\n                    }\r\n                } else if (field.type !== 'radio' || field.checked) {\r\n                    value = tryGetValue(field, field.value);\r\n                }\r\n\r\n                var pieces = field.name.split('.');\r\n                var name = field.name;\r\n                if (pieces.length > 1) {\r\n                    var matches = bracketRegEx.exec(pieces[0]);\r\n                    name = matches.length > 1 ? pieces[0].replace(matches[0], '') : pieces[0];\r\n                    if (!data.hasOwnProperty(name)) {\r\n                        data[name] = [];\r\n                    }\r\n                    if (matches.length > 1) {\r\n                        if (!data[name].hasOwnProperty(matches[1])) {\r\n                            data[name][matches[1]] = {};\r\n                        }\r\n                        data[name][matches[1]] = trySetValue(data[name][matches[1]], field, pieces[1], value);\r\n                    } else {\r\n                        data[name][matches[0]] = trySetValue(data[name][matches[0]], field, pieces[1], value);\r\n                    }\r\n                } else {\r\n                    data = trySetValue(data, field, name, value);\r\n                }\r\n            }\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Set tab status when validating form.\r\n         * @param {Node} el - Node that has a validation error.\r\n         */\r\n        setTabStatus: function(el) {\r\n            var tab = $.closest('.tab-pane', el);\r\n            if (tab) {\r\n                // add error class to tab\r\n                var id = tab.getAttribute('aria-labelledby');\r\n                if (id) {\r\n                    // @todo rename this class - maybe mform-error instead?\r\n                    if ($.hasClass(el, 'mform-control-error')) {\r\n                        $.addClass($.get('#' + id), 'tab-validation-error');\r\n                    } else {\r\n                        $.removeClass($.get('#' + id), 'tab-validation-error');\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Run the form validator and display an error if needed.\r\n         * @returns {bool} Return true if form is valid, else false.\r\n         */\r\n        validateForm: function() {\r\n            var form = this.findForm();\r\n            form.dispatchEvent($.events.formValidate);\r\n\r\n            // @todo refactor to work with spectre\r\n            var tabs = $.getAll('.nav-tabs.nav-item.nav-link', form);\r\n            tabs.forEach(function(x) {\r\n                $.removeClass(x, 'tab-validation-error');\r\n            });\r\n\r\n            var mErrors = $.getAll('.mform-control-error', form);\r\n            if (mErrors.length) {\r\n                mErrors.forEach(this.setTabStatus);\r\n            }\r\n\r\n            if (mErrors.length || $.getAll('.form-control-error', form).length) {\r\n                Alertify.error($.resx('fixIt'));\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Clean up our mess.\r\n         */\r\n        destroy: function() {\r\n            this.checkEvent(this.elements.content, 'data-close-event');\r\n\r\n            var tableNode = $.get('.dash-table', this.elements.content);\r\n            if (tableNode) {\r\n                tableNode.table.destroy();\r\n            }\r\n\r\n            m.mount(this.elements.container, null);\r\n            document.body.removeChild(this.elements.container);\r\n            $.dialogs.removeDialog(this.opts.id);\r\n            $.dialogs.refreshTable();\r\n        }\r\n    };\r\n\r\n    return Dialog;\r\n});\r\n","/*!\r\n * Autocomplete mithril component.\r\n */\r\n(function(root, factory) {\r\n    root.Autocomplete = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    var _keys = {\r\n        DOWN: 40,\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        TAB: 9,\r\n        UP: 38\r\n    };\r\n\r\n    /**\r\n     * Escape a string for use with a regex.\r\n     * @param {string} s - String to escape.\r\n     * @returns Escaped string.\r\n     */\r\n    var regExpEscape = function(s) {\r\n        return s.replace(/[-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n    };\r\n\r\n    var Autocomplete = {\r\n        /**\r\n         * Initialize the component.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            this.opts = {\r\n                value: attrs.value,\r\n                valueChanged: false,\r\n                name: attrs.name,\r\n                placeholder: attrs.placeholder,\r\n                active: false,\r\n                required: attrs.required,\r\n                disabled: attrs.disabled,\r\n                onSelect: attrs.onSelect,\r\n                onCancel: attrs.onCancel,\r\n                class: attrs.class,\r\n                list: attrs.list || [],\r\n                filteredList: [],\r\n                container: null,\r\n                selectedIndex: -1\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Update the opts in case the component name is changed.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         * @param vnode\r\n         */\r\n        onupdate: function(vnode) {\r\n            if (vnode.attrs) {\r\n                this.opts.name = vnode.attrs.name;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Grab the DOM containing node after it is created.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oncreate: function(vnode) {\r\n            this.opts.container = vnode.dom;\r\n            this.opts.container.autocomplete = this;\r\n        },\r\n\r\n        /**\r\n         * Update the list of items.\r\n         * @param {string[]} list - Array of strings to show.\r\n         */\r\n        setList: function(list) {\r\n            this.close();\r\n            this.opts.list = list;\r\n            this.opts.filteredList = [];\r\n        },\r\n\r\n        /**\r\n         * Check special keys and respond accordingly.\r\n         * @param {Event} e - Keypress event.\r\n         */\r\n        onKeyDown: function(e) {\r\n            if (this.opts.disabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.opts.active) {\r\n                if (e.keyCode === _keys.ENTER) {\r\n                    var selected = this.opts.filteredList[this.opts.selectedIndex];\r\n                    if (selected) {\r\n                        this.selectItem(selected);\r\n                    } else {\r\n                        this.cancel(true);\r\n                    }\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                } else if (e.keyCode === _keys.ESC) {\r\n                    this.cancel(true);\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                } else if (e.keyCode === _keys.DOWN) {\r\n                    this.selectIndex(Math.min(this.opts.selectedIndex + 1, this.opts.filteredList.length - 1));\r\n                } else if (e.keyCode === _keys.UP) {\r\n                    this.selectIndex(Math.max(this.opts.selectedIndex - 1, 0));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handle the input's value changing and show the list.\r\n         * @param {Event} e - Event that triggered the change.\r\n         */\r\n        onInput: function(e) {\r\n            if (this.opts.value !== e.target.value) {\r\n                this.opts.valueChanged = true;\r\n                this.opts.value = e.target.value;\r\n            }\r\n            if (this.opts.value.length > 1) {\r\n                this.opts.active = true;\r\n                this.opts.selectedIndex = 0;\r\n                var val = this.opts.value.toLowerCase();\r\n                this.opts.filteredList = ($.isFunction(this.opts.list) ? this.opts.list() : this.opts.list).filter(function(x) {\r\n                    return x.toLowerCase().indexOf(val) > -1;\r\n                });\r\n            } else {\r\n                this.opts.filteredList = [];\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Close autocomplete dropdown on lost focus.\r\n         */\r\n        onBlur: function() {\r\n            if (this.opts.active || this.opts.valueChanged) {\r\n                this.cancel(false);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select an item from the list by index.\r\n         * @param {number} index - Filtered list item index.\r\n         */\r\n        selectIndex: function(index) {\r\n            this.opts.selectedIndex = index;\r\n            var ul = $.get('ul', this.opts.container);\r\n            if (ul && ul.children[index]) {\r\n                ul.children[index].scrollIntoView();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select an item by text value.\r\n         * @param {string} item - Text to select.\r\n         * @param {Event} e - Event that triggered this.\r\n         */\r\n        selectItem: function(item, e, focus) {\r\n            if ($.isFunction(this.opts.onSelect)) {\r\n                this.opts.onSelect.call(null, item);\r\n            }\r\n            this.opts.value = item;\r\n            this.close($.isNull(focus) ? true : focus);\r\n            if (e && e.preventDefault) {\r\n                e.preventDefault();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Discard value and close the autocomplete.\r\n         * @param {bool} focus - Focus on the original control after closing if true.\r\n         */\r\n        cancel: function(focus) {\r\n            if (this.opts.valueChanged) {\r\n                this.opts.value = '';\r\n            }\r\n            if ($.isFunction(this.opts.onCancel)) {\r\n                this.opts.onCancel();\r\n            }\r\n            this.close(focus);\r\n        },\r\n\r\n        /**\r\n         * Set value and close the autocomplete.\r\n         * @param {bool} focus - Focus on the original control after closing if true.\r\n         */\r\n        close: function(focus) {\r\n            this.opts.active = false;\r\n            this.opts.selectedIndex = -1;\r\n            this.opts.valueChanged = false;\r\n            if (focus) {\r\n                var input = $.get('input', this.opts.container);\r\n                if (input) {\r\n                    input.focus();\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Highlight val inside item.\r\n         * @param {string} text - Text to highlight in.\r\n         * @param {string} val - Substring to highlight.\r\n         * @returns Marked up string.\r\n         */\r\n        highlightItem: function(text, val) {\r\n            return val === '' ? text : text.replace(RegExp(regExpEscape(val.trim()), 'gi'), '<mark>$&</mark>');\r\n        },\r\n\r\n        /**\r\n         * Create HTML to display component.\r\n         * @returns {Object} Mithril vnode\r\n         */\r\n        view: function() {\r\n            var self = this;\r\n            return m('.mithril-autocomplete-container.autocomplete', { class: self.opts.active ? 'autocomplete-active' : '' },\r\n                m('input.form-input', {\r\n                    type: 'text',\r\n                    name: self.opts.name,\r\n                    placeholder: self.opts.placeholder,\r\n                    class: (self.opts.class || '') + (self.opts.required && !$.hasValue(self.opts.value) ? ' mform-control-error' : ''),\r\n                    autocomplete: 'off',\r\n                    'aria-autocomplete': 'list',\r\n                    onkeydown: self.onKeyDown.bind(self),\r\n                    oninput: self.onInput.bind(self),\r\n                    value: self.opts.value,\r\n                    onblur: self.onBlur.bind(self)\r\n                }),\r\n                self.opts.active && m('ul', self.opts.filteredList.map(function(x, index) {\r\n                    return m('li', {\r\n                        'aria-selected': self.opts.selectedIndex == index,\r\n                        onmousedown: self.selectItem.bind(self, x)\r\n                    }, m.trust(self.highlightItem(x, self.opts.value)));\r\n                }))\r\n            );\r\n        }\r\n    };\r\n\r\n    return Autocomplete;\r\n});\r\n","/*!\r\n * DatePicker mithril component.\r\n * Modified from https://github.com/CreaturesInUnitards/mithril-datepicker\r\n */\r\n(function(root, factory) {\r\n    root.DatePicker = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    var _keys = {\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        SPACE: 32\r\n    };\r\n\r\n    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    var hours = [];\r\n    var minutes = [];\r\n    var i = 0;\r\n    while (hours.push(i++) < 24) { /* nothing to do here */ }\r\n    i = 0;\r\n    while (minutes.push(i++) < 60) { /* nothing to do here */ }\r\n    var prevNextTitles = ['1 Mo', '1 Yr', '10 Yr'];\r\n    var weekStart = 0;\r\n    var locale = 'en-us';\r\n    var formatOptions = null;\r\n    var defaultFormat = 'YYYY-MM-DD HH:mm';\r\n\r\n    /**\r\n     * Actions\r\n     */\r\n    function chooseDate(props, e) {\r\n        var box = e.target;\r\n        var selectedDate = parseInt(box.textContent);\r\n        var dateObj = props.date;\r\n        if ($.hasClass(box, 'other-scope')) {\r\n            dateObj.setFullYear(dateObj.getFullYear(), dateObj.getMonth() + (selectedDate > 6 ? -1 : 1), selectedDate);\r\n        } else {\r\n            dateObj.setDate(selectedDate);\r\n        }\r\n    }\r\n\r\n    function dismissAndCommit(props, e) {\r\n        if (e) {\r\n            if (e.target && $.hasClass('number', e.target)) {\r\n                e.preventDefault();\r\n                chooseDate(props, e);\r\n            } else {\r\n                var parent = e.relatedTarget && $.closest('.mithril-date-picker-container', e.relatedTarget);\r\n                if (!parent) {\r\n                    e.preventDefault();\r\n                    props.view = 0;\r\n                    props.active = false;\r\n                }\r\n            }\r\n        }\r\n        // @todo this probably needs more testing to make sure it triggers correctly\r\n        if (props.onchange) {\r\n            props.onchange(props.date);\r\n        }\r\n    }\r\n\r\n    function checkKey(props, e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (e.keyCode === _keys.ESC) {\r\n            dismissAndCommit(props, e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function prevNext(props, delta) {\r\n        var newDate = new Date(props.date);\r\n        switch (props.view) {\r\n            case 0:\r\n                newDate.setMonth(newDate.getMonth() + delta);\r\n                break;\r\n            case 1:\r\n                newDate.setFullYear(newDate.getFullYear() + delta);\r\n                break;\r\n            default:\r\n                newDate.setFullYear(newDate.getFullYear() + (delta * 10));\r\n        }\r\n        props.date = pushToLastDay(props.date, newDate);\r\n    }\r\n\r\n    /**\r\n     * Utility\r\n     */\r\n    function adjustedProps(date, delta) {\r\n        var month = date.getMonth() + delta, year = date.getFullYear();\r\n        var over = month > 11, under = month < 0;\r\n        return {\r\n            month: over ? 0 : under ? 11 : month,\r\n            year: over ? year + 1 : under ? year - 1 : year\r\n        };\r\n    }\r\n\r\n    function lastDateInMonth(date, delta) {\r\n        var obj = adjustedProps(date, delta);\r\n        if ([0, 2, 4, 6, 7, 9, 11].indexOf(obj.month) > -1) {\r\n            return 31; // array of 31-day props.months\r\n        }\r\n        if (obj.month === 1) { // February\r\n            if (!(obj.year % 400)) {\r\n                return 29;\r\n            }\r\n            if (!(obj.year % 100)) {\r\n                return 28;\r\n            }\r\n            return (obj.year % 4) ? 28 : 29;\r\n        }\r\n        return 30;\r\n    }\r\n\r\n    function pushToLastDay(oldDate, newDate) {\r\n        if (oldDate.getDate() !== newDate.getDate()) {\r\n            newDate.setMonth(newDate.getMonth() - 1, lastDateInMonth(newDate, -1));\r\n        }\r\n        return newDate;\r\n    }\r\n\r\n    function stringsForLocale(locale) {\r\n        var date = new Date('jan 1 2017'), _months = [], _days = []; // 1/1/2017 was month:0 and weekday:0, so perfect\r\n        while (_days.length < 7) {\r\n            _days.push(date.toLocaleDateString(locale, { weekday: 'long' }));\r\n            date.setDate(date.getDate() + 1);\r\n        }\r\n        while (_months.length < 12) {\r\n            _months.push(date.toLocaleDateString(locale, { month: 'long' }));\r\n            date.setMonth(date.getMonth() + 1);\r\n        }\r\n        return { days: _days, months: _months };\r\n    }\r\n\r\n    function wrapAround(idx, array) {\r\n        var len = array.length;\r\n        var n = idx >= len ? idx - len : idx;\r\n        return array[n];\r\n    }\r\n\r\n    /**\r\n     * Generators\r\n     */\r\n    function daysFromLastMonth(props) {\r\n        var month = props.date.getMonth(), year = props.date.getFullYear();\r\n        var firstDay = (new Date(year, month, 1)).getDay() - props.weekStart;\r\n        if (firstDay < 0) firstDay += 7;\r\n        var array = [];\r\n        var lastDate = lastDateInMonth(props.date, -1);\r\n        var offsetStart = lastDate - firstDay + 1;\r\n        for (var i = offsetStart; i <= lastDate; i++) {\r\n            array.push(i);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function daysFromThisMonth(props) {\r\n        var max = lastDateInMonth(props.date, 0);\r\n        var array = [];\r\n        for (var i = 1; i <= max; i++) {\r\n            array.push(i);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function daysFromNextMonth(prev, these) {\r\n        var soFar = prev.concat(these);\r\n        var mod = soFar.length % 7;\r\n        var array = [];\r\n        if (mod > 0) {\r\n            var n = 7 - mod;\r\n            for (var i = 1; i <= n; i++) {\r\n                array.push(i);\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function defaultDate() {\r\n        var now = new Date();\r\n        now.setHours(0, 0, 0, 0);\r\n        return now;\r\n    }\r\n\r\n    function yearsForDecade(date) {\r\n        var year = date.getFullYear();\r\n        var start = year - (year % 10);\r\n        var array = [];\r\n        for (var i = start; i < start + 10; i++) {\r\n            array.push(i);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * View helpers\r\n     */\r\n    function classForBox(a, b) {\r\n        return a === b ? 'chosen' : '';\r\n    }\r\n\r\n    /**\r\n     * Components\r\n     */\r\n    var Header = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var date = props.date;\r\n            var theseMonths = props.months || months;\r\n            return m('.header',\r\n                m('button.header-button.prev', { onclick: prevNext.bind(null, props, -1) }, [\r\n                    m('i.dash.dash-to-start'),\r\n                    prevNextTitles[props.view]\r\n                ]),\r\n                m('button.header-button.segment', { onclick: function() { props.view = 0; } }, date.getDate()),\r\n                m('button.header-button.segment', { onclick: function() { props.view = 1; } }, theseMonths[date.getMonth()].substr(0, 3)),\r\n                m('button.header-button.segment', { onclick: function() { props.view = 2; } }, date.getFullYear()),\r\n                m('button.header-button.next', { onclick: prevNext.bind(null, props, 1) }, [\r\n                    prevNextTitles[props.view],\r\n                    m('i.dash.dash-to-end')\r\n                ]),\r\n                m('button.btn.btn-secondary.btn-sm', { onclick: dismissAndCommit.bind(null, props) }, m('i.dash.dash-cancel'))\r\n            );\r\n        }\r\n    };\r\n\r\n    var MonthView = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var prevDates = daysFromLastMonth(props);\r\n            var theseDates = daysFromThisMonth(props);\r\n            var nextDates = daysFromNextMonth(prevDates, theseDates);\r\n            var theseWeekdays = props.days || days;\r\n            return m('.calendar',\r\n                m('.weekdays', theseWeekdays.map(function(_, idx) {\r\n                    var day = wrapAround(idx + props.weekStart, theseWeekdays);\r\n                    return m('.day.dummy', day.substring(0, 2));\r\n                })),\r\n                m('.weekdays', {\r\n                    onclick: function(e) {\r\n                        chooseDate(props, e);\r\n                    }\r\n                }, prevDates.map(function(date) {\r\n                    return m('button.day.other-scope', date);\r\n                }), theseDates.map(function(date) {\r\n                    return m('button.day', { class: classForBox(props.date.getDate(), date) }, m('.number', date));\r\n                }), nextDates.map(function(date) {\r\n                    return m('button.day.other-scope', date);\r\n                })),\r\n                m('.time',\r\n                    m('select.form-select', {\r\n                        value: props.date.getHours(), onchange: function(e) {\r\n                            props.date.setHours(e.target.value);\r\n                            props.date.setHours(e.target.value);\r\n                            if (props.onchange) {\r\n                                props.onchange(props.date);\r\n                            }\r\n                        }\r\n                    }, hours.map(function(x) {\r\n                        return m('option', { value: x }, ('00' + x).slice(-2));\r\n                    })),\r\n                    m('select.form-select', {\r\n                        value: props.date.getMinutes(), onchange: function(e) {\r\n                            props.date.setMinutes(e.target.value);\r\n                            props.date.setMinutes(e.target.value);\r\n                            if (props.onchange) {\r\n                                props.onchange(props.date);\r\n                            }\r\n                        }\r\n                    }, minutes.map(function(x) {\r\n                        return m('option', { value: x }, ('00' + x).slice(-2));\r\n                    }))\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var YearView = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var theseMonths = props.months || months;\r\n            return m('.calendar',\r\n                m('.months',\r\n                    theseMonths.map(function(month, idx) {\r\n                        return m('button.month', {\r\n                            class: classForBox(props.date.getMonth(), idx), onclick: function() {\r\n                                var newDate = new Date(props.date);\r\n                                newDate.setMonth(idx);\r\n                                props.date = pushToLastDay(props.date, newDate);\r\n                                props.view = 0;\r\n                            }\r\n                        }, m('.number', month.substring(0, 3)));\r\n                    })\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var DecadeView = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var decade = yearsForDecade(props.date);\r\n            return m('.calendar',\r\n                m('.years',\r\n                    decade.map(function(year) {\r\n                        return m('button.year', {\r\n                            class: classForBox(props.date.getFullYear(), year), onclick: function() {\r\n                                var newDate = new Date(props.date);\r\n                                newDate.setFullYear(year);\r\n                                props.date = pushToLastDay(props.date, newDate);\r\n                                props.view = 1;\r\n                            }\r\n                        }, m('.number', year));\r\n                    })\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var Editor = {\r\n        oncreate: function(vnode) {\r\n            requestAnimationFrame(function() {\r\n                vnode.dom.classList.add('active');\r\n            });\r\n        },\r\n        onbeforeremove: function(vnode) {\r\n            vnode.dom.classList.remove('active');\r\n            return new Promise(function(done) {\r\n                setTimeout(done, 200);\r\n            });\r\n        },\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            return m('.editor', { onkeydown: checkKey.bind(null, props) },\r\n                m(Header, { props: props }),\r\n                m('.sled', { class: 'p' + props.view },\r\n                    m(MonthView, { props: props }),\r\n                    m(YearView, { props: props }),\r\n                    m(DecadeView, { props: props })\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var DatePicker = {\r\n        localize: function(loc) {\r\n            if (loc) {\r\n                prevNextTitles = loc.prevNextTitles || prevNextTitles;\r\n                locale = loc.locale || locale;\r\n                formatOptions = loc.formatOptions || formatOptions;\r\n                weekStart = $.isNumber(loc.weekStart) ? loc.weekStart : weekStart;\r\n                var strings = stringsForLocale(locale);\r\n                days = strings.days;\r\n                months = strings.months;\r\n            }\r\n        },\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            var date = new Date(attrs.date || defaultDate());\r\n            if (!attrs.date) {\r\n                attrs.onchange(date);\r\n            }\r\n            var props = {\r\n                date: date,\r\n                format: attrs.format || defaultFormat,\r\n                name: attrs.name,\r\n                active: false,\r\n                view: 0,\r\n                required: attrs.required,\r\n                disabled: attrs.disabled,\r\n                onchange: attrs.onchange,\r\n                class: attrs.class\r\n            };\r\n\r\n            ['prevNextTitles', 'locale', 'formatOptions'].forEach(function(prop) {\r\n                props[prop] = attrs[prop] || prop;\r\n            });\r\n            props.weekStart = $.isNumber(attrs.weekStart) ? attrs.weekStart : weekStart;\r\n\r\n            if (attrs.locale && attrs.locale !== locale) {\r\n                var strings = stringsForLocale(props.locale);\r\n                props.days = strings.days;\r\n                props.months = strings.months;\r\n            }\r\n\r\n            vnode.state.props = props;\r\n        },\r\n        onbeforeupdate: function(vnode) {\r\n            vnode.state.props.class = vnode.attrs.class;\r\n        },\r\n        onupdate: function(vnode) {\r\n            var chosen = $.get('.chosen', vnode.dom);\r\n            if (chosen) {\r\n                chosen.focus();\r\n            }\r\n        },\r\n        showEditor: function(props, e) {\r\n            if (e && e instanceof KeyboardEvent) {\r\n                if (e.keyCode !== _keys.SPACE && e.keyCode !== _keys.ENTER) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (props.disabled) {\r\n                return;\r\n            }\r\n            if (props.active) {\r\n                props.view = 0;\r\n            }\r\n            props.active = !props.active;\r\n        },\r\n        view: function(vnode) {\r\n            var props = vnode.state.props;\r\n            return m('.mithril-date-picker-container', { class: ((props.active ? 'active' : '') + ' ' + props.class).trim() },\r\n                m('input.current-date.form-input', {\r\n                    name: props.name,\r\n                    class: props.required ? 'required' : null,\r\n                    format: props.format,\r\n                    readonly: true,\r\n                    onclick: this.showEditor.bind(null, props),\r\n                    onkeydown: this.showEditor.bind(null, props),\r\n                    value: $.fecha.format(props.date, props.format || defaultFormat)\r\n                }),\r\n                m('i.dash.current-date-indicator', { class: props.active ? 'dash-sort-up' : 'dash-sort-down' }),\r\n                props.active && m(Editor, { props: props })\r\n            );\r\n        }\r\n    };\r\n\r\n    return DatePicker;\r\n});\r\n","/*!\r\n * Library for storing widget positions and detecting collisions.\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Rect = factory(root.$);\r\n})(this, function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Constructor for a rect.\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     */\r\n    function Rect(width, height, x, y) {\r\n        this.x = $.coalesce(x, 0);\r\n        this.y = $.coalesce(y, 0);\r\n        this.width = $.coalesce(width, 0);\r\n        this.height = $.coalesce(height, 0);\r\n        this.updated = false;\r\n    }\r\n\r\n    Rect.prototype = {\r\n        /**\r\n         * Check if rect intersects with this rect.\r\n         * @param {Rect} rect - Rect to check for intersection with.\r\n         * @returns {bool} True if the rectangles collide, else false.\r\n         */\r\n        overlaps: function(rect) {\r\n            var thisRight = this.x + this.width;\r\n            var thisBottom = this.y + this.height;\r\n            var rectRight = rect.x + rect.width;\r\n            var rectBottom = rect.y + rect.height;\r\n\r\n            // http://stackoverflow.com/a/306332\r\n            return this.x < rectRight && thisRight > rect.x && this.y < rectBottom && thisBottom > rect.y;\r\n        }\r\n    };\r\n\r\n    return Rect;\r\n});\r\n","/*!\r\n * Draggabilly PACKAGED v2.1.1\r\n * Make that shiz draggable\r\n * http://draggabilly.desandro.com\r\n * MIT license\r\n *\r\n * Modified to remove jQuery completely.\r\n */\r\n\r\n/*!\r\n * getSize v2.0.2\r\n * measure size of elements\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.getSize = factory(root.$);\r\n})(this, function factory($) {\r\n    /**\r\n     * Get a number from a string, not a percentage.\r\n     * @param {string} value - String to parse.\r\n     * @returns {Number} Returns the number.\r\n     */\r\n    function getStyleSize(value) {\r\n        var num = parseFloat(value);\r\n        // not a percent like '100%', and a number\r\n        return value.indexOf('%') === -1 && !isNaN(num) && num;\r\n    }\r\n\r\n    var measurements = [\r\n        'paddingLeft',\r\n        'paddingRight',\r\n        'paddingTop',\r\n        'paddingBottom',\r\n        'marginLeft',\r\n        'marginRight',\r\n        'marginTop',\r\n        'marginBottom',\r\n        'borderLeftWidth',\r\n        'borderRightWidth',\r\n        'borderTopWidth',\r\n        'borderBottomWidth'\r\n    ];\r\n\r\n    var measurementsLength = measurements.length;\r\n\r\n    /**\r\n     * Build the size measurements for a hidden element.\r\n     * @returns {Object} Measurements for the element.\r\n     */\r\n    function getZeroSize() {\r\n        var size = {\r\n            width: 0,\r\n            height: 0,\r\n            innerWidth: 0,\r\n            innerHeight: 0,\r\n            outerWidth: 0,\r\n            outerHeight: 0\r\n        };\r\n        for (var i = 0; i < measurementsLength; i++) {\r\n            size[measurements[i]] = 0;\r\n        }\r\n        return size;\r\n    }\r\n\r\n    var isSetup = false;\r\n    var isBoxSizeOuter;\r\n\r\n    /**\r\n     * Setup the instance.\r\n     */\r\n    function setup() {\r\n        // setup once\r\n        if (isSetup) {\r\n            return;\r\n        }\r\n        isSetup = true;\r\n\r\n        /**\r\n         * WebKit measures the outer-width on style.width on border-box elems\r\n         * IE & Firefox<29 measures the inner-width\r\n         */\r\n        var div = document.createElement('div');\r\n        $.style(div, { width: '200px', padding: '1px 2px 3px 4px', borderStyle: 'solid', borderWidth: '1px 2px 3px 4px', boxSizing: 'border-box' });\r\n\r\n        var body = document.body || document.documentElement;\r\n        body.appendChild(div);\r\n        var style = getComputedStyle(div);\r\n\r\n        getSize.isBoxSizeOuter = isBoxSizeOuter = getStyleSize(style.width) === 200;\r\n        body.removeChild(div);\r\n    }\r\n\r\n    /**\r\n     * Get the dimensions of a node.\r\n     * @param {Node|string} elem - Node object or query selector.\r\n     * @returns {Object} Dimensions for node.\r\n     */\r\n    function getSize(elem) {\r\n        setup();\r\n\r\n        elem = $.get(elem);\r\n        if (!$.isNode(elem)) {\r\n            return;\r\n        }\r\n\r\n        var style = getComputedStyle(elem);\r\n\r\n        // if hidden, everything is 0\r\n        if (style.display === 'none') {\r\n            return getZeroSize();\r\n        }\r\n\r\n        var size = { width: elem.offsetWidth, height: elem.offsetHeight };\r\n        var isBorderBox = size.isBorderBox = style.boxSizing === 'border-box';\r\n\r\n        // get all measurements\r\n        for (var i = 0; i < measurementsLength; i++) {\r\n            var measurement = measurements[i];\r\n            var value = style[measurement];\r\n            var num = parseFloat(value);\r\n            // any 'auto', 'medium' value will be 0\r\n            size[measurement] = !isNaN(num) ? num : 0;\r\n        }\r\n\r\n        var paddingWidth = size.paddingLeft + size.paddingRight;\r\n        var paddingHeight = size.paddingTop + size.paddingBottom;\r\n        var marginWidth = size.marginLeft + size.marginRight;\r\n        var marginHeight = size.marginTop + size.marginBottom;\r\n        var borderWidth = size.borderLeftWidth + size.borderRightWidth;\r\n        var borderHeight = size.borderTopWidth + size.borderBottomWidth;\r\n        var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\r\n\r\n        // overwrite width and height if we can get it from style\r\n        var styleWidth = getStyleSize(style.width);\r\n        if (styleWidth !== false) {\r\n            // add padding and border unless it's already including it\r\n            size.width = styleWidth + (isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth);\r\n        }\r\n\r\n        var styleHeight = getStyleSize(style.height);\r\n        if (styleHeight !== false) {\r\n            // add padding and border unless it's already including it\r\n            size.height = styleHeight + (isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight);\r\n        }\r\n\r\n        size.innerWidth = size.width - (paddingWidth + borderWidth);\r\n        size.innerHeight = size.height - (paddingHeight + borderHeight);\r\n        size.outerWidth = size.width + marginWidth;\r\n        size.outerHeight = size.height + marginHeight;\r\n\r\n        return size;\r\n    }\r\n\r\n    return getSize;\r\n});\r\n\r\n/**\r\n * EvEmitter v1.0.3\r\n * Lil' event emitter\r\n * MIT License\r\n */\r\n\r\n/* jshint unused: true, undef: true, strict: true */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.EvEmitter = factory();\r\n}(this, function() {\r\n    /**\r\n     * Constructor for the event emitter.\r\n     */\r\n    function EvEmitter() { }\r\n\r\n    EvEmitter.prototype = {\r\n        /**\r\n         * Add an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Function} listener - Callback function\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        on: function(eventName, listener) {\r\n            if (!eventName || !listener) {\r\n                return;\r\n            }\r\n            // set events hash\r\n            var events = this._events = this._events || {};\r\n            // set listeners array\r\n            var listeners = events[eventName] = events[eventName] || [];\r\n            // only add once\r\n            if (listeners.indexOf(listener) === -1) {\r\n                listeners.push(listener);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Remove an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Function} listener - Callback function\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        off: function(eventName, listener) {\r\n            var listeners = this._events && this._events[eventName];\r\n            if (!listeners || !listeners.length) {\r\n                return;\r\n            }\r\n            var index = listeners.indexOf(listener);\r\n            if (index !== -1) {\r\n                listeners.splice(index, 1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Dispatch an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Array} args - Arguments for the callback.\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        emitEvent: function(eventName, args) {\r\n            var listeners = this._events && this._events[eventName];\r\n            if (!listeners || !listeners.length) {\r\n                return;\r\n            }\r\n            args = args || [];\r\n            listeners.forEach(function(x) {\r\n                x.apply(this, args);\r\n            });\r\n            return this;\r\n        }\r\n    };\r\n\r\n    return EvEmitter;\r\n}));\r\n\r\n/*!\r\n * Unipointer v2.1.0\r\n * base class for doing one thing with pointer event\r\n * MIT license\r\n */\r\n\r\n/*jshint browser: true, undef: true, unused: true, strict: true */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Unipointer = factory(root.$, root, root.EvEmitter);\r\n}(this, function factory($, root, EvEmitter) {\r\n    /**\r\n     * Constructor for the Unipointer\r\n     */\r\n    function Unipointer() { }\r\n\r\n    // inherit EvEmitter\r\n    var proto = Unipointer.prototype = Object.create(EvEmitter.prototype);\r\n\r\n    /**\r\n     * Add an event to start dragging.\r\n     * @param {Node} elem - Node to add the event to.\r\n     */\r\n    proto.bindStartEvent = function(elem) {\r\n        this._bindStartEvent(elem, true);\r\n    };\r\n\r\n    /**\r\n     * Remove an event to start dragging.\r\n     * @param {Node} elem - Node to remove the event from.\r\n     */\r\n    proto.unbindStartEvent = function(elem) {\r\n        this._bindStartEvent(elem, false);\r\n    };\r\n\r\n    /**\r\n     * Add/remove the event to start dragging.\r\n     * @param {Node} elem - Node to add/remove the event to.\r\n     * @param {Boolean} isBind - will unbind if falsey.\r\n     * @private\r\n     */\r\n    proto._bindStartEvent = function(elem, isBind) {\r\n        var bindMethod = $.coalesce(isBind, true) ? 'addEventListener' : 'removeEventListener';\r\n\r\n        if (window.navigator.pointerEnabled) {\r\n            // W3C Pointer Events, IE11. See https://coderwall.com/p/mfreca\r\n            elem[bindMethod]('pointerdown', this);\r\n        } else if (window.navigator.msPointerEnabled) {\r\n            // IE10 Pointer Events\r\n            elem[bindMethod]('MSPointerDown', this);\r\n        } else {\r\n            // listen for both, for devices like Chrome Pixel\r\n            elem[bindMethod]('mousedown', this);\r\n            elem[bindMethod]('touchstart', this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Trigger handler methods for events\r\n     * @param {Event} event - Event to trigger.\r\n     */\r\n    proto.handleEvent = function(event) {\r\n        var method = 'on' + event.type;\r\n        if (this[method]) {\r\n            this[method](event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns the touch that we're keeping track of.\r\n     * @param {Touch[]} touches - Touch history\r\n     * @returns {Touch} Touch event.\r\n     */\r\n    proto.getTouch = function(touches) {\r\n        return $.findByKey(touches, 'identifier', this.pointerIdentifier);\r\n    };\r\n\r\n    /**\r\n     * Handle a mouse click.\r\n     * @param {Event} event - Click event.\r\n     */\r\n    proto.onmousedown = function(event) {\r\n        // dismiss clicks from right or middle buttons\r\n        var button = event.button;\r\n        if (button && (button !== 0 && button !== 1)) {\r\n            return;\r\n        }\r\n        this._pointerDown(event, event);\r\n    };\r\n\r\n    /**\r\n     * Handle a touch.\r\n     * @param {Touch} event - Touch event.\r\n     */\r\n    proto.ontouchstart = function(event) {\r\n        this._pointerDown(event, event.changedTouches[0]);\r\n    };\r\n\r\n    /**\r\n     * Handle a mouse click for IE.\r\n     * @param {Event} event - Click event.\r\n     */\r\n    proto.onMSPointerDown = proto.onpointerdown = function(event) {\r\n        this._pointerDown(event, event);\r\n    };\r\n\r\n    /**\r\n     * Start a click/touch event.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerDown = function(event, pointer) {\r\n        // dismiss other pointers\r\n        if (this.isPointerDown) {\r\n            return;\r\n        }\r\n\r\n        this.isPointerDown = true;\r\n        // save pointer identifier to match up touch events\r\n        // pointerId for pointer events, touch.indentifier for touch events\r\n        this.pointerIdentifier = pointer.pointerId !== undefined ? pointer.pointerId : pointer.identifier;\r\n        this.pointerDown(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Bind events after the start of a click/touch event.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        this._bindPostStartEvents(event);\r\n        this.emitEvent('pointerDown', [event, pointer]);\r\n    };\r\n\r\n    // hash of events to be bound after start event\r\n    var postStartEvents = {\r\n        mousedown: ['mousemove', 'mouseup'],\r\n        touchstart: ['touchmove', 'touchend', 'touchcancel'],\r\n        pointerdown: ['pointermove', 'pointerup', 'pointercancel'],\r\n        MSPointerDown: ['MSPointerMove', 'MSPointerUp', 'MSPointerCancel']\r\n    };\r\n\r\n    /**\r\n     * Add all of the events that are needed after start dragging.\r\n     * @param {Event} event - Original click/touch event.\r\n     * @private\r\n     */\r\n    proto._bindPostStartEvents = function(event) {\r\n        if (!event) {\r\n            return;\r\n        }\r\n        // get proper events to match start event\r\n        var events = postStartEvents[event.type];\r\n        // bind events to node\r\n        events.forEach(function(eventName) {\r\n            window.addEventListener(eventName, this);\r\n        }, this);\r\n        // save these arguments\r\n        this._boundPointerEvents = events;\r\n    };\r\n\r\n    /**\r\n     * Remove all of the events that are needed after start dragging.\r\n     * @param {Event} event - Original click/touch event.\r\n     * @private\r\n     */\r\n    proto._unbindPostStartEvents = function() {\r\n        // check for _boundEvents, in case dragEnd triggered twice (old IE8 bug)\r\n        if (!this._boundPointerEvents) {\r\n            return;\r\n        }\r\n        this._boundPointerEvents.forEach(function(eventName) {\r\n            window.removeEventListener(eventName, this);\r\n        }, this);\r\n\r\n        delete this._boundPointerEvents;\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse moves.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onmousemove = function(event) {\r\n        this._pointerMove(event, event);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse moves for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerMove = proto.onpointermove = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerMove(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch moves.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchmove = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerMove(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer move from all the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerMove = function(event, pointer) {\r\n        this.pointerMove(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer move event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        this.emitEvent('pointerMove', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse button is released.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onmouseup = function(event) {\r\n        this._pointerUp(event, event);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse button is released for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerUp = proto.onpointerup = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerUp(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch is released.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchend = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerUp(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer up from all the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerUp = function(event, pointer) {\r\n        this._pointerDone();\r\n        this.pointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer up event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        this.emitEvent('pointerUp', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Event handler for when the dragging stops.\r\n     * @private\r\n     */\r\n    proto._pointerDone = function() {\r\n        // reset properties\r\n        this.isPointerDown = false;\r\n        delete this.pointerIdentifier;\r\n        // remove events\r\n        this._unbindPostStartEvents();\r\n        this.pointerDone();\r\n    };\r\n\r\n    proto.pointerDone = $.noop;\r\n\r\n    /**\r\n     * Event handler when the mouse click is canceled for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerCancel = proto.onpointercancel = function(event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerCancel(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch is canceled.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchcancel = function(event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerCancel(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer cancel from all of the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerCancel = function(event, pointer) {\r\n        this._pointerDone();\r\n        this.pointerCancel(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer cancel event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerCancel = function(event, pointer) {\r\n        this.emitEvent('pointerCancel', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Utility function for getting x/y coords from event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @returns {Object} Object with x & y coordinates.\r\n     */\r\n    Unipointer.getPointerPoint = function(pointer) {\r\n        return {\r\n            x: pointer.pageX,\r\n            y: pointer.pageY\r\n        };\r\n    };\r\n\r\n    return Unipointer;\r\n}));\r\n\r\n/*!\r\n * Unidragger v2.1.0\r\n * Draggable base class\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Unidragger = factory(root.$, root, root.Unipointer);\r\n}(this, function factory($, root, Unipointer) {\r\n    /**\r\n     * Unidragger constructor.\r\n     */\r\n    function Unidragger() { }\r\n\r\n    /**\r\n     * Inherit Unipointer & EvEmitter\r\n     */\r\n    var proto = Unidragger.prototype = Object.create(Unipointer.prototype);\r\n\r\n    /**\r\n     * Add events for drag handle.\r\n     */\r\n    proto.bindHandles = function() {\r\n        this._bindHandles(true);\r\n    };\r\n\r\n    /**\r\n     * Remove events for drag handle.\r\n     */\r\n    proto.unbindHandles = function() {\r\n        this._bindHandles(false);\r\n    };\r\n\r\n    /**\r\n     * Handle adding/removing events for the drag handle.\r\n     * @param {Bool} isBind - Unbind if falsey.\r\n     */\r\n    proto._bindHandles = function(isBind) {\r\n        isBind = $.coalesce(isBind, true);\r\n        // extra bind logic\r\n        var binderExtra;\r\n        var navigator = window.navigator;\r\n        if (navigator.pointerEnabled || navigator.msPointerEnabled) {\r\n            var prop = navigator.pointerEnabled ? 'touchAction' : 'msTouchAction';\r\n            binderExtra = function(handle) {\r\n                // disable scrolling on the element\r\n                handle.style[prop] = isBind ? 'none' : '';\r\n            };\r\n        } else {\r\n            binderExtra = $.noop;\r\n        }\r\n        // bind each handle\r\n        var bindMethod = isBind ? 'addEventListener' : 'removeEventListener';\r\n        for (var i = 0; i < this.handles.length; i++) {\r\n            var handle = this.handles[i];\r\n            this._bindStartEvent(handle, isBind);\r\n            binderExtra(handle);\r\n            handle[bindMethod]('click', this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Pointer start\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        // dismiss range sliders\r\n        if (event.target.nodeName === 'INPUT' && event.target.type === 'range') {\r\n            // reset pointerDown logic\r\n            this.isPointerDown = false;\r\n            delete this.pointerIdentifier;\r\n            return;\r\n        }\r\n\r\n        this._dragPointerDown(event, pointer);\r\n        // kludge to blur focused inputs in dragger\r\n        var focused = document.activeElement;\r\n        if (focused && focused.blur) {\r\n            focused.blur();\r\n        }\r\n        // bind move and end events\r\n        this._bindPostStartEvents(event);\r\n        this.emitEvent('pointerDown', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Base pointer down logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragPointerDown = function(event, pointer) {\r\n        // track to see when dragging starts\r\n        this.pointerDownPoint = Unipointer.getPointerPoint(pointer);\r\n        if (this.canPreventDefaultOnPointerDown(event, pointer)) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Overwriteable method so Flickity can prevent for scrolling\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @returns {Bool} True if allowed to prevent default event, else false.\r\n     */\r\n    proto.canPreventDefaultOnPointerDown = function(event) {\r\n        // prevent default, unless touchstart or <select>\r\n        return event.target.nodeName !== 'SELECT';\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        var moveVector = this._dragPointerMove(event, pointer);\r\n        this.emitEvent('pointerMove', [event, pointer, moveVector]);\r\n        this._dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Base pointer move logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @returns {Object} Object with x & y coordinates.\r\n     */\r\n    proto._dragPointerMove = function(event, pointer) {\r\n        var movePoint = Unipointer.getPointerPoint(pointer);\r\n        var moveVector = {\r\n            x: movePoint.x - this.pointerDownPoint.x,\r\n            y: movePoint.y - this.pointerDownPoint.y\r\n        };\r\n        // start drag if pointer has moved far enough to start drag\r\n        if (!this.isDragging && this.hasDragStarted(moveVector)) {\r\n            this._dragStart(event, pointer);\r\n        }\r\n        return moveVector;\r\n    };\r\n\r\n    /**\r\n     * Check if pointer has moved far enough to start drag.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     * @returns {Bool} True if moved far enough to count as move.\r\n     */\r\n    proto.hasDragStarted = function(moveVector) {\r\n        return Math.abs(moveVector.x) > 3 || Math.abs(moveVector.y) > 3;\r\n    };\r\n\r\n    /**\r\n     * Pointer up.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        this.emitEvent('pointerUp', [event, pointer]);\r\n        this._dragPointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Handle mouse/touch up.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragPointerUp = function(event, pointer) {\r\n        if (this.isDragging) {\r\n            this._dragEnd(event, pointer);\r\n        } else {\r\n            // pointer didn't move enough for drag to start\r\n            this._staticClick(event, pointer);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Base drag start logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._dragStart = function(event, pointer) {\r\n        this.isDragging = true;\r\n        this.dragStartPoint = Unipointer.getPointerPoint(pointer);\r\n        this.isPreventingClicks = true;\r\n        this.dragStart(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag start event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragStart = function(event, pointer) {\r\n        this.emitEvent('dragStart', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Base drag move logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     * @private\r\n     */\r\n    proto._dragMove = function(event, pointer, moveVector) {\r\n        // do not drag if not dragging yet\r\n        if (!this.isDragging) {\r\n            return;\r\n        }\r\n        this.dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag move event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     */\r\n    proto.dragMove = function(event, pointer, moveVector) {\r\n        event.preventDefault();\r\n        this.emitEvent('dragMove', [event, pointer, moveVector]);\r\n    };\r\n\r\n    /**\r\n     * Base logic for drag end.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragEnd = function(event, pointer) {\r\n        this.isDragging = false;\r\n        // re-enable clicking async\r\n        setTimeout(function() {\r\n            delete this.isPreventingClicks;\r\n        }.bind(this));\r\n        this.dragEnd(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag end event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragEnd = function(event, pointer) {\r\n        this.emitEvent('dragEnd', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Handle all clicks and prevent clicks when dragging\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     */\r\n    proto.onclick = function(event) {\r\n        if (this.isPreventingClicks) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Triggered after pointer down & up with no/tiny movement.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._staticClick = function(event, pointer) {\r\n        // ignore emulated mouse up clicks\r\n        if (this.isIgnoringMouseUp && event.type === 'mouseup') {\r\n            return;\r\n        }\r\n\r\n        // allow click in <input>s and <textarea>s\r\n        var nodeName = event.target.nodeName;\r\n        if (nodeName === 'INPUT' || nodeName === 'TEXTAREA') {\r\n            event.target.focus();\r\n        }\r\n        this.staticClick(event, pointer);\r\n\r\n        // set flag for emulated clicks 300ms after touchend\r\n        if (event.type !== 'mouseup') {\r\n            this.isIgnoringMouseUp = true;\r\n            // reset flag after 300ms\r\n            setTimeout(function() {\r\n                delete this.isIgnoringMouseUp;\r\n            }.bind(this), 400);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Dispatch event for staticClick for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.staticClick = function(event, pointer) {\r\n        this.emitEvent('staticClick', [event, pointer]);\r\n    };\r\n\r\n    return Unidragger;\r\n}));\r\n\r\n/*!\r\n * Draggabilly v2.1.1\r\n * Make that shiz draggable\r\n * http://draggabilly.desandro.com\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Draggabilly = factory(root.$, root, root.getSize, root.Unidragger);\r\n}(this, function factory($, root, getSize, Unidragger) {\r\n    var lastTime = 0;\r\n    // get rAF, prefixed, if present. fallback to setTimeout\r\n    var requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(callback) {\r\n        var currTime = new Date().getTime();\r\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n        var id = setTimeout(callback, timeToCall);\r\n        lastTime = currTime + timeToCall;\r\n        return id;\r\n    };\r\n    var transformProperty = $.isString(document.documentElement.style.transform) ? 'transform' : 'WebkitTransform';\r\n\r\n    /**\r\n     * Draggabilly constructor.\r\n     * @param {Node|string} element - Node, or querySelector string of node, to make draggable.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    function Draggabilly(element, options) {\r\n        this.element = $.get(element);\r\n        this.options = options || {};\r\n        this._create();\r\n    }\r\n\r\n    /**\r\n     * Inherit Unidragger methods.\r\n     */\r\n    var proto = Draggabilly.prototype = Object.create(Unidragger.prototype);\r\n\r\n    /**\r\n     * CSS position values that don't need to be set.\r\n     */\r\n    var positionValues = { relative: true, absolute: true, fixed: true };\r\n\r\n    /**\r\n     * Initialize draggabilly.\r\n     */\r\n    proto._create = function() {\r\n        // properties\r\n        this.position = {};\r\n        this._getPosition();\r\n\r\n        this.startPoint = { x: 0, y: 0 };\r\n        this.dragPoint = { x: 0, y: 0 };\r\n        this.startPosition = {};\r\n\r\n        // set relative positioning\r\n        var style = getComputedStyle(this.element);\r\n        if (!positionValues[style.position]) {\r\n            this.element.style.position = 'relative';\r\n        }\r\n\r\n        this.enable();\r\n        this.setHandles();\r\n    };\r\n\r\n    /**\r\n     * Set this.handles and bind start events to the handles.\r\n     */\r\n    proto.setHandles = function() {\r\n        this.handles = this.options.handle ? $.getAll(this.options.handle, this.element) : [this.element];\r\n        this.bindHandles();\r\n    };\r\n\r\n    /**\r\n     * Emits events via EvEmitter.\r\n     * @param {String} type - Name of event.\r\n     * @param {Event} event - Original event.\r\n     * @param {Array} args - Extra arguments.\r\n     */\r\n    proto.dispatchEvent = function(type, event, args) {\r\n        this.emitEvent(type, [event].concat(args));\r\n    };\r\n\r\n    /**\r\n     * Get x/y position from style.\r\n     */\r\n    proto._getPosition = function() {\r\n        var style = getComputedStyle(this.element);\r\n        var x = this._getPositionCoord(style.left, 'width');\r\n        var y = this._getPositionCoord(style.top, 'height');\r\n        // clean up 'auto' or other non-integer values\r\n        this.position.x = isNaN(x) ? 0 : x;\r\n        this.position.y = isNaN(y) ? 0 : y;\r\n\r\n        this._addTransformPosition(style);\r\n    };\r\n\r\n    /**\r\n     * Get a numeric coordinate from a style.\r\n     * @param {String} styleSide - CSS style to parse.\r\n     * @param {String} measure - Property name to get the size for.\r\n     * @returns {Number} Resulting size in pixels.\r\n     */\r\n    proto._getPositionCoord = function(styleSide, measure) {\r\n        if (styleSide.indexOf('%') !== -1) {\r\n            // convert percent into pixel for Safari, #75\r\n            var parentSize = getSize(this.element.parentNode);\r\n            // prevent not-in-DOM element throwing bug, #131\r\n            return !parentSize ? 0 : (parseFloat(styleSide) / 100) * parentSize[measure];\r\n        }\r\n        return parseInt(styleSide, 10);\r\n    };\r\n\r\n    /**\r\n     * Add `transform: translate( x, y )` to position.\r\n     * @param {CSSStyleDeclaration} style - Element styles to add to.\r\n     */\r\n    proto._addTransformPosition = function(style) {\r\n        var transform = style[transformProperty];\r\n        // bail out if value is 'none'\r\n        if (transform.indexOf('matrix') !== 0) {\r\n            return;\r\n        }\r\n        // split matrix(1, 0, 0, 1, x, y)\r\n        var matrixValues = transform.split(',');\r\n        // translate X value is in 12th or 4th position\r\n        var xIndex = transform.indexOf('matrix3d') === 0 ? 12 : 4;\r\n        var translateX = parseInt(matrixValues[xIndex], 10);\r\n        // translate Y value is in 13th or 5th position\r\n        var translateY = parseInt(matrixValues[xIndex + 1], 10);\r\n        this.position.x += translateX;\r\n        this.position.y += translateY;\r\n    };\r\n\r\n    /**\r\n     * Pointer start.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function(event, pointer) {\r\n        this._dragPointerDown(event, pointer);\r\n        // kludge to blur focused inputs in dragger\r\n        var focused = document.activeElement;\r\n        // do not blur body for IE10, metafizzy/flickity#117\r\n        if (focused && focused.blur && focused !== document.body) {\r\n            focused.blur();\r\n        }\r\n        // bind move and end events\r\n        this._bindPostStartEvents(event);\r\n        $.addClass(this.element, 'is-pointer-down');\r\n        this.dispatchEvent('pointerDown', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function(event, pointer) {\r\n        var moveVector = this._dragPointerMove(event, pointer);\r\n        this.dispatchEvent('pointerMove', event, [pointer, moveVector]);\r\n        this._dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Drag start.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragStart = function(event, pointer) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n        this._getPosition();\r\n        this.measureContainment();\r\n        // position _when_ drag began\r\n        this.startPosition.x = this.position.x;\r\n        this.startPosition.y = this.position.y;\r\n        // reset left/top style\r\n        this.setLeftTop();\r\n\r\n        this.dragPoint.x = 0;\r\n        this.dragPoint.y = 0;\r\n\r\n        $.addClass(this.element, 'is-dragging');\r\n        this.dispatchEvent('dragStart', event, [pointer]);\r\n        // start animation\r\n        this.animate();\r\n    };\r\n\r\n    /**\r\n     * Calculate the correct position of the element within its container.\r\n     */\r\n    proto.measureContainment = function() {\r\n        var containment = this.options.containment;\r\n        if (!containment) {\r\n            return;\r\n        }\r\n\r\n        // use element if element, otherwise just `true`, use the parent\r\n        var container = $.isNode(containment) ? containment : $.isString(containment) ? $.get(containment) : this.element.parentNode;\r\n        var elemSize = getSize(this.element);\r\n        var containerSize = getSize(container);\r\n        var elemRect = this.element.getBoundingClientRect();\r\n        var containerRect = container.getBoundingClientRect();\r\n        var borderSizeX = containerSize.borderLeftWidth + containerSize.borderRightWidth;\r\n        var borderSizeY = containerSize.borderTopWidth + containerSize.borderBottomWidth;\r\n\r\n        var position = this.relativeStartPosition = {\r\n            x: elemRect.left - (containerRect.left + containerSize.borderLeftWidth),\r\n            y: elemRect.top - (containerRect.top + containerSize.borderTopWidth)\r\n        };\r\n\r\n        this.containSize = {\r\n            width: (containerSize.width - borderSizeX) - position.x - elemSize.width,\r\n            height: (containerSize.height - borderSizeY) - position.y - elemSize.height\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x and y coordinates of current position.\r\n     */\r\n    proto.dragMove = function(event, pointer, moveVector) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n\r\n        var dragX = moveVector.x;\r\n        var dragY = moveVector.y;\r\n        var grid = this.options.grid;\r\n        var gridX = grid && grid[0];\r\n        var gridY = grid && grid[1];\r\n\r\n        dragX = applyGrid(dragX, gridX);\r\n        dragY = applyGrid(dragY, gridY);\r\n\r\n        dragX = this.containDrag('x', dragX, gridX);\r\n        dragY = this.containDrag('y', dragY, gridY);\r\n\r\n        // constrain to axis\r\n        dragX = this.options.axis === 'y' ? 0 : dragX;\r\n        dragY = this.options.axis === 'x' ? 0 : dragY;\r\n\r\n        if (this.options.minZero) {\r\n            dragX = applyMinZero(this.startPosition.x, dragX);\r\n            dragY = applyMinZero(this.startPosition.y, dragY);\r\n        }\r\n\r\n        this.position.x = this.startPosition.x + dragX;\r\n        this.position.y = this.startPosition.y + dragY;\r\n        // set dragPoint properties\r\n        this.dragPoint.x = dragX;\r\n        this.dragPoint.y = dragY;\r\n\r\n        this.dispatchEvent('dragMove', event, [pointer, moveVector]);\r\n    };\r\n\r\n    /**\r\n     * Adjust a coordinate to snap to the grid.\r\n     * @param {Number} value - Coordinate to snap to grid.\r\n     * @param {Number} grid - Grid width/height.\r\n     * @param {String} method - Math method to apply.\r\n     * @returns {Number} Closes number that snaps to grid.\r\n     */\r\n    function applyGrid(value, grid, method) {\r\n        return grid ? Math[method || 'round'](value / grid) * grid : value;\r\n    }\r\n\r\n    /**\r\n     * Adjust the drag position to prevent the item from moving out of the container to the left or top.\r\n     * @param {Number} start - Element starting coordinate.\r\n     * @param {Number} drag - Distance element was dragged.\r\n     * @returns {Number} Corrected drag coordinate.\r\n     */\r\n    function applyMinZero(start, drag) {\r\n        return start + drag < 0 ? -start : drag;\r\n    }\r\n\r\n    /**\r\n     * Limit dragging within boundaries.\r\n     * @param {string} axis - X or Y Axis\r\n     * @param {number} drag - Position coordinate on axis\r\n     * @param {number} grid - Boundary coordinate on axis.\r\n     * @returns {number} Coordinate contained with drag.\r\n     */\r\n    proto.containDrag = function(axis, drag, grid) {\r\n        if (!this.options.containment) {\r\n            return drag;\r\n        }\r\n        var measure = axis === 'x' ? 'width' : 'height';\r\n\r\n        var rel = this.relativeStartPosition[axis];\r\n        var min = applyGrid(-rel, grid, 'ceil');\r\n        var max = this.containSize[measure];\r\n        max = applyGrid(max, grid, 'floor');\r\n        return Math.min(max, Math.max(min, drag));\r\n    };\r\n\r\n    /**\r\n     * pointer up\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function(event, pointer) {\r\n        $.removeClass(this.element, 'is-pointer-down');\r\n        this.dispatchEvent('pointerUp', event, [pointer]);\r\n        this._dragPointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Drag end.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragEnd = function(event, pointer) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n        // use top left position when complete\r\n        if (transformProperty) {\r\n            this.element.style[transformProperty] = '';\r\n            this.setLeftTop();\r\n        }\r\n        $.removeClass(this.element, 'is-dragging');\r\n        this.dispatchEvent('dragEnd', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Animate while dragging.\r\n     */\r\n    proto.animate = function() {\r\n        if (!this.isDragging) {\r\n            return;\r\n        }\r\n        this.positionDrag();\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    };\r\n\r\n    /**\r\n     * Set left/top positioning.\r\n     */\r\n    proto.setLeftTop = function() {\r\n        $.style(this.element, { left: this.position.x + 'px', top: this.position.y + 'px' });\r\n    };\r\n\r\n    /**\r\n     * Set position transform based on drag.\r\n     */\r\n    proto.positionDrag = function() {\r\n        this.element.style[transformProperty] = 'translate3d( ' + this.dragPoint.x + 'px, ' + this.dragPoint.y + 'px, 0)';\r\n    };\r\n\r\n    /**\r\n     * Dispatch the event for static click callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.staticClick = function(event, pointer) {\r\n        this.dispatchEvent('staticClick', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Enable dragging.\r\n     */\r\n    proto.enable = function() {\r\n        this.isEnabled = true;\r\n    };\r\n\r\n    /**\r\n     * Disable dragging.\r\n     */\r\n    proto.disable = function() {\r\n        this.isEnabled = false;\r\n        if (this.isDragging) {\r\n            this.dragEnd();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy this instance.\r\n     */\r\n    proto.destroy = function() {\r\n        this.disable();\r\n        this.element.removeAttribute('style');\r\n        this.unbindHandles();\r\n    };\r\n\r\n    return Draggabilly;\r\n}));\r\n","/*!\r\n * Chart.js\r\n * http://chartjs.org/\r\n * Version: 2.7.1\r\n *\r\n * Copyright 2018 Chart.js Contributors\r\n * Released under the MIT license\r\n * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md\r\n */\r\n(function(f) { if (typeof exports === \"object\" && typeof module !== \"undefined\") { module.exports = f() } else if (typeof define === \"function\" && define.amd) { define([], f) } else { var g; if (typeof window !== \"undefined\") { g = window } else if (typeof global !== \"undefined\") { g = global } else if (typeof self !== \"undefined\") { g = self } else { g = this } g.Chart = f() } })(function() {\r\n    var define, module, exports; return (function e(t, n, r) { function s(o, u) { if (!n[o]) { if (!t[o]) { var a = typeof require == \"function\" && require; if (!u && a) return a(o, !0); if (i) return i(o, !0); var f = new Error(\"Cannot find module '\" + o + \"'\"); throw f.code = \"MODULE_NOT_FOUND\", f } var l = n[o] = { exports: {} }; t[o][0].call(l.exports, function(e) { var n = t[o][1][e]; return s(n ? n : e) }, l, l.exports, e, t, n, r) } return n[o].exports } var i = typeof require == \"function\" && require; for (var o = 0; o < r.length; o++)s(r[o]); return s })({\r\n        1: [function(require, module, exports) {\r\n            /* MIT license */\r\n            var colorNames = require(5);\r\n\r\n            module.exports = {\r\n                getRgba: getRgba,\r\n                getHsla: getHsla,\r\n                getRgb: getRgb,\r\n                getHsl: getHsl,\r\n                getHwb: getHwb,\r\n                getAlpha: getAlpha,\r\n\r\n                hexString: hexString,\r\n                rgbString: rgbString,\r\n                rgbaString: rgbaString,\r\n                percentString: percentString,\r\n                percentaString: percentaString,\r\n                hslString: hslString,\r\n                hslaString: hslaString,\r\n                hwbString: hwbString,\r\n                keyword: keyword\r\n            }\r\n\r\n            function getRgba(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var abbr = /^#([a-fA-F0-9]{3})$/i,\r\n                    hex = /^#([a-fA-F0-9]{6})$/i,\r\n                    rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n                    per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n                    keyword = /(\\w+)/;\r\n\r\n                var rgb = [0, 0, 0],\r\n                    a = 1,\r\n                    match = string.match(abbr);\r\n                if (match) {\r\n                    match = match[1];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match[i] + match[i], 16);\r\n                    }\r\n                }\r\n                else if (match = string.match(hex)) {\r\n                    match = match[1];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n                    }\r\n                }\r\n                else if (match = string.match(rgba)) {\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match[i + 1]);\r\n                    }\r\n                    a = parseFloat(match[4]);\r\n                }\r\n                else if (match = string.match(per)) {\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n                    }\r\n                    a = parseFloat(match[4]);\r\n                }\r\n                else if (match = string.match(keyword)) {\r\n                    if (match[1] == \"transparent\") {\r\n                        return [0, 0, 0, 0];\r\n                    }\r\n                    rgb = colorNames[match[1]];\r\n                    if (!rgb) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                for (var i = 0; i < rgb.length; i++) {\r\n                    rgb[i] = scale(rgb[i], 0, 255);\r\n                }\r\n                if (!a && a != 0) {\r\n                    a = 1;\r\n                }\r\n                else {\r\n                    a = scale(a, 0, 1);\r\n                }\r\n                rgb[3] = a;\r\n                return rgb;\r\n            }\r\n\r\n            function getHsla(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n                var match = string.match(hsl);\r\n                if (match) {\r\n                    var alpha = parseFloat(match[4]);\r\n                    var h = scale(parseInt(match[1]), 0, 360),\r\n                        s = scale(parseFloat(match[2]), 0, 100),\r\n                        l = scale(parseFloat(match[3]), 0, 100),\r\n                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n                    return [h, s, l, a];\r\n                }\r\n            }\r\n\r\n            function getHwb(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n                var match = string.match(hwb);\r\n                if (match) {\r\n                    var alpha = parseFloat(match[4]);\r\n                    var h = scale(parseInt(match[1]), 0, 360),\r\n                        w = scale(parseFloat(match[2]), 0, 100),\r\n                        b = scale(parseFloat(match[3]), 0, 100),\r\n                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n                    return [h, w, b, a];\r\n                }\r\n            }\r\n\r\n            function getRgb(string) {\r\n                var rgba = getRgba(string);\r\n                return rgba && rgba.slice(0, 3);\r\n            }\r\n\r\n            function getHsl(string) {\r\n                var hsla = getHsla(string);\r\n                return hsla && hsla.slice(0, 3);\r\n            }\r\n\r\n            function getAlpha(string) {\r\n                var vals = getRgba(string);\r\n                if (vals) {\r\n                    return vals[3];\r\n                }\r\n                else if (vals = getHsla(string)) {\r\n                    return vals[3];\r\n                }\r\n                else if (vals = getHwb(string)) {\r\n                    return vals[3];\r\n                }\r\n            }\r\n\r\n            // generators\r\n            function hexString(rgb) {\r\n                return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n                    + hexDouble(rgb[2]);\r\n            }\r\n\r\n            function rgbString(rgba, alpha) {\r\n                if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n                    return rgbaString(rgba, alpha);\r\n                }\r\n                return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n            }\r\n\r\n            function rgbaString(rgba, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n                }\r\n                return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n                    + \", \" + alpha + \")\";\r\n            }\r\n\r\n            function percentString(rgba, alpha) {\r\n                if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n                    return percentaString(rgba, alpha);\r\n                }\r\n                var r = Math.round(rgba[0] / 255 * 100),\r\n                    g = Math.round(rgba[1] / 255 * 100),\r\n                    b = Math.round(rgba[2] / 255 * 100);\r\n\r\n                return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n            }\r\n\r\n            function percentaString(rgba, alpha) {\r\n                var r = Math.round(rgba[0] / 255 * 100),\r\n                    g = Math.round(rgba[1] / 255 * 100),\r\n                    b = Math.round(rgba[2] / 255 * 100);\r\n                return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n            }\r\n\r\n            function hslString(hsla, alpha) {\r\n                if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n                    return hslaString(hsla, alpha);\r\n                }\r\n                return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n            }\r\n\r\n            function hslaString(hsla, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n                }\r\n                return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n                    + alpha + \")\";\r\n            }\r\n\r\n            // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n            // (hwb have alpha optional & 1 is default value)\r\n            function hwbString(hwb, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n                }\r\n                return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n                    + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n            }\r\n\r\n            function keyword(rgb) {\r\n                return reverseNames[rgb.slice(0, 3)];\r\n            }\r\n\r\n            // helpers\r\n            function scale(num, min, max) {\r\n                return Math.min(Math.max(min, num), max);\r\n            }\r\n\r\n            function hexDouble(num) {\r\n                var str = num.toString(16).toUpperCase();\r\n                return (str.length < 2) ? \"0\" + str : str;\r\n            }\r\n\r\n            //create a list of reverse color names\r\n            var reverseNames = {};\r\n            for (var name in colorNames) {\r\n                reverseNames[colorNames[name]] = name;\r\n            }\r\n        }, { \"5\": 5 }], 2: [function(require, module, exports) {\r\n            /* MIT license */\r\n            var convert = require(4);\r\n            var string = require(1);\r\n\r\n            var Color = function(obj) {\r\n                if (obj instanceof Color) {\r\n                    return obj;\r\n                }\r\n                if (!(this instanceof Color)) {\r\n                    return new Color(obj);\r\n                }\r\n\r\n                this.valid = false;\r\n                this.values = {\r\n                    rgb: [0, 0, 0],\r\n                    hsl: [0, 0, 0],\r\n                    hsv: [0, 0, 0],\r\n                    hwb: [0, 0, 0],\r\n                    cmyk: [0, 0, 0, 0],\r\n                    alpha: 1\r\n                };\r\n\r\n                // parse Color() argument\r\n                var vals;\r\n                if (typeof obj === 'string') {\r\n                    vals = string.getRgba(obj);\r\n                    if (vals) {\r\n                        this.setValues('rgb', vals);\r\n                    } else if (vals = string.getHsla(obj)) {\r\n                        this.setValues('hsl', vals);\r\n                    } else if (vals = string.getHwb(obj)) {\r\n                        this.setValues('hwb', vals);\r\n                    }\r\n                } else if (typeof obj === 'object') {\r\n                    vals = obj;\r\n                    if (vals.r !== undefined || vals.red !== undefined) {\r\n                        this.setValues('rgb', vals);\r\n                    } else if (vals.l !== undefined || vals.lightness !== undefined) {\r\n                        this.setValues('hsl', vals);\r\n                    } else if (vals.v !== undefined || vals.value !== undefined) {\r\n                        this.setValues('hsv', vals);\r\n                    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\r\n                        this.setValues('hwb', vals);\r\n                    } else if (vals.c !== undefined || vals.cyan !== undefined) {\r\n                        this.setValues('cmyk', vals);\r\n                    }\r\n                }\r\n            };\r\n\r\n            Color.prototype = {\r\n                isValid: function() {\r\n                    return this.valid;\r\n                },\r\n                rgb: function() {\r\n                    return this.setSpace('rgb', arguments);\r\n                },\r\n                hsl: function() {\r\n                    return this.setSpace('hsl', arguments);\r\n                },\r\n                hsv: function() {\r\n                    return this.setSpace('hsv', arguments);\r\n                },\r\n                hwb: function() {\r\n                    return this.setSpace('hwb', arguments);\r\n                },\r\n                cmyk: function() {\r\n                    return this.setSpace('cmyk', arguments);\r\n                },\r\n\r\n                rgbArray: function() {\r\n                    return this.values.rgb;\r\n                },\r\n                hslArray: function() {\r\n                    return this.values.hsl;\r\n                },\r\n                hsvArray: function() {\r\n                    return this.values.hsv;\r\n                },\r\n                hwbArray: function() {\r\n                    var values = this.values;\r\n                    if (values.alpha !== 1) {\r\n                        return values.hwb.concat([values.alpha]);\r\n                    }\r\n                    return values.hwb;\r\n                },\r\n                cmykArray: function() {\r\n                    return this.values.cmyk;\r\n                },\r\n                rgbaArray: function() {\r\n                    var values = this.values;\r\n                    return values.rgb.concat([values.alpha]);\r\n                },\r\n                hslaArray: function() {\r\n                    var values = this.values;\r\n                    return values.hsl.concat([values.alpha]);\r\n                },\r\n                alpha: function(val) {\r\n                    if (val === undefined) {\r\n                        return this.values.alpha;\r\n                    }\r\n                    this.setValues('alpha', val);\r\n                    return this;\r\n                },\r\n\r\n                red: function(val) {\r\n                    return this.setChannel('rgb', 0, val);\r\n                },\r\n                green: function(val) {\r\n                    return this.setChannel('rgb', 1, val);\r\n                },\r\n                blue: function(val) {\r\n                    return this.setChannel('rgb', 2, val);\r\n                },\r\n                hue: function(val) {\r\n                    if (val) {\r\n                        val %= 360;\r\n                        val = val < 0 ? 360 + val : val;\r\n                    }\r\n                    return this.setChannel('hsl', 0, val);\r\n                },\r\n                saturation: function(val) {\r\n                    return this.setChannel('hsl', 1, val);\r\n                },\r\n                lightness: function(val) {\r\n                    return this.setChannel('hsl', 2, val);\r\n                },\r\n                saturationv: function(val) {\r\n                    return this.setChannel('hsv', 1, val);\r\n                },\r\n                whiteness: function(val) {\r\n                    return this.setChannel('hwb', 1, val);\r\n                },\r\n                blackness: function(val) {\r\n                    return this.setChannel('hwb', 2, val);\r\n                },\r\n                value: function(val) {\r\n                    return this.setChannel('hsv', 2, val);\r\n                },\r\n                cyan: function(val) {\r\n                    return this.setChannel('cmyk', 0, val);\r\n                },\r\n                magenta: function(val) {\r\n                    return this.setChannel('cmyk', 1, val);\r\n                },\r\n                yellow: function(val) {\r\n                    return this.setChannel('cmyk', 2, val);\r\n                },\r\n                black: function(val) {\r\n                    return this.setChannel('cmyk', 3, val);\r\n                },\r\n\r\n                hexString: function() {\r\n                    return string.hexString(this.values.rgb);\r\n                },\r\n                rgbString: function() {\r\n                    return string.rgbString(this.values.rgb, this.values.alpha);\r\n                },\r\n                rgbaString: function() {\r\n                    return string.rgbaString(this.values.rgb, this.values.alpha);\r\n                },\r\n                percentString: function() {\r\n                    return string.percentString(this.values.rgb, this.values.alpha);\r\n                },\r\n                hslString: function() {\r\n                    return string.hslString(this.values.hsl, this.values.alpha);\r\n                },\r\n                hslaString: function() {\r\n                    return string.hslaString(this.values.hsl, this.values.alpha);\r\n                },\r\n                hwbString: function() {\r\n                    return string.hwbString(this.values.hwb, this.values.alpha);\r\n                },\r\n                keyword: function() {\r\n                    return string.keyword(this.values.rgb, this.values.alpha);\r\n                },\r\n\r\n                rgbNumber: function() {\r\n                    var rgb = this.values.rgb;\r\n                    return (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\r\n                },\r\n\r\n                luminosity: function() {\r\n                    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n                    var rgb = this.values.rgb;\r\n                    var lum = [];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        var chan = rgb[i] / 255;\r\n                        lum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\r\n                    }\r\n                    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n                },\r\n\r\n                contrast: function(color2) {\r\n                    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n                    var lum1 = this.luminosity();\r\n                    var lum2 = color2.luminosity();\r\n                    if (lum1 > lum2) {\r\n                        return (lum1 + 0.05) / (lum2 + 0.05);\r\n                    }\r\n                    return (lum2 + 0.05) / (lum1 + 0.05);\r\n                },\r\n\r\n                level: function(color2) {\r\n                    var contrastRatio = this.contrast(color2);\r\n                    if (contrastRatio >= 7.1) {\r\n                        return 'AAA';\r\n                    }\r\n\r\n                    return (contrastRatio >= 4.5) ? 'AA' : '';\r\n                },\r\n\r\n                dark: function() {\r\n                    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\r\n                    var rgb = this.values.rgb;\r\n                    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\r\n                    return yiq < 128;\r\n                },\r\n\r\n                light: function() {\r\n                    return !this.dark();\r\n                },\r\n\r\n                negate: function() {\r\n                    var rgb = [];\r\n                    for (var i = 0; i < 3; i++) {\r\n                        rgb[i] = 255 - this.values.rgb[i];\r\n                    }\r\n                    this.setValues('rgb', rgb);\r\n                    return this;\r\n                },\r\n\r\n                lighten: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[2] += hsl[2] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                darken: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[2] -= hsl[2] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                saturate: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[1] += hsl[1] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                desaturate: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[1] -= hsl[1] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                whiten: function(ratio) {\r\n                    var hwb = this.values.hwb;\r\n                    hwb[1] += hwb[1] * ratio;\r\n                    this.setValues('hwb', hwb);\r\n                    return this;\r\n                },\r\n\r\n                blacken: function(ratio) {\r\n                    var hwb = this.values.hwb;\r\n                    hwb[2] += hwb[2] * ratio;\r\n                    this.setValues('hwb', hwb);\r\n                    return this;\r\n                },\r\n\r\n                greyscale: function() {\r\n                    var rgb = this.values.rgb;\r\n                    // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\r\n                    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\r\n                    this.setValues('rgb', [val, val, val]);\r\n                    return this;\r\n                },\r\n\r\n                clearer: function(ratio) {\r\n                    var alpha = this.values.alpha;\r\n                    this.setValues('alpha', alpha - (alpha * ratio));\r\n                    return this;\r\n                },\r\n\r\n                opaquer: function(ratio) {\r\n                    var alpha = this.values.alpha;\r\n                    this.setValues('alpha', alpha + (alpha * ratio));\r\n                    return this;\r\n                },\r\n\r\n                rotate: function(degrees) {\r\n                    var hsl = this.values.hsl;\r\n                    var hue = (hsl[0] + degrees) % 360;\r\n                    hsl[0] = hue < 0 ? 360 + hue : hue;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                /**\r\n                 * Ported from sass implementation in C\r\n                 * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\r\n                 */\r\n                mix: function(mixinColor, weight) {\r\n                    var color1 = this;\r\n                    var color2 = mixinColor;\r\n                    var p = weight === undefined ? 0.5 : weight;\r\n\r\n                    var w = 2 * p - 1;\r\n                    var a = color1.alpha() - color2.alpha();\r\n\r\n                    var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n                    var w2 = 1 - w1;\r\n\r\n                    return this\r\n                        .rgb(\r\n                        w1 * color1.red() + w2 * color2.red(),\r\n                        w1 * color1.green() + w2 * color2.green(),\r\n                        w1 * color1.blue() + w2 * color2.blue()\r\n                        )\r\n                        .alpha(color1.alpha() * p + color2.alpha() * (1 - p));\r\n                },\r\n\r\n                toJSON: function() {\r\n                    return this.rgb();\r\n                },\r\n\r\n                clone: function() {\r\n                    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\r\n                    // making the final build way to big to embed in Chart.js. So let's do it manually,\r\n                    // assuming that values to clone are 1 dimension arrays containing only numbers,\r\n                    // except 'alpha' which is a number.\r\n                    var result = new Color();\r\n                    var source = this.values;\r\n                    var target = result.values;\r\n                    var value, type;\r\n\r\n                    for (var prop in source) {\r\n                        if (source.hasOwnProperty(prop)) {\r\n                            value = source[prop];\r\n                            type = ({}).toString.call(value);\r\n                            if (type === '[object Array]') {\r\n                                target[prop] = value.slice(0);\r\n                            } else if (type === '[object Number]') {\r\n                                target[prop] = value;\r\n                            } else {\r\n                                console.error('unexpected color value:', value);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return result;\r\n                }\r\n            };\r\n\r\n            Color.prototype.spaces = {\r\n                rgb: ['red', 'green', 'blue'],\r\n                hsl: ['hue', 'saturation', 'lightness'],\r\n                hsv: ['hue', 'saturation', 'value'],\r\n                hwb: ['hue', 'whiteness', 'blackness'],\r\n                cmyk: ['cyan', 'magenta', 'yellow', 'black']\r\n            };\r\n\r\n            Color.prototype.maxes = {\r\n                rgb: [255, 255, 255],\r\n                hsl: [360, 100, 100],\r\n                hsv: [360, 100, 100],\r\n                hwb: [360, 100, 100],\r\n                cmyk: [100, 100, 100, 100]\r\n            };\r\n\r\n            Color.prototype.getValues = function(space) {\r\n                var values = this.values;\r\n                var vals = {};\r\n\r\n                for (var i = 0; i < space.length; i++) {\r\n                    vals[space.charAt(i)] = values[space][i];\r\n                }\r\n\r\n                if (values.alpha !== 1) {\r\n                    vals.a = values.alpha;\r\n                }\r\n\r\n                // {r: 255, g: 255, b: 255, a: 0.4}\r\n                return vals;\r\n            };\r\n\r\n            Color.prototype.setValues = function(space, vals) {\r\n                var values = this.values;\r\n                var spaces = this.spaces;\r\n                var maxes = this.maxes;\r\n                var alpha = 1;\r\n                var i;\r\n\r\n                this.valid = true;\r\n\r\n                if (space === 'alpha') {\r\n                    alpha = vals;\r\n                } else if (vals.length) {\r\n                    // [10, 10, 10]\r\n                    values[space] = vals.slice(0, space.length);\r\n                    alpha = vals[space.length];\r\n                } else if (vals[space.charAt(0)] !== undefined) {\r\n                    // {r: 10, g: 10, b: 10}\r\n                    for (i = 0; i < space.length; i++) {\r\n                        values[space][i] = vals[space.charAt(i)];\r\n                    }\r\n\r\n                    alpha = vals.a;\r\n                } else if (vals[spaces[space][0]] !== undefined) {\r\n                    // {red: 10, green: 10, blue: 10}\r\n                    var chans = spaces[space];\r\n\r\n                    for (i = 0; i < space.length; i++) {\r\n                        values[space][i] = vals[chans[i]];\r\n                    }\r\n\r\n                    alpha = vals.alpha;\r\n                }\r\n\r\n                values.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\r\n\r\n                if (space === 'alpha') {\r\n                    return false;\r\n                }\r\n\r\n                var capped;\r\n\r\n                // cap values of the space prior converting all values\r\n                for (i = 0; i < space.length; i++) {\r\n                    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\r\n                    values[space][i] = Math.round(capped);\r\n                }\r\n\r\n                // convert to all the other color spaces\r\n                for (var sname in spaces) {\r\n                    if (sname !== space) {\r\n                        values[sname] = convert[space][sname](values[space]);\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            };\r\n\r\n            Color.prototype.setSpace = function(space, args) {\r\n                var vals = args[0];\r\n\r\n                if (vals === undefined) {\r\n                    // color.rgb()\r\n                    return this.getValues(space);\r\n                }\r\n\r\n                // color.rgb(10, 10, 10)\r\n                if (typeof vals === 'number') {\r\n                    vals = Array.prototype.slice.call(args);\r\n                }\r\n\r\n                this.setValues(space, vals);\r\n                return this;\r\n            };\r\n\r\n            Color.prototype.setChannel = function(space, index, val) {\r\n                var svalues = this.values[space];\r\n                if (val === undefined) {\r\n                    // color.red()\r\n                    return svalues[index];\r\n                } else if (val === svalues[index]) {\r\n                    // color.red(color.red())\r\n                    return this;\r\n                }\r\n\r\n                // color.red(100)\r\n                svalues[index] = val;\r\n                this.setValues(space, svalues);\r\n\r\n                return this;\r\n            };\r\n\r\n            if (typeof window !== 'undefined') {\r\n                window.Color = Color;\r\n            }\r\n\r\n            module.exports = Color;\r\n        }, { \"1\": 1, \"4\": 4 }], 3: [function(require, module, exports) {\r\n            /* MIT license */\r\n\r\n            module.exports = {\r\n                rgb2hsl: rgb2hsl,\r\n                rgb2hsv: rgb2hsv,\r\n                rgb2hwb: rgb2hwb,\r\n                rgb2cmyk: rgb2cmyk,\r\n                rgb2keyword: rgb2keyword,\r\n                rgb2xyz: rgb2xyz,\r\n                rgb2lab: rgb2lab,\r\n                rgb2lch: rgb2lch,\r\n\r\n                hsl2rgb: hsl2rgb,\r\n                hsl2hsv: hsl2hsv,\r\n                hsl2hwb: hsl2hwb,\r\n                hsl2cmyk: hsl2cmyk,\r\n                hsl2keyword: hsl2keyword,\r\n\r\n                hsv2rgb: hsv2rgb,\r\n                hsv2hsl: hsv2hsl,\r\n                hsv2hwb: hsv2hwb,\r\n                hsv2cmyk: hsv2cmyk,\r\n                hsv2keyword: hsv2keyword,\r\n\r\n                hwb2rgb: hwb2rgb,\r\n                hwb2hsl: hwb2hsl,\r\n                hwb2hsv: hwb2hsv,\r\n                hwb2cmyk: hwb2cmyk,\r\n                hwb2keyword: hwb2keyword,\r\n\r\n                cmyk2rgb: cmyk2rgb,\r\n                cmyk2hsl: cmyk2hsl,\r\n                cmyk2hsv: cmyk2hsv,\r\n                cmyk2hwb: cmyk2hwb,\r\n                cmyk2keyword: cmyk2keyword,\r\n\r\n                keyword2rgb: keyword2rgb,\r\n                keyword2hsl: keyword2hsl,\r\n                keyword2hsv: keyword2hsv,\r\n                keyword2hwb: keyword2hwb,\r\n                keyword2cmyk: keyword2cmyk,\r\n                keyword2lab: keyword2lab,\r\n                keyword2xyz: keyword2xyz,\r\n\r\n                xyz2rgb: xyz2rgb,\r\n                xyz2lab: xyz2lab,\r\n                xyz2lch: xyz2lch,\r\n\r\n                lab2xyz: lab2xyz,\r\n                lab2rgb: lab2rgb,\r\n                lab2lch: lab2lch,\r\n\r\n                lch2lab: lch2lab,\r\n                lch2xyz: lch2xyz,\r\n                lch2rgb: lch2rgb\r\n            }\r\n\r\n            function rgb2hsl(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255,\r\n                    min = Math.min(r, g, b),\r\n                    max = Math.max(r, g, b),\r\n                    delta = max - min,\r\n                    h, s, l;\r\n\r\n                if (max == min)\r\n                    h = 0;\r\n                else if (r == max)\r\n                    h = (g - b) / delta;\r\n                else if (g == max)\r\n                    h = 2 + (b - r) / delta;\r\n                else if (b == max)\r\n                    h = 4 + (r - g) / delta;\r\n\r\n                h = Math.min(h * 60, 360);\r\n\r\n                if (h < 0)\r\n                    h += 360;\r\n\r\n                l = (min + max) / 2;\r\n\r\n                if (max == min)\r\n                    s = 0;\r\n                else if (l <= 0.5)\r\n                    s = delta / (max + min);\r\n                else\r\n                    s = delta / (2 - max - min);\r\n\r\n                return [h, s * 100, l * 100];\r\n            }\r\n\r\n            function rgb2hsv(rgb) {\r\n                var r = rgb[0],\r\n                    g = rgb[1],\r\n                    b = rgb[2],\r\n                    min = Math.min(r, g, b),\r\n                    max = Math.max(r, g, b),\r\n                    delta = max - min,\r\n                    h, s, v;\r\n\r\n                if (max == 0)\r\n                    s = 0;\r\n                else\r\n                    s = (delta / max * 1000) / 10;\r\n\r\n                if (max == min)\r\n                    h = 0;\r\n                else if (r == max)\r\n                    h = (g - b) / delta;\r\n                else if (g == max)\r\n                    h = 2 + (b - r) / delta;\r\n                else if (b == max)\r\n                    h = 4 + (r - g) / delta;\r\n\r\n                h = Math.min(h * 60, 360);\r\n\r\n                if (h < 0)\r\n                    h += 360;\r\n\r\n                v = ((max / 255) * 1000) / 10;\r\n\r\n                return [h, s, v];\r\n            }\r\n\r\n            function rgb2hwb(rgb) {\r\n                var r = rgb[0],\r\n                    g = rgb[1],\r\n                    b = rgb[2],\r\n                    h = rgb2hsl(rgb)[0],\r\n                    w = 1 / 255 * Math.min(r, Math.min(g, b)),\r\n                    b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\r\n\r\n                return [h, w * 100, b * 100];\r\n            }\r\n\r\n            function rgb2cmyk(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255,\r\n                    c, m, y, k;\r\n\r\n                k = Math.min(1 - r, 1 - g, 1 - b);\r\n                c = (1 - r - k) / (1 - k) || 0;\r\n                m = (1 - g - k) / (1 - k) || 0;\r\n                y = (1 - b - k) / (1 - k) || 0;\r\n                return [c * 100, m * 100, y * 100, k * 100];\r\n            }\r\n\r\n            function rgb2keyword(rgb) {\r\n                return reverseKeywords[JSON.stringify(rgb)];\r\n            }\r\n\r\n            function rgb2xyz(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255;\r\n\r\n                // assume sRGB\r\n                r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\r\n                g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\r\n                b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\r\n\r\n                var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\r\n                var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\r\n                var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\r\n\r\n                return [x * 100, y * 100, z * 100];\r\n            }\r\n\r\n            function rgb2lab(rgb) {\r\n                var xyz = rgb2xyz(rgb),\r\n                    x = xyz[0],\r\n                    y = xyz[1],\r\n                    z = xyz[2],\r\n                    l, a, b;\r\n\r\n                x /= 95.047;\r\n                y /= 100;\r\n                z /= 108.883;\r\n\r\n                x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\r\n                y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\r\n                z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\r\n\r\n                l = (116 * y) - 16;\r\n                a = 500 * (x - y);\r\n                b = 200 * (y - z);\r\n\r\n                return [l, a, b];\r\n            }\r\n\r\n            function rgb2lch(args) {\r\n                return lab2lch(rgb2lab(args));\r\n            }\r\n\r\n            function hsl2rgb(hsl) {\r\n                var h = hsl[0] / 360,\r\n                    s = hsl[1] / 100,\r\n                    l = hsl[2] / 100,\r\n                    t1, t2, t3, rgb, val;\r\n\r\n                if (s == 0) {\r\n                    val = l * 255;\r\n                    return [val, val, val];\r\n                }\r\n\r\n                if (l < 0.5)\r\n                    t2 = l * (1 + s);\r\n                else\r\n                    t2 = l + s - l * s;\r\n                t1 = 2 * l - t2;\r\n\r\n                rgb = [0, 0, 0];\r\n                for (var i = 0; i < 3; i++) {\r\n                    t3 = h + 1 / 3 * - (i - 1);\r\n                    t3 < 0 && t3++;\r\n                    t3 > 1 && t3--;\r\n\r\n                    if (6 * t3 < 1)\r\n                        val = t1 + (t2 - t1) * 6 * t3;\r\n                    else if (2 * t3 < 1)\r\n                        val = t2;\r\n                    else if (3 * t3 < 2)\r\n                        val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\r\n                    else\r\n                        val = t1;\r\n\r\n                    rgb[i] = val * 255;\r\n                }\r\n\r\n                return rgb;\r\n            }\r\n\r\n            function hsl2hsv(hsl) {\r\n                var h = hsl[0],\r\n                    s = hsl[1] / 100,\r\n                    l = hsl[2] / 100,\r\n                    sv, v;\r\n\r\n                if (l === 0) {\r\n                    // no need to do calc on black\r\n                    // also avoids divide by 0 error\r\n                    return [0, 0, 0];\r\n                }\r\n\r\n                l *= 2;\r\n                s *= (l <= 1) ? l : 2 - l;\r\n                v = (l + s) / 2;\r\n                sv = (2 * s) / (l + s);\r\n                return [h, sv * 100, v * 100];\r\n            }\r\n\r\n            function hsl2hwb(args) {\r\n                return rgb2hwb(hsl2rgb(args));\r\n            }\r\n\r\n            function hsl2cmyk(args) {\r\n                return rgb2cmyk(hsl2rgb(args));\r\n            }\r\n\r\n            function hsl2keyword(args) {\r\n                return rgb2keyword(hsl2rgb(args));\r\n            }\r\n\r\n            function hsv2rgb(hsv) {\r\n                var h = hsv[0] / 60,\r\n                    s = hsv[1] / 100,\r\n                    v = hsv[2] / 100,\r\n                    hi = Math.floor(h) % 6;\r\n\r\n                var f = h - Math.floor(h),\r\n                    p = 255 * v * (1 - s),\r\n                    q = 255 * v * (1 - (s * f)),\r\n                    t = 255 * v * (1 - (s * (1 - f))),\r\n                    v = 255 * v;\r\n\r\n                switch (hi) {\r\n                    case 0:\r\n                        return [v, t, p];\r\n                    case 1:\r\n                        return [q, v, p];\r\n                    case 2:\r\n                        return [p, v, t];\r\n                    case 3:\r\n                        return [p, q, v];\r\n                    case 4:\r\n                        return [t, p, v];\r\n                    case 5:\r\n                        return [v, p, q];\r\n                }\r\n            }\r\n\r\n            function hsv2hsl(hsv) {\r\n                var h = hsv[0],\r\n                    s = hsv[1] / 100,\r\n                    v = hsv[2] / 100,\r\n                    sl, l;\r\n\r\n                l = (2 - s) * v;\r\n                sl = s * v;\r\n                sl /= (l <= 1) ? l : 2 - l;\r\n                sl = sl || 0;\r\n                l /= 2;\r\n                return [h, sl * 100, l * 100];\r\n            }\r\n\r\n            function hsv2hwb(args) {\r\n                return rgb2hwb(hsv2rgb(args))\r\n            }\r\n\r\n            function hsv2cmyk(args) {\r\n                return rgb2cmyk(hsv2rgb(args));\r\n            }\r\n\r\n            function hsv2keyword(args) {\r\n                return rgb2keyword(hsv2rgb(args));\r\n            }\r\n\r\n            // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\r\n            function hwb2rgb(hwb) {\r\n                var h = hwb[0] / 360,\r\n                    wh = hwb[1] / 100,\r\n                    bl = hwb[2] / 100,\r\n                    ratio = wh + bl,\r\n                    i, v, f, n;\r\n\r\n                // wh + bl cant be > 1\r\n                if (ratio > 1) {\r\n                    wh /= ratio;\r\n                    bl /= ratio;\r\n                }\r\n\r\n                i = Math.floor(6 * h);\r\n                v = 1 - bl;\r\n                f = 6 * h - i;\r\n                if ((i & 0x01) != 0) {\r\n                    f = 1 - f;\r\n                }\r\n                n = wh + f * (v - wh);  // linear interpolation\r\n\r\n                switch (i) {\r\n                    default:\r\n                    case 6:\r\n                    case 0: r = v; g = n; b = wh; break;\r\n                    case 1: r = n; g = v; b = wh; break;\r\n                    case 2: r = wh; g = v; b = n; break;\r\n                    case 3: r = wh; g = n; b = v; break;\r\n                    case 4: r = n; g = wh; b = v; break;\r\n                    case 5: r = v; g = wh; b = n; break;\r\n                }\r\n\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function hwb2hsl(args) {\r\n                return rgb2hsl(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2hsv(args) {\r\n                return rgb2hsv(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2cmyk(args) {\r\n                return rgb2cmyk(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2keyword(args) {\r\n                return rgb2keyword(hwb2rgb(args));\r\n            }\r\n\r\n            function cmyk2rgb(cmyk) {\r\n                var c = cmyk[0] / 100,\r\n                    m = cmyk[1] / 100,\r\n                    y = cmyk[2] / 100,\r\n                    k = cmyk[3] / 100,\r\n                    r, g, b;\r\n\r\n                r = 1 - Math.min(1, c * (1 - k) + k);\r\n                g = 1 - Math.min(1, m * (1 - k) + k);\r\n                b = 1 - Math.min(1, y * (1 - k) + k);\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function cmyk2hsl(args) {\r\n                return rgb2hsl(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2hsv(args) {\r\n                return rgb2hsv(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2hwb(args) {\r\n                return rgb2hwb(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2keyword(args) {\r\n                return rgb2keyword(cmyk2rgb(args));\r\n            }\r\n\r\n            function xyz2rgb(xyz) {\r\n                var x = xyz[0] / 100,\r\n                    y = xyz[1] / 100,\r\n                    z = xyz[2] / 100,\r\n                    r, g, b;\r\n\r\n                r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\r\n                g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\r\n                b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\r\n\r\n                // assume sRGB\r\n                r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\r\n                    : r = (r * 12.92);\r\n\r\n                g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\r\n                    : g = (g * 12.92);\r\n\r\n                b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\r\n                    : b = (b * 12.92);\r\n\r\n                r = Math.min(Math.max(0, r), 1);\r\n                g = Math.min(Math.max(0, g), 1);\r\n                b = Math.min(Math.max(0, b), 1);\r\n\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function xyz2lab(xyz) {\r\n                var x = xyz[0],\r\n                    y = xyz[1],\r\n                    z = xyz[2],\r\n                    l, a, b;\r\n\r\n                x /= 95.047;\r\n                y /= 100;\r\n                z /= 108.883;\r\n\r\n                x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\r\n                y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\r\n                z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\r\n\r\n                l = (116 * y) - 16;\r\n                a = 500 * (x - y);\r\n                b = 200 * (y - z);\r\n\r\n                return [l, a, b];\r\n            }\r\n\r\n            function xyz2lch(args) {\r\n                return lab2lch(xyz2lab(args));\r\n            }\r\n\r\n            function lab2xyz(lab) {\r\n                var l = lab[0],\r\n                    a = lab[1],\r\n                    b = lab[2],\r\n                    x, y, z, y2;\r\n\r\n                if (l <= 8) {\r\n                    y = (l * 100) / 903.3;\r\n                    y2 = (7.787 * (y / 100)) + (16 / 116);\r\n                } else {\r\n                    y = 100 * Math.pow((l + 16) / 116, 3);\r\n                    y2 = Math.pow(y / 100, 1 / 3);\r\n                }\r\n\r\n                x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\r\n\r\n                z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\r\n\r\n                return [x, y, z];\r\n            }\r\n\r\n            function lab2lch(lab) {\r\n                var l = lab[0],\r\n                    a = lab[1],\r\n                    b = lab[2],\r\n                    hr, h, c;\r\n\r\n                hr = Math.atan2(b, a);\r\n                h = hr * 360 / 2 / Math.PI;\r\n                if (h < 0) {\r\n                    h += 360;\r\n                }\r\n                c = Math.sqrt(a * a + b * b);\r\n                return [l, c, h];\r\n            }\r\n\r\n            function lab2rgb(args) {\r\n                return xyz2rgb(lab2xyz(args));\r\n            }\r\n\r\n            function lch2lab(lch) {\r\n                var l = lch[0],\r\n                    c = lch[1],\r\n                    h = lch[2],\r\n                    a, b, hr;\r\n\r\n                hr = h / 360 * 2 * Math.PI;\r\n                a = c * Math.cos(hr);\r\n                b = c * Math.sin(hr);\r\n                return [l, a, b];\r\n            }\r\n\r\n            function lch2xyz(args) {\r\n                return lab2xyz(lch2lab(args));\r\n            }\r\n\r\n            function lch2rgb(args) {\r\n                return lab2rgb(lch2lab(args));\r\n            }\r\n\r\n            function keyword2rgb(keyword) {\r\n                return cssKeywords[keyword];\r\n            }\r\n\r\n            function keyword2hsl(args) {\r\n                return rgb2hsl(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2hsv(args) {\r\n                return rgb2hsv(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2hwb(args) {\r\n                return rgb2hwb(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2cmyk(args) {\r\n                return rgb2cmyk(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2lab(args) {\r\n                return rgb2lab(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2xyz(args) {\r\n                return rgb2xyz(keyword2rgb(args));\r\n            }\r\n\r\n            var cssKeywords = {\r\n                aliceblue: [240, 248, 255],\r\n                antiquewhite: [250, 235, 215],\r\n                aqua: [0, 255, 255],\r\n                aquamarine: [127, 255, 212],\r\n                azure: [240, 255, 255],\r\n                beige: [245, 245, 220],\r\n                bisque: [255, 228, 196],\r\n                black: [0, 0, 0],\r\n                blanchedalmond: [255, 235, 205],\r\n                blue: [0, 0, 255],\r\n                blueviolet: [138, 43, 226],\r\n                brown: [165, 42, 42],\r\n                burlywood: [222, 184, 135],\r\n                cadetblue: [95, 158, 160],\r\n                chartreuse: [127, 255, 0],\r\n                chocolate: [210, 105, 30],\r\n                coral: [255, 127, 80],\r\n                cornflowerblue: [100, 149, 237],\r\n                cornsilk: [255, 248, 220],\r\n                crimson: [220, 20, 60],\r\n                cyan: [0, 255, 255],\r\n                darkblue: [0, 0, 139],\r\n                darkcyan: [0, 139, 139],\r\n                darkgoldenrod: [184, 134, 11],\r\n                darkgray: [169, 169, 169],\r\n                darkgreen: [0, 100, 0],\r\n                darkgrey: [169, 169, 169],\r\n                darkkhaki: [189, 183, 107],\r\n                darkmagenta: [139, 0, 139],\r\n                darkolivegreen: [85, 107, 47],\r\n                darkorange: [255, 140, 0],\r\n                darkorchid: [153, 50, 204],\r\n                darkred: [139, 0, 0],\r\n                darksalmon: [233, 150, 122],\r\n                darkseagreen: [143, 188, 143],\r\n                darkslateblue: [72, 61, 139],\r\n                darkslategray: [47, 79, 79],\r\n                darkslategrey: [47, 79, 79],\r\n                darkturquoise: [0, 206, 209],\r\n                darkviolet: [148, 0, 211],\r\n                deeppink: [255, 20, 147],\r\n                deepskyblue: [0, 191, 255],\r\n                dimgray: [105, 105, 105],\r\n                dimgrey: [105, 105, 105],\r\n                dodgerblue: [30, 144, 255],\r\n                firebrick: [178, 34, 34],\r\n                floralwhite: [255, 250, 240],\r\n                forestgreen: [34, 139, 34],\r\n                fuchsia: [255, 0, 255],\r\n                gainsboro: [220, 220, 220],\r\n                ghostwhite: [248, 248, 255],\r\n                gold: [255, 215, 0],\r\n                goldenrod: [218, 165, 32],\r\n                gray: [128, 128, 128],\r\n                green: [0, 128, 0],\r\n                greenyellow: [173, 255, 47],\r\n                grey: [128, 128, 128],\r\n                honeydew: [240, 255, 240],\r\n                hotpink: [255, 105, 180],\r\n                indianred: [205, 92, 92],\r\n                indigo: [75, 0, 130],\r\n                ivory: [255, 255, 240],\r\n                khaki: [240, 230, 140],\r\n                lavender: [230, 230, 250],\r\n                lavenderblush: [255, 240, 245],\r\n                lawngreen: [124, 252, 0],\r\n                lemonchiffon: [255, 250, 205],\r\n                lightblue: [173, 216, 230],\r\n                lightcoral: [240, 128, 128],\r\n                lightcyan: [224, 255, 255],\r\n                lightgoldenrodyellow: [250, 250, 210],\r\n                lightgray: [211, 211, 211],\r\n                lightgreen: [144, 238, 144],\r\n                lightgrey: [211, 211, 211],\r\n                lightpink: [255, 182, 193],\r\n                lightsalmon: [255, 160, 122],\r\n                lightseagreen: [32, 178, 170],\r\n                lightskyblue: [135, 206, 250],\r\n                lightslategray: [119, 136, 153],\r\n                lightslategrey: [119, 136, 153],\r\n                lightsteelblue: [176, 196, 222],\r\n                lightyellow: [255, 255, 224],\r\n                lime: [0, 255, 0],\r\n                limegreen: [50, 205, 50],\r\n                linen: [250, 240, 230],\r\n                magenta: [255, 0, 255],\r\n                maroon: [128, 0, 0],\r\n                mediumaquamarine: [102, 205, 170],\r\n                mediumblue: [0, 0, 205],\r\n                mediumorchid: [186, 85, 211],\r\n                mediumpurple: [147, 112, 219],\r\n                mediumseagreen: [60, 179, 113],\r\n                mediumslateblue: [123, 104, 238],\r\n                mediumspringgreen: [0, 250, 154],\r\n                mediumturquoise: [72, 209, 204],\r\n                mediumvioletred: [199, 21, 133],\r\n                midnightblue: [25, 25, 112],\r\n                mintcream: [245, 255, 250],\r\n                mistyrose: [255, 228, 225],\r\n                moccasin: [255, 228, 181],\r\n                navajowhite: [255, 222, 173],\r\n                navy: [0, 0, 128],\r\n                oldlace: [253, 245, 230],\r\n                olive: [128, 128, 0],\r\n                olivedrab: [107, 142, 35],\r\n                orange: [255, 165, 0],\r\n                orangered: [255, 69, 0],\r\n                orchid: [218, 112, 214],\r\n                palegoldenrod: [238, 232, 170],\r\n                palegreen: [152, 251, 152],\r\n                paleturquoise: [175, 238, 238],\r\n                palevioletred: [219, 112, 147],\r\n                papayawhip: [255, 239, 213],\r\n                peachpuff: [255, 218, 185],\r\n                peru: [205, 133, 63],\r\n                pink: [255, 192, 203],\r\n                plum: [221, 160, 221],\r\n                powderblue: [176, 224, 230],\r\n                purple: [128, 0, 128],\r\n                rebeccapurple: [102, 51, 153],\r\n                red: [255, 0, 0],\r\n                rosybrown: [188, 143, 143],\r\n                royalblue: [65, 105, 225],\r\n                saddlebrown: [139, 69, 19],\r\n                salmon: [250, 128, 114],\r\n                sandybrown: [244, 164, 96],\r\n                seagreen: [46, 139, 87],\r\n                seashell: [255, 245, 238],\r\n                sienna: [160, 82, 45],\r\n                silver: [192, 192, 192],\r\n                skyblue: [135, 206, 235],\r\n                slateblue: [106, 90, 205],\r\n                slategray: [112, 128, 144],\r\n                slategrey: [112, 128, 144],\r\n                snow: [255, 250, 250],\r\n                springgreen: [0, 255, 127],\r\n                steelblue: [70, 130, 180],\r\n                tan: [210, 180, 140],\r\n                teal: [0, 128, 128],\r\n                thistle: [216, 191, 216],\r\n                tomato: [255, 99, 71],\r\n                turquoise: [64, 224, 208],\r\n                violet: [238, 130, 238],\r\n                wheat: [245, 222, 179],\r\n                white: [255, 255, 255],\r\n                whitesmoke: [245, 245, 245],\r\n                yellow: [255, 255, 0],\r\n                yellowgreen: [154, 205, 50]\r\n            };\r\n\r\n            var reverseKeywords = {};\r\n            for (var key in cssKeywords) {\r\n                reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\r\n            }\r\n        }, {}], 4: [function(require, module, exports) {\r\n            var conversions = require(3);\r\n\r\n            var convert = function() {\r\n                return new Converter();\r\n            }\r\n\r\n            for (var func in conversions) {\r\n                // export Raw versions\r\n                convert[func + \"Raw\"] = (function(func) {\r\n                    // accept array or plain args\r\n                    return function(arg) {\r\n                        if (typeof arg == \"number\")\r\n                            arg = Array.prototype.slice.call(arguments);\r\n                        return conversions[func](arg);\r\n                    }\r\n                })(func);\r\n\r\n                var pair = /(\\w+)2(\\w+)/.exec(func),\r\n                    from = pair[1],\r\n                    to = pair[2];\r\n\r\n                // export rgb2hsl and [\"rgb\"][\"hsl\"]\r\n                convert[from] = convert[from] || {};\r\n\r\n                convert[from][to] = convert[func] = (function(func) {\r\n                    return function(arg) {\r\n                        if (typeof arg == \"number\")\r\n                            arg = Array.prototype.slice.call(arguments);\r\n\r\n                        var val = conversions[func](arg);\r\n                        if (typeof val == \"string\" || val === undefined)\r\n                            return val; // keyword\r\n\r\n                        for (var i = 0; i < val.length; i++)\r\n                            val[i] = Math.round(val[i]);\r\n                        return val;\r\n                    }\r\n                })(func);\r\n            }\r\n\r\n            /* Converter does lazy conversion and caching */\r\n            var Converter = function() {\r\n                this.convs = {};\r\n            };\r\n\r\n            /* Either get the values for a space or\r\n              set the values for a space, depending on args */\r\n            Converter.prototype.routeSpace = function(space, args) {\r\n                var values = args[0];\r\n                if (values === undefined) {\r\n                    // color.rgb()\r\n                    return this.getValues(space);\r\n                }\r\n                // color.rgb(10, 10, 10)\r\n                if (typeof values == \"number\") {\r\n                    values = Array.prototype.slice.call(args);\r\n                }\r\n\r\n                return this.setValues(space, values);\r\n            };\r\n\r\n            /* Set the values for a space, invalidating cache */\r\n            Converter.prototype.setValues = function(space, values) {\r\n                this.space = space;\r\n                this.convs = {};\r\n                this.convs[space] = values;\r\n                return this;\r\n            };\r\n\r\n            /* Get the values for a space. If there's already\r\n              a conversion for the space, fetch it, otherwise\r\n              compute it */\r\n            Converter.prototype.getValues = function(space) {\r\n                var vals = this.convs[space];\r\n                if (!vals) {\r\n                    var fspace = this.space,\r\n                        from = this.convs[fspace];\r\n                    vals = convert[fspace][space](from);\r\n\r\n                    this.convs[space] = vals;\r\n                }\r\n                return vals;\r\n            };\r\n\r\n            [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\r\n                Converter.prototype[space] = function(vals) {\r\n                    return this.routeSpace(space, arguments);\r\n                }\r\n            });\r\n\r\n            module.exports = convert;\r\n        }, { \"3\": 3 }], 5: [function(require, module, exports) {\r\n            'use strict'\r\n\r\n            module.exports = {\r\n                \"aliceblue\": [240, 248, 255],\r\n                \"antiquewhite\": [250, 235, 215],\r\n                \"aqua\": [0, 255, 255],\r\n                \"aquamarine\": [127, 255, 212],\r\n                \"azure\": [240, 255, 255],\r\n                \"beige\": [245, 245, 220],\r\n                \"bisque\": [255, 228, 196],\r\n                \"black\": [0, 0, 0],\r\n                \"blanchedalmond\": [255, 235, 205],\r\n                \"blue\": [0, 0, 255],\r\n                \"blueviolet\": [138, 43, 226],\r\n                \"brown\": [165, 42, 42],\r\n                \"burlywood\": [222, 184, 135],\r\n                \"cadetblue\": [95, 158, 160],\r\n                \"chartreuse\": [127, 255, 0],\r\n                \"chocolate\": [210, 105, 30],\r\n                \"coral\": [255, 127, 80],\r\n                \"cornflowerblue\": [100, 149, 237],\r\n                \"cornsilk\": [255, 248, 220],\r\n                \"crimson\": [220, 20, 60],\r\n                \"cyan\": [0, 255, 255],\r\n                \"darkblue\": [0, 0, 139],\r\n                \"darkcyan\": [0, 139, 139],\r\n                \"darkgoldenrod\": [184, 134, 11],\r\n                \"darkgray\": [169, 169, 169],\r\n                \"darkgreen\": [0, 100, 0],\r\n                \"darkgrey\": [169, 169, 169],\r\n                \"darkkhaki\": [189, 183, 107],\r\n                \"darkmagenta\": [139, 0, 139],\r\n                \"darkolivegreen\": [85, 107, 47],\r\n                \"darkorange\": [255, 140, 0],\r\n                \"darkorchid\": [153, 50, 204],\r\n                \"darkred\": [139, 0, 0],\r\n                \"darksalmon\": [233, 150, 122],\r\n                \"darkseagreen\": [143, 188, 143],\r\n                \"darkslateblue\": [72, 61, 139],\r\n                \"darkslategray\": [47, 79, 79],\r\n                \"darkslategrey\": [47, 79, 79],\r\n                \"darkturquoise\": [0, 206, 209],\r\n                \"darkviolet\": [148, 0, 211],\r\n                \"deeppink\": [255, 20, 147],\r\n                \"deepskyblue\": [0, 191, 255],\r\n                \"dimgray\": [105, 105, 105],\r\n                \"dimgrey\": [105, 105, 105],\r\n                \"dodgerblue\": [30, 144, 255],\r\n                \"firebrick\": [178, 34, 34],\r\n                \"floralwhite\": [255, 250, 240],\r\n                \"forestgreen\": [34, 139, 34],\r\n                \"fuchsia\": [255, 0, 255],\r\n                \"gainsboro\": [220, 220, 220],\r\n                \"ghostwhite\": [248, 248, 255],\r\n                \"gold\": [255, 215, 0],\r\n                \"goldenrod\": [218, 165, 32],\r\n                \"gray\": [128, 128, 128],\r\n                \"green\": [0, 128, 0],\r\n                \"greenyellow\": [173, 255, 47],\r\n                \"grey\": [128, 128, 128],\r\n                \"honeydew\": [240, 255, 240],\r\n                \"hotpink\": [255, 105, 180],\r\n                \"indianred\": [205, 92, 92],\r\n                \"indigo\": [75, 0, 130],\r\n                \"ivory\": [255, 255, 240],\r\n                \"khaki\": [240, 230, 140],\r\n                \"lavender\": [230, 230, 250],\r\n                \"lavenderblush\": [255, 240, 245],\r\n                \"lawngreen\": [124, 252, 0],\r\n                \"lemonchiffon\": [255, 250, 205],\r\n                \"lightblue\": [173, 216, 230],\r\n                \"lightcoral\": [240, 128, 128],\r\n                \"lightcyan\": [224, 255, 255],\r\n                \"lightgoldenrodyellow\": [250, 250, 210],\r\n                \"lightgray\": [211, 211, 211],\r\n                \"lightgreen\": [144, 238, 144],\r\n                \"lightgrey\": [211, 211, 211],\r\n                \"lightpink\": [255, 182, 193],\r\n                \"lightsalmon\": [255, 160, 122],\r\n                \"lightseagreen\": [32, 178, 170],\r\n                \"lightskyblue\": [135, 206, 250],\r\n                \"lightslategray\": [119, 136, 153],\r\n                \"lightslategrey\": [119, 136, 153],\r\n                \"lightsteelblue\": [176, 196, 222],\r\n                \"lightyellow\": [255, 255, 224],\r\n                \"lime\": [0, 255, 0],\r\n                \"limegreen\": [50, 205, 50],\r\n                \"linen\": [250, 240, 230],\r\n                \"magenta\": [255, 0, 255],\r\n                \"maroon\": [128, 0, 0],\r\n                \"mediumaquamarine\": [102, 205, 170],\r\n                \"mediumblue\": [0, 0, 205],\r\n                \"mediumorchid\": [186, 85, 211],\r\n                \"mediumpurple\": [147, 112, 219],\r\n                \"mediumseagreen\": [60, 179, 113],\r\n                \"mediumslateblue\": [123, 104, 238],\r\n                \"mediumspringgreen\": [0, 250, 154],\r\n                \"mediumturquoise\": [72, 209, 204],\r\n                \"mediumvioletred\": [199, 21, 133],\r\n                \"midnightblue\": [25, 25, 112],\r\n                \"mintcream\": [245, 255, 250],\r\n                \"mistyrose\": [255, 228, 225],\r\n                \"moccasin\": [255, 228, 181],\r\n                \"navajowhite\": [255, 222, 173],\r\n                \"navy\": [0, 0, 128],\r\n                \"oldlace\": [253, 245, 230],\r\n                \"olive\": [128, 128, 0],\r\n                \"olivedrab\": [107, 142, 35],\r\n                \"orange\": [255, 165, 0],\r\n                \"orangered\": [255, 69, 0],\r\n                \"orchid\": [218, 112, 214],\r\n                \"palegoldenrod\": [238, 232, 170],\r\n                \"palegreen\": [152, 251, 152],\r\n                \"paleturquoise\": [175, 238, 238],\r\n                \"palevioletred\": [219, 112, 147],\r\n                \"papayawhip\": [255, 239, 213],\r\n                \"peachpuff\": [255, 218, 185],\r\n                \"peru\": [205, 133, 63],\r\n                \"pink\": [255, 192, 203],\r\n                \"plum\": [221, 160, 221],\r\n                \"powderblue\": [176, 224, 230],\r\n                \"purple\": [128, 0, 128],\r\n                \"rebeccapurple\": [102, 51, 153],\r\n                \"red\": [255, 0, 0],\r\n                \"rosybrown\": [188, 143, 143],\r\n                \"royalblue\": [65, 105, 225],\r\n                \"saddlebrown\": [139, 69, 19],\r\n                \"salmon\": [250, 128, 114],\r\n                \"sandybrown\": [244, 164, 96],\r\n                \"seagreen\": [46, 139, 87],\r\n                \"seashell\": [255, 245, 238],\r\n                \"sienna\": [160, 82, 45],\r\n                \"silver\": [192, 192, 192],\r\n                \"skyblue\": [135, 206, 235],\r\n                \"slateblue\": [106, 90, 205],\r\n                \"slategray\": [112, 128, 144],\r\n                \"slategrey\": [112, 128, 144],\r\n                \"snow\": [255, 250, 250],\r\n                \"springgreen\": [0, 255, 127],\r\n                \"steelblue\": [70, 130, 180],\r\n                \"tan\": [210, 180, 140],\r\n                \"teal\": [0, 128, 128],\r\n                \"thistle\": [216, 191, 216],\r\n                \"tomato\": [255, 99, 71],\r\n                \"turquoise\": [64, 224, 208],\r\n                \"violet\": [238, 130, 238],\r\n                \"wheat\": [245, 222, 179],\r\n                \"white\": [255, 255, 255],\r\n                \"whitesmoke\": [245, 245, 245],\r\n                \"yellow\": [255, 255, 0],\r\n                \"yellowgreen\": [154, 205, 50]\r\n            };\r\n        }, {}], 6: [function(require, module, exports) {\r\n            /**\r\n             * @namespace Chart\r\n             */\r\n            var Chart = require(20)();\r\n\r\n            Chart.helpers = require(36);\r\n\r\n            // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\r\n            require(18)(Chart);\r\n\r\n            Chart.defaults = require(16);\r\n            Chart.Element = require(17);\r\n            Chart.elements = require(31);\r\n            Chart.Interaction = require(19);\r\n            Chart.layouts = require(21);\r\n            Chart.platform = require(39);\r\n            Chart.plugins = require(22);\r\n            Chart.Ticks = require(25);\r\n\r\n            require(13)(Chart);\r\n            require(14)(Chart);\r\n            require(15)(Chart);\r\n            require(24)(Chart);\r\n            require(23)(Chart);\r\n            require(26)(Chart);\r\n\r\n            require(46)(Chart);\r\n            require(44)(Chart);\r\n            require(45)(Chart);\r\n            // require('./scales/scale.logarithmic')(Chart);\r\n            // require('./scales/scale.radialLinear')(Chart);\r\n            // require('./scales/scale.time')(Chart);\r\n\r\n            // Controllers must be loaded after elements\r\n            // See Chart.core.datasetController.dataElementType\r\n            require(10)(Chart);\r\n            // require('./controllers/controller.bubble')(Chart);\r\n            require(11)(Chart);\r\n            require(12)(Chart);\r\n            // require('./controllers/controller.polarArea')(Chart);\r\n            // require('./controllers/controller.radar')(Chart);\r\n            // require('./controllers/controller.scatter')(Chart);\r\n\r\n            require(7)(Chart);\r\n            // require('./charts/Chart.Bubble')(Chart);\r\n            require(8)(Chart);\r\n            require(9)(Chart);\r\n            // require('./charts/Chart.PolarArea')(Chart);\r\n            // require('./charts/Chart.Radar')(Chart);\r\n            // require('./charts/Chart.Scatter')(Chart);\r\n\r\n            // Loading built-it plugins\r\n            var plugins = require(40);\r\n            for (var k in plugins) {\r\n                if (plugins.hasOwnProperty(k)) {\r\n                    Chart.plugins.register(plugins[k]);\r\n                }\r\n            }\r\n\r\n            Chart.platform.initialize();\r\n\r\n            module.exports = Chart;\r\n            if (typeof window !== 'undefined') {\r\n                window.Chart = Chart;\r\n            }\r\n        }, { \"10\": 10, \"11\": 11, \"12\": 12, \"13\": 13, \"14\": 14, \"15\": 15, \"16\": 16, \"17\": 17, \"18\": 18, \"19\": 19, \"20\": 20, \"21\": 21, \"22\": 22, \"23\": 23, \"24\": 24, \"25\": 25, \"26\": 26, \"31\": 31, \"36\": 36, \"39\": 39, \"40\": 40, \"44\": 44, \"45\": 45, \"46\": 46, \"7\": 7, \"8\": 8, \"9\": 9 }], 7: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Bar = function(context, config) {\r\n                    config.type = 'bar';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 8: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Doughnut = function(context, config) {\r\n                    config.type = 'doughnut';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 9: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Line = function(context, config) {\r\n                    config.type = 'line';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n            };\r\n        }, {}], 10: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('bar', {\r\n                hover: {\r\n                    mode: 'label'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'category',\r\n\r\n                        // Specific to Bar Controller\r\n                        categoryPercentage: 0.8,\r\n                        barPercentage: 0.9,\r\n\r\n                        // offset settings\r\n                        offset: true,\r\n\r\n                        // grid line settings\r\n                        gridLines: {\r\n                            offsetGridLines: true\r\n                        }\r\n                    }],\r\n\r\n                    yAxes: [{\r\n                        type: 'linear'\r\n                    }]\r\n                }\r\n            });\r\n\r\n            defaults._set('horizontalBar', {\r\n                hover: {\r\n                    mode: 'index',\r\n                    axis: 'y'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'linear',\r\n                        position: 'bottom'\r\n                    }],\r\n\r\n                    yAxes: [{\r\n                        position: 'left',\r\n                        type: 'category',\r\n\r\n                        // Specific to Horizontal Bar Controller\r\n                        categoryPercentage: 0.8,\r\n                        barPercentage: 0.9,\r\n\r\n                        // offset settings\r\n                        offset: true,\r\n\r\n                        // grid line settings\r\n                        gridLines: {\r\n                            offsetGridLines: true\r\n                        }\r\n                    }]\r\n                },\r\n\r\n                elements: {\r\n                    rectangle: {\r\n                        borderSkipped: 'left'\r\n                    }\r\n                },\r\n\r\n                tooltips: {\r\n                    callbacks: {\r\n                        title: function(item, data) {\r\n                            // Pick first xLabel for now\r\n                            var title = '';\r\n\r\n                            if (item.length > 0) {\r\n                                if (item[0].yLabel) {\r\n                                    title = item[0].yLabel;\r\n                                } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\r\n                                    title = data.labels[item[0].index];\r\n                                }\r\n                            }\r\n\r\n                            return title;\r\n                        },\r\n\r\n                        label: function(item, data) {\r\n                            var datasetLabel = data.datasets[item.datasetIndex].label || '';\r\n                            return datasetLabel + ': ' + item.xLabel;\r\n                        }\r\n                    },\r\n                    mode: 'index',\r\n                    axis: 'y'\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\r\n             * @private\r\n             */\r\n            function computeMinSampleSize(scale, pixels) {\r\n                var min = scale.isHorizontal() ? scale.width : scale.height;\r\n                var ticks = scale.getTicks();\r\n                var prev, curr, i, ilen;\r\n\r\n                for (i = 1, ilen = pixels.length; i < ilen; ++i) {\r\n                    min = Math.min(min, pixels[i] - pixels[i - 1]);\r\n                }\r\n\r\n                for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n                    curr = scale.getPixelForTick(i);\r\n                    min = i > 0 ? Math.min(min, curr - prev) : min;\r\n                    prev = curr;\r\n                }\r\n\r\n                return min;\r\n            }\r\n\r\n            /**\r\n             * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\r\n             * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\r\n             * mode currently always generates bars equally sized (until we introduce scriptable options?).\r\n             * @private\r\n             */\r\n            function computeFitCategoryTraits(index, ruler, options) {\r\n                var thickness = options.barThickness;\r\n                var count = ruler.stackCount;\r\n                var curr = ruler.pixels[index];\r\n                var size, ratio;\r\n\r\n                if (helpers.isNullOrUndef(thickness)) {\r\n                    size = ruler.min * options.categoryPercentage;\r\n                    ratio = options.barPercentage;\r\n                } else {\r\n                    // When bar thickness is enforced, category and bar percentages are ignored.\r\n                    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\r\n                    // and deprecate barPercentage since this value is ignored when thickness is absolute.\r\n                    size = thickness * count;\r\n                    ratio = 1;\r\n                }\r\n\r\n                return {\r\n                    chunk: size / count,\r\n                    ratio: ratio,\r\n                    start: curr - (size / 2)\r\n                };\r\n            }\r\n\r\n            /**\r\n             * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\r\n             * percentage options are 1), based on the previous and following categories. This mode\r\n             * generates bars with different widths when data are not evenly spaced.\r\n             * @private\r\n             */\r\n            function computeFlexCategoryTraits(index, ruler, options) {\r\n                var pixels = ruler.pixels;\r\n                var curr = pixels[index];\r\n                var prev = index > 0 ? pixels[index - 1] : null;\r\n                var next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n                var percent = options.categoryPercentage;\r\n                var start, size;\r\n\r\n                if (prev === null) {\r\n                    // first data: its size is double based on the next point or,\r\n                    // if it's also the last data, we use the scale end extremity.\r\n                    prev = curr - (next === null ? ruler.end - curr : next - curr);\r\n                }\r\n\r\n                if (next === null) {\r\n                    // last data: its size is also double based on the previous point.\r\n                    next = curr + curr - prev;\r\n                }\r\n\r\n                start = curr - ((curr - prev) / 2) * percent;\r\n                size = ((next - prev) / 2) * percent;\r\n\r\n                return {\r\n                    chunk: size / ruler.stackCount,\r\n                    ratio: options.barPercentage,\r\n                    start: start\r\n                };\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.controllers.bar = Chart.DatasetController.extend({\r\n                    dataElementType: elements.Rectangle,\r\n\r\n                    initialize: function() {\r\n                        var me = this;\r\n                        var meta;\r\n\r\n                        Chart.DatasetController.prototype.initialize.apply(me, arguments);\r\n\r\n                        meta = me.getMeta();\r\n                        meta.stack = me.getDataset().stack;\r\n                        meta.bar = true;\r\n                    },\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var rects = me.getMeta().data;\r\n                        var i, ilen;\r\n\r\n                        me._ruler = me.getRuler();\r\n\r\n                        for (i = 0, ilen = rects.length; i < ilen; ++i) {\r\n                            me.updateElement(rects[i], i, reset);\r\n                        }\r\n                    },\r\n\r\n                    updateElement: function(rectangle, index, reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var dataset = me.getDataset();\r\n                        var custom = rectangle.custom || {};\r\n                        var rectangleOptions = chart.options.elements.rectangle;\r\n\r\n                        rectangle._xScale = me.getScaleForId(meta.xAxisID);\r\n                        rectangle._yScale = me.getScaleForId(meta.yAxisID);\r\n                        rectangle._datasetIndex = me.index;\r\n                        rectangle._index = index;\r\n\r\n                        rectangle._model = {\r\n                            datasetLabel: dataset.label,\r\n                            label: chart.data.labels[index],\r\n                            borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\r\n                            backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\r\n                            borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\r\n                            borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\r\n                        };\r\n\r\n                        me.updateElementGeometry(rectangle, index, reset);\r\n\r\n                        rectangle.pivot();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    updateElementGeometry: function(rectangle, index, reset) {\r\n                        var me = this;\r\n                        var model = rectangle._model;\r\n                        var vscale = me.getValueScale();\r\n                        var base = vscale.getBasePixel();\r\n                        var horizontal = vscale.isHorizontal();\r\n                        var ruler = me._ruler || me.getRuler();\r\n                        var vpixels = me.calculateBarValuePixels(me.index, index);\r\n                        var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\r\n\r\n                        model.horizontal = horizontal;\r\n                        model.base = reset ? base : vpixels.base;\r\n                        model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\r\n                        model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\r\n                        model.height = horizontal ? ipixels.size : undefined;\r\n                        model.width = horizontal ? undefined : ipixels.size;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScaleId: function() {\r\n                        return this.getMeta().yAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScaleId: function() {\r\n                        return this.getMeta().xAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScale: function() {\r\n                        return this.getScaleForId(this.getValueScaleId());\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScale: function() {\r\n                        return this.getScaleForId(this.getIndexScaleId());\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the stacks based on groups and bar visibility.\r\n                     * @param {Number} [last] - The dataset index\r\n                     * @returns {Array} The stack list\r\n                     * @private\r\n                     */\r\n                    _getStacks: function(last) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var scale = me.getIndexScale();\r\n                        var stacked = scale.options.stacked;\r\n                        var ilen = last === undefined ? chart.data.datasets.length : last + 1;\r\n                        var stacks = [];\r\n                        var i, meta;\r\n\r\n                        for (i = 0; i < ilen; ++i) {\r\n                            meta = chart.getDatasetMeta(i);\r\n                            if (meta.bar && chart.isDatasetVisible(i) &&\r\n                                (stacked === false ||\r\n                                    (stacked === true && stacks.indexOf(meta.stack) === -1) ||\r\n                                    (stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\r\n                                stacks.push(meta.stack);\r\n                            }\r\n                        }\r\n\r\n                        return stacks;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the effective number of stacks based on groups and bar visibility.\r\n                     * @private\r\n                     */\r\n                    getStackCount: function() {\r\n                        return this._getStacks().length;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the stack index for the given dataset based on groups and bar visibility.\r\n                     * @param {Number} [datasetIndex] - The dataset index\r\n                     * @param {String} [name] - The stack name to find\r\n                     * @returns {Number} The stack index\r\n                     * @private\r\n                     */\r\n                    getStackIndex: function(datasetIndex, name) {\r\n                        var stacks = this._getStacks(datasetIndex);\r\n                        var index = (name !== undefined)\r\n                            ? stacks.indexOf(name)\r\n                            : -1; // indexOf returns -1 if element is not present\r\n\r\n                        return (index === -1)\r\n                            ? stacks.length - 1\r\n                            : index;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getRuler: function() {\r\n                        var me = this;\r\n                        var scale = me.getIndexScale();\r\n                        var stackCount = me.getStackCount();\r\n                        var datasetIndex = me.index;\r\n                        var isHorizontal = scale.isHorizontal();\r\n                        var start = isHorizontal ? scale.left : scale.top;\r\n                        var end = start + (isHorizontal ? scale.width : scale.height);\r\n                        var pixels = [];\r\n                        var i, ilen, min;\r\n\r\n                        for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\r\n                            pixels.push(scale.getPixelForValue(null, i, datasetIndex));\r\n                        }\r\n\r\n                        min = helpers.isNullOrUndef(scale.options.barThickness)\r\n                            ? computeMinSampleSize(scale, pixels)\r\n                            : -1;\r\n\r\n                        return {\r\n                            min: min,\r\n                            pixels: pixels,\r\n                            start: start,\r\n                            end: end,\r\n                            stackCount: stackCount,\r\n                            scale: scale\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Note: pixel values are not clamped to the scale area.\r\n                     * @private\r\n                     */\r\n                    calculateBarValuePixels: function(datasetIndex, index) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var scale = me.getValueScale();\r\n                        var datasets = chart.data.datasets;\r\n                        var value = scale.getRightValue(datasets[datasetIndex].data[index]);\r\n                        var stacked = scale.options.stacked;\r\n                        var stack = meta.stack;\r\n                        var start = 0;\r\n                        var i, imeta, ivalue, base, head, size;\r\n\r\n                        if (stacked || (stacked === undefined && stack !== undefined)) {\r\n                            for (i = 0; i < datasetIndex; ++i) {\r\n                                imeta = chart.getDatasetMeta(i);\r\n\r\n                                if (imeta.bar &&\r\n                                    imeta.stack === stack &&\r\n                                    imeta.controller.getValueScaleId() === scale.id &&\r\n                                    chart.isDatasetVisible(i)) {\r\n                                    ivalue = scale.getRightValue(datasets[i].data[index]);\r\n                                    if ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\r\n                                        start += ivalue;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        base = scale.getPixelForValue(start);\r\n                        head = scale.getPixelForValue(start + value);\r\n                        size = (head - base) / 2;\r\n\r\n                        return {\r\n                            size: size,\r\n                            base: base,\r\n                            head: head,\r\n                            center: head + size / 2\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    calculateBarIndexPixels: function(datasetIndex, index, ruler) {\r\n                        var me = this;\r\n                        var options = ruler.scale.options;\r\n                        var range = options.barThickness === 'flex'\r\n                            ? computeFlexCategoryTraits(index, ruler, options)\r\n                            : computeFitCategoryTraits(index, ruler, options);\r\n\r\n                        var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\r\n                        var center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\r\n                        var size = Math.min(\r\n                            helpers.valueOrDefault(options.maxBarThickness, Infinity),\r\n                            range.chunk * range.ratio);\r\n\r\n                        return {\r\n                            base: center - size / 2,\r\n                            head: center + size / 2,\r\n                            center: center,\r\n                            size: size\r\n                        };\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var scale = me.getValueScale();\r\n                        var rects = me.getMeta().data;\r\n                        var dataset = me.getDataset();\r\n                        var ilen = rects.length;\r\n                        var i = 0;\r\n\r\n                        helpers.canvas.clipArea(chart.ctx, chart.chartArea);\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            if (!isNaN(scale.getRightValue(dataset.data[i]))) {\r\n                                rects[i].draw();\r\n                            }\r\n                        }\r\n\r\n                        helpers.canvas.unclipArea(chart.ctx);\r\n                    },\r\n\r\n                    setHoverStyle: function(rectangle) {\r\n                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n                        var index = rectangle._index;\r\n                        var custom = rectangle.custom || {};\r\n                        var model = rectangle._model;\r\n\r\n                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    removeHoverStyle: function(rectangle) {\r\n                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n                        var index = rectangle._index;\r\n                        var custom = rectangle.custom || {};\r\n                        var model = rectangle._model;\r\n                        var rectangleElementOptions = this.chart.options.elements.rectangle;\r\n\r\n                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\r\n                        model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\r\n                        model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\r\n                    }\r\n                });\r\n\r\n                Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScaleId: function() {\r\n                        return this.getMeta().xAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScaleId: function() {\r\n                        return this.getMeta().yAxisID;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 11: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('doughnut', {\r\n                animation: {\r\n                    // Boolean - Whether we animate the rotation of the Doughnut\r\n                    animateRotate: true,\r\n                    // Boolean - Whether we animate scaling the Doughnut from the centre\r\n                    animateScale: false\r\n                },\r\n                hover: {\r\n                    mode: 'single'\r\n                },\r\n                legendCallback: function(chart) {\r\n                    var text = [];\r\n                    text.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n                    var data = chart.data;\r\n                    var datasets = data.datasets;\r\n                    var labels = data.labels;\r\n\r\n                    if (datasets.length) {\r\n                        for (var i = 0; i < datasets[0].data.length; ++i) {\r\n                            text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\r\n                            if (labels[i]) {\r\n                                text.push(labels[i]);\r\n                            }\r\n                            text.push('</li>');\r\n                        }\r\n                    }\r\n\r\n                    text.push('</ul>');\r\n                    return text.join('');\r\n                },\r\n                legend: {\r\n                    labels: {\r\n                        generateLabels: function(chart) {\r\n                            var data = chart.data;\r\n                            if (data.labels.length && data.datasets.length) {\r\n                                return data.labels.map(function(label, i) {\r\n                                    var meta = chart.getDatasetMeta(0);\r\n                                    var ds = data.datasets[0];\r\n                                    var arc = meta.data[i];\r\n                                    var custom = arc && arc.custom || {};\r\n                                    var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n                                    var arcOpts = chart.options.elements.arc;\r\n                                    var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n                                    var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n                                    var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\r\n                                    return {\r\n                                        text: label,\r\n                                        fillStyle: fill,\r\n                                        strokeStyle: stroke,\r\n                                        lineWidth: bw,\r\n                                        hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n                                        // Extra data used for toggling the correct item\r\n                                        index: i\r\n                                    };\r\n                                });\r\n                            }\r\n                            return [];\r\n                        }\r\n                    },\r\n\r\n                    onClick: function(e, legendItem) {\r\n                        var index = legendItem.index;\r\n                        var chart = this.chart;\r\n                        var i, ilen, meta;\r\n\r\n                        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n                            meta = chart.getDatasetMeta(i);\r\n                            // toggle visibility of index if exists\r\n                            if (meta.data[index]) {\r\n                                meta.data[index].hidden = !meta.data[index].hidden;\r\n                            }\r\n                        }\r\n\r\n                        chart.update();\r\n                    }\r\n                },\r\n\r\n                // The percentage of the chart that we cut out of the middle.\r\n                cutoutPercentage: 50,\r\n\r\n                // The rotation of the chart, where the first data arc begins.\r\n                rotation: Math.PI * -0.5,\r\n\r\n                // The total circumference of the chart.\r\n                circumference: Math.PI * 2.0,\r\n\r\n                // Need to override these to give a nice default\r\n                tooltips: {\r\n                    callbacks: {\r\n                        title: function() {\r\n                            return '';\r\n                        },\r\n                        label: function(tooltipItem, data) {\r\n                            var dataLabel = data.labels[tooltipItem.index];\r\n                            var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\r\n                            if (helpers.isArray(dataLabel)) {\r\n                                // show value on first line of multiline label\r\n                                // need to clone because we are changing the value\r\n                                dataLabel = dataLabel.slice();\r\n                                dataLabel[0] += value;\r\n                            } else {\r\n                                dataLabel += value;\r\n                            }\r\n\r\n                            return dataLabel;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            defaults._set('pie', helpers.clone(defaults.doughnut));\r\n            defaults._set('pie', {\r\n                cutoutPercentage: 0\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\r\n                    dataElementType: elements.Arc,\r\n\r\n                    linkScales: helpers.noop,\r\n\r\n                    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\r\n                    getRingIndex: function(datasetIndex) {\r\n                        var ringIndex = 0;\r\n\r\n                        for (var j = 0; j < datasetIndex; ++j) {\r\n                            if (this.chart.isDatasetVisible(j)) {\r\n                                ++ringIndex;\r\n                            }\r\n                        }\r\n\r\n                        return ringIndex;\r\n                    },\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var chartArea = chart.chartArea;\r\n                        var opts = chart.options;\r\n                        var arcOpts = opts.elements.arc;\r\n                        var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\r\n                        var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\r\n                        var minSize = Math.min(availableWidth, availableHeight);\r\n                        var offset = { x: 0, y: 0 };\r\n                        var meta = me.getMeta();\r\n                        var cutoutPercentage = opts.cutoutPercentage;\r\n                        var circumference = opts.circumference;\r\n\r\n                        // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\r\n                        if (circumference < Math.PI * 2.0) {\r\n                            var startAngle = opts.rotation % (Math.PI * 2.0);\r\n                            startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\r\n                            var endAngle = startAngle + circumference;\r\n                            var start = { x: Math.cos(startAngle), y: Math.sin(startAngle) };\r\n                            var end = { x: Math.cos(endAngle), y: Math.sin(endAngle) };\r\n                            var contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\r\n                            var contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\r\n                            var contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\r\n                            var contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\r\n                            var cutout = cutoutPercentage / 100.0;\r\n                            var min = { x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout)) };\r\n                            var max = { x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout)) };\r\n                            var size = { width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5 };\r\n                            minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\r\n                            offset = { x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5 };\r\n                        }\r\n\r\n                        chart.borderWidth = me.getMaxBorderWidth(meta.data);\r\n                        chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\r\n                        chart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\r\n                        chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n                        chart.offsetX = offset.x * chart.outerRadius;\r\n                        chart.offsetY = offset.y * chart.outerRadius;\r\n\r\n                        meta.total = me.calculateTotal();\r\n\r\n                        me.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\r\n                        me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\r\n\r\n                        helpers.each(meta.data, function(arc, index) {\r\n                            me.updateElement(arc, index, reset);\r\n                        });\r\n                    },\r\n\r\n                    updateElement: function(arc, index, reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var chartArea = chart.chartArea;\r\n                        var opts = chart.options;\r\n                        var animationOpts = opts.animation;\r\n                        var centerX = (chartArea.left + chartArea.right) / 2;\r\n                        var centerY = (chartArea.top + chartArea.bottom) / 2;\r\n                        var startAngle = opts.rotation; // non reset case handled later\r\n                        var endAngle = opts.rotation; // non reset case handled later\r\n                        var dataset = me.getDataset();\r\n                        var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\r\n                        var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\r\n                        var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\r\n                        var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n\r\n                        helpers.extend(arc, {\r\n                            // Utility\r\n                            _datasetIndex: me.index,\r\n                            _index: index,\r\n\r\n                            // Desired view properties\r\n                            _model: {\r\n                                x: centerX + chart.offsetX,\r\n                                y: centerY + chart.offsetY,\r\n                                startAngle: startAngle,\r\n                                endAngle: endAngle,\r\n                                circumference: circumference,\r\n                                outerRadius: outerRadius,\r\n                                innerRadius: innerRadius,\r\n                                label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\r\n                            }\r\n                        });\r\n\r\n                        var model = arc._model;\r\n                        // Resets the visual styles\r\n                        this.removeHoverStyle(arc);\r\n\r\n                        // Set correct angles if not resetting\r\n                        if (!reset || !animationOpts.animateRotate) {\r\n                            if (index === 0) {\r\n                                model.startAngle = opts.rotation;\r\n                            } else {\r\n                                model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\r\n                            }\r\n\r\n                            model.endAngle = model.startAngle + model.circumference;\r\n                        }\r\n\r\n                        arc.pivot();\r\n                    },\r\n\r\n                    removeHoverStyle: function(arc) {\r\n                        Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n                    },\r\n\r\n                    calculateTotal: function() {\r\n                        var dataset = this.getDataset();\r\n                        var meta = this.getMeta();\r\n                        var total = 0;\r\n                        var value;\r\n\r\n                        helpers.each(meta.data, function(element, index) {\r\n                            value = dataset.data[index];\r\n                            if (!isNaN(value) && !element.hidden) {\r\n                                total += Math.abs(value);\r\n                            }\r\n                        });\r\n\r\n                        /* if (total === 0) {\r\n                            total = NaN;\r\n                        }*/\r\n\r\n                        return total;\r\n                    },\r\n\r\n                    calculateCircumference: function(value) {\r\n                        var total = this.getMeta().total;\r\n                        if (total > 0 && !isNaN(value)) {\r\n                            return (Math.PI * 2.0) * (Math.abs(value) / total);\r\n                        }\r\n                        return 0;\r\n                    },\r\n\r\n                    // gets the max border or hover width to properly scale pie charts\r\n                    getMaxBorderWidth: function(arcs) {\r\n                        var max = 0;\r\n                        var index = this.index;\r\n                        var length = arcs.length;\r\n                        var borderWidth;\r\n                        var hoverWidth;\r\n\r\n                        for (var i = 0; i < length; i++) {\r\n                            borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\r\n                            hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\r\n\r\n                            max = borderWidth > max ? borderWidth : max;\r\n                            max = hoverWidth > max ? hoverWidth : max;\r\n                        }\r\n                        return max;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 12: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('line', {\r\n                showLines: true,\r\n                spanGaps: false,\r\n\r\n                hover: {\r\n                    mode: 'label'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'category',\r\n                        id: 'x-axis-0'\r\n                    }],\r\n                    yAxes: [{\r\n                        type: 'linear',\r\n                        id: 'y-axis-0'\r\n                    }]\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                function lineEnabled(dataset, options) {\r\n                    return helpers.valueOrDefault(dataset.showLine, options.showLines);\r\n                }\r\n\r\n                Chart.controllers.line = Chart.DatasetController.extend({\r\n                    datasetElementType: elements.Line,\r\n\r\n                    dataElementType: elements.Point,\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var line = meta.dataset;\r\n                        var points = meta.data || [];\r\n                        var options = me.chart.options;\r\n                        var lineElementOptions = options.elements.line;\r\n                        var scale = me.getScaleForId(meta.yAxisID);\r\n                        var i, ilen, custom;\r\n                        var dataset = me.getDataset();\r\n                        var showLine = lineEnabled(dataset, options);\r\n\r\n                        // Update Line\r\n                        if (showLine) {\r\n                            custom = line.custom || {};\r\n\r\n                            // Compatibility: If the properties are defined with only the old name, use those values\r\n                            if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n                                dataset.lineTension = dataset.tension;\r\n                            }\r\n\r\n                            // Utility\r\n                            line._scale = scale;\r\n                            line._datasetIndex = me.index;\r\n                            // Data\r\n                            line._children = points;\r\n                            // Model\r\n                            line._model = {\r\n                                // Appearance\r\n                                // The default behavior of lines is to break at null values, according\r\n                                // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\r\n                                // This option gives lines the ability to span gaps\r\n                                spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\r\n                                tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n                                backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n                                borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n                                borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n                                borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n                                borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n                                borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n                                borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n                                fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n                                steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\r\n                                cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\r\n                            };\r\n\r\n                            line.pivot();\r\n                        }\r\n\r\n                        // Update Points\r\n                        for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                            me.updateElement(points[i], i, reset);\r\n                        }\r\n\r\n                        if (showLine && line._model.tension !== 0) {\r\n                            me.updateBezierControlPoints();\r\n                        }\r\n\r\n                        // Now pivot the point for animation\r\n                        for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                            points[i].pivot();\r\n                        }\r\n                    },\r\n\r\n                    getPointBackgroundColor: function(point, index) {\r\n                        var backgroundColor = this.chart.options.elements.point.backgroundColor;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (custom.backgroundColor) {\r\n                            backgroundColor = custom.backgroundColor;\r\n                        } else if (dataset.pointBackgroundColor) {\r\n                            backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\r\n                        } else if (dataset.backgroundColor) {\r\n                            backgroundColor = dataset.backgroundColor;\r\n                        }\r\n\r\n                        return backgroundColor;\r\n                    },\r\n\r\n                    getPointBorderColor: function(point, index) {\r\n                        var borderColor = this.chart.options.elements.point.borderColor;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (custom.borderColor) {\r\n                            borderColor = custom.borderColor;\r\n                        } else if (dataset.pointBorderColor) {\r\n                            borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\r\n                        } else if (dataset.borderColor) {\r\n                            borderColor = dataset.borderColor;\r\n                        }\r\n\r\n                        return borderColor;\r\n                    },\r\n\r\n                    getPointBorderWidth: function(point, index) {\r\n                        var borderWidth = this.chart.options.elements.point.borderWidth;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (!isNaN(custom.borderWidth)) {\r\n                            borderWidth = custom.borderWidth;\r\n                        } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\r\n                            borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\r\n                        } else if (!isNaN(dataset.borderWidth)) {\r\n                            borderWidth = dataset.borderWidth;\r\n                        }\r\n\r\n                        return borderWidth;\r\n                    },\r\n\r\n                    updateElement: function(point, index, reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var custom = point.custom || {};\r\n                        var dataset = me.getDataset();\r\n                        var datasetIndex = me.index;\r\n                        var value = dataset.data[index];\r\n                        var yScale = me.getScaleForId(meta.yAxisID);\r\n                        var xScale = me.getScaleForId(meta.xAxisID);\r\n                        var pointOptions = me.chart.options.elements.point;\r\n                        var x, y;\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n                            dataset.pointRadius = dataset.radius;\r\n                        }\r\n                        if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\r\n                            dataset.pointHitRadius = dataset.hitRadius;\r\n                        }\r\n\r\n                        x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\r\n                        y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\r\n\r\n                        // Utility\r\n                        point._xScale = xScale;\r\n                        point._yScale = yScale;\r\n                        point._datasetIndex = datasetIndex;\r\n                        point._index = index;\r\n\r\n                        // Desired view properties\r\n                        point._model = {\r\n                            x: x,\r\n                            y: y,\r\n                            skip: custom.skip || isNaN(x) || isNaN(y),\r\n                            // Appearance\r\n                            radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\r\n                            pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\r\n                            backgroundColor: me.getPointBackgroundColor(point, index),\r\n                            borderColor: me.getPointBorderColor(point, index),\r\n                            borderWidth: me.getPointBorderWidth(point, index),\r\n                            tension: meta.dataset._model ? meta.dataset._model.tension : 0,\r\n                            steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\r\n                            // Tooltip\r\n                            hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\r\n                        };\r\n                    },\r\n\r\n                    calculatePointY: function(value, index, datasetIndex) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var yScale = me.getScaleForId(meta.yAxisID);\r\n                        var sumPos = 0;\r\n                        var sumNeg = 0;\r\n                        var i, ds, dsMeta;\r\n\r\n                        if (yScale.options.stacked) {\r\n                            for (i = 0; i < datasetIndex; i++) {\r\n                                ds = chart.data.datasets[i];\r\n                                dsMeta = chart.getDatasetMeta(i);\r\n                                if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\r\n                                    var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\r\n                                    if (stackedRightValue < 0) {\r\n                                        sumNeg += stackedRightValue || 0;\r\n                                    } else {\r\n                                        sumPos += stackedRightValue || 0;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            var rightValue = Number(yScale.getRightValue(value));\r\n                            if (rightValue < 0) {\r\n                                return yScale.getPixelForValue(sumNeg + rightValue);\r\n                            }\r\n                            return yScale.getPixelForValue(sumPos + rightValue);\r\n                        }\r\n\r\n                        return yScale.getPixelForValue(value);\r\n                    },\r\n\r\n                    updateBezierControlPoints: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var area = me.chart.chartArea;\r\n                        var points = (meta.data || []);\r\n                        var i, ilen, point, model, controlPoints;\r\n\r\n                        // Only consider points that are drawn in case the spanGaps option is used\r\n                        if (meta.dataset._model.spanGaps) {\r\n                            points = points.filter(function(pt) {\r\n                                return !pt._model.skip;\r\n                            });\r\n                        }\r\n\r\n                        function capControlPoint(pt, min, max) {\r\n                            return Math.max(Math.min(pt, max), min);\r\n                        }\r\n\r\n                        if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\r\n                            helpers.splineCurveMonotone(points);\r\n                        } else {\r\n                            for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                                point = points[i];\r\n                                model = point._model;\r\n                                controlPoints = helpers.splineCurve(\r\n                                    helpers.previousItem(points, i)._model,\r\n                                    model,\r\n                                    helpers.nextItem(points, i)._model,\r\n                                    meta.dataset._model.tension\r\n                                );\r\n                                model.controlPointPreviousX = controlPoints.previous.x;\r\n                                model.controlPointPreviousY = controlPoints.previous.y;\r\n                                model.controlPointNextX = controlPoints.next.x;\r\n                                model.controlPointNextY = controlPoints.next.y;\r\n                            }\r\n                        }\r\n\r\n                        if (me.chart.options.elements.line.capBezierPoints) {\r\n                            for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                                model = points[i]._model;\r\n                                model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\r\n                                model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\r\n                                model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\r\n                                model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var points = meta.data || [];\r\n                        var area = chart.chartArea;\r\n                        var ilen = points.length;\r\n                        var i = 0;\r\n\r\n                        helpers.canvas.clipArea(chart.ctx, area);\r\n\r\n                        if (lineEnabled(me.getDataset(), chart.options)) {\r\n                            meta.dataset.draw();\r\n                        }\r\n\r\n                        helpers.canvas.unclipArea(chart.ctx);\r\n\r\n                        // Draw the points\r\n                        for (; i < ilen; ++i) {\r\n                            points[i].draw(area);\r\n                        }\r\n                    },\r\n\r\n                    setHoverStyle: function(point) {\r\n                        // Point\r\n                        var dataset = this.chart.data.datasets[point._datasetIndex];\r\n                        var index = point._index;\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n\r\n                        model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n                        model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    removeHoverStyle: function(point) {\r\n                        var me = this;\r\n                        var dataset = me.chart.data.datasets[point._datasetIndex];\r\n                        var index = point._index;\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n                            dataset.pointRadius = dataset.radius;\r\n                        }\r\n\r\n                        model.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\r\n                        model.backgroundColor = me.getPointBackgroundColor(point, index);\r\n                        model.borderColor = me.getPointBorderColor(point, index);\r\n                        model.borderWidth = me.getPointBorderWidth(point, index);\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 13: [function(require, module, exports) {\r\n            /* global window: false */\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                animation: {\r\n                    duration: 1000,\r\n                    easing: 'easeOutQuart',\r\n                    onProgress: helpers.noop,\r\n                    onComplete: helpers.noop\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.Animation = Element.extend({\r\n                    chart: null, // the animation associated chart instance\r\n                    currentStep: 0, // the current animation step\r\n                    numSteps: 60, // default number of steps\r\n                    easing: '', // the easing to use for this animation\r\n                    render: null, // render function used by the animation service\r\n\r\n                    onAnimationProgress: null, // user specified callback to fire on each step of the animation\r\n                    onAnimationComplete: null, // user specified callback to fire when the animation finishes\r\n                });\r\n\r\n                Chart.animationService = {\r\n                    frameDuration: 17,\r\n                    animations: [],\r\n                    dropFrames: 0,\r\n                    request: null,\r\n\r\n                    /**\r\n                     * @param {Chart} chart - The chart to animate.\r\n                     * @param {Chart.Animation} animation - The animation that we will animate.\r\n                     * @param {Number} duration - The animation duration in ms.\r\n                     * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\r\n                     */\r\n                    addAnimation: function(chart, animation, duration, lazy) {\r\n                        var animations = this.animations;\r\n                        var i, ilen;\r\n\r\n                        animation.chart = chart;\r\n\r\n                        if (!lazy) {\r\n                            chart.animating = true;\r\n                        }\r\n\r\n                        for (i = 0, ilen = animations.length; i < ilen; ++i) {\r\n                            if (animations[i].chart === chart) {\r\n                                animations[i] = animation;\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        animations.push(animation);\r\n\r\n                        // If there are no animations queued, manually kickstart a digest, for lack of a better word\r\n                        if (animations.length === 1) {\r\n                            this.requestAnimationFrame();\r\n                        }\r\n                    },\r\n\r\n                    cancelAnimation: function(chart) {\r\n                        var index = helpers.findIndex(this.animations, function(animation) {\r\n                            return animation.chart === chart;\r\n                        });\r\n\r\n                        if (index !== -1) {\r\n                            this.animations.splice(index, 1);\r\n                            chart.animating = false;\r\n                        }\r\n                    },\r\n\r\n                    requestAnimationFrame: function() {\r\n                        var me = this;\r\n                        if (me.request === null) {\r\n                            // Skip animation frame requests until the active one is executed.\r\n                            // This can happen when processing mouse events, e.g. 'mousemove'\r\n                            // and 'mouseout' events will trigger multiple renders.\r\n                            me.request = helpers.requestAnimFrame.call(window, function() {\r\n                                me.request = null;\r\n                                me.startDigest();\r\n                            });\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    startDigest: function() {\r\n                        var me = this;\r\n                        var startTime = Date.now();\r\n                        var framesToDrop = 0;\r\n\r\n                        if (me.dropFrames > 1) {\r\n                            framesToDrop = Math.floor(me.dropFrames);\r\n                            me.dropFrames = me.dropFrames % 1;\r\n                        }\r\n\r\n                        me.advance(1 + framesToDrop);\r\n\r\n                        var endTime = Date.now();\r\n\r\n                        me.dropFrames += (endTime - startTime) / me.frameDuration;\r\n\r\n                        // Do we have more stuff to animate?\r\n                        if (me.animations.length > 0) {\r\n                            me.requestAnimationFrame();\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    advance: function(count) {\r\n                        var animations = this.animations;\r\n                        var animation, chart;\r\n                        var i = 0;\r\n\r\n                        while (i < animations.length) {\r\n                            animation = animations[i];\r\n                            chart = animation.chart;\r\n\r\n                            animation.currentStep = (animation.currentStep || 0) + count;\r\n                            animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\r\n\r\n                            helpers.callback(animation.render, [chart, animation], chart);\r\n                            helpers.callback(animation.onAnimationProgress, [animation], chart);\r\n\r\n                            if (animation.currentStep >= animation.numSteps) {\r\n                                helpers.callback(animation.onAnimationComplete, [animation], chart);\r\n                                chart.animating = false;\r\n                                animations.splice(i, 1);\r\n                            } else {\r\n                                ++i;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.Animation instead\r\n                 * @prop Chart.Animation#animationObject\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 */\r\n                Object.defineProperty(Chart.Animation.prototype, 'animationObject', {\r\n                    get: function() {\r\n                        return this;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.Animation#chart instead\r\n                 * @prop Chart.Animation#chartInstance\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 */\r\n                Object.defineProperty(Chart.Animation.prototype, 'chartInstance', {\r\n                    get: function() {\r\n                        return this.chart;\r\n                    },\r\n                    set: function(value) {\r\n                        this.chart = value;\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 14: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var Interaction = require(19);\r\n            var layouts = require(21);\r\n            var platform = require(39);\r\n            var plugins = require(22);\r\n\r\n            module.exports = function(Chart) {\r\n                // Create a dictionary of chart types, to allow for extension of existing types\r\n                Chart.types = {};\r\n\r\n                // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\r\n                // Destroy method on the chart will remove the instance of the chart from this reference.\r\n                Chart.instances = {};\r\n\r\n                // Controllers available for dataset visualization eg. bar, line, slice, etc.\r\n                Chart.controllers = {};\r\n\r\n                /**\r\n                 * Initializes the given config with global and chart default values.\r\n                 */\r\n                function initConfig(config) {\r\n                    config = config || {};\r\n\r\n                    // Do NOT use configMerge() for the data object because this method merges arrays\r\n                    // and so would change references to labels and datasets, preventing data updates.\r\n                    var data = config.data = config.data || {};\r\n                    data.datasets = data.datasets || [];\r\n                    data.labels = data.labels || [];\r\n\r\n                    config.options = helpers.configMerge(\r\n                        defaults.global,\r\n                        defaults[config.type],\r\n                        config.options || {});\r\n\r\n                    return config;\r\n                }\r\n\r\n                /**\r\n                 * Updates the config of the chart\r\n                 * @param chart {Chart} chart to update the options for\r\n                 */\r\n                function updateConfig(chart) {\r\n                    var newOptions = chart.options;\r\n\r\n                    helpers.each(chart.scales, function(scale) {\r\n                        layouts.removeBox(chart, scale);\r\n                    });\r\n\r\n                    newOptions = helpers.configMerge(\r\n                        Chart.defaults.global,\r\n                        Chart.defaults[chart.config.type],\r\n                        newOptions);\r\n\r\n                    chart.options = chart.config.options = newOptions;\r\n                    chart.ensureScalesHaveIDs();\r\n                    chart.buildOrUpdateScales();\r\n                    // Tooltip\r\n                    chart.tooltip._options = newOptions.tooltips;\r\n                    chart.tooltip.initialize();\r\n                }\r\n\r\n                function positionIsHorizontal(position) {\r\n                    return position === 'top' || position === 'bottom';\r\n                }\r\n\r\n                helpers.extend(Chart.prototype, /** @lends Chart */ {\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    construct: function(item, config) {\r\n                        var me = this;\r\n\r\n                        config = initConfig(config);\r\n\r\n                        var context = platform.acquireContext(item, config);\r\n                        var canvas = context && context.canvas;\r\n                        var height = canvas && canvas.height;\r\n                        var width = canvas && canvas.width;\r\n\r\n                        me.id = helpers.uid();\r\n                        me.ctx = context;\r\n                        me.canvas = canvas;\r\n                        me.config = config;\r\n                        me.width = width;\r\n                        me.height = height;\r\n                        me.aspectRatio = height ? width / height : null;\r\n                        me.options = config.options;\r\n                        me._bufferedRender = false;\r\n\r\n                        /**\r\n                         * Provided for backward compatibility, Chart and Chart.Controller have been merged,\r\n                         * the \"instance\" still need to be defined since it might be called from plugins.\r\n                         * @prop Chart#chart\r\n                         * @deprecated since version 2.6.0\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        me.chart = me;\r\n                        me.controller = me; // chart.chart.controller #inception\r\n\r\n                        // Add the chart instance to the global namespace\r\n                        Chart.instances[me.id] = me;\r\n\r\n                        // Define alias to the config data: `chart.data === chart.config.data`\r\n                        Object.defineProperty(me, 'data', {\r\n                            get: function() {\r\n                                return me.config.data;\r\n                            },\r\n                            set: function(value) {\r\n                                me.config.data = value;\r\n                            }\r\n                        });\r\n\r\n                        if (!context || !canvas) {\r\n                            // The given item is not a compatible context2d element, let's return before finalizing\r\n                            // the chart initialization but after setting basic chart / controller properties that\r\n                            // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\r\n                            // https://github.com/chartjs/Chart.js/issues/2807\r\n                            console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n                            return;\r\n                        }\r\n\r\n                        me.initialize();\r\n                        me.update();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    initialize: function() {\r\n                        var me = this;\r\n\r\n                        // Before init plugin notification\r\n                        plugins.notify(me, 'beforeInit');\r\n\r\n                        helpers.retinaScale(me, me.options.devicePixelRatio);\r\n\r\n                        me.bindEvents();\r\n\r\n                        if (me.options.responsive) {\r\n                            // Initial resize before chart draws (must be silent to preserve initial animations).\r\n                            me.resize(true);\r\n                        }\r\n\r\n                        // Make sure scales have IDs and are built before we build any controllers.\r\n                        me.ensureScalesHaveIDs();\r\n                        me.buildOrUpdateScales();\r\n                        me.initToolTip();\r\n\r\n                        // After init plugin notification\r\n                        plugins.notify(me, 'afterInit');\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    clear: function() {\r\n                        helpers.canvas.clear(this);\r\n                        return this;\r\n                    },\r\n\r\n                    stop: function() {\r\n                        // Stops any current animation loop occurring\r\n                        Chart.animationService.cancelAnimation(this);\r\n                        return this;\r\n                    },\r\n\r\n                    resize: function(silent) {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        var canvas = me.canvas;\r\n                        var aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\r\n\r\n                        // the canvas render width and height will be casted to integers so make sure that\r\n                        // the canvas display style uses the same integer values to avoid blurring effect.\r\n\r\n                        // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\r\n                        var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\r\n                        var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\r\n\r\n                        if (me.width === newWidth && me.height === newHeight) {\r\n                            return;\r\n                        }\r\n\r\n                        canvas.width = me.width = newWidth;\r\n                        canvas.height = me.height = newHeight;\r\n                        canvas.style.width = newWidth + 'px';\r\n                        canvas.style.height = newHeight + 'px';\r\n\r\n                        helpers.retinaScale(me, options.devicePixelRatio);\r\n\r\n                        if (!silent) {\r\n                            // Notify any plugins about the resize\r\n                            var newSize = { width: newWidth, height: newHeight };\r\n                            plugins.notify(me, 'resize', [newSize]);\r\n\r\n                            // Notify of resize\r\n                            if (me.options.onResize) {\r\n                                me.options.onResize(me, newSize);\r\n                            }\r\n\r\n                            me.stop();\r\n                            me.update(me.options.responsiveAnimationDuration);\r\n                        }\r\n                    },\r\n\r\n                    ensureScalesHaveIDs: function() {\r\n                        var options = this.options;\r\n                        var scalesOptions = options.scales || {};\r\n                        var scaleOptions = options.scale;\r\n\r\n                        helpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\r\n                            xAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\r\n                        });\r\n\r\n                        helpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\r\n                            yAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\r\n                        });\r\n\r\n                        if (scaleOptions) {\r\n                            scaleOptions.id = scaleOptions.id || 'scale';\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Builds a map of scale ID to scale object for future lookup.\r\n                     */\r\n                    buildOrUpdateScales: function() {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        var scales = me.scales || {};\r\n                        var items = [];\r\n                        var updated = Object.keys(scales).reduce(function(obj, id) {\r\n                            obj[id] = false;\r\n                            return obj;\r\n                        }, {});\r\n\r\n                        if (options.scales) {\r\n                            items = items.concat(\r\n                                (options.scales.xAxes || []).map(function(xAxisOptions) {\r\n                                    return { options: xAxisOptions, dtype: 'category', dposition: 'bottom' };\r\n                                }),\r\n                                (options.scales.yAxes || []).map(function(yAxisOptions) {\r\n                                    return { options: yAxisOptions, dtype: 'linear', dposition: 'left' };\r\n                                })\r\n                            );\r\n                        }\r\n\r\n                        if (options.scale) {\r\n                            items.push({\r\n                                options: options.scale,\r\n                                dtype: 'radialLinear',\r\n                                isDefault: true,\r\n                                dposition: 'chartArea'\r\n                            });\r\n                        }\r\n\r\n                        helpers.each(items, function(item) {\r\n                            var scaleOptions = item.options;\r\n                            var id = scaleOptions.id;\r\n                            var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\r\n\r\n                            if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\r\n                                scaleOptions.position = item.dposition;\r\n                            }\r\n\r\n                            updated[id] = true;\r\n                            var scale = null;\r\n                            if (id in scales && scales[id].type === scaleType) {\r\n                                scale = scales[id];\r\n                                scale.options = scaleOptions;\r\n                                scale.ctx = me.ctx;\r\n                                scale.chart = me;\r\n                            } else {\r\n                                var scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\r\n                                if (!scaleClass) {\r\n                                    return;\r\n                                }\r\n                                scale = new scaleClass({\r\n                                    id: id,\r\n                                    type: scaleType,\r\n                                    options: scaleOptions,\r\n                                    ctx: me.ctx,\r\n                                    chart: me\r\n                                });\r\n                                scales[scale.id] = scale;\r\n                            }\r\n\r\n                            scale.mergeTicksOptions();\r\n\r\n                            // TODO(SB): I think we should be able to remove this custom case (options.scale)\r\n                            // and consider it as a regular scale part of the \"scales\"\" map only! This would\r\n                            // make the logic easier and remove some useless? custom code.\r\n                            if (item.isDefault) {\r\n                                me.scale = scale;\r\n                            }\r\n                        });\r\n                        // clear up discarded scales\r\n                        helpers.each(updated, function(hasUpdated, id) {\r\n                            if (!hasUpdated) {\r\n                                delete scales[id];\r\n                            }\r\n                        });\r\n\r\n                        me.scales = scales;\r\n\r\n                        Chart.scaleService.addScalesToLayout(this);\r\n                    },\r\n\r\n                    buildOrUpdateControllers: function() {\r\n                        var me = this;\r\n                        var types = [];\r\n                        var newControllers = [];\r\n\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            var meta = me.getDatasetMeta(datasetIndex);\r\n                            var type = dataset.type || me.config.type;\r\n\r\n                            if (meta.type && meta.type !== type) {\r\n                                me.destroyDatasetMeta(datasetIndex);\r\n                                meta = me.getDatasetMeta(datasetIndex);\r\n                            }\r\n                            meta.type = type;\r\n\r\n                            types.push(meta.type);\r\n\r\n                            if (meta.controller) {\r\n                                meta.controller.updateIndex(datasetIndex);\r\n                                meta.controller.linkScales();\r\n                            } else {\r\n                                var ControllerClass = Chart.controllers[meta.type];\r\n                                if (ControllerClass === undefined) {\r\n                                    throw new Error('\"' + meta.type + '\" is not a chart type.');\r\n                                }\r\n\r\n                                meta.controller = new ControllerClass(me, datasetIndex);\r\n                                newControllers.push(meta.controller);\r\n                            }\r\n                        }, me);\r\n\r\n                        return newControllers;\r\n                    },\r\n\r\n                    /**\r\n                     * Reset the elements of all datasets\r\n                     * @private\r\n                     */\r\n                    resetElements: function() {\r\n                        var me = this;\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            me.getDatasetMeta(datasetIndex).controller.reset();\r\n                        }, me);\r\n                    },\r\n\r\n                    /**\r\n                    * Resets the chart back to it's state before the initial animation\r\n                    */\r\n                    reset: function() {\r\n                        this.resetElements();\r\n                        this.tooltip.initialize();\r\n                    },\r\n\r\n                    update: function(config) {\r\n                        var me = this;\r\n\r\n                        if (!config || typeof config !== 'object') {\r\n                            // backwards compatibility\r\n                            config = {\r\n                                duration: config,\r\n                                lazy: arguments[1]\r\n                            };\r\n                        }\r\n\r\n                        updateConfig(me);\r\n\r\n                        // plugins options references might have change, let's invalidate the cache\r\n                        // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\r\n                        plugins._invalidate(me);\r\n\r\n                        if (plugins.notify(me, 'beforeUpdate') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // In case the entire data object changed\r\n                        me.tooltip._data = me.data;\r\n\r\n                        // Make sure dataset controllers are updated and new controllers are reset\r\n                        var newControllers = me.buildOrUpdateControllers();\r\n\r\n                        // Make sure all dataset controllers have correct meta data counts\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\r\n                        }, me);\r\n\r\n                        me.updateLayout();\r\n\r\n                        // Can only reset the new controllers after the scales have been updated\r\n                        if (me.options.animation && me.options.animation.duration) {\r\n                            helpers.each(newControllers, function(controller) {\r\n                                controller.reset();\r\n                            });\r\n                        }\r\n\r\n                        me.updateDatasets();\r\n\r\n                        // Need to reset tooltip in case it is displayed with elements that are removed\r\n                        // after update.\r\n                        me.tooltip.initialize();\r\n\r\n                        // Last active contains items that were previously in the tooltip.\r\n                        // When we reset the tooltip, we need to clear it\r\n                        me.lastActive = [];\r\n\r\n                        // Do this before render so that any plugins that need final scale updates can use it\r\n                        plugins.notify(me, 'afterUpdate');\r\n\r\n                        if (me._bufferedRender) {\r\n                            me._bufferedRequest = {\r\n                                duration: config.duration,\r\n                                easing: config.easing,\r\n                                lazy: config.lazy\r\n                            };\r\n                        } else {\r\n                            me.render(config);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\r\n                     * hook, in which case, plugins will not be called on `afterLayout`.\r\n                     * @private\r\n                     */\r\n                    updateLayout: function() {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeLayout') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        layouts.update(this, this.width, this.height);\r\n\r\n                        /**\r\n                         * Provided for backward compatibility, use `afterLayout` instead.\r\n                         * @method IPlugin#afterScaleUpdate\r\n                         * @deprecated since version 2.5.0\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        plugins.notify(me, 'afterScaleUpdate');\r\n                        plugins.notify(me, 'afterLayout');\r\n                    },\r\n\r\n                    /**\r\n                     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\r\n                     * @private\r\n                     */\r\n                    updateDatasets: function() {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                            me.updateDataset(i);\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterDatasetsUpdate');\r\n                    },\r\n\r\n                    /**\r\n                     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\r\n                     * @private\r\n                     */\r\n                    updateDataset: function(index) {\r\n                        var me = this;\r\n                        var meta = me.getDatasetMeta(index);\r\n                        var args = {\r\n                            meta: meta,\r\n                            index: index\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        meta.controller.update();\r\n\r\n                        plugins.notify(me, 'afterDatasetUpdate', [args]);\r\n                    },\r\n\r\n                    render: function(config) {\r\n                        var me = this;\r\n\r\n                        if (!config || typeof config !== 'object') {\r\n                            // backwards compatibility\r\n                            config = {\r\n                                duration: config,\r\n                                lazy: arguments[1]\r\n                            };\r\n                        }\r\n\r\n                        var duration = config.duration;\r\n                        var lazy = config.lazy;\r\n\r\n                        if (plugins.notify(me, 'beforeRender') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        var animationOptions = me.options.animation;\r\n                        var onComplete = function(animation) {\r\n                            plugins.notify(me, 'afterRender');\r\n                            helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\r\n                        };\r\n\r\n                        if (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\r\n                            var animation = new Chart.Animation({\r\n                                numSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\r\n                                easing: config.easing || animationOptions.easing,\r\n\r\n                                render: function(chart, animationObject) {\r\n                                    var easingFunction = helpers.easing.effects[animationObject.easing];\r\n                                    var currentStep = animationObject.currentStep;\r\n                                    var stepDecimal = currentStep / animationObject.numSteps;\r\n\r\n                                    chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\r\n                                },\r\n\r\n                                onAnimationProgress: animationOptions.onProgress,\r\n                                onAnimationComplete: onComplete\r\n                            });\r\n\r\n                            Chart.animationService.addAnimation(me, animation, duration, lazy);\r\n                        } else {\r\n                            me.draw();\r\n\r\n                            // See https://github.com/chartjs/Chart.js/issues/3781\r\n                            onComplete(new Chart.Animation({ numSteps: 0, chart: me }));\r\n                        }\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    draw: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        me.clear();\r\n\r\n                        if (helpers.isNullOrUndef(easingValue)) {\r\n                            easingValue = 1;\r\n                        }\r\n\r\n                        me.transition(easingValue);\r\n\r\n                        if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Draw all the scales\r\n                        helpers.each(me.boxes, function(box) {\r\n                            box.draw(me.chartArea);\r\n                        }, me);\r\n\r\n                        if (me.scale) {\r\n                            me.scale.draw();\r\n                        }\r\n\r\n                        me.drawDatasets(easingValue);\r\n                        me._drawTooltip(easingValue);\r\n\r\n                        plugins.notify(me, 'afterDraw', [easingValue]);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    transition: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\r\n                            if (me.isDatasetVisible(i)) {\r\n                                me.getDatasetMeta(i).controller.transition(easingValue);\r\n                            }\r\n                        }\r\n\r\n                        me.tooltip.transition(easingValue);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\r\n                     * @private\r\n                     */\r\n                    drawDatasets: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Draw datasets reversed to support proper line stacking\r\n                        for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\r\n                            if (me.isDatasetVisible(i)) {\r\n                                me.drawDataset(i, easingValue);\r\n                            }\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\r\n                     * @private\r\n                     */\r\n                    drawDataset: function(index, easingValue) {\r\n                        var me = this;\r\n                        var meta = me.getDatasetMeta(index);\r\n                        var args = {\r\n                            meta: meta,\r\n                            index: index,\r\n                            easingValue: easingValue\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        meta.controller.draw(easingValue);\r\n\r\n                        plugins.notify(me, 'afterDatasetDraw', [args]);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\r\n                     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\r\n                     * @private\r\n                     */\r\n                    _drawTooltip: function(easingValue) {\r\n                        var me = this;\r\n                        var tooltip = me.tooltip;\r\n                        var args = {\r\n                            tooltip: tooltip,\r\n                            easingValue: easingValue\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        tooltip.draw();\r\n\r\n                        plugins.notify(me, 'afterTooltipDraw', [args]);\r\n                    },\r\n\r\n                    // Get the single element that was clicked on\r\n                    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\r\n                    getElementAtEvent: function(e) {\r\n                        return Interaction.modes.single(this, e);\r\n                    },\r\n\r\n                    getElementsAtEvent: function(e) {\r\n                        return Interaction.modes.label(this, e, { intersect: true });\r\n                    },\r\n\r\n                    getElementsAtXAxis: function(e) {\r\n                        return Interaction.modes['x-axis'](this, e, { intersect: true });\r\n                    },\r\n\r\n                    getElementsAtEventForMode: function(e, mode, options) {\r\n                        var method = Interaction.modes[mode];\r\n                        if (typeof method === 'function') {\r\n                            return method(this, e, options);\r\n                        }\r\n\r\n                        return [];\r\n                    },\r\n\r\n                    getDatasetAtEvent: function(e) {\r\n                        return Interaction.modes.dataset(this, e, { intersect: true });\r\n                    },\r\n\r\n                    getDatasetMeta: function(datasetIndex) {\r\n                        var me = this;\r\n                        var dataset = me.data.datasets[datasetIndex];\r\n                        if (!dataset._meta) {\r\n                            dataset._meta = {};\r\n                        }\r\n\r\n                        var meta = dataset._meta[me.id];\r\n                        if (!meta) {\r\n                            meta = dataset._meta[me.id] = {\r\n                                type: null,\r\n                                data: [],\r\n                                dataset: null,\r\n                                controller: null,\r\n                                hidden: null,\t\t\t// See isDatasetVisible() comment\r\n                                xAxisID: null,\r\n                                yAxisID: null\r\n                            };\r\n                        }\r\n\r\n                        return meta;\r\n                    },\r\n\r\n                    getVisibleDatasetCount: function() {\r\n                        var count = 0;\r\n                        for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n                            if (this.isDatasetVisible(i)) {\r\n                                count++;\r\n                            }\r\n                        }\r\n                        return count;\r\n                    },\r\n\r\n                    isDatasetVisible: function(datasetIndex) {\r\n                        var meta = this.getDatasetMeta(datasetIndex);\r\n\r\n                        // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\r\n                        // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\r\n                        return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\r\n                    },\r\n\r\n                    generateLegend: function() {\r\n                        return this.options.legendCallback(this);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    destroyDatasetMeta: function(datasetIndex) {\r\n                        var id = this.id;\r\n                        var dataset = this.data.datasets[datasetIndex];\r\n                        var meta = dataset._meta && dataset._meta[id];\r\n\r\n                        if (meta) {\r\n                            meta.controller.destroy();\r\n                            delete dataset._meta[id];\r\n                        }\r\n                    },\r\n\r\n                    destroy: function() {\r\n                        var me = this;\r\n                        var canvas = me.canvas;\r\n                        var i, ilen;\r\n\r\n                        me.stop();\r\n\r\n                        // dataset controllers need to cleanup associated data\r\n                        for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                            me.destroyDatasetMeta(i);\r\n                        }\r\n\r\n                        if (canvas) {\r\n                            me.unbindEvents();\r\n                            helpers.canvas.clear(me);\r\n                            platform.releaseContext(me.ctx);\r\n                            me.canvas = null;\r\n                            me.ctx = null;\r\n                        }\r\n\r\n                        plugins.notify(me, 'destroy');\r\n\r\n                        delete Chart.instances[me.id];\r\n                    },\r\n\r\n                    toBase64Image: function() {\r\n                        return this.canvas.toDataURL.apply(this.canvas, arguments);\r\n                    },\r\n\r\n                    initToolTip: function() {\r\n                        var me = this;\r\n                        me.tooltip = new Chart.Tooltip({\r\n                            _chart: me,\r\n                            _chartInstance: me, // deprecated, backward compatibility\r\n                            _data: me.data,\r\n                            _options: me.options.tooltips\r\n                        }, me);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    bindEvents: function() {\r\n                        var me = this;\r\n                        var listeners = me._listeners = {};\r\n                        var listener = function() {\r\n                            me.eventHandler.apply(me, arguments);\r\n                        };\r\n\r\n                        helpers.each(me.options.events, function(type) {\r\n                            platform.addEventListener(me, type, listener);\r\n                            listeners[type] = listener;\r\n                        });\r\n\r\n                        // Elements used to detect size change should not be injected for non responsive charts.\r\n                        // See https://github.com/chartjs/Chart.js/issues/2210\r\n                        if (me.options.responsive) {\r\n                            listener = function() {\r\n                                me.resize();\r\n                            };\r\n\r\n                            platform.addEventListener(me, 'resize', listener);\r\n                            listeners.resize = listener;\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    unbindEvents: function() {\r\n                        var me = this;\r\n                        var listeners = me._listeners;\r\n                        if (!listeners) {\r\n                            return;\r\n                        }\r\n\r\n                        delete me._listeners;\r\n                        helpers.each(listeners, function(listener, type) {\r\n                            platform.removeEventListener(me, type, listener);\r\n                        });\r\n                    },\r\n\r\n                    updateHoverStyle: function(elements, mode, enabled) {\r\n                        var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\r\n                        var element, i, ilen;\r\n\r\n                        for (i = 0, ilen = elements.length; i < ilen; ++i) {\r\n                            element = elements[i];\r\n                            if (element) {\r\n                                this.getDatasetMeta(element._datasetIndex).controller[method](element);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    eventHandler: function(e) {\r\n                        var me = this;\r\n                        var tooltip = me.tooltip;\r\n\r\n                        if (plugins.notify(me, 'beforeEvent', [e]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Buffer any update calls so that renders do not occur\r\n                        me._bufferedRender = true;\r\n                        me._bufferedRequest = null;\r\n\r\n                        var changed = me.handleEvent(e);\r\n                        // for smooth tooltip animations issue #4989\r\n                        // the tooltip should be the source of change\r\n                        // Animation check workaround:\r\n                        // tooltip._start will be null when tooltip isn't animating\r\n                        if (tooltip) {\r\n                            changed = tooltip._start\r\n                                ? tooltip.handleEvent(e)\r\n                                : changed | tooltip.handleEvent(e);\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterEvent', [e]);\r\n\r\n                        var bufferedRequest = me._bufferedRequest;\r\n                        if (bufferedRequest) {\r\n                            // If we have an update that was triggered, we need to do a normal render\r\n                            me.render(bufferedRequest);\r\n                        } else if (changed && !me.animating) {\r\n                            // If entering, leaving, or changing elements, animate the change via pivot\r\n                            me.stop();\r\n\r\n                            // We only need to render at this point. Updating will cause scales to be\r\n                            // recomputed generating flicker & using more memory than necessary.\r\n                            me.render(me.options.hover.animationDuration, true);\r\n                        }\r\n\r\n                        me._bufferedRender = false;\r\n                        me._bufferedRequest = null;\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    /**\r\n                     * Handle an event\r\n                     * @private\r\n                     * @param {IEvent} event the event to handle\r\n                     * @return {Boolean} true if the chart needs to re-render\r\n                     */\r\n                    handleEvent: function(e) {\r\n                        var me = this;\r\n                        var options = me.options || {};\r\n                        var hoverOptions = options.hover;\r\n                        var changed = false;\r\n\r\n                        me.lastActive = me.lastActive || [];\r\n\r\n                        // Find Active Elements for hover and tooltips\r\n                        if (e.type === 'mouseout') {\r\n                            me.active = [];\r\n                        } else {\r\n                            me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\r\n                        }\r\n\r\n                        // Invoke onHover hook\r\n                        // Need to call with native event here to not break backwards compatibility\r\n                        helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\r\n\r\n                        if (e.type === 'mouseup' || e.type === 'click') {\r\n                            if (options.onClick) {\r\n                                // Use e.native here for backwards compatibility\r\n                                options.onClick.call(me, e.native, me.active);\r\n                            }\r\n                        }\r\n\r\n                        // Remove styling for last active (even if it may still be active)\r\n                        if (me.lastActive.length) {\r\n                            me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\r\n                        }\r\n\r\n                        // Built in hover styling\r\n                        if (me.active.length && hoverOptions.mode) {\r\n                            me.updateHoverStyle(me.active, hoverOptions.mode, true);\r\n                        }\r\n\r\n                        changed = !helpers.arrayEquals(me.active, me.lastActive);\r\n\r\n                        // Remember Last Actives\r\n                        me.lastActive = me.active;\r\n\r\n                        return changed;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart instead.\r\n                 * @class Chart.Controller\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 * @private\r\n                 */\r\n                Chart.Controller = Chart;\r\n            };\r\n        }, { \"16\": 16, \"19\": 19, \"21\": 21, \"22\": 22, \"36\": 36, \"39\": 39 }], 15: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            module.exports = function(Chart) {\r\n                var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\r\n\r\n                /**\r\n                 * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\r\n                 * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\r\n                 * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\r\n                 */\r\n                function listenArrayEvents(array, listener) {\r\n                    if (array._chartjs) {\r\n                        array._chartjs.listeners.push(listener);\r\n                        return;\r\n                    }\r\n\r\n                    Object.defineProperty(array, '_chartjs', {\r\n                        configurable: true,\r\n                        enumerable: false,\r\n                        value: {\r\n                            listeners: [listener]\r\n                        }\r\n                    });\r\n\r\n                    arrayEvents.forEach(function(key) {\r\n                        var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\r\n                        var base = array[key];\r\n\r\n                        Object.defineProperty(array, key, {\r\n                            configurable: true,\r\n                            enumerable: false,\r\n                            value: function() {\r\n                                var args = Array.prototype.slice.call(arguments);\r\n                                var res = base.apply(this, args);\r\n\r\n                                helpers.each(array._chartjs.listeners, function(object) {\r\n                                    if (typeof object[method] === 'function') {\r\n                                        object[method].apply(object, args);\r\n                                    }\r\n                                });\r\n\r\n                                return res;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Removes the given array event listener and cleanup extra attached properties (such as\r\n                 * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\r\n                 */\r\n                function unlistenArrayEvents(array, listener) {\r\n                    var stub = array._chartjs;\r\n                    if (!stub) {\r\n                        return;\r\n                    }\r\n\r\n                    var listeners = stub.listeners;\r\n                    var index = listeners.indexOf(listener);\r\n                    if (index !== -1) {\r\n                        listeners.splice(index, 1);\r\n                    }\r\n\r\n                    if (listeners.length > 0) {\r\n                        return;\r\n                    }\r\n\r\n                    arrayEvents.forEach(function(key) {\r\n                        delete array[key];\r\n                    });\r\n\r\n                    delete array._chartjs;\r\n                }\r\n\r\n                // Base class for all dataset controllers (line, bar, etc)\r\n                Chart.DatasetController = function(chart, datasetIndex) {\r\n                    this.initialize(chart, datasetIndex);\r\n                };\r\n\r\n                helpers.extend(Chart.DatasetController.prototype, {\r\n                    /**\r\n                     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\r\n                     * @type {Chart.core.element}\r\n                     */\r\n                    datasetElementType: null,\r\n\r\n                    /**\r\n                     * Element type used to generate a meta data (e.g. Chart.element.Point).\r\n                     * @type {Chart.core.element}\r\n                     */\r\n                    dataElementType: null,\r\n\r\n                    initialize: function(chart, datasetIndex) {\r\n                        var me = this;\r\n                        me.chart = chart;\r\n                        me.index = datasetIndex;\r\n                        me.linkScales();\r\n                        me.addElements();\r\n                    },\r\n\r\n                    updateIndex: function(datasetIndex) {\r\n                        this.index = datasetIndex;\r\n                    },\r\n\r\n                    linkScales: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var dataset = me.getDataset();\r\n\r\n                        if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\r\n                            meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\r\n                        }\r\n                        if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\r\n                            meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\r\n                        }\r\n                    },\r\n\r\n                    getDataset: function() {\r\n                        return this.chart.data.datasets[this.index];\r\n                    },\r\n\r\n                    getMeta: function() {\r\n                        return this.chart.getDatasetMeta(this.index);\r\n                    },\r\n\r\n                    getScaleForId: function(scaleID) {\r\n                        return this.chart.scales[scaleID];\r\n                    },\r\n\r\n                    reset: function() {\r\n                        this.update(true);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    destroy: function() {\r\n                        if (this._data) {\r\n                            unlistenArrayEvents(this._data, this);\r\n                        }\r\n                    },\r\n\r\n                    createMetaDataset: function() {\r\n                        var me = this;\r\n                        var type = me.datasetElementType;\r\n                        return type && new type({\r\n                            _chart: me.chart,\r\n                            _datasetIndex: me.index\r\n                        });\r\n                    },\r\n\r\n                    createMetaData: function(index) {\r\n                        var me = this;\r\n                        var type = me.dataElementType;\r\n                        return type && new type({\r\n                            _chart: me.chart,\r\n                            _datasetIndex: me.index,\r\n                            _index: index\r\n                        });\r\n                    },\r\n\r\n                    addElements: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var data = me.getDataset().data || [];\r\n                        var metaData = meta.data;\r\n                        var i, ilen;\r\n\r\n                        for (i = 0, ilen = data.length; i < ilen; ++i) {\r\n                            metaData[i] = metaData[i] || me.createMetaData(i);\r\n                        }\r\n\r\n                        meta.dataset = meta.dataset || me.createMetaDataset();\r\n                    },\r\n\r\n                    addElementAndReset: function(index) {\r\n                        var element = this.createMetaData(index);\r\n                        this.getMeta().data.splice(index, 0, element);\r\n                        this.updateElement(element, index, true);\r\n                    },\r\n\r\n                    buildOrUpdateElements: function() {\r\n                        var me = this;\r\n                        var dataset = me.getDataset();\r\n                        var data = dataset.data || (dataset.data = []);\r\n\r\n                        // In order to correctly handle data addition/deletion animation (an thus simulate\r\n                        // real-time charts), we need to monitor these data modifications and synchronize\r\n                        // the internal meta data accordingly.\r\n                        if (me._data !== data) {\r\n                            if (me._data) {\r\n                                // This case happens when the user replaced the data array instance.\r\n                                unlistenArrayEvents(me._data, me);\r\n                            }\r\n\r\n                            listenArrayEvents(data, me);\r\n                            me._data = data;\r\n                        }\r\n\r\n                        // Re-sync meta data in case the user replaced the data array or if we missed\r\n                        // any updates and so make sure that we handle number of datapoints changing.\r\n                        me.resyncElements();\r\n                    },\r\n\r\n                    update: helpers.noop,\r\n\r\n                    transition: function(easingValue) {\r\n                        var meta = this.getMeta();\r\n                        var elements = meta.data || [];\r\n                        var ilen = elements.length;\r\n                        var i = 0;\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            elements[i].transition(easingValue);\r\n                        }\r\n\r\n                        if (meta.dataset) {\r\n                            meta.dataset.transition(easingValue);\r\n                        }\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var meta = this.getMeta();\r\n                        var elements = meta.data || [];\r\n                        var ilen = elements.length;\r\n                        var i = 0;\r\n\r\n                        if (meta.dataset) {\r\n                            meta.dataset.draw();\r\n                        }\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            elements[i].draw();\r\n                        }\r\n                    },\r\n\r\n                    removeHoverStyle: function(element, elementOpts) {\r\n                        var dataset = this.chart.data.datasets[element._datasetIndex];\r\n                        var index = element._index;\r\n                        var custom = element.custom || {};\r\n                        var valueOrDefault = helpers.valueAtIndexOrDefault;\r\n                        var model = element._model;\r\n\r\n                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\r\n                        model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\r\n                        model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\r\n                    },\r\n\r\n                    setHoverStyle: function(element) {\r\n                        var dataset = this.chart.data.datasets[element._datasetIndex];\r\n                        var index = element._index;\r\n                        var custom = element.custom || {};\r\n                        var valueOrDefault = helpers.valueAtIndexOrDefault;\r\n                        var getHoverColor = helpers.getHoverColor;\r\n                        var model = element._model;\r\n\r\n                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    resyncElements: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var data = me.getDataset().data;\r\n                        var numMeta = meta.data.length;\r\n                        var numData = data.length;\r\n\r\n                        if (numData < numMeta) {\r\n                            meta.data.splice(numData, numMeta - numData);\r\n                        } else if (numData > numMeta) {\r\n                            me.insertElements(numMeta, numData - numMeta);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    insertElements: function(start, count) {\r\n                        for (var i = 0; i < count; ++i) {\r\n                            this.addElementAndReset(start + i);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataPush: function() {\r\n                        this.insertElements(this.getDataset().data.length - 1, arguments.length);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataPop: function() {\r\n                        this.getMeta().data.pop();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataShift: function() {\r\n                        this.getMeta().data.shift();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataSplice: function(start, count) {\r\n                        this.getMeta().data.splice(start, count);\r\n                        this.insertElements(start, arguments.length - 2);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataUnshift: function() {\r\n                        this.insertElements(0, arguments.length);\r\n                    }\r\n                });\r\n\r\n                Chart.DatasetController.extend = helpers.inherits;\r\n            };\r\n        }, { \"36\": 36 }], 16: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            module.exports = {\r\n                /**\r\n                 * @private\r\n                 */\r\n                _set: function(scope, values) {\r\n                    return helpers.merge(this[scope] || (this[scope] = {}), values);\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 17: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var color = require(2);\r\n            var helpers = require(36);\r\n\r\n            function interpolate(start, view, model, ease) {\r\n                var keys = Object.keys(model);\r\n                var i, ilen, key, actual, origin, target, type, c0, c1;\r\n\r\n                for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n                    key = keys[i];\r\n\r\n                    target = model[key];\r\n\r\n                    // if a value is added to the model after pivot() has been called, the view\r\n                    // doesn't contain it, so let's initialize the view to the target value.\r\n                    if (!view.hasOwnProperty(key)) {\r\n                        view[key] = target;\r\n                    }\r\n\r\n                    actual = view[key];\r\n\r\n                    if (actual === target || key[0] === '_') {\r\n                        continue;\r\n                    }\r\n\r\n                    if (!start.hasOwnProperty(key)) {\r\n                        start[key] = actual;\r\n                    }\r\n\r\n                    origin = start[key];\r\n\r\n                    type = typeof target;\r\n\r\n                    if (type === typeof origin) {\r\n                        if (type === 'string') {\r\n                            c0 = color(origin);\r\n                            if (c0.valid) {\r\n                                c1 = color(target);\r\n                                if (c1.valid) {\r\n                                    view[key] = c1.mix(c0, ease).rgbString();\r\n                                    continue;\r\n                                }\r\n                            }\r\n                        } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\r\n                            view[key] = origin + (target - origin) * ease;\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    view[key] = target;\r\n                }\r\n            }\r\n\r\n            var Element = function(configuration) {\r\n                helpers.extend(this, configuration);\r\n                this.initialize.apply(this, arguments);\r\n            };\r\n\r\n            helpers.extend(Element.prototype, {\r\n                initialize: function() {\r\n                    this.hidden = false;\r\n                },\r\n\r\n                pivot: function() {\r\n                    var me = this;\r\n                    if (!me._view) {\r\n                        me._view = helpers.clone(me._model);\r\n                    }\r\n                    me._start = {};\r\n                    return me;\r\n                },\r\n\r\n                transition: function(ease) {\r\n                    var me = this;\r\n                    var model = me._model;\r\n                    var start = me._start;\r\n                    var view = me._view;\r\n\r\n                    // No animation -> No Transition\r\n                    if (!model || ease === 1) {\r\n                        me._view = model;\r\n                        me._start = null;\r\n                        return me;\r\n                    }\r\n\r\n                    if (!view) {\r\n                        view = me._view = {};\r\n                    }\r\n\r\n                    if (!start) {\r\n                        start = me._start = {};\r\n                    }\r\n\r\n                    interpolate(start, view, model, ease);\r\n\r\n                    return me;\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    return {\r\n                        x: this._model.x,\r\n                        y: this._model.y\r\n                    };\r\n                },\r\n\r\n                hasValue: function() {\r\n                    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\r\n                }\r\n            });\r\n\r\n            Element.extend = helpers.inherits;\r\n\r\n            module.exports = Element;\r\n        }, { \"2\": 2, \"36\": 36 }], 18: [function(require, module, exports) {\r\n            /* global window: false */\r\n            /* global document: false */\r\n            'use strict';\r\n\r\n            var color = require(2);\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n\r\n            module.exports = function(Chart) {\r\n                // -- Basic js utility methods\r\n\r\n                helpers.configMerge = function(/* objects ... */) {\r\n                    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\r\n                        merger: function(key, target, source, options) {\r\n                            var tval = target[key] || {};\r\n                            var sval = source[key];\r\n\r\n                            if (key === 'scales') {\r\n                                // scale config merging is complex. Add our own function here for that\r\n                                target[key] = helpers.scaleMerge(tval, sval);\r\n                            } else if (key === 'scale') {\r\n                                // used in polar area & radar charts since there is only one scale\r\n                                target[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\r\n                            } else {\r\n                                helpers._merger(key, target, source, options);\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n\r\n                helpers.scaleMerge = function(/* objects ... */) {\r\n                    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\r\n                        merger: function(key, target, source, options) {\r\n                            if (key === 'xAxes' || key === 'yAxes') {\r\n                                var slen = source[key].length;\r\n                                var i, type, scale;\r\n\r\n                                if (!target[key]) {\r\n                                    target[key] = [];\r\n                                }\r\n\r\n                                for (i = 0; i < slen; ++i) {\r\n                                    scale = source[key][i];\r\n                                    type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\r\n\r\n                                    if (i >= target[key].length) {\r\n                                        target[key].push({});\r\n                                    }\r\n\r\n                                    if (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\r\n                                        // new/untyped scale or type changed: let's apply the new defaults\r\n                                        // then merge source scale to correctly overwrite the defaults.\r\n                                        helpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\r\n                                    } else {\r\n                                        // scales type are the same\r\n                                        helpers.merge(target[key][i], scale);\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                helpers._merger(key, target, source, options);\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n\r\n                helpers.where = function(collection, filterCallback) {\r\n                    if (helpers.isArray(collection) && Array.prototype.filter) {\r\n                        return collection.filter(filterCallback);\r\n                    }\r\n                    var filtered = [];\r\n\r\n                    helpers.each(collection, function(item) {\r\n                        if (filterCallback(item)) {\r\n                            filtered.push(item);\r\n                        }\r\n                    });\r\n\r\n                    return filtered;\r\n                };\r\n                helpers.findIndex = Array.prototype.findIndex ?\r\n                    function(array, callback, scope) {\r\n                        return array.findIndex(callback, scope);\r\n                    } :\r\n                    function(array, callback, scope) {\r\n                        scope = scope === undefined ? array : scope;\r\n                        for (var i = 0, ilen = array.length; i < ilen; ++i) {\r\n                            if (callback.call(scope, array[i], i, array)) {\r\n                                return i;\r\n                            }\r\n                        }\r\n                        return -1;\r\n                    };\r\n                helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n                    // Default to start of the array\r\n                    if (helpers.isNullOrUndef(startIndex)) {\r\n                        startIndex = -1;\r\n                    }\r\n                    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\r\n                        var currentItem = arrayToSearch[i];\r\n                        if (filterCallback(currentItem)) {\r\n                            return currentItem;\r\n                        }\r\n                    }\r\n                };\r\n                helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n                    // Default to end of the array\r\n                    if (helpers.isNullOrUndef(startIndex)) {\r\n                        startIndex = arrayToSearch.length;\r\n                    }\r\n                    for (var i = startIndex - 1; i >= 0; i--) {\r\n                        var currentItem = arrayToSearch[i];\r\n                        if (filterCallback(currentItem)) {\r\n                            return currentItem;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // -- Math methods\r\n                helpers.isNumber = function(n) {\r\n                    return !isNaN(parseFloat(n)) && isFinite(n);\r\n                };\r\n                helpers.almostEquals = function(x, y, epsilon) {\r\n                    return Math.abs(x - y) < epsilon;\r\n                };\r\n                helpers.almostWhole = function(x, epsilon) {\r\n                    var rounded = Math.round(x);\r\n                    return (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\r\n                };\r\n                helpers.max = function(array) {\r\n                    return array.reduce(function(max, value) {\r\n                        if (!isNaN(value)) {\r\n                            return Math.max(max, value);\r\n                        }\r\n                        return max;\r\n                    }, Number.NEGATIVE_INFINITY);\r\n                };\r\n                helpers.min = function(array) {\r\n                    return array.reduce(function(min, value) {\r\n                        if (!isNaN(value)) {\r\n                            return Math.min(min, value);\r\n                        }\r\n                        return min;\r\n                    }, Number.POSITIVE_INFINITY);\r\n                };\r\n                helpers.sign = Math.sign ?\r\n                    function(x) {\r\n                        return Math.sign(x);\r\n                    } :\r\n                    function(x) {\r\n                        x = +x; // convert to a number\r\n                        if (x === 0 || isNaN(x)) {\r\n                            return x;\r\n                        }\r\n                        return x > 0 ? 1 : -1;\r\n                    };\r\n                helpers.log10 = Math.log10 ?\r\n                    function(x) {\r\n                        return Math.log10(x);\r\n                    } :\r\n                    function(x) {\r\n                        var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\r\n                        // Check for whole powers of 10,\r\n                        // which due to floating point rounding error should be corrected.\r\n                        var powerOf10 = Math.round(exponent);\r\n                        var isPowerOf10 = x === Math.pow(10, powerOf10);\r\n\r\n                        return isPowerOf10 ? powerOf10 : exponent;\r\n                    };\r\n                helpers.toRadians = function(degrees) {\r\n                    return degrees * (Math.PI / 180);\r\n                };\r\n                helpers.toDegrees = function(radians) {\r\n                    return radians * (180 / Math.PI);\r\n                };\r\n                // Gets the angle from vertical upright to the point about a centre.\r\n                helpers.getAngleFromPoint = function(centrePoint, anglePoint) {\r\n                    var distanceFromXCenter = anglePoint.x - centrePoint.x;\r\n                    var distanceFromYCenter = anglePoint.y - centrePoint.y;\r\n                    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n\r\n                    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n\r\n                    if (angle < (-0.5 * Math.PI)) {\r\n                        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\r\n                    }\r\n\r\n                    return {\r\n                        angle: angle,\r\n                        distance: radialDistanceFromCenter\r\n                    };\r\n                };\r\n                helpers.distanceBetweenPoints = function(pt1, pt2) {\r\n                    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\r\n                };\r\n                helpers.aliasPixel = function(pixelWidth) {\r\n                    return (pixelWidth % 2 === 0) ? 0 : 0.5;\r\n                };\r\n                helpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\r\n                    // Props to Rob Spencer at scaled innovation for his post on splining between points\r\n                    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\r\n\r\n                    // This function must also respect \"skipped\" points\r\n\r\n                    var previous = firstPoint.skip ? middlePoint : firstPoint;\r\n                    var current = middlePoint;\r\n                    var next = afterPoint.skip ? middlePoint : afterPoint;\r\n\r\n                    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\r\n                    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\r\n\r\n                    var s01 = d01 / (d01 + d12);\r\n                    var s12 = d12 / (d01 + d12);\r\n\r\n                    // If all points are the same, s01 & s02 will be inf\r\n                    s01 = isNaN(s01) ? 0 : s01;\r\n                    s12 = isNaN(s12) ? 0 : s12;\r\n\r\n                    var fa = t * s01; // scaling factor for triangle Ta\r\n                    var fb = t * s12;\r\n\r\n                    return {\r\n                        previous: {\r\n                            x: current.x - fa * (next.x - previous.x),\r\n                            y: current.y - fa * (next.y - previous.y)\r\n                        },\r\n                        next: {\r\n                            x: current.x + fb * (next.x - previous.x),\r\n                            y: current.y + fb * (next.y - previous.y)\r\n                        }\r\n                    };\r\n                };\r\n                helpers.EPSILON = Number.EPSILON || 1e-14;\r\n                helpers.splineCurveMonotone = function(points) {\r\n                    // This function calculates Bézier control points in a similar way than |splineCurve|,\r\n                    // but preserves monotonicity of the provided data and ensures no local extremums are added\r\n                    // between the dataset discrete points due to the interpolation.\r\n                    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\r\n\r\n                    var pointsWithTangents = (points || []).map(function(point) {\r\n                        return {\r\n                            model: point._model,\r\n                            deltaK: 0,\r\n                            mK: 0\r\n                        };\r\n                    });\r\n\r\n                    // Calculate slopes (deltaK) and initialize tangents (mK)\r\n                    var pointsLen = pointsWithTangents.length;\r\n                    var i, pointBefore, pointCurrent, pointAfter;\r\n                    for (i = 0; i < pointsLen; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        if (pointCurrent.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n                        if (pointAfter && !pointAfter.model.skip) {\r\n                            var slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\r\n\r\n                            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\r\n                            pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\r\n                        }\r\n\r\n                        if (!pointBefore || pointBefore.model.skip) {\r\n                            pointCurrent.mK = pointCurrent.deltaK;\r\n                        } else if (!pointAfter || pointAfter.model.skip) {\r\n                            pointCurrent.mK = pointBefore.deltaK;\r\n                        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\r\n                            pointCurrent.mK = 0;\r\n                        } else {\r\n                            pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\r\n                        }\r\n                    }\r\n\r\n                    // Adjust tangents to ensure monotonic properties\r\n                    var alphaK, betaK, tauK, squaredMagnitude;\r\n                    for (i = 0; i < pointsLen - 1; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        pointAfter = pointsWithTangents[i + 1];\r\n                        if (pointCurrent.model.skip || pointAfter.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\r\n                            pointCurrent.mK = pointAfter.mK = 0;\r\n                            continue;\r\n                        }\r\n\r\n                        alphaK = pointCurrent.mK / pointCurrent.deltaK;\r\n                        betaK = pointAfter.mK / pointCurrent.deltaK;\r\n                        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\r\n                        if (squaredMagnitude <= 9) {\r\n                            continue;\r\n                        }\r\n\r\n                        tauK = 3 / Math.sqrt(squaredMagnitude);\r\n                        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\r\n                        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\r\n                    }\r\n\r\n                    // Compute control points\r\n                    var deltaX;\r\n                    for (i = 0; i < pointsLen; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        if (pointCurrent.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n                        if (pointBefore && !pointBefore.model.skip) {\r\n                            deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\r\n                            pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\r\n                            pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\r\n                        }\r\n                        if (pointAfter && !pointAfter.model.skip) {\r\n                            deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\r\n                            pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\r\n                            pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\r\n                        }\r\n                    }\r\n                };\r\n                helpers.nextItem = function(collection, index, loop) {\r\n                    if (loop) {\r\n                        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\r\n                    }\r\n                    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\r\n                };\r\n                helpers.previousItem = function(collection, index, loop) {\r\n                    if (loop) {\r\n                        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\r\n                    }\r\n                    return index <= 0 ? collection[0] : collection[index - 1];\r\n                };\r\n                // Implementation of the nice number algorithm used in determining where axis labels will go\r\n                helpers.niceNum = function(range, round) {\r\n                    var exponent = Math.floor(helpers.log10(range));\r\n                    var fraction = range / Math.pow(10, exponent);\r\n                    var niceFraction;\r\n\r\n                    if (round) {\r\n                        if (fraction < 1.5) {\r\n                            niceFraction = 1;\r\n                        } else if (fraction < 3) {\r\n                            niceFraction = 2;\r\n                        } else if (fraction < 7) {\r\n                            niceFraction = 5;\r\n                        } else {\r\n                            niceFraction = 10;\r\n                        }\r\n                    } else if (fraction <= 1.0) {\r\n                        niceFraction = 1;\r\n                    } else if (fraction <= 2) {\r\n                        niceFraction = 2;\r\n                    } else if (fraction <= 5) {\r\n                        niceFraction = 5;\r\n                    } else {\r\n                        niceFraction = 10;\r\n                    }\r\n\r\n                    return niceFraction * Math.pow(10, exponent);\r\n                };\r\n                // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n                helpers.requestAnimFrame = (function() {\r\n                    if (typeof window === 'undefined') {\r\n                        return function(callback) {\r\n                            callback();\r\n                        };\r\n                    }\r\n                    return window.requestAnimationFrame ||\r\n                        window.webkitRequestAnimationFrame ||\r\n                        window.mozRequestAnimationFrame ||\r\n                        window.oRequestAnimationFrame ||\r\n                        window.msRequestAnimationFrame ||\r\n                        function(callback) {\r\n                            return window.setTimeout(callback, 1000 / 60);\r\n                        };\r\n                }());\r\n                // -- DOM methods\r\n                helpers.getRelativePosition = function(evt, chart) {\r\n                    var mouseX, mouseY;\r\n                    var e = evt.originalEvent || evt;\r\n                    var canvas = evt.currentTarget || evt.srcElement;\r\n                    var boundingRect = canvas.getBoundingClientRect();\r\n\r\n                    var touches = e.touches;\r\n                    if (touches && touches.length > 0) {\r\n                        mouseX = touches[0].clientX;\r\n                        mouseY = touches[0].clientY;\r\n                    } else {\r\n                        mouseX = e.clientX;\r\n                        mouseY = e.clientY;\r\n                    }\r\n\r\n                    // Scale mouse coordinates into canvas coordinates\r\n                    // by following the pattern laid out by 'jerryj' in the comments of\r\n                    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\r\n                    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\r\n                    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\r\n                    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\r\n                    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\r\n                    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\r\n                    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\r\n\r\n                    // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\r\n                    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\r\n                    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\r\n                    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\r\n\r\n                    return {\r\n                        x: mouseX,\r\n                        y: mouseY\r\n                    };\r\n                };\r\n\r\n                // Private helper function to convert max-width/max-height values that may be percentages into a number\r\n                function parseMaxStyle(styleValue, node, parentProperty) {\r\n                    var valueInPixels;\r\n                    if (typeof styleValue === 'string') {\r\n                        valueInPixels = parseInt(styleValue, 10);\r\n\r\n                        if (styleValue.indexOf('%') !== -1) {\r\n                            // percentage * size in dimension\r\n                            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\r\n                        }\r\n                    } else {\r\n                        valueInPixels = styleValue;\r\n                    }\r\n\r\n                    return valueInPixels;\r\n                }\r\n\r\n                /**\r\n                 * Returns if the given value contains an effective constraint.\r\n                 * @private\r\n                 */\r\n                function isConstrainedValue(value) {\r\n                    return value !== undefined && value !== null && value !== 'none';\r\n                }\r\n\r\n                // Private helper to get a constraint dimension\r\n                // @param domNode : the node to check the constraint on\r\n                // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\r\n                // @param percentageProperty : property of parent to use when calculating width as a percentage\r\n                // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\r\n                function getConstraintDimension(domNode, maxStyle, percentageProperty) {\r\n                    var view = document.defaultView;\r\n                    var parentNode = domNode.parentNode;\r\n                    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\r\n                    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\r\n                    var hasCNode = isConstrainedValue(constrainedNode);\r\n                    var hasCContainer = isConstrainedValue(constrainedContainer);\r\n                    var infinity = Number.POSITIVE_INFINITY;\r\n\r\n                    if (hasCNode || hasCContainer) {\r\n                        return Math.min(\r\n                            hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\r\n                            hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\r\n                    }\r\n\r\n                    return 'none';\r\n                }\r\n                // returns Number or undefined if no constraint\r\n                helpers.getConstraintWidth = function(domNode) {\r\n                    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\r\n                };\r\n                // returns Number or undefined if no constraint\r\n                helpers.getConstraintHeight = function(domNode) {\r\n                    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\r\n                };\r\n                helpers.getMaximumWidth = function(domNode) {\r\n                    var container = domNode.parentNode;\r\n                    if (!container) {\r\n                        return domNode.clientWidth;\r\n                    }\r\n\r\n                    var paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\r\n                    var paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\r\n                    var w = container.clientWidth - paddingLeft - paddingRight;\r\n                    var cw = helpers.getConstraintWidth(domNode);\r\n                    return isNaN(cw) ? w : Math.min(w, cw);\r\n                };\r\n                helpers.getMaximumHeight = function(domNode) {\r\n                    var container = domNode.parentNode;\r\n                    if (!container) {\r\n                        return domNode.clientHeight;\r\n                    }\r\n\r\n                    var paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\r\n                    var paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\r\n                    var h = container.clientHeight - paddingTop - paddingBottom;\r\n                    var ch = helpers.getConstraintHeight(domNode);\r\n                    return isNaN(ch) ? h : Math.min(h, ch);\r\n                };\r\n                helpers.getStyle = function(el, property) {\r\n                    return el.currentStyle ?\r\n                        el.currentStyle[property] :\r\n                        document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\r\n                };\r\n                helpers.retinaScale = function(chart, forceRatio) {\r\n                    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\r\n                    if (pixelRatio === 1) {\r\n                        return;\r\n                    }\r\n\r\n                    var canvas = chart.canvas;\r\n                    var height = chart.height;\r\n                    var width = chart.width;\r\n\r\n                    canvas.height = height * pixelRatio;\r\n                    canvas.width = width * pixelRatio;\r\n                    chart.ctx.scale(pixelRatio, pixelRatio);\r\n\r\n                    // If no style has been set on the canvas, the render size is used as display size,\r\n                    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\r\n                    // See https://github.com/chartjs/Chart.js/issues/3575\r\n                    if (!canvas.style.height && !canvas.style.width) {\r\n                        canvas.style.height = height + 'px';\r\n                        canvas.style.width = width + 'px';\r\n                    }\r\n                };\r\n                // -- Canvas methods\r\n                helpers.fontString = function(pixelSize, fontStyle, fontFamily) {\r\n                    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\r\n                };\r\n                helpers.longestText = function(ctx, font, arrayOfThings, cache) {\r\n                    cache = cache || {};\r\n                    var data = cache.data = cache.data || {};\r\n                    var gc = cache.garbageCollect = cache.garbageCollect || [];\r\n\r\n                    if (cache.font !== font) {\r\n                        data = cache.data = {};\r\n                        gc = cache.garbageCollect = [];\r\n                        cache.font = font;\r\n                    }\r\n\r\n                    ctx.font = font;\r\n                    var longest = 0;\r\n                    helpers.each(arrayOfThings, function(thing) {\r\n                        // Undefined strings and arrays should not be measured\r\n                        if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\r\n                            longest = helpers.measureText(ctx, data, gc, longest, thing);\r\n                        } else if (helpers.isArray(thing)) {\r\n                            // if it is an array lets measure each element\r\n                            // to do maybe simplify this function a bit so we can do this more recursively?\r\n                            helpers.each(thing, function(nestedThing) {\r\n                                // Undefined strings and arrays should not be measured\r\n                                if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\r\n                                    longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    var gcLen = gc.length / 2;\r\n                    if (gcLen > arrayOfThings.length) {\r\n                        for (var i = 0; i < gcLen; i++) {\r\n                            delete data[gc[i]];\r\n                        }\r\n                        gc.splice(0, gcLen);\r\n                    }\r\n                    return longest;\r\n                };\r\n                helpers.measureText = function(ctx, data, gc, longest, string) {\r\n                    var textWidth = data[string];\r\n                    if (!textWidth) {\r\n                        textWidth = data[string] = ctx.measureText(string).width;\r\n                        gc.push(string);\r\n                    }\r\n                    if (textWidth > longest) {\r\n                        longest = textWidth;\r\n                    }\r\n                    return longest;\r\n                };\r\n                helpers.numberOfLabelLines = function(arrayOfThings) {\r\n                    var numberOfLines = 1;\r\n                    helpers.each(arrayOfThings, function(thing) {\r\n                        if (helpers.isArray(thing)) {\r\n                            if (thing.length > numberOfLines) {\r\n                                numberOfLines = thing.length;\r\n                            }\r\n                        }\r\n                    });\r\n                    return numberOfLines;\r\n                };\r\n\r\n                helpers.color = !color ?\r\n                    function(value) {\r\n                        console.error('Color.js not found!');\r\n                        return value;\r\n                    } :\r\n                    function(value) {\r\n                        /* global CanvasGradient */\r\n                        if (value instanceof CanvasGradient) {\r\n                            value = defaults.global.defaultColor;\r\n                        }\r\n\r\n                        return color(value);\r\n                    };\r\n\r\n                helpers.getHoverColor = function(colorValue) {\r\n                    /* global CanvasPattern */\r\n                    return (colorValue instanceof CanvasPattern) ?\r\n                        colorValue :\r\n                        helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"2\": 2, \"36\": 36 }], 19: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Helper function to get relative position for an event\r\n             * @param {Event|IEvent} event - The event to get the position for\r\n             * @param {Chart} chart - The chart\r\n             * @returns {Point} the event position\r\n             */\r\n            function getRelativePosition(e, chart) {\r\n                if (e.native) {\r\n                    return {\r\n                        x: e.x,\r\n                        y: e.y\r\n                    };\r\n                }\r\n\r\n                return helpers.getRelativePosition(e, chart);\r\n            }\r\n\r\n            /**\r\n             * Helper function to traverse all of the visible elements in the chart\r\n             * @param chart {chart} the chart\r\n             * @param handler {Function} the callback to execute for each visible item\r\n             */\r\n            function parseVisibleItems(chart, handler) {\r\n                var datasets = chart.data.datasets;\r\n                var meta, i, j, ilen, jlen;\r\n\r\n                for (i = 0, ilen = datasets.length; i < ilen; ++i) {\r\n                    if (!chart.isDatasetVisible(i)) {\r\n                        continue;\r\n                    }\r\n\r\n                    meta = chart.getDatasetMeta(i);\r\n                    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\r\n                        var element = meta.data[j];\r\n                        if (!element._view.skip) {\r\n                            handler(element);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the items that intersect the event position\r\n             * @param items {ChartElement[]} elements to filter\r\n             * @param position {Point} the point to be nearest to\r\n             * @return {ChartElement[]} the nearest items\r\n             */\r\n            function getIntersectItems(chart, position) {\r\n                var elements = [];\r\n\r\n                parseVisibleItems(chart, function(element) {\r\n                    if (element.inRange(position.x, position.y)) {\r\n                        elements.push(element);\r\n                    }\r\n                });\r\n\r\n                return elements;\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the items nearest to the event position considering all visible items in teh chart\r\n             * @param chart {Chart} the chart to look at elements from\r\n             * @param position {Point} the point to be nearest to\r\n             * @param intersect {Boolean} if true, only consider items that intersect the position\r\n             * @param distanceMetric {Function} function to provide the distance between points\r\n             * @return {ChartElement[]} the nearest items\r\n             */\r\n            function getNearestItems(chart, position, intersect, distanceMetric) {\r\n                var minDistance = Number.POSITIVE_INFINITY;\r\n                var nearestItems = [];\r\n\r\n                parseVisibleItems(chart, function(element) {\r\n                    if (intersect && !element.inRange(position.x, position.y)) {\r\n                        return;\r\n                    }\r\n\r\n                    var center = element.getCenterPoint();\r\n                    var distance = distanceMetric(position, center);\r\n\r\n                    if (distance < minDistance) {\r\n                        nearestItems = [element];\r\n                        minDistance = distance;\r\n                    } else if (distance === minDistance) {\r\n                        // Can have multiple items at the same distance in which case we sort by size\r\n                        nearestItems.push(element);\r\n                    }\r\n                });\r\n\r\n                return nearestItems;\r\n            }\r\n\r\n            /**\r\n             * Get a distance metric function for two points based on the\r\n             * axis mode setting\r\n             * @param {String} axis the axis mode. x|y|xy\r\n             */\r\n            function getDistanceMetricForAxis(axis) {\r\n                var useX = axis.indexOf('x') !== -1;\r\n                var useY = axis.indexOf('y') !== -1;\r\n\r\n                return function(pt1, pt2) {\r\n                    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n                    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n                    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n                };\r\n            }\r\n\r\n            function indexMode(chart, e, options) {\r\n                var position = getRelativePosition(e, chart);\r\n                // Default axis for index mode is 'x' to match old behaviour\r\n                options.axis = options.axis || 'x';\r\n                var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\r\n                var elements = [];\r\n\r\n                if (!items.length) {\r\n                    return [];\r\n                }\r\n\r\n                chart.data.datasets.forEach(function(dataset, datasetIndex) {\r\n                    if (chart.isDatasetVisible(datasetIndex)) {\r\n                        var meta = chart.getDatasetMeta(datasetIndex);\r\n                        var element = meta.data[items[0]._index];\r\n\r\n                        // don't count items that are skipped (null data)\r\n                        if (element && !element._view.skip) {\r\n                            elements.push(element);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                return elements;\r\n            }\r\n\r\n            /**\r\n             * @interface IInteractionOptions\r\n             */\r\n            /**\r\n             * If true, only consider items that intersect the point\r\n             * @name IInterfaceOptions#boolean\r\n             * @type Boolean\r\n             */\r\n\r\n            /**\r\n             * Contains interaction related functions\r\n             * @namespace Chart.Interaction\r\n             */\r\n            module.exports = {\r\n                // Helper function for different modes\r\n                modes: {\r\n                    single: function(chart, e) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var elements = [];\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                elements.push(element);\r\n                                return elements;\r\n                            }\r\n                        });\r\n\r\n                        return elements.slice(0, 1);\r\n                    },\r\n\r\n                    /**\r\n                     * @function Chart.Interaction.modes.label\r\n                     * @deprecated since version 2.4.0\r\n                     * @todo remove at version 3\r\n                     * @private\r\n                     */\r\n                    label: indexMode,\r\n\r\n                    /**\r\n                     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\r\n                     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\r\n                     * @function Chart.Interaction.modes.index\r\n                     * @since v2.4.0\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use during interaction\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    index: indexMode,\r\n\r\n                    /**\r\n                     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\r\n                     * If the options.intersect is false, we find the nearest item and return the items in that dataset\r\n                     * @function Chart.Interaction.modes.dataset\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use during interaction\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    dataset: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        options.axis = options.axis || 'xy';\r\n                        var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\r\n\r\n                        if (items.length > 0) {\r\n                            items = chart.getDatasetMeta(items[0]._datasetIndex).data;\r\n                        }\r\n\r\n                        return items;\r\n                    },\r\n\r\n                    /**\r\n                     * @function Chart.Interaction.modes.x-axis\r\n                     * @deprecated since version 2.4.0. Use index mode and intersect == true\r\n                     * @todo remove at version 3\r\n                     * @private\r\n                     */\r\n                    'x-axis': function(chart, e) {\r\n                        return indexMode(chart, e, { intersect: false });\r\n                    },\r\n\r\n                    /**\r\n                     * Point mode returns all elements that hit test based on the event position\r\n                     * of the event\r\n                     * @function Chart.Interaction.modes.intersect\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    point: function(chart, e) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        return getIntersectItems(chart, position);\r\n                    },\r\n\r\n                    /**\r\n                     * nearest mode returns the element closest to the point\r\n                     * @function Chart.Interaction.modes.intersect\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    nearest: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        options.axis = options.axis || 'xy';\r\n                        var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                        var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\r\n\r\n                        // We have multiple items at the same distance from the event. Now sort by smallest\r\n                        if (nearestItems.length > 1) {\r\n                            nearestItems.sort(function(a, b) {\r\n                                var sizeA = a.getArea();\r\n                                var sizeB = b.getArea();\r\n                                var ret = sizeA - sizeB;\r\n\r\n                                if (ret === 0) {\r\n                                    // if equal sort by dataset index\r\n                                    ret = a._datasetIndex - b._datasetIndex;\r\n                                }\r\n\r\n                                return ret;\r\n                            });\r\n                        }\r\n\r\n                        // Return only 1 item\r\n                        return nearestItems.slice(0, 1);\r\n                    },\r\n\r\n                    /**\r\n                     * x mode returns the elements that hit-test at the current x coordinate\r\n                     * @function Chart.Interaction.modes.x\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    x: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var items = [];\r\n                        var intersectsItem = false;\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inXRange(position.x)) {\r\n                                items.push(element);\r\n                            }\r\n\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                intersectsItem = true;\r\n                            }\r\n                        });\r\n\r\n                        // If we want to trigger on an intersect and we don't have any items\r\n                        // that intersect the position, return nothing\r\n                        if (options.intersect && !intersectsItem) {\r\n                            items = [];\r\n                        }\r\n                        return items;\r\n                    },\r\n\r\n                    /**\r\n                     * y mode returns the elements that hit-test at the current y coordinate\r\n                     * @function Chart.Interaction.modes.y\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    y: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var items = [];\r\n                        var intersectsItem = false;\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inYRange(position.y)) {\r\n                                items.push(element);\r\n                            }\r\n\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                intersectsItem = true;\r\n                            }\r\n                        });\r\n\r\n                        // If we want to trigger on an intersect and we don't have any items\r\n                        // that intersect the position, return nothing\r\n                        if (options.intersect && !intersectsItem) {\r\n                            items = [];\r\n                        }\r\n                        return items;\r\n                    }\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 20: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n\r\n            defaults._set('global', {\r\n                responsive: true,\r\n                responsiveAnimationDuration: 0,\r\n                maintainAspectRatio: true,\r\n                events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\r\n                hover: {\r\n                    onHover: null,\r\n                    mode: 'nearest',\r\n                    intersect: true,\r\n                    animationDuration: 400\r\n                },\r\n                onClick: null,\r\n                defaultColor: 'rgba(0,0,0,0.1)',\r\n                defaultFontColor: '#666',\r\n                defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n                defaultFontSize: 12,\r\n                defaultFontStyle: 'normal',\r\n                showLines: true,\r\n\r\n                // Element defaults defined in element extensions\r\n                elements: {},\r\n\r\n                // Layout options such as padding\r\n                layout: {\r\n                    padding: {\r\n                        top: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        left: 0\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = function() {\r\n                // Occupy the global variable of Chart, and create a simple base class\r\n                var Chart = function(item, config) {\r\n                    this.construct(item, config);\r\n                    return this;\r\n                };\r\n\r\n                Chart.Chart = Chart;\r\n\r\n                return Chart;\r\n            };\r\n        }, { \"16\": 16 }], 21: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            function filterByPosition(array, position) {\r\n                return helpers.where(array, function(v) {\r\n                    return v.position === position;\r\n                });\r\n            }\r\n\r\n            function sortByWeight(array, reverse) {\r\n                array.forEach(function(v, i) {\r\n                    v._tmpIndex_ = i;\r\n                    return v;\r\n                });\r\n                array.sort(function(a, b) {\r\n                    var v0 = reverse ? b : a;\r\n                    var v1 = reverse ? a : b;\r\n                    return v0.weight === v1.weight ?\r\n                        v0._tmpIndex_ - v1._tmpIndex_ :\r\n                        v0.weight - v1.weight;\r\n                });\r\n                array.forEach(function(v) {\r\n                    delete v._tmpIndex_;\r\n                });\r\n            }\r\n\r\n            /**\r\n             * @interface ILayoutItem\r\n             * @prop {String} position - The position of the item in the chart layout. Possible values are\r\n             * 'left', 'top', 'right', 'bottom', and 'chartArea'\r\n             * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\r\n             * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\r\n             * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\r\n             * @prop {Function} update - Takes two parameters: width and height. Returns size of item\r\n             * @prop {Function} getPadding -  Returns an object with padding on the edges\r\n             * @prop {Number} width - Width of item. Must be valid after update()\r\n             * @prop {Number} height - Height of item. Must be valid after update()\r\n             * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\r\n             */\r\n\r\n            // The layout service is very self explanatory.  It's responsible for the layout within a chart.\r\n            // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\r\n            // It is this service's responsibility of carrying out that layout.\r\n            module.exports = {\r\n                defaults: {},\r\n\r\n                /**\r\n                 * Register a box to a chart.\r\n                 * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\r\n                 * @param {Chart} chart - the chart to use\r\n                 * @param {ILayoutItem} item - the item to add to be layed out\r\n                 */\r\n                addBox: function(chart, item) {\r\n                    if (!chart.boxes) {\r\n                        chart.boxes = [];\r\n                    }\r\n\r\n                    // initialize item with default values\r\n                    item.fullWidth = item.fullWidth || false;\r\n                    item.position = item.position || 'top';\r\n                    item.weight = item.weight || 0;\r\n\r\n                    chart.boxes.push(item);\r\n                },\r\n\r\n                /**\r\n                 * Remove a layoutItem from a chart\r\n                 * @param {Chart} chart - the chart to remove the box from\r\n                 * @param {Object} layoutItem - the item to remove from the layout\r\n                 */\r\n                removeBox: function(chart, layoutItem) {\r\n                    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n                    if (index !== -1) {\r\n                        chart.boxes.splice(index, 1);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Sets (or updates) options on the given `item`.\r\n                 * @param {Chart} chart - the chart in which the item lives (or will be added to)\r\n                 * @param {Object} item - the item to configure with the given options\r\n                 * @param {Object} options - the new item options.\r\n                 */\r\n                configure: function(chart, item, options) {\r\n                    var props = ['fullWidth', 'position', 'weight'];\r\n                    var ilen = props.length;\r\n                    var i = 0;\r\n                    var prop;\r\n\r\n                    for (; i < ilen; ++i) {\r\n                        prop = props[i];\r\n                        if (options.hasOwnProperty(prop)) {\r\n                            item[prop] = options[prop];\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Fits boxes of the given chart into the given size by having each box measure itself\r\n                 * then running a fitting algorithm\r\n                 * @param {Chart} chart - the chart\r\n                 * @param {Number} width - the width to fit into\r\n                 * @param {Number} height - the height to fit into\r\n                 */\r\n                update: function(chart, width, height) {\r\n                    if (!chart) {\r\n                        return;\r\n                    }\r\n\r\n                    var layoutOptions = chart.options.layout || {};\r\n                    var padding = helpers.options.toPadding(layoutOptions.padding);\r\n                    var leftPadding = padding.left;\r\n                    var rightPadding = padding.right;\r\n                    var topPadding = padding.top;\r\n                    var bottomPadding = padding.bottom;\r\n\r\n                    var leftBoxes = filterByPosition(chart.boxes, 'left');\r\n                    var rightBoxes = filterByPosition(chart.boxes, 'right');\r\n                    var topBoxes = filterByPosition(chart.boxes, 'top');\r\n                    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\r\n                    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\r\n\r\n                    // Sort boxes by weight. A higher weight is further away from the chart area\r\n                    sortByWeight(leftBoxes, true);\r\n                    sortByWeight(rightBoxes, false);\r\n                    sortByWeight(topBoxes, true);\r\n                    sortByWeight(bottomBoxes, false);\r\n\r\n                    // Essentially we now have any number of boxes on each of the 4 sides.\r\n                    // Our canvas looks like the following.\r\n                    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\r\n                    // B1 is the bottom axis\r\n                    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\r\n                    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\r\n                    // an error will be thrown.\r\n                    //\r\n                    // |----------------------------------------------------|\r\n                    // |                  T1 (Full Width)                   |\r\n                    // |----------------------------------------------------|\r\n                    // |    |    |                 T2                  |    |\r\n                    // |    |----|-------------------------------------|----|\r\n                    // |    |    | C1 |                           | C2 |    |\r\n                    // |    |    |----|                           |----|    |\r\n                    // |    |    |                                     |    |\r\n                    // | L1 | L2 |           ChartArea (C0)            | R1 |\r\n                    // |    |    |                                     |    |\r\n                    // |    |    |----|                           |----|    |\r\n                    // |    |    | C3 |                           | C4 |    |\r\n                    // |    |----|-------------------------------------|----|\r\n                    // |    |    |                 B1                  |    |\r\n                    // |----------------------------------------------------|\r\n                    // |                  B2 (Full Width)                   |\r\n                    // |----------------------------------------------------|\r\n                    //\r\n                    // What we do to find the best sizing, we do the following\r\n                    // 1. Determine the minimum size of the chart area.\r\n                    // 2. Split the remaining width equally between each vertical axis\r\n                    // 3. Split the remaining height equally between each horizontal axis\r\n                    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\r\n                    // 5. Adjust the sizes of each axis based on it's minimum reported size.\r\n                    // 6. Refit each axis\r\n                    // 7. Position each axis in the final location\r\n                    // 8. Tell the chart the final location of the chart area\r\n                    // 9. Tell any axes that overlay the chart area the positions of the chart area\r\n\r\n                    // Step 1\r\n                    var chartWidth = width - leftPadding - rightPadding;\r\n                    var chartHeight = height - topPadding - bottomPadding;\r\n                    var chartAreaWidth = chartWidth / 2; // min 50%\r\n                    var chartAreaHeight = chartHeight / 2; // min 50%\r\n\r\n                    // Step 2\r\n                    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\r\n\r\n                    // Step 3\r\n                    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\r\n\r\n                    // Step 4\r\n                    var maxChartAreaWidth = chartWidth;\r\n                    var maxChartAreaHeight = chartHeight;\r\n                    var minBoxSizes = [];\r\n\r\n                    function getMinimumBoxSize(box) {\r\n                        var minSize;\r\n                        var isHorizontal = box.isHorizontal();\r\n\r\n                        if (isHorizontal) {\r\n                            minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\r\n                            maxChartAreaHeight -= minSize.height;\r\n                        } else {\r\n                            minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\r\n                            maxChartAreaWidth -= minSize.width;\r\n                        }\r\n\r\n                        minBoxSizes.push({\r\n                            horizontal: isHorizontal,\r\n                            minSize: minSize,\r\n                            box: box,\r\n                        });\r\n                    }\r\n\r\n                    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\r\n\r\n                    // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\r\n                    var maxHorizontalLeftPadding = 0;\r\n                    var maxHorizontalRightPadding = 0;\r\n                    var maxVerticalTopPadding = 0;\r\n                    var maxVerticalBottomPadding = 0;\r\n\r\n                    helpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\r\n                        if (horizontalBox.getPadding) {\r\n                            var boxPadding = horizontalBox.getPadding();\r\n                            maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\r\n                            maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\r\n                        }\r\n                    });\r\n\r\n                    helpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\r\n                        if (verticalBox.getPadding) {\r\n                            var boxPadding = verticalBox.getPadding();\r\n                            maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\r\n                            maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\r\n                        }\r\n                    });\r\n\r\n                    // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\r\n                    // be if the axes are drawn at their minimum sizes.\r\n                    // Steps 5 & 6\r\n                    var totalLeftBoxesWidth = leftPadding;\r\n                    var totalRightBoxesWidth = rightPadding;\r\n                    var totalTopBoxesHeight = topPadding;\r\n                    var totalBottomBoxesHeight = bottomPadding;\r\n\r\n                    // Function to fit a box\r\n                    function fitBox(box) {\r\n                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\r\n                            return minBox.box === box;\r\n                        });\r\n\r\n                        if (minBoxSize) {\r\n                            if (box.isHorizontal()) {\r\n                                var scaleMargin = {\r\n                                    left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\r\n                                    right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\r\n                                    top: 0,\r\n                                    bottom: 0\r\n                                };\r\n\r\n                                // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\r\n                                // on the margin. Sometimes they need to increase in size slightly\r\n                                box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\r\n                            } else {\r\n                                box.update(minBoxSize.minSize.width, maxChartAreaHeight);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Update, and calculate the left and right margins for the horizontal boxes\r\n                    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\r\n\r\n                    helpers.each(leftBoxes, function(box) {\r\n                        totalLeftBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(rightBoxes, function(box) {\r\n                        totalRightBoxesWidth += box.width;\r\n                    });\r\n\r\n                    // Set the Left and Right margins for the horizontal boxes\r\n                    helpers.each(topBoxes.concat(bottomBoxes), fitBox);\r\n\r\n                    // Figure out how much margin is on the top and bottom of the vertical boxes\r\n                    helpers.each(topBoxes, function(box) {\r\n                        totalTopBoxesHeight += box.height;\r\n                    });\r\n\r\n                    helpers.each(bottomBoxes, function(box) {\r\n                        totalBottomBoxesHeight += box.height;\r\n                    });\r\n\r\n                    function finalFitVerticalBox(box) {\r\n                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\r\n                            return minSize.box === box;\r\n                        });\r\n\r\n                        var scaleMargin = {\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: totalTopBoxesHeight,\r\n                            bottom: totalBottomBoxesHeight\r\n                        };\r\n\r\n                        if (minBoxSize) {\r\n                            box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\r\n                        }\r\n                    }\r\n\r\n                    // Let the left layout know the final margin\r\n                    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\r\n\r\n                    // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\r\n                    totalLeftBoxesWidth = leftPadding;\r\n                    totalRightBoxesWidth = rightPadding;\r\n                    totalTopBoxesHeight = topPadding;\r\n                    totalBottomBoxesHeight = bottomPadding;\r\n\r\n                    helpers.each(leftBoxes, function(box) {\r\n                        totalLeftBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(rightBoxes, function(box) {\r\n                        totalRightBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(topBoxes, function(box) {\r\n                        totalTopBoxesHeight += box.height;\r\n                    });\r\n                    helpers.each(bottomBoxes, function(box) {\r\n                        totalBottomBoxesHeight += box.height;\r\n                    });\r\n\r\n                    // We may be adding some padding to account for rotated x axis labels\r\n                    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\r\n                    totalLeftBoxesWidth += leftPaddingAddition;\r\n                    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\r\n\r\n                    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\r\n                    totalTopBoxesHeight += topPaddingAddition;\r\n                    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\r\n\r\n                    // Figure out if our chart area changed. This would occur if the dataset layout label rotation\r\n                    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\r\n                    // without calling `fit` again\r\n                    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\r\n                    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\r\n\r\n                    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\r\n                        helpers.each(leftBoxes, function(box) {\r\n                            box.height = newMaxChartAreaHeight;\r\n                        });\r\n\r\n                        helpers.each(rightBoxes, function(box) {\r\n                            box.height = newMaxChartAreaHeight;\r\n                        });\r\n\r\n                        helpers.each(topBoxes, function(box) {\r\n                            if (!box.fullWidth) {\r\n                                box.width = newMaxChartAreaWidth;\r\n                            }\r\n                        });\r\n\r\n                        helpers.each(bottomBoxes, function(box) {\r\n                            if (!box.fullWidth) {\r\n                                box.width = newMaxChartAreaWidth;\r\n                            }\r\n                        });\r\n\r\n                        maxChartAreaHeight = newMaxChartAreaHeight;\r\n                        maxChartAreaWidth = newMaxChartAreaWidth;\r\n                    }\r\n\r\n                    // Step 7 - Position the boxes\r\n                    var left = leftPadding + leftPaddingAddition;\r\n                    var top = topPadding + topPaddingAddition;\r\n\r\n                    function placeBox(box) {\r\n                        if (box.isHorizontal()) {\r\n                            box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\r\n                            box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\r\n                            box.top = top;\r\n                            box.bottom = top + box.height;\r\n\r\n                            // Move to next point\r\n                            top = box.bottom;\r\n                        } else {\r\n                            box.left = left;\r\n                            box.right = left + box.width;\r\n                            box.top = totalTopBoxesHeight;\r\n                            box.bottom = totalTopBoxesHeight + maxChartAreaHeight;\r\n\r\n                            // Move to next point\r\n                            left = box.right;\r\n                        }\r\n                    }\r\n\r\n                    helpers.each(leftBoxes.concat(topBoxes), placeBox);\r\n\r\n                    // Account for chart width and height\r\n                    left += maxChartAreaWidth;\r\n                    top += maxChartAreaHeight;\r\n\r\n                    helpers.each(rightBoxes, placeBox);\r\n                    helpers.each(bottomBoxes, placeBox);\r\n\r\n                    // Step 8\r\n                    chart.chartArea = {\r\n                        left: totalLeftBoxesWidth,\r\n                        top: totalTopBoxesHeight,\r\n                        right: totalLeftBoxesWidth + maxChartAreaWidth,\r\n                        bottom: totalTopBoxesHeight + maxChartAreaHeight\r\n                    };\r\n\r\n                    // Step 9\r\n                    helpers.each(chartAreaBoxes, function(box) {\r\n                        box.left = chart.chartArea.left;\r\n                        box.top = chart.chartArea.top;\r\n                        box.right = chart.chartArea.right;\r\n                        box.bottom = chart.chartArea.bottom;\r\n\r\n                        box.update(maxChartAreaWidth, maxChartAreaHeight);\r\n                    });\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 22: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                plugins: {}\r\n            });\r\n\r\n            /**\r\n             * The plugin service singleton\r\n             * @namespace Chart.plugins\r\n             * @since 2.1.0\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Globally registered plugins.\r\n                 * @private\r\n                 */\r\n                _plugins: [],\r\n\r\n                /**\r\n                 * This identifier is used to invalidate the descriptors cache attached to each chart\r\n                 * when a global plugin is registered or unregistered. In this case, the cache ID is\r\n                 * incremented and descriptors are regenerated during following API calls.\r\n                 * @private\r\n                 */\r\n                _cacheId: 0,\r\n\r\n                /**\r\n                 * Registers the given plugin(s) if not already registered.\r\n                 * @param {Array|Object} plugins plugin instance(s).\r\n                 */\r\n                register: function(plugins) {\r\n                    var p = this._plugins;\r\n                    ([]).concat(plugins).forEach(function(plugin) {\r\n                        if (p.indexOf(plugin) === -1) {\r\n                            p.push(plugin);\r\n                        }\r\n                    });\r\n\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Unregisters the given plugin(s) only if registered.\r\n                 * @param {Array|Object} plugins plugin instance(s).\r\n                 */\r\n                unregister: function(plugins) {\r\n                    var p = this._plugins;\r\n                    ([]).concat(plugins).forEach(function(plugin) {\r\n                        var idx = p.indexOf(plugin);\r\n                        if (idx !== -1) {\r\n                            p.splice(idx, 1);\r\n                        }\r\n                    });\r\n\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Remove all registered plugins.\r\n                 * @since 2.1.5\r\n                 */\r\n                clear: function() {\r\n                    this._plugins = [];\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Returns the number of registered plugins?\r\n                 * @returns {Number}\r\n                 * @since 2.1.5\r\n                 */\r\n                count: function() {\r\n                    return this._plugins.length;\r\n                },\r\n\r\n                /**\r\n                 * Returns all registered plugin instances.\r\n                 * @returns {Array} array of plugin objects.\r\n                 * @since 2.1.5\r\n                 */\r\n                getAll: function() {\r\n                    return this._plugins;\r\n                },\r\n\r\n                /**\r\n                 * Calls enabled plugins for `chart` on the specified hook and with the given args.\r\n                 * This method immediately returns as soon as a plugin explicitly returns false. The\r\n                 * returned value can be used, for instance, to interrupt the current action.\r\n                 * @param {Object} chart - The chart instance for which plugins should be called.\r\n                 * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\r\n                 * @param {Array} [args] - Extra arguments to apply to the hook call.\r\n                 * @returns {Boolean} false if any of the plugins return false, else returns true.\r\n                 */\r\n                notify: function(chart, hook, args) {\r\n                    var descriptors = this.descriptors(chart);\r\n                    var ilen = descriptors.length;\r\n                    var i, descriptor, plugin, params, method;\r\n\r\n                    for (i = 0; i < ilen; ++i) {\r\n                        descriptor = descriptors[i];\r\n                        plugin = descriptor.plugin;\r\n                        method = plugin[hook];\r\n                        if (typeof method === 'function') {\r\n                            params = [chart].concat(args || []);\r\n                            params.push(descriptor.options);\r\n                            if (method.apply(plugin, params) === false) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                },\r\n\r\n                /**\r\n                 * Returns descriptors of enabled plugins for the given chart.\r\n                 * @returns {Array} [{ plugin, options }]\r\n                 * @private\r\n                 */\r\n                descriptors: function(chart) {\r\n                    var cache = chart.$plugins || (chart.$plugins = {});\r\n                    if (cache.id === this._cacheId) {\r\n                        return cache.descriptors;\r\n                    }\r\n\r\n                    var plugins = [];\r\n                    var descriptors = [];\r\n                    var config = (chart && chart.config) || {};\r\n                    var options = (config.options && config.options.plugins) || {};\r\n\r\n                    this._plugins.concat(config.plugins || []).forEach(function(plugin) {\r\n                        var idx = plugins.indexOf(plugin);\r\n                        if (idx !== -1) {\r\n                            return;\r\n                        }\r\n\r\n                        var id = plugin.id;\r\n                        var opts = options[id];\r\n                        if (opts === false) {\r\n                            return;\r\n                        }\r\n\r\n                        if (opts === true) {\r\n                            opts = helpers.clone(defaults.global.plugins[id]);\r\n                        }\r\n\r\n                        plugins.push(plugin);\r\n                        descriptors.push({\r\n                            plugin: plugin,\r\n                            options: opts || {}\r\n                        });\r\n                    });\r\n\r\n                    cache.descriptors = descriptors;\r\n                    cache.id = this._cacheId;\r\n                    return descriptors;\r\n                },\r\n\r\n                /**\r\n                 * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\r\n                 * but in some cases, this reference can be changed by the user when updating options.\r\n                 * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\r\n                 * @private\r\n                 */\r\n                _invalidate: function(chart) {\r\n                    delete chart.$plugins;\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Plugin extension hooks.\r\n             * @interface IPlugin\r\n             * @since 2.1.0\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeInit\r\n             * @desc Called before initializing `chart`.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterInit\r\n             * @desc Called after `chart` has been initialized and before the first update.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeUpdate\r\n             * @desc Called before updating `chart`. If any plugin returns `false`, the update\r\n             * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart update.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterUpdate\r\n             * @desc Called after `chart` has been updated and before rendering. Note that this\r\n             * hook will not be called if the chart update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetsUpdate\r\n             * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\r\n             * the datasets update is cancelled until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} false to cancel the datasets update.\r\n             * @since version 2.1.5\r\n            */\r\n            /**\r\n             * @method IPlugin#afterDatasetsUpdate\r\n             * @desc Called after the `chart` datasets have been updated. Note that this hook\r\n             * will not be called if the datasets update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @since version 2.1.5\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetUpdate\r\n             * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\r\n             * returns `false`, the datasets update is cancelled until another `update` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetUpdate\r\n             * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\r\n             * that this hook will not be called if the datasets update has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeLayout\r\n             * @desc Called before laying out `chart`. If any plugin returns `false`,\r\n             * the layout update is cancelled until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart layout.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterLayout\r\n             * @desc Called after the `chart` has been layed out. Note that this hook will not\r\n             * be called if the layout update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeRender\r\n             * @desc Called before rendering `chart`. If any plugin returns `false`,\r\n             * the rendering is cancelled until another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart rendering.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterRender\r\n             * @desc Called after the `chart` has been fully rendered (and animation completed). Note\r\n             * that this hook will not be called if the rendering has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDraw\r\n             * @desc Called before drawing `chart` at every animation frame specified by the given\r\n             * easing value. If any plugin returns `false`, the frame drawing is cancelled until\r\n             * another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDraw\r\n             * @desc Called after the `chart` has been drawn for the specific easing value. Note\r\n             * that this hook will not be called if the drawing has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetsDraw\r\n             * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\r\n             * the datasets drawing is cancelled until another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetsDraw\r\n             * @desc Called after the `chart` datasets have been drawn. Note that this hook\r\n             * will not be called if the datasets drawing has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetDraw\r\n             * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\r\n             * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\r\n             * is cancelled until another `render` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetDraw\r\n             * @desc Called after the `chart` datasets at the given `args.index` have been drawn\r\n             * (datasets are drawn in the reverse order). Note that this hook will not be called\r\n             * if the datasets drawing has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeTooltipDraw\r\n             * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\r\n             * the tooltip drawing is cancelled until another `render` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Object} args.tooltip - The tooltip.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart tooltip drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterTooltipDraw\r\n             * @desc Called after drawing the `tooltip`. Note that this hook will not\r\n             * be called if the tooltip drawing has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Object} args.tooltip - The tooltip.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeEvent\r\n             * @desc Called before processing the specified `event`. If any plugin returns `false`,\r\n             * the event will be discarded.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {IEvent} event - The event object.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterEvent\r\n             * @desc Called after the `event` has been consumed. Note that this hook\r\n             * will not be called if the `event` has been previously discarded.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {IEvent} event - The event object.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#resize\r\n             * @desc Called after the chart as been resized.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#destroy\r\n             * @desc Called after the chart as been destroyed.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n        }, { \"16\": 16, \"36\": 36 }], 23: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var Ticks = require(25);\r\n\r\n            defaults._set('scale', {\r\n                display: true,\r\n                position: 'left',\r\n                offset: false,\r\n\r\n                // grid line settings\r\n                gridLines: {\r\n                    display: true,\r\n                    color: 'rgba(0, 0, 0, 0.1)',\r\n                    lineWidth: 1,\r\n                    drawBorder: true,\r\n                    drawOnChartArea: true,\r\n                    drawTicks: true,\r\n                    tickMarkLength: 10,\r\n                    zeroLineWidth: 1,\r\n                    zeroLineColor: 'rgba(0,0,0,0.25)',\r\n                    zeroLineBorderDash: [],\r\n                    zeroLineBorderDashOffset: 0.0,\r\n                    offsetGridLines: false,\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0\r\n                },\r\n\r\n                // scale label\r\n                scaleLabel: {\r\n                    // display property\r\n                    display: false,\r\n\r\n                    // actual label\r\n                    labelString: '',\r\n\r\n                    // line height\r\n                    lineHeight: 1.2,\r\n\r\n                    // top/bottom padding\r\n                    padding: {\r\n                        top: 4,\r\n                        bottom: 4\r\n                    }\r\n                },\r\n\r\n                // label settings\r\n                ticks: {\r\n                    beginAtZero: false,\r\n                    minRotation: 0,\r\n                    maxRotation: 50,\r\n                    mirror: false,\r\n                    padding: 0,\r\n                    reverse: false,\r\n                    display: true,\r\n                    autoSkip: true,\r\n                    autoSkipPadding: 0,\r\n                    labelOffset: 0,\r\n                    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\r\n                    callback: Ticks.formatters.values,\r\n                    minor: {},\r\n                    major: {}\r\n                }\r\n            });\r\n\r\n            function labelsFromTicks(ticks) {\r\n                var labels = [];\r\n                var i, ilen;\r\n\r\n                for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n                    labels.push(ticks[i].label);\r\n                }\r\n\r\n                return labels;\r\n            }\r\n\r\n            function getLineValue(scale, index, offsetGridLines) {\r\n                var lineValue = scale.getPixelForTick(index);\r\n\r\n                if (offsetGridLines) {\r\n                    if (index === 0) {\r\n                        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\r\n                    } else {\r\n                        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\r\n                    }\r\n                }\r\n                return lineValue;\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                function computeTextSize(context, tick, font) {\r\n                    return helpers.isArray(tick) ?\r\n                        helpers.longestText(context, font, tick) :\r\n                        context.measureText(tick).width;\r\n                }\r\n\r\n                function parseFontOptions(options) {\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var globalDefaults = defaults.global;\r\n                    var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\r\n                    var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\r\n                    var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\r\n\r\n                    return {\r\n                        size: size,\r\n                        style: style,\r\n                        family: family,\r\n                        font: helpers.fontString(size, style, family)\r\n                    };\r\n                }\r\n\r\n                function parseLineHeight(options) {\r\n                    return helpers.options.toLineHeight(\r\n                        helpers.valueOrDefault(options.lineHeight, 1.2),\r\n                        helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\r\n                }\r\n\r\n                Chart.Scale = Element.extend({\r\n                    /**\r\n                     * Get the padding needed for the scale\r\n                     * @method getPadding\r\n                     * @private\r\n                     * @returns {Padding} the necessary padding\r\n                     */\r\n                    getPadding: function() {\r\n                        var me = this;\r\n                        return {\r\n                            left: me.paddingLeft || 0,\r\n                            top: me.paddingTop || 0,\r\n                            right: me.paddingRight || 0,\r\n                            bottom: me.paddingBottom || 0\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the scale tick objects ({label, major})\r\n                     * @since 2.7\r\n                     */\r\n                    getTicks: function() {\r\n                        return this._ticks;\r\n                    },\r\n\r\n                    // These methods are ordered by lifecyle. Utilities then follow.\r\n                    // Any function defined here is inherited by all scale types.\r\n                    // Any function can be extended by the scale type\r\n\r\n                    mergeTicksOptions: function() {\r\n                        var ticks = this.options.ticks;\r\n                        if (ticks.minor === false) {\r\n                            ticks.minor = {\r\n                                display: false\r\n                            };\r\n                        }\r\n                        if (ticks.major === false) {\r\n                            ticks.major = {\r\n                                display: false\r\n                            };\r\n                        }\r\n                        for (var key in ticks) {\r\n                            if (key !== 'major' && key !== 'minor') {\r\n                                if (typeof ticks.minor[key] === 'undefined') {\r\n                                    ticks.minor[key] = ticks[key];\r\n                                }\r\n                                if (typeof ticks.major[key] === 'undefined') {\r\n                                    ticks.major[key] = ticks[key];\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    beforeUpdate: function() {\r\n                        helpers.callback(this.options.beforeUpdate, [this]);\r\n                    },\r\n                    update: function(maxWidth, maxHeight, margins) {\r\n                        var me = this;\r\n                        var i, ilen, labels, label, ticks, tick;\r\n\r\n                        // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                        me.beforeUpdate();\r\n\r\n                        // Absorb the master measurements\r\n                        me.maxWidth = maxWidth;\r\n                        me.maxHeight = maxHeight;\r\n                        me.margins = helpers.extend({\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: 0,\r\n                            bottom: 0\r\n                        }, margins);\r\n                        me.longestTextCache = me.longestTextCache || {};\r\n\r\n                        // Dimensions\r\n                        me.beforeSetDimensions();\r\n                        me.setDimensions();\r\n                        me.afterSetDimensions();\r\n\r\n                        // Data min/max\r\n                        me.beforeDataLimits();\r\n                        me.determineDataLimits();\r\n                        me.afterDataLimits();\r\n\r\n                        // Ticks - `this.ticks` is now DEPRECATED!\r\n                        // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\r\n                        // and must not be accessed directly from outside this class. `this.ticks` being\r\n                        // around for long time and not marked as private, we can't change its structure\r\n                        // without unexpected breaking changes. If you need to access the scale ticks,\r\n                        // use scale.getTicks() instead.\r\n\r\n                        me.beforeBuildTicks();\r\n\r\n                        // New implementations should return an array of objects but for BACKWARD COMPAT,\r\n                        // we still support no return (`this.ticks` internally set by calling this method).\r\n                        ticks = me.buildTicks() || [];\r\n\r\n                        me.afterBuildTicks();\r\n\r\n                        me.beforeTickToLabelConversion();\r\n\r\n                        // New implementations should return the formatted tick labels but for BACKWARD\r\n                        // COMPAT, we still support no return (`this.ticks` internally changed by calling\r\n                        // this method and supposed to contain only string values).\r\n                        labels = me.convertTicksToLabels(ticks) || me.ticks;\r\n\r\n                        me.afterTickToLabelConversion();\r\n\r\n                        me.ticks = labels;   // BACKWARD COMPATIBILITY\r\n\r\n                        // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\r\n\r\n                        // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\r\n                        for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n                            label = labels[i];\r\n                            tick = ticks[i];\r\n                            if (!tick) {\r\n                                ticks.push(tick = {\r\n                                    label: label,\r\n                                    major: false\r\n                                });\r\n                            } else {\r\n                                tick.label = label;\r\n                            }\r\n                        }\r\n\r\n                        me._ticks = ticks;\r\n\r\n                        // Tick Rotation\r\n                        me.beforeCalculateTickRotation();\r\n                        me.calculateTickRotation();\r\n                        me.afterCalculateTickRotation();\r\n                        // Fit\r\n                        me.beforeFit();\r\n                        me.fit();\r\n                        me.afterFit();\r\n                        //\r\n                        me.afterUpdate();\r\n\r\n                        return me.minSize;\r\n                    },\r\n                    afterUpdate: function() {\r\n                        helpers.callback(this.options.afterUpdate, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeSetDimensions: function() {\r\n                        helpers.callback(this.options.beforeSetDimensions, [this]);\r\n                    },\r\n                    setDimensions: function() {\r\n                        var me = this;\r\n                        // Set the unconstrained dimension before label rotation\r\n                        if (me.isHorizontal()) {\r\n                            // Reset position before calculating rotation\r\n                            me.width = me.maxWidth;\r\n                            me.left = 0;\r\n                            me.right = me.width;\r\n                        } else {\r\n                            me.height = me.maxHeight;\r\n\r\n                            // Reset position before calculating rotation\r\n                            me.top = 0;\r\n                            me.bottom = me.height;\r\n                        }\r\n\r\n                        // Reset padding\r\n                        me.paddingLeft = 0;\r\n                        me.paddingTop = 0;\r\n                        me.paddingRight = 0;\r\n                        me.paddingBottom = 0;\r\n                    },\r\n                    afterSetDimensions: function() {\r\n                        helpers.callback(this.options.afterSetDimensions, [this]);\r\n                    },\r\n\r\n                    // Data limits\r\n                    beforeDataLimits: function() {\r\n                        helpers.callback(this.options.beforeDataLimits, [this]);\r\n                    },\r\n                    determineDataLimits: helpers.noop,\r\n                    afterDataLimits: function() {\r\n                        helpers.callback(this.options.afterDataLimits, [this]);\r\n                    },\r\n\r\n                    //\r\n                    beforeBuildTicks: function() {\r\n                        helpers.callback(this.options.beforeBuildTicks, [this]);\r\n                    },\r\n                    buildTicks: helpers.noop,\r\n                    afterBuildTicks: function() {\r\n                        helpers.callback(this.options.afterBuildTicks, [this]);\r\n                    },\r\n\r\n                    beforeTickToLabelConversion: function() {\r\n                        helpers.callback(this.options.beforeTickToLabelConversion, [this]);\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        // Convert ticks to strings\r\n                        var tickOpts = me.options.ticks;\r\n                        me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\r\n                    },\r\n                    afterTickToLabelConversion: function() {\r\n                        helpers.callback(this.options.afterTickToLabelConversion, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeCalculateTickRotation: function() {\r\n                        helpers.callback(this.options.beforeCalculateTickRotation, [this]);\r\n                    },\r\n                    calculateTickRotation: function() {\r\n                        var me = this;\r\n                        var context = me.ctx;\r\n                        var tickOpts = me.options.ticks;\r\n                        var labels = labelsFromTicks(me._ticks);\r\n\r\n                        // Get the width of each grid by calculating the difference\r\n                        // between x offsets between 0 and 1.\r\n                        var tickFont = parseFontOptions(tickOpts);\r\n                        context.font = tickFont.font;\r\n\r\n                        var labelRotation = tickOpts.minRotation || 0;\r\n\r\n                        if (labels.length && me.options.display && me.isHorizontal()) {\r\n                            var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\r\n                            var labelWidth = originalLabelWidth;\r\n                            var cosRotation, sinRotation;\r\n\r\n                            // Allow 3 pixels x2 padding either side for label readability\r\n                            var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\r\n\r\n                            // Max label rotation can be set or default to 90 - also act as a loop counter\r\n                            while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\r\n                                var angleRadians = helpers.toRadians(labelRotation);\r\n                                cosRotation = Math.cos(angleRadians);\r\n                                sinRotation = Math.sin(angleRadians);\r\n\r\n                                if (sinRotation * originalLabelWidth > me.maxHeight) {\r\n                                    // go back one step\r\n                                    labelRotation--;\r\n                                    break;\r\n                                }\r\n\r\n                                labelRotation++;\r\n                                labelWidth = cosRotation * originalLabelWidth;\r\n                            }\r\n                        }\r\n\r\n                        me.labelRotation = labelRotation;\r\n                    },\r\n                    afterCalculateTickRotation: function() {\r\n                        helpers.callback(this.options.afterCalculateTickRotation, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeFit: function() {\r\n                        helpers.callback(this.options.beforeFit, [this]);\r\n                    },\r\n                    fit: function() {\r\n                        var me = this;\r\n                        // Reset\r\n                        var minSize = me.minSize = {\r\n                            width: 0,\r\n                            height: 0\r\n                        };\r\n\r\n                        var labels = labelsFromTicks(me._ticks);\r\n\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n                        var scaleLabelOpts = opts.scaleLabel;\r\n                        var gridLineOpts = opts.gridLines;\r\n                        var display = opts.display;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        var tickFont = parseFontOptions(tickOpts);\r\n                        var tickMarkLength = opts.gridLines.tickMarkLength;\r\n\r\n                        // Width\r\n                        if (isHorizontal) {\r\n                            // subtract the margins to line up with the chartArea if we are a full width scale\r\n                            minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\r\n                        } else {\r\n                            minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n                        }\r\n\r\n                        // height\r\n                        if (isHorizontal) {\r\n                            minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n                        } else {\r\n                            minSize.height = me.maxHeight; // fill all the height\r\n                        }\r\n\r\n                        // Are we showing a title for the scale?\r\n                        if (scaleLabelOpts.display && display) {\r\n                            var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\r\n                            var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\r\n                            var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\r\n\r\n                            if (isHorizontal) {\r\n                                minSize.height += deltaHeight;\r\n                            } else {\r\n                                minSize.width += deltaHeight;\r\n                            }\r\n                        }\r\n\r\n                        // Don't bother fitting the ticks if we are not showing them\r\n                        if (tickOpts.display && display) {\r\n                            var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\r\n                            var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\r\n                            var lineSpace = tickFont.size * 0.5;\r\n                            var tickPadding = me.options.ticks.padding;\r\n\r\n                            if (isHorizontal) {\r\n                                // A horizontal axis is more constrained by the height.\r\n                                me.longestLabelWidth = largestTextWidth;\r\n\r\n                                var angleRadians = helpers.toRadians(me.labelRotation);\r\n                                var cosRotation = Math.cos(angleRadians);\r\n                                var sinRotation = Math.sin(angleRadians);\r\n\r\n                                // TODO - improve this calculation\r\n                                var labelHeight = (sinRotation * largestTextWidth)\r\n                                    + (tickFont.size * tallestLabelHeightInLines)\r\n                                    + (lineSpace * (tallestLabelHeightInLines - 1))\r\n                                    + lineSpace; // padding\r\n\r\n                                minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\r\n\r\n                                me.ctx.font = tickFont.font;\r\n                                var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\r\n                                var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\r\n\r\n                                // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\r\n                                // which means that the right padding is dominated by the font height\r\n                                if (me.labelRotation !== 0) {\r\n                                    me.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\r\n                                    me.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\r\n                                } else {\r\n                                    me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\r\n                                    me.paddingRight = lastLabelWidth / 2 + 3;\r\n                                }\r\n                            } else {\r\n                                // A vertical axis is more constrained by the width. Labels are the\r\n                                // dominant factor here, so get that length first and account for padding\r\n                                if (tickOpts.mirror) {\r\n                                    largestTextWidth = 0;\r\n                                } else {\r\n                                    // use lineSpace for consistency with horizontal axis\r\n                                    // tickPadding is not implemented for horizontal\r\n                                    largestTextWidth += tickPadding + lineSpace;\r\n                                }\r\n\r\n                                minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\r\n\r\n                                me.paddingTop = tickFont.size / 2;\r\n                                me.paddingBottom = tickFont.size / 2;\r\n                            }\r\n                        }\r\n\r\n                        me.handleMargins();\r\n\r\n                        me.width = minSize.width;\r\n                        me.height = minSize.height;\r\n                    },\r\n\r\n                    /**\r\n                     * Handle margins and padding interactions\r\n                     * @private\r\n                     */\r\n                    handleMargins: function() {\r\n                        var me = this;\r\n                        if (me.margins) {\r\n                            me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\r\n                            me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\r\n                            me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\r\n                            me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\r\n                        }\r\n                    },\r\n\r\n                    afterFit: function() {\r\n                        helpers.callback(this.options.afterFit, [this]);\r\n                    },\r\n\r\n                    // Shared Methods\r\n                    isHorizontal: function() {\r\n                        return this.options.position === 'top' || this.options.position === 'bottom';\r\n                    },\r\n                    isFullWidth: function() {\r\n                        return (this.options.fullWidth);\r\n                    },\r\n\r\n                    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\r\n                    getRightValue: function(rawValue) {\r\n                        // Null and undefined values first\r\n                        if (helpers.isNullOrUndef(rawValue)) {\r\n                            return NaN;\r\n                        }\r\n                        // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\r\n                        if (typeof rawValue === 'number' && !isFinite(rawValue)) {\r\n                            return NaN;\r\n                        }\r\n                        // If it is in fact an object, dive in one more level\r\n                        if (rawValue) {\r\n                            if (this.isHorizontal()) {\r\n                                if (rawValue.x !== undefined) {\r\n                                    return this.getRightValue(rawValue.x);\r\n                                }\r\n                            } else if (rawValue.y !== undefined) {\r\n                                return this.getRightValue(rawValue.y);\r\n                            }\r\n                        }\r\n\r\n                        // Value is good, return it\r\n                        return rawValue;\r\n                    },\r\n\r\n                    /**\r\n                     * Used to get the value to display in the tooltip for the data at the given index\r\n                     * @param index\r\n                     * @param datasetIndex\r\n                     */\r\n                    getLabelForIndex: helpers.noop,\r\n\r\n                    /**\r\n                     * Returns the location of the given data point. Value can either be an index or a numerical value\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     * @param value\r\n                     * @param index\r\n                     * @param datasetIndex\r\n                     */\r\n                    getPixelForValue: helpers.noop,\r\n\r\n                    /**\r\n                     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     * @param pixel\r\n                     */\r\n                    getValueForPixel: helpers.noop,\r\n\r\n                    /**\r\n                     * Returns the location of the tick at the given index\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getPixelForTick: function(index) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        if (me.isHorizontal()) {\r\n                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n                            var tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\r\n                            var pixel = (tickWidth * index) + me.paddingLeft;\r\n\r\n                            if (offset) {\r\n                                pixel += tickWidth / 2;\r\n                            }\r\n\r\n                            var finalVal = me.left + Math.round(pixel);\r\n                            finalVal += me.isFullWidth() ? me.margins.left : 0;\r\n                            return finalVal;\r\n                        }\r\n                        var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\r\n                        return me.top + (index * (innerHeight / (me._ticks.length - 1)));\r\n                    },\r\n\r\n                    /**\r\n                     * Utility for getting the pixel location of a percentage of scale\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getPixelForDecimal: function(decimal) {\r\n                        var me = this;\r\n                        if (me.isHorizontal()) {\r\n                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n                            var valueOffset = (innerWidth * decimal) + me.paddingLeft;\r\n\r\n                            var finalVal = me.left + Math.round(valueOffset);\r\n                            finalVal += me.isFullWidth() ? me.margins.left : 0;\r\n                            return finalVal;\r\n                        }\r\n                        return me.top + (decimal * me.height);\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the pixel for the minimum chart value\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getBasePixel: function() {\r\n                        return this.getPixelForValue(this.getBaseValue());\r\n                    },\r\n\r\n                    getBaseValue: function() {\r\n                        var me = this;\r\n                        var min = me.min;\r\n                        var max = me.max;\r\n\r\n                        return me.beginAtZero ? 0 :\r\n                            min < 0 && max < 0 ? max :\r\n                                min > 0 && max > 0 ? min :\r\n                                    0;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns a subset of ticks to be plotted to avoid overlapping labels.\r\n                     * @private\r\n                     */\r\n                    _autoSkip: function(ticks) {\r\n                        var skipRatio;\r\n                        var me = this;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var optionTicks = me.options.ticks.minor;\r\n                        var tickCount = ticks.length;\r\n                        var labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n                        var cosRotation = Math.cos(labelRotationRadians);\r\n                        var longestRotatedLabel = me.longestLabelWidth * cosRotation;\r\n                        var result = [];\r\n                        var i, tick, shouldSkip;\r\n\r\n                        // figure out the maximum number of gridlines to show\r\n                        var maxTicks;\r\n                        if (optionTicks.maxTicksLimit) {\r\n                            maxTicks = optionTicks.maxTicksLimit;\r\n                        }\r\n\r\n                        if (isHorizontal) {\r\n                            skipRatio = false;\r\n\r\n                            if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\r\n                                skipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\r\n                            }\r\n\r\n                            // if they defined a max number of optionTicks,\r\n                            // increase skipRatio until that number is met\r\n                            if (maxTicks && tickCount > maxTicks) {\r\n                                skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\r\n                            }\r\n                        }\r\n\r\n                        for (i = 0; i < tickCount; i++) {\r\n                            tick = ticks[i];\r\n\r\n                            // Since we always show the last tick,we need may need to hide the last shown one before\r\n                            shouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\r\n                            if (shouldSkip && i !== tickCount - 1) {\r\n                                // leave tick in place but make sure it's not displayed (#4635)\r\n                                delete tick.label;\r\n                            }\r\n                            result.push(tick);\r\n                        }\r\n                        return result;\r\n                    },\r\n\r\n                    // Actually draw the scale on the canvas\r\n                    // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\r\n                    draw: function(chartArea) {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        if (!options.display) {\r\n                            return;\r\n                        }\r\n\r\n                        var context = me.ctx;\r\n                        var globalDefaults = defaults.global;\r\n                        var optionTicks = options.ticks.minor;\r\n                        var optionMajorTicks = options.ticks.major || optionTicks;\r\n                        var gridLines = options.gridLines;\r\n                        var scaleLabel = options.scaleLabel;\r\n\r\n                        var isRotated = me.labelRotation !== 0;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\r\n                        var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\r\n                        var tickFont = parseFontOptions(optionTicks);\r\n                        var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\r\n                        var majorTickFont = parseFontOptions(optionMajorTicks);\r\n\r\n                        var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\r\n\r\n                        var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\r\n                        var scaleLabelFont = parseFontOptions(scaleLabel);\r\n                        var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\r\n                        var labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n\r\n                        var itemsToDraw = [];\r\n\r\n                        var axisWidth = me.options.gridLines.lineWidth;\r\n                        var xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\r\n                        var xTickEnd = options.position === 'right' ? me.right + tl : me.right;\r\n                        var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\r\n                        var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\r\n\r\n                        helpers.each(ticks, function(tick, index) {\r\n                            // autoskipper skipped this tick (#4635)\r\n                            if (helpers.isNullOrUndef(tick.label)) {\r\n                                return;\r\n                            }\r\n\r\n                            var label = tick.label;\r\n                            var lineWidth, lineColor, borderDash, borderDashOffset;\r\n                            if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\r\n                                // Draw the first index specially\r\n                                lineWidth = gridLines.zeroLineWidth;\r\n                                lineColor = gridLines.zeroLineColor;\r\n                                borderDash = gridLines.zeroLineBorderDash;\r\n                                borderDashOffset = gridLines.zeroLineBorderDashOffset;\r\n                            } else {\r\n                                lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\r\n                                lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\r\n                                borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\r\n                                borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\r\n                            }\r\n\r\n                            // Common properties\r\n                            var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\r\n                            var textAlign = 'middle';\r\n                            var textBaseline = 'middle';\r\n                            var tickPadding = optionTicks.padding;\r\n\r\n                            if (isHorizontal) {\r\n                                var labelYOffset = tl + tickPadding;\r\n\r\n                                if (options.position === 'bottom') {\r\n                                    // bottom\r\n                                    textBaseline = !isRotated ? 'top' : 'middle';\r\n                                    textAlign = !isRotated ? 'center' : 'right';\r\n                                    labelY = me.top + labelYOffset;\r\n                                } else {\r\n                                    // top\r\n                                    textBaseline = !isRotated ? 'bottom' : 'middle';\r\n                                    textAlign = !isRotated ? 'center' : 'left';\r\n                                    labelY = me.bottom - labelYOffset;\r\n                                }\r\n\r\n                                var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\r\n                                if (xLineValue < me.left) {\r\n                                    lineColor = 'rgba(0,0,0,0)';\r\n                                }\r\n                                xLineValue += helpers.aliasPixel(lineWidth);\r\n\r\n                                labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\r\n\r\n                                tx1 = tx2 = x1 = x2 = xLineValue;\r\n                                ty1 = yTickStart;\r\n                                ty2 = yTickEnd;\r\n                                y1 = chartArea.top;\r\n                                y2 = chartArea.bottom + axisWidth;\r\n                            } else {\r\n                                var isLeft = options.position === 'left';\r\n                                var labelXOffset;\r\n\r\n                                if (optionTicks.mirror) {\r\n                                    textAlign = isLeft ? 'left' : 'right';\r\n                                    labelXOffset = tickPadding;\r\n                                } else {\r\n                                    textAlign = isLeft ? 'right' : 'left';\r\n                                    labelXOffset = tl + tickPadding;\r\n                                }\r\n\r\n                                labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\r\n\r\n                                var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\r\n                                if (yLineValue < me.top) {\r\n                                    lineColor = 'rgba(0,0,0,0)';\r\n                                }\r\n                                yLineValue += helpers.aliasPixel(lineWidth);\r\n\r\n                                labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\r\n\r\n                                tx1 = xTickStart;\r\n                                tx2 = xTickEnd;\r\n                                x1 = chartArea.left;\r\n                                x2 = chartArea.right + axisWidth;\r\n                                ty1 = ty2 = y1 = y2 = yLineValue;\r\n                            }\r\n\r\n                            itemsToDraw.push({\r\n                                tx1: tx1,\r\n                                ty1: ty1,\r\n                                tx2: tx2,\r\n                                ty2: ty2,\r\n                                x1: x1,\r\n                                y1: y1,\r\n                                x2: x2,\r\n                                y2: y2,\r\n                                labelX: labelX,\r\n                                labelY: labelY,\r\n                                glWidth: lineWidth,\r\n                                glColor: lineColor,\r\n                                glBorderDash: borderDash,\r\n                                glBorderDashOffset: borderDashOffset,\r\n                                rotation: -1 * labelRotationRadians,\r\n                                label: label,\r\n                                major: tick.major,\r\n                                textBaseline: textBaseline,\r\n                                textAlign: textAlign\r\n                            });\r\n                        });\r\n\r\n                        // Draw all of the tick labels, tick marks, and grid lines at the correct places\r\n                        helpers.each(itemsToDraw, function(itemToDraw) {\r\n                            if (gridLines.display) {\r\n                                context.save();\r\n                                context.lineWidth = itemToDraw.glWidth;\r\n                                context.strokeStyle = itemToDraw.glColor;\r\n                                if (context.setLineDash) {\r\n                                    context.setLineDash(itemToDraw.glBorderDash);\r\n                                    context.lineDashOffset = itemToDraw.glBorderDashOffset;\r\n                                }\r\n\r\n                                context.beginPath();\r\n\r\n                                if (gridLines.drawTicks) {\r\n                                    context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\r\n                                    context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\r\n                                }\r\n\r\n                                if (gridLines.drawOnChartArea) {\r\n                                    context.moveTo(itemToDraw.x1, itemToDraw.y1);\r\n                                    context.lineTo(itemToDraw.x2, itemToDraw.y2);\r\n                                }\r\n\r\n                                context.stroke();\r\n                                context.restore();\r\n                            }\r\n\r\n                            if (optionTicks.display) {\r\n                                // Make sure we draw text in the correct color and font\r\n                                context.save();\r\n                                context.translate(itemToDraw.labelX, itemToDraw.labelY);\r\n                                context.rotate(itemToDraw.rotation);\r\n                                context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\r\n                                context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\r\n                                context.textBaseline = itemToDraw.textBaseline;\r\n                                context.textAlign = itemToDraw.textAlign;\r\n\r\n                                var label = itemToDraw.label;\r\n                                if (helpers.isArray(label)) {\r\n                                    var lineCount = label.length;\r\n                                    var lineHeight = tickFont.size * 1.5;\r\n                                    var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\r\n\r\n                                    for (var i = 0; i < lineCount; ++i) {\r\n                                        // We just make sure the multiline element is a string here..\r\n                                        context.fillText('' + label[i], 0, y);\r\n                                        // apply same lineSpacing as calculated @ L#320\r\n                                        y += lineHeight;\r\n                                    }\r\n                                } else {\r\n                                    context.fillText(label, 0, 0);\r\n                                }\r\n                                context.restore();\r\n                            }\r\n                        });\r\n\r\n                        if (scaleLabel.display) {\r\n                            // Draw the scale label\r\n                            var scaleLabelX;\r\n                            var scaleLabelY;\r\n                            var rotation = 0;\r\n                            var halfLineHeight = parseLineHeight(scaleLabel) / 2;\r\n\r\n                            if (isHorizontal) {\r\n                                scaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\r\n                                scaleLabelY = options.position === 'bottom'\r\n                                    ? me.bottom - halfLineHeight - scaleLabelPadding.bottom\r\n                                    : me.top + halfLineHeight + scaleLabelPadding.top;\r\n                            } else {\r\n                                var isLeft = options.position === 'left';\r\n                                scaleLabelX = isLeft\r\n                                    ? me.left + halfLineHeight + scaleLabelPadding.top\r\n                                    : me.right - halfLineHeight - scaleLabelPadding.top;\r\n                                scaleLabelY = me.top + ((me.bottom - me.top) / 2);\r\n                                rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\r\n                            }\r\n\r\n                            context.save();\r\n                            context.translate(scaleLabelX, scaleLabelY);\r\n                            context.rotate(rotation);\r\n                            context.textAlign = 'center';\r\n                            context.textBaseline = 'middle';\r\n                            context.fillStyle = scaleLabelFontColor; // render in correct colour\r\n                            context.font = scaleLabelFont.font;\r\n                            context.fillText(scaleLabel.labelString, 0, 0);\r\n                            context.restore();\r\n                        }\r\n\r\n                        if (gridLines.drawBorder) {\r\n                            // Draw the line at the edge of the axis\r\n                            context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\r\n                            context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\r\n                            var x1 = me.left;\r\n                            var x2 = me.right + axisWidth;\r\n                            var y1 = me.top;\r\n                            var y2 = me.bottom + axisWidth;\r\n\r\n                            var aliasPixel = helpers.aliasPixel(context.lineWidth);\r\n                            if (isHorizontal) {\r\n                                y1 = y2 = options.position === 'top' ? me.bottom : me.top;\r\n                                y1 += aliasPixel;\r\n                                y2 += aliasPixel;\r\n                            } else {\r\n                                x1 = x2 = options.position === 'left' ? me.right : me.left;\r\n                                x1 += aliasPixel;\r\n                                x2 += aliasPixel;\r\n                            }\r\n\r\n                            context.beginPath();\r\n                            context.moveTo(x1, y1);\r\n                            context.lineTo(x2, y2);\r\n                            context.stroke();\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"25\": 25, \"36\": 36 }], 24: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            module.exports = function(Chart) {\r\n                Chart.scaleService = {\r\n                    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\r\n                    // use the new chart options to grab the correct scale\r\n                    constructors: {},\r\n                    // Use a registration function so that we can move to an ES6 map when we no longer need to support\r\n                    // old browsers\r\n\r\n                    // Scale config defaults\r\n                    defaults: {},\r\n                    registerScaleType: function(type, scaleConstructor, scaleDefaults) {\r\n                        this.constructors[type] = scaleConstructor;\r\n                        this.defaults[type] = helpers.clone(scaleDefaults);\r\n                    },\r\n                    getScaleConstructor: function(type) {\r\n                        return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\r\n                    },\r\n                    getScaleDefaults: function(type) {\r\n                        // Return the scale defaults merged with the global settings so that we always use the latest ones\r\n                        return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\r\n                    },\r\n                    updateScaleDefaults: function(type, additions) {\r\n                        var me = this;\r\n                        if (me.defaults.hasOwnProperty(type)) {\r\n                            me.defaults[type] = helpers.extend(me.defaults[type], additions);\r\n                        }\r\n                    },\r\n                    addScalesToLayout: function(chart) {\r\n                        // Adds each scale to the chart.boxes array to be sized accordingly\r\n                        helpers.each(chart.scales, function(scale) {\r\n                            // Set ILayoutItem parameters for backwards compatibility\r\n                            scale.fullWidth = scale.options.fullWidth;\r\n                            scale.position = scale.options.position;\r\n                            scale.weight = scale.options.weight;\r\n                            layouts.addBox(chart, scale);\r\n                        });\r\n                    }\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"21\": 21, \"36\": 36 }], 25: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Namespace to hold static tick generation functions\r\n             * @namespace Chart.Ticks\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Namespace to hold formatters for different types of ticks\r\n                 * @namespace Chart.Ticks.formatters\r\n                 */\r\n                formatters: {\r\n                    /**\r\n                     * Formatter for value labels\r\n                     * @method Chart.Ticks.formatters.values\r\n                     * @param value the value to display\r\n                     * @return {String|Array} the label to display\r\n                     */\r\n                    values: function(value) {\r\n                        return helpers.isArray(value) ? value : '' + value;\r\n                    },\r\n\r\n                    /**\r\n                     * Formatter for linear numeric ticks\r\n                     * @method Chart.Ticks.formatters.linear\r\n                     * @param tickValue {Number} the value to be formatted\r\n                     * @param index {Number} the position of the tickValue parameter in the ticks array\r\n                     * @param ticks {Array<Number>} the list of ticks being converted\r\n                     * @return {String} string representation of the tickValue parameter\r\n                     */\r\n                    linear: function(tickValue, index, ticks) {\r\n                        // If we have lots of ticks, don't use the ones\r\n                        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\r\n\r\n                        // If we have a number like 2.5 as the delta, figure out how many decimal places we need\r\n                        if (Math.abs(delta) > 1) {\r\n                            if (tickValue !== Math.floor(tickValue)) {\r\n                                // not an integer\r\n                                delta = tickValue - Math.floor(tickValue);\r\n                            }\r\n                        }\r\n\r\n                        var logDelta = helpers.log10(Math.abs(delta));\r\n                        var tickString = '';\r\n\r\n                        if (tickValue !== 0) {\r\n                            var numDecimal = -1 * Math.floor(logDelta);\r\n                            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\r\n                            tickString = tickValue.toFixed(numDecimal);\r\n                        } else {\r\n                            tickString = '0'; // never show decimal places for 0\r\n                        }\r\n\r\n                        return tickString;\r\n                    },\r\n\r\n                    logarithmic: function(tickValue, index, ticks) {\r\n                        var remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\r\n\r\n                        if (tickValue === 0) {\r\n                            return '0';\r\n                        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\r\n                            return tickValue.toExponential();\r\n                        }\r\n                        return '';\r\n                    }\r\n                }\r\n            };\r\n        }, { \"36\": 36 }], 26: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                tooltips: {\r\n                    enabled: true,\r\n                    custom: null,\r\n                    mode: 'nearest',\r\n                    position: 'average',\r\n                    intersect: true,\r\n                    backgroundColor: 'rgba(0,0,0,0.8)',\r\n                    titleFontStyle: 'bold',\r\n                    titleSpacing: 2,\r\n                    titleMarginBottom: 6,\r\n                    titleFontColor: '#fff',\r\n                    titleAlign: 'left',\r\n                    bodySpacing: 2,\r\n                    bodyFontColor: '#fff',\r\n                    bodyAlign: 'left',\r\n                    footerFontStyle: 'bold',\r\n                    footerSpacing: 2,\r\n                    footerMarginTop: 6,\r\n                    footerFontColor: '#fff',\r\n                    footerAlign: 'left',\r\n                    yPadding: 6,\r\n                    xPadding: 6,\r\n                    caretPadding: 2,\r\n                    caretSize: 5,\r\n                    cornerRadius: 6,\r\n                    multiKeyBackground: '#fff',\r\n                    displayColors: true,\r\n                    borderColor: 'rgba(0,0,0,0)',\r\n                    borderWidth: 0,\r\n                    callbacks: {\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeTitle: helpers.noop,\r\n                        title: function(tooltipItems, data) {\r\n                            // Pick first xLabel for now\r\n                            var title = '';\r\n                            var labels = data.labels;\r\n                            var labelCount = labels ? labels.length : 0;\r\n\r\n                            if (tooltipItems.length > 0) {\r\n                                var item = tooltipItems[0];\r\n\r\n                                if (item.xLabel) {\r\n                                    title = item.xLabel;\r\n                                } else if (labelCount > 0 && item.index < labelCount) {\r\n                                    title = labels[item.index];\r\n                                }\r\n                            }\r\n\r\n                            return title;\r\n                        },\r\n                        afterTitle: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeBody: helpers.noop,\r\n\r\n                        // Args are: (tooltipItem, data)\r\n                        beforeLabel: helpers.noop,\r\n                        label: function(tooltipItem, data) {\r\n                            var label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\r\n                            if (label) {\r\n                                label += ': ';\r\n                            }\r\n                            label += tooltipItem.yLabel;\r\n                            return label;\r\n                        },\r\n                        labelColor: function(tooltipItem, chart) {\r\n                            var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n                            var activeElement = meta.data[tooltipItem.index];\r\n                            var view = activeElement._view;\r\n                            return {\r\n                                borderColor: view.borderColor,\r\n                                backgroundColor: view.backgroundColor\r\n                            };\r\n                        },\r\n                        labelTextColor: function() {\r\n                            return this._options.bodyFontColor;\r\n                        },\r\n                        afterLabel: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        afterBody: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeFooter: helpers.noop,\r\n                        footer: helpers.noop,\r\n                        afterFooter: helpers.noop\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n                /**\r\n                   * Helper method to merge the opacity into a color\r\n                   */\r\n                function mergeOpacity(colorString, opacity) {\r\n                    var color = helpers.color(colorString);\r\n                    return color.alpha(opacity * color.alpha()).rgbaString();\r\n                }\r\n\r\n                // Helper to push or concat based on if the 2nd parameter is an array or not\r\n                function pushOrConcat(base, toPush) {\r\n                    if (toPush) {\r\n                        if (helpers.isArray(toPush)) {\r\n                            // base = base.concat(toPush);\r\n                            Array.prototype.push.apply(base, toPush);\r\n                        } else {\r\n                            base.push(toPush);\r\n                        }\r\n                    }\r\n\r\n                    return base;\r\n                }\r\n\r\n                // Private helper to create a tooltip item model\r\n                // @param element : the chart element (point, arc, bar) to create the tooltip item for\r\n                // @return : new tooltip item\r\n                function createTooltipItem(element) {\r\n                    var xScale = element._xScale;\r\n                    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\r\n                    var index = element._index;\r\n                    var datasetIndex = element._datasetIndex;\r\n\r\n                    return {\r\n                        xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\r\n                        yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\r\n                        index: index,\r\n                        datasetIndex: datasetIndex,\r\n                        x: element._model.x,\r\n                        y: element._model.y\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Helper to get the reset model for the tooltip\r\n                 * @param tooltipOpts {Object} the tooltip options\r\n                 */\r\n                function getBaseModel(tooltipOpts) {\r\n                    var globalDefaults = defaults.global;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n\r\n                    return {\r\n                        // Positioning\r\n                        xPadding: tooltipOpts.xPadding,\r\n                        yPadding: tooltipOpts.yPadding,\r\n                        xAlign: tooltipOpts.xAlign,\r\n                        yAlign: tooltipOpts.yAlign,\r\n\r\n                        // Body\r\n                        bodyFontColor: tooltipOpts.bodyFontColor,\r\n                        _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\r\n                        _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\r\n                        _bodyAlign: tooltipOpts.bodyAlign,\r\n                        bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\r\n                        bodySpacing: tooltipOpts.bodySpacing,\r\n\r\n                        // Title\r\n                        titleFontColor: tooltipOpts.titleFontColor,\r\n                        _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\r\n                        _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\r\n                        titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\r\n                        _titleAlign: tooltipOpts.titleAlign,\r\n                        titleSpacing: tooltipOpts.titleSpacing,\r\n                        titleMarginBottom: tooltipOpts.titleMarginBottom,\r\n\r\n                        // Footer\r\n                        footerFontColor: tooltipOpts.footerFontColor,\r\n                        _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\r\n                        _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\r\n                        footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\r\n                        _footerAlign: tooltipOpts.footerAlign,\r\n                        footerSpacing: tooltipOpts.footerSpacing,\r\n                        footerMarginTop: tooltipOpts.footerMarginTop,\r\n\r\n                        // Appearance\r\n                        caretSize: tooltipOpts.caretSize,\r\n                        cornerRadius: tooltipOpts.cornerRadius,\r\n                        backgroundColor: tooltipOpts.backgroundColor,\r\n                        opacity: 0,\r\n                        legendColorBackground: tooltipOpts.multiKeyBackground,\r\n                        displayColors: tooltipOpts.displayColors,\r\n                        borderColor: tooltipOpts.borderColor,\r\n                        borderWidth: tooltipOpts.borderWidth\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Get the size of the tooltip\r\n                 */\r\n                function getTooltipSize(tooltip, model) {\r\n                    var ctx = tooltip._chart.ctx;\r\n\r\n                    var height = model.yPadding * 2; // Tooltip Padding\r\n                    var width = 0;\r\n\r\n                    // Count of all lines in the body\r\n                    var body = model.body;\r\n                    var combinedBodyLength = body.reduce(function(count, bodyItem) {\r\n                        return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\r\n                    }, 0);\r\n                    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\r\n\r\n                    var titleLineCount = model.title.length;\r\n                    var footerLineCount = model.footer.length;\r\n                    var titleFontSize = model.titleFontSize;\r\n                    var bodyFontSize = model.bodyFontSize;\r\n                    var footerFontSize = model.footerFontSize;\r\n\r\n                    height += titleLineCount * titleFontSize; // Title Lines\r\n                    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\r\n                    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\r\n                    height += combinedBodyLength * bodyFontSize; // Body Lines\r\n                    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\r\n                    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\r\n                    height += footerLineCount * (footerFontSize); // Footer Lines\r\n                    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\r\n\r\n                    // Title width\r\n                    var widthPadding = 0;\r\n                    var maxLineWidth = function(line) {\r\n                        width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n                    };\r\n\r\n                    ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\r\n                    helpers.each(model.title, maxLineWidth);\r\n\r\n                    // Body width\r\n                    ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\r\n                    helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\r\n\r\n                    // Body lines may include some extra width due to the color box\r\n                    widthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\r\n                    helpers.each(body, function(bodyItem) {\r\n                        helpers.each(bodyItem.before, maxLineWidth);\r\n                        helpers.each(bodyItem.lines, maxLineWidth);\r\n                        helpers.each(bodyItem.after, maxLineWidth);\r\n                    });\r\n\r\n                    // Reset back to 0\r\n                    widthPadding = 0;\r\n\r\n                    // Footer width\r\n                    ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\r\n                    helpers.each(model.footer, maxLineWidth);\r\n\r\n                    // Add padding\r\n                    width += 2 * model.xPadding;\r\n\r\n                    return {\r\n                        width: width,\r\n                        height: height\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Helper to get the alignment of a tooltip given the size\r\n                 */\r\n                function determineAlignment(tooltip, size) {\r\n                    var model = tooltip._model;\r\n                    var chart = tooltip._chart;\r\n                    var chartArea = tooltip._chart.chartArea;\r\n                    var xAlign = 'center';\r\n                    var yAlign = 'center';\r\n\r\n                    if (model.y < size.height) {\r\n                        yAlign = 'top';\r\n                    } else if (model.y > (chart.height - size.height)) {\r\n                        yAlign = 'bottom';\r\n                    }\r\n\r\n                    var lf, rf; // functions to determine left, right alignment\r\n                    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\r\n                    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\r\n                    var midX = (chartArea.left + chartArea.right) / 2;\r\n                    var midY = (chartArea.top + chartArea.bottom) / 2;\r\n\r\n                    if (yAlign === 'center') {\r\n                        lf = function(x) {\r\n                            return x <= midX;\r\n                        };\r\n                        rf = function(x) {\r\n                            return x > midX;\r\n                        };\r\n                    } else {\r\n                        lf = function(x) {\r\n                            return x <= (size.width / 2);\r\n                        };\r\n                        rf = function(x) {\r\n                            return x >= (chart.width - (size.width / 2));\r\n                        };\r\n                    }\r\n\r\n                    olf = function(x) {\r\n                        return x + size.width + model.caretSize + model.caretPadding > chart.width;\r\n                    };\r\n                    orf = function(x) {\r\n                        return x - size.width - model.caretSize - model.caretPadding < 0;\r\n                    };\r\n                    yf = function(y) {\r\n                        return y <= midY ? 'top' : 'bottom';\r\n                    };\r\n\r\n                    if (lf(model.x)) {\r\n                        xAlign = 'left';\r\n\r\n                        // Is tooltip too wide and goes over the right side of the chart.?\r\n                        if (olf(model.x)) {\r\n                            xAlign = 'center';\r\n                            yAlign = yf(model.y);\r\n                        }\r\n                    } else if (rf(model.x)) {\r\n                        xAlign = 'right';\r\n\r\n                        // Is tooltip too wide and goes outside left edge of canvas?\r\n                        if (orf(model.x)) {\r\n                            xAlign = 'center';\r\n                            yAlign = yf(model.y);\r\n                        }\r\n                    }\r\n\r\n                    var opts = tooltip._options;\r\n                    return {\r\n                        xAlign: opts.xAlign ? opts.xAlign : xAlign,\r\n                        yAlign: opts.yAlign ? opts.yAlign : yAlign\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\r\n                 */\r\n                function getBackgroundPoint(vm, size, alignment, chart) {\r\n                    // Background Position\r\n                    var x = vm.x;\r\n                    var y = vm.y;\r\n\r\n                    var caretSize = vm.caretSize;\r\n                    var caretPadding = vm.caretPadding;\r\n                    var cornerRadius = vm.cornerRadius;\r\n                    var xAlign = alignment.xAlign;\r\n                    var yAlign = alignment.yAlign;\r\n                    var paddingAndSize = caretSize + caretPadding;\r\n                    var radiusAndPadding = cornerRadius + caretPadding;\r\n\r\n                    if (xAlign === 'right') {\r\n                        x -= size.width;\r\n                    } else if (xAlign === 'center') {\r\n                        x -= (size.width / 2);\r\n                        if (x + size.width > chart.width) {\r\n                            x = chart.width - size.width;\r\n                        }\r\n                        if (x < 0) {\r\n                            x = 0;\r\n                        }\r\n                    }\r\n\r\n                    if (yAlign === 'top') {\r\n                        y += paddingAndSize;\r\n                    } else if (yAlign === 'bottom') {\r\n                        y -= size.height + paddingAndSize;\r\n                    } else {\r\n                        y -= (size.height / 2);\r\n                    }\r\n\r\n                    if (yAlign === 'center') {\r\n                        if (xAlign === 'left') {\r\n                            x += paddingAndSize;\r\n                        } else if (xAlign === 'right') {\r\n                            x -= paddingAndSize;\r\n                        }\r\n                    } else if (xAlign === 'left') {\r\n                        x -= radiusAndPadding;\r\n                    } else if (xAlign === 'right') {\r\n                        x += radiusAndPadding;\r\n                    }\r\n\r\n                    return {\r\n                        x: x,\r\n                        y: y\r\n                    };\r\n                }\r\n\r\n                Chart.Tooltip = Element.extend({\r\n                    initialize: function() {\r\n                        this._model = getBaseModel(this._options);\r\n                        this._lastActive = [];\r\n                    },\r\n\r\n                    // Get the title\r\n                    // Args are: (tooltipItem, data)\r\n                    getTitle: function() {\r\n                        var me = this;\r\n                        var opts = me._options;\r\n                        var callbacks = opts.callbacks;\r\n\r\n                        var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\r\n                        var title = callbacks.title.apply(me, arguments);\r\n                        var afterTitle = callbacks.afterTitle.apply(me, arguments);\r\n\r\n                        var lines = [];\r\n                        lines = pushOrConcat(lines, beforeTitle);\r\n                        lines = pushOrConcat(lines, title);\r\n                        lines = pushOrConcat(lines, afterTitle);\r\n\r\n                        return lines;\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getBeforeBody: function() {\r\n                        var lines = this._options.callbacks.beforeBody.apply(this, arguments);\r\n                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getBody: function(tooltipItems, data) {\r\n                        var me = this;\r\n                        var callbacks = me._options.callbacks;\r\n                        var bodyItems = [];\r\n\r\n                        helpers.each(tooltipItems, function(tooltipItem) {\r\n                            var bodyItem = {\r\n                                before: [],\r\n                                lines: [],\r\n                                after: []\r\n                            };\r\n                            pushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\r\n                            pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\r\n                            pushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\r\n\r\n                            bodyItems.push(bodyItem);\r\n                        });\r\n\r\n                        return bodyItems;\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getAfterBody: function() {\r\n                        var lines = this._options.callbacks.afterBody.apply(this, arguments);\r\n                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n                    },\r\n\r\n                    // Get the footer and beforeFooter and afterFooter lines\r\n                    // Args are: (tooltipItem, data)\r\n                    getFooter: function() {\r\n                        var me = this;\r\n                        var callbacks = me._options.callbacks;\r\n\r\n                        var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\r\n                        var footer = callbacks.footer.apply(me, arguments);\r\n                        var afterFooter = callbacks.afterFooter.apply(me, arguments);\r\n\r\n                        var lines = [];\r\n                        lines = pushOrConcat(lines, beforeFooter);\r\n                        lines = pushOrConcat(lines, footer);\r\n                        lines = pushOrConcat(lines, afterFooter);\r\n\r\n                        return lines;\r\n                    },\r\n\r\n                    update: function(changed) {\r\n                        var me = this;\r\n                        var opts = me._options;\r\n\r\n                        // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\r\n                        // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\r\n                        // which breaks any animations.\r\n                        var existingModel = me._model;\r\n                        var model = me._model = getBaseModel(opts);\r\n                        var active = me._active;\r\n\r\n                        var data = me._data;\r\n\r\n                        // In the case where active.length === 0 we need to keep these at existing values for good animations\r\n                        var alignment = {\r\n                            xAlign: existingModel.xAlign,\r\n                            yAlign: existingModel.yAlign\r\n                        };\r\n                        var backgroundPoint = {\r\n                            x: existingModel.x,\r\n                            y: existingModel.y\r\n                        };\r\n                        var tooltipSize = {\r\n                            width: existingModel.width,\r\n                            height: existingModel.height\r\n                        };\r\n                        var tooltipPosition = {\r\n                            x: existingModel.caretX,\r\n                            y: existingModel.caretY\r\n                        };\r\n\r\n                        var i, len;\r\n\r\n                        if (active.length) {\r\n                            model.opacity = 1;\r\n\r\n                            var labelColors = [];\r\n                            var labelTextColors = [];\r\n                            tooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\r\n\r\n                            var tooltipItems = [];\r\n                            for (i = 0, len = active.length; i < len; ++i) {\r\n                                tooltipItems.push(createTooltipItem(active[i]));\r\n                            }\r\n\r\n                            // If the user provided a filter function, use it to modify the tooltip items\r\n                            if (opts.filter) {\r\n                                tooltipItems = tooltipItems.filter(function(a) {\r\n                                    return opts.filter(a, data);\r\n                                });\r\n                            }\r\n\r\n                            // If the user provided a sorting function, use it to modify the tooltip items\r\n                            if (opts.itemSort) {\r\n                                tooltipItems = tooltipItems.sort(function(a, b) {\r\n                                    return opts.itemSort(a, b, data);\r\n                                });\r\n                            }\r\n\r\n                            // Determine colors for boxes\r\n                            helpers.each(tooltipItems, function(tooltipItem) {\r\n                                labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\r\n                                labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\r\n                            });\r\n\r\n                            // Build the Text Lines\r\n                            model.title = me.getTitle(tooltipItems, data);\r\n                            model.beforeBody = me.getBeforeBody(tooltipItems, data);\r\n                            model.body = me.getBody(tooltipItems, data);\r\n                            model.afterBody = me.getAfterBody(tooltipItems, data);\r\n                            model.footer = me.getFooter(tooltipItems, data);\r\n\r\n                            // Initial positioning and colors\r\n                            model.x = Math.round(tooltipPosition.x);\r\n                            model.y = Math.round(tooltipPosition.y);\r\n                            model.caretPadding = opts.caretPadding;\r\n                            model.labelColors = labelColors;\r\n                            model.labelTextColors = labelTextColors;\r\n\r\n                            // data points\r\n                            model.dataPoints = tooltipItems;\r\n\r\n                            // We need to determine alignment of the tooltip\r\n                            tooltipSize = getTooltipSize(this, model);\r\n                            alignment = determineAlignment(this, tooltipSize);\r\n                            // Final Size and Position\r\n                            backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\r\n                        } else {\r\n                            model.opacity = 0;\r\n                        }\r\n\r\n                        model.xAlign = alignment.xAlign;\r\n                        model.yAlign = alignment.yAlign;\r\n                        model.x = backgroundPoint.x;\r\n                        model.y = backgroundPoint.y;\r\n                        model.width = tooltipSize.width;\r\n                        model.height = tooltipSize.height;\r\n\r\n                        // Point where the caret on the tooltip points to\r\n                        model.caretX = tooltipPosition.x;\r\n                        model.caretY = tooltipPosition.y;\r\n\r\n                        me._model = model;\r\n\r\n                        if (changed && opts.custom) {\r\n                            opts.custom.call(me, model);\r\n                        }\r\n\r\n                        return me;\r\n                    },\r\n                    drawCaret: function(tooltipPoint, size) {\r\n                        var ctx = this._chart.ctx;\r\n                        var vm = this._view;\r\n                        var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\r\n\r\n                        ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n                        ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n                        ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n                    },\r\n                    getCaretPosition: function(tooltipPoint, size, vm) {\r\n                        var x1, x2, x3, y1, y2, y3;\r\n                        var caretSize = vm.caretSize;\r\n                        var cornerRadius = vm.cornerRadius;\r\n                        var xAlign = vm.xAlign;\r\n                        var yAlign = vm.yAlign;\r\n                        var ptX = tooltipPoint.x;\r\n                        var ptY = tooltipPoint.y;\r\n                        var width = size.width;\r\n                        var height = size.height;\r\n\r\n                        if (yAlign === 'center') {\r\n                            y2 = ptY + (height / 2);\r\n\r\n                            if (xAlign === 'left') {\r\n                                x1 = ptX;\r\n                                x2 = x1 - caretSize;\r\n                                x3 = x1;\r\n\r\n                                y1 = y2 + caretSize;\r\n                                y3 = y2 - caretSize;\r\n                            } else {\r\n                                x1 = ptX + width;\r\n                                x2 = x1 + caretSize;\r\n                                x3 = x1;\r\n\r\n                                y1 = y2 - caretSize;\r\n                                y3 = y2 + caretSize;\r\n                            }\r\n                        } else {\r\n                            if (xAlign === 'left') {\r\n                                x2 = ptX + cornerRadius + (caretSize);\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            } else if (xAlign === 'right') {\r\n                                x2 = ptX + width - cornerRadius - caretSize;\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            } else {\r\n                                x2 = vm.caretX;\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            }\r\n                            if (yAlign === 'top') {\r\n                                y1 = ptY;\r\n                                y2 = y1 - caretSize;\r\n                                y3 = y1;\r\n                            } else {\r\n                                y1 = ptY + height;\r\n                                y2 = y1 + caretSize;\r\n                                y3 = y1;\r\n                                // invert drawing order\r\n                                var tmp = x3;\r\n                                x3 = x1;\r\n                                x1 = tmp;\r\n                            }\r\n                        }\r\n                        return { x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3 };\r\n                    },\r\n                    drawTitle: function(pt, vm, ctx, opacity) {\r\n                        var title = vm.title;\r\n\r\n                        if (title.length) {\r\n                            ctx.textAlign = vm._titleAlign;\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            var titleFontSize = vm.titleFontSize;\r\n                            var titleSpacing = vm.titleSpacing;\r\n\r\n                            ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\r\n                            ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\r\n                            var i, len;\r\n                            for (i = 0, len = title.length; i < len; ++i) {\r\n                                ctx.fillText(title[i], pt.x, pt.y);\r\n                                pt.y += titleFontSize + titleSpacing; // Line Height and spacing\r\n\r\n                                if (i + 1 === title.length) {\r\n                                    pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    drawBody: function(pt, vm, ctx, opacity) {\r\n                        var bodyFontSize = vm.bodyFontSize;\r\n                        var bodySpacing = vm.bodySpacing;\r\n                        var body = vm.body;\r\n\r\n                        ctx.textAlign = vm._bodyAlign;\r\n                        ctx.textBaseline = 'top';\r\n                        ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\r\n                        // Before Body\r\n                        var xLinePadding = 0;\r\n                        var fillLineOfText = function(line) {\r\n                            ctx.fillText(line, pt.x + xLinePadding, pt.y);\r\n                            pt.y += bodyFontSize + bodySpacing;\r\n                        };\r\n\r\n                        // Before body lines\r\n                        ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\r\n                        helpers.each(vm.beforeBody, fillLineOfText);\r\n\r\n                        var drawColorBoxes = vm.displayColors;\r\n                        xLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\r\n\r\n                        // Draw body lines now\r\n                        helpers.each(body, function(bodyItem, i) {\r\n                            var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\r\n                            ctx.fillStyle = textColor;\r\n                            helpers.each(bodyItem.before, fillLineOfText);\r\n\r\n                            helpers.each(bodyItem.lines, function(line) {\r\n                                // Draw Legend-like boxes if needed\r\n                                if (drawColorBoxes) {\r\n                                    // Fill a white rect so that colours merge nicely if the opacity is < 1\r\n                                    ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\r\n                                    ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n                                    // Border\r\n                                    ctx.lineWidth = 1;\r\n                                    ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\r\n                                    ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n                                    // Inner square\r\n                                    ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\r\n                                    ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\r\n                                    ctx.fillStyle = textColor;\r\n                                }\r\n\r\n                                fillLineOfText(line);\r\n                            });\r\n\r\n                            helpers.each(bodyItem.after, fillLineOfText);\r\n                        });\r\n\r\n                        // Reset back to 0 for after body\r\n                        xLinePadding = 0;\r\n\r\n                        // After body lines\r\n                        helpers.each(vm.afterBody, fillLineOfText);\r\n                        pt.y -= bodySpacing; // Remove last body spacing\r\n                    },\r\n                    drawFooter: function(pt, vm, ctx, opacity) {\r\n                        var footer = vm.footer;\r\n\r\n                        if (footer.length) {\r\n                            pt.y += vm.footerMarginTop;\r\n\r\n                            ctx.textAlign = vm._footerAlign;\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\r\n                            ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\r\n                            helpers.each(footer, function(line) {\r\n                                ctx.fillText(line, pt.x, pt.y);\r\n                                pt.y += vm.footerFontSize + vm.footerSpacing;\r\n                            });\r\n                        }\r\n                    },\r\n                    drawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\r\n                        ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\r\n                        ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\r\n                        ctx.lineWidth = vm.borderWidth;\r\n                        var xAlign = vm.xAlign;\r\n                        var yAlign = vm.yAlign;\r\n                        var x = pt.x;\r\n                        var y = pt.y;\r\n                        var width = tooltipSize.width;\r\n                        var height = tooltipSize.height;\r\n                        var radius = vm.cornerRadius;\r\n\r\n                        ctx.beginPath();\r\n                        ctx.moveTo(x + radius, y);\r\n                        if (yAlign === 'top') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + width - radius, y);\r\n                        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n                        if (yAlign === 'center' && xAlign === 'right') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + width, y + height - radius);\r\n                        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n                        if (yAlign === 'bottom') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + radius, y + height);\r\n                        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n                        if (yAlign === 'center' && xAlign === 'left') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x, y + radius);\r\n                        ctx.quadraticCurveTo(x, y, x + radius, y);\r\n                        ctx.closePath();\r\n\r\n                        ctx.fill();\r\n\r\n                        if (vm.borderWidth > 0) {\r\n                            ctx.stroke();\r\n                        }\r\n                    },\r\n                    draw: function() {\r\n                        var ctx = this._chart.ctx;\r\n                        var vm = this._view;\r\n\r\n                        if (vm.opacity === 0) {\r\n                            return;\r\n                        }\r\n\r\n                        var tooltipSize = {\r\n                            width: vm.width,\r\n                            height: vm.height\r\n                        };\r\n                        var pt = {\r\n                            x: vm.x,\r\n                            y: vm.y\r\n                        };\r\n\r\n                        // IE11/Edge does not like very small opacities, so snap to 0\r\n                        var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\r\n\r\n                        // Truthy/falsey value for empty tooltip\r\n                        var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\r\n\r\n                        if (this._options.enabled && hasTooltipContent) {\r\n                            // Draw Background\r\n                            this.drawBackground(pt, vm, ctx, tooltipSize, opacity);\r\n\r\n                            // Draw Title, Body, and Footer\r\n                            pt.x += vm.xPadding;\r\n                            pt.y += vm.yPadding;\r\n\r\n                            // Titles\r\n                            this.drawTitle(pt, vm, ctx, opacity);\r\n\r\n                            // Body\r\n                            this.drawBody(pt, vm, ctx, opacity);\r\n\r\n                            // Footer\r\n                            this.drawFooter(pt, vm, ctx, opacity);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Handle an event\r\n                     * @private\r\n                     * @param {IEvent} event - The event to handle\r\n                     * @returns {Boolean} true if the tooltip changed\r\n                     */\r\n                    handleEvent: function(e) {\r\n                        var me = this;\r\n                        var options = me._options;\r\n                        var changed = false;\r\n\r\n                        me._lastActive = me._lastActive || [];\r\n\r\n                        // Find Active Elements for tooltips\r\n                        if (e.type === 'mouseout') {\r\n                            me._active = [];\r\n                        } else {\r\n                            me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\r\n                        }\r\n\r\n                        // Remember Last Actives\r\n                        changed = !helpers.arrayEquals(me._active, me._lastActive);\r\n\r\n                        // Only handle target event on tooltip change\r\n                        if (changed) {\r\n                            me._lastActive = me._active;\r\n\r\n                            if (options.enabled || options.custom) {\r\n                                me._eventPosition = {\r\n                                    x: e.x,\r\n                                    y: e.y\r\n                                };\r\n\r\n                                me.update(true);\r\n                                me.pivot();\r\n                            }\r\n                        }\r\n\r\n                        return changed;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * @namespace Chart.Tooltip.positioners\r\n                 */\r\n                Chart.Tooltip.positioners = {\r\n                    /**\r\n                     * Average mode places the tooltip at the average position of the elements shown\r\n                     * @function Chart.Tooltip.positioners.average\r\n                     * @param elements {ChartElement[]} the elements being displayed in the tooltip\r\n                     * @returns {Point} tooltip position\r\n                     */\r\n                    average: function(elements) {\r\n                        if (!elements.length) {\r\n                            return false;\r\n                        }\r\n\r\n                        var i, len;\r\n                        var x = 0;\r\n                        var y = 0;\r\n                        var count = 0;\r\n\r\n                        for (i = 0, len = elements.length; i < len; ++i) {\r\n                            var el = elements[i];\r\n                            if (el && el.hasValue()) {\r\n                                var pos = el.tooltipPosition();\r\n                                x += pos.x;\r\n                                y += pos.y;\r\n                                ++count;\r\n                            }\r\n                        }\r\n\r\n                        return {\r\n                            x: Math.round(x / count),\r\n                            y: Math.round(y / count)\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Gets the tooltip position nearest of the item nearest to the event position\r\n                     * @function Chart.Tooltip.positioners.nearest\r\n                     * @param elements {Chart.Element[]} the tooltip elements\r\n                     * @param eventPosition {Point} the position of the event in canvas coordinates\r\n                     * @returns {Point} the tooltip position\r\n                     */\r\n                    nearest: function(elements, eventPosition) {\r\n                        var x = eventPosition.x;\r\n                        var y = eventPosition.y;\r\n                        var minDistance = Number.POSITIVE_INFINITY;\r\n                        var i, len, nearestElement;\r\n\r\n                        for (i = 0, len = elements.length; i < len; ++i) {\r\n                            var el = elements[i];\r\n                            if (el && el.hasValue()) {\r\n                                var center = el.getCenterPoint();\r\n                                var d = helpers.distanceBetweenPoints(eventPosition, center);\r\n\r\n                                if (d < minDistance) {\r\n                                    minDistance = d;\r\n                                    nearestElement = el;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (nearestElement) {\r\n                            var tp = nearestElement.tooltipPosition();\r\n                            x = tp.x;\r\n                            y = tp.y;\r\n                        }\r\n\r\n                        return {\r\n                            x: x,\r\n                            y: y\r\n                        };\r\n                    }\r\n                };\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 27: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    arc: {\r\n                        backgroundColor: defaults.global.defaultColor,\r\n                        borderColor: '#fff',\r\n                        borderWidth: 2\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = Element.extend({\r\n                inLabelRange: function(mouseX) {\r\n                    var vm = this._view;\r\n\r\n                    if (vm) {\r\n                        return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                inRange: function(chartX, chartY) {\r\n                    var vm = this._view;\r\n\r\n                    if (vm) {\r\n                        var pointRelativePosition = helpers.getAngleFromPoint(vm, { x: chartX, y: chartY });\r\n                        var angle = pointRelativePosition.angle;\r\n                        var distance = pointRelativePosition.distance;\r\n\r\n                        // Sanitise angle range\r\n                        var startAngle = vm.startAngle;\r\n                        var endAngle = vm.endAngle;\r\n                        while (endAngle < startAngle) {\r\n                            endAngle += 2.0 * Math.PI;\r\n                        }\r\n                        while (angle > endAngle) {\r\n                            angle -= 2.0 * Math.PI;\r\n                        }\r\n                        while (angle < startAngle) {\r\n                            angle += 2.0 * Math.PI;\r\n                        }\r\n\r\n                        // Check if within the range of the open/close angle\r\n                        var betweenAngles = (angle >= startAngle && angle <= endAngle);\r\n                        var withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\r\n\r\n                        return (betweenAngles && withinRadius);\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\r\n                    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\r\n                    return {\r\n                        x: vm.x + Math.cos(halfAngle) * halfRadius,\r\n                        y: vm.y + Math.sin(halfAngle) * halfRadius\r\n                    };\r\n                },\r\n\r\n                getArea: function() {\r\n                    var vm = this._view;\r\n                    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\r\n                    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\r\n\r\n                    return {\r\n                        x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\r\n                        y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\r\n                    };\r\n                },\r\n\r\n                draw: function() {\r\n                    var ctx = this._chart.ctx;\r\n                    var vm = this._view;\r\n                    var sA = vm.startAngle;\r\n                    var eA = vm.endAngle;\r\n\r\n                    ctx.beginPath();\r\n\r\n                    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\r\n                    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\r\n\r\n                    ctx.closePath();\r\n                    ctx.strokeStyle = vm.borderColor;\r\n                    ctx.lineWidth = vm.borderWidth;\r\n\r\n                    ctx.fillStyle = vm.backgroundColor;\r\n\r\n                    ctx.fill();\r\n                    ctx.lineJoin = 'bevel';\r\n\r\n                    if (vm.borderWidth) {\r\n                        ctx.stroke();\r\n                    }\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 28: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            var globalDefaults = defaults.global;\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    line: {\r\n                        tension: 0.4,\r\n                        backgroundColor: globalDefaults.defaultColor,\r\n                        borderWidth: 3,\r\n                        borderColor: globalDefaults.defaultColor,\r\n                        borderCapStyle: 'butt',\r\n                        borderDash: [],\r\n                        borderDashOffset: 0.0,\r\n                        borderJoinStyle: 'miter',\r\n                        capBezierPoints: true,\r\n                        fill: true, // do we fill in the area between the line and its base axis\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = Element.extend({\r\n                draw: function() {\r\n                    var me = this;\r\n                    var vm = me._view;\r\n                    var ctx = me._chart.ctx;\r\n                    var spanGaps = vm.spanGaps;\r\n                    var points = me._children.slice(); // clone array\r\n                    var globalOptionLineElements = globalDefaults.elements.line;\r\n                    var lastDrawnIndex = -1;\r\n                    var index, current, previous, currentVM;\r\n\r\n                    // If we are looping, adding the first point again\r\n                    if (me._loop && points.length) {\r\n                        points.push(points[0]);\r\n                    }\r\n\r\n                    ctx.save();\r\n\r\n                    // Stroke Line Options\r\n                    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\r\n\r\n                    // IE 9 and 10 do not support line dash\r\n                    if (ctx.setLineDash) {\r\n                        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\r\n                    }\r\n\r\n                    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\r\n                    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\r\n                    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\r\n                    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\r\n\r\n                    // Stroke Line\r\n                    ctx.beginPath();\r\n                    lastDrawnIndex = -1;\r\n\r\n                    for (index = 0; index < points.length; ++index) {\r\n                        current = points[index];\r\n                        previous = helpers.previousItem(points, index);\r\n                        currentVM = current._view;\r\n\r\n                        // First point moves to it's starting position no matter what\r\n                        if (index === 0) {\r\n                            if (!currentVM.skip) {\r\n                                ctx.moveTo(currentVM.x, currentVM.y);\r\n                                lastDrawnIndex = index;\r\n                            }\r\n                        } else {\r\n                            previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\r\n\r\n                            if (!currentVM.skip) {\r\n                                if ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\r\n                                    // There was a gap and this is the first point after the gap\r\n                                    ctx.moveTo(currentVM.x, currentVM.y);\r\n                                } else {\r\n                                    // Line to next point\r\n                                    helpers.canvas.lineTo(ctx, previous._view, current._view);\r\n                                }\r\n                                lastDrawnIndex = index;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    ctx.stroke();\r\n                    ctx.restore();\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 29: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            var defaultColor = defaults.global.defaultColor;\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    point: {\r\n                        radius: 3,\r\n                        pointStyle: 'circle',\r\n                        backgroundColor: defaultColor,\r\n                        borderColor: defaultColor,\r\n                        borderWidth: 1,\r\n                        // Hover\r\n                        hitRadius: 1,\r\n                        hoverRadius: 4,\r\n                        hoverBorderWidth: 1\r\n                    }\r\n                }\r\n            });\r\n\r\n            function xRange(mouseX) {\r\n                var vm = this._view;\r\n                return vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\r\n            }\r\n\r\n            function yRange(mouseY) {\r\n                var vm = this._view;\r\n                return vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\r\n            }\r\n\r\n            module.exports = Element.extend({\r\n                inRange: function(mouseX, mouseY) {\r\n                    var vm = this._view;\r\n                    return vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\r\n                },\r\n\r\n                inLabelRange: xRange,\r\n                inXRange: xRange,\r\n                inYRange: yRange,\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y\r\n                    };\r\n                },\r\n\r\n                getArea: function() {\r\n                    return Math.PI * Math.pow(this._view.radius, 2);\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y,\r\n                        padding: vm.radius + vm.borderWidth\r\n                    };\r\n                },\r\n\r\n                draw: function(chartArea) {\r\n                    var vm = this._view;\r\n                    var model = this._model;\r\n                    var ctx = this._chart.ctx;\r\n                    var pointStyle = vm.pointStyle;\r\n                    var radius = vm.radius;\r\n                    var x = vm.x;\r\n                    var y = vm.y;\r\n                    var color = helpers.color;\r\n                    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\r\n                    var ratio = 0;\r\n\r\n                    if (vm.skip) {\r\n                        return;\r\n                    }\r\n\r\n                    ctx.strokeStyle = vm.borderColor || defaultColor;\r\n                    ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\r\n                    ctx.fillStyle = vm.backgroundColor || defaultColor;\r\n\r\n                    // Cliping for Points.\r\n                    // going out from inner charArea?\r\n                    if ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\r\n                        // Point fade out\r\n                        if (model.x < chartArea.left) {\r\n                            ratio = (x - model.x) / (chartArea.left - model.x);\r\n                        } else if (chartArea.right * errMargin < model.x) {\r\n                            ratio = (model.x - x) / (model.x - chartArea.right);\r\n                        } else if (model.y < chartArea.top) {\r\n                            ratio = (y - model.y) / (chartArea.top - model.y);\r\n                        } else if (chartArea.bottom * errMargin < model.y) {\r\n                            ratio = (model.y - y) / (model.y - chartArea.bottom);\r\n                        }\r\n                        ratio = Math.round(ratio * 100) / 100;\r\n                        ctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\r\n                        ctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\r\n                    }\r\n\r\n                    helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 30: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    rectangle: {\r\n                        backgroundColor: defaults.global.defaultColor,\r\n                        borderColor: defaults.global.defaultColor,\r\n                        borderSkipped: 'bottom',\r\n                        borderWidth: 0\r\n                    }\r\n                }\r\n            });\r\n\r\n            function isVertical(bar) {\r\n                return bar._view.width !== undefined;\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the bounds of the bar regardless of the orientation\r\n             * @param bar {Chart.Element.Rectangle} the bar\r\n             * @return {Bounds} bounds of the bar\r\n             * @private\r\n             */\r\n            function getBarBounds(bar) {\r\n                var vm = bar._view;\r\n                var x1, x2, y1, y2;\r\n\r\n                if (isVertical(bar)) {\r\n                    // vertical\r\n                    var halfWidth = vm.width / 2;\r\n                    x1 = vm.x - halfWidth;\r\n                    x2 = vm.x + halfWidth;\r\n                    y1 = Math.min(vm.y, vm.base);\r\n                    y2 = Math.max(vm.y, vm.base);\r\n                } else {\r\n                    // horizontal bar\r\n                    var halfHeight = vm.height / 2;\r\n                    x1 = Math.min(vm.x, vm.base);\r\n                    x2 = Math.max(vm.x, vm.base);\r\n                    y1 = vm.y - halfHeight;\r\n                    y2 = vm.y + halfHeight;\r\n                }\r\n\r\n                return {\r\n                    left: x1,\r\n                    top: y1,\r\n                    right: x2,\r\n                    bottom: y2\r\n                };\r\n            }\r\n\r\n            module.exports = Element.extend({\r\n                draw: function() {\r\n                    var ctx = this._chart.ctx;\r\n                    var vm = this._view;\r\n                    var left, right, top, bottom, signX, signY, borderSkipped;\r\n                    var borderWidth = vm.borderWidth;\r\n\r\n                    if (!vm.horizontal) {\r\n                        // bar\r\n                        left = vm.x - vm.width / 2;\r\n                        right = vm.x + vm.width / 2;\r\n                        top = vm.y;\r\n                        bottom = vm.base;\r\n                        signX = 1;\r\n                        signY = bottom > top ? 1 : -1;\r\n                        borderSkipped = vm.borderSkipped || 'bottom';\r\n                    } else {\r\n                        // horizontal bar\r\n                        left = vm.base;\r\n                        right = vm.x;\r\n                        top = vm.y - vm.height / 2;\r\n                        bottom = vm.y + vm.height / 2;\r\n                        signX = right > left ? 1 : -1;\r\n                        signY = 1;\r\n                        borderSkipped = vm.borderSkipped || 'left';\r\n                    }\r\n\r\n                    // Canvas doesn't allow us to stroke inside the width so we can\r\n                    // adjust the sizes to fit if we're setting a stroke on the line\r\n                    if (borderWidth) {\r\n                        // borderWidth shold be less than bar width and bar height.\r\n                        var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n                        borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n                        var halfStroke = borderWidth / 2;\r\n                        // Adjust borderWidth when bar top position is near vm.base(zero).\r\n                        var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n                        var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n                        var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n                        var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n                        // not become a vertical line?\r\n                        if (borderLeft !== borderRight) {\r\n                            top = borderTop;\r\n                            bottom = borderBottom;\r\n                        }\r\n                        // not become a horizontal line?\r\n                        if (borderTop !== borderBottom) {\r\n                            left = borderLeft;\r\n                            right = borderRight;\r\n                        }\r\n                    }\r\n\r\n                    ctx.beginPath();\r\n                    ctx.fillStyle = vm.backgroundColor;\r\n                    ctx.strokeStyle = vm.borderColor;\r\n                    ctx.lineWidth = borderWidth;\r\n\r\n                    // Corner points, from bottom-left to bottom-right clockwise\r\n                    // | 1 2 |\r\n                    // | 0 3 |\r\n                    var corners = [\r\n                        [left, bottom],\r\n                        [left, top],\r\n                        [right, top],\r\n                        [right, bottom]\r\n                    ];\r\n\r\n                    // Find first (starting) corner with fallback to 'bottom'\r\n                    var borders = ['bottom', 'left', 'top', 'right'];\r\n                    var startCorner = borders.indexOf(borderSkipped, 0);\r\n                    if (startCorner === -1) {\r\n                        startCorner = 0;\r\n                    }\r\n\r\n                    function cornerAt(index) {\r\n                        return corners[(startCorner + index) % 4];\r\n                    }\r\n\r\n                    // Draw rectangle from 'startCorner'\r\n                    var corner = cornerAt(0);\r\n                    ctx.moveTo(corner[0], corner[1]);\r\n\r\n                    for (var i = 1; i < 4; i++) {\r\n                        corner = cornerAt(i);\r\n                        ctx.lineTo(corner[0], corner[1]);\r\n                    }\r\n\r\n                    ctx.fill();\r\n                    if (borderWidth) {\r\n                        ctx.stroke();\r\n                    }\r\n                },\r\n\r\n                height: function() {\r\n                    var vm = this._view;\r\n                    return vm.base - vm.y;\r\n                },\r\n\r\n                inRange: function(mouseX, mouseY) {\r\n                    var inRange = false;\r\n\r\n                    if (this._view) {\r\n                        var bounds = getBarBounds(this);\r\n                        inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                    }\r\n\r\n                    return inRange;\r\n                },\r\n\r\n                inLabelRange: function(mouseX, mouseY) {\r\n                    var me = this;\r\n                    if (!me._view) {\r\n                        return false;\r\n                    }\r\n\r\n                    var inRange = false;\r\n                    var bounds = getBarBounds(me);\r\n\r\n                    if (isVertical(me)) {\r\n                        inRange = mouseX >= bounds.left && mouseX <= bounds.right;\r\n                    } else {\r\n                        inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                    }\r\n\r\n                    return inRange;\r\n                },\r\n\r\n                inXRange: function(mouseX) {\r\n                    var bounds = getBarBounds(this);\r\n                    return mouseX >= bounds.left && mouseX <= bounds.right;\r\n                },\r\n\r\n                inYRange: function(mouseY) {\r\n                    var bounds = getBarBounds(this);\r\n                    return mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                },\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    var x, y;\r\n                    if (isVertical(this)) {\r\n                        x = vm.x;\r\n                        y = (vm.y + vm.base) / 2;\r\n                    } else {\r\n                        x = (vm.x + vm.base) / 2;\r\n                        y = vm.y;\r\n                    }\r\n\r\n                    return { x: x, y: y };\r\n                },\r\n\r\n                getArea: function() {\r\n                    var vm = this._view;\r\n                    return vm.width * Math.abs(vm.y - vm.base);\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y\r\n                    };\r\n                }\r\n            });\r\n        }, { \"16\": 16, \"17\": 17 }], 31: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = {};\r\n            module.exports.Arc = require(27);\r\n            module.exports.Line = require(28);\r\n            module.exports.Point = require(29);\r\n            module.exports.Rectangle = require(30);\r\n        }, { \"27\": 27, \"28\": 28, \"29\": 29, \"30\": 30 }], 32: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * @namespace Chart.helpers.canvas\r\n             */\r\n            var exports = module.exports = {\r\n                /**\r\n                 * Clears the entire canvas associated to the given `chart`.\r\n                 * @param {Chart} chart - The chart for which to clear the canvas.\r\n                 */\r\n                clear: function(chart) {\r\n                    chart.ctx.clearRect(0, 0, chart.width, chart.height);\r\n                },\r\n\r\n                /**\r\n                 * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\r\n                 * given size (width, height) and the same `radius` for all corners.\r\n                 * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\r\n                 * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\r\n                 * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\r\n                 * @param {Number} width - The rectangle's width.\r\n                 * @param {Number} height - The rectangle's height.\r\n                 * @param {Number} radius - The rounded amount (in pixels) for the four corners.\r\n                 * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\r\n                 */\r\n                roundedRect: function(ctx, x, y, width, height, radius) {\r\n                    if (radius) {\r\n                        var rx = Math.min(radius, width / 2);\r\n                        var ry = Math.min(radius, height / 2);\r\n\r\n                        ctx.moveTo(x + rx, y);\r\n                        ctx.lineTo(x + width - rx, y);\r\n                        ctx.quadraticCurveTo(x + width, y, x + width, y + ry);\r\n                        ctx.lineTo(x + width, y + height - ry);\r\n                        ctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\r\n                        ctx.lineTo(x + rx, y + height);\r\n                        ctx.quadraticCurveTo(x, y + height, x, y + height - ry);\r\n                        ctx.lineTo(x, y + ry);\r\n                        ctx.quadraticCurveTo(x, y, x + rx, y);\r\n                    } else {\r\n                        ctx.rect(x, y, width, height);\r\n                    }\r\n                },\r\n\r\n                drawPoint: function(ctx, style, radius, x, y) {\r\n                    var type, edgeLength, xOffset, yOffset, height, size;\r\n\r\n                    if (style && typeof style === 'object') {\r\n                        type = style.toString();\r\n                        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n                            ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    if (isNaN(radius) || radius <= 0) {\r\n                        return;\r\n                    }\r\n\r\n                    switch (style) {\r\n                        // Default includes circle\r\n                        default:\r\n                            ctx.beginPath();\r\n                            ctx.arc(x, y, radius, 0, Math.PI * 2);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'triangle':\r\n                            ctx.beginPath();\r\n                            edgeLength = 3 * radius / Math.sqrt(3);\r\n                            height = edgeLength * Math.sqrt(3) / 2;\r\n                            ctx.moveTo(x - edgeLength / 2, y + height / 3);\r\n                            ctx.lineTo(x + edgeLength / 2, y + height / 3);\r\n                            ctx.lineTo(x, y - 2 * height / 3);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'rect':\r\n                            size = 1 / Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            ctx.fillRect(x - size, y - size, 2 * size, 2 * size);\r\n                            ctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\r\n                            break;\r\n                        case 'rectRounded':\r\n                            var offset = radius / Math.SQRT2;\r\n                            var leftX = x - offset;\r\n                            var topY = y - offset;\r\n                            var sideSize = Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'rectRot':\r\n                            size = 1 / Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x - size, y);\r\n                            ctx.lineTo(x, y + size);\r\n                            ctx.lineTo(x + size, y);\r\n                            ctx.lineTo(x, y - size);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'cross':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y + radius);\r\n                            ctx.lineTo(x, y - radius);\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'crossRot':\r\n                            ctx.beginPath();\r\n                            xOffset = Math.cos(Math.PI / 4) * radius;\r\n                            yOffset = Math.sin(Math.PI / 4) * radius;\r\n                            ctx.moveTo(x - xOffset, y - yOffset);\r\n                            ctx.lineTo(x + xOffset, y + yOffset);\r\n                            ctx.moveTo(x - xOffset, y + yOffset);\r\n                            ctx.lineTo(x + xOffset, y - yOffset);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'star':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y + radius);\r\n                            ctx.lineTo(x, y - radius);\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            xOffset = Math.cos(Math.PI / 4) * radius;\r\n                            yOffset = Math.sin(Math.PI / 4) * radius;\r\n                            ctx.moveTo(x - xOffset, y - yOffset);\r\n                            ctx.lineTo(x + xOffset, y + yOffset);\r\n                            ctx.moveTo(x - xOffset, y + yOffset);\r\n                            ctx.lineTo(x + xOffset, y - yOffset);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'line':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'dash':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                    }\r\n\r\n                    ctx.stroke();\r\n                },\r\n\r\n                clipArea: function(ctx, area) {\r\n                    ctx.save();\r\n                    ctx.beginPath();\r\n                    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\r\n                    ctx.clip();\r\n                },\r\n\r\n                unclipArea: function(ctx) {\r\n                    ctx.restore();\r\n                },\r\n\r\n                lineTo: function(ctx, previous, target, flip) {\r\n                    if (target.steppedLine) {\r\n                        if ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\r\n                            ctx.lineTo(previous.x, target.y);\r\n                        } else {\r\n                            ctx.lineTo(target.x, previous.y);\r\n                        }\r\n                        ctx.lineTo(target.x, target.y);\r\n                        return;\r\n                    }\r\n\r\n                    if (!target.tension) {\r\n                        ctx.lineTo(target.x, target.y);\r\n                        return;\r\n                    }\r\n\r\n                    ctx.bezierCurveTo(\r\n                        flip ? previous.controlPointPreviousX : previous.controlPointNextX,\r\n                        flip ? previous.controlPointPreviousY : previous.controlPointNextY,\r\n                        flip ? target.controlPointNextX : target.controlPointPreviousX,\r\n                        flip ? target.controlPointNextY : target.controlPointPreviousY,\r\n                        target.x,\r\n                        target.y);\r\n                }\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\r\n             * @namespace Chart.helpers.clear\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.clear = exports.clear;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\r\n             * @namespace Chart.helpers.drawRoundedRectangle\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.drawRoundedRectangle = function(ctx) {\r\n                ctx.beginPath();\r\n                exports.roundedRect.apply(exports, arguments);\r\n                ctx.closePath();\r\n            };\r\n        }, { \"33\": 33 }], 33: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            /**\r\n             * @namespace Chart.helpers\r\n             */\r\n            var helpers = {\r\n                /**\r\n                 * An empty function that can be used, for example, for optional callback.\r\n                 */\r\n                noop: function() { },\r\n\r\n                /**\r\n                 * Returns a unique id, sequentially generated from a global variable.\r\n                 * @returns {Number}\r\n                 * @function\r\n                 */\r\n                uid: (function() {\r\n                    var id = 0;\r\n                    return function() {\r\n                        return id++;\r\n                    };\r\n                }()),\r\n\r\n                /**\r\n                 * Returns true if `value` is neither null nor undefined, else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @since 2.7.0\r\n                 */\r\n                isNullOrUndef: function(value) {\r\n                    return value === null || typeof value === 'undefined';\r\n                },\r\n\r\n                /**\r\n                 * Returns true if `value` is an array, else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @function\r\n                 */\r\n                isArray: Array.isArray ? Array.isArray : function(value) {\r\n                    return Object.prototype.toString.call(value) === '[object Array]';\r\n                },\r\n\r\n                /**\r\n                 * Returns true if `value` is an object (excluding null), else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @since 2.7.0\r\n                 */\r\n                isObject: function(value) {\r\n                    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\r\n                },\r\n\r\n                /**\r\n                 * Returns `value` if defined, else returns `defaultValue`.\r\n                 * @param {*} value - The value to return if defined.\r\n                 * @param {*} defaultValue - The value to return if `value` is undefined.\r\n                 * @returns {*}\r\n                 */\r\n                valueOrDefault: function(value, defaultValue) {\r\n                    return typeof value === 'undefined' ? defaultValue : value;\r\n                },\r\n\r\n                /**\r\n                 * Returns value at the given `index` in array if defined, else returns `defaultValue`.\r\n                 * @param {Array} value - The array to lookup for value at `index`.\r\n                 * @param {Number} index - The index in `value` to lookup for value.\r\n                 * @param {*} defaultValue - The value to return if `value[index]` is undefined.\r\n                 * @returns {*}\r\n                 */\r\n                valueAtIndexOrDefault: function(value, index, defaultValue) {\r\n                    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\r\n                },\r\n\r\n                /**\r\n                 * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\r\n                 * value returned by `fn`. If `fn` is not a function, this method returns undefined.\r\n                 * @param {Function} fn - The function to call.\r\n                 * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\r\n                 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\r\n                 * @returns {*}\r\n                 */\r\n                callback: function(fn, args, thisArg) {\r\n                    if (fn && typeof fn.call === 'function') {\r\n                        return fn.apply(thisArg, args);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Note(SB) for performance sake, this method should only be used when loopable type\r\n                 * is unknown or in none intensive code (not called often and small loopable). Else\r\n                 * it's preferable to use a regular for() loop and save extra function calls.\r\n                 * @param {Object|Array} loopable - The object or array to be iterated.\r\n                 * @param {Function} fn - The function to call for each item.\r\n                 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\r\n                 * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\r\n                 */\r\n                each: function(loopable, fn, thisArg, reverse) {\r\n                    var i, len, keys;\r\n                    if (helpers.isArray(loopable)) {\r\n                        len = loopable.length;\r\n                        if (reverse) {\r\n                            for (i = len - 1; i >= 0; i--) {\r\n                                fn.call(thisArg, loopable[i], i);\r\n                            }\r\n                        } else {\r\n                            for (i = 0; i < len; i++) {\r\n                                fn.call(thisArg, loopable[i], i);\r\n                            }\r\n                        }\r\n                    } else if (helpers.isObject(loopable)) {\r\n                        keys = Object.keys(loopable);\r\n                        len = keys.length;\r\n                        for (i = 0; i < len; i++) {\r\n                            fn.call(thisArg, loopable[keys[i]], keys[i]);\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\r\n                 * @see http://stackoverflow.com/a/14853974\r\n                 * @param {Array} a0 - The array to compare\r\n                 * @param {Array} a1 - The array to compare\r\n                 * @returns {Boolean}\r\n                 */\r\n                arrayEquals: function(a0, a1) {\r\n                    var i, ilen, v0, v1;\r\n\r\n                    if (!a0 || !a1 || a0.length !== a1.length) {\r\n                        return false;\r\n                    }\r\n\r\n                    for (i = 0, ilen = a0.length; i < ilen; ++i) {\r\n                        v0 = a0[i];\r\n                        v1 = a1[i];\r\n\r\n                        if (v0 instanceof Array && v1 instanceof Array) {\r\n                            if (!helpers.arrayEquals(v0, v1)) {\r\n                                return false;\r\n                            }\r\n                        } else if (v0 !== v1) {\r\n                            // NOTE: two different object instances will never be equal: {x:20} != {x:20}\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                },\r\n\r\n                /**\r\n                 * Returns a deep copy of `source` without keeping references on objects and arrays.\r\n                 * @param {*} source - The value to clone.\r\n                 * @returns {*}\r\n                 */\r\n                clone: function(source) {\r\n                    if (helpers.isArray(source)) {\r\n                        return source.map(helpers.clone);\r\n                    }\r\n\r\n                    if (helpers.isObject(source)) {\r\n                        var target = {};\r\n                        var keys = Object.keys(source);\r\n                        var klen = keys.length;\r\n                        var k = 0;\r\n\r\n                        for (; k < klen; ++k) {\r\n                            target[keys[k]] = helpers.clone(source[keys[k]]);\r\n                        }\r\n\r\n                        return target;\r\n                    }\r\n\r\n                    return source;\r\n                },\r\n\r\n                /**\r\n                 * The default merger when Chart.helpers.merge is called without merger option.\r\n                 * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\r\n                 * @private\r\n                 */\r\n                _merger: function(key, target, source, options) {\r\n                    var tval = target[key];\r\n                    var sval = source[key];\r\n\r\n                    if (helpers.isObject(tval) && helpers.isObject(sval)) {\r\n                        helpers.merge(tval, sval, options);\r\n                    } else {\r\n                        target[key] = helpers.clone(sval);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Merges source[key] in target[key] only if target[key] is undefined.\r\n                 * @private\r\n                 */\r\n                _mergerIf: function(key, target, source) {\r\n                    var tval = target[key];\r\n                    var sval = source[key];\r\n\r\n                    if (helpers.isObject(tval) && helpers.isObject(sval)) {\r\n                        helpers.mergeIf(tval, sval);\r\n                    } else if (!target.hasOwnProperty(key)) {\r\n                        target[key] = helpers.clone(sval);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Recursively deep copies `source` properties into `target` with the given `options`.\r\n                 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n                 * @param {Object} target - The target object in which all sources are merged into.\r\n                 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\r\n                 * @param {Object} [options] - Merging options:\r\n                 * @param {Function} [options.merger] - The merge method (key, target, source, options)\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                merge: function(target, source, options) {\r\n                    var sources = helpers.isArray(source) ? source : [source];\r\n                    var ilen = sources.length;\r\n                    var merge, i, keys, klen, k;\r\n\r\n                    if (!helpers.isObject(target)) {\r\n                        return target;\r\n                    }\r\n\r\n                    options = options || {};\r\n                    merge = options.merger || helpers._merger;\r\n\r\n                    for (i = 0; i < ilen; ++i) {\r\n                        source = sources[i];\r\n                        if (!helpers.isObject(source)) {\r\n                            continue;\r\n                        }\r\n\r\n                        keys = Object.keys(source);\r\n                        for (k = 0, klen = keys.length; k < klen; ++k) {\r\n                            merge(keys[k], target, source, options);\r\n                        }\r\n                    }\r\n\r\n                    return target;\r\n                },\r\n\r\n                /**\r\n                 * Recursively deep copies `source` properties into `target` *only* if not defined in target.\r\n                 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n                 * @param {Object} target - The target object in which all sources are merged into.\r\n                 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                mergeIf: function(target, source) {\r\n                    return helpers.merge(target, source, { merger: helpers._mergerIf });\r\n                },\r\n\r\n                /**\r\n                 * Applies the contents of two or more objects together into the first object.\r\n                 * @param {Object} target - The target object in which all objects are merged into.\r\n                 * @param {Object} arg1 - Object containing additional properties to merge in target.\r\n                 * @param {Object} argN - Additional objects containing properties to merge in target.\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                extend: function(target) {\r\n                    var setFn = function(value, key) {\r\n                        target[key] = value;\r\n                    };\r\n                    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\r\n                        helpers.each(arguments[i], setFn);\r\n                    }\r\n                    return target;\r\n                },\r\n\r\n                /**\r\n                 * Basic javascript inheritance based on the model created in Backbone.js\r\n                 */\r\n                inherits: function(extensions) {\r\n                    var me = this;\r\n                    var ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\r\n                        return me.apply(this, arguments);\r\n                    };\r\n\r\n                    var Surrogate = function() {\r\n                        this.constructor = ChartElement;\r\n                    };\r\n\r\n                    Surrogate.prototype = me.prototype;\r\n                    ChartElement.prototype = new Surrogate();\r\n                    ChartElement.extend = helpers.inherits;\r\n\r\n                    if (extensions) {\r\n                        helpers.extend(ChartElement.prototype, extensions);\r\n                    }\r\n\r\n                    ChartElement.__super__ = me.prototype;\r\n                    return ChartElement;\r\n                }\r\n            };\r\n\r\n            module.exports = helpers;\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.callback instead.\r\n             * @function Chart.helpers.callCallback\r\n             * @deprecated since version 2.6.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.callCallback = helpers.callback;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Array.prototype.indexOf instead.\r\n             * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\r\n             * @function Chart.helpers.indexOf\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.indexOf = function(array, item, fromIndex) {\r\n                return Array.prototype.indexOf.call(array, item, fromIndex);\r\n            };\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\r\n             * @function Chart.helpers.getValueOrDefault\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.getValueOrDefault = helpers.valueOrDefault;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\r\n             * @function Chart.helpers.getValueAtIndexOrDefault\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n        }, {}], 34: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * Easing functions adapted from Robert Penner's easing equations.\r\n             * @namespace Chart.helpers.easingEffects\r\n             * @see http://www.robertpenner.com/easing/\r\n             */\r\n            var effects = {\r\n                linear: function(t) {\r\n                    return t;\r\n                },\r\n\r\n                easeInQuad: function(t) {\r\n                    return t * t;\r\n                },\r\n\r\n                easeOutQuad: function(t) {\r\n                    return -t * (t - 2);\r\n                },\r\n\r\n                easeInOutQuad: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t;\r\n                    }\r\n                    return -0.5 * ((--t) * (t - 2) - 1);\r\n                },\r\n\r\n                easeInCubic: function(t) {\r\n                    return t * t * t;\r\n                },\r\n\r\n                easeOutCubic: function(t) {\r\n                    return (t = t - 1) * t * t + 1;\r\n                },\r\n\r\n                easeInOutCubic: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t;\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * t + 2);\r\n                },\r\n\r\n                easeInQuart: function(t) {\r\n                    return t * t * t * t;\r\n                },\r\n\r\n                easeOutQuart: function(t) {\r\n                    return -((t = t - 1) * t * t * t - 1);\r\n                },\r\n\r\n                easeInOutQuart: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t * t;\r\n                    }\r\n                    return -0.5 * ((t -= 2) * t * t * t - 2);\r\n                },\r\n\r\n                easeInQuint: function(t) {\r\n                    return t * t * t * t * t;\r\n                },\r\n\r\n                easeOutQuint: function(t) {\r\n                    return (t = t - 1) * t * t * t * t + 1;\r\n                },\r\n\r\n                easeInOutQuint: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t * t * t;\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * t * t * t + 2);\r\n                },\r\n\r\n                easeInSine: function(t) {\r\n                    return -Math.cos(t * (Math.PI / 2)) + 1;\r\n                },\r\n\r\n                easeOutSine: function(t) {\r\n                    return Math.sin(t * (Math.PI / 2));\r\n                },\r\n\r\n                easeInOutSine: function(t) {\r\n                    return -0.5 * (Math.cos(Math.PI * t) - 1);\r\n                },\r\n\r\n                easeInExpo: function(t) {\r\n                    return (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\r\n                },\r\n\r\n                easeOutExpo: function(t) {\r\n                    return (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\r\n                },\r\n\r\n                easeInOutExpo: function(t) {\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * Math.pow(2, 10 * (t - 1));\r\n                    }\r\n                    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\r\n                },\r\n\r\n                easeInCirc: function(t) {\r\n                    if (t >= 1) {\r\n                        return t;\r\n                    }\r\n                    return -(Math.sqrt(1 - t * t) - 1);\r\n                },\r\n\r\n                easeOutCirc: function(t) {\r\n                    return Math.sqrt(1 - (t = t - 1) * t);\r\n                },\r\n\r\n                easeInOutCirc: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return -0.5 * (Math.sqrt(1 - t * t) - 1);\r\n                    }\r\n                    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\r\n                },\r\n\r\n                easeInElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.3;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\r\n                },\r\n\r\n                easeOutElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.3;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\r\n                },\r\n\r\n                easeInOutElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if ((t /= 0.5) === 2) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.45;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    if (t < 1) {\r\n                        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\r\n                    }\r\n                    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n                },\r\n                easeInBack: function(t) {\r\n                    var s = 1.70158;\r\n                    return t * t * ((s + 1) * t - s);\r\n                },\r\n\r\n                easeOutBack: function(t) {\r\n                    var s = 1.70158;\r\n                    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\r\n                },\r\n\r\n                easeInOutBack: function(t) {\r\n                    var s = 1.70158;\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n                },\r\n\r\n                easeInBounce: function(t) {\r\n                    return 1 - effects.easeOutBounce(1 - t);\r\n                },\r\n\r\n                easeOutBounce: function(t) {\r\n                    if (t < (1 / 2.75)) {\r\n                        return 7.5625 * t * t;\r\n                    }\r\n                    if (t < (2 / 2.75)) {\r\n                        return 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\r\n                    }\r\n                    if (t < (2.5 / 2.75)) {\r\n                        return 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\r\n                    }\r\n                    return 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\r\n                },\r\n\r\n                easeInOutBounce: function(t) {\r\n                    if (t < 0.5) {\r\n                        return effects.easeInBounce(t * 2) * 0.5;\r\n                    }\r\n                    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\r\n                }\r\n            };\r\n\r\n            module.exports = {\r\n                effects: effects\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\r\n             * @function Chart.helpers.easingEffects\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.easingEffects = effects;\r\n        }, { \"33\": 33 }], 35: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * @alias Chart.helpers.options\r\n             * @namespace\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Converts the given line height `value` in pixels for a specific font `size`.\r\n                 * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\r\n                 * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\r\n                 * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\r\n                 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\r\n                 * @since 2.7.0\r\n                 */\r\n                toLineHeight: function(value, size) {\r\n                    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\r\n                    if (!matches || matches[1] === 'normal') {\r\n                        return size * 1.2;\r\n                    }\r\n\r\n                    value = +matches[2];\r\n\r\n                    switch (matches[3]) {\r\n                        case 'px':\r\n                            return value;\r\n                        case '%':\r\n                            value /= 100;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n\r\n                    return size * value;\r\n                },\r\n\r\n                /**\r\n                 * Converts the given value into a padding object with pre-computed width/height.\r\n                 * @param {Number|Object} value - If a number, set the value to all TRBL component,\r\n                 *  else, if and object, use defined properties and sets undefined ones to 0.\r\n                 * @returns {Object} The padding values (top, right, bottom, left, width, height)\r\n                 * @since 2.7.0\r\n                 */\r\n                toPadding: function(value) {\r\n                    var t, r, b, l;\r\n\r\n                    if (helpers.isObject(value)) {\r\n                        t = +value.top || 0;\r\n                        r = +value.right || 0;\r\n                        b = +value.bottom || 0;\r\n                        l = +value.left || 0;\r\n                    } else {\r\n                        t = r = b = l = +value || 0;\r\n                    }\r\n\r\n                    return {\r\n                        top: t,\r\n                        right: r,\r\n                        bottom: b,\r\n                        left: l,\r\n                        height: t + b,\r\n                        width: l + r\r\n                    };\r\n                },\r\n\r\n                /**\r\n                 * Evaluates the given `inputs` sequentially and returns the first defined value.\r\n                 * @param {Array[]} inputs - An array of values, falling back to the last value.\r\n                 * @param {Object} [context] - If defined and the current value is a function, the value\r\n                 * is called with `context` as first argument and the result becomes the new input.\r\n                 * @param {Number} [index] - If defined and the current value is an array, the value\r\n                 * at `index` become the new input.\r\n                 * @since 2.7.0\r\n                 */\r\n                resolve: function(inputs, context, index) {\r\n                    var i, ilen, value;\r\n\r\n                    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\r\n                        value = inputs[i];\r\n                        if (value === undefined) {\r\n                            continue;\r\n                        }\r\n                        if (context !== undefined && typeof value === 'function') {\r\n                            value = value(context);\r\n                        }\r\n                        if (index !== undefined && helpers.isArray(value)) {\r\n                            value = value[index];\r\n                        }\r\n                        if (value !== undefined) {\r\n                            return value;\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }, { \"33\": 33 }], 36: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = require(33);\r\n            module.exports.easing = require(34);\r\n            module.exports.canvas = require(32);\r\n            module.exports.options = require(35);\r\n        }, { \"32\": 32, \"33\": 33, \"34\": 34, \"35\": 35 }], 37: [function(require, module, exports) {\r\n            /**\r\n             * Platform fallback implementation (minimal).\r\n             * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\r\n             */\r\n\r\n            module.exports = {\r\n                acquireContext: function(item) {\r\n                    if (item && item.canvas) {\r\n                        // Support for any object associated to a canvas (including a context2d)\r\n                        item = item.canvas;\r\n                    }\r\n\r\n                    return item && item.getContext('2d') || null;\r\n                }\r\n            };\r\n        }, {}], 38: [function(require, module, exports) {\r\n            /**\r\n             * Chart.Platform implementation for targeting a web browser\r\n             */\r\n\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            var EXPANDO_KEY = '$chartjs';\r\n            var CSS_PREFIX = 'chartjs-';\r\n            var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\r\n            var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\r\n            var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\r\n\r\n            /**\r\n             * DOM event types -> Chart.js event types.\r\n             * Note: only events with different types are mapped.\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/Events\r\n             */\r\n            var EVENT_TYPES = {\r\n                touchstart: 'mousedown',\r\n                touchmove: 'mousemove',\r\n                touchend: 'mouseup',\r\n                pointerenter: 'mouseenter',\r\n                pointerdown: 'mousedown',\r\n                pointermove: 'mousemove',\r\n                pointerup: 'mouseup',\r\n                pointerleave: 'mouseout',\r\n                pointerout: 'mouseout'\r\n            };\r\n\r\n            /**\r\n             * The \"used\" size is the final value of a dimension property after all calculations have\r\n             * been performed. This method uses the computed style of `element` but returns undefined\r\n             * if the computed style is not expressed in pixels. That can happen in some cases where\r\n             * `element` has a size relative to its parent and this last one is not yet displayed,\r\n             * for example because of `display: none` on a parent node.\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\r\n             * @returns {Number} Size in pixels or undefined if unknown.\r\n             */\r\n            function readUsedSize(element, property) {\r\n                var value = helpers.getStyle(element, property);\r\n                var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\r\n                return matches ? Number(matches[1]) : undefined;\r\n            }\r\n\r\n            /**\r\n             * Initializes the canvas style and render size without modifying the canvas display size,\r\n             * since responsiveness is handled by the controller.resize() method. The config is used\r\n             * to determine the aspect ratio to apply in case no explicit height has been specified.\r\n             */\r\n            function initCanvas(canvas, config) {\r\n                var style = canvas.style;\r\n\r\n                // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\r\n                // returns null or '' if no explicit value has been set to the canvas attribute.\r\n                var renderHeight = canvas.getAttribute('height');\r\n                var renderWidth = canvas.getAttribute('width');\r\n\r\n                // Chart.js modifies some canvas values that we want to restore on destroy\r\n                canvas[EXPANDO_KEY] = {\r\n                    initial: {\r\n                        height: renderHeight,\r\n                        width: renderWidth,\r\n                        style: {\r\n                            display: style.display,\r\n                            height: style.height,\r\n                            width: style.width\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // Force canvas to display as block to avoid extra space caused by inline\r\n                // elements, which would interfere with the responsive resize process.\r\n                // https://github.com/chartjs/Chart.js/issues/2538\r\n                style.display = style.display || 'block';\r\n\r\n                if (renderWidth === null || renderWidth === '') {\r\n                    var displayWidth = readUsedSize(canvas, 'width');\r\n                    if (displayWidth !== undefined) {\r\n                        canvas.width = displayWidth;\r\n                    }\r\n                }\r\n\r\n                if (renderHeight === null || renderHeight === '') {\r\n                    if (canvas.style.height === '') {\r\n                        // If no explicit render height and style height, let's apply the aspect ratio,\r\n                        // which one can be specified by the user but also by charts as default option\r\n                        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\r\n                        canvas.height = canvas.width / (config.options.aspectRatio || 2);\r\n                    } else {\r\n                        var displayHeight = readUsedSize(canvas, 'height');\r\n                        if (displayWidth !== undefined) {\r\n                            canvas.height = displayHeight;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return canvas;\r\n            }\r\n\r\n            /**\r\n             * Detects support for options object argument in addEventListener.\r\n             * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\r\n             * @private\r\n             */\r\n            var supportsEventListenerOptions = (function() {\r\n                var supports = false;\r\n                try {\r\n                    var options = Object.defineProperty({}, 'passive', {\r\n                        get: function() {\r\n                            supports = true;\r\n                        }\r\n                    });\r\n                    window.addEventListener('e', null, options);\r\n                } catch (e) {\r\n                    // continue regardless of error\r\n                }\r\n                return supports;\r\n            }());\r\n\r\n            // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\r\n            // https://github.com/chartjs/Chart.js/issues/4287\r\n            var eventListenerOptions = supportsEventListenerOptions ? { passive: true } : false;\r\n\r\n            function addEventListener(node, type, listener) {\r\n                node.addEventListener(type, listener, eventListenerOptions);\r\n            }\r\n\r\n            function removeEventListener(node, type, listener) {\r\n                node.removeEventListener(type, listener, eventListenerOptions);\r\n            }\r\n\r\n            function createEvent(type, chart, x, y, nativeEvent) {\r\n                return {\r\n                    type: type,\r\n                    chart: chart,\r\n                    native: nativeEvent || null,\r\n                    x: x !== undefined ? x : null,\r\n                    y: y !== undefined ? y : null,\r\n                };\r\n            }\r\n\r\n            function fromNativeEvent(event, chart) {\r\n                var type = EVENT_TYPES[event.type] || event.type;\r\n                var pos = helpers.getRelativePosition(event, chart);\r\n                return createEvent(type, chart, pos.x, pos.y, event);\r\n            }\r\n\r\n            function throttled(fn, thisArg) {\r\n                var ticking = false;\r\n                var args = [];\r\n\r\n                return function() {\r\n                    args = Array.prototype.slice.call(arguments);\r\n                    thisArg = thisArg || this;\r\n\r\n                    if (!ticking) {\r\n                        ticking = true;\r\n                        helpers.requestAnimFrame.call(window, function() {\r\n                            ticking = false;\r\n                            fn.apply(thisArg, args);\r\n                        });\r\n                    }\r\n                };\r\n            }\r\n\r\n            // Implementation based on https://github.com/marcj/css-element-queries\r\n            function createResizer(handler) {\r\n                var resizer = document.createElement('div');\r\n                var cls = CSS_PREFIX + 'size-monitor';\r\n                var maxSize = 1000000;\r\n                var style =\r\n                    'position:absolute;' +\r\n                    'left:0;' +\r\n                    'top:0;' +\r\n                    'right:0;' +\r\n                    'bottom:0;' +\r\n                    'overflow:hidden;' +\r\n                    'pointer-events:none;' +\r\n                    'visibility:hidden;' +\r\n                    'z-index:-1;';\r\n\r\n                resizer.style.cssText = style;\r\n                resizer.className = cls;\r\n                resizer.innerHTML =\r\n                    '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\r\n                    '<div style=\"' +\r\n                    'position:absolute;' +\r\n                    'width:' + maxSize + 'px;' +\r\n                    'height:' + maxSize + 'px;' +\r\n                    'left:0;' +\r\n                    'top:0\">' +\r\n                    '</div>' +\r\n                    '</div>' +\r\n                    '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\r\n                    '<div style=\"' +\r\n                    'position:absolute;' +\r\n                    'width:200%;' +\r\n                    'height:200%;' +\r\n                    'left:0; ' +\r\n                    'top:0\">' +\r\n                    '</div>' +\r\n                    '</div>';\r\n\r\n                var expand = resizer.childNodes[0];\r\n                var shrink = resizer.childNodes[1];\r\n\r\n                resizer._reset = function() {\r\n                    expand.scrollLeft = maxSize;\r\n                    expand.scrollTop = maxSize;\r\n                    shrink.scrollLeft = maxSize;\r\n                    shrink.scrollTop = maxSize;\r\n                };\r\n                var onScroll = function() {\r\n                    resizer._reset();\r\n                    handler();\r\n                };\r\n\r\n                addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\r\n                addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\r\n\r\n                return resizer;\r\n            }\r\n\r\n            // https://davidwalsh.name/detect-node-insertion\r\n            function watchForRender(node, handler) {\r\n                var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\r\n                var proxy = expando.renderProxy = function(e) {\r\n                    if (e.animationName === CSS_RENDER_ANIMATION) {\r\n                        handler();\r\n                    }\r\n                };\r\n\r\n                helpers.each(ANIMATION_START_EVENTS, function(type) {\r\n                    addEventListener(node, type, proxy);\r\n                });\r\n\r\n                // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\r\n                // is removed then added back immediately (same animation frame?). Accessing the\r\n                // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\r\n                // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\r\n                // https://github.com/chartjs/Chart.js/issues/4737\r\n                expando.reflow = !!node.offsetParent;\r\n\r\n                node.classList.add(CSS_RENDER_MONITOR);\r\n            }\r\n\r\n            function unwatchForRender(node) {\r\n                var expando = node[EXPANDO_KEY] || {};\r\n                var proxy = expando.renderProxy;\r\n\r\n                if (proxy) {\r\n                    helpers.each(ANIMATION_START_EVENTS, function(type) {\r\n                        removeEventListener(node, type, proxy);\r\n                    });\r\n\r\n                    delete expando.renderProxy;\r\n                }\r\n\r\n                node.classList.remove(CSS_RENDER_MONITOR);\r\n            }\r\n\r\n            function addResizeListener(node, listener, chart) {\r\n                var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\r\n\r\n                // Let's keep track of this added resizer and thus avoid DOM query when removing it.\r\n                var resizer = expando.resizer = createResizer(throttled(function() {\r\n                    if (expando.resizer) {\r\n                        return listener(createEvent('resize', chart));\r\n                    }\r\n                }));\r\n\r\n                // The resizer needs to be attached to the node parent, so we first need to be\r\n                // sure that `node` is attached to the DOM before injecting the resizer element.\r\n                watchForRender(node, function() {\r\n                    if (expando.resizer) {\r\n                        var container = node.parentNode;\r\n                        if (container && container !== resizer.parentNode) {\r\n                            container.insertBefore(resizer, container.firstChild);\r\n                        }\r\n\r\n                        // The container size might have changed, let's reset the resizer state.\r\n                        resizer._reset();\r\n                    }\r\n                });\r\n            }\r\n\r\n            function removeResizeListener(node) {\r\n                var expando = node[EXPANDO_KEY] || {};\r\n                var resizer = expando.resizer;\r\n\r\n                delete expando.resizer;\r\n                unwatchForRender(node);\r\n\r\n                if (resizer && resizer.parentNode) {\r\n                    resizer.parentNode.removeChild(resizer);\r\n                }\r\n            }\r\n\r\n            //function injectCSS(platform, css) {\r\n            //    // http://stackoverflow.com/q/3922139\r\n            //    var style = platform._style || document.createElement('style');\r\n            //    if (!platform._style) {\r\n            //        platform._style = style;\r\n            //        css = '/* Chart.js */\\n' + css;\r\n            //        style.setAttribute('type', 'text/css');\r\n            //        document.getElementsByTagName('head')[0].appendChild(style);\r\n            //    }\r\n\r\n            //    style.appendChild(document.createTextNode(css));\r\n            //}\r\n\r\n            module.exports = {\r\n                /**\r\n                 * This property holds whether this platform is enabled for the current environment.\r\n                 * Currently used by platform.js to select the proper implementation.\r\n                 * @private\r\n                 */\r\n                _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\r\n\r\n                initialize: function() {\r\n                    var keyframes = 'from{opacity:0.99}to{opacity:1}';\r\n                    //injectCSS(this,\r\n                    //    // DOM rendering detection\r\n                    //    // https://davidwalsh.name/detect-node-insertion\r\n                    //    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\r\n                    //    '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\r\n                    //    '.' + CSS_RENDER_MONITOR + '{' +\r\n                    //    '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\r\n                    //    'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\r\n                    //    '}'\r\n                    //);\r\n                },\r\n\r\n                acquireContext: function(item, config) {\r\n                    if (typeof item === 'string') {\r\n                        item = document.getElementById(item);\r\n                    } else if (item.length) {\r\n                        // Support for array based queries (such as jQuery)\r\n                        item = item[0];\r\n                    }\r\n\r\n                    if (item && item.canvas) {\r\n                        // Support for any object associated to a canvas (including a context2d)\r\n                        item = item.canvas;\r\n                    }\r\n\r\n                    // To prevent canvas fingerprinting, some add-ons undefine the getContext\r\n                    // method, for example: https://github.com/kkapsner/CanvasBlocker\r\n                    // https://github.com/chartjs/Chart.js/issues/2807\r\n                    var context = item && item.getContext && item.getContext('2d');\r\n\r\n                    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\r\n                    // inside an iframe or when running in a protected environment. We could guess the\r\n                    // types from their toString() value but let's keep things flexible and assume it's\r\n                    // a sufficient condition if the item has a context2D which has item as `canvas`.\r\n                    // https://github.com/chartjs/Chart.js/issues/3887\r\n                    // https://github.com/chartjs/Chart.js/issues/4102\r\n                    // https://github.com/chartjs/Chart.js/issues/4152\r\n                    if (context && context.canvas === item) {\r\n                        initCanvas(item, config);\r\n                        return context;\r\n                    }\r\n\r\n                    return null;\r\n                },\r\n\r\n                releaseContext: function(context) {\r\n                    var canvas = context.canvas;\r\n                    if (!canvas[EXPANDO_KEY]) {\r\n                        return;\r\n                    }\r\n\r\n                    var initial = canvas[EXPANDO_KEY].initial;\r\n                    ['height', 'width'].forEach(function(prop) {\r\n                        var value = initial[prop];\r\n                        if (helpers.isNullOrUndef(value)) {\r\n                            canvas.removeAttribute(prop);\r\n                        } else {\r\n                            canvas.setAttribute(prop, value);\r\n                        }\r\n                    });\r\n\r\n                    helpers.each(initial.style || {}, function(value, key) {\r\n                        canvas.style[key] = value;\r\n                    });\r\n\r\n                    // The canvas render size might have been changed (and thus the state stack discarded),\r\n                    // we can't use save() and restore() to restore the initial state. So make sure that at\r\n                    // least the canvas context is reset to the default state by setting the canvas width.\r\n                    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\r\n                    canvas.width = canvas.width;\r\n\r\n                    delete canvas[EXPANDO_KEY];\r\n                },\r\n\r\n                addEventListener: function(chart, type, listener) {\r\n                    var canvas = chart.canvas;\r\n                    if (type === 'resize') {\r\n                        // Note: the resize event is not supported on all browsers.\r\n                        addResizeListener(canvas, listener, chart);\r\n                        return;\r\n                    }\r\n\r\n                    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\r\n                    var proxies = expando.proxies || (expando.proxies = {});\r\n                    var proxy = proxies[chart.id + '_' + type] = function(event) {\r\n                        listener(fromNativeEvent(event, chart));\r\n                    };\r\n\r\n                    addEventListener(canvas, type, proxy);\r\n                },\r\n\r\n                removeEventListener: function(chart, type, listener) {\r\n                    var canvas = chart.canvas;\r\n                    if (type === 'resize') {\r\n                        // Note: the resize event is not supported on all browsers.\r\n                        removeResizeListener(canvas, listener);\r\n                        return;\r\n                    }\r\n\r\n                    var expando = listener[EXPANDO_KEY] || {};\r\n                    var proxies = expando.proxies || {};\r\n                    var proxy = proxies[chart.id + '_' + type];\r\n                    if (!proxy) {\r\n                        return;\r\n                    }\r\n\r\n                    removeEventListener(canvas, type, proxy);\r\n                }\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use EventTarget.addEventListener instead.\r\n             * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\r\n             * @function Chart.helpers.addEvent\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.addEvent = addEventListener;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use EventTarget.removeEventListener instead.\r\n             * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\r\n             * @function Chart.helpers.removeEvent\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.removeEvent = removeEventListener;\r\n        }, { \"36\": 36 }], 39: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n            var basic = require(37);\r\n            var dom = require(38);\r\n\r\n            // @TODO Make possible to select another platform at build time.\r\n            var implementation = dom._enabled ? dom : basic;\r\n\r\n            /**\r\n             * @namespace Chart.platform\r\n             * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\r\n             * @since 2.4.0\r\n             */\r\n            module.exports = helpers.extend({\r\n                /**\r\n                 * @since 2.7.0\r\n                 */\r\n                initialize: function() { },\r\n\r\n                /**\r\n                 * Called at chart construction time, returns a context2d instance implementing\r\n                 * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\r\n                 * @param {*} item - The native item from which to acquire context (platform specific)\r\n                 * @param {Object} options - The chart options\r\n                 * @returns {CanvasRenderingContext2D} context2d instance\r\n                 */\r\n                acquireContext: function() { },\r\n\r\n                /**\r\n                 * Called at chart destruction time, releases any resources associated to the context\r\n                 * previously returned by the acquireContext() method.\r\n                 * @param {CanvasRenderingContext2D} context - The context2d instance\r\n                 * @returns {Boolean} true if the method succeeded, else false\r\n                 */\r\n                releaseContext: function() { },\r\n\r\n                /**\r\n                 * Registers the specified listener on the given chart.\r\n                 * @param {Chart} chart - Chart from which to listen for event\r\n                 * @param {String} type - The ({@link IEvent}) type to listen for\r\n                 * @param {Function} listener - Receives a notification (an object that implements\r\n                 * the {@link IEvent} interface) when an event of the specified type occurs.\r\n                 */\r\n                addEventListener: function() { },\r\n\r\n                /**\r\n                 * Removes the specified listener previously registered with addEventListener.\r\n                 * @param {Chart} chart -Chart from which to remove the listener\r\n                 * @param {String} type - The ({@link IEvent}) type to remove\r\n                 * @param {Function} listener - The listener function to remove from the event target.\r\n                 */\r\n                removeEventListener: function() { }\r\n            }, implementation);\r\n\r\n            /**\r\n             * @interface IPlatform\r\n             * Allows abstracting platform dependencies away from the chart\r\n             * @borrows Chart.platform.acquireContext as acquireContext\r\n             * @borrows Chart.platform.releaseContext as releaseContext\r\n             * @borrows Chart.platform.addEventListener as addEventListener\r\n             * @borrows Chart.platform.removeEventListener as removeEventListener\r\n             */\r\n\r\n            /**\r\n             * @interface IEvent\r\n             * @prop {String} type - The event type name, possible values are:\r\n             * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\r\n             * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\r\n             * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\r\n             * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\r\n             * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\r\n             */\r\n        }, { \"36\": 36, \"37\": 37, \"38\": 38 }], 40: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = {};\r\n            module.exports.filler = require(41);\r\n            module.exports.legend = require(42);\r\n            module.exports.title = require(43);\r\n        }, { \"41\": 41, \"42\": 42, \"43\": 43 }], 41: [function(require, module, exports) {\r\n            /**\r\n             * Plugin based on discussion from the following Chart.js issues:\r\n             * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\r\n             * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\r\n             */\r\n\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                plugins: {\r\n                    filler: {\r\n                        propagate: true\r\n                    }\r\n                }\r\n            });\r\n\r\n            var mappers = {\r\n                dataset: function(source) {\r\n                    var index = source.fill;\r\n                    var chart = source.chart;\r\n                    var meta = chart.getDatasetMeta(index);\r\n                    var visible = meta && chart.isDatasetVisible(index);\r\n                    var points = (visible && meta.dataset._children) || [];\r\n                    var length = points.length || 0;\r\n\r\n                    return !length ? null : function(point, i) {\r\n                        return (i < length && points[i]._view) || null;\r\n                    };\r\n                },\r\n\r\n                boundary: function(source) {\r\n                    var boundary = source.boundary;\r\n                    var x = boundary ? boundary.x : null;\r\n                    var y = boundary ? boundary.y : null;\r\n\r\n                    return function(point) {\r\n                        return {\r\n                            x: x === null ? point.x : x,\r\n                            y: y === null ? point.y : y,\r\n                        };\r\n                    };\r\n                }\r\n            };\r\n\r\n            // @todo if (fill[0] === '#')\r\n            function decodeFill(el, index, count) {\r\n                var model = el._model || {};\r\n                var fill = model.fill;\r\n                var target;\r\n\r\n                if (fill === undefined) {\r\n                    fill = !!model.backgroundColor;\r\n                }\r\n\r\n                if (fill === false || fill === null) {\r\n                    return false;\r\n                }\r\n\r\n                if (fill === true) {\r\n                    return 'origin';\r\n                }\r\n\r\n                target = parseFloat(fill, 10);\r\n                if (isFinite(target) && Math.floor(target) === target) {\r\n                    if (fill[0] === '-' || fill[0] === '+') {\r\n                        target = index + target;\r\n                    }\r\n\r\n                    if (target === index || target < 0 || target >= count) {\r\n                        return false;\r\n                    }\r\n\r\n                    return target;\r\n                }\r\n\r\n                switch (fill) {\r\n                    // compatibility\r\n                    case 'bottom':\r\n                        return 'start';\r\n                    case 'top':\r\n                        return 'end';\r\n                    case 'zero':\r\n                        return 'origin';\r\n                    // supported boundaries\r\n                    case 'origin':\r\n                    case 'start':\r\n                    case 'end':\r\n                        return fill;\r\n                    // invalid fill values\r\n                    default:\r\n                        return false;\r\n                }\r\n            }\r\n\r\n            function computeBoundary(source) {\r\n                var model = source.el._model || {};\r\n                var scale = source.el._scale || {};\r\n                var fill = source.fill;\r\n                var target = null;\r\n                var horizontal;\r\n\r\n                if (isFinite(fill)) {\r\n                    return null;\r\n                }\r\n\r\n                // Backward compatibility: until v3, we still need to support boundary values set on\r\n                // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\r\n                // controllers might still use it (e.g. the Smith chart).\r\n\r\n                if (fill === 'start') {\r\n                    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\r\n                } else if (fill === 'end') {\r\n                    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\r\n                } else if (model.scaleZero !== undefined) {\r\n                    target = model.scaleZero;\r\n                } else if (scale.getBasePosition) {\r\n                    target = scale.getBasePosition();\r\n                } else if (scale.getBasePixel) {\r\n                    target = scale.getBasePixel();\r\n                }\r\n\r\n                if (target !== undefined && target !== null) {\r\n                    if (target.x !== undefined && target.y !== undefined) {\r\n                        return target;\r\n                    }\r\n\r\n                    if (typeof target === 'number' && isFinite(target)) {\r\n                        horizontal = scale.isHorizontal();\r\n                        return {\r\n                            x: horizontal ? target : null,\r\n                            y: horizontal ? null : target\r\n                        };\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n\r\n            function resolveTarget(sources, index, propagate) {\r\n                var source = sources[index];\r\n                var fill = source.fill;\r\n                var visited = [index];\r\n                var target;\r\n\r\n                if (!propagate) {\r\n                    return fill;\r\n                }\r\n\r\n                while (fill !== false && visited.indexOf(fill) === -1) {\r\n                    if (!isFinite(fill)) {\r\n                        return fill;\r\n                    }\r\n\r\n                    target = sources[fill];\r\n                    if (!target) {\r\n                        return false;\r\n                    }\r\n\r\n                    if (target.visible) {\r\n                        return fill;\r\n                    }\r\n\r\n                    visited.push(fill);\r\n                    fill = target.fill;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            function createMapper(source) {\r\n                var fill = source.fill;\r\n                var type = 'dataset';\r\n\r\n                if (fill === false) {\r\n                    return null;\r\n                }\r\n\r\n                if (!isFinite(fill)) {\r\n                    type = 'boundary';\r\n                }\r\n\r\n                return mappers[type](source);\r\n            }\r\n\r\n            function isDrawable(point) {\r\n                return point && !point.skip;\r\n            }\r\n\r\n            function drawArea(ctx, curve0, curve1, len0, len1) {\r\n                var i;\r\n\r\n                if (!len0 || !len1) {\r\n                    return;\r\n                }\r\n\r\n                // building first area curve (normal)\r\n                ctx.moveTo(curve0[0].x, curve0[0].y);\r\n                for (i = 1; i < len0; ++i) {\r\n                    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\r\n                }\r\n\r\n                // joining the two area curves\r\n                ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\r\n\r\n                // building opposite area curve (reverse)\r\n                for (i = len1 - 1; i > 0; --i) {\r\n                    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\r\n                }\r\n            }\r\n\r\n            function doFill(ctx, points, mapper, view, color, loop) {\r\n                var count = points.length;\r\n                var span = view.spanGaps;\r\n                var curve0 = [];\r\n                var curve1 = [];\r\n                var len0 = 0;\r\n                var len1 = 0;\r\n                var i, ilen, index, p0, p1, d0, d1;\r\n\r\n                ctx.beginPath();\r\n\r\n                for (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\r\n                    index = i % count;\r\n                    p0 = points[index]._view;\r\n                    p1 = mapper(p0, index, view);\r\n                    d0 = isDrawable(p0);\r\n                    d1 = isDrawable(p1);\r\n\r\n                    if (d0 && d1) {\r\n                        len0 = curve0.push(p0);\r\n                        len1 = curve1.push(p1);\r\n                    } else if (len0 && len1) {\r\n                        if (!span) {\r\n                            drawArea(ctx, curve0, curve1, len0, len1);\r\n                            len0 = len1 = 0;\r\n                            curve0 = [];\r\n                            curve1 = [];\r\n                        } else {\r\n                            if (d0) {\r\n                                curve0.push(p0);\r\n                            }\r\n                            if (d1) {\r\n                                curve1.push(p1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                drawArea(ctx, curve0, curve1, len0, len1);\r\n\r\n                ctx.closePath();\r\n                ctx.fillStyle = color;\r\n                ctx.fill();\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'filler',\r\n\r\n                afterDatasetsUpdate: function(chart, options) {\r\n                    var count = (chart.data.datasets || []).length;\r\n                    var propagate = options.propagate;\r\n                    var sources = [];\r\n                    var meta, i, el, source;\r\n\r\n                    for (i = 0; i < count; ++i) {\r\n                        meta = chart.getDatasetMeta(i);\r\n                        el = meta.dataset;\r\n                        source = null;\r\n\r\n                        if (el && el._model && el instanceof elements.Line) {\r\n                            source = {\r\n                                visible: chart.isDatasetVisible(i),\r\n                                fill: decodeFill(el, i, count),\r\n                                chart: chart,\r\n                                el: el\r\n                            };\r\n                        }\r\n\r\n                        meta.$filler = source;\r\n                        sources.push(source);\r\n                    }\r\n\r\n                    for (i = 0; i < count; ++i) {\r\n                        source = sources[i];\r\n                        if (!source) {\r\n                            continue;\r\n                        }\r\n\r\n                        source.fill = resolveTarget(sources, i, propagate);\r\n                        source.boundary = computeBoundary(source);\r\n                        source.mapper = createMapper(source);\r\n                    }\r\n                },\r\n\r\n                beforeDatasetDraw: function(chart, args) {\r\n                    var meta = args.meta.$filler;\r\n                    if (!meta) {\r\n                        return;\r\n                    }\r\n\r\n                    var ctx = chart.ctx;\r\n                    var el = meta.el;\r\n                    var view = el._view;\r\n                    var points = el._children || [];\r\n                    var mapper = meta.mapper;\r\n                    var color = view.backgroundColor || defaults.global.defaultColor;\r\n\r\n                    if (mapper && color && points.length) {\r\n                        helpers.canvas.clipArea(ctx, chart.chartArea);\r\n                        doFill(ctx, points, mapper, view, color, el._loop);\r\n                        helpers.canvas.unclipArea(ctx);\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 42: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            var noop = helpers.noop;\r\n\r\n            defaults._set('global', {\r\n                legend: {\r\n                    display: true,\r\n                    position: 'top',\r\n                    fullWidth: true,\r\n                    reverse: false,\r\n                    weight: 1000,\r\n\r\n                    // a callback that will handle\r\n                    onClick: function(e, legendItem) {\r\n                        var index = legendItem.datasetIndex;\r\n                        var ci = this.chart;\r\n                        var meta = ci.getDatasetMeta(index);\r\n\r\n                        // See controller.isDatasetVisible comment\r\n                        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\r\n\r\n                        // We hid a dataset ... rerender the chart\r\n                        ci.update();\r\n                    },\r\n\r\n                    onHover: null,\r\n\r\n                    labels: {\r\n                        boxWidth: 40,\r\n                        padding: 10,\r\n                        // Generates labels shown in the legend\r\n                        // Valid properties to return:\r\n                        // text : text to display\r\n                        // fillStyle : fill of coloured box\r\n                        // strokeStyle: stroke of coloured box\r\n                        // hidden : if this legend item refers to a hidden item\r\n                        // lineCap : cap style for line\r\n                        // lineDash\r\n                        // lineDashOffset :\r\n                        // lineJoin :\r\n                        // lineWidth :\r\n                        generateLabels: function(chart) {\r\n                            var data = chart.data;\r\n                            return helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\r\n                                return {\r\n                                    text: dataset.label,\r\n                                    fillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\r\n                                    hidden: !chart.isDatasetVisible(i),\r\n                                    lineCap: dataset.borderCapStyle,\r\n                                    lineDash: dataset.borderDash,\r\n                                    lineDashOffset: dataset.borderDashOffset,\r\n                                    lineJoin: dataset.borderJoinStyle,\r\n                                    lineWidth: dataset.borderWidth,\r\n                                    strokeStyle: dataset.borderColor,\r\n                                    pointStyle: dataset.pointStyle,\r\n\r\n                                    // Below is extra data used for toggling the datasets\r\n                                    datasetIndex: i\r\n                                };\r\n                            }, this) : [];\r\n                        }\r\n                    }\r\n                },\r\n\r\n                legendCallback: function(chart) {\r\n                    var text = [];\r\n                    text.push('<ul class=\"' + chart.id + '-legend\">');\r\n                    for (var i = 0; i < chart.data.datasets.length; i++) {\r\n                        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\r\n                        if (chart.data.datasets[i].label) {\r\n                            text.push(chart.data.datasets[i].label);\r\n                        }\r\n                        text.push('</li>');\r\n                    }\r\n                    text.push('</ul>');\r\n                    return text.join('');\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Helper function to get the box width based on the usePointStyle option\r\n             * @param labelopts {Object} the label options on the legend\r\n             * @param fontSize {Number} the label font size\r\n             * @return {Number} width of the color box area\r\n             */\r\n            function getBoxWidth(labelOpts, fontSize) {\r\n                return labelOpts.usePointStyle ?\r\n                    fontSize * Math.SQRT2 :\r\n                    labelOpts.boxWidth;\r\n            }\r\n\r\n            /**\r\n             * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\r\n             */\r\n            var Legend = Element.extend({\r\n                initialize: function(config) {\r\n                    helpers.extend(this, config);\r\n\r\n                    // Contains hit boxes for each dataset (in dataset order)\r\n                    this.legendHitBoxes = [];\r\n\r\n                    // Are we in doughnut mode which has a different data type\r\n                    this.doughnutMode = false;\r\n                },\r\n\r\n                // These methods are ordered by lifecycle. Utilities then follow.\r\n                // Any function defined here is inherited by all legend types.\r\n                // Any function can be extended by the legend type\r\n\r\n                beforeUpdate: noop,\r\n                update: function(maxWidth, maxHeight, margins) {\r\n                    var me = this;\r\n\r\n                    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                    me.beforeUpdate();\r\n\r\n                    // Absorb the master measurements\r\n                    me.maxWidth = maxWidth;\r\n                    me.maxHeight = maxHeight;\r\n                    me.margins = margins;\r\n\r\n                    // Dimensions\r\n                    me.beforeSetDimensions();\r\n                    me.setDimensions();\r\n                    me.afterSetDimensions();\r\n                    // Labels\r\n                    me.beforeBuildLabels();\r\n                    me.buildLabels();\r\n                    me.afterBuildLabels();\r\n\r\n                    // Fit\r\n                    me.beforeFit();\r\n                    me.fit();\r\n                    me.afterFit();\r\n                    //\r\n                    me.afterUpdate();\r\n\r\n                    return me.minSize;\r\n                },\r\n                afterUpdate: noop,\r\n\r\n                //\r\n\r\n                beforeSetDimensions: noop,\r\n                setDimensions: function() {\r\n                    var me = this;\r\n                    // Set the unconstrained dimension before label rotation\r\n                    if (me.isHorizontal()) {\r\n                        // Reset position before calculating rotation\r\n                        me.width = me.maxWidth;\r\n                        me.left = 0;\r\n                        me.right = me.width;\r\n                    } else {\r\n                        me.height = me.maxHeight;\r\n\r\n                        // Reset position before calculating rotation\r\n                        me.top = 0;\r\n                        me.bottom = me.height;\r\n                    }\r\n\r\n                    // Reset padding\r\n                    me.paddingLeft = 0;\r\n                    me.paddingTop = 0;\r\n                    me.paddingRight = 0;\r\n                    me.paddingBottom = 0;\r\n\r\n                    // Reset minSize\r\n                    me.minSize = {\r\n                        width: 0,\r\n                        height: 0\r\n                    };\r\n                },\r\n                afterSetDimensions: noop,\r\n\r\n                //\r\n\r\n                beforeBuildLabels: noop,\r\n                buildLabels: function() {\r\n                    var me = this;\r\n                    var labelOpts = me.options.labels || {};\r\n                    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\r\n\r\n                    if (labelOpts.filter) {\r\n                        legendItems = legendItems.filter(function(item) {\r\n                            return labelOpts.filter(item, me.chart.data);\r\n                        });\r\n                    }\r\n\r\n                    if (me.options.reverse) {\r\n                        legendItems.reverse();\r\n                    }\r\n\r\n                    me.legendItems = legendItems;\r\n                },\r\n                afterBuildLabels: noop,\r\n\r\n                //\r\n\r\n                beforeFit: noop,\r\n                fit: function() {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var labelOpts = opts.labels;\r\n                    var display = opts.display;\r\n\r\n                    var ctx = me.ctx;\r\n\r\n                    var globalDefault = defaults.global;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\r\n                    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\r\n                    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\r\n                    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n                    // Reset hit boxes\r\n                    var hitboxes = me.legendHitBoxes = [];\r\n\r\n                    var minSize = me.minSize;\r\n                    var isHorizontal = me.isHorizontal();\r\n\r\n                    if (isHorizontal) {\r\n                        minSize.width = me.maxWidth; // fill all the width\r\n                        minSize.height = display ? 10 : 0;\r\n                    } else {\r\n                        minSize.width = display ? 10 : 0;\r\n                        minSize.height = me.maxHeight; // fill all the height\r\n                    }\r\n\r\n                    // Increase sizes here\r\n                    if (display) {\r\n                        ctx.font = labelFont;\r\n\r\n                        if (isHorizontal) {\r\n                            // Labels\r\n\r\n                            // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\r\n                            var lineWidths = me.lineWidths = [0];\r\n                            var totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\r\n\r\n                            ctx.textAlign = 'left';\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            helpers.each(me.legendItems, function(legendItem, i) {\r\n                                var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                                var width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n                                if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\r\n                                    totalHeight += fontSize + (labelOpts.padding);\r\n                                    lineWidths[lineWidths.length] = me.left;\r\n                                }\r\n\r\n                                // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                                hitboxes[i] = {\r\n                                    left: 0,\r\n                                    top: 0,\r\n                                    width: width,\r\n                                    height: fontSize\r\n                                };\r\n\r\n                                lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\r\n                            });\r\n\r\n                            minSize.height += totalHeight;\r\n                        } else {\r\n                            var vPadding = labelOpts.padding;\r\n                            var columnWidths = me.columnWidths = [];\r\n                            var totalWidth = labelOpts.padding;\r\n                            var currentColWidth = 0;\r\n                            var currentColHeight = 0;\r\n                            var itemHeight = fontSize + vPadding;\r\n\r\n                            helpers.each(me.legendItems, function(legendItem, i) {\r\n                                var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                                var itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n                                // If too tall, go to new column\r\n                                if (currentColHeight + itemHeight > minSize.height) {\r\n                                    totalWidth += currentColWidth + labelOpts.padding;\r\n                                    columnWidths.push(currentColWidth); // previous column width\r\n\r\n                                    currentColWidth = 0;\r\n                                    currentColHeight = 0;\r\n                                }\r\n\r\n                                // Get max width\r\n                                currentColWidth = Math.max(currentColWidth, itemWidth);\r\n                                currentColHeight += itemHeight;\r\n\r\n                                // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                                hitboxes[i] = {\r\n                                    left: 0,\r\n                                    top: 0,\r\n                                    width: itemWidth,\r\n                                    height: fontSize\r\n                                };\r\n                            });\r\n\r\n                            totalWidth += currentColWidth;\r\n                            columnWidths.push(currentColWidth);\r\n                            minSize.width += totalWidth;\r\n                        }\r\n                    }\r\n\r\n                    me.width = minSize.width;\r\n                    me.height = minSize.height;\r\n                },\r\n                afterFit: noop,\r\n\r\n                // Shared Methods\r\n                isHorizontal: function() {\r\n                    return this.options.position === 'top' || this.options.position === 'bottom';\r\n                },\r\n\r\n                // Actually draw the legend on the canvas\r\n                draw: function() {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var labelOpts = opts.labels;\r\n                    var globalDefault = defaults.global;\r\n                    var lineDefault = globalDefault.elements.line;\r\n                    var legendWidth = me.width;\r\n                    var lineWidths = me.lineWidths;\r\n\r\n                    if (opts.display) {\r\n                        var ctx = me.ctx;\r\n                        var valueOrDefault = helpers.valueOrDefault;\r\n                        var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\r\n                        var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\r\n                        var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\r\n                        var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\r\n                        var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n                        var cursor;\r\n\r\n                        // Canvas setup\r\n                        ctx.textAlign = 'left';\r\n                        ctx.textBaseline = 'middle';\r\n                        ctx.lineWidth = 0.5;\r\n                        ctx.strokeStyle = fontColor; // for strikethrough effect\r\n                        ctx.fillStyle = fontColor; // render in correct colour\r\n                        ctx.font = labelFont;\r\n\r\n                        var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                        var hitboxes = me.legendHitBoxes;\r\n\r\n                        // current position\r\n                        var drawLegendBox = function(x, y, legendItem) {\r\n                            if (isNaN(boxWidth) || boxWidth <= 0) {\r\n                                return;\r\n                            }\r\n\r\n                            // Set the ctx for the box\r\n                            ctx.save();\r\n\r\n                            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\r\n                            ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\r\n                            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\r\n                            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\r\n                            ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\r\n                            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\r\n                            var isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\r\n\r\n                            if (ctx.setLineDash) {\r\n                                // IE 9 and 10 do not support line dash\r\n                                ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\r\n                            }\r\n\r\n                            if (opts.labels && opts.labels.usePointStyle) {\r\n                                // Recalculate x and y for drawPoint() because its expecting\r\n                                // x and y to be center of figure (instead of top left)\r\n                                var radius = fontSize * Math.SQRT2 / 2;\r\n                                var offSet = radius / Math.SQRT2;\r\n                                var centerX = x + offSet;\r\n                                var centerY = y + offSet;\r\n\r\n                                // Draw pointStyle as legend symbol\r\n                                helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\r\n                            } else {\r\n                                // Draw box as legend symbol\r\n                                if (!isLineWidthZero) {\r\n                                    ctx.strokeRect(x, y, boxWidth, fontSize);\r\n                                }\r\n                                ctx.fillRect(x, y, boxWidth, fontSize);\r\n                            }\r\n\r\n                            ctx.restore();\r\n                        };\r\n                        var fillText = function(x, y, legendItem, textWidth) {\r\n                            var halfFontSize = fontSize / 2;\r\n                            var xLeft = boxWidth + halfFontSize + x;\r\n                            var yMiddle = y + halfFontSize;\r\n\r\n                            ctx.fillText(legendItem.text, xLeft, yMiddle);\r\n\r\n                            if (legendItem.hidden) {\r\n                                // Strikethrough the text if hidden\r\n                                ctx.beginPath();\r\n                                ctx.lineWidth = 2;\r\n                                ctx.moveTo(xLeft, yMiddle);\r\n                                ctx.lineTo(xLeft + textWidth, yMiddle);\r\n                                ctx.stroke();\r\n                            }\r\n                        };\r\n\r\n                        // Horizontal\r\n                        var isHorizontal = me.isHorizontal();\r\n                        if (isHorizontal) {\r\n                            cursor = {\r\n                                x: me.left + ((legendWidth - lineWidths[0]) / 2),\r\n                                y: me.top + labelOpts.padding,\r\n                                line: 0\r\n                            };\r\n                        } else {\r\n                            cursor = {\r\n                                x: me.left + labelOpts.padding,\r\n                                y: me.top + labelOpts.padding,\r\n                                line: 0\r\n                            };\r\n                        }\r\n\r\n                        var itemHeight = fontSize + labelOpts.padding;\r\n                        helpers.each(me.legendItems, function(legendItem, i) {\r\n                            var textWidth = ctx.measureText(legendItem.text).width;\r\n                            var width = boxWidth + (fontSize / 2) + textWidth;\r\n                            var x = cursor.x;\r\n                            var y = cursor.y;\r\n\r\n                            if (isHorizontal) {\r\n                                if (x + width >= legendWidth) {\r\n                                    y = cursor.y += itemHeight;\r\n                                    cursor.line++;\r\n                                    x = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\r\n                                }\r\n                            } else if (y + itemHeight > me.bottom) {\r\n                                x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\r\n                                y = cursor.y = me.top + labelOpts.padding;\r\n                                cursor.line++;\r\n                            }\r\n\r\n                            drawLegendBox(x, y, legendItem);\r\n\r\n                            hitboxes[i].left = x;\r\n                            hitboxes[i].top = y;\r\n\r\n                            // Fill the actual label\r\n                            fillText(x, y, legendItem, textWidth);\r\n\r\n                            if (isHorizontal) {\r\n                                cursor.x += width + (labelOpts.padding);\r\n                            } else {\r\n                                cursor.y += itemHeight;\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Handle an event\r\n                 * @private\r\n                 * @param {IEvent} event - The event to handle\r\n                 * @return {Boolean} true if a change occured\r\n                 */\r\n                handleEvent: function(e) {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var type = e.type === 'mouseup' ? 'click' : e.type;\r\n                    var changed = false;\r\n\r\n                    if (type === 'mousemove') {\r\n                        if (!opts.onHover) {\r\n                            return;\r\n                        }\r\n                    } else if (type === 'click') {\r\n                        if (!opts.onClick) {\r\n                            return;\r\n                        }\r\n                    } else {\r\n                        return;\r\n                    }\r\n\r\n                    // Chart event already has relative position in it\r\n                    var x = e.x;\r\n                    var y = e.y;\r\n\r\n                    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\r\n                        // See if we are touching one of the dataset boxes\r\n                        var lh = me.legendHitBoxes;\r\n                        for (var i = 0; i < lh.length; ++i) {\r\n                            var hitBox = lh[i];\r\n\r\n                            if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n                                // Touching an element\r\n                                if (type === 'click') {\r\n                                    // use e.native for backwards compatibility\r\n                                    opts.onClick.call(me, e.native, me.legendItems[i]);\r\n                                    changed = true;\r\n                                    break;\r\n                                } else if (type === 'mousemove') {\r\n                                    // use e.native for backwards compatibility\r\n                                    opts.onHover.call(me, e.native, me.legendItems[i]);\r\n                                    changed = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return changed;\r\n                }\r\n            });\r\n\r\n            function createNewLegendAndAttach(chart, legendOpts) {\r\n                var legend = new Legend({\r\n                    ctx: chart.ctx,\r\n                    options: legendOpts,\r\n                    chart: chart\r\n                });\r\n\r\n                layouts.configure(chart, legend, legendOpts);\r\n                layouts.addBox(chart, legend);\r\n                chart.legend = legend;\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'legend',\r\n\r\n                /**\r\n                 * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\r\n                 * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\r\n                 * the plugin, which one will be re-exposed in the chart.js file.\r\n                 * https://github.com/chartjs/Chart.js/pull/2640\r\n                 * @private\r\n                 */\r\n                _element: Legend,\r\n\r\n                beforeInit: function(chart) {\r\n                    var legendOpts = chart.options.legend;\r\n\r\n                    if (legendOpts) {\r\n                        createNewLegendAndAttach(chart, legendOpts);\r\n                    }\r\n                },\r\n\r\n                beforeUpdate: function(chart) {\r\n                    var legendOpts = chart.options.legend;\r\n                    var legend = chart.legend;\r\n\r\n                    if (legendOpts) {\r\n                        helpers.mergeIf(legendOpts, defaults.global.legend);\r\n\r\n                        if (legend) {\r\n                            layouts.configure(chart, legend, legendOpts);\r\n                            legend.options = legendOpts;\r\n                        } else {\r\n                            createNewLegendAndAttach(chart, legendOpts);\r\n                        }\r\n                    } else if (legend) {\r\n                        layouts.removeBox(chart, legend);\r\n                        delete chart.legend;\r\n                    }\r\n                },\r\n\r\n                afterEvent: function(chart, e) {\r\n                    var legend = chart.legend;\r\n                    if (legend) {\r\n                        legend.handleEvent(e);\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"21\": 21, \"36\": 36 }], 43: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            var noop = helpers.noop;\r\n\r\n            defaults._set('global', {\r\n                title: {\r\n                    display: false,\r\n                    fontStyle: 'bold',\r\n                    fullWidth: true,\r\n                    lineHeight: 1.2,\r\n                    padding: 10,\r\n                    position: 'top',\r\n                    text: '',\r\n                    weight: 2000         // by default greater than legend (1000) to be above\r\n                }\r\n            });\r\n\r\n            /**\r\n             * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\r\n             */\r\n            var Title = Element.extend({\r\n                initialize: function(config) {\r\n                    var me = this;\r\n                    helpers.extend(me, config);\r\n\r\n                    // Contains hit boxes for each dataset (in dataset order)\r\n                    me.legendHitBoxes = [];\r\n                },\r\n\r\n                // These methods are ordered by lifecycle. Utilities then follow.\r\n\r\n                beforeUpdate: noop,\r\n                update: function(maxWidth, maxHeight, margins) {\r\n                    var me = this;\r\n\r\n                    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                    me.beforeUpdate();\r\n\r\n                    // Absorb the master measurements\r\n                    me.maxWidth = maxWidth;\r\n                    me.maxHeight = maxHeight;\r\n                    me.margins = margins;\r\n\r\n                    // Dimensions\r\n                    me.beforeSetDimensions();\r\n                    me.setDimensions();\r\n                    me.afterSetDimensions();\r\n                    // Labels\r\n                    me.beforeBuildLabels();\r\n                    me.buildLabels();\r\n                    me.afterBuildLabels();\r\n\r\n                    // Fit\r\n                    me.beforeFit();\r\n                    me.fit();\r\n                    me.afterFit();\r\n                    //\r\n                    me.afterUpdate();\r\n\r\n                    return me.minSize;\r\n                },\r\n                afterUpdate: noop,\r\n\r\n                //\r\n\r\n                beforeSetDimensions: noop,\r\n                setDimensions: function() {\r\n                    var me = this;\r\n                    // Set the unconstrained dimension before label rotation\r\n                    if (me.isHorizontal()) {\r\n                        // Reset position before calculating rotation\r\n                        me.width = me.maxWidth;\r\n                        me.left = 0;\r\n                        me.right = me.width;\r\n                    } else {\r\n                        me.height = me.maxHeight;\r\n\r\n                        // Reset position before calculating rotation\r\n                        me.top = 0;\r\n                        me.bottom = me.height;\r\n                    }\r\n\r\n                    // Reset padding\r\n                    me.paddingLeft = 0;\r\n                    me.paddingTop = 0;\r\n                    me.paddingRight = 0;\r\n                    me.paddingBottom = 0;\r\n\r\n                    // Reset minSize\r\n                    me.minSize = {\r\n                        width: 0,\r\n                        height: 0\r\n                    };\r\n                },\r\n                afterSetDimensions: noop,\r\n\r\n                //\r\n\r\n                beforeBuildLabels: noop,\r\n                buildLabels: noop,\r\n                afterBuildLabels: noop,\r\n\r\n                //\r\n\r\n                beforeFit: noop,\r\n                fit: function() {\r\n                    var me = this;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var opts = me.options;\r\n                    var display = opts.display;\r\n                    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\r\n                    var minSize = me.minSize;\r\n                    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\r\n                    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\r\n                    var textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\r\n\r\n                    if (me.isHorizontal()) {\r\n                        minSize.width = me.maxWidth; // fill all the width\r\n                        minSize.height = textSize;\r\n                    } else {\r\n                        minSize.width = textSize;\r\n                        minSize.height = me.maxHeight; // fill all the height\r\n                    }\r\n\r\n                    me.width = minSize.width;\r\n                    me.height = minSize.height;\r\n                },\r\n                afterFit: noop,\r\n\r\n                // Shared Methods\r\n                isHorizontal: function() {\r\n                    var pos = this.options.position;\r\n                    return pos === 'top' || pos === 'bottom';\r\n                },\r\n\r\n                // Actually draw the title block on the canvas\r\n                draw: function() {\r\n                    var me = this;\r\n                    var ctx = me.ctx;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var opts = me.options;\r\n                    var globalDefaults = defaults.global;\r\n\r\n                    if (opts.display) {\r\n                        var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\r\n                        var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\r\n                        var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\r\n                        var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n                        var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\r\n                        var offset = lineHeight / 2 + opts.padding;\r\n                        var rotation = 0;\r\n                        var top = me.top;\r\n                        var left = me.left;\r\n                        var bottom = me.bottom;\r\n                        var right = me.right;\r\n                        var maxWidth, titleX, titleY;\r\n\r\n                        ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\r\n                        ctx.font = titleFont;\r\n\r\n                        // Horizontal\r\n                        if (me.isHorizontal()) {\r\n                            titleX = left + ((right - left) / 2); // midpoint of the width\r\n                            titleY = top + offset;\r\n                            maxWidth = right - left;\r\n                        } else {\r\n                            titleX = opts.position === 'left' ? left + offset : right - offset;\r\n                            titleY = top + ((bottom - top) / 2);\r\n                            maxWidth = bottom - top;\r\n                            rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\r\n                        }\r\n\r\n                        ctx.save();\r\n                        ctx.translate(titleX, titleY);\r\n                        ctx.rotate(rotation);\r\n                        ctx.textAlign = 'center';\r\n                        ctx.textBaseline = 'middle';\r\n\r\n                        var text = opts.text;\r\n                        if (helpers.isArray(text)) {\r\n                            var y = 0;\r\n                            for (var i = 0; i < text.length; ++i) {\r\n                                ctx.fillText(text[i], 0, y, maxWidth);\r\n                                y += lineHeight;\r\n                            }\r\n                        } else {\r\n                            ctx.fillText(text, 0, 0, maxWidth);\r\n                        }\r\n\r\n                        ctx.restore();\r\n                    }\r\n                }\r\n            });\r\n\r\n            function createNewTitleBlockAndAttach(chart, titleOpts) {\r\n                var title = new Title({\r\n                    ctx: chart.ctx,\r\n                    options: titleOpts,\r\n                    chart: chart\r\n                });\r\n\r\n                layouts.configure(chart, title, titleOpts);\r\n                layouts.addBox(chart, title);\r\n                chart.titleBlock = title;\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'title',\r\n\r\n                /**\r\n                 * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\r\n                 * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\r\n                 * the plugin, which one will be re-exposed in the chart.js file.\r\n                 * https://github.com/chartjs/Chart.js/pull/2640\r\n                 * @private\r\n                 */\r\n                _element: Title,\r\n\r\n                beforeInit: function(chart) {\r\n                    var titleOpts = chart.options.title;\r\n\r\n                    if (titleOpts) {\r\n                        createNewTitleBlockAndAttach(chart, titleOpts);\r\n                    }\r\n                },\r\n\r\n                beforeUpdate: function(chart) {\r\n                    var titleOpts = chart.options.title;\r\n                    var titleBlock = chart.titleBlock;\r\n\r\n                    if (titleOpts) {\r\n                        helpers.mergeIf(titleOpts, defaults.global.title);\r\n\r\n                        if (titleBlock) {\r\n                            layouts.configure(chart, titleBlock, titleOpts);\r\n                            titleBlock.options = titleOpts;\r\n                        } else {\r\n                            createNewTitleBlockAndAttach(chart, titleOpts);\r\n                        }\r\n                    } else if (titleBlock) {\r\n                        layouts.removeBox(chart, titleBlock);\r\n                        delete chart.titleBlock;\r\n                    }\r\n                }\r\n            };\r\n        }, { \"16\": 16, \"17\": 17, \"21\": 21, \"36\": 36 }], 44: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                // Default config for a category scale\r\n                var defaultConfig = {\r\n                    position: 'bottom'\r\n                };\r\n\r\n                var DatasetScale = Chart.Scale.extend({\r\n                    /**\r\n                    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\r\n                    * else fall back to data.labels\r\n                    * @private\r\n                    */\r\n                    getLabels: function() {\r\n                        var data = this.chart.data;\r\n                        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\r\n                    },\r\n\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var labels = me.getLabels();\r\n                        me.minIndex = 0;\r\n                        me.maxIndex = labels.length - 1;\r\n                        var findIndex;\r\n\r\n                        if (me.options.ticks.min !== undefined) {\r\n                            // user specified min value\r\n                            findIndex = labels.indexOf(me.options.ticks.min);\r\n                            me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\r\n                        }\r\n\r\n                        if (me.options.ticks.max !== undefined) {\r\n                            // user specified max value\r\n                            findIndex = labels.indexOf(me.options.ticks.max);\r\n                            me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\r\n                        }\r\n\r\n                        me.min = labels[me.minIndex];\r\n                        me.max = labels[me.maxIndex];\r\n                    },\r\n\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var labels = me.getLabels();\r\n                        // If we are viewing some subset of labels, slice the original array\r\n                        me.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\r\n                    },\r\n\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        var me = this;\r\n                        var data = me.chart.data;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        if (data.yLabels && !isHorizontal) {\r\n                            return me.getRightValue(data.datasets[datasetIndex].data[index]);\r\n                        }\r\n                        return me.ticks[index - me.minIndex];\r\n                    },\r\n\r\n                    // Used to get data value locations.  Value can either be an index or a numerical value\r\n                    getPixelForValue: function(value, index) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        // 1 is added because we need the length but we have the indexes\r\n                        var offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\r\n\r\n                        // If value is a data object, then index is the index in the data array,\r\n                        // not the index of the scale. We need to change that.\r\n                        var valueCategory;\r\n                        if (value !== undefined && value !== null) {\r\n                            valueCategory = me.isHorizontal() ? value.x : value.y;\r\n                        }\r\n                        if (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\r\n                            var labels = me.getLabels();\r\n                            value = valueCategory || value;\r\n                            var idx = labels.indexOf(value);\r\n                            index = idx !== -1 ? idx : index;\r\n                        }\r\n\r\n                        if (me.isHorizontal()) {\r\n                            var valueWidth = me.width / offsetAmt;\r\n                            var widthOffset = (valueWidth * (index - me.minIndex));\r\n\r\n                            if (offset) {\r\n                                widthOffset += (valueWidth / 2);\r\n                            }\r\n\r\n                            return me.left + Math.round(widthOffset);\r\n                        }\r\n                        var valueHeight = me.height / offsetAmt;\r\n                        var heightOffset = (valueHeight * (index - me.minIndex));\r\n\r\n                        if (offset) {\r\n                            heightOffset += (valueHeight / 2);\r\n                        }\r\n\r\n                        return me.top + Math.round(heightOffset);\r\n                    },\r\n                    getPixelForTick: function(index) {\r\n                        return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        var value;\r\n                        var offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\r\n                        var horz = me.isHorizontal();\r\n                        var valueDimension = (horz ? me.width : me.height) / offsetAmt;\r\n\r\n                        pixel -= horz ? me.left : me.top;\r\n\r\n                        if (offset) {\r\n                            pixel -= (valueDimension / 2);\r\n                        }\r\n\r\n                        if (pixel <= 0) {\r\n                            value = 0;\r\n                        } else {\r\n                            value = Math.round(pixel / valueDimension);\r\n                        }\r\n\r\n                        return value + me.minIndex;\r\n                    },\r\n                    getBasePixel: function() {\r\n                        return this.bottom;\r\n                    }\r\n                });\r\n\r\n                Chart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\r\n            };\r\n        }, {}], 45: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var Ticks = require(25);\r\n\r\n            module.exports = function(Chart) {\r\n                var defaultConfig = {\r\n                    position: 'left',\r\n                    ticks: {\r\n                        callback: Ticks.formatters.linear\r\n                    }\r\n                };\r\n\r\n                var LinearScale = Chart.LinearScaleBase.extend({\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var chart = me.chart;\r\n                        var data = chart.data;\r\n                        var datasets = data.datasets;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var DEFAULT_MIN = 0;\r\n                        var DEFAULT_MAX = 1;\r\n\r\n                        function IDMatches(meta) {\r\n                            return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\r\n                        }\r\n\r\n                        // First Calculate the range\r\n                        me.min = null;\r\n                        me.max = null;\r\n\r\n                        var hasStacks = opts.stacked;\r\n                        if (hasStacks === undefined) {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                if (hasStacks) {\r\n                                    return;\r\n                                }\r\n\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\r\n                                    meta.stack !== undefined) {\r\n                                    hasStacks = true;\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        if (opts.stacked || hasStacks) {\r\n                            var valuesPerStack = {};\r\n\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                var key = [\r\n                                    meta.type,\r\n                                    // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\r\n                                    ((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\r\n                                    meta.stack\r\n                                ].join('.');\r\n\r\n                                if (valuesPerStack[key] === undefined) {\r\n                                    valuesPerStack[key] = {\r\n                                        positiveValues: [],\r\n                                        negativeValues: []\r\n                                    };\r\n                                }\r\n\r\n                                // Store these per type\r\n                                var positiveValues = valuesPerStack[key].positiveValues;\r\n                                var negativeValues = valuesPerStack[key].negativeValues;\r\n\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        positiveValues[index] = positiveValues[index] || 0;\r\n                                        negativeValues[index] = negativeValues[index] || 0;\r\n\r\n                                        if (opts.relativePoints) {\r\n                                            positiveValues[index] = 100;\r\n                                        } else if (value < 0) {\r\n                                            negativeValues[index] += value;\r\n                                        } else {\r\n                                            positiveValues[index] += value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n\r\n                            helpers.each(valuesPerStack, function(valuesForType) {\r\n                                var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\r\n                                var minVal = helpers.min(values);\r\n                                var maxVal = helpers.max(values);\r\n                                me.min = me.min === null ? minVal : Math.min(me.min, minVal);\r\n                                me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\r\n                            });\r\n                        } else {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        if (me.min === null) {\r\n                                            me.min = value;\r\n                                        } else if (value < me.min) {\r\n                                            me.min = value;\r\n                                        }\r\n\r\n                                        if (me.max === null) {\r\n                                            me.max = value;\r\n                                        } else if (value > me.max) {\r\n                                            me.max = value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\r\n                        me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\r\n\r\n                        // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\r\n                        this.handleTickRangeOptions();\r\n                    },\r\n                    getTickLimit: function() {\r\n                        var maxTicks;\r\n                        var me = this;\r\n                        var tickOpts = me.options.ticks;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\r\n                        } else {\r\n                            // The factor of 2 used to scale the font size has been experimentally determined.\r\n                            var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\r\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\r\n                        }\r\n\r\n                        return maxTicks;\r\n                    },\r\n                    // Called after the ticks are built. We need\r\n                    handleDirectionalChanges: function() {\r\n                        if (!this.isHorizontal()) {\r\n                            // We are in a vertical orientation. The top value is the highest. So reverse the array\r\n                            this.ticks.reverse();\r\n                        }\r\n                    },\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n                    },\r\n                    // Utils\r\n                    getPixelForValue: function(value) {\r\n                        // This must be called after fit has been run so that\r\n                        // this.left, this.top, this.right, and this.bottom have been defined\r\n                        var me = this;\r\n                        var start = me.start;\r\n\r\n                        var rightValue = +me.getRightValue(value);\r\n                        var pixel;\r\n                        var range = me.end - start;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            pixel = me.left + (me.width / range * (rightValue - start));\r\n                        } else {\r\n                            pixel = me.bottom - (me.height / range * (rightValue - start));\r\n                        }\r\n                        return pixel;\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var innerDimension = isHorizontal ? me.width : me.height;\r\n                        var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\r\n                        return me.start + ((me.end - me.start) * offset);\r\n                    },\r\n                    getPixelForTick: function(index) {\r\n                        return this.getPixelForValue(this.ticksAsNumbers[index]);\r\n                    }\r\n                });\r\n                Chart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\r\n            };\r\n        }, { \"16\": 16, \"25\": 25, \"36\": 36 }], 46: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Generate a set of linear ticks\r\n             * @param generationOptions the options used to generate the ticks\r\n             * @param dataRange the range of the data\r\n             * @returns {Array<Number>} array of tick values\r\n             */\r\n            function generateTicks(generationOptions, dataRange) {\r\n                var ticks = [];\r\n                // To get a \"nice\" value for the tick spacing, we will use the appropriately named\r\n                // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\r\n                // for details.\r\n\r\n                var spacing;\r\n                if (generationOptions.stepSize && generationOptions.stepSize > 0) {\r\n                    spacing = generationOptions.stepSize;\r\n                } else {\r\n                    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\r\n                    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\r\n                }\r\n                var niceMin = Math.floor(dataRange.min / spacing) * spacing;\r\n                var niceMax = Math.ceil(dataRange.max / spacing) * spacing;\r\n\r\n                // If min, max and stepSize is set and they make an evenly spaced scale use it.\r\n                if (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\r\n                    // If very close to our whole number, use it.\r\n                    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\r\n                        niceMin = generationOptions.min;\r\n                        niceMax = generationOptions.max;\r\n                    }\r\n                }\r\n\r\n                var numSpaces = (niceMax - niceMin) / spacing;\r\n                // If very close to our rounded value, use it.\r\n                if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n                    numSpaces = Math.round(numSpaces);\r\n                } else {\r\n                    numSpaces = Math.ceil(numSpaces);\r\n                }\r\n\r\n                var precision = 1;\r\n                if (spacing < 1) {\r\n                    precision = Math.pow(10, spacing.toString().length - 2);\r\n                    niceMin = Math.round(niceMin * precision) / precision;\r\n                    niceMax = Math.round(niceMax * precision) / precision;\r\n                }\r\n                ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\r\n                for (var j = 1; j < numSpaces; ++j) {\r\n                    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\r\n                }\r\n                ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\r\n\r\n                return ticks;\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n                var noop = helpers.noop;\r\n\r\n                Chart.LinearScaleBase = Chart.Scale.extend({\r\n                    getRightValue: function(value) {\r\n                        if (typeof value === 'string') {\r\n                            return +value;\r\n                        }\r\n                        return Chart.Scale.prototype.getRightValue.call(this, value);\r\n                    },\r\n\r\n                    handleTickRangeOptions: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\r\n                        // do nothing since that would make the chart weird. If the user really wants a weird chart\r\n                        // axis, they can manually override it\r\n                        if (tickOpts.beginAtZero) {\r\n                            var minSign = helpers.sign(me.min);\r\n                            var maxSign = helpers.sign(me.max);\r\n\r\n                            if (minSign < 0 && maxSign < 0) {\r\n                                // move the top up to 0\r\n                                me.max = 0;\r\n                            } else if (minSign > 0 && maxSign > 0) {\r\n                                // move the bottom down to 0\r\n                                me.min = 0;\r\n                            }\r\n                        }\r\n\r\n                        var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\r\n                        var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\r\n\r\n                        if (tickOpts.min !== undefined) {\r\n                            me.min = tickOpts.min;\r\n                        } else if (tickOpts.suggestedMin !== undefined) {\r\n                            if (me.min === null) {\r\n                                me.min = tickOpts.suggestedMin;\r\n                            } else {\r\n                                me.min = Math.min(me.min, tickOpts.suggestedMin);\r\n                            }\r\n                        }\r\n\r\n                        if (tickOpts.max !== undefined) {\r\n                            me.max = tickOpts.max;\r\n                        } else if (tickOpts.suggestedMax !== undefined) {\r\n                            if (me.max === null) {\r\n                                me.max = tickOpts.suggestedMax;\r\n                            } else {\r\n                                me.max = Math.max(me.max, tickOpts.suggestedMax);\r\n                            }\r\n                        }\r\n\r\n                        if (setMin !== setMax) {\r\n                            // We set the min or the max but not both.\r\n                            // So ensure that our range is good\r\n                            // Inverted or 0 length range can happen when\r\n                            // ticks.min is set, and no datasets are visible\r\n                            if (me.min >= me.max) {\r\n                                if (setMin) {\r\n                                    me.max = me.min + 1;\r\n                                } else {\r\n                                    me.min = me.max - 1;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (me.min === me.max) {\r\n                            me.max++;\r\n\r\n                            if (!tickOpts.beginAtZero) {\r\n                                me.min--;\r\n                            }\r\n                        }\r\n                    },\r\n                    getTickLimit: noop,\r\n                    handleDirectionalChanges: noop,\r\n\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        // Figure out what the max number of ticks we can support it is based on the size of\r\n                        // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n                        // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n                        // the graph. Make sure we always have at least 2 ticks\r\n                        var maxTicks = me.getTickLimit();\r\n                        maxTicks = Math.max(2, maxTicks);\r\n\r\n                        var numericGeneratorOptions = {\r\n                            maxTicks: maxTicks,\r\n                            min: tickOpts.min,\r\n                            max: tickOpts.max,\r\n                            stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\r\n                        };\r\n                        var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\r\n\r\n                        me.handleDirectionalChanges();\r\n\r\n                        // At this point, we need to update our max and min given the tick values since we have expanded the\r\n                        // range of the scale\r\n                        me.max = helpers.max(ticks);\r\n                        me.min = helpers.min(ticks);\r\n\r\n                        if (tickOpts.reverse) {\r\n                            ticks.reverse();\r\n\r\n                            me.start = me.max;\r\n                            me.end = me.min;\r\n                        } else {\r\n                            me.start = me.min;\r\n                            me.end = me.max;\r\n                        }\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        me.ticksAsNumbers = me.ticks.slice();\r\n                        me.zeroLineIndex = me.ticks.indexOf(0);\r\n\r\n                        Chart.Scale.prototype.convertTicksToLabels.call(me);\r\n                    }\r\n                });\r\n            };\r\n        }, { \"36\": 36 }]\r\n    }, {}, [6])(6)\r\n});\r\n","/*!\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n * MIT license http://www.opensource.org/licenses/mit-license.php/\r\n * @author Lea Verou http://lea.verou.me\r\n */\r\n(function(root) {\r\n    // Private helper vars\r\n    var lang = /\\blang(?:uage)?-(?!\\*)(\\w+)\\b/i;\r\n\r\n    var _ = prism = {\r\n        util: {\r\n            encode: function(tokens) {\r\n                if (tokens instanceof Token) {\r\n                    return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\r\n                } else if (_.util.type(tokens) === 'Array') {\r\n                    return tokens.map(_.util.encode);\r\n                } else {\r\n                    return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\r\n                }\r\n            },\r\n\r\n            type: function(o) {\r\n                return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\r\n            },\r\n\r\n            // Deep clone a language definition (e.g. to extend it)\r\n            clone: function(o) {\r\n                var type = _.util.type(o);\r\n\r\n                switch (type) {\r\n                    case 'Object':\r\n                        var clone = {};\r\n\r\n                        for (var key in o) {\r\n                            if (o.hasOwnProperty(key)) {\r\n                                clone[key] = _.util.clone(o[key]);\r\n                            }\r\n                        }\r\n\r\n                        return clone;\r\n\r\n                    case 'Array':\r\n                        // Check for existence for IE8\r\n                        return o.map && o.map(function(v) { return _.util.clone(v); });\r\n                }\r\n\r\n                return o;\r\n            }\r\n        },\r\n\r\n        languages: {\r\n            extend: function(id, redef) {\r\n                var lang = _.util.clone(_.languages[id]);\r\n\r\n                for (var key in redef) {\r\n                    lang[key] = redef[key];\r\n                }\r\n\r\n                return lang;\r\n            },\r\n\r\n            /**\r\n             * Insert a token before another token in a language literal\r\n             * As this needs to recreate the object (we cannot actually insert before keys in object literals),\r\n             * we cannot just provide an object, we need anobject and a key.\r\n             * @param inside The key (or language id) of the parent\r\n             * @param before The key to insert before. If not provided, the function appends instead.\r\n             * @param insert Object with the key/value pairs to insert\r\n             * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\r\n             */\r\n            insertBefore: function(inside, before, insert, root) {\r\n                root = root || _.languages;\r\n                var grammar = root[inside];\r\n\r\n                if (arguments.length == 2) {\r\n                    insert = arguments[1];\r\n\r\n                    for (var newToken in insert) {\r\n                        if (insert.hasOwnProperty(newToken)) {\r\n                            grammar[newToken] = insert[newToken];\r\n                        }\r\n                    }\r\n\r\n                    return grammar;\r\n                }\r\n\r\n                var ret = {};\r\n\r\n                for (var token in grammar) {\r\n                    if (grammar.hasOwnProperty(token)) {\r\n                        if (token == before) {\r\n                            for (var newToken in insert) {\r\n                                if (insert.hasOwnProperty(newToken)) {\r\n                                    ret[newToken] = insert[newToken];\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        ret[token] = grammar[token];\r\n                    }\r\n                }\r\n\r\n                // Update references in other language definitions\r\n                _.languages.DFS(_.languages, function(key, value) {\r\n                    if (value === root[inside] && key != inside) {\r\n                        this[key] = ret;\r\n                    }\r\n                });\r\n\r\n                return root[inside] = ret;\r\n            },\r\n\r\n            // Traverse a language definition with Depth First Search\r\n            DFS: function(o, callback, type, visited) {\r\n                visited = visited || {};\r\n                for (var i in o) {\r\n                    if (o.hasOwnProperty(i)) {\r\n                        callback.call(o, i, o[i], type || i);\r\n\r\n                        if (_.util.type(o[i]) === 'Object' && !visited[o[i]]) {\r\n                            visited[o[i]] = true;\r\n                            _.languages.DFS(o[i], callback, null, visited);\r\n                        }\r\n                        else if (_.util.type(o[i]) === 'Array' && !visited[o[i]]) {\r\n                            visited[o[i]] = true;\r\n                            _.languages.DFS(o[i], callback, i, visited);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        plugins: {},\r\n\r\n        highlightAll: function(async, callback) {\r\n            var elements = document.querySelectorAll('code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code');\r\n\r\n            for (var i = 0, element; element = elements[i++];) {\r\n                _.highlightElement(element, async === true, callback);\r\n            }\r\n        },\r\n\r\n        highlightElement: function(element, async, callback) {\r\n            // Find language\r\n            var language, grammar, parent = element;\r\n\r\n            while (parent && !lang.test(parent.className)) {\r\n                parent = parent.parentNode;\r\n            }\r\n\r\n            if (parent) {\r\n                language = (parent.className.match(lang) || [, ''])[1];\r\n                grammar = _.languages[language];\r\n            }\r\n\r\n            // Set language on the element, if not present\r\n            element.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\r\n\r\n            // Set language on the parent, for styling\r\n            parent = element.parentNode;\r\n\r\n            if (/pre/i.test(parent.nodeName)) {\r\n                parent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\r\n            }\r\n\r\n            var code = element.textContent;\r\n\r\n            var env = {\r\n                element: element,\r\n                language: language,\r\n                grammar: grammar,\r\n                code: code\r\n            };\r\n\r\n            if (!code || !grammar) {\r\n                _.hooks.run('complete', env);\r\n                return;\r\n            }\r\n\r\n            _.hooks.run('before-highlight', env);\r\n\r\n            if (async && root.Worker) {\r\n                var worker = new Worker(_.filename);\r\n\r\n                worker.onmessage = function(evt) {\r\n                    env.highlightedCode = evt.data;\r\n\r\n                    _.hooks.run('before-insert', env);\r\n\r\n                    env.element.innerHTML = env.highlightedCode;\r\n\r\n                    callback && callback.call(env.element);\r\n                    _.hooks.run('after-highlight', env);\r\n                    _.hooks.run('complete', env);\r\n                };\r\n\r\n                worker.postMessage(JSON.stringify({\r\n                    language: env.language,\r\n                    code: env.code,\r\n                    immediateClose: true\r\n                }));\r\n            }\r\n            else {\r\n                env.highlightedCode = _.highlight(env.code, env.grammar, env.language);\r\n\r\n                _.hooks.run('before-insert', env);\r\n\r\n                env.element.innerHTML = env.highlightedCode;\r\n\r\n                callback && callback.call(element);\r\n\r\n                _.hooks.run('after-highlight', env);\r\n                _.hooks.run('complete', env);\r\n            }\r\n        },\r\n\r\n        highlight: function(text, grammar, language) {\r\n            var tokens = _.tokenize(text, grammar);\r\n            return Token.stringify(_.util.encode(tokens), language);\r\n        },\r\n\r\n        tokenize: function(text, grammar, language) {\r\n            var Token = _.Token;\r\n\r\n            var strarr = [text];\r\n\r\n            var rest = grammar.rest;\r\n\r\n            if (rest) {\r\n                for (var token in rest) {\r\n                    grammar[token] = rest[token];\r\n                }\r\n\r\n                delete grammar.rest;\r\n            }\r\n\r\n            tokenloop: for (var token in grammar) {\r\n                if (!grammar.hasOwnProperty(token) || !grammar[token]) {\r\n                    continue;\r\n                }\r\n\r\n                var patterns = grammar[token];\r\n                patterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\r\n\r\n                for (var j = 0; j < patterns.length; ++j) {\r\n                    var pattern = patterns[j],\r\n                        inside = pattern.inside,\r\n                        lookbehind = !!pattern.lookbehind,\r\n                        lookbehindLength = 0,\r\n                        alias = pattern.alias;\r\n\r\n                    pattern = pattern.pattern || pattern;\r\n\r\n                    for (var i = 0; i < strarr.length; i++) { // Don’t cache length as it changes during the loop\r\n                        var str = strarr[i];\r\n\r\n                        if (strarr.length > text.length) {\r\n                            // Something went terribly wrong, ABORT, ABORT!\r\n                            break tokenloop;\r\n                        }\r\n\r\n                        if (str instanceof Token) {\r\n                            continue;\r\n                        }\r\n\r\n                        pattern.lastIndex = 0;\r\n\r\n                        var match = pattern.exec(str);\r\n\r\n                        if (match) {\r\n                            if (lookbehind) {\r\n                                lookbehindLength = match[1].length;\r\n                            }\r\n\r\n                            var from = match.index - 1 + lookbehindLength,\r\n                                match = match[0].slice(lookbehindLength),\r\n                                len = match.length,\r\n                                to = from + len,\r\n                                before = str.slice(0, from + 1),\r\n                                after = str.slice(to + 1);\r\n\r\n                            var args = [i, 1];\r\n\r\n                            if (before) {\r\n                                args.push(before);\r\n                            }\r\n\r\n                            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias);\r\n\r\n                            args.push(wrapped);\r\n\r\n                            if (after) {\r\n                                args.push(after);\r\n                            }\r\n\r\n                            Array.prototype.splice.apply(strarr, args);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return strarr;\r\n        },\r\n\r\n        hooks: {\r\n            all: {},\r\n\r\n            add: function(name, callback) {\r\n                var hooks = _.hooks.all;\r\n\r\n                hooks[name] = hooks[name] || [];\r\n\r\n                hooks[name].push(callback);\r\n            },\r\n\r\n            run: function(name, env) {\r\n                var callbacks = _.hooks.all[name];\r\n\r\n                if (!callbacks || !callbacks.length) {\r\n                    return;\r\n                }\r\n\r\n                for (var i = 0, callback; callback = callbacks[i++];) {\r\n                    callback(env);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var Token = _.Token = function(type, content, alias) {\r\n        this.type = type;\r\n        this.content = content;\r\n        this.alias = alias;\r\n    };\r\n\r\n    Token.stringify = function(o, language, parent) {\r\n        if (typeof o == 'string') {\r\n            return o;\r\n        }\r\n\r\n        if (_.util.type(o) === 'Array') {\r\n            return o.map(function(element) {\r\n                return Token.stringify(element, language, o);\r\n            }).join('');\r\n        }\r\n\r\n        var env = {\r\n            type: o.type,\r\n            content: Token.stringify(o.content, language, parent),\r\n            tag: 'span',\r\n            classes: ['token', o.type],\r\n            attributes: {},\r\n            language: language,\r\n            parent: parent\r\n        };\r\n\r\n        if (env.type == 'comment') {\r\n            env.attributes['spellcheck'] = 'true';\r\n        }\r\n\r\n        if (o.alias) {\r\n            var aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\r\n            Array.prototype.push.apply(env.classes, aliases);\r\n        }\r\n\r\n        _.hooks.run('wrap', env);\r\n\r\n        var attributes = '';\r\n\r\n        for (var name in env.attributes) {\r\n            attributes += (attributes ? ' ' : '') + name + '=\"' + (env.attributes[name] || '') + '\"';\r\n        }\r\n\r\n        return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\" ' + attributes + '>' + env.content + '</' + env.tag + '>';\r\n    };\r\n\r\n    root.Prism = prism;\r\n})(this);\r\n\r\nPrism.languages.sql = {\r\n    'comment': {\r\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\w\\W]*?\\*\\/|(?:--|\\/\\/|#).*)/,\r\n        lookbehind: true\r\n    },\r\n    'string': {\r\n        pattern: /(^|[^@\\\\])(\"|')(?:\\\\?[\\s\\S])*?\\2/,\r\n        lookbehind: true\r\n    },\r\n    'variable': /@[\\w.$]+|@(\"|'|`)(?:\\\\?[\\s\\S])+?\\1/,\r\n    'function': /\\b(?:COUNT|SUM|AVG|MIN|MAX|FIRST|LAST|UCASE|LCASE|MID|LEN|ROUND|NOW|FORMAT)(?=\\s*\\()/i, // Should we highlight user defined functions too?\r\n    'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR VARYING|CHARACTER (?:SET|VARYING)|CHARSET|CHECK|CHECKPOINT|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMN|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS|CONTAINSTABLE|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|DATA(?:BASES?)?|DATETIME|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE(?: PRECISION)?|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE KEY|ELSE|ENABLE|ENCLOSED BY|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPE(?:D BY)?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTO|INVOKER|ISOLATION LEVEL|JOIN|KEYS?|KILL|LANGUAGE SQL|LAST|LEFT|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MODIFIES SQL DATA|MODIFY|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL(?: CHAR VARYING| CHARACTER(?: VARYING)?| VARCHAR)?|NATURAL|NCHAR(?: VARCHAR)?|NEXT|NO(?: SQL|CHECK|CYCLE)?|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READ(?:S SQL DATA|TEXT)?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEATABLE|REPLICATION|REQUIRE|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE MODE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|START(?:ING BY)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED BY|TEXT(?:SIZE)?|THEN|TIMESTAMP|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNPIVOT|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?)\\b/i,\r\n    'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\r\n    'number': /\\b-?(?:0x)?\\d*\\.?[\\da-f]+\\b/,\r\n    'operator': /[-+*\\/=%^~]|&&?|\\|?\\||!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\r\n    'punctuation': /[;[\\]()`,.]/\r\n};\r\n","/*!\r\n * Allowing lists to dynamically expand and collapse.\r\n * Created by Stephen Morley - http://code.stephenmorley.org/ - and released under the terms of the CC0 1.0 Universal legal code:\r\n * http://creativecommons.org/publicdomain/zero/1.0/legalcode\r\n *\r\n * Modified to work with bootstrap/fontAwesome and incorporate cascading checkboxes.\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    window.CollapsibleList = factory(root.$);\r\n})(this, function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare CollapsibleList class.\r\n     * @param {Node} element - Node to make collapsible.\r\n     */\r\n    var CollapsibleList = function(element) {\r\n        this.container = $.get(element);\r\n        this.init();\r\n    };\r\n\r\n    /**\r\n     * Declare CollapseCollapsibleList class methods.\r\n     */\r\n    CollapsibleList.prototype = {\r\n        /**\r\n         * Make the specified list collapsible.\r\n         */\r\n        init: function() {\r\n            var node = this.container;\r\n            // loop over the list items within this node\r\n            var lis = $.getAll('li', node);\r\n            for (var i = 0; i < lis.length; i++) {\r\n                // prevent text from being selected unintentionally\r\n                $.on(lis[i], 'mousedown', function(e) { e.preventDefault(); }, false);\r\n                // add the click listener\r\n                $.on(lis[i], 'click', this.createClickListener(lis[i]), false);\r\n                // close the unordered lists within this list item\r\n                this.toggle(lis[i]);\r\n\r\n                // check any parent items if this item is checked\r\n                node = $.get('input[type=\"checkbox\"]', lis[i]);\r\n                if (node.checked) {\r\n                    var p = node;\r\n                    while (this.container !== (p = p.parentNode)) {\r\n                        if (p.nodeName === 'LI') {\r\n                            var parent = p.parentNode.parentNode;\r\n                            if (parent.nodeName === 'LI') {\r\n                                var pi = $.get('input[type=\"checkbox\"]', parent);\r\n                                if (pi && pi !== node) {\r\n                                    pi.checked = true;\r\n                                }\r\n                                this.toggle(parent, true);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Toggles the display status of any unordered list elements within the specified node.\r\n         * @param {Node} node - Node containing the unordered list elements.\r\n         * @returns {Function} Click handler function.\r\n         */\r\n        createClickListener: function(node) {\r\n            var self = this;\r\n            return function(e) {\r\n                // ensure the event object is defined\r\n                e = $.coalesce(e, window.event);\r\n\r\n                // find the list item containing the target of the event\r\n                var elem = $.coalesce(e.target, e.srcElement);\r\n\r\n                // handle checking/unchecking buttons\r\n                if (elem.nodeName === 'INPUT') {\r\n                    var checked = elem.checked;\r\n\r\n                    // first toggle the check for all of the children\r\n                    var inputs = $.getAll('ul input[type=\"checkbox\"]', $.closest('li', elem));\r\n                    i = inputs.length;\r\n                    while (i--) {\r\n                        inputs[i].checked = checked;\r\n                    }\r\n\r\n                    // then check all parents. if any of the children of a checkbox are checked, then it should be checked.\r\n                    var checkedRelative = false;\r\n                    var p = elem;\r\n                    while (self.container !== (p = p.parentNode)) {\r\n                        if (p.nodeName === 'LI') {\r\n                            // see if anybody else on this node level is checked\r\n                            var relatives = $.getAll('input[type=\"checkbox\"]', p.parentNode);\r\n                            var i = relatives.length;\r\n                            checkedRelative = false;\r\n                            while (i--) {\r\n                                if (relatives[i].checked) {\r\n                                    checkedRelative = true;\r\n                                }\r\n                            }\r\n\r\n                            if (p.parentNode.parentNode !== self.container) {\r\n                                var pi = $.get('input[type=\"checkbox\"]', p.parentNode.parentNode);\r\n                                if (pi && pi !== elem) {\r\n                                    pi.checked = checkedRelative || checked;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                if ($.hasClass(elem, 'form-group') || $.hasClass(elem, 'form-icon') || (elem.parentNode && $.hasClass(elem.parentNode, 'form-group'))) {\r\n                    // prevent toggling tree when checking/unchecking an element\r\n                    return;\r\n                }\r\n\r\n                // now handle the tree itself\r\n                while (elem.nodeName !== 'LI') {\r\n                    elem = elem.parentNode;\r\n                }\r\n\r\n                // toggle the state of the node if it was the target of the event\r\n                if (elem === node) {\r\n                    self.toggle(node);\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Opens or closes the unordered list elements directly within the specified node.\r\n         * @param {Node} node - Node containing the unordered list elements.\r\n         * @param {bool} forceOpen - Set to true to force the node to be open regardless of current status.\r\n         */\r\n        toggle: function(node, forceOpen) {\r\n            // determine whether to open or close the unordered lists\r\n            var open = $.coalesce(forceOpen, $.hasClass(node, 'collapsible-list-closed'));\r\n\r\n            // loop over the unordered list elements with the node\r\n            var uls = $.getAll('ul', node);\r\n            for (var i = 0; i < uls.length; i++) {\r\n                // find the parent list item of this unordered list\r\n                var li = uls[i];\r\n                while (li.nodeName !== 'LI') {\r\n                    li = li.parentNode;\r\n                }\r\n\r\n                // style the unordered list if it is directly within this node\r\n                if (li === node) {\r\n                    uls[i].style.display = open ? 'block' : 'none';\r\n                }\r\n            }\r\n\r\n            // remove the current class from the node\r\n            $.removeClass(node, 'collapsible-list-' + (open ? 'closed' : 'open'));\r\n\r\n            // if the node contains unordered lists, set its class\r\n            if (uls.length) {\r\n                $.addClass(node, 'collapsible-list-' + (open ? 'open' : 'closed'));\r\n            }\r\n        }\r\n    };\r\n\r\n    return CollapsibleList;\r\n});\r\n","/*!\r\n * Validator that converts HTML5 form validation errors into bootstrap friendly errors.\r\n * Based on the library below, but ported from jQuery to native js.\r\n *\r\n * Validator v0.9.0 for Bootstrap 3, by @1000hz\r\n * Copyright 2015 Cina Saffary\r\n * Licensed under http://opensource.org/licenses/MIT\r\n * https://github.com/1000hz/bootstrap-validator\r\n *\r\n * Modified to use Dash's core library instead of jQuery, with unneeded functionality removed.\r\n */\r\n(function(factory) {\r\n    // Assume a traditional browser.\r\n    window.Validator = factory($, Alertify);\r\n})(function($, Alertify) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare validator class.\r\n     * @param {Node} element - Form to validate.\r\n     * @param {Object} errorMsgs - Error messages for custom errors.\r\n     */\r\n    var Validator = function(element, errorMsgs) {\r\n        this.element = element;\r\n        this.element.setAttribute('novalidate', true); // disable automatic native validation\r\n        this.errorMsgs = $.extend({}, Validator._errors, errorMsgs || {});\r\n\r\n        var inputs = $.getAll('[data-match]', this.element);\r\n        for (var i = 0; i < inputs.length; i++) {\r\n            // add the data match attribute to the target if it doesn't already exist\r\n            var target = inputs[i].getAttribute('data-match');\r\n            if (target) {\r\n                var targetElement = $.get('#' + target, this.element);\r\n                if (targetElement && !targetElement.hasAttribute('data-match')) {\r\n                    targetElement.setAttribute('data-match', inputs[i].id);\r\n                }\r\n            }\r\n        }\r\n\r\n        // check for pre-existing error classes because razor is weird sometimes\r\n        this.resetAll();\r\n\r\n        $.on(this.element, 'input', this.validateInput.bind(this));\r\n        $.on(this.element, 'change', this.validateInput.bind(this));\r\n        $.on(this.element, 'focusout', this.validateInput.bind(this));\r\n        $.on(this.element, 'submit', this.onSubmit.bind(this));\r\n        $.on(this.element, 'formValidate', this.validate.bind(this));\r\n    };\r\n\r\n    /**\r\n     * Default error messages for custom errors.\r\n     * @type {Object}\r\n     */\r\n    Validator._errors = {\r\n        match: '{0} does not match {1}.',\r\n        minlength: 'This field is not long enough.'\r\n    };\r\n\r\n    /**\r\n     * Functions to validate inputs against.\r\n     * @type {Object}\r\n     */\r\n    Validator.VALIDATORS = {\r\n        'native': function(el) {\r\n            return el.checkValidity();\r\n        },\r\n        'match': function(el) {\r\n            var target = $.get('#' + el.getAttribute('data-match'), this.element);\r\n            var res = !target ? false : el.value === target.value;\r\n            if (res) {\r\n                el.setCustomValidity('');\r\n            } else {\r\n                el.setCustomValidity(this.errorMsgs.match.replace(\"{0}\", el.name).replace(\"{1}\", el.getAttribute('data-match')));\r\n            }\r\n            return res;\r\n        },\r\n        'minlength': function(el) {\r\n            var minlength = el.getAttribute('data-minlength');\r\n            var res = !el.value || el.value.length >= minlength;\r\n            if (res) {\r\n                el.setCustomValidity('');\r\n            } else {\r\n                el.setCustomValidity(this.errorMsgs.minlength);\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Declare validator class methods.\r\n     */\r\n    Validator.prototype = {\r\n        /**\r\n         * Validate a single input element.\r\n         * @param {Node} e - Element to validate\r\n         */\r\n        validateInput: function(e) {\r\n            var el;\r\n            if (this.isValidatableInput(e)) {\r\n                el = e;\r\n            } else if (e.target && this.isValidatableInput(e.target)) {\r\n                el = e.target;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            if (el.type === 'radio') {\r\n                el = $.getAll('input[name=\"' + el.getAttribute('name') + '\"]', self.element);\r\n            }\r\n\r\n            if (e.defaultPrevented) {\r\n                return;\r\n            }\r\n\r\n            var errors = this.runValidators(el);\r\n            if (errors.length) {\r\n                self.showErrors(el, errors);\r\n            } else {\r\n                self.clearErrors(el);\r\n                if (el.getAttribute('data-match')) {\r\n                    self.clearErrors($.get('#' + el.getAttribute('data-match'), self.element));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get all the validatable inputs in the form.\r\n         * @returns {Node[]} Array of input elements.\r\n         */\r\n        inputSelector: function() {\r\n            var inputs = $.getAll('input,select,textarea', this.element);\r\n            var length = inputs.length, i = 0, results = [];\r\n            for (; i < length; i++) {\r\n                var input = inputs[i];\r\n                if (input.type !== 'submit' && input.type !== 'button' && !input.getAttribute('disabled') && input.style.visibility !== 'hidden') {\r\n                    results.push(input);\r\n                } else if ($.hasClass(input, 'form-control-error')) {\r\n                    // remove error class on disabled items\r\n                    $.removeClass(input, 'form-control-error');\r\n                }\r\n            }\r\n            return results;\r\n        },\r\n\r\n        /**\r\n         * Get all the inputs in the form and remove error styling.\r\n         */\r\n        resetAll: function() {\r\n            $.getAll('input,select,textarea', this.element).forEach(function(x) {\r\n                $.removeClass(x, 'form-control-error');\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Check if a node is an input that can be validated.\r\n         * @param {Node} input - Node to check.\r\n         * @returns {bool} True if input is an input that can be validated.\r\n         */\r\n        isValidatableInput: function(input) {\r\n            return (input.tagName === 'INPUT' || input.tagName === 'SELECT' || input.tagName === 'TEXTAREA') && !input.getAttribute('disabled') && input.style.visibility !== 'hidden';\r\n        },\r\n\r\n        /**\r\n         * Run all of the validator functions against an element.\r\n         * @param {Node} el - Element to validate.\r\n         * @returns {string[]} Array of error messages.\r\n         */\r\n        runValidators: function(el) {\r\n            var errors = [];\r\n\r\n            for (var key in Validator.VALIDATORS) {\r\n                if (Validator.VALIDATORS.hasOwnProperty(key)) {\r\n                    var validator = Validator.VALIDATORS[key];\r\n                    var attr = el.getAttribute('data-' + key);\r\n                    if ((attr || key === 'native') && !validator.call(this, el)) {\r\n                        var error = el.getAttribute('data' + key + '-error') || el.getAttribute('data-error') || (key === 'native' ? el.validationMessage : this.errorMsgs[key]);\r\n                        if (key === \"match\") {\r\n                            error = error.replace(\"{0}\", el.name).replace(\"{1}\", attr);\r\n                        }\r\n                        !~errors.indexOf(error) && errors.push(error);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        /**\r\n         * Run validation for the form.\r\n         */\r\n        validate: function() {\r\n            var inputs = this.inputSelector();\r\n            var length = inputs.length, i = 0;\r\n            for (; i < length; i++) {\r\n                this.validateInput(inputs[i]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Display errors for an element.\r\n         * @param {Node} el - Element to display errors for.\r\n         * @param {string[]} errors - List of error messages.\r\n         */\r\n        showErrors: function(el, errors) {\r\n            if (!errors.length) {\r\n                return;\r\n            }\r\n\r\n            var group = $.closest('.form-group', el);\r\n            var block = $.get('.help-block.with-errors', group);\r\n\r\n            if (block) {\r\n                var errorElement = document.createElement('ul');\r\n                $.addClass(errorElement, 'list-unstyled');\r\n\r\n                var errHtml = '', i = 0; length = errors.length;\r\n                for (; i < length; i++) {\r\n                    errHtml += '<li>' + errors[i] + '</li>';\r\n                }\r\n                errorElement.innerHTML = errHtml;\r\n\r\n                block.innerHTML = '';\r\n                block.appendChild(errorElement);\r\n            }\r\n\r\n            $.addClass(el, 'form-control-error');\r\n\r\n            var tab = $.closest('.tab-pane', el);\r\n            if (tab) {\r\n                // add error class to tab\r\n                var id = tab.getAttribute('aria-labelledby');\r\n                if (id) {\r\n                    $.addClass($.get('#' + id), 'tab-validation-error');\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Hide all error messages for an element.\r\n         * @param {Node} el - Element to hide errors for.\r\n         */\r\n        clearErrors: function(el) {\r\n            $.removeClass(el, 'form-control-error');\r\n\r\n            var group = $.closest('.form-group', el);\r\n            if (group) {\r\n                var block = $.get('.help-block.with-errors', group);\r\n                if (block) {\r\n                    block.innerHTML = '';\r\n                }\r\n            }\r\n            var tab = $.closest('.tab-pane', el);\r\n            if (tab) {\r\n                if ($.getAll('.form-control-error', tab).length == 0) {\r\n                    var id = tab.getAttribute('aria-labelledby');\r\n                    if (id) {\r\n                        $.removeClass($.get('#' + id), 'tab-validation-error');\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check if the validator found any errors.\r\n         * @returns {bool} True if there are any errors.\r\n         */\r\n        hasErrors: function() {\r\n            return $.getAll('.form-control-error', this.element).length;\r\n        },\r\n\r\n        /**\r\n         * Validate the form and prevent submit if there are errors.\r\n         * @param {Event} e - Form submit event.\r\n         */\r\n        onSubmit: function(e) {\r\n            this.validate();\r\n            if (this.hasErrors()) {\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    };\r\n\r\n    return Validator;\r\n});\r\n","/*!\r\n * Color library\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Convert hex string to RGB.\r\n     * @param {string} hex - Hex string.\r\n     * @returns {Object} Object with RGB properties.\r\n     */\r\n    var hex2rgb = function(hex) {\r\n        return { r: parseInt(hex.substr(1, 2), 16), g: parseInt(hex.substr(3, 2), 16), b: parseInt(hex.substr(5, 2), 16) };\r\n    };\r\n\r\n    /**\r\n     * Converts an RGB color value to HSL. Conversion formula\r\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n     * Assumes r, g, and b are contained in the set [0, 255] and\r\n     * returns h, s, and l in the set [0, 1].\r\n     * @param {Object} rgb - Object with r, g, and b properties.\r\n     * @return {Number[]} The HSL representation.\r\n     */\r\n    var rgb2hsl = function(rgb) {\r\n        var r = rgb.r, g = rgb.g, b = rgb.b;\r\n        r /= 255, g /= 255, b /= 255;\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if (max === min) {\r\n            h = s = 0; // achromatic\r\n        } else {\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch (max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        return [h, s, l];\r\n    };\r\n\r\n    $.colors = {\r\n        hex2rgb: hex2rgb,\r\n        rgb2hsl: rgb2hsl,\r\n    };\r\n})(this.$);\r\n","/*!\r\n * ColorPicker mithril component.\r\n */\r\n(function(root, factory) {\r\n    root.ColorPicker = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    var _keys = {\r\n        ESC: 27,\r\n        DOWN: 40,\r\n        UP: 38,\r\n        LEFT: 37,\r\n        RIGHT: 39\r\n    };\r\n\r\n    var ColorPicker = {\r\n        /**\r\n         * Initialize the component.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            this.opts = {\r\n                value: attrs.value,\r\n                name: attrs.name,\r\n                active: false,\r\n                disabled: attrs.disabled,\r\n                onSelect: attrs.onSelect,\r\n                onCancel: attrs.onCancel,\r\n                container: null,\r\n                selectedIndex: -1,\r\n                colors: ['#4D4D4D', '#F44E3B', '#0000FF', '#FE9200', '#FCDC00', '#00FF00', '#A4DD00', '#68CCCA',\r\n                    '#73D8FF', '#AEA1FF', '#FDA1FF', '#D33115', '#E27300', '#FCC400', '#B0BC00', '#68BC00',\r\n                    '#16A5A5', '#009CE0', '#7B64FF', '#FA28FF', '#9F0500', '#C45100', '#FB9E00',\r\n                    '#808900', '#194D33', '#0C797D', '#0062B1', '#653294', '#AB149E'\r\n                ]\r\n            };\r\n            if (this.opts.value) {\r\n                this.opts.selectedIndex = this.opts.colors.indexOf(this.opts.value);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Grab the DOM containing node after it is created.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oncreate: function(vnode) {\r\n            this.opts.container = vnode.dom;\r\n        },\r\n\r\n        /**\r\n         * Update the opts in case the component name is changed.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         * @param vnode\r\n         */\r\n        onupdate: function(vnode) {\r\n            if (vnode.attrs) {\r\n                this.opts.name = vnode.attrs.name;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check special keys and respond accordingly.\r\n         * @param {Event} e - Keypress event.\r\n         */\r\n        onKeyDown: function(e) {\r\n            if (this.opts.disabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.opts.active) {\r\n                if (e.keyCode === _keys.ESC) {\r\n                    this.close();\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                } else if (e.keyCode === _keys.DOWN || e.keyCode === _keys.LEFT) {\r\n                    this.selectIndex(Math.min(this.opts.selectedIndex + 1, this.opts.colors.length - 1));\r\n                } else if (e.keyCode === _keys.UP || e.keyCode === _keys.RIGHT) {\r\n                    this.selectIndex(Math.max(this.opts.selectedIndex - 1, 0));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select an item from the list by index.\r\n         * @param {Event} e - Event that triggered this\r\n         * @param {Number} index - Index of the color being selected\r\n         */\r\n        selectColor: function(e, index) {\r\n            var target = e && e.target ? e.target : e;\r\n            if (target) {\r\n                this.opts.value = target.getAttribute('data-value') || target.parentNode.getAttribute('data-value');\r\n                target.scrollIntoView();\r\n\r\n                if (this.opts.onSelect) {\r\n                    this.opts.onSelect(this.opts.value);\r\n                }\r\n            }\r\n            if (index) {\r\n                this.opts.selectedIndex = index;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select an item from the list by index.\r\n         * @param {number} index - Filtered list item index.\r\n         */\r\n        selectIndex: function(index) {\r\n            var swatches = $.getAll('.swatch', this.opts.container);\r\n            if (swatches && swatches[index]) {\r\n                this.opts.selectedIndex = index;\r\n                swatches[index].focus();\r\n                if ($.hasClass(swatches[index], 'swatch-selectable')) {\r\n                    this.selectColor(swatches[index], index);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set value and close the picker.\r\n         */\r\n        close: function() {\r\n            this.opts.active = false;\r\n            var trigger = $.get('.colorpicker-trigger', this.opts.container);\r\n            if (trigger) {\r\n                trigger.focus();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Show the swatch list.\r\n         */\r\n        showEditor: function() {\r\n            if (this.opts.disabled) {\r\n                return;\r\n            }\r\n            this.opts.active = !this.opts.active;\r\n        },\r\n\r\n        /**\r\n         * Create HTML to display component.\r\n         * @returns {Object} Mithril vnode\r\n         */\r\n        view: function() {\r\n            var self = this;\r\n            return m('.mithril-colorpicker', {\r\n                class: this.opts.active ? 'active' : '', onkeydown: this.onKeyDown.bind(this)\r\n            }, m('button.btn.btn-secondary.colorpicker-trigger', {\r\n                type: 'button', role: 'button', disabled: this.opts.disabled,\r\n                onclick: this.showEditor.bind(this),\r\n                style: 'background-color: ' + this.opts.value\r\n            }, [m.trust('&nbsp;'), m('i.dash.colorpicker-indicator', { class: this.opts.active ? 'dash-sort-up' : 'dash-sort-down' })]), this.opts.active && m('.editor', [\r\n                m('.swatches',\r\n                    m('button.btn.btn-secondary.swatch', {\r\n                        type: 'button', role: 'button', onclick: this.close.bind(this)\r\n                    }, m('i.dash.dash-cancel')),\r\n                    this.opts.colors.map(function(x) {\r\n                        return m('button.btn.btn-secondary.swatch.swatch-selectable', {\r\n                            class: self.opts.value === x ? 'active' : '',\r\n                            type: 'button', role: 'button', 'data-value': x,\r\n                            style: 'background-color: ' + x + '; color: ' + x, onclick: self.selectColor.bind(self)\r\n                        }, m('i.dash.dash-cancel'));\r\n                    })\r\n                )\r\n            ]), m('input', { type: 'hidden', name: this.opts.name, value: this.opts.value }));\r\n        }\r\n    };\r\n\r\n    return ColorPicker;\r\n});\r\n","/*!\r\n * Mithril based table component. Supports ajax data, searching, sorting, paging, & resizing columns.\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Table = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare Table class.\r\n     * @param {Object} opts - Table settings\r\n     */\r\n    function Table(opts) {\r\n        opts = opts || {};\r\n\r\n        var data = null;\r\n        if (opts.data) {\r\n            data = opts.data;\r\n            delete opts.data;\r\n        }\r\n\r\n        this.opts = $.extend({\r\n            content: null,\r\n            id: null,\r\n            columns: [],\r\n            url: '',\r\n            requestMethod: 'GET',\r\n            requestUsePascalCase: true,\r\n            requestParams: {},\r\n            searchable: true,\r\n            loadAllData: true,\r\n            inputTimeout: 200,\r\n            columnMinWidth: 50,\r\n            width: 100,\r\n            editable: true,\r\n            pageDropdown: true,\r\n            headerButtons: null,\r\n            storageFunction: null,\r\n            itemsPerPage: null,\r\n            searchQuery: null,\r\n            currentStartItem: null,\r\n            sorting: null,\r\n            dataCallback: null,\r\n            errorCallback: null,\r\n            dataDateFormat: 'YYYY-MM-DD HH:mm:ss',\r\n            displayDateFormat: 'YYYY-MM-DD HH:mm',\r\n            displayCurrencyFormat: '{s:$} {[t:,][d:.][p:2]}',\r\n            resources: {\r\n                firstPage: $.resx('firstPage'),\r\n                previousPage: $.resx('previousPage'),\r\n                nextPage: $.resx('nextPage'),\r\n                lastPage: $.resx('lastPage'),\r\n                noData: $.resx('noData'),\r\n                showing: $.resx('showing'),\r\n                page: $.resx('page') || 'Page',\r\n                perPage: $.resx('perPage'),\r\n                loadingError: $.resx('loadingError'),\r\n                tryAgain: $.resx('tryAgain')\r\n            }\r\n        }, opts);\r\n\r\n        this.content = $.get(this.opts.content);\r\n        this.layoutSet = false;\r\n        this.data = null;\r\n        this.loading = true;\r\n        this.loadingError = false;\r\n        this.filteredTotal = 0;\r\n        this.results = [];\r\n        this.pageTotal = 0;\r\n        this.totalDistance = 0;\r\n        this.lastSeenAt = { x: null, y: null };\r\n        this.columnRenderer = {};\r\n        this.colGroups = [];\r\n        this.events = {};\r\n        this.intColumns = [];\r\n        this.dateColumns = [];\r\n        this.currencyColumns = [];\r\n\r\n        var self = this;\r\n        for (var i = 0; i < this.opts.columns.length; i++) {\r\n            var column = this.opts.columns[i];\r\n            column.width = $.hasPositiveValue(column.width) ? column.width : this.store(column.field + '.width');\r\n\r\n            var columnFunction = $.isNull(column.links) || column.links.length === 0 ?\r\n                function(obj, column) { return self.getDisplayValue(obj[column.field], column.dataType.toLowerCase()); } :\r\n                function(obj, column) {\r\n                    return column.links.filter(function(link) {\r\n                        return !$.isNull(link);\r\n                    }).map(function(link) {\r\n                        var label = $.coalesce(link.label, self.getDisplayValue(obj[column.field], column.dataType.toLowerCase()));\r\n                        var attr = $.clone(link.attributes) || {};\r\n                        var href = link.href || null;\r\n                        if (href) {\r\n                            for (var prop in obj) {\r\n                                if (href.indexOf('{' + prop + '}') > -1 && obj.hasOwnProperty(prop)) {\r\n                                    href = href.replace(new RegExp('{' + prop + '}', 'g'), obj[prop]);\r\n                                }\r\n                            }\r\n                        }\r\n                        var classes = attr['class'].split(' ');\r\n                        if (classes.indexOf('btn') === -1) {\r\n                            classes.push('btn');\r\n                            classes.push('btn-link');\r\n                        }\r\n                        if (classes.indexOf('dash-ajax') === -1) {\r\n                            classes.push('dash-ajax');\r\n                        }\r\n                        attr['class'] = classes.filter(function(x) { return x && x.length; }).join(' ');\r\n                        attr['data-method'] = link.method ? link.method.toUpperCase() : 'GET';\r\n                        attr['data-href'] = href;\r\n                        attr['title'] = label;\r\n                        attr['type'] = attr['role'] = 'button';\r\n                        return m('button', attr, $.isNull(link.icon) ? label : m('i', { class: 'dash dash-' + link.icon.toLowerCase() }));\r\n                    });\r\n                };\r\n\r\n            this.columnRenderer[column.field] = columnFunction;\r\n            this.colGroups.push(m('col'));\r\n\r\n            var type = column.dataType.toLowerCase();\r\n            if (type === 'int') {\r\n                this.intColumns.push(column.field);\r\n            } else if (type === 'date') {\r\n                this.dateColumns.push(column.field);\r\n            } else if (type === 'currency') {\r\n                this.currencyColumns.push(column.field);\r\n            }\r\n        }\r\n\r\n        this.itemsPerPage = this.store('itemsPerPage') * 1 || 10;\r\n        this.currentStartItem = this.store('currentStartItem') * 1 || 0;\r\n        this.searchQuery = this.store('searchQuery') || '';\r\n        this.width = this.store('width') * 1 || 100;\r\n        var sorting = this.store('sorting');\r\n        this.sorting = (typeof sorting === 'string' ? JSON.parse(sorting) : sorting) || [];\r\n\r\n        if (data) {\r\n            this.processData({ rows: data });\r\n        }\r\n\r\n        this.run();\r\n    }\r\n\r\n    Table.prototype = {\r\n        pageOptions: [m('option', { value: '10' }, '10'), m('option', { value: '20' }, '20'), m('option', { value: '50' }, '50'), m('option', { value: '100' }, '100')],\r\n\r\n        /**\r\n         * Get/set persistent values.\r\n         * @param {string} key - Key name of the value to get/set.\r\n         * @param {*} value - Value to set.\r\n         * @returns {string|undefined} Value if getting, else undefined.\r\n         */\r\n        store: function(key, value) {\r\n            var myKey = this.opts.id + '.' + key;\r\n            // getter\r\n            if ($.isUndefined(value)) {\r\n                return $.isNull(this.opts.storageFunction) ? localStorage[myKey] : $.coalesce(this.opts[key], null);\r\n            }\r\n\r\n            // setter\r\n            if ($.isNull(this.opts.storageFunction)) {\r\n                localStorage[myKey] = value;\r\n            } else {\r\n                // ignore the param actually passed and use the values from the object\r\n                // passing the whole object lets the storage function decide when to actually save using a debounce\r\n                if ($.isFunction(this.opts.storageFunction)) {\r\n                    this.opts.storageFunction({\r\n                        itemsPerPage: this.itemsPerPage,\r\n                        currentStartItem: this.currentStartItem,\r\n                        searchQuery: this.searchQuery,\r\n                        width: this.width,\r\n                        sorting: this.sorting,\r\n                        columnWidths: this.opts.columns.map(function(c) { return { field: c.field, width: c.width * 1.0 }; })\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Process the data array result from the ajax request.\r\n         * @param {Object[]} data - Array of records to display.\r\n         */\r\n        processData: function(data) {\r\n            if (this.opts.dataCallback) {\r\n                this.opts.dataCallback(data);\r\n            }\r\n\r\n            var i = 0, len = data.rows.length, j = 0;\r\n            for (; i < len; i++) {\r\n                // add an index to the data so we can reset to the default sort order later if the user wants\r\n                data.rows[i]._index = i;\r\n\r\n                var x;\r\n                // convert input to appropriate types\r\n                for (j = 0; j < this.intColumns.length; j++) {\r\n                    x = this.intColumns[j];\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : data.rows[i][x] * 1;\r\n                }\r\n                for (j = 0; j < this.dateColumns.length; j++) {\r\n                    x = this.dateColumns[j];\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : $.fecha.parse(data.rows[i][x], this.opts.dataDateFormat);\r\n                }\r\n                for (j = 0; j < this.currencyColumns.length; j++) {\r\n                    x = this.currencyColumns[j];\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : $.accounting.unformat(data.rows[i][x]);\r\n                }\r\n            }\r\n            this.data = data.rows;\r\n            this.filteredTotal = data.filteredTotal;\r\n\r\n            this.loading = false;\r\n            this.sort(false);\r\n            this.filterResults();\r\n        },\r\n\r\n        /**\r\n         * Load the data to populate the table.\r\n         */\r\n        loadData: function() {\r\n            this.loading = true;\r\n            this.loadingError = false;\r\n\r\n            var self = this;\r\n            $.ajax({\r\n                method: this.opts.requestMethod,\r\n                url: this.opts.url,\r\n                data: this.buildParams(),\r\n                block: false\r\n            }, this.processData.bind(this), function(data) {\r\n                self.loading = false;\r\n                self.loadingError = true;\r\n                if (self.opts.errorCallback) {\r\n                    self.opts.errorCallback(data);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Force the table to refresh its data.\r\n         */\r\n        refresh: function() {\r\n            this.loading = true;\r\n            this.loadingError = false;\r\n            this.loadData();\r\n        },\r\n\r\n        /**\r\n         * Build querystring params to fetch data from the server.\r\n         * @returns {Object} Request parameters.\r\n         */\r\n        buildParams: function() {\r\n            var sort = this.sorting.length > 0 ? this.sorting.map(function(obj, i) { return { field: obj.field, dir: obj.dir, index: i }; }) : null;\r\n            if (this.opts.requestUsePascalCase) {\r\n                return $.extend(this.opts.requestParams, {\r\n                    StartItem: this.currentStartItem,\r\n                    Items: this.itemsPerPage,\r\n                    Query: this.searchQuery,\r\n                    Sort: $.toPascalKeys(sort)\r\n                });\r\n            }\r\n            return $.extend(this.opts.requestParams, {\r\n                startItem: this.currentStartItem,\r\n                items: this.itemsPerPage,\r\n                query: this.searchQuery,\r\n                sort: sort\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Set the first item index to display.\r\n         * @param {type} index - Record index to start on.\r\n         */\r\n        setCurrentStartItem: function(index) {\r\n            this.currentStartItem = index;\r\n            this.store('currentStartItem', index);\r\n            this.filterResults(true);\r\n        },\r\n\r\n        /**\r\n         * Set the number of items to display per page.\r\n         * @param {number|Event} e - Number or items per page, or an event that triggered the change.\r\n         */\r\n        setItemsPerPage: function(e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var items = (isNaN(e) ? e.target.value : e) * 1;\r\n            if (this.itemsPerPage !== items) {\r\n                this.itemsPerPage = items;\r\n                this.store('itemsPerPage', items);\r\n                this.setCurrentStartItem(0);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set the search query for filtering table data.\r\n         * @param {string} val - New search text.\r\n         */\r\n        setSearchQuery: function(val) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var query = val.target ? val.target.value : val;\r\n            if (this.searchQuery !== query) {\r\n                this.searchQuery = query;\r\n                clearTimeout(this.requestTimer);\r\n                this.requestTimer = setTimeout(this.runSearch.bind(this, query), this.opts.inputTimeout);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change search query and filter results.\r\n         * @param {string} query - New search text.\r\n         */\r\n        runSearch: function(query) {\r\n            this.store('searchQuery', query);\r\n            this.requestTimer = null;\r\n            this.currentStartItem = 0;\r\n            this.filterResults(true);\r\n            m.redraw();\r\n        },\r\n\r\n        /**\r\n         * Filter the data based on the search query, current page, and items per page.\r\n         * @param {bool} refresh - Force it to refresh its data.\r\n         */\r\n        filterResults: function(refresh) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            if (refresh && !this.opts.loadAllData) {\r\n                // force the data to reload. filterResults will get called again after the data loads\r\n                this.loadData();\r\n            } else if (!this.opts.loadAllData) {\r\n                // we're not loading all the data to begin with. so whatever data we have should be displayed.\r\n                this.results = this.data;\r\n                this.pageTotal = Math.ceil(this.filteredTotal / this.itemsPerPage);\r\n            } else {\r\n                // we're loading all the data to begin with. so figure out what data to display.\r\n                var filteredTotal = 0;\r\n                if (this.data.constructor !== Array) {\r\n                    this.loading = true;\r\n                    this.results = [];\r\n                } else {\r\n                    var startItem = this.currentStartItem;\r\n                    var res = this.searchQuery ? this.data.filter(this.filterArray.bind(this.searchQuery.toLowerCase())) : this.data;\r\n                    filteredTotal = res.length;\r\n                    this.results = res.slice(startItem, startItem + this.itemsPerPage);\r\n                }\r\n\r\n                this.filteredTotal = filteredTotal;\r\n                this.pageTotal = Math.ceil(filteredTotal / this.itemsPerPage);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Page forward or backward.\r\n         * @param {number} d - Direction to move, 1 is forward, -1 is backward.\r\n         * @param {number} m - Move to end (first or last page) if true.\r\n         */\r\n        moveToPage: function(d, m) {\r\n            this.changePage(d === 1 ? m ? this.pageTotal : this.currentStartItem / this.itemsPerPage + 2 : m ? 1 : this.currentStartItem / this.itemsPerPage);\r\n        },\r\n\r\n        /**\r\n         * Move to the specified page number.\r\n         * @param {number|Event} e - New page number, or an event that triggered the change.\r\n         */\r\n        changePage: function(e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var page = (isNaN(e) ? e.target.value : e) * 1;\r\n            if (page <= this.pageTotal && page > 0) {\r\n                this.setCurrentStartItem((page - 1) * this.itemsPerPage);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change the sorting order.\r\n         * @param {string} fieldName - Name of the field to sort on.\r\n         * @param {string} dataType - Data type of the field.\r\n         * @param {Event} e - Event that triggered the change.\r\n         */\r\n        changeSort: function(fieldName, dataType, e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var val = $.findByKey(this.sorting, 'field', fieldName);\r\n            if (e.shiftKey) {\r\n                document.getSelection().removeAllRanges();\r\n            } else {\r\n                this.sorting = [];\r\n            }\r\n\r\n            if (val === null) {\r\n                this.sorting.push({ field: fieldName, dir: 'ASC', dataType: dataType || 'string' });\r\n            } else if (e.shiftKey) {\r\n                if (val.dir === 'DESC') {\r\n                    this.sorting.splice(val._i, 1);\r\n                } else {\r\n                    val.dir = 'DESC';\r\n                    this.sorting[val._i] = val;\r\n                }\r\n            } else {\r\n                val.dir = val.dir === 'ASC' ? 'DESC' : 'ASC';\r\n                this.sorting.push(val);\r\n            }\r\n\r\n            this.sort();\r\n            this.setCurrentStartItem(0);\r\n        },\r\n\r\n        /**\r\n         * Sort the underlying data.\r\n         * @param {bool} refresh - Refresh the data from the server.\r\n         */\r\n        sort: function(refresh) {\r\n            refresh = $.coalesce(refresh, true);\r\n            this.data.sort(this.sorting.length > 0 ? this.compare.bind(this) : this.defaultCompare);\r\n            this.filterResults(refresh);\r\n            this.store('sorting', JSON.stringify(this.sorting));\r\n        },\r\n\r\n        /**\r\n         * Set up the table and column styles and events.\r\n         */\r\n        setLayout: function() {\r\n            if (this.layoutSet) {\r\n                return;\r\n            }\r\n\r\n            this.layoutSet = true;\r\n            this.content = $.get(this.opts.content);\r\n            this.table = $.get('.table-data-table', this.content);\r\n            this.table.style.tableLayout = 'fixed';\r\n            this.tableHeaderRow = this.table.tHead.rows[0];\r\n\r\n            if (this.table !== null) {\r\n                this.clientWidth = this.content.clientWidth;\r\n                this.table.tHead.style.width = this.table.style.width = (this.width / 100 * this.table.offsetWidth) + 'px';\r\n\r\n                var hWidth = this.table.tHead.offsetWidth;\r\n                var tWidth = this.table.offsetWidth;\r\n                var i = 0;\r\n                var cells = this.tableHeaderRow.cells;\r\n                this.opts.columns.forEach(function(x) {\r\n                    if (!x.width) {\r\n                        x.width = cells[i].offsetWidth / hWidth * 100;\r\n                    }\r\n                    cells[i].style.width = x.width / 100 * tWidth + 'px';\r\n                    ++i;\r\n                });\r\n\r\n                if (this.opts.editable) {\r\n                    this.events = {\r\n                        resize: $.debounce(this.onResize.bind(this), 50),\r\n                        move: this.onMouseMove.bind(this),\r\n                        up: this.onMouseUp.bind(this),\r\n                        touch: this.touchHandler.bind(this)\r\n                    };\r\n                    $.on(window, 'resize', this.events.resize);\r\n                    $.on(window, 'mousemove', this.events.move);\r\n                    $.on(window, 'mouseup', this.events.up);\r\n\r\n                    var header = $.get('thead', this.table);\r\n                    if (header) {\r\n                        $.on(header, 'touchstart', this.events.touch);\r\n                        $.on(header, 'touchmove', this.events.touch);\r\n                        $.on(header, 'touchend', this.events.touch);\r\n                        $.on(header, 'touchcancel', this.events.touch);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Clean up our mess.\r\n         */\r\n        destroy: function() {\r\n            if (this.opts.editable) {\r\n                $.off(window, 'resize', this.events.resize);\r\n                $.off(window, 'mousemove', this.events.move);\r\n                $.off(window, 'mouseup', this.events.up);\r\n\r\n                var header = $.get('thead', this.table);\r\n                if (header) {\r\n                    $.off(header, 'touchstart', this.events.touch);\r\n                    $.off(header, 'touchmove', this.events.touch);\r\n                    $.off(header, 'touchend', this.events.touch);\r\n                    $.off(header, 'touchcancel', this.events.touch);\r\n                }\r\n            }\r\n            m.mount(this.content, null);\r\n        },\r\n\r\n        /**\r\n         * Update the table and column widths based on a window resize.\r\n         */\r\n        onResize: function() {\r\n            var cWidth = this.content.clientWidth;\r\n            if (cWidth === 0) {\r\n                return;\r\n            }\r\n            var scale = cWidth / this.clientWidth;\r\n            this.clientWidth = cWidth;\r\n            this.table.tHead.style.width = this.table.style.width = (this.pixelToFloat(this.table.style.width) * scale) + 'px';\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                this.tableHeaderRow.cells[i].style.width = (this.pixelToFloat(this.tableHeaderRow.cells[i].style.width) * scale) + 'px';\r\n            }\r\n            this.updateLayout();\r\n        },\r\n\r\n        /**\r\n         * Update the table header style.\r\n         */\r\n        updateLayout: function() {\r\n            if (!$.isVisible(this.table)) {\r\n                return;\r\n            }\r\n            $.get('.table-scrollable', this.content).style.paddingTop = this.table.tHead.offsetHeight + 'px';\r\n            var colGroup = $.get('.table-column-group', this.content);\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                colGroup.children[i].style.width = this.tableHeaderRow.cells[i].style.width;\r\n            }\r\n            if (this.clientWidth > 0 && this.content.clientWidth / this.clientWidth !== 1) {\r\n                this.onResize();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Make the table header scroll horizontally with the table\r\n         * @param {Event} e - Event that triggered the scroll.\r\n         */\r\n        onScroll: function(e) {\r\n            var head = this.table.tHead;\r\n            var scroll = e.target;\r\n            if (-head.offsetLeft !== scroll.scrollLeft) {\r\n                head.style.left = '-' + scroll.scrollLeft + 'px';\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handle dragging to change column widths.\r\n         * @param {type} e - Event that triggered the change.\r\n         */\r\n        onHeaderMouseDown: function(e) {\r\n            if (e.button !== 0) {\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            var callbackFunc = function(cellEl) {\r\n                e.stopImmediatePropagation();\r\n                e.preventDefault();\r\n\r\n                self.resizeContext = {\r\n                    colIndex: cellEl.cellIndex,\r\n                    initX: e.clientX,\r\n                    scrWidth: $.get('.table-scrollable', self.content).offsetWidth,\r\n                    initTblWidth: self.table.offsetWidth,\r\n                    initColWidth: self.pixelToFloat($.get('.table-column-group', self.content).children[cellEl.cellIndex].style.width),\r\n                    layoutTimer: null\r\n                };\r\n            };\r\n            self.inResizeArea(e, callbackFunc);\r\n        },\r\n\r\n        /**\r\n         * Handle resizing columns.\r\n         * @param {Event} e - Event that triggered the change.\r\n         */\r\n        onMouseMove: function(e) {\r\n            var newStyle = '';\r\n            var cursorFunc = function() {\r\n                newStyle = 'col-resize';\r\n            };\r\n            this.inResizeArea(e, cursorFunc);\r\n            if (this.table.tHead.style.cursor !== newStyle) {\r\n                this.table.tHead.style.cursor = newStyle;\r\n            }\r\n\r\n            var ctx = this.resizeContext;\r\n            if ($.isNull(ctx)) {\r\n                return;\r\n            }\r\n\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n\r\n            var newColWidth = Math.max(ctx.initColWidth + e.clientX - ctx.initX, this.opts.columnMinWidth);\r\n            this.table.tHead.style.width = this.table.style.width = (ctx.initTblWidth + (newColWidth - ctx.initColWidth)) + 'px';\r\n            $.get('.table-column-group', this.content).children[ctx.colIndex].style.width = this.tableHeaderRow.cells[ctx.colIndex].style.width = newColWidth + 'px';\r\n\r\n            if (ctx.layoutTimer === null) {\r\n                var self = this;\r\n                var timerFunc = function() {\r\n                    self.resizeContext.layoutTimer = null;\r\n                    self.updateLayout();\r\n                };\r\n                ctx.layoutTimer = setTimeout(timerFunc, 25);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update column widths and save them.\r\n         */\r\n        onMouseUp: function() {\r\n            var ctx = this.resizeContext;\r\n            if ($.isNull(ctx)) {\r\n                return;\r\n            }\r\n\r\n            if (ctx.layoutTimer !== null) {\r\n                clearTimeout(ctx.layoutTimer);\r\n            }\r\n            this.resizeContext = null;\r\n\r\n            var newTblWidth = this.table.offsetWidth;\r\n            this.width = (newTblWidth / ctx.scrWidth * 100).toFixed(2);\r\n            this.store('width', this.width);\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                this.opts.columns[i].width = (this.pixelToFloat(this.tableHeaderRow.cells[i].style.width) / newTblWidth * 100).toFixed(2);\r\n                this.store(this.opts.columns[i].field + '.width', this.opts.columns[i].width);\r\n            }\r\n\r\n            this.updateLayout();\r\n        },\r\n\r\n        /**\r\n         * Check if the cursor is in the area where the user can click to drag a column.\r\n         * @param {Event} e - Event that triggered the check.\r\n         * @param {Function} callback - Function to run if in the resize area.\r\n         */\r\n        inResizeArea: function(e, callback) {\r\n            var tblX = e.clientX;\r\n            var el;\r\n            for (el = this.table.tHead; el !== null; el = el.offsetParent) {\r\n                tblX -= el.offsetLeft + el.clientLeft - el.scrollLeft;\r\n            }\r\n\r\n            var cellEl = e.target;\r\n            while (cellEl !== this.table.tHead && cellEl !== null) {\r\n                if (cellEl.nodeName === 'TH') {\r\n                    break;\r\n                }\r\n                cellEl = cellEl.parentNode;\r\n            }\r\n\r\n            if (cellEl === this.table.tHead) {\r\n                for (var i = this.tableHeaderRow.cells.length - 1; i >= 0; i--) {\r\n                    cellEl = this.tableHeaderRow.cells[i];\r\n                    if (cellEl.offsetLeft <= tblX) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (cellEl !== null) {\r\n                var x = tblX;\r\n                for (el = cellEl; el !== this.table.tHead; el = el.offsetParent) {\r\n                    if (el === null) {\r\n                        break;\r\n                    }\r\n                    x -= el.offsetLeft - el.scrollLeft + el.clientLeft;\r\n                }\r\n                if (x < 10 && cellEl.cellIndex !== 0) {\r\n                    callback.call(this, cellEl.previousElementSibling);\r\n                } else if (x > cellEl.clientWidth - 10) {\r\n                    callback.call(this, cellEl);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Make column resizing play nice with touch. http://stackoverflow.com/questions/28218888/touch-event-handler-overrides-click-handlers\r\n         * @param {Event} e Event that triggered the handler.\r\n         */\r\n        touchHandler: function(e) {\r\n            var mouseEvent = null;\r\n            var simulatedEvent = document.createEvent('MouseEvent');\r\n            var touch = e.changedTouches[0];\r\n\r\n            switch (e.type) {\r\n                case 'touchstart':\r\n                    mouseEvent = 'mousedown';\r\n                    this.totalDistance = 0;\r\n                    this.lastSeenAt.x = touch.clientX;\r\n                    this.lastSeenAt.y = touch.clientY;\r\n                    break;\r\n                case 'touchmove':\r\n                    mouseEvent = 'mousemove';\r\n                    break;\r\n                case 'touchend':\r\n                    if (this.lastSeenAt.x) {\r\n                        this.totalDistance += Math.sqrt(Math.pow(this.lastSeenAt.y - touch.clientY, 2) + Math.pow(this.lastSeenAt.x - touch.clientX, 2));\r\n                    }\r\n                    mouseEvent = this.totalDistance > 5 ? 'mouseup' : 'click';\r\n                    this.lastSeenAt = { x: null, y: null };\r\n                    break;\r\n            }\r\n\r\n            simulatedEvent.initMouseEvent(mouseEvent, true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);\r\n            touch.target.dispatchEvent(simulatedEvent);\r\n            e.preventDefault();\r\n        },\r\n\r\n        /**\r\n         * Get the value for the field coverted to the correct data type.\r\n         * @param {string} value - Value to convert.\r\n         * @returns {*} Converted value.\r\n         */\r\n        getFieldValue: function(value) {\r\n            if ($.isNull(value)) {\r\n                return null;\r\n            }\r\n            return value.getMonth ? value : value.toLowerCase ? value.toLowerCase() : value;\r\n        },\r\n\r\n        /**\r\n         * Get the formatted value to display for the field.\r\n         * @param {string} value - Value to format.\r\n         * @param {string} dataType - Data type to format to.\r\n         * @returns {*} Converted value.\r\n         */\r\n        getDisplayValue: function(value, dataType) {\r\n            if (!dataType || $.isNull(value)) {\r\n                return value;\r\n            }\r\n\r\n            var val = value;\r\n            if (dataType === 'currency') {\r\n                val = $.accounting.formatMoney(val, this.opts.displayCurrencyFormat);\r\n            } else if (dataType === 'date') {\r\n                val = $.fecha.format(val, this.opts.displayDateFormat);\r\n            }\r\n            return val;\r\n        },\r\n\r\n        /**\r\n         * Default sorting function for the data - resets to order when data was loaded.\r\n         * @param {Object} a - First object to compare.\r\n         * @param {Object} b - Object to compare to.\r\n         * @returns {number} 1 if a comes first, -1 if b comes first, else 0.\r\n         */\r\n        defaultCompare: function(a, b) {\r\n            return a._index > b._index ? 1 : a._index < b._index ? -1 : 0;\r\n        },\r\n\r\n        /**\r\n         * Multi-sorting function for the data.\r\n         * @param {Object} a - First object to compare.\r\n         * @param {Object} b - Object to compare to.\r\n         * @returns {number} 1 if a comes first, -1 if b comes first, else 0.\r\n         */\r\n        compare: function(a, b) {\r\n            var sorting = this.sorting;\r\n            var i = 0, len = sorting.length;\r\n            for (; i < len; i++) {\r\n                var sort = sorting[i];\r\n                var aa = this.getFieldValue(a[sort.field]);\r\n                var bb = this.getFieldValue(b[sort.field]);\r\n\r\n                if (aa === null) {\r\n                    return 1;\r\n                }\r\n                if (bb === null) {\r\n                    return -1;\r\n                }\r\n                if (aa < bb) {\r\n                    return sort.dir === 'ASC' ? -1 : 1;\r\n                }\r\n                if (aa > bb) {\r\n                    return sort.dir === 'ASC' ? 1 : -1;\r\n                }\r\n            }\r\n            return 0;\r\n        },\r\n\r\n        /**\r\n         * Filter an array of objects to find objects where value contains the value of `this`\r\n         * @param {Object} obj - Object to search in.\r\n         * @returns {bool} True if object contains `this`.\r\n         */\r\n        filterArray: function(obj) {\r\n            for (var key in obj) {\r\n                if (key.indexOf('_') < 0 && obj.hasOwnProperty(key) && (obj[key] + '').toLowerCase().indexOf(this) > -1) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Convert a style with 'px' to a float.\r\n         * @param {string} val - CSS style to convert.\r\n         * @returns {number} Numeric value.\r\n         */\r\n        pixelToFloat: function(val) {\r\n            return val.replace('px', '').replace('%', '') * 1.0;\r\n        },\r\n\r\n        /**\r\n         * Build the table header tags.\r\n         * @param {Object} obj - Column to build the tag for.\r\n         * @returns {Object} Mithril TH node.\r\n         */\r\n        tableHeaders: function(obj) {\r\n            var field = obj.field;\r\n            var thAttrs = { class: obj.classes || '' }, divAttrs = {};\r\n\r\n            var divContent = [obj.label || field];\r\n            if ($.isUndefined(obj.sortable) || obj.sortable === true) {\r\n                var val = $.findByKey(this.sorting, 'field', field);\r\n                divContent.push(m('i.float-right.dash', { class: val ? (val.dir === 'ASC' ? 'dash-sort-up' : 'dash-sort-down') : this.opts.editable ? 'dash-sort' : '' }));\r\n                if (this.opts.editable) {\r\n                    divAttrs = { onclick: this.changeSort.bind(this, field, obj.dataType.toLowerCase()) };\r\n                }\r\n            } else {\r\n                thAttrs.class += ' disabled';\r\n            }\r\n            if (this.opts.editable) {\r\n                thAttrs.onmousedown = this.onHeaderMouseDown.bind(this);\r\n            }\r\n            return m('th', thAttrs, [m('div', divAttrs, divContent)]);\r\n        },\r\n\r\n        /**\r\n         * Build the view that actually shows the table.\r\n         * @returns {Object}  Mithril DIV node.\r\n         */\r\n        view: function() {\r\n            return m('.data-table', [\r\n                !this.opts.editable ? m('span#table-items-per-page') :\r\n                    m('.container',\r\n                        m('.columns.form-horizontal.m-2', [\r\n                            m('.col-4',\r\n                                this.opts.searchable ? m('.input-group', [\r\n                                    m('span.input-group-addon', m('i.dash.dash-search.input-group-text')),\r\n                                    m('input.form-input', { type: 'text', oninput: this.setSearchQuery.bind(this), value: this.searchQuery, disabled: this.loading })\r\n                                ]) : null\r\n                            ),\r\n                            m('.col-4', this.opts.headerButtons ? m('.float-right', this.opts.headerButtons) : null),\r\n                            m('.col-4',\r\n                                m('.input-group', [\r\n                                    m('span.input-group-addon', m('span.input-group-text', this.opts.resources.perPage)),\r\n                                    m('select.form-select', {\r\n                                        id: 'table-items-per-page', onchange: this.setItemsPerPage.bind(this),\r\n                                        value: this.itemsPerPage, disabled: this.loading\r\n                                    }, this.pageOptions)\r\n                                ])\r\n                            )\r\n                        ])\r\n                    ),\r\n                m('.table-scrollable', { class: this.opts.editable ? '' : ' table-no-edit' }, [\r\n                    m('.table-area', { onscroll: this.onScroll.bind(this) }, [\r\n                        m('table.table.table-hover.table-sm.table-striped.table-data-table', [\r\n                            m('colgroup.table-column-group', this.colGroups),\r\n                            m('thead', [m('tr', this.opts.columns.map(this.tableHeaders.bind(this)))]),\r\n                            m('tbody', this.tableBodyView())\r\n                        ])\r\n                    ])\r\n                ]),\r\n                this.tableFooterView()\r\n            ]);\r\n        },\r\n\r\n        /**\r\n         * Build a single table cell.\r\n         * @param {Object} obj - Table record to build cell for.\r\n         * @param {number} index - Row index of this row.\r\n         * @param {Object} column - Column to build cell for.\r\n         * @returns {Object} Mithril TD node.\r\n         */\r\n        tableCellView: function(obj, index, column) {\r\n            return m('td', this.columnRenderer[column.field](obj, column, index));\r\n        },\r\n\r\n        /**\r\n         * Build a table row.\r\n         * @param {Object} obj - Table record to build row for.\r\n         * @param {number} index - Row index of this row.\r\n         * @returns {Object} Mithril TR node.\r\n         */\r\n        tableRowView: function(obj, index) {\r\n            return m('tr', { key: obj._index }, this.opts.columns.map(this.tableCellView.bind(this, obj, index)));\r\n        },\r\n\r\n        /**\r\n         * Build the table footer nodes\r\n         * @returns {Object} Mithril TR node(s).\r\n         */\r\n        tableBodyView: function() {\r\n            if (this.loading) {\r\n                return m('tr', m('td', { colspan: this.opts.columns.length }, m('.table-spinner', [\r\n                    m('.rect1', ''), m('.rect2', ''), m('.rect3', ''), m('.rect4', ''), m('.rect5', '')\r\n                ])));\r\n            }\r\n            if (this.loadingError) {\r\n                return m('tr.table-loading-error', m('td', { colspan: this.opts.columns.length }, [\r\n                    m('.table-loading-error-message', this.opts.resources.loadingError),\r\n                    m('.btn.btn-info', { onclick: this.refresh.bind(this) }, this.opts.resources.tryAgain)\r\n                ]));\r\n            }\r\n            if (this.filteredTotal === 0) {\r\n                return m('tr', [m('td', { colspan: this.opts.columns.length }, this.opts.resources.noData)]);\r\n            }\r\n            return this.results.map(this.tableRowView.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Build the table footer nodes.\r\n         * @returns {Object} Mithril DIV node.\r\n         */\r\n        tableFooterView: function() {\r\n            if (this.loading || this.loadingError) {\r\n                return null;\r\n            }\r\n\r\n            var currentPage = (this.currentStartItem + this.itemsPerPage) / this.itemsPerPage;\r\n            if (this.opts.pageDropdown) {\r\n                // limit page dropdown to 10000 options\r\n                var max = Math.min(this.pageTotal, 10000);\r\n                var optionList = [max], i = max;\r\n                while (i > 0) {\r\n                    optionList[i] = m('option', { value: i }, i);\r\n                    --i;\r\n                }\r\n            }\r\n\r\n            var res = this.opts.resources;\r\n            return m('.container', m('.columns.m-2', [\r\n                m('.col-4.btn-toolbar', { class: this.filteredTotal > this.itemsPerPage ? '' : ' invisible' }, [\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.firstPage, onclick: this.moveToPage.bind(this, -1, true)\r\n                    }, m('i.dash.dash-to-start-alt.text-primary')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.previousPage, onclick: this.moveToPage.bind(this, -1, false)\r\n                    }, m('i.dash.dash-to-start.text-primary')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.nextPage, onclick: this.moveToPage.bind(this, 1, false)\r\n                    }, m('i.dash.dash-to-end.text-primary')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.lastPage, onclick: this.moveToPage.bind(this, 1, true)\r\n                    }, m('i.dash.dash-to-end-alt.text-primary'))\r\n                ]),\r\n                m('.col-4', { class: this.filteredTotal > this.itemsPerPage ? '' : ' invisible' },\r\n                    !this.opts.pageDropdown ? null : m('.col-8.offset-2',\r\n                        m('.input-group', [\r\n                            m('span.input-group-addon', m('span.input-group-text', res.page)),\r\n                            m('select.form-select', { onchange: this.changePage.bind(this), value: currentPage }, optionList)\r\n                        ])\r\n                    )\r\n                ),\r\n                m('.col-4.text-right.my-auto', res.showing\r\n                    .replace('{0}', Math.min(this.currentStartItem + 1, this.filteredTotal))\r\n                    .replace('{1}', Math.min(this.currentStartItem + this.itemsPerPage, this.filteredTotal))\r\n                    .replace('{2}', this.filteredTotal)\r\n                )\r\n            ]));\r\n        },\r\n\r\n        /**\r\n         * Render the view.\r\n         */\r\n        run: function() {\r\n            var self = this;\r\n            if (!this.data) {\r\n                self.loadData();\r\n            }\r\n            m.mount(self.content, {\r\n                view: self.view.bind(self),\r\n                onupdate: function() {\r\n                    self.setLayout();\r\n                    self.updateLayout();\r\n                    $.dialogs.processContent(self.table);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    return Table;\r\n});\r\n","/*!\r\n * Wraps functionality needed for creating charts using Chart.js.\r\n */\r\n(function(root, factory) {\r\n    root.DashChart = factory(root.$, root.Alertify, root.Chart);\r\n})(this, function($, Alertify, Chart) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare DashChart class.\r\n     * @param {Node} content - DOM node that contains the chart.\r\n     * @param {Node} canvas - Canvas element to display the chart in.\r\n     * @param {bool} showLegend - Show or hide the chart legend.\r\n     * @param {Function} dataFn - Function to call if after loading data. Runs before other functions.\r\n     * @param {Function} errorFn - Function to call if an error occurs loading data.\r\n     * @param {Function} toggleExportFn - Function to enable/disable export.\r\n     */\r\n    var DashChart = function(content, showLegend, dataFn, errorFn, toggleExportFn) {\r\n        this.content = content;\r\n        this.url = content.getAttribute('data-url');\r\n        this.canvas = $.get('.chart-canvas', content);\r\n        this.showLegend = $.coalesce(showLegend, true);\r\n        this.dataFn = dataFn;\r\n        this.errorFn = errorFn;\r\n        this.toggleExportFn = toggleExportFn;\r\n        this.chart = null;\r\n        this.run();\r\n    };\r\n\r\n    /**\r\n     * Declare DashChart class methods.\r\n     */\r\n    DashChart.prototype = {\r\n        /**\r\n         * Generate a random number within range.\r\n         * @param {number[]} range - Min and max value.\r\n         * @returns {number} Random number.\r\n         */\r\n        randomWithin: function(range) {\r\n            return Math.floor(range[0] + Math.random() * (range[1] + 1 - range[0]));\r\n        },\r\n\r\n        /**\r\n         * Generates a random color and a lighter partner color.\r\n         * @returns {string[]} Color codes.\r\n         */\r\n        randomColor: function() {\r\n            var hsl = [this.randomWithin([0, 360]), this.randomWithin([50, 100]), this.randomWithin([30, 80])];\r\n            return [\r\n                'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%, 1)',\r\n                'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%, .2)'\r\n            ];\r\n        },\r\n\r\n        /**\r\n         * Generates an array of random colors.\r\n         * @param {number} cnt - Number of colors to generate.\r\n         * @returns {string[]} Array of color codes.\r\n         */\r\n        randomColors: function(cnt) {\r\n            var result = new Array(cnt);\r\n            for (var i = 0; i < cnt; i++) {\r\n                result[i] = this.randomColor()[0];\r\n            }\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Parse a hex color into a hsla color and a lighter partner color.\r\n         * @param {string} hex - Hex color code with leading '#'.\r\n         * @returns {string[]} Color codes.\r\n         */\r\n        parseColor: function(hex) {\r\n            if (!hex) {\r\n                return this.randomColor();\r\n            }\r\n            var hsl = $.colors.rgb2hsl($.colors.hex2rgb(hex));\r\n            return [\r\n                'hsla(' + (hsl[0] * 360).toFixed(0) + ',' + (hsl[1] * 100).toFixed(0) + '%,' + (hsl[2] * 100).toFixed(0) + '%, 1)',\r\n                'hsla(' + (hsl[0] * 360).toFixed(0) + ',' + (hsl[1] * 100).toFixed(0) + '%,' + (hsl[2] * 100).toFixed(0) + '%, .2)'\r\n            ];\r\n        },\r\n\r\n        /**\r\n         * Build the chart.\r\n         */\r\n        run: function() {\r\n            var self = this;\r\n\r\n            $.show($.get('.chart-spinner', self.content));\r\n            $.hide($.get('.chart-error', self.content));\r\n            $.hide(self.canvas);\r\n            if (self.toggleExportFn) {\r\n                self.toggleExportFn(false);\r\n            }\r\n\r\n            $.ajax({\r\n                method: 'POST',\r\n                url: self.url,\r\n                block: false\r\n            }, function(data) {\r\n                if ($.isFunction(self.dataFn)) {\r\n                    if (!self.dataFn(data)) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                var ranges = $.isArray(data.ranges) ? data.ranges : [data];\r\n                if (!ranges.some(function(x) { return x.rows && x.rows.length; })) {\r\n                    $.hide($.get('.chart-spinner', self.content));\r\n                    Alertify.error($.resx('chart.noData'));\r\n                    return;\r\n                }\r\n\r\n                $.hide($.get('.chart-spinner', self.content));\r\n                $.hide($.get('.chart-error', self.content));\r\n                $.show(self.canvas);\r\n                if (self.toggleExportFn) {\r\n                    self.toggleExportFn(true);\r\n                }\r\n\r\n                if (self.chart) {\r\n                    // this code is used for refreshing dashboard chart data, but won't be used on the chart dialog\r\n                    ranges.forEach(function(x, i) {\r\n                        self.chart.data.datasets[i].data = ranges[i].rows;\r\n                        self.chart.data.datasets[i].label = ranges[i].yTitle;\r\n                    });\r\n                    self.chart.data.labels = ranges[0].labels;\r\n                    self.chart.update();\r\n                } else {\r\n                    var scales = {};\r\n                    var tooltips = { callbacks: {} };\r\n                    if (ranges[0].xType === 'currency') {\r\n                        var currencyFormat = $.accounting.parseFormat(ranges[0].currencyFormat);\r\n                        scales.xAxes = [{\r\n                            ticks: {\r\n                                callback: function(value) {\r\n                                    return $.accounting.formatMoney(value, currencyFormat);\r\n                                }\r\n                            }\r\n                        }];\r\n                        tooltips.callbacks.title = function(tooltipItems, data) {\r\n                            var title = '';\r\n                            if (tooltipItems.length > 0) {\r\n                                if (tooltipItems[0].xLabel) {\r\n                                    title = tooltipItems[0].xLabel;\r\n                                } else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n                                    title = data.labels[tooltipItems[0].index];\r\n                                }\r\n                                title = $.accounting.formatMoney(title, currencyFormat);\r\n                            }\r\n                            return title;\r\n                        };\r\n                    } else if (ranges[0].xType === 'date') {\r\n                        var dateFormat = ranges[0].dateFormat;\r\n                        scales.xAxes = [{\r\n                            ticks: {\r\n                                callback: function(value) {\r\n                                    return $.fecha.format(new Date(value), dateFormat);\r\n                                }\r\n                            }\r\n                        }];\r\n                        tooltips.callbacks.title = function(tooltipItems, data) {\r\n                            var title = '';\r\n                            if (tooltipItems.length > 0) {\r\n                                if (tooltipItems[0].xLabel) {\r\n                                    title = tooltipItems[0].xLabel;\r\n                                } else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n                                    title = data.labels[tooltipItems[0].index];\r\n                                }\r\n                                title = $.fecha.format(new Date(title), dateFormat);\r\n                            }\r\n                            return title;\r\n                        };\r\n                    }\r\n\r\n                    var chartType = data.type.toLowerCase();\r\n                    var isRadial = chartType === 'pie' || chartType === 'doughnut';\r\n                    var datasets = [];\r\n                    scales.yAxes = [];\r\n                    ranges.forEach(function(x, i) {\r\n                        var color = self.parseColor(x.color);\r\n                        datasets.push({\r\n                            backgroundColor: color[0],\r\n                            borderColor: 'rgb(255, 255, 255)',\r\n                            borderWidth: 2,\r\n                            data: x.rows,\r\n                            label: x.yTitle,\r\n                            yAxisID: 'y-axis-' + i\r\n                        });\r\n\r\n                        var ticks = {};\r\n                        if (x.yType === 'currency') {\r\n                            var currencyFormat = $.accounting.parseFormat(x.currencyFormat);\r\n                            ticks.callback = function(value) {\r\n                                return $.accounting.formatMoney(value, currencyFormat);\r\n                            };\r\n                            tooltips.callbacks.label = function(item) {\r\n                                return $.accounting.formatMoney(item.yLabel, currencyFormat);\r\n                            };\r\n                        } else if (x.yType === 'date') {\r\n                            var dateFormat = x.dateFormat;\r\n                            ticks.callback = function(value) {\r\n                                return $.fecha.format(new Date(value), dateFormat);\r\n                            };\r\n                            tooltips.callbacks.label = function(item) {\r\n                                return $.fecha.format(new Date(item.yLabel), dateFormat);\r\n                            };\r\n                        }\r\n\r\n                        if (!isRadial) {\r\n                            scales.yAxes.push({\r\n                                id: 'y-axis-' + i,\r\n                                position: i === 0 ? 'left' : 'right',\r\n                                ticks: ticks,\r\n                                gridLines: {\r\n                                    color: color[1]\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    var chartData = {\r\n                        type: chartType === 'horizontalbar' ? 'horizontalBar' : chartType,\r\n                        options: {\r\n                            responsive: true,\r\n                            scales: isRadial ? null : scales,\r\n                            tooltips: tooltips,\r\n                            legend: { display: self.showLegend }\r\n                        },\r\n                        data: {\r\n                            labels: ranges[0].labels,\r\n                            datasets: datasets\r\n                        }\r\n                    };\r\n\r\n                    if (isRadial) {\r\n                        chartData.data.datasets[0].backgroundColor = self.randomColors(ranges[0].rows.length);\r\n                    }\r\n\r\n                    self.chart = new Chart(self.canvas.getContext('2d'), chartData);\r\n                }\r\n            }, function() {\r\n                if ($.isFunction(self.errorFn)) {\r\n                    if (!self.errorFn()) {\r\n                        return;\r\n                    }\r\n                }\r\n                $.hide($.get('.chart-spinner', self.content));\r\n                $.show($.get('.chart-error', self.content));\r\n                if (self.toggleExportFn) {\r\n                    self.toggleExportFn(false);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Destroy the chart.\r\n         */\r\n        destroy: function() {\r\n            $.destroy(this.chart);\r\n        }\r\n    };\r\n\r\n    return DashChart;\r\n});\r\n","/*!\r\n * Mithril based form component. For repetitive form elements.\r\n */\r\n(function(root, factory) {\r\n    root.Form = factory(root.m, root.$, root.Alertify, root.Help);\r\n})(this, function(m, $, Alertify, Help) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare form class.\r\n     * @param {Object} opts - Form settings\r\n     * @param {Object[]} records - Array of objects the form will display/update.\r\n     */\r\n    function Form(opts, records) {\r\n        opts = opts || {};\r\n        this.opts = $.extend({\r\n            container: null,\r\n            id: null,\r\n            columns: null,\r\n            wantsHelp: false,\r\n            appendRecord: false,\r\n            resx: {\r\n                deleteRecord: $.resx('delete'),\r\n                confirmDelete: $.resx('confirmDelete'),\r\n                confirmDeleteAll: $.resx('confirmDeleteAll'),\r\n                areYouSure: $.resx('areYouSure'),\r\n                moveUp: $.resx('moveUp'),\r\n                moveDown: $.resx('moveDown'),\r\n                help: $.resx('help')\r\n            }\r\n        }, opts);\r\n\r\n        this.container = $.get(this.opts.container);\r\n        this.records = $.isArray(records) ? records.map(function(x, i) { x._index = i; return x; }) : [];\r\n        this.addedCount = 0;\r\n        this.changed = false;\r\n    }\r\n\r\n    Form.prototype = {\r\n        /**\r\n         * Get the value of an element.\r\n         * @param {*} e - Event that triggered the value change, or the new value.\r\n         * @returns {string} Value of the element.\r\n         */\r\n        targetVal: function(e) {\r\n            return e && e.target ? e.target.value : e;\r\n        },\r\n\r\n        /**\r\n         * Set the value of a field on a record.\r\n         * @param {number} index - Record index.\r\n         * @param {string} field - Name of field to set.\r\n         * @param {Event} e - Event that triggered the change.\r\n         * @returns {bool} True if value changed, else false.\r\n         */\r\n        set: function(index, field, e) {\r\n            var val = this.targetVal(e);\r\n            if (this.opts.columns[field].type === 'int') {\r\n                val = $.isNull(val) ? null : val * 1;\r\n            }\r\n\r\n            if ($.isFunction(this.opts.columns[field].setter)) {\r\n                this.opts.columns[field].setter.call(this, index, field, e);\r\n            } else {\r\n                if (this.records[index][field] !== val) {\r\n                    this.records[index][field] = val;\r\n                    this.changed = true;\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Add a new record.\r\n         */\r\n        addRecord: function() {\r\n            --this.addedCount;\r\n            var obj = $.clone(this.opts.newRecord);\r\n            obj._index = this.addedCount;\r\n            if (this.opts.appendRecord) {\r\n                this.records.push(obj);\r\n            } else {\r\n                this.records.unshift(obj);\r\n            }\r\n            this.changed = true;\r\n        },\r\n\r\n        /**\r\n         * Delete a record.\r\n         * @param {number} index - Record index to delete.\r\n         * @param {Event} e - Event that triggered the delete.\r\n         */\r\n        deleteRecord: function(index, e) {\r\n            var self = this;\r\n            if ($.isFunction(this.opts.deleteFn)) {\r\n                this.opts.deleteFn.call(this, index, e);\r\n            } else {\r\n                // timeout prevents hitting enter on the button to trigger this confirmation from confirming it immediately\r\n                setTimeout(function() {\r\n                    Alertify.confirm(self.opts.resx.areYouSure, function(e) {\r\n                        self.records.splice(index, 1);\r\n                        if ($.isFunction(self.opts.afterDeleteFn)) {\r\n                            self.opts.afterDeleteFn.call(self, index, e);\r\n                        }\r\n                        self.changed = true;\r\n                        self.run();\r\n                    });\r\n                }, 100);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Delete all records.\r\n         */\r\n        deleteAllRecords: function() {\r\n            var self = this;\r\n            setTimeout(function() {\r\n                Alertify.confirm(self.opts.resx.areYouSure, function() {\r\n                    self.records = [];\r\n                    self.changed = true;\r\n                    self.run();\r\n                });\r\n            }, 100);\r\n        },\r\n\r\n        /**\r\n         * Move a record up in the record list.\r\n         * @param {number} index - Index of record to move up.\r\n         */\r\n        moveUp: function(index) {\r\n            var t = this.records[index - 1];\r\n            if (t) {\r\n                this.records[index - 1] = this.records[index];\r\n                this.records[index] = t;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Move a record down in the record list.\r\n         * @param {number} index - Index of record to move down.\r\n         */\r\n        moveDown: function(index) {\r\n            var t = this.records[index + 1];\r\n            if (t) {\r\n                this.records[index + 1] = this.records[index];\r\n                this.records[index] = t;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check if there are any records.\r\n         * @returns {bool} True if there are any records, else false.\r\n         */\r\n        hasRecords: function() {\r\n            return this.records && this.records.length > 0;\r\n        },\r\n\r\n        /**\r\n         * Trigger the click event if the enter or space key is hit.\r\n         * @param {Event} e - Event that triggered this.\r\n         */\r\n        keyInput: function(e) {\r\n            if (e && e.keyCode && (e.keyCode === 13 || e.keyCode === 32)) {\r\n                e.target.onclick.call(this, e);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Create the mithril node to show help wrapped around the provided content.\r\n         * @param {string} helpBody - Content of the help dialog.\r\n         * @param {Object} innerContent - Mithril node for the input that help is for.\r\n         * @returns {Object} Mithril node for input-group if help is enabled, else innerContent.\r\n         */\r\n        withHelp: function(helpBody, innerContent) {\r\n            return m(Help, { message: helpBody, enabled: this.opts.wantsHelp }, innerContent);\r\n        },\r\n\r\n        /**\r\n         * Return the error class if the value isn't valid.\r\n         * @param {string|number} value - Value to check against.\r\n         * @param {bool} requirePositive - Require the value be a positive number.\r\n         * @param {bool} isDate - Check if the value is a valid date.\r\n         * @returns {string}  Error class name if value isn't set, else empty string.\r\n         */\r\n        withError: function(value, requirePositive, isDate) {\r\n            requirePositive = $.coalesce(requirePositive, false);\r\n            isDate = $.coalesce(isDate, false);\r\n            var result = isDate ? $.fecha.parse(value, this.opts.dateFormat) : $.hasValue(value) && (!requirePositive || $.hasPositiveValue(value));\r\n            return result ? '' : ' mform-control-error';\r\n        },\r\n\r\n        /**\r\n         * Add a disabled attribute to the input attributes if isDisabled=true.\r\n         * @param {Object} attrs - Attribute object to update.\r\n         * @param {bool} isDisabled - Is the input diabled or not.\r\n         * @returns {Object} Updated attribute object.\r\n         */\r\n        withDisabled: function(attrs, isDisabled) {\r\n            if (isDisabled) {\r\n                attrs.disabled = true;\r\n            }\r\n            return attrs;\r\n        },\r\n\r\n        /**\r\n         * Add a checked attribute to the input attributes if isChecked=true.\r\n         * @param {Object} attrs - Attribute object to update.\r\n         * @param {bool} isChecked - Is the input checked or not.\r\n         * @returns {Object} Updated attribute object.\r\n         */\r\n        withChecked: function(attrs, isChecked) {\r\n            if (isChecked) {\r\n                attrs.checked = true;\r\n            }\r\n            return attrs;\r\n        },\r\n\r\n        /**\r\n         * Build list of options nodes.\r\n         * @param {Object[]} arr - Array of objects to build options for.\r\n         * @param {*} selectedValue - Value of the selected option. Can be a string, number, or array of either.\r\n         * @param {string} valueKey - Object key that stores the value of the option.\r\n         * @param {string} textKey - Object key that stores the text for the option.\r\n         * @returns {Object[]} Array of mithril option nodes.\r\n         */\r\n        withOptions: function(arr, selectedValue, valueKey, textKey) {\r\n            if (!$.isArray(arr)) {\r\n                return null;\r\n            }\r\n            return arr.map(function(x) {\r\n                var attr = { value: x[valueKey] === 0 ? '' : x[valueKey] };\r\n                if (x[valueKey] === 0) {\r\n                    attr.disabled = true;\r\n                }\r\n                if (x[valueKey] === selectedValue || ($.isArray(selectedValue) && selectedValue.indexOf(x[valueKey]) > -1)) {\r\n                    attr.selected = true;\r\n                }\r\n                return m('option', attr, x[textKey]);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Create the mithril node for the record buttons (move up/move down/delete).\r\n         * @param {number} index - Index of the record to create buttons for.\r\n         * @param {bool} includeMove - Optionally include the move up/down buttons.\r\n         * @returns {Object} Mithril node with buttons.\r\n         */\r\n        buttonView: function(index, includeMove) {\r\n            var btns = [];\r\n            if ($.coalesce(includeMove, false)) {\r\n                btns.push(m('button.btn.btn-sm.btn-secondary', {\r\n                    type: 'button', role: 'button', disabled: index < 1,\r\n                    onclick: this.moveUp.bind(this, index), title: this.opts.resx.moveUp\r\n                }, m('i.dash.dash-up-big.dash-lg.dash-fw'))\r\n                );\r\n                btns.push(m('button.btn.btn-sm.btn-secondary', {\r\n                    type: 'button', role: 'button', disabled: index === this.records.length - 1,\r\n                    onclick: this.moveDown.bind(this, index), title: this.opts.resx.moveDown\r\n                }, m('i.dash.dash-down-big.dash-lg.dash-fw'))\r\n                );\r\n            }\r\n            btns.push(m('button.btn.btn-sm.btn-secondary.confirm-delete-row-button', {\r\n                type: 'button', role: 'button', onclick: this.deleteRecord.bind(this, index), title: this.opts.resx.deleteRecord\r\n            }, m('i.dash.dash-trash.dash-lg.text-error')));\r\n            return m('.btn-toolbar.float-right', btns);\r\n        },\r\n\r\n        /**\r\n         * Clean up our mess.\r\n         */\r\n        destroy: function() {\r\n            m.mount(this.container, null);\r\n        },\r\n\r\n        /**\r\n         * Build the view that actually shows the form. This is meant to be overridden.\r\n         * @returns {Object}  Mithril DIV node.\r\n         */\r\n        view: function() {\r\n            return m('div');\r\n        },\r\n\r\n        /**\r\n         * Render the view.\r\n         */\r\n        run: function() {\r\n            var self = this;\r\n            m.mount(self.container, {\r\n                view: self.view.bind(self)\r\n            });\r\n        }\r\n    };\r\n\r\n    return Form;\r\n});\r\n","/*!\r\n * Wraps dataset join form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.JoinForm = factory(root.m, root.$, root.Form, root.Autocomplete, root.Help);\r\n})(this, function(m, $, Form, Autocomplete, Help) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the join form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function JoinForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.join-table-wrapper', opts.content),\r\n            columns: {\r\n                joinTypeId: { type: 'int' },\r\n                tableName: { type: 'str' },\r\n                keys: { type: 'str' }\r\n            },\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, tableName: '', joinTypeId: 1, keys: null },\r\n            afterDeleteFn: opts.columnUpdateFn\r\n        }, opts.joins || []);\r\n\r\n        this.joinTypes = opts.joinTypes;\r\n        this.sourceFn = opts.sourceFn;\r\n        this.columnUpdateFn = opts.columnUpdateFn;\r\n    }\r\n\r\n    JoinForm.prototype = Object.create(Form.prototype);\r\n    JoinForm.prototype.constructor = JoinForm;\r\n\r\n    /**\r\n     * Set the table name for the join record, and update the column list.\r\n     * @param {number} index - Index of the record to update.\r\n     * @param {string} value - New table name value\r\n     */\r\n    JoinForm.prototype.setJoinTable = function(index, value) {\r\n        this.set(index, 'tableName', value);\r\n        this.columnUpdateFn();\r\n    };\r\n\r\n    /**\r\n     * Create the view for the joins tab.\r\n     * @returns {Object} Mithril node containing the join form.\r\n     */\r\n    JoinForm.prototype.view = function() {\r\n        var self = this;\r\n\r\n        if (self.isProc) {\r\n            return m('.table-wrapper.p-t-1.col-12', m('.card.bg-info.text-white', m('.card-body', $.resx('dataset.errorProcNoJoins'))));\r\n        }\r\n\r\n        return m('.table-wrapper', [\r\n            m('.columns.wrapper-row.pb-1',\r\n                m('.col-12', m('.text-right', [\r\n                    m('button.btn.btn-info.mr-2', { type: 'button', role: 'button', onclick: self.addRecord.bind(self) }, $.resx('add')),\r\n                    m(Help, { enabled: this.opts.wantsHelp, message: $.resx('dataset.joinsText') })\r\n                ]))\r\n            ),\r\n            self.records.map(function(record, index) {\r\n                return m('.columns.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: record._index }, [\r\n                    m('input', { type: 'hidden', name: 'DatasetJoin[' + index + '].Id', value: record.id }),\r\n                    m('input', { type: 'hidden', name: 'DatasetJoin[' + index + '].JoinOrder', value: index }),\r\n                    m('.col-3', self.withHelp($.resx('dataset.joinTableText'), m(Autocomplete, {\r\n                        name: 'DatasetJoin[' + index + '].TableName',\r\n                        required: true,\r\n                        placeholder: $.resx('dataset.joinTableName'),\r\n                        value: record.tableName,\r\n                        list: self.sourceFn,\r\n                        onSelect: self.setJoinTable.bind(self, index),\r\n                        onCancel: self.setJoinTable.bind(self, index),\r\n                    }))),\r\n                    m('.col-2', self.withHelp($.resx('dataset.joinTypeText'),\r\n                        m('select.form-select.required', {\r\n                            name: 'DatasetJoin[' + index + '].JoinTypeId', class: self.withError(record.joinTypeId),\r\n                            placeholder: $.resx('dataset.joinType'), oninput: self.set.bind(self, index, 'joinTypeId'), value: record.joinTypeId\r\n                        }, self.withOptions(self.joinTypes, record.joinTypeId, 'id', 'name'))\r\n                    )),\r\n                    m('.col-5', self.withHelp($.resx('dataset.joinKeysText'),\r\n                        m('input.form-input.required', {\r\n                            type: 'text', name: 'DatasetJoin[' + index + '].Keys', class: self.withError(record.keys),\r\n                            placeholder: $.resx('dataset.joinKeys'), oninput: self.set.bind(self, index, 'keys'), value: record.keys\r\n                        }))\r\n                    ),\r\n                    m('.col-2', self.buttonView.call(self, index, true))\r\n                ]);\r\n            })\r\n        ]);\r\n    };\r\n\r\n    return JoinForm;\r\n});\r\n","/*!\r\n * Wraps dataset column form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.ColumnForm = factory(root.m, root.$, root.Alertify, root.Form, root.Autocomplete, root.Help);\r\n})(this, function(m, $, Alertify, Form, Autocomplete, Help) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Sort columns by title.\r\n     * @param {Object} a - First column to compare.\r\n     * @param {Object} b - Second column to compare.\r\n     * @returns {bool} True if column a should be before column b.\r\n     */\r\n    var columnTitleSort = function(a, b) {\r\n        var aTitle = a.title.toLowerCase(), bTitle = b.title.toLowerCase();\r\n        return aTitle > bTitle ? 1 : (bTitle > aTitle ? -1 : 0);\r\n    };\r\n\r\n    /**\r\n     * Build the column form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function ColumnForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.column-table-wrapper', opts.content),\r\n            columns: {\r\n                title: { type: 'str' },\r\n                columnName: { type: 'str' },\r\n                dataTypeId: { type: 'int' },\r\n                derived: { type: 'str' },\r\n                filterTypeId: { type: 'int' },\r\n                filterQuery: { type: 'str' },\r\n                link: { type: 'str' },\r\n                isParam: { type: 'int' }\r\n            },\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, title: null, columnName: '', dataTypeId: '', derived: null, filterTypeId: '', filterQuery: null, link: null, isParam: 0, isExpanded: true }\r\n        }, opts.columns || []);\r\n\r\n        this.content = opts.content;\r\n        this.dataTypes = opts.dataTypes;\r\n        this.filterTypes = opts.filterTypes;\r\n        this.sourceFn = opts.sourceFn;\r\n        this.columnFn = opts.columnFn;\r\n        this.selectedSourceFn = opts.selectedSourceFn;\r\n    }\r\n\r\n    ColumnForm.prototype = Object.create(Form.prototype);\r\n    ColumnForm.prototype.constructor = ColumnForm;\r\n\r\n    /**\r\n     * Expand/collapse the fields for a column.\r\n     * @param {Object} column - The column record to expand/collapse.\r\n     */\r\n    ColumnForm.prototype.toggleExpanded = function(column) {\r\n        column.isExpanded = !column.isExpanded;\r\n    };\r\n\r\n    /**\r\n     * Check if the database and primary source are set.\r\n     * @returns {bool} True if a database and a primary source are provided, else false.\r\n     */\r\n    ColumnForm.prototype.checkStatus = function() {\r\n        var database = $.get('.dataset-database', this.content);\r\n        if (!(database && $.hasPositiveValue(database.value))) {\r\n            Alertify.error($.resx('dataset.importErrorDatabaseRequired'));\r\n            return false;\r\n        }\r\n        var primarySource = $.get('.primary-source-autocomplete', this.content);\r\n        if (!(primarySource && primarySource.value)) {\r\n            Alertify.error($.resx('dataset.importErrorPrimarySourceRequired'));\r\n            return false;\r\n        }\r\n        var type = $.get('.dataset-type', this.content);\r\n        if (type && type.value * 1 === 2) {\r\n            Alertify.error($.resx('dataset.importErrorNoProcs'));\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Import columns for the selected tables into the dataset.\r\n     * @param {Event} e - Event that triggered this.\r\n     */\r\n    ColumnForm.prototype.importColumns = function(e) {\r\n        var form = this.content;\r\n        if (!($.hasClass(form, 'dataset-form') && this.checkStatus())) {\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        var database = $.get('.dataset-database');\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-import-url'),\r\n            data: { databaseId: database.value, sources: self.selectedSourceFn() }\r\n        }, function(data) {\r\n            if (!data.columns || data.columns.length === 0) {\r\n                Alertify.error($.resx('dataset.importErrorNoColumns'));\r\n                return;\r\n            }\r\n\r\n            var newColumns = {};\r\n            data.columns.forEach(function(x) {\r\n                newColumns[x.columnName.toLowerCase()] = x;\r\n            });\r\n\r\n            var newRecords = [];\r\n            var existingColumns = [];\r\n            self.records.forEach(function(x) {\r\n                var colName = x.columnName.toLowerCase();\r\n                if (newColumns[colName]) {\r\n                    // record matches - update datatype and add to new list\r\n                    x.dataTypeId = newColumns[colName].dataTypeId;\r\n                    newRecords.push(x);\r\n                    existingColumns.push(colName);\r\n                }\r\n            });\r\n\r\n            data.columns.forEach(function(x) {\r\n                // now add any new columns from server\r\n                if (existingColumns.indexOf(x.columnName.toLowerCase()) === -1) {\r\n                    newRecords.push(x);\r\n                }\r\n            });\r\n\r\n            newRecords.sort(columnTitleSort);\r\n            self.records = newRecords;\r\n\r\n            Alertify.success($.resx('dataset.importSuccess'));\r\n            $.dialogs.focusOnClose.call(e);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Open the confirmation before importing columns.\r\n     * @param {Event} e - Event that triggered this.\r\n     */\r\n    ColumnForm.prototype.import = function(e) {\r\n        if (this.checkStatus()) {\r\n            Alertify.confirm($.resx('dataset.confirmImport'), this.importColumns.bind(this, e), $.dialogs.focusOnClose.bind(e));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Create the node for the column form.\r\n     * @returns {Object} Mithril node containing the form.\r\n     */\r\n    ColumnForm.prototype.view = function() {\r\n        var self = this;\r\n        return m('.table-wrapper', [\r\n            m('.columns.wrapper-row.pb-1',\r\n                m('.col-12',\r\n                    m('.text-right', [\r\n                        m('button.btn.btn-info.mr-2', {\r\n                            type: 'button', role: 'button', onclick: self.addRecord.bind(self)\r\n                        }, $.resx('add')),\r\n                        m('button.btn.btn-error.mr-2', {\r\n                            type: 'button', role: 'button', onclick: self.import.bind(self)\r\n                        }, $.resx('dataset.import')),\r\n                        m(Help, { enabled: this.opts.wantsHelp, message: $.resx('dataset.columnsText') })\r\n                    ])\r\n                )\r\n            ),\r\n            self.records.map(function(record, index) {\r\n                return m('.col-12.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: record._index }, [\r\n                    m('.columns', [\r\n                        m('input', { type: 'hidden', name: 'DatasetColumn[' + index + '].Id', value: record.id }),\r\n                        m('.col-4', self.withHelp($.resx('dataset.columnTitleText'), [\r\n                            m('span.input-group-addon.input-group-custom', m('button.btn.btn-secondary', {\r\n                                type: 'button', role: 'button',\r\n                                onclick: self.toggleExpanded.bind(self, record)\r\n                            }, m('i.dash.text-primary', { class: record.isExpanded ? 'dash-minus' : 'dash-plus' }))),\r\n                            m('input.form-input.required', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].Title', class: self.withError(record.title),\r\n                                placeholder: $.resx('dataset.columnTitle'), oninput: self.set.bind(self, index, 'title'), value: record.title\r\n                            }),\r\n                        ])),\r\n                        m('.col-4', self.withHelp($.resx('dataset.columnNameText'), m(Autocomplete, {\r\n                            name: 'DatasetColumn[' + index + '].ColumnName',\r\n                            required: true,\r\n                            placeholder: $.resx('dataset.columnName'),\r\n                            value: record.columnName,\r\n                            list: self.columnFn,\r\n                            onSelect: self.set.bind(self, index, 'columnName')\r\n                        }))),\r\n                        m('.col-3', self.withHelp($.resx('dataset.dataTypeText'),\r\n                            m('select.form-select.required', {\r\n                                name: 'DatasetColumn[' + index + '].DataTypeId', class: self.withError(record.dataTypeId),\r\n                                placeholder: $.resx('dataset.dataType'), oninput: self.set.bind(self, index, 'dataTypeId'), value: record.dataTypeId\r\n                            }, self.withOptions(self.dataTypes, record.dataTypeId, 'id', 'name'))\r\n                        )),\r\n                        m('.col-1', self.buttonView(index, false))\r\n                    ]),\r\n                    m('.columns', { class: record.isExpanded ? '' : ' hidden' },\r\n                        m('.col-10.col-mx-auto', self.withHelp($.resx('dataset.derivedText'),\r\n                            m('input.form-input', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].Derived', placeholder: $.resx('dataset.derived'),\r\n                                oninput: self.set.bind(self, index, 'derived'), value: record.derived\r\n                            })\r\n                        ))\r\n                    ),\r\n                    m('.columns', { class: record.isExpanded ? '' : ' hidden' }, [\r\n                        m('.col-3.col-mx-auto', self.withHelp($.resx('dataset.filterTypeText'),\r\n                            m('select.form-select', {\r\n                                name: 'DatasetColumn[' + index + '].FilterTypeId', class: self.withError(record.filterTypeId),\r\n                                placeholder: $.resx('dataset.filterType'), oninput: self.set.bind(self, index, 'filterTypeId'), value: record.filterTypeId\r\n                            }, self.withOptions(self.filterTypes, record.filterTypeId, 'id', 'name'))\r\n                        )),\r\n                        m('.col-7', self.withHelp($.resx('dataset.queryText'),\r\n                            m('input.form-input', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].FilterQuery', placeholder: $.resx('dataset.query'),\r\n                                oninput: self.set.bind(self, index, 'filterQuery'), value: record.filterQuery, readOnly: record.filterTypeId !== 3\r\n                            }))\r\n                        )\r\n                    ]),\r\n                    m('.columns', { class: record.isExpanded ? '' : ' hidden' }, [\r\n                        m('.col-8.col-mx-auto', self.withHelp($.resx('dataset.linkText'),\r\n                            m('input.form-input', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].Link', placeholder: $.resx('dataset.link'),\r\n                                oninput: self.set.bind(self, index, 'link'), value: record.link\r\n                            })\r\n                        )),\r\n                        m('.col-1', [\r\n                            m('label.form-checkbox', { for: 'DatasetColumn_' + index + '_.IsParam' }, [\r\n                                m('input.custom-control-input', self.withChecked({\r\n                                    type: 'checkbox', name: 'DatasetColumn[' + index + '].IsParam', id: 'DatasetColumn_' + index + '_.IsParam',\r\n                                    oninput: self.set.bind(self, index, 'isParam'), value: 'true'\r\n                                }, record.isParam)),\r\n                                m('i.form-icon'),\r\n                                $.resx('dataset.isParam')\r\n                            ])\r\n                        ]),\r\n                        m('.col-1', m(Help, { enabled: self.opts.wantsHelp, message: $.resx('dataset.isParamText') }))\r\n                    ])\r\n                ]);\r\n            })\r\n        ]);\r\n    };\r\n\r\n    return ColumnForm;\r\n});\r\n","/*!\r\n * Wraps share form functionality. Used for report and chart.\r\n */\r\n(function(root, factory) {\r\n    root.ShareForm = factory(root.m, root.$, root.Form);\r\n})(this, function(m, $, Form) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the share form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function ShareForm(opts) {\r\n        var container = $.get('.share-table-wrapper', opts.content);\r\n        var formOpts = JSON.parse(container.getAttribute('data-json'));\r\n        container.removeAttribute('data-json');\r\n\r\n        Form.call(this, {\r\n            container: container,\r\n            columns: {\r\n                id: { type: 'int' },\r\n                userId: { type: 'int' },\r\n                roleId: { type: 'int' }\r\n            },\r\n            appendRecord: true,\r\n            wantsHelp: formOpts.wantsHelp,\r\n            newRecord: { id: 0, userId: 0, roleId: 0 }\r\n        }, formOpts.shares || []);\r\n\r\n        this.users = formOpts.userList || [];\r\n        this.roles = formOpts.roleList || [];\r\n        this.formName = opts.formName;\r\n    }\r\n\r\n    ShareForm.prototype = Object.create(Form.prototype);\r\n    ShareForm.prototype.constructor = ShareForm;\r\n\r\n    /**\r\n     * Build the user dropdown attributes.\r\n     * @param {Object} share - Share to build the dropdown for.\r\n     * @param {number} index - Index of the share record.\r\n     * @returns {Object} Dropdown attribute object.\r\n     */\r\n    ShareForm.prototype.userSelectAttr = function(share, index) {\r\n        var res = {\r\n            name: this.formName + '[' + index + '].UserId', class: 'form-select' + ($.hasPositiveValue(share.userId) || $.hasPositiveValue(share.roleId) ? '' : ' mform-control-error'),\r\n            placeholder: $.resx('selectUser'), onchange: this.set.bind(this, index, 'userId'), value: share.userId\r\n        };\r\n        if ($.hasPositiveValue(share.roleId)) {\r\n            res['disabled'] = true;\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Build the role dropdown attributes.\r\n     * @param {Object} share - Share to build the dropdown for.\r\n     * @param {number} index - Index of the share record.\r\n     * @returns {Object} Dropdown attribute object.\r\n     */\r\n    ShareForm.prototype.roleSelectAttr = function(share, index) {\r\n        var res = {\r\n            name: this.formName + '[' + index + '].RoleId', class: 'form-select' + ($.hasPositiveValue(share.userId) || $.hasPositiveValue(share.roleId) ? '' : ' mform-control-error'),\r\n            placeholder: $.resx('selectRole'), onchange: this.set.bind(this, index, 'roleId'), value: share.roleId\r\n        };\r\n        if ($.hasPositiveValue(share.userId)) {\r\n            res['disabled'] = true;\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Create the view for the share form.\r\n     * @returns {Object} Mithril node containing the share form.\r\n     */\r\n    ShareForm.prototype.view = function() {\r\n        var self = this;\r\n        return m('.table-wrapper', [\r\n            m('.columns', [\r\n                m('.col-5', m('h5', $.resx('user'))),\r\n                m('.col-5', m('h5', $.resx('role'))),\r\n                m('.col-2')\r\n            ]),\r\n            self.records.map(function(share, index) {\r\n                return m('.columns.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: share._index }, [\r\n                    m('input', { type: 'hidden', name: self.formName + '[' + index + '].Id', value: share.id }),\r\n                    m('.col-5.pr-2',\r\n                        m('select', self.userSelectAttr(share, index), self.withOptions(self.users, share.userId, 'id', 'fullName'))\r\n                    ),\r\n                    m('.col-5',\r\n                        m('select', self.roleSelectAttr(share, index), self.withOptions(self.roles, share.roleId, 'id', 'name'))\r\n                    ),\r\n                    m('.col-2', self.buttonView(index, false))\r\n                ]);\r\n            }),\r\n            m('.columns.pt-1', [\r\n                m('.col-12', [\r\n                    m('.text-right', [\r\n                        m('button.btn.btn-info.mr-2', { type: 'button', role: 'button', onclick: self.addRecord.bind(self) }, $.resx('add')),\r\n                        m('button.btn.btn-warning', {\r\n                            type: 'button', role: 'button', disabled: !self.hasRecords(),\r\n                            onclick: self.hasRecords() ? self.deleteAllRecords.bind(self) : $.noop\r\n                        }, $.resx('deleteAll'))\r\n                    ])\r\n                ])\r\n            ])\r\n        ]);\r\n    };\r\n\r\n    return ShareForm;\r\n});\r\n","/*!\r\n * Wraps report filter form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.FilterForm = factory(root.m, root.$, root.Form, root.Help, root.Alertify, root.DatePicker);\r\n})(this, function(m, $, Form, Help, Alertify, DatePicker) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the filter form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function FilterForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.filter-table-wrapper', opts.content),\r\n            columns: {\r\n                id: { type: 'int' },\r\n                columnId: { type: 'int' },\r\n                operatorId: { type: 'int' },\r\n                criteria: { type: 'str' },\r\n                criteria2: { type: 'str' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, columnId: 0, operatorId: 0, criteria: null, criteria2: null },\r\n            dateFormat: opts.dateFormat\r\n        }, opts.filters || []);\r\n\r\n        this.reportId = opts.reportId;\r\n        this.isProc = opts.isProc;\r\n        this.saveFiltersUrl = opts.saveFiltersUrl;\r\n        this.filterOperators = opts.filterOperators || [];\r\n        this.filterOperatorIds = opts.filterOperatorIds || {};\r\n        this.filterTypes = opts.filterTypes || {};\r\n        this.dateOperators = opts.dateOperators || [];\r\n        this.lookups = opts.lookups || [];\r\n        this.dataTable = opts.dataTable;\r\n        this.columnFn = opts.columnFn;\r\n    }\r\n\r\n    FilterForm.prototype = Object.create(Form.prototype);\r\n    FilterForm.prototype.constructor = FilterForm;\r\n\r\n    /**\r\n     * Build the options select list for the boolean filter.\r\n     */\r\n    FilterForm.prototype.boolOptions = [\r\n        m('option', { value: '' }, $.resx('select')),\r\n        m('option', { value: 1 }, $.resx('report.true')),\r\n        m('option', { value: 0 }, $.resx('report.false'))\r\n    ];\r\n\r\n    /**\r\n     * Set the columnId for a filter and unset the criteria.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered showing the picker.\r\n     */\r\n    FilterForm.prototype.setColumnId = function(index, e) {\r\n        var val = this.targetVal(e) * 1;\r\n        if (this.records[index].columnId !== val) {\r\n            this.records[index].columnId = val;\r\n            this.records[index].operatorId = 0;\r\n            this.records[index].criteria = null;\r\n            this.records[index].criteria2 = null;\r\n            this.run();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the operatorId for a filter and unset the criteria.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered showing the picker.\r\n     */\r\n    FilterForm.prototype.setOperator = function(index, e) {\r\n        this.set(index, 'operatorId', e);\r\n    };\r\n\r\n    /**\r\n     * Set the criteria for a filter.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered the update.\r\n     */\r\n    FilterForm.prototype.setCriteria = function(index, e) {\r\n        var node = e.target;\r\n        if (node && node.nodeName === 'SELECT' && node.hasAttribute('multiple') && node.options) {\r\n            this.records[index].criteriaJson = Array.apply(null, node.options).filter(function(x) { return x.selected; }).map(function(x) { return x.value || x.text; });\r\n        }\r\n        this.set(index, 'criteria', e);\r\n    };\r\n\r\n    /**\r\n     * Set the criteria for a date filter.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {string} field - Name of field to set.\r\n     * @param {Date} val - Date value to save.\r\n     */\r\n    FilterForm.prototype.setDate = function(index, field, val) {\r\n        this.set(index, field, $.fecha.format(val, 'YYYY-MM-DD HH:mm'));\r\n    };\r\n\r\n    /**\r\n     * Save filters to the server then reload the table data.\r\n     */\r\n    FilterForm.prototype.saveFilters = function() {\r\n        if ($.getAll('.mform-control-error', this.container).length > 0) {\r\n            Alertify.error($.resx('fixIt'));\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: 'PUT',\r\n            url: self.saveFiltersUrl,\r\n            data: {\r\n                Id: self.reportId,\r\n                Filters: $.toPascalKeys(self.records)\r\n            }\r\n        }, function(data) {\r\n            if (data) {\r\n                self.changed = false;\r\n                if ($.isArray(data.filters)) {\r\n                    data.filters.forEach(function(x, i) { self.records[i].id = x.id; });\r\n                }\r\n            }\r\n            if (self.dataTable) {\r\n                self.dataTable.loadData();\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Build the criteria input(s) for a filter.\r\n     * @param {number} index - Index of the filter to build.\r\n     * @returns {Object} Mithril node containing the criteria input(s).\r\n     */\r\n    FilterForm.prototype.criteriaView = function(index) {\r\n        var filter = this.records[index];\r\n        var column = $.hasPositiveValue(filter.columnId) ? $.findByKey(this.columnFn(), 'id', filter.columnId) : null;\r\n        if (column === null || !$.hasPositiveValue(filter.operatorId)) {\r\n            return m('input.form-input', { disabled: true, placeholder: $.resx('report.filterCriteria') });\r\n        }\r\n\r\n        var criteria = null;\r\n        var attrs = {\r\n            name: 'ReportFilter[' + index + '].Criteria',\r\n            id: 'ReportFilter_' + index + '_Criteria',\r\n            class: 'form-input required' + this.withError(filter.criteria),\r\n            placeholder: $.resx('report.filterCriteria'),\r\n            oninput: this.setCriteria.bind(this, index)\r\n        };\r\n        if (!this.opts.allowEdit) {\r\n            attrs.disabled = true;\r\n        }\r\n\r\n        if (column.filterTypeId !== this.filterTypes.select) {\r\n            attrs.value = filter.criteria;\r\n        }\r\n        var isRange = filter.operatorId === this.filterOperatorIds.range;\r\n\r\n        switch (column.filterTypeId) {\r\n            case this.filterTypes.boolean:\r\n                attrs.class = 'form-select required' + this.withError(filter.criteria);\r\n                criteria = m('select', attrs, this.boolOptions);\r\n                break;\r\n            case this.filterTypes.date:\r\n                if (filter.operatorId === this.filterOperatorIds.dateInterval) {\r\n                    attrs.class = 'form-select required' + this.withError(filter.criteria);\r\n                    criteria = m('select', attrs, this.withOptions(this.dateOperators, filter.criteria * 1, 'id', 'name'));\r\n                } else {\r\n                    criteria = m(DatePicker, {\r\n                        name: attrs.name, required: true, date: filter.criteria, disabled: !this.opts.allowEdit,\r\n                        onchange: this.setDate.bind(this, index, 'criteria'), format: this.dateFormat,\r\n                        class: isRange ? 'col' : null\r\n                    });\r\n                }\r\n                break;\r\n            case this.filterTypes.select:\r\n                if (filter.operatorId !== this.filterOperatorIds.equal) {\r\n                    attrs.multiple = true;\r\n                } else {\r\n                    attrs.class = 'form-select required' + this.withError(filter.criteria);\r\n                }\r\n\r\n                try {\r\n                    if (filter.criteria.substring(0, 1) === '[') {\r\n                        filter.criteriaJson = JSON.parse(filter.criteria);\r\n                    }\r\n                } catch (e) {\r\n                    // do nothing\r\n                }\r\n\r\n                if (!filter.criteriaJson) {\r\n                    attrs.value = filter.criteria;\r\n                }\r\n\r\n                var lookup = $.isArray(this.lookups[filter.columnId]) ? this.lookups[filter.columnId] : [];\r\n                criteria = m('select', attrs, this.withOptions(lookup, filter.criteriaJson, 'value', 'text'));\r\n                break;\r\n            default:\r\n                attrs.type = column.filterTypeId === this.filterTypes.numeric ? 'number' : 'text';\r\n                criteria = m('input', attrs);\r\n        }\r\n\r\n        if (!isRange) {\r\n            return criteria;\r\n        }\r\n\r\n        var isDatePicker = column.filterTypeId === this.filterTypes.date && filter.operatorId !== this.filterOperatorIds.dateInterval;\r\n        var attrs2 = {\r\n            name: 'ReportFilter[' + index + '].Criteria2',\r\n            id: 'ReportFilter_' + index + '_Criteria2',\r\n            class: 'form-input required' + this.withError(filter.criteria2, null, column.filterTypeId === this.filterTypes.date),\r\n            placeholder: $.resx('report.filterCriteria2'),\r\n            onchange: isDatePicker ? this.setDate.bind(this, index, 'criteria2') : this.set.bind(this, index, 'criteria2'),\r\n            value: filter.criteria2,\r\n            type: column.filterTypeId === this.filterTypes.numeric ? 'number' : 'text'\r\n        };\r\n        if (!this.opts.allowEdit) {\r\n            attrs2.disabled = true;\r\n        }\r\n        var criteriaArr = [criteria];\r\n        if (isDatePicker) {\r\n            criteriaArr.push(m(DatePicker, {\r\n                name: attrs2.name, required: true, date: filter.criteria2, disabled: !this.opts.allowEdit,\r\n                onchange: this.setDate.bind(this, index, 'criteria2'), format: this.dateFormat, class: 'col'\r\n            }));\r\n        } else {\r\n            criteriaArr.push(m('input', attrs2));\r\n        }\r\n        return criteriaArr;\r\n    };\r\n\r\n    /**\r\n     * Build the operator dropdown for a filter.\r\n     * @param {number} index - Index of the filter to build.\r\n     * @param {Object} column - Column that the filter is for.\r\n     * @returns {Object} Mithril node containing the operator select.\r\n     */\r\n    FilterForm.prototype.operatorView = function(index, column) {\r\n        return m('select.form-select.required', {\r\n            name: 'ReportFilter[' + index + '].OperatorId', id: 'ReportFilter_' + index + '_OperatorId',\r\n            disabled: !column || !this.opts.allowEdit,\r\n            class: column ? this.withError(this.records[index].operatorId, true) : null,\r\n            placeholder: $.resx('report.filterOperator'), onchange: this.setOperator.bind(this, index), value: this.records[index].operatorId\r\n        }, this.withOptions(column && $.hasPositiveValue(column.filterTypeId) ?\r\n            this.filterOperators[column.filterTypeId] : [{ id: 0, name: $.resx('report.filterOperator') }], this.records[index].operatorId, 'id', 'name')\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Build the filters.\r\n     * @returns {Object[]} Array of Mithril nodes containing the filters.\r\n     */\r\n    FilterForm.prototype.filterView = function() {\r\n        if (!this.columnFn()) {\r\n            return null;\r\n        }\r\n\r\n        var self = this;\r\n        return this.records.map(function(x, index) {\r\n            var column = $.hasPositiveValue(x.columnId) ? $.findByKey(self.columnFn(), 'id', x.columnId) : null;\r\n\r\n            // @todo this isn't setting the `placeholder` default value correctly anymore it seems\r\n            var attrs = {\r\n                name: 'ReportFilter[' + index + '].ColumnId', class: 'form-select required' + self.withError(x.columnId, true),\r\n                placeholder: $.resx('report.filterColumn'), onchange: self.setColumnId.bind(self, index), value: x.columnId\r\n            };\r\n            if (!self.opts.allowEdit) {\r\n                attrs.disabled = true;\r\n            }\r\n\r\n            var filterColumns = self.isProc ? self.columnFn().filter(function(x) { return x.isParam; }) : self.columnFn();\r\n\r\n            return m('.columns.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even' }, [\r\n                m('input', { type: 'hidden', name: 'ReportFilter[' + index + '].Id', value: x.id }),\r\n                m('input', { type: 'hidden', name: 'ReportFilter[' + index + '].DisplayOrder', value: index }),\r\n                m('.col-4',\r\n                    self.withHelp($.resx('report.filterColumnText'), m('select', attrs, self.withOptions(filterColumns, x.columnId, 'id', 'title')))\r\n                ),\r\n                m('.col-2',\r\n                    self.withHelp($.resx('report.filterOperatorText'), self.operatorView.call(self, index, column))\r\n                ),\r\n                m('.col-5',\r\n                    self.withHelp($.resx('report.filterCriteriaText'), self.criteriaView.call(self, index))\r\n                ),\r\n                m('.col-1', self.opts.allowEdit ? self.buttonView.call(self, index, false) : null)\r\n            ]);\r\n        });\r\n    };\r\n\r\n    /**\r\n    * Create the view for the share form.\r\n    * @returns {Object} Mithril node containing the share form.\r\n    */\r\n    FilterForm.prototype.view = function() {\r\n        return [\r\n            this.filterView(),\r\n            this.opts.allowEdit ? m('.columns.pt-1', [\r\n                m('.col-6', m('button.btn.btn-primary', {\r\n                    type: 'button', role: 'button', onclick: this.saveFilters.bind(this)\r\n                }, $.resx('save'))),\r\n                m('.col-6', [\r\n                    m('.text-right', [\r\n                        m('button.btn.btn-info.mr-2', {\r\n                            type: 'button', role: 'button', onclick: this.addRecord.bind(this),\r\n                        }, $.resx('add')),\r\n                        m('button.btn.btn-warning.mr-2', {\r\n                            type: 'button', role: 'button', disabled: !this.hasRecords(),\r\n                            onclick: this.hasRecords() ? this.deleteAllRecords.bind(this) : $.noop\r\n                        }, $.resx('deleteAll')),\r\n                        m(Help, { enabled: this.opts.wantsHelp, message: $.resx('report.filterText') })\r\n                    ])\r\n                ])\r\n            ]) : null\r\n        ];\r\n    };\r\n\r\n    return FilterForm;\r\n});\r\n","/*!\r\n * Wraps report group form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.GroupForm = factory(root.m, root.$, root.Form, root.Help, root.Alertify);\r\n})(this, function(m, $, Form, Help, Alertify) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the group form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function GroupForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.group-table-wrapper', opts.content),\r\n            columns: {\r\n                id: { type: 'int' },\r\n                columnId: { type: 'int' },\r\n                operatorId: { type: 'int' },\r\n                criteria: { type: 'str' },\r\n                criteria2: { type: 'str' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, columnId: 0, displayOrder: 0 }\r\n        }, opts.groups || []);\r\n\r\n        this.reportId = opts.reportId;\r\n        this.isProc = opts.isProc;\r\n        this.saveGroupsUrl = opts.saveGroupsUrl;\r\n        this.aggregator = opts.aggregatorId === 0 ? '' : opts.aggregatorId;\r\n        this.aggregators = opts.aggregators || [];\r\n        this.dataTable = opts.dataTable;\r\n        this.columnFn = opts.columnFn;\r\n    }\r\n\r\n    GroupForm.prototype = Object.create(Form.prototype);\r\n    GroupForm.prototype.constructor = GroupForm;\r\n\r\n    /**\r\n     * Save groups to the server then reload the table data.\r\n     */\r\n    GroupForm.prototype.saveGroups = function() {\r\n        if ($.getAll('.mform-control-error', this.container).length > 0) {\r\n            Alertify.error($.resx('fixIt'));\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: 'PUT',\r\n            url: self.saveGroupsUrl,\r\n            data: {\r\n                Id: self.reportId,\r\n                GroupAggregator: self.aggregator === '' ? 0 : self.aggregator * 1,\r\n                Groups: $.toPascalKeys(self.records)\r\n            }\r\n        }, function(data) {\r\n            if (data) {\r\n                if ($.isArray(data.groups)) {\r\n                    data.groups.forEach(function(x, i) { self.records[i].id = x.id; });\r\n                }\r\n            }\r\n            if (self.dataTable) {\r\n                self.dataTable.loadData();\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Set the aggregator property.\r\n     * @param {Event} e - Event that triggered the function.\r\n     */\r\n    GroupForm.prototype.setAggregator = function(e) {\r\n        this.aggregator = this.targetVal(e);\r\n    };\r\n\r\n    /**\r\n     * Build the groups.\r\n     * @returns {Object[]} Array of Mithril nodes containing the groups.\r\n     */\r\n    GroupForm.prototype.groupView = function() {\r\n        if (!this.columnFn()) {\r\n            return null;\r\n        }\r\n\r\n        var self = this;\r\n        return this.records.map(function(x, index) {\r\n            x.displayOrder = index;\r\n            var attrs = {\r\n                name: 'ReportGroup[' + index + '].ColumnId', class: 'form-select required' + self.withError(x.columnId, true),\r\n                placeholder: $.resx('report.groupColumn'), onchange: self.set.bind(self, index, 'columnId'), value: x.columnId\r\n            };\r\n            if (!self.opts.allowEdit) {\r\n                attrs.disabled = true;\r\n            }\r\n            return m('.columns.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even' }, [\r\n                m('input', { type: 'hidden', name: 'ReportGroup[' + index + '].Id', value: x.id }),\r\n                m('input', { type: 'hidden', name: 'ReportGroup[' + index + '].DisplayOrder', value: index }),\r\n                m('.col-10', [\r\n                    m('select', attrs, self.withOptions(self.columnFn(), x.columnId, 'id', 'title'))\r\n                ]),\r\n                m('.col-2', self.opts.allowEdit ? self.buttonView.call(self, index, true) : null)\r\n            ]);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Build the group form.\r\n     * @returns {Object} Mithril node containing the form.\r\n     */\r\n    GroupForm.prototype.view = function() {\r\n        if (this.isProc) {\r\n            return m('.table-wrapper.p-t-1.col-12', m('.card.card-info', m('.card-body', $.resx('report.errorProcNoGroups'))));\r\n        }\r\n\r\n        var attrs = {\r\n            name: 'Report.Aggregator', class: 'form-select', placeholder: $.resx('report.aggregator'),\r\n            onchange: this.setAggregator.bind(this), value: this.aggregator\r\n        };\r\n        if (!this.opts.allowEdit) {\r\n            attrs.disabled = true;\r\n        }\r\n        return m('.col-12.table-wrapper', m('.columns', [\r\n            m('.col-2.mt-1', [\r\n                m('.form-group', [\r\n                    m('select', attrs, this.withOptions(this.aggregators, this.aggregator, 'id', 'name'))\r\n                ]),\r\n                this.opts.allowEdit ? m('.row.mt-1', m('button.btn.btn-primary', {\r\n                    type: 'button', role: 'button', onclick: this.saveGroups.bind(this)\r\n                }, $.resx('save'))) : null\r\n            ]),\r\n            m('.col-9.col-ml-auto.mt-1', [\r\n                this.groupView(),\r\n                this.opts.allowEdit ? m('.container.pt-1', m('.columns', [\r\n                    m('.col-12', [\r\n                        m('.btn-toolbar.text-right', [\r\n                            m('button.btn.btn-info.mr-1', {\r\n                                type: 'button', role: 'button', onclick: this.addRecord.bind(this)\r\n                            }, $.resx('add')),\r\n                            m('button.btn.btn-warning', {\r\n                                type: 'button', role: 'button', disabled: !this.hasRecords(),\r\n                                onclick: this.hasRecords() ? this.deleteAllRecords.bind(this) : $.noop\r\n                            }, $.resx('deleteAll')),\r\n                            m(Help, { enabled: this.opts.wantsHelp, message: $.resx('report.groupText') })\r\n                        ])\r\n                    ])\r\n                ])) : null\r\n            ])\r\n        ]));\r\n    };\r\n\r\n    return GroupForm;\r\n});\r\n","/*!\r\n * Wraps chart range form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.RangeForm = factory(root.m, root.$, root.Form, root.Help, root.Alertify, root.DashChart, root.ColorPicker);\r\n})(this, function(m, $, Form, Help, Alertify, DashChart, ColorPicker) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the range form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function RangeForm(opts) {\r\n        var ranges = opts.ranges || [];\r\n        ranges = opts.ranges.map(function(x) { x.isExpanded = false; return x; });\r\n\r\n        Form.call(this, {\r\n            container: $.get('.range-table-wrapper', opts.content),\r\n            columns: {\r\n                id: { type: 'int' },\r\n                reportId: { type: 'int' },\r\n                xAxisColumnId: { type: 'int' },\r\n                yAxisColumnId: { type: 'int' },\r\n                aggregatorId: { type: 'int' },\r\n                dateIntervalId: { type: 'int' },\r\n                color: { type: 'string' },\r\n                displayOrder: { type: 'int' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, reportId: 0, xAxisColumnId: 0, yAxisColumnId: 0, aggregatorId: 0, dateIntervalId: 0, color: '', displayOrder: 0 }\r\n        }, ranges || []);\r\n\r\n        this.chartId = opts.chartId;\r\n        this.filterTypes = opts.filterTypes || {};\r\n        this.saveRangesUrl = opts.saveRangesUrl;\r\n        this.dateIntervals = opts.dateIntervals || [];\r\n        this.aggregators = opts.aggregators || [];\r\n        this.reports = opts.reports || [];\r\n        this.columns = opts.columns || [];\r\n        this.processJsonFn = opts.processJsonFn;\r\n        this.canExportFn = opts.canExportFn;\r\n        this.toggleExportFn = opts.toggleExportFn;\r\n    }\r\n\r\n    RangeForm.prototype = Object.create(Form.prototype);\r\n    RangeForm.prototype.constructor = RangeForm;\r\n\r\n    /**\r\n     * Save ranges to the server then rebuild the chart.\r\n     */\r\n    RangeForm.prototype.saveRanges = function() {\r\n        if ($.getAll('.mform-control-error', this.container).length > 0) {\r\n            Alertify.error($.resx('fixIt'));\r\n            return;\r\n        }\r\n\r\n        this.records.forEach(function(x, i) { x.displayOrder = i; });\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: self.saveRangesUrl,\r\n            data: {\r\n                Id: self.chartId,\r\n                Ranges: $.toPascalKeys(self.records)\r\n            }\r\n        }, function(data) {\r\n            if (data) {\r\n                self.changed = false;\r\n                if ($.isArray(data.ranges)) {\r\n                    data.ranges.forEach(function(x, i) { self.records[i].id = x.id; });\r\n                }\r\n                Alertify.success($.resx('chart.saveSuccessful'));\r\n                self.makeChart();\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Make the chart.\r\n     */\r\n    RangeForm.prototype.makeChart = function() {\r\n        var chartContent = $.get('.chart-container', this.content);\r\n        if (!(chartContent && chartContent.hasAttribute('data-url'))) {\r\n            return;\r\n        }\r\n        if (!(this.records && this.records.length > 0)) {\r\n            Alertify.error($.resx('chart.rangesRequired'));\r\n            return;\r\n        }\r\n\r\n        if (this.dashChart && this.dashChart.chart) {\r\n            this.dashChart.chart.destroy();\r\n        }\r\n\r\n        this.dashChart = new DashChart(chartContent, true, this.processJsonFn, null, this.toggleExportFn);\r\n    };\r\n\r\n    /**\r\n     * Export a chart as an image.\r\n     */\r\n    RangeForm.prototype.exportChart = function() {\r\n        if (!this.canExportFn()) {\r\n            return;\r\n        }\r\n        var chartContainer = $.get('.chart-container', this.content);\r\n        if (chartContainer) {\r\n            $.get('.export-width', this.content).value = chartContainer.offsetWidth;\r\n            $.get('.export-data', this.content).value = this.dashChart.chart.toBase64Image();\r\n            $.get('.export-form', this.content).submit();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the operatorId for a filter and unset the criteria.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered.\r\n     */\r\n    RangeForm.prototype.setReport = function(index, e) {\r\n        if (this.set(index, 'reportId', e)) {\r\n            this.records[index].xAxisColumnId = 0;\r\n            this.records[index].yAxisColumnId = 0;\r\n            this.records[index].aggregatorId = 0;\r\n            this.records[index].dateIntervalId = 0;\r\n            this.run();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Expand/collapse the inputs for a range.\r\n     * @param {Object} record - Range object.\r\n     */\r\n    RangeForm.prototype.toggleExpanded = function(record) {\r\n        record.isExpanded = !record.isExpanded;\r\n    };\r\n\r\n    /**\r\n     * Build the ranges.\r\n     * @returns {Object[]} Array of Mithril nodes containing the ranges.\r\n     */\r\n    RangeForm.prototype.rangeView = function() {\r\n        if (!this.reports) {\r\n            return null;\r\n        }\r\n\r\n        var self = this;\r\n        return this.records.map(function(record, index) {\r\n            var report = record.reportId ? $.findByKey(self.columns, 'reportId', record.reportId) : null;\r\n            if (report && !report.xColumns) {\r\n                report.xColumns = $.clone(report.columns);\r\n                report.xColumns.unshift({ columnId: 0, title: $.resx('chart.xAxisColumn') });\r\n                report.yColumns = $.clone(report.columns);\r\n                report.yColumns.unshift({ columnId: 0, title: $.resx('chart.yAxisColumn') });\r\n            }\r\n\r\n            var dateIntervalDisabled = true;\r\n            var inputsDisabled = !(self.opts.allowEdit && report);\r\n            if (!inputsDisabled && self.filterTypes) {\r\n                var col = $.findByKey(report.columns, 'columnId', record.xAxisColumnId * 1);\r\n                if (col && col.filterTypeId === self.filterTypes.date) {\r\n                    // show for date\r\n                    dateIntervalDisabled = false;\r\n                }\r\n            }\r\n\r\n            return m('.container.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: record._index }, [\r\n                m('.columns', [\r\n                    m('input', { type: 'hidden', name: 'ChartRange[' + index + '].Id', value: record.id }),\r\n                    m('.col-4',\r\n                        self.withHelp($.resx('chart.reportText'), [\r\n                            m('span.input-group-addon.input-group-custom', m('button.btn.btn-secondary', { onclick: self.toggleExpanded.bind(self, record) },\r\n                                m('i.dash.text-primary', { class: record.isExpanded ? 'dash-minus' : 'dash-plus' })\r\n                            )),\r\n                            m('select.form-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].ReportId', class: self.withError(record.reportId, true),\r\n                                placeholder: $.resx('chart.report'), onchange: self.setReport.bind(self, index), value: record.reportId\r\n                            }, !self.opts.allowEdit), self.withOptions(self.reports, record.reportId, 'id', 'name'))\r\n                        ])\r\n                    ),\r\n                    m('.col-3',\r\n                        self.withHelp($.resx('chart.xAxisColumnText'),\r\n                            m('select.form-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].XAxisColumnId', id: 'xAxisColumnId' + index, class: report ? self.withError(record.xAxisColumnId, true) : null,\r\n                                placeholder: $.resx('chart.xAxisColumn'), onchange: self.set.bind(self, index, 'xAxisColumnId'), value: record.xAxisColumnId\r\n                            }, inputsDisabled), self.withOptions(report ? report.xColumns : [{ columnId: 0, title: $.resx('chart.xAxisColumn') }], record.xAxisColumnId, 'columnId', 'title'))\r\n                        )\r\n                    ),\r\n                    m('.col-3',\r\n                        self.withHelp($.resx('chart.yAxisColumnText'),\r\n                            m('select.form-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].YAxisColumnId', id: 'yAxisColumnId' + index, class: report ? self.withError(record.yAxisColumnId, true) : null,\r\n                                placeholder: $.resx('chart.yAxisColumn'), onchange: self.set.bind(self, index, 'yAxisColumnId'), value: record.yAxisColumnId\r\n                            }, inputsDisabled), self.withOptions(report ? report.yColumns : [{ columnId: 0, title: $.resx('chart.yAxisColumn') }], record.yAxisColumnId, 'columnId', 'title'))\r\n                        )\r\n                    ),\r\n                    m('.col-2', self.opts.allowEdit ? self.buttonView.call(self, index, true) : null)\r\n                ]),\r\n                m('.columns', { class: record.isExpanded ? '' : ' hidden' }, [\r\n                    m('.col-4.col-ml-auto',\r\n                        self.withHelp($.resx('chart.aggregatorText'),\r\n                            m('select.form-select', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].AggregatorId', id: 'aggregatorId' + index,\r\n                                placeholder: $.resx('chart.aggregator'), onchange: self.set.bind(self, index, 'aggregatorId'), value: record.aggregatorId\r\n                            }, inputsDisabled), self.withOptions(self.aggregators, record.aggregatorId, 'id', 'name'))\r\n                        )\r\n                    ),\r\n                    m('.col-4',\r\n                        self.withHelp($.resx('chart.dateIntervalText'),\r\n                            m('select.form-select', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].DateIntervalId', id: 'dateIntervalId' + index,\r\n                                placeholder: $.resx('chart.dateInterval'), onchange: self.set.bind(self, index, 'dateIntervalId'), value: record.dateIntervalId\r\n                            }, dateIntervalDisabled), self.withOptions(self.dateIntervals, record.dateIntervalId, 'id', 'name'))\r\n                        )\r\n                    ),\r\n                    m('.col-2', [\r\n                        self.withHelp($.resx('chart.colorText'),\r\n                            m(ColorPicker, {\r\n                                name: 'ChartRange[' + index + '].Color', value: record.color, disabled: inputsDisabled,\r\n                                onSelect: self.set.bind(self, index, 'color')\r\n                            })\r\n                        ),\r\n                    ]),\r\n                    m('.col-1')\r\n                ])\r\n            ]);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Build the range form.\r\n     * @returns {Object} Mithril node containing the form.\r\n     */\r\n    RangeForm.prototype.view = function() {\r\n        return [\r\n            this.rangeView(),\r\n            m('.container.pt-1', m('.columns', [\r\n                m('.col-6', [\r\n                    m('.btn-toolbar', [\r\n                        this.opts.allowEdit ? m('button.btn.btn-primary.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.saveRanges.bind(this)\r\n                        }, $.resx('save')) : null,\r\n                        m('button.btn.btn-info', {\r\n                            type: 'button', role: 'button', onclick: this.exportChart.bind(this), disabled: !this.canExportFn()\r\n                        }, $.resx('export'))\r\n                    ])\r\n                ]),\r\n                this.opts.allowEdit ? m('.col-6.text-right', [\r\n                    m('.text-right', [\r\n                        m('button.btn.btn-info.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.addRecord.bind(this)\r\n                        }, $.resx('add')),\r\n                        m('button.btn.btn-warning.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.deleteAllRecords.bind(this), disabled: !this.hasRecords()\r\n                        }, $.resx('deleteAll')),\r\n                        m(Help, { enabled: this.opts.wantsHelp, message: $.resx('chart.rangeText') })\r\n                    ])\r\n                ]) : null\r\n            ]))\r\n        ];\r\n    };\r\n\r\n    return RangeForm;\r\n});\r\n","/*!\r\n * Wraps dataset form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.Dataset = factory(root.m, root.$, root.Alertify, root.Form, root.Autocomplete, root.Help, root.JoinForm, root.ColumnForm);\r\n})(this, function(m, $, Alertify, Form, Autocomplete, Help, JoinForm, ColumnForm) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare Dataset class.\r\n     * @param {Object} opts - Dataset settings\r\n     */\r\n    function Dataset(opts) {\r\n        opts = opts || {};\r\n        if (opts.columns) {\r\n            opts.columns.forEach(function(x) { x.isExpanded = false; });\r\n        }\r\n\r\n        this.sourceList = null;\r\n        this.columnList = null;\r\n        this.formChanged = false;\r\n        this.selectedSourceList = [];\r\n        this.content = opts.content;\r\n\r\n        this.checkType(false);\r\n        this.loadSourceList();\r\n        this.loadColumnList();\r\n\r\n        this.joinForm = new JoinForm({\r\n            content: opts.content,\r\n            wantsHelp: opts.wantsHelp,\r\n            joins: opts.joins,\r\n            joinTypes: opts.joinTypes,\r\n            sourceFn: this.getSourceList.bind(this),\r\n            columnUpdateFn: this.loadColumnList.bind(this)\r\n        });\r\n        this.joinForm.run();\r\n\r\n        this.columnForm = new ColumnForm({\r\n            content: opts.content,\r\n            wantsHelp: opts.wantsHelp,\r\n            columns: opts.columns,\r\n            dataTypes: opts.dataTypes,\r\n            filterTypes: opts.filterTypes,\r\n            sourceFn: this.getSourceList.bind(this),\r\n            columnFn: this.getColumnList.bind(this),\r\n            selectedSourceFn: this.getSelectedSourceList.bind(this)\r\n        });\r\n        this.columnForm.run();\r\n\r\n        $.onChange($.get('.dataset-database', this.content), this.loadSourceList.bind(this), false);\r\n        $.onChange($.get('.dataset-type', this.content), this.checkType.bind(this), false);\r\n\r\n        var self = this;\r\n        var primary = $.get('.dataset-primary-source', this.content);\r\n        if (primary) {\r\n            m.mount(primary, {\r\n                view: function() {\r\n                    return m(Help, { message: $.resx('dataset.primarySourceHelp'), enabled: opts.wantsHelp }, m(Autocomplete, {\r\n                        name: 'PrimarySource',\r\n                        class: 'primary-source-autocomplete',\r\n                        value: primary.getAttribute('data-value'),\r\n                        required: true,\r\n                        list: self.getSourceList.bind(self),\r\n                        onSelect: self.updateColumnList.bind(self),\r\n                        onCancel: self.updateColumnList.bind(self)\r\n                    }));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    Dataset.prototype = {\r\n        /**\r\n         * Build a list of all tables used by this dataset.\r\n         * @returns {bool} Returns true if list has changed, else false.\r\n         */\r\n        updateSelectedSources: function() {\r\n            var list = [];\r\n            var primarySource = $.get('.primary-source-autocomplete', this.content);\r\n            if (primarySource && primarySource.value) {\r\n                list.push(primarySource.value);\r\n            }\r\n            if (this.joinForm) {\r\n                this.joinForm.records.map(function(x) { list.push(x.tableName); });\r\n            }\r\n            list = list.filter(function(x) {\r\n                return !$.isNull(x) && x.length > 0;\r\n            });\r\n            if (!$.equals(list, this.selectedSourceList)) {\r\n                this.selectedSourceList = list;\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Check if the dataset is using a proc instead of tables.\r\n         * @param {bool} updateList - If true update the table/proc list.\r\n         */\r\n        checkType: function(updateList) {\r\n            var type = $.get('.dataset-type', this.content);\r\n            if (!type) {\r\n                return;\r\n            }\r\n            if ($.coalesce(updateList, true)) {\r\n                this.loadSourceList();\r\n            }\r\n            if (this.joinForm) {\r\n                this.joinForm.isProc = type.value * 1 === 2;\r\n                this.joinForm.run();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Fetch a list of available columns from the server. Autocompletes will update automatically.\r\n         */\r\n        loadColumnList: function() {\r\n            var url = this.content.getAttribute('data-column-url');\r\n            var database = $.get('.dataset-database', this.content);\r\n            if (!(url && database && $.hasPositiveValue(database.value))) {\r\n                this.columnList = [];\r\n                return;\r\n            }\r\n\r\n            if (this.updateSelectedSources()) {\r\n                // only run if sources are different from last request to avoid unnecessary traffic\r\n                var self = this;\r\n                $.ajax({\r\n                    method: 'POST',\r\n                    url: url,\r\n                    data: { DatabaseId: database.value * 1, Tables: self.selectedSourceList }\r\n                }, function(columns) {\r\n                    self.columnList = columns && columns.length ? columns : [];\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Fetch a list of tables from the server. Autocompletes will update automatically.\r\n         */\r\n        loadSourceList: function() {\r\n            var url = this.content.getAttribute('data-table-url');\r\n            var database = $.get('.dataset-database', this.content);\r\n            var type = $.get('.dataset-type', this.content);\r\n            if (!(url && database && type)) {\r\n                return;\r\n            }\r\n            if (!$.hasPositiveValue(database.value) || !$.hasPositiveValue(type.value)) {\r\n                this.sourceList = [];\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: url,\r\n                data: { databaseId: database.value, typeId: type.value }\r\n            }, function(tables) {\r\n                self.sourceList = tables && tables.length ? tables : [];\r\n                self.loadColumnList();\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get the list of table for the autocomplete.\r\n         * @returns {string[]} Returns array of tables.\r\n         */\r\n        getSourceList: function() {\r\n            return this.sourceList;\r\n        },\r\n\r\n        /**\r\n         * Get the list of selected tables.\r\n         * @returns {string[]} Returns array of tables.\r\n         */\r\n        getSelectedSourceList: function() {\r\n            return this.selectedSourceList;\r\n        },\r\n\r\n        /**\r\n         * Get the list of columns for the autocomplete.\r\n         * @returns {string[]} Returns array of columns.\r\n         */\r\n        getColumnList: function() {\r\n            return this.columnList;\r\n        },\r\n\r\n        /**\r\n         * Refresh the column list.\r\n         */\r\n        updateColumnList: function() {\r\n            // need timeout delay so the field value is updated before we load the list\r\n            setTimeout(this.loadColumnList.bind(this), 10);\r\n        },\r\n\r\n        /**\r\n         * Clean up our mess.\r\n         */\r\n        destroy: function() {\r\n            $.destroy(this.columnForm);\r\n            $.destroy(this.joinForm);\r\n\r\n            var primary = $.get('.dataset-primary-source', this.content);\r\n            if (primary) {\r\n                m.mount(primary, null);\r\n            }\r\n        }\r\n    };\r\n\r\n    return Dataset;\r\n});\r\n","/*!\r\n * Wraps shared functionality for report and chart detail pages.\r\n */\r\n(function(root, factory) {\r\n    root.BaseDetails = factory(root.$, root.Alertify, root.Prism);\r\n})(this, function($, Alertify, Prism) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare base details class.\r\n     * @param {Object} opts - Form settings\r\n     */\r\n    function BaseDetails(opts) {\r\n        opts = opts || {};\r\n        this.content = opts.content;\r\n        this.columnList = opts.columns || [];\r\n\r\n        $.on($.get('.view-sql', opts.content), 'click', function() {\r\n            $.dialogs.openDialog($.get('.modal-sql', opts.content).outerHTML);\r\n        });\r\n\r\n        if (!opts.allowEdit) {\r\n            this.initDate = new Date();\r\n        }\r\n    }\r\n\r\n    BaseDetails.prototype = {\r\n        /**\r\n         * Handle the result of a query for report data.\r\n         * @param {Object} json - Query result.\r\n         * @returns {bool}  True if data is valid.\r\n         */\r\n        processJson: function(json) {\r\n            if (json.updatedDate && this.initDate) {\r\n                var updateDate = new Date(json.updatedDate);\r\n                if (updateDate && updateDate > this.initDate) {\r\n                    // report has been modified - warn the user to refresh\r\n                    Alertify.error($.resx('reportModified'));\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if (json.dataSql) {\r\n                this.setSql($.get('.sql-data-content', this.content), json.dataSql, json.dataError);\r\n            }\r\n            if (json.countSql) {\r\n                this.setSql($.get('.sql-count-content', this.content), json.countSql, json.countError);\r\n            }\r\n\r\n            if ($.isNull(json.rows)) {\r\n                Alertify.error($.resx('errorConnectingToDataSource'));\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Show sql and error message in the correct place.\r\n         * @param {Node} node - DOM node to update.\r\n         * @param {string} sql - SQL statement to display.\r\n         * @param {string} error - Error to display if any.\r\n         */\r\n        setSql: function(node, sql, error) {\r\n            if (node) {\r\n                var elem = $.get('.sql-text', node);\r\n                if (elem) {\r\n                    elem.textContent = sql;\r\n                    Prism.highlightElement(elem);\r\n                }\r\n                elem = $.get('.sql-error', node);\r\n                if (elem) {\r\n                    elem.textContent = error || '';\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the list of columns for the autocomplete.\r\n         * @returns {string[]} Returns array of columns.\r\n         */\r\n        getColumnList: function() {\r\n            return this.columnList;\r\n        }\r\n    };\r\n\r\n    return BaseDetails;\r\n});\r\n","/*!\r\n * Wraps report form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.ReportDetails = factory(root.m, root.$, root.Alertify, root.BaseDetails, root.FilterForm, root.GroupForm, root.Table);\r\n})(this, function(m, $, Alertify, BaseDetails, FilterForm, GroupForm, Table) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare ReportDetails class.\r\n     * @param {Object} opts - Report settings\r\n     */\r\n    function ReportDetails(opts) {\r\n        opts = opts || {};\r\n\r\n        BaseDetails.call(this, opts);\r\n\r\n        if (!(opts.reportColumns && opts.reportColumns.length)) {\r\n            return;\r\n        }\r\n\r\n        this.isProc = opts.loadAllData;\r\n\r\n        var self = this;\r\n        var saveUrl = opts.saveColumnsUrl;\r\n        var saveStorageFunc = $.debounce(!opts.allowEdit ? $.noop : function(settings) {\r\n            if ($.isNull(self.dataTable.previousColumnWidths) || !$.equals(settings.columnWidths, self.dataTable.previousColumnWidths)) {\r\n                $.ajax({\r\n                    method: 'PUT',\r\n                    url: saveUrl,\r\n                    data: {\r\n                        Id: opts.reportId,\r\n                        Columns: $.toPascalKeys(settings.columnWidths),\r\n                        ReportWidth: settings.width * 1\r\n                    },\r\n                    block: false\r\n                });\r\n                self.dataTable.previousColumnWidths = settings.columnWidths;\r\n            }\r\n        }, 250);\r\n\r\n        this.dataTable = new Table({\r\n            content: $.get('.report-data-container', opts.content),\r\n            url: opts.dataUrl,\r\n            requestMethod: 'POST',\r\n            requestParams: { Id: opts.reportId, Save: true },\r\n            searchable: false,\r\n            loadAllData: opts.loadAllData,\r\n            editable: opts.allowEdit,\r\n            headerButtons: [m('a.btn.btn-primary.mr-2', { href: opts.exportUrl, target: '_blank' }, $.resx('export'))],\r\n            itemsPerPage: opts.rowLimit,\r\n            currentStartItem: 0,\r\n            sorting: opts.sortColumns || [],\r\n            storageFunction: saveStorageFunc,\r\n            width: opts.width,\r\n            columns: opts.reportColumns || [],\r\n            displayDateFormat: opts.dateFormat,\r\n            displayCurrencyFormat: opts.currencyFormat,\r\n            dataCallback: this.processJson.bind(this),\r\n            errorCallback: this.processJson.bind(this)\r\n        });\r\n        this.dataTable.previousColumnWidths = opts.reportColumns.map(function(x) { return { field: x.field, width: x.width * 1.0 }; });\r\n\r\n        this.filterForm = new FilterForm({\r\n            reportId: opts.reportId,\r\n            content: opts.content,\r\n            filters: opts.filters,\r\n            columns: {\r\n                id: { type: 'int' },\r\n                columnId: { type: 'int' },\r\n                operatorId: { type: 'int' },\r\n                criteria: { type: 'str' },\r\n                criteria2: { type: 'str' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: null, columnId: '', operatorId: '', criteria: null, criteria2: null },\r\n            dateFormat: opts.dateFormat,\r\n            saveFiltersUrl: opts.saveFiltersUrl,\r\n            filterOperators: opts.filterOperators,\r\n            filterOperatorIds: opts.filterOperatorIds,\r\n            filterTypes: opts.filterTypes,\r\n            dateOperators: opts.dateOperators,\r\n            lookups: opts.lookups,\r\n            isProc: opts.isProc,\r\n            dataTable: this.dataTable,\r\n            columnFn: this.getColumnList.bind(this)\r\n        });\r\n        this.filterForm.run();\r\n\r\n        this.groupForm = new GroupForm({\r\n            reportId: opts.reportId,\r\n            content: opts.content,\r\n            groups: opts.groups,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            saveGroupsUrl: opts.saveGroupsUrl,\r\n            aggregatorId: opts.aggregatorId,\r\n            aggregator: opts.aggregator,\r\n            aggregators: opts.aggregators,\r\n            isProc: opts.isProc,\r\n            dataTable: this.dataTable,\r\n            columnFn: this.getColumnList.bind(this)\r\n        });\r\n        this.groupForm.run();\r\n    }\r\n\r\n    ReportDetails.prototype = Object.create(BaseDetails.prototype);\r\n    ReportDetails.prototype.constructor = BaseDetails;\r\n\r\n    /**\r\n     * Handle the result of a query for report data.\r\n     * @param {Object} json - Query result.\r\n     * @returns {bool}  True if data is valid.\r\n     */\r\n    ReportDetails.prototype.processJson = function(json) {\r\n        if (json.updatedDate && this.initDate) {\r\n            var updateDate = new Date(json.updatedDate);\r\n            if (updateDate && updateDate > this.initDate) {\r\n                // report has been modified - warn the user to refresh\r\n                Alertify.error($.resx('reportModified'));\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (json.dataSql) {\r\n            this.setSql($.get('.sql-data-content', this.content), json.dataSql, json.dataError);\r\n        }\r\n        if (json.countSql) {\r\n            this.setSql($.get('.sql-count-content', this.content), json.countSql, json.countError);\r\n        }\r\n\r\n        if ($.isNull(json.rows)) {\r\n            Alertify.error($.resx('errorConnectingToDataSource'));\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Clean up our mess.\r\n     */\r\n    ReportDetails.prototype.destroy = function() {\r\n        $.destroy(this.dataTable);\r\n        $.destroy(this.filterForm);\r\n        $.destroy(this.groupForm);\r\n    };\r\n\r\n    return ReportDetails;\r\n});\r\n","/*!\r\n * Wraps report form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.ChartDetails = factory(root.$, root.Alertify, root.BaseDetails, root.RangeForm);\r\n})(this, function($, Alertify, BaseDetails, RangeForm) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare ChartDetails class.\r\n     * @param {Object} opts - Report settings\r\n     */\r\n    function ChartDetails(opts) {\r\n        opts = opts || {};\r\n\r\n        BaseDetails.call(this, opts);\r\n\r\n        this.enableExport = false;\r\n\r\n        this.rangeForm = new RangeForm({\r\n            chartId: opts.chartId,\r\n            content: opts.content,\r\n            ranges: opts.ranges,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            filterTypes: opts.filterTypes || {},\r\n            saveRangesUrl: opts.saveRangesUrl,\r\n            dateIntervals: opts.dateIntervals,\r\n            aggregators: opts.aggregators,\r\n            reports: opts.reports,\r\n            columns: opts.columns,\r\n            processJsonFn: this.processJson.bind(this),\r\n            canExportFn: this.canExport.bind(this),\r\n            toggleExportFn: this.toggleExport.bind(this)\r\n        });\r\n        this.rangeForm.run();\r\n\r\n        if (this.rangeForm.records && this.rangeForm.records.length) {\r\n            this.rangeForm.makeChart();\r\n        }\r\n    }\r\n\r\n    ChartDetails.prototype = Object.create(BaseDetails.prototype);\r\n    ChartDetails.prototype.constructor = BaseDetails;\r\n\r\n    /**\r\n     * Handle the result of a query for report data.\r\n     * @param {Object} json - Query result.\r\n     * @returns {bool}  True if data is valid.\r\n     */\r\n    ChartDetails.prototype.processJson = function(json) {\r\n        if (json.updatedDate && this.initDate) {\r\n            var updateDate = new Date(json.updatedDate);\r\n            if (updateDate && updateDate > this.initDate) {\r\n                // chart has been modified - warn the user to refresh\r\n                document.dispatchEvent($.events.chartLoad);\r\n                Alertify.success($.resx('chartModified'));\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if ($.isNull(json.ranges) || json.ranges.length === 0) {\r\n            Alertify.error($.resx('errorConnectingToDataSource'));\r\n            this.enableExport = false;\r\n            $.show($.get('.chart-error', this));\r\n            return false;\r\n        }\r\n\r\n        this.enableExport = true;\r\n        $.get('.export-filename', this.content).value = json.title;\r\n\r\n        var elem = $.get('.sql-content', this.content);\r\n        var ranges = json.ranges.map(function(x) { return { title: x.title, sql: x.sql, error: x.error }; });\r\n        this.setSql(elem, ranges.filter(function(x) { return x.sql; }).map(function(x) { return '-- ' + x.title + '\\n' + x.sql + '\\n'; }).join('\\n'),\r\n            ranges.filter(function(x) { return x.error; }).map(function(x) { return x.title + ':<br>' + x.error + '<br>'; }).join('<br>'));\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Get export flag.\r\n     */\r\n    ChartDetails.prototype.canExport = function() {\r\n        return this.enableExport;\r\n    };\r\n\r\n    /**\r\n     * Set export flag.\r\n     * @param {bool} val - Enable export if true, else disable.\r\n     */\r\n    ChartDetails.prototype.toggleExport = function(val) {\r\n        this.enableExport = val;\r\n    };\r\n\r\n    /**\r\n     * Clean up our mess.\r\n     */\r\n    ChartDetails.prototype.destroy = function() {\r\n        $.destroy(this.rangeForm);\r\n        $.destroy(this.chart);\r\n    };\r\n\r\n    return ChartDetails;\r\n});\r\n","/*!\r\n * Wraps functionality needed to display a dashboard widget.\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Widget = factory(root.m, root.$, root.Alertify, root.Table, root.DashChart, root.Draggabilly, root.Rect);\r\n})(this, function(m, $, Alertify, Table, DashChart, Draggabilly, Rect) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Use object properties to make class list for a widget container.\r\n     * @param {Object} obj - Widget properties.\r\n     * @returns {string} CSS class list.\r\n     */\r\n    var buildClassList = function(obj) {\r\n        return 'grid-item grid-item-width-' + obj.width + ' grid-item-height-' + obj.height +\r\n            ' grid-item-x-' + obj.x + ' grid-item-y-' + obj.y;\r\n    };\r\n\r\n    /**\r\n     * Declare Widget class.\r\n     * @param {Object} opts - Widget settings\r\n     */\r\n    var Widget = function(opts) {\r\n        this.init(opts);\r\n\r\n        // attach this to the container for reference in the dashboard\r\n        var container = this.getContainer();\r\n        container.widget = this;\r\n    };\r\n\r\n    /**\r\n     * Declare Widget class methods.\r\n     */\r\n    Widget.prototype = {\r\n        /**\r\n         * Initialize the widget.\r\n         * @param {Object} opts - Widget settings\r\n         */\r\n        init: function(opts) {\r\n            opts.isData = $.coalesce(opts.isData, true);\r\n            opts.refreshSeconds = $.coalesce(opts.refreshSeconds, 0);\r\n            opts.baseUrl = $.get('body').getAttribute('data-base-url');\r\n            this.opts = opts;\r\n\r\n            this.id = opts.id;\r\n            this.table = null;\r\n            this.chart = null;\r\n            this.interval = null;\r\n            this.isFullscreen = false;\r\n            this.initDate = new Date();\r\n            this.dragMargin = 0;\r\n\r\n            this.render();\r\n\r\n            var container = this.getContainer();\r\n            this.rect = new Rect(opts.width, opts.height, opts.x, opts.y);\r\n            this.setupDraggie(container);\r\n\r\n            if (opts.isData) {\r\n                $.show('#widgetData_' + opts.id);\r\n                $.hide('#widgetChart_' + opts.id);\r\n\r\n                this.table = new Table({\r\n                    content: '#widgetData_' + opts.id,\r\n                    id: 'widgetTable_' + opts.id,\r\n                    url: opts.url,\r\n                    requestMethod: 'POST',\r\n                    requestParams: { Id: opts.reportId },\r\n                    loadAllData: false,\r\n                    editable: false,\r\n                    itemsPerPage: opts.reportRowLimit || 10,\r\n                    currentStartItem: 0,\r\n                    sorting: opts.sortColumns,\r\n                    storageFunction: $.noop,\r\n                    width: Math.max(opts.reportWidth || 100, 100),\r\n                    columns: opts.columns,\r\n                    dataCallback: this.processJson.bind(this),\r\n                    errorCallback: this.onError.bind(this),\r\n                    displayDateFormat: opts.displayDateFormat,\r\n                    displayCurrencyFormat: opts.displayCurrencyFormat\r\n                });\r\n            } else {\r\n                $.hide('#widgetData_' + opts.id);\r\n                $.show('#widgetChart_' + opts.id);\r\n                this.chart = new DashChart(container, false, this.processJson.bind(this), this.onError.bind(this));\r\n            }\r\n            if (opts.refreshSeconds > 0) {\r\n                this.interval = setInterval(this.refresh.bind(this), opts.refreshSeconds * 1000);\r\n            }\r\n\r\n            if (opts.title) {\r\n                $.setText($.get('.grid-title', container), opts.title);\r\n            }\r\n        },\r\n\r\n        render: function() {\r\n            var parentNode = $.get('#widget_' + this.opts.id);\r\n            var firstRender = !parentNode;\r\n\r\n            if (firstRender) {\r\n                // have to create the parent node by hand first - rendering multiple views to the same parentNode with mithril causes an overwrite\r\n                parentNode = $.createNode();\r\n                parentNode.id = 'widget_' + this.opts.id;\r\n                parentNode.setAttribute('data-url', this.opts.url);\r\n                parentNode.className = buildClassList(this.opts);\r\n                $.get('#dashboard').appendChild(parentNode);\r\n            }\r\n\r\n            // now render the rest of the widget content\r\n            m.render(parentNode, [\r\n                m('.row.grid-header', [\r\n                    m('span.grid-title.col-11', this.opts.title),\r\n                    m('span.grid-buttons.col-1', [\r\n                        m('span.float-right', [\r\n                            m('a.btn.btn-link.btn-refresh', { title: $.resx('refresh'), onclick: this.forceRefresh.bind(this) },\r\n                                m('i.dash.dash-arrows-cw')\r\n                            ),\r\n                            m('a.btn.btn-link.btn-fullscreen', { title: $.resx('toggleFullScreen'), onclick: this.toggleFullScreen.bind(this) },\r\n                                m('i.dash.dash-max')\r\n                            ),\r\n                            m('a.btn.btn-link.dash-ajax.dash-dialog.fs-disabled', {\r\n                                href: this.opts.baseUrl + (this.opts.isData ? 'Report' : 'Chart') + '/Details/' + (this.opts.isData ? this.opts.reportId : this.opts.chartId),\r\n                                title: $.resx(this.opts.isData ? 'viewReport' : 'viewChart')\r\n                            }, m('i.dash.dash-info')),\r\n                            m('a.btn.btn-link.dash-ajax.dash-dialog.fs-disabled', { href: this.opts.baseUrl + 'Dashboard/Edit/' + this.opts.id, title: $.resx('editWidget') },\r\n                                m('i.dash.dash-pencil')\r\n                            ),\r\n                            m('a.btn.btn-link.dash-ajax.dash-dialog.fs-disabled', { title: $.resx('deleteWidget'), onclick: this.deleteWidget.bind(this) },\r\n                                m('i.dash.dash-trash')\r\n                            )\r\n                        ])\r\n                    ])\r\n                ]),\r\n                m('.grid-body', [\r\n                    m('.widget-data hidden', { id: 'widgetData_' + this.opts.id }),\r\n                    m('.widget-chart hidden', { id: 'widgetChart_' + this.opts.id }, [\r\n                        m('.chart-spinner',\r\n                            m('.table-spinner', [m('.rect1'), m('.rect2'), m('.rect3'), m('.rect4'), m('.rect5')])\r\n                        ),\r\n                        m('.chart-error.hidden.pl-1',\r\n                            m('div', [\r\n                                m('p', $.resx('errorChartLoad')),\r\n                                m('.btn.btn-info.btn-sm', { onclick: this.refresh.bind(this) }, $.resx('tryAgain'))\r\n                            ])\r\n                        ),\r\n                        m('canvas.chart-canvas.hidden')\r\n                    ])\r\n                ]),\r\n                m('.grid-footer', [\r\n                    m('span.grid-updated-time', new Date().toLocaleTimeString()),\r\n                    m('span.resizable-handle.float-right', m('i.dash.dash-corner')),\r\n                    m('span.drag-handle.float-right', m('i.dash.dash-move'))\r\n                ])\r\n            ]);\r\n\r\n            if (firstRender) {\r\n                // add our system wide events\r\n                $.dialogs.processContent($.get('#widget_' + this.opts.id));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the container element for the widget.\r\n         * @returns {Node} DOM node that contains the widget content.\r\n         */\r\n        getContainer: function() {\r\n            return $.get('#widget_' + this.opts.id);\r\n        },\r\n\r\n        /**\r\n         * Add the draggabilly handlers.\r\n         * @param {Node} container - DOM node that contains the widget content.\r\n         * @param {Object} grid - Object that contains the grid columnWidth and rowHeight.\r\n         */\r\n        setupDraggie: function(container, grid) {\r\n            container = $.coalesce(container, this.getContainer());\r\n            var g = this.opts.grid = $.coalesce(grid, this.opts.grid);\r\n\r\n            $.destroy(this.moveDraggie);\r\n            this.moveDraggie = new Draggabilly(container, { handle: '.drag-handle', grid: [g.columnWidth, g.rowHeight], minZero: true }).on('dragEnd', this.stopDrag.bind(this));\r\n\r\n            $.destroy(this.resizeDraggie);\r\n            var handle = $.get('.resizable-handle', container);\r\n            this.resizeDraggie = new Draggabilly(handle, { grid: [g.columnWidth, g.rowHeight] }).on('dragStart', this.initResize.bind(this)).on('dragEnd', this.stopResize.bind(this));\r\n\r\n            var style = handle.currentStyle || window.getComputedStyle(handle);\r\n            this.dragMargin = style.marginRight.replace('px', '') * 1;\r\n        },\r\n\r\n        /**\r\n         * Stop dragging the widget and updates its location.\r\n         */\r\n        stopDrag: function() {\r\n            var x = Math.max(Math.round(this.moveDraggie.position.x / this.opts.grid.columnWidth), 0);\r\n            var y = Math.max(Math.round(this.moveDraggie.position.y / this.opts.grid.rowHeight), 0);\r\n            if (x + this.rect.width > this.opts.grid.columns) {\r\n                x = this.opts.grid.columns - this.rect.width;\r\n            }\r\n            if (y + this.rect.height > this.opts.grid.rows) {\r\n                y = this.opts.grid.rows - this.rect.height;\r\n            }\r\n            this.setLocation(x, y);\r\n            this.rect.updated = true;\r\n            this.opts.layoutCallback();\r\n        },\r\n\r\n        /**\r\n         * Start resizing a widget\r\n         * @param {Event} event - Original mousedown or touchstart event\r\n         */\r\n        initResize: function(event) {\r\n            // clear any selection so browser doesn't think we are dragging the selection\r\n            window.getSelection().removeAllRanges();\r\n\r\n            var container = this.getContainer();\r\n            container.style['z-index'] = 9999;\r\n            var pos = event.changedTouches ? event.changedTouches[0] : event;\r\n            this.x = pos.clientX;\r\n            this.y = pos.clientY;\r\n\r\n            var styles = document.defaultView.getComputedStyle(container);\r\n            this.width = styles.width.replace('px', '') * 1;\r\n            this.height = styles.height.replace('px', '') * 1;\r\n\r\n            if (event.target !== event.currentTarget) {\r\n                event.stopPropagation();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update the widget after the user finishes resizing.\r\n         */\r\n        stopResize: function() {\r\n            var container = this.getContainer();\r\n            var w = Math.max(this.width + this.resizeDraggie.position.x + this.dragMargin, this.opts.grid.columnWidth * 4);\r\n            var h = Math.max(this.height + this.resizeDraggie.position.y, this.opts.grid.rowHeight * 4);\r\n\r\n            this.setSize(Math.min(Math.round(w / this.opts.grid.columnWidth), this.opts.grid.columns), Math.min(Math.round(h / this.opts.grid.rowHeight), this.opts.grid.rows));\r\n\r\n            var handle = $.get('.resizable-handle', container);\r\n            if (handle) {\r\n                handle.removeAttribute('style');\r\n            }\r\n\r\n            this.opts.layoutCallback();\r\n\r\n            if (this.opts.isData) {\r\n                this.table.updateLayout();\r\n            }\r\n\r\n            this.rect.updated = true;\r\n        },\r\n\r\n        /**\r\n         * Delete this widget.\r\n         */\r\n        deleteWidget: function() {\r\n            var self = this;\r\n            Alertify.confirm($.resx('areYouSure'), function() {\r\n                $.ajax({\r\n                    method: 'DELETE',\r\n                    url: self.opts.baseUrl + 'Dashboard/Delete/' + self.opts.id\r\n                }, self.destroy.bind(self));\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Handle the result of a query for report data.\r\n         * @param {Object} json - Data to display in the widget.\r\n         * @returns {bool} True if the json data is valid\r\n         */\r\n        processJson: function(json) {\r\n            if (json.updatedDate && this.initDate) {\r\n                var updateDate = new Date(json.updatedDate);\r\n                if (updateDate && updateDate > this.initDate) {\r\n                    this.reload();\r\n                    return false;\r\n                }\r\n            }\r\n            if ((this.opts.isData && $.isNull(json.rows)) || (!this.opts.isData && ($.isNull(json.ranges) || json.ranges.length === 0))) {\r\n                Alertify.error($.resx('errorConnectingToDataSource'));\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Reload the widget options and reinitialize.\r\n         * @param {bool} showMsg - If true show the widget reloaded message to the user.\r\n         * @param {Object} options - Options to use to reload the widget instead of requesting from the server.\r\n         */\r\n        reload: function(showMsg, options) {\r\n            var callback = function(opts) {\r\n                this.destroy(false);\r\n                this.init($.extend(this.opts, opts));\r\n                if ($.coalesce(showMsg, true)) {\r\n                    Alertify.success($.resx('widgetReloaded').replace('{0}', this.opts.title));\r\n                }\r\n                return;\r\n            };\r\n\r\n            if (!$.isNull(options)) {\r\n                callback.call(this, options);\r\n            } else {\r\n                $.ajax({ method: 'GET', url: this.opts.baseUrl + 'Dashboard/WidgetOptions/' + this.opts.id }, callback.bind(this));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Refresh the data for the widget.\r\n         */\r\n        refresh: function() {\r\n            if ($.dialogs.hasOpenDialog()) {\r\n                // don't refresh when a dialog is open\r\n                return;\r\n            }\r\n\r\n            if (this.opts.isData) {\r\n                this.table.refresh();\r\n            } else {\r\n                this.chart.run();\r\n            }\r\n\r\n            var updatedAt = $.get('.grid-updated-time', this.getContainer());\r\n            if (updatedAt) {\r\n                updatedAt.innerText = new Date().toLocaleTimeString();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Force the widget to refresh now.\r\n         */\r\n        forceRefresh: function() {\r\n            if (this.opts.refreshSeconds > 0) {\r\n                clearInterval(this.interval);\r\n                this.interval = setInterval(this.refresh.bind(this), this.opts.refreshSeconds * 1000);\r\n            }\r\n            this.refresh();\r\n        },\r\n\r\n        /**\r\n         * Refresh the style based on the dimensions.\r\n         * @param {number} width - New width of the widget.\r\n         * @param {number} height - New height of the widget.\r\n         */\r\n        setSize: function(width, height) {\r\n            this.rect.width = width;\r\n            this.rect.height = height;\r\n            this.updateStyle();\r\n        },\r\n\r\n        /**\r\n         * Refresh the style based on the dimensions.\r\n         * @param {number} x - New x coordinate of the widget.\r\n         * @param {number} y - New y coordinate of the widget.\r\n         */\r\n        setLocation: function(x, y) {\r\n            this.rect.x = x;\r\n            this.rect.y = y;\r\n            this.updateStyle();\r\n        },\r\n\r\n        /**\r\n        * Refresh the style based on the dimensions.\r\n        */\r\n        updateStyle: function() {\r\n            var container = this.getContainer();\r\n            container.className = buildClassList(this.rect);\r\n            container.removeAttribute('style');\r\n        },\r\n\r\n        /**\r\n         * Handle an error.\r\n         * @returns {bool} Always returns true.\r\n         */\r\n        onError: function() {\r\n            if (this.interval) {\r\n                clearInterval(this.interval);\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Destroy the widget.\r\n         * @param {bool} totalDestruction - Remove the container node and null out the widget object if true.\r\n         */\r\n        destroy: function(totalDestruction) {\r\n            $.destroy(this.table);\r\n            $.destroy(this.chart);\r\n            $.destroy(this.moveDraggie);\r\n            $.destroy(this.resizeDraggie);\r\n\r\n            if (this.interval) {\r\n                clearInterval(this.interval);\r\n                this.interval = null;\r\n            }\r\n\r\n            if ($.coalesce(totalDestruction, true)) {\r\n                var container = this.getContainer();\r\n                container.widget = null;\r\n                container.parentNode.removeChild(container);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Switch this widget in/out of full screen mode.\r\n         */\r\n        toggleFullScreen: function() {\r\n            var container = this.getContainer();\r\n            var fullScreenIcon = $.get('.btn-fullscreen i', container);\r\n            var headerHideBtns = $.getAll('.fs-disabled', container);\r\n\r\n            if (this.isFullscreen) {\r\n                this.isFullscreen = false;\r\n                $.removeClass(container, 'full-screen');\r\n                $.removeClass(fullScreenIcon, 'dash-min');\r\n                $.addClass(fullScreenIcon, 'dash-max');\r\n                headerHideBtns.forEach(function(x) { $.removeClass(x, 'disabled'); });\r\n            } else {\r\n                this.isFullscreen = true;\r\n                $.addClass(container, 'full-screen');\r\n                $.addClass(fullScreenIcon, 'dash-min');\r\n                $.removeClass(fullScreenIcon, 'dash-max');\r\n                headerHideBtns.forEach(function(x) { $.addClass(x, 'disabled'); });\r\n            }\r\n\r\n            if (this.opts.isData) {\r\n                this.table.updateLayout();\r\n            }\r\n        }\r\n    };\r\n\r\n    return Widget;\r\n});\r\n","/*!\r\n * Wraps dialog functionality.\r\n */\r\n(function($, Alertify, Dialog, Table, Dropdown, Tab, CollapsibleList, Validator, DatePicker) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Set focus on an element after a dialog closes.\r\n     * @this {Event} Event that originally opened the dialog.\r\n     */\r\n    var focusOnClose = function() {\r\n        if (this && this.target) {\r\n            this.target.focus();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Selectors and callback function to create events.\r\n     */\r\n    var _contentActions = [\r\n        //{ selector: '[data-toggle=\"dropdown\"]', action: function() { new Dropdown(this); } },\r\n        { selector: '[data-toggle=\"tab\"], [data-toggle=\"pill\"]', action: function() { new Tab(this); } },\r\n        { selector: '.dash-table', action: function() { tableLoad(this); } },\r\n        { selector: '.dash-ajax', action: function() { $.on(this, 'click', handleAjaxRequest); } },\r\n        { selector: '.dash-form', action: function() { $.on(this, 'submit', function(e) { e.preventDefault(); }, true); } },\r\n        {\r\n            selector: '.dash-context-help', action: function() {\r\n                $.on(this, 'click', function(e) {\r\n                    Alertify.alert(this.getAttribute('data-message').replace(/&quot;/g, '\"'), focusOnClose.bind(e), focusOnClose.bind(e));\r\n                });\r\n            }\r\n        },\r\n        { selector: '.dash-collapsible-list', action: function() { new CollapsibleList(this); } },\r\n        {\r\n            selector: '[data-toggle=\"validator\"]', action: function() {\r\n                new Validator(this, { match: $.resx('errorMatch'), minlength: $.resx('errorMinLength') });\r\n            }\r\n        },\r\n        { selector: '.dash-input-replace', action: function() { $.on(this, 'click', inputReplace); } }\r\n    ];\r\n\r\n    /**\r\n     * Store list of open dialogs.\r\n     */\r\n    var _dialogs = [];\r\n\r\n    /**\r\n     * Find a dialog in the internal list by ID.\r\n     * @param {number} id - Dialog ID\r\n     */\r\n    var findDialogById = function(id) {\r\n        var dlgs = _dialogs.filter(function(x) {\r\n            return x.getId() === id;\r\n        });\r\n        return dlgs.length ? dlgs[0] : null;\r\n    };\r\n\r\n    /**\r\n     * Get active dialog.\r\n     * @param {Object} Return currently open dialog object.\r\n     */\r\n    var getActiveDialog = function() {\r\n        if (!_dialogs.length) {\r\n            return null;\r\n        }\r\n        return findDialogById(Math.max.apply(Math, _dialogs.map(function(x) { return x.getId(); })));\r\n    };\r\n\r\n    /**\r\n     * Get active dialog content.\r\n     * @param {Object} Return content node of currently open dialog object.\r\n     */\r\n    var getActiveContent = function() {\r\n        var dlg = getActiveDialog();\r\n        return dlg ? dlg.getContent() : null;\r\n    };\r\n\r\n    /**\r\n     * Check if any dialogs are open.\r\n     */\r\n    var hasOpenDialog = function() {\r\n        return _dialogs.length > 0;\r\n    };\r\n\r\n    /**\r\n     * Remove a dialog from internal list.\r\n     * @param {number} id - Dialog ID\r\n     */\r\n    var removeDialog = function(id) {\r\n        _dialogs = _dialogs.filter(function(x) {\r\n            return x.getId() !== id;\r\n        });\r\n        var activeDialog = getActiveDialog();\r\n        if (activeDialog) {\r\n            setTimeout(activeDialog.onShow.bind(activeDialog), 25);\r\n        } else {\r\n            // back to dashboard so set title\r\n            var dashboard = $.get('#dashboard');\r\n            if (dashboard) {\r\n                document.title = dashboard.getAttribute('data-title');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle action from a click on an ajax link.\r\n     * @param {Event} e - Event that triggered the request.\r\n     */\r\n    var handleAjaxRequest = function(e) {\r\n        if (!(e && e.target)) {\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n        e.target.blur();\r\n\r\n        var obj = e.target;\r\n        while (obj !== document.body && obj.parentNode && !$.hasClass(obj, 'dash-ajax')) {\r\n            obj = obj.parentNode;\r\n        }\r\n        if (!obj || !(obj.hasAttribute('href') || obj.hasAttribute('data-href')) || $.hasClass(obj, 'disabled')) {\r\n            return;\r\n        }\r\n\r\n        var url = obj.getAttribute('href') || obj.getAttribute('data-href');\r\n        var method = obj.getAttribute('data-method') || 'GET';\r\n        var message = obj.getAttribute('data-message');\r\n        var target = obj.getAttribute('target');\r\n\r\n        if ($.hasClass(obj, 'dash-confirm')) {\r\n            Alertify.dismissAll();\r\n            Alertify.confirm(message, sendAjaxRequest.bind(this, url, method, obj), function() { e.target.focus(); });\r\n        } else if ($.hasClass(obj, 'dash-prompt')) {\r\n            Alertify.dismissAll();\r\n            Alertify.prompt(message, checkPrompt.bind(this, url, method, obj));\r\n        } else if (target) {\r\n            window.open(url, target);\r\n        } else {\r\n            sendAjaxRequest(url, method, obj);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Send a request to the server and display the results\r\n     * @param {string} url - URL to send request for.\r\n     * @param {string} method - Request method type.\r\n     * @param {Node} target - Node that requested the data.\r\n     * @param {Event} e - Event that triggered the request.\r\n     * @param {string} promptValue - If coming from a prompt dialog, the value entered.\r\n     */\r\n    var sendAjaxRequest = function(url, method, target, e, promptValue) {\r\n        if (!url) {\r\n            return;\r\n        }\r\n\r\n        if (promptValue) {\r\n            if (url.indexOf('?') > -1) {\r\n                url += '&Prompt=' + encodeURIComponent(promptValue);\r\n            } else {\r\n                url += '?Prompt=' + encodeURIComponent(promptValue);\r\n            }\r\n        }\r\n        $.ajax({\r\n            method: method || 'GET',\r\n            url: url\r\n        }, function(responseData) {\r\n            if (!responseData.content) {\r\n                refreshTable();\r\n                return;\r\n            }\r\n\r\n            if (target && target.hasAttribute('data-update-target')) {\r\n                var targetSelector = target.getAttribute('data-update-target');\r\n                var updateObj;\r\n                if (targetSelector.substr(1) === '#') {\r\n                    updateObj = $.get(targetSelector);\r\n                } else {\r\n                    var dialog = getActiveDialog();\r\n                    if (dialog) {\r\n                        updateObj = $.get(targetSelector, dialog.getContainer());\r\n                    }\r\n                }\r\n                if (updateObj) {\r\n                    if (responseData.html) {\r\n                        updateObj.innerHTML = responseData.content;\r\n                        processContent(updateObj);\r\n                    } else {\r\n                        $.setText(updateObj, responseData.content);\r\n                    }\r\n                }\r\n            } else {\r\n                openDialog(responseData.content, target);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Open a new dialog.\r\n     * @param {string} content - HTML content for the dialog\r\n     * @param {Node} target - Node that triggered the dialog to open.\r\n     * @param {Function} onOkay - Function to run if the user clicks ok.\r\n     * @param {Function} onCancel - Function to run if the user clicks cancel.\r\n     * @param {Function} onShow - Function to run after the dialog loads.\r\n     */\r\n    var openDialog = function(content, target, onOkay, onCancel, onShow) {\r\n        Alertify.dismissAll();\r\n\r\n        // get max dialog id, and increment\r\n        var id = _dialogs.length ? Math.max.apply(Math, _dialogs.map(function(x) { return x.getId(); })) + 1 : 1;\r\n        var activeDlg = getActiveDialog();\r\n        _dialogs.push(new Dialog({\r\n            id: id, content: content, target: target, onOkay: onOkay, onCancel: onCancel, onShow: onShow,\r\n            buttons: { 'ok': $.resx('okay'), 'cancel': $.resx('cancel'), 'close': $.resx('close') },\r\n            parent: activeDlg ? activeDlg.getId() : null\r\n        }));\r\n    };\r\n\r\n    /**\r\n     * Check that a prompt value was supplied.\r\n     * @param {string} url - URL to send request for.\r\n     * @param {string} method - Request method type.\r\n     * @param {Node} target - Node that requested the data.\r\n     * @param {string} promptValue - If coming from a prompt dialog, the value entered.\r\n     * @param {Event} e - Event that triggered the request.\r\n     */\r\n    var checkPrompt = function(url, method, target, promptValue, e) {\r\n        if (!$.hasValue(promptValue)) {\r\n            Alertify.error($.resx('errorNameRequired'));\r\n            return false;\r\n        }\r\n        sendAjaxRequest.call(this, url, method, target, e, promptValue);\r\n    };\r\n\r\n    /**\r\n     * Initialize an table instance\r\n     * @param {Node} node - Node containing the data url for the table settings.\r\n     */\r\n    var tableLoad = function(node) {\r\n        var json = node.getAttribute('data-json');\r\n        if (json) {\r\n            var opts = JSON.parse(json);\r\n            opts.content = node;\r\n            node.table = new Table(opts);\r\n            node.removeAttribute('data-json');\r\n        } else {\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: node.getAttribute('data-url')\r\n            }, function(opts) {\r\n                node.table = new Table(opts);\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Refresh data for the table instance in the active dialog.\r\n     */\r\n    var refreshTable = function() {\r\n        var node = $.get('.dash-table', getActiveContent());\r\n        if (node && node.table) {\r\n            node.table.refresh();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Focus on the first error or input.\r\n     * @param {Node} node - Parent node to search in.\r\n     */\r\n    var focusNode = function(node) {\r\n        if (!node) {\r\n            return null;\r\n        }\r\n        var elems = $.getAll('.form-control-error:not([type=\"hidden\"]):not([disabled]):not([readonly]), .mform-control-error:not([type=\"hidden\"]):not([disabled]):not([readonly])', node).filter($.isVisible);\r\n        if (!elems.length) {\r\n            elems = $.getAll('input:not([type=\"hidden\"]):not([disabled]):not([readonly]), select:not([disabled]):not([readonly])', node).filter($.isVisible);\r\n        }\r\n        if (!elems.length) {\r\n            elems = $.getAll('button:not([disabled]), a:not([disabled]), [tabindex]:not([disabled]):not([tabindex=\"-1\"])', node).filter($.isVisible);\r\n        }\r\n        if (!elems.length) {\r\n            var dlg = $.closest('.rd-dialog', node);\r\n            if (dlg) {\r\n                elems = $.getAll('.rd-close', dlg).filter($.isVisible);\r\n            }\r\n        }\r\n        if (elems.length) {\r\n            elems[0].focus();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Replace the value of the data-target node with the data-value from this. Used for providing defaults via a dropdown.\r\n     */\r\n    var inputReplace = function() {\r\n        if (this.hasAttribute('data-target') && this.hasAttribute('data-value')) {\r\n            var target = $.get('#' + this.getAttribute('data-target'));\r\n            if (target && !$.isNull(target.value)) {\r\n                target.value = this.getAttribute('data-value');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Process node content adding events.\r\n     * @param {Node} node - Node to add events to.\r\n     */\r\n    var processContent = function(node) {\r\n        node = node instanceof Event ? null : node instanceof Table ? node.table : node;\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        // process all the content actions\r\n        var elems;\r\n        _contentActions.forEach(function(act) {\r\n            elems = $.getAll(act.selector, node);\r\n            if ($.matches(node, act.selector)) {\r\n                elems.push(node);\r\n            }\r\n            elems.forEach(function(x) {\r\n                act.action.call(x);\r\n            });\r\n        });\r\n\r\n        if (node.nodeName === 'BODY') {\r\n            var lang = node.getAttribute('data-lang');\r\n            if (lang && lang !== 'en') {\r\n                DatePicker.localize({ locale: lang });\r\n            }\r\n            focusNode(node);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set up the functions that are exposed publicly.\r\n     */\r\n    $.dialogs = {\r\n        openDialog: openDialog,\r\n        findDialogById: findDialogById,\r\n        focusNode: focusNode,\r\n        focusOnClose: focusOnClose,\r\n        getActiveContent: getActiveContent,\r\n        getActiveDialog: getActiveDialog,\r\n        hasOpenDialog: hasOpenDialog,\r\n        processContent: processContent,\r\n        refreshTable: refreshTable,\r\n        removeDialog: removeDialog,\r\n        sendAjaxRequest: sendAjaxRequest\r\n    };\r\n})(this.$, this.Alertify, this.Dialog, this.Table, this.Dropdown, this.Tab, this.CollapsibleList, this.Validator, this.DatePicker);\r\n","/*!\r\n * Wraps dataset form functionality.\r\n */\r\n(function($, Dataset) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Store references to the dataset form mithril modules and value lists.\r\n     * @type {Object}\r\n     */\r\n    var _datasets = {};\r\n\r\n    /**\r\n     * Initialize the dataset form when the datasetFormLoad event fires.\r\n     */\r\n    $.on(document, 'datasetFormLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'dataset-form')) {\r\n            return;\r\n        }\r\n\r\n        var dataset = $.get('.dataset-id', form);\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-url'),\r\n            data: dataset ? { id: dataset.value } : null\r\n        }, function(data) {\r\n            var dlg = $.dialogs.getActiveDialog();\r\n            data.content = dlg.getContent();\r\n            _datasets[dlg.getId()] = new Dataset(data);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Destroy the form when the dialog closes.\r\n     */\r\n    $.on(document, 'datasetFormUnload', function() {\r\n        if (!_datasets) {\r\n            return;\r\n        }\r\n\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var dataset = _datasets[dlg.getId()];\r\n        if (dataset) {\r\n            dataset.destroy();\r\n        }\r\n        delete _datasets[dlg.getId()];\r\n    });\r\n})(this.$, this.Dataset);\r\n","/*!\r\n * Wraps functionality for displaying reports.\r\n */\r\n(function($, Draggabilly, ShareForm, ReportDetails) {\r\n    'use strict';\r\n\r\n    var _reports = {};\r\n    var _shares = {};\r\n\r\n    /**\r\n     * Update zIndex of column being dragged so it is on top.\r\n     * @param {Event} event - Original mousedown or touchstart event\r\n     */\r\n    var startDrag = function(event) {\r\n        var target = $.hasClass(event.target, 'column-item') ? event.target : event.target.parentNode;\r\n        target.style['z-index'] = 9999;\r\n    };\r\n\r\n    /**\r\n     * Update column lists when the user stops dragging a column.\r\n     * @param {Event} event - Original mouseup or touchend event\r\n     * @param {MouseEvent|Touch} pointer - Event object that has .pageX and .pageY\r\n     */\r\n    var stopDrag = function(event, pointer) {\r\n        var target = $.hasClass(event.target, 'column-item') ? event.target : event.target.parentNode;\r\n        var isLeft = pointer.x + target.offsetWidth / 2 < document.documentElement.clientWidth / 2;\r\n        var newPos = Math.max(Math.round(target.offsetTop / target.offsetHeight), 0);\r\n\r\n        $.removeClass(target, 'column-item-right');\r\n        $.removeClass(target, 'column-item-left');\r\n        target.removeAttribute('style');\r\n\r\n        var leftItems = $.getAll('.column-item-left');\r\n        leftItems.sort(columnSort);\r\n        var rightItems = $.getAll('.column-item-right');\r\n        rightItems.sort(columnSort);\r\n        newPos = Math.min(newPos, isLeft ? leftItems.length : rightItems.length);\r\n\r\n        if (isLeft) {\r\n            $.addClass(target, 'column-item-left');\r\n            leftItems.splice(newPos, 0, target);\r\n        } else {\r\n            $.addClass(target, 'column-item-right');\r\n            rightItems.splice(newPos, 0, target);\r\n        }\r\n\r\n        updateList(leftItems, true);\r\n        updateList(rightItems, false);\r\n    };\r\n\r\n    /**\r\n     * Sort columns by their vertical position.\r\n     * @param {Object} a - Object for first column.\r\n     * @param {Object} b - Object for second column.\r\n     * @returns {bool} True if first column should be after second column, else false;\r\n     */\r\n    var columnSort = function(a, b) {\r\n        return a.offsetTop > b.offsetTop;\r\n    };\r\n\r\n    /**\r\n     * Update the position and displayOrder of columns in a list.\r\n     * @param {Node[]} items - Array of column nodes.\r\n     * @param {bool} isLeft - True if the left column list, else false.\r\n     */\r\n    var updateList = function(items, isLeft) {\r\n        items.forEach(function(x, i) {\r\n            updateColumn(x, i, isLeft);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Update the class list and displayOrder for a column item.\r\n     * @param {Node} element - DOM node for the column.\r\n     * @param {number} index - New index of the column in the list.\r\n     * @param {bool} isLeft - True if the column is in the left list, else false.\r\n     */\r\n    var updateColumn = function(element, index, isLeft) {\r\n        element.className = element.className.replace(/column-item-y-([0-9]*)/i, '').trim() + ' column-item-y-' + index;\r\n        var input = $.get('.column-grid-display-order', element);\r\n        if (input) {\r\n            if (isLeft) {\r\n                input.value = 0;\r\n            } else {\r\n                input.value = index + 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initialize the report column selector.\r\n     */\r\n    $.on(document, 'columnSelectorLoad', function() {\r\n        $.getAll('.column-item').forEach(function(x) {\r\n            new Draggabilly(x).on('dragStart', startDrag).on('dragEnd', stopDrag);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Request settings to display a report and call the method to initialize it.\r\n     */\r\n    $.on(document, 'reportLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'report-form')) {\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-url')\r\n        }, function(data) {\r\n            var dlg = $.dialogs.getActiveDialog();\r\n            data.content = dlg.getContent();\r\n            _reports[dlg.getId()] = new ReportDetails(data);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Clean up when closing the report dialog.\r\n     */\r\n    $.on(document, 'reportUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var report = _reports[dlg.getId()];\r\n        if (report) {\r\n            report.destroy();\r\n        }\r\n        delete _reports[dlg.getId()];\r\n        document.dispatchEvent($.events.dashboardReload);\r\n    });\r\n\r\n    /**\r\n     * Load the settings to display the report share form.\r\n     */\r\n    $.on(document, 'reportShareLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'report-share-form')) {\r\n            return;\r\n        }\r\n\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        _shares[dlg.getId()] = new ShareForm({ content: dlg.getContent(), formName: 'Shares' });\r\n        _shares[dlg.getId()].run();\r\n    });\r\n\r\n    /**\r\n     * Clean up when the report share dialog closes.\r\n     */\r\n    $.on(document, 'reportShareUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var share = _shares[dlg.getId()];\r\n        if (share) {\r\n            share.destroy();\r\n        }\r\n        delete _shares[dlg.getId()];\r\n    });\r\n})(this.$, this.Draggabilly, this.ShareForm, this.ReportDetails);\r\n","/*!\r\n * Wraps functionality for displaying charts.\r\n */\r\n(function($, Alertify, Chart, ChartDetails, ShareForm) {\r\n    'use strict';\r\n\r\n    // Change chart settings.\r\n    Chart.defaults.global.maintainAspectRatio = false;\r\n    Chart.defaults.global.title.display = false;\r\n    Chart.defaults.global.legend.position = 'bottom';\r\n    Chart.defaults.global.legend.labels.fontSize = 16;\r\n    Chart.defaults.global.legend.labels.fontFamily = 'Calibri';\r\n    Chart.defaults.global.layout = { padding: 10 };\r\n    Chart.defaults.scale.ticks.fontFamily = 'Calibri';\r\n    Chart.defaults.scale.ticks.fontSize = 12;\r\n\r\n    var _charts = {};\r\n    var _shares = {};\r\n\r\n    /**\r\n     * Request settings to display a chart and call the method to initialize it.\r\n     */\r\n    $.on(document, 'chartLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'chart-form')) {\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-url')\r\n        }, function(data) {\r\n            var dlg = $.dialogs.getActiveDialog();\r\n            data.content = dlg.getContent();\r\n            _charts[dlg.getId()] = new ChartDetails(data);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Clean up when closing the chart dialog.\r\n     */\r\n    $.on(document, 'chartUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var chart = _charts[dlg.getId()];\r\n        if (chart) {\r\n            chart.destroy();\r\n        }\r\n        delete _charts[dlg.getId()];\r\n        document.dispatchEvent($.events.dashboardReload);\r\n    });\r\n\r\n    /**\r\n     * Load the settings to display the chart share form.\r\n     */\r\n    $.on(document, 'chartShareLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'chart-share-form')) {\r\n            return;\r\n        }\r\n\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        _shares[dlg.getId()] = new ShareForm({ content: dlg.getContent(), formName: 'Shares' });\r\n        _shares[dlg.getId()].run();\r\n    });\r\n\r\n    /**\r\n     * Clean up when the chart share dialog closes.\r\n     */\r\n    $.on(document, 'chartShareUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var share = _shares[dlg.getId()];\r\n        if (share) {\r\n            share.destroy();\r\n        }\r\n        delete _shares[dlg.getId()];\r\n    });\r\n})(this.$, this.Alertify, this.Chart, this.ChartDetails, this.ShareForm);\r\n","/*!\r\n * Wraps functionality for displaying/moving/resizing widgets and their contents.\r\n */\r\n(function($, Widget) {\r\n    'use strict';\r\n\r\n    var _columns = 20;\r\n    var _rows = 20;\r\n    var _currentPositions = null;\r\n\r\n    /**\r\n     * Initialize the dashboard.\r\n     * @param {Object} widgets - Widgets options.\r\n     */\r\n    var create = function(widgets) {\r\n        var dashboard = $.get('#dashboard');\r\n        widgets = $.coalesce(widgets, []);\r\n\r\n        var opts = makeWidgetOpts(dashboard);\r\n        if (widgets.length) {\r\n            widgets.forEach(function(x) { new Widget($.extend(x, opts)); });\r\n            $.on(window, 'keydown', checkKeyPress);\r\n            $.on(window, 'resize', $.debounce(resizeLayout, 100));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Make the extra options needed to create a widget.\r\n     * @param {Node} dashboard - Dashboard node.\r\n     * @returns {Object} Object with grid and layoutCallback.\r\n     */\r\n    var makeWidgetOpts = function(dashboard) {\r\n        dashboard = $.coalesce(dashboard, $.get('#dashboard'));\r\n        return {\r\n            grid: { columns: _columns, rows: _rows, columnWidth: dashboard.parentNode.offsetWidth / _columns, rowHeight: dashboard.parentNode.offsetHeight / _rows },\r\n            layoutCallback: $.debounce(updatePosition, 100)\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Get the config for the dashboard from the server.\r\n     */\r\n    $.on(document, 'dashboardLoad', function() {\r\n        var dash = $.get('#dashboard');\r\n        if (!dash) {\r\n            return;\r\n        }\r\n        var json = dash.getAttribute('data-json');\r\n        if (json) {\r\n            dash.removeAttribute('data-json');\r\n            create(JSON.parse(json));\r\n        } else if (dash.hasAttribute('data-url')) {\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: dash.getAttribute('data-url')\r\n            }, function(data) {\r\n                create(data);\r\n            });\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Fetch widget settings from server and add/reload/delete widgets as needed.\r\n     */\r\n    $.on(document, 'dashboardReload', function() {\r\n        var dash = $.get('#dashboard');\r\n        if (!(dash && dash.hasAttribute('data-url'))) {\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: dash.getAttribute('data-url')\r\n        }, function(widgetOpts) {\r\n            if (widgetOpts) {\r\n                var widgets = getWidgets();\r\n\r\n                widgetOpts.forEach(function(x) {\r\n                    var widgetDate = new Date(x.widgetDateUpdated);\r\n                    var oldWidget = $.findByKey(widgets, 'id', x.id);\r\n                    if (!oldWidget) {\r\n                        // newly added widget\r\n                        new Widget($.extend(x, makeWidgetOpts()));\r\n                    } else {\r\n                        // existing widget - remove this widget from the list\r\n                        widgets.splice(oldWidget._i, 1);\r\n\r\n                        if (oldWidget.initDate < widgetDate) {\r\n                            // this widget needs to be reloaded\r\n                            oldWidget.reload(null, x);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                if (widgets.length) {\r\n                    // any widgets still left need to be deleted\r\n                    widgets.forEach(function(x) { x.destroy(true); });\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Get the widget objects for the dashboard.\r\n     * @returns {Widget[]} Array of widgets.\r\n     */\r\n    var getWidgets = function() {\r\n        return $.getAll('.grid-item').map(function(x) { return x.widget; });\r\n    };\r\n\r\n    /**\r\n     * Update widget tables on window resize.\r\n     */\r\n    var resizeLayout = function() {\r\n        var grid = makeWidgetOpts().grid;\r\n        getWidgets().forEach(function(x) {\r\n            if (x.opts.isData) {\r\n                x.table.updateLayout();\r\n            }\r\n            x.setupDraggie(null, grid);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Update widget position to avoid collisions after a resize or drag.\r\n     */\r\n    var updatePosition = function() {\r\n        var sorted = getWidgets();\r\n        sorted.sort(rectSort);\r\n\r\n        var l = sorted.length, aWidget, bWidget;\r\n        for (var i = 0; i < l; i++) {\r\n            aWidget = sorted[i];\r\n            aWidget.rect.updated = false;\r\n\r\n            for (var j = 0; j < l; j++) {\r\n                if (i === j) {\r\n                    continue;\r\n                }\r\n\r\n                bWidget = sorted[j];\r\n                if (bWidget.rect.overlaps(aWidget.rect)) {\r\n                    if (bWidget.rect.y > aWidget.rect.y) {\r\n                        // need to move down\r\n                        bWidget.setLocation(bWidget.rect.x, aWidget.rect.y + aWidget.rect.height);\r\n                    } else if (aWidget.rect.x + aWidget.rect.width + bWidget.rect.width > _columns) {\r\n                        // need to move down\r\n                        bWidget.setLocation(bWidget.rect.x, aWidget.rect.y + aWidget.rect.height);\r\n                    } else {\r\n                        // safe to move right\r\n                        bWidget.setLocation(aWidget.rect.x + aWidget.rect.width, bWidget.rect.y);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        saveDashboard();\r\n    };\r\n\r\n    /**\r\n     * Sort widgets from top left to bottom right.\r\n     * @param {Widget} a - First widget to compare.\r\n     * @param {Widget} b - Second widget to compare.\r\n     * @returns {number} Negative number if a comes first, positive number if b, zero if equal.\r\n     */\r\n    var rectSort = function(a, b) {\r\n        if (a.rect.y === b.rect.y && a.rect.x === b.rect.x) {\r\n            return a.rect.updated ? -1 : b.rect.updated ? 1 : 0;\r\n        }\r\n        if (a.rect.x === b.rect.x) {\r\n            return a.rect.y - b.rect.y;\r\n        }\r\n        return a.rect.x - b.rect.x;\r\n    };\r\n\r\n    /**\r\n     * Save dashboard settings back to server.\r\n     */\r\n    var saveDashboard = function() {\r\n        var positions = getWidgets().map(function(w) {\r\n            return {\r\n                Id: w.opts.id || 0,\r\n                Width: w.rect.width || 1,\r\n                Height: w.rect.height || 1,\r\n                X: w.rect.x || 0,\r\n                Y: w.rect.y || 0\r\n            };\r\n        });\r\n\r\n        if (_currentPositions && $.equals(_currentPositions, positions)) {\r\n            return;\r\n        }\r\n        _currentPositions = positions;\r\n\r\n        var dash = $.get('#dashboard');\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: dash.getAttribute('data-save-url'),\r\n            data: { Widgets: positions },\r\n            block: false\r\n        }, null);\r\n    };\r\n\r\n    /**\r\n     * Toggle full screen on escape key.\r\n     * @param {Event} evt - Key press event.\r\n     */\r\n    var checkKeyPress = function(evt) {\r\n        evt = evt || window.event;\r\n        if (evt.keyCode === 27) {\r\n            getWidgets().filter(function(x) { return x.isFullscreen; }).forEach(function(x) { x.toggleFullScreen(); });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set up content after page has loaded.\r\n     */\r\n    var pageLoaded = function() {\r\n        $.dialogs.processContent($.get('body'));\r\n\r\n        $.on('#toggleContextHelpBtn', 'click', function(e) {\r\n            e.preventDefault();\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: this.getAttribute('href')\r\n            }, function(data) {\r\n                if (data.enabled) {\r\n                    $.addClass('#toggleContextHelpBtn', 'help-active');\r\n                } else {\r\n                    $.removeClass('#toggleContextHelpBtn', 'help-active');\r\n                }\r\n            });\r\n        });\r\n\r\n        $.on('#menuBtn', 'click', function() {\r\n            var body = $.get('body');\r\n            if ($.hasClass(body, 'toggled')) {\r\n                $.removeClass(body, 'toggled');\r\n            } else {\r\n                $.addClass(body, 'toggled');\r\n            }\r\n\r\n            // fire window resize in cross browser friendly way so tables and charts will resize\r\n            var evt = document.createEvent('HTMLEvents');\r\n            evt.initEvent('resize', true, false);\r\n            window.dispatchEvent(evt);\r\n        });\r\n\r\n        document.dispatchEvent($.events.dashboardLoad);\r\n    };\r\n\r\n    /**\r\n     * Run events needed for the inital page load.\r\n     */\r\n    if ($.resxLoaded) {\r\n        pageLoaded();\r\n    } else {\r\n        $.on(document, 'resxLoaded', pageLoaded);\r\n    }\r\n})(this.$, this.Widget);\r\n"]}