{"version":3,"sources":["native.bootstrap.js","fecha.js","accounting.js","Help.js","Dialog.js","Autocomplete.js","DatePicker.js","Rect.js","Draggabilly.js","Chart.js","Prism.js","CollapsibleList.js","Validator.js","colors.js","ColorPicker.js","Table.js","DashChart.js","Form.js","JoinForm.js","ColumnForm.js","ShareForm.js","FilterForm.js","GroupForm.js","RangeForm.js","Dataset.js","BaseDetails.js","ReportDetails.js","ChartDetails.js","Widget.js","dialogs.js","datasets.js","reports.js","charts.js","dashboard.js"],"names":["root","factory","Dropdown","$","_keys","DOWN","ENTER","ESC","TAB","UP","SPACE","element","this","menu","get","target","parentNode","container","closest","items","getAll","selectedIndex","init","prototype","actions","setAttribute","on","handle","key","bind","close","self","forEach","x","index","e","click","stopPropagation","selectIndex","currentTarget","nodeName","toggle","test","href","preventDefault","hasClass","addClass","which","Math","min","length","max","removeClass","setTimeout","Tab","tab","tabs","dropdown","duration","action","window","next","nextContent","getAttribute","activeTab","getActiveTab","activeContent","getActiveContent","activeTabs","a","b","shorten","arr","sLen","newArr","i","len","push","substr","monthUpdate","arrName","d","v","i18n","indexOf","charAt","toUpperCase","toLowerCase","month","pad","val","String","fecha","token","twoDigits","word","literal","noop","dayNames","monthNames","monthNamesShort","dayNamesShort","amPm","DoFn","D","formatFlags","dateObj","getDate","DD","Do","getDay","dd","ddd","dddd","M","getMonth","MM","MMM","MMMM","YY","getFullYear","YYYY","h","getHours","hh","H","HH","m","getMinutes","mm","s","getSeconds","ss","S","round","getMilliseconds","SS","SSS","A","ZZ","o","getTimezoneOffset","floor","abs","l","onejan","Date","ceil","ll","q","parseFlags","day","RegExp","source","parseInt","cent","year","hour","minute","second","millisecond","isPm","minutes","parts","match","timezoneOffset","masks","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","format","mask","i18nSettings","isNaN","getTime","literals","replace","$0","$1","slice","shift","parse","dateStr","Error","isValid","dateInfo","isUtc","info","search","result","today","date","UTC","lib","version","settings","currency","symbol","decimal","thousand","precision","grouping","number","tokens","value","checkPrecision","parseFormat","isString","res","newFormat","exec","unformat","regex","unformatted","parseFloat","toFixed","power","pow","formatNumber","opts","extend","usePrecision","negative","base","mod","split","accounting","formatMoney","formats","isFunction","pos","neg","zero","checkCurrencyFormat","Help","Alertify","oninit","vnode","attrs","enabled","message","showHelp","alert","dialogs","focusOnClose","view","children","concat","type","role","onclick","isArray","Dialog","id","title","basic","buttons","_buttons","content","onOkay","onCancel","onShow","parent","elements","changed","run","ok","cancel","onkeydown","checkKey","tabindex","class","trust","oncreate","node","dom","firstElementChild","hasAttribute","redraw","document","createElement","body","appendChild","mount","processContent","checkEvent","getId","getContainer","getContent","getTarget","findForm","matches","call","focusNode","form","validateForm","formData","serializeForm","ajax","method","url","data","__RequestVerificationToken","responseData","parentDlg","findDialogById","parentTarget","destroy","closeParent","dialogUrl","sendAjaxRequest","confirm","resx","focus","keyCode","attrName","ev","events","hasOwnProperty","dispatchEvent","field","name","disabled","Array","apply","options","filter","selected","map","checked","setTabStatus","el","formValidate","mErrors","error","tableNode","table","removeChild","removeDialog","refreshTable","Autocomplete","valueChanged","placeholder","active","required","onSelect","list","filteredList","onupdate","autocomplete","setList","onKeyDown","selectItem","onInput","onBlur","ul","scrollIntoView","item","isNull","input","highlightItem","text","regExpEscape","trim","hasValue","aria-autocomplete","oninput","onblur","aria-selected","onmousedown","DatePicker","chooseDate","props","box","selectedDate","textContent","setFullYear","setDate","dismissAndCommit","relatedTarget","onchange","prevNext","delta","newDate","setMonth","pushToLastDay","adjustedProps","over","under","lastDateInMonth","obj","oldDate","stringsForLocale","locale","_months","_days","toLocaleDateString","weekday","days","months","wrapAround","idx","array","n","daysFromLastMonth","firstDay","weekStart","lastDate","offsetStart","daysFromThisMonth","daysFromNextMonth","prev","these","soFar","defaultDate","now","setHours","yearsForDecade","start","classForBox","hours","prevNextTitles","formatOptions","defaultFormat","Header","theseMonths","MonthView","prevDates","theseDates","nextDates","theseWeekdays","_","substring","setMinutes","YearView","DecadeView","decade","Editor","requestAnimationFrame","classList","add","onbeforeremove","remove","Promise","done","localize","loc","isNumber","strings","prop","eval","state","onbeforeupdate","chosen","showEditor","KeyboardEvent","readonly","Rect","width","height","y","coalesce","updated","overlaps","rect","thisRight","thisBottom","rectRight","rectBottom","getSize","getStyleSize","num","elem","isSetup","div","style","padding","borderStyle","borderWidth","boxSizing","documentElement","getComputedStyle","isBoxSizeOuter","setup","isNode","display","size","innerWidth","innerHeight","outerWidth","outerHeight","measurementsLength","measurements","getZeroSize","offsetWidth","offsetHeight","isBorderBox","measurement","paddingWidth","paddingLeft","paddingRight","paddingHeight","paddingTop","paddingBottom","marginWidth","marginLeft","marginRight","marginHeight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderHeight","borderTopWidth","borderBottomWidth","isBorderBoxSizeOuter","styleWidth","styleHeight","EvEmitter","eventName","listener","_events","listeners","off","splice","emitEvent","args","Unipointer","proto","Object","create","bindStartEvent","_bindStartEvent","unbindStartEvent","isBind","bindMethod","navigator","pointerEnabled","msPointerEnabled","handleEvent","event","getTouch","touches","findByKey","pointerIdentifier","button","_pointerDown","ontouchstart","changedTouches","onMSPointerDown","onpointerdown","pointer","isPointerDown","undefined","pointerId","identifier","pointerDown","_bindPostStartEvents","postStartEvents","mousedown","touchstart","pointerdown","MSPointerDown","addEventListener","_boundPointerEvents","_unbindPostStartEvents","removeEventListener","onmousemove","_pointerMove","onMSPointerMove","onpointermove","ontouchmove","touch","pointerMove","onmouseup","_pointerUp","onMSPointerUp","onpointerup","ontouchend","_pointerDone","pointerUp","pointerDone","onMSPointerCancel","onpointercancel","_pointerCancel","ontouchcancel","pointerCancel","getPointerPoint","pageX","pageY","Unidragger","bindHandles","_bindHandles","unbindHandles","binderExtra","handles","_dragPointerDown","focused","activeElement","blur","pointerDownPoint","canPreventDefaultOnPointerDown","moveVector","_dragPointerMove","_dragMove","movePoint","isDragging","hasDragStarted","_dragStart","_dragPointerUp","_dragEnd","_staticClick","dragStartPoint","isPreventingClicks","dragStart","dragMove","dragEnd","isIgnoringMouseUp","staticClick","Draggabilly","_create","applyGrid","grid","applyMinZero","drag","lastTime","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","currTime","timeToCall","transformProperty","transform","positionValues","relative","absolute","fixed","position","_getPosition","startPoint","dragPoint","startPosition","enable","setHandles","_getPositionCoord","left","top","_addTransformPosition","styleSide","measure","parentSize","matrixValues","xIndex","translateX","translateY","isEnabled","measureContainment","setLeftTop","animate","containment","elemSize","containerSize","elemRect","getBoundingClientRect","containerRect","borderSizeX","borderSizeY","relativeStartPosition","containSize","dragX","dragY","gridX","gridY","containDrag","axis","minZero","positionDrag","disable","removeAttribute","f","exports","module","define","amd","global","Chart","t","r","u","require","code","1","getRgba","string","rgb","colorNames","scale","getHsla","alpha","getHwb","rgbaString","rgba","percentaString","hslaString","hsla","hexDouble","str","toString","getRgb","getHsl","getAlpha","vals","hexString","rgbString","percentString","hslString","hwbString","hwb","keyword","reverseNames","5","2","convert","Color","valid","values","hsl","hsv","cmyk","setValues","red","lightness","w","whiteness","c","cyan","setSpace","arguments","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","p","w1","w2","toJSON","clone","console","spaces","maxes","getValues","space","chans","capped","sname","svalues","4","3","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","k","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","hwb2rgb","wh","bl","cmyk2rgb","xyz2rgb","xyz2lab","lab2xyz","lab","y2","lab2lch","hr","atan2","PI","sqrt","lab2rgb","lch2lab","lch","cos","sin","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","conversions","Converter","func","arg","pair","from","to","convs","routeSpace","fspace","6","helpers","defaults","Element","Interaction","layouts","platform","plugins","Ticks","register","initialize","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","31","36","39","40","44","45","46","7","8","9","Bar","context","config","Doughnut","Line","_set","hover","mode","scales","xAxes","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","yAxes","rectangle","borderSkipped","tooltips","callbacks","yLabel","labels","label","datasets","datasetIndex","xLabel","controllers","bar","DatasetController","dataElementType","Rectangle","meta","getMeta","stack","getDataset","update","reset","ilen","rects","_ruler","getRuler","updateElement","chart","dataset","custom","rectangleOptions","_xScale","getScaleForId","xAxisID","_yScale","yAxisID","_datasetIndex","_index","_model","datasetLabel","backgroundColor","valueAtIndexOrDefault","borderColor","updateElementGeometry","pivot","model","vscale","getValueScale","getBasePixel","horizontal","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","last","stacked","stacks","getDatasetMeta","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","isNullOrUndef","barThickness","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","count","computeFitCategoryTraits","stackIndex","valueOrDefault","maxBarThickness","Infinity","draw","canvas","clipArea","ctx","chartArea","unclipArea","setHoverStyle","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","rectangleElementOptions","horizontalBar","animation","animateRotate","animateScale","legendCallback","join","legend","generateLabels","ds","arc","arcOpts","fillStyle","strokeStyle","lineWidth","hidden","onClick","legendItem","cutoutPercentage","rotation","circumference","tooltipItem","dataLabel","doughnut","pie","Arc","linkScales","getRingIndex","ringIndex","j","me","availableWidth","right","availableHeight","bottom","minSize","startAngle","endAngle","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","each","animationOpts","centerX","centerY","calculateCircumference","arcs","hoverWidth","_chart","showLines","spanGaps","lineEnabled","showLine","line","datasetElementType","Point","points","lineElementOptions","tension","lineTension","_scale","_children","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","fill","steppedLine","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","point","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","yScale","xScale","pointOptions","radius","pointRadius","hitRadius","pointHitRadius","NaN","calculatePointY","skip","pointStyle","dsMeta","sumPos","sumNeg","stackedRightValue","Number","rightValue","capControlPoint","pt","controlPoints","area","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","controlPointNextY","capBezierPoints","hoverRadius","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","easing","onProgress","onComplete","Animation","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","framesToDrop","advance","endTime","defineProperty","set","positionIsHorizontal","types","instances","construct","configMerge","initConfig","acquireContext","uid","aspectRatio","_bufferedRender","notify","retinaScale","devicePixelRatio","bindEvents","responsive","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","clear","stop","silent","maintainAspectRatio","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","responsiveAnimationDuration","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","keys","reduce","dtype","dposition","isDefault","scaleType","scaleClass","scaleService","getScaleConstructor","mergeTicksOptions","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","ControllerClass","resetElements","tooltip","newOptions","removeBox","_options","updateConfig","_invalidate","_data","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","effects","stepDecimal","easingValue","transition","boxes","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","modes","single","getElementsAtEvent","intersect","getElementsAtXAxis","getElementsAtEventForMode","getDatasetAtEvent","_meta","generateLegend","unbindEvents","releaseContext","toBase64Image","toDataURL","Tooltip","_chartInstance","_listeners","eventHandler","updateHoverStyle","_start","bufferedRequest","animationDuration","hoverOptions","onHover","native","arrayEquals","Controller","unlistenArrayEvents","stub","_chartjs","arrayEvents","addElements","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","configurable","enumerable","object","listenArrayEvents","resyncElements","elementOpts","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","onDataSplice","onDataUnshift","inherits","scope","merge","color","configuration","_view","ease","actual","origin","c0","c1","isFinite","interpolate","tooltipPosition","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","constrainedNode","constrainedContainer","hasCNode","hasCContainer","infinity","POSITIVE_INFINITY","merger","tval","sval","scaleMerge","getScaleDefaults","_merger","slen","where","collection","filterCallback","filtered","findNextWhere","arrayToSearch","startIndex","currentItem","findPreviousWhere","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","log10","exponent","log","LOG10E","powerOf10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distance","distanceBetweenPoints","pt1","pt2","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","current","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","alphaK","betaK","tauK","squaredMagnitude","deltaX","loop","niceNum","fraction","oRequestAnimationFrame","msRequestAnimationFrame","getRelativePosition","evt","mouseX","mouseY","originalEvent","srcElement","boundingRect","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","clientWidth","cw","clientHeight","ch","property","currentStyle","getPropertyValue","forceRatio","pixelRatio","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","cache","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","defaultColor","colorValue","CanvasPattern","parseVisibleItems","handler","jlen","getIntersectItems","inRange","getNearestItems","distanceMetric","minDistance","nearestItems","getCenterPoint","getDistanceMetricForAxis","useX","useY","deltaY","indexMode","x-axis","nearest","sort","ret","getArea","intersectsItem","inXRange","inYRange","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","layout","filterByPosition","sortByWeight","reverse","_tmpIndex_","v0","v1","addBox","fullWidth","layoutItem","configure","fitBox","minBoxSize","minBoxSizes","minBox","scaleMargin","totalLeftBoxesWidth","maxHorizontalLeftPadding","totalRightBoxesWidth","maxHorizontalRightPadding","chartWidth","maxChartAreaWidth","chartHeight","maxChartAreaHeight","placeBox","leftPadding","rightPadding","totalTopBoxesHeight","layoutOptions","toPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","totalBottomBoxesHeight","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","_plugins","_cacheId","plugin","unregister","hook","descriptor","params","descriptors","$plugins","labelsFromTicks","getLineValue","lineValue","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","formatters","minor","major","computeTextSize","tick","parseFontOptions","globalDefaults","fontSize","family","parseLineHeight","toLineHeight","Scale","_ticks","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","rawValue","getLabelForIndex","getValueForPixel","pixel","finalVal","getPixelForDecimal","valueOffset","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","optionMajorTicks","isRotated","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","zeroLineIndex","tx1","ty1","tx2","ty2","x1","y1","x2","labelX","labelY","textAlign","textBaseline","labelYOffset","xLineValue","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","save","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","constructors","registerScaleType","scaleConstructor","scaleDefaults","updateScaleDefaults","additions","linear","tickValue","logDelta","tickString","numDecimal","logarithmic","remain","toExponential","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","createTooltipItem","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","dataPoints","vm","paddingAndSize","radiusAndPadding","getBackgroundPoint","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","quadraticCurveTo","closePath","hasTooltipContent","average","eventPosition","nearestElement","tp","27","inLabelRange","chartX","chartY","pointRelativePosition","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","28","currentVM","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","29","xRange","drawPoint","30","isVertical","getBarBounds","halfWidth","halfHeight","cornerAt","corners","startCorner","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corner","bounds","32","clearRect","roundedRect","rx","ry","edgeLength","xOffset","yOffset","SQRT2","leftX","topY","sideSize","drawImage","clip","flip","bezierCurveTo","drawRoundedRectangle","33","isObject","defaultValue","fn","thisArg","loopable","a0","a1","klen","_mergerIf","mergeIf","sources","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","34","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","35","resolve","inputs","37","getContext","38","readUsedSize","eventListenerOptions","createEvent","nativeEvent","addResizeListener","expando","EXPANDO_KEY","resizer","cls","CSS_PREFIX","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","createResizer","ticking","throttled","proxy","renderProxy","animationName","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","reflow","offsetParent","CSS_RENDER_MONITOR","watchForRender","insertBefore","firstChild","removeResizeListener","unwatchForRender","EVENT_TYPES","touchmove","touchend","pointerenter","pointermove","pointerup","pointerleave","pointerout","supports","passive","_enabled","getElementById","renderHeight","renderWidth","initial","displayWidth","displayHeight","initCanvas","proxies","fromNativeEvent","addEvent","removeEvent","implementation","filler","41","42","43","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","getBasePosition","resolveTarget","propagate","visited","visible","createMapper","mappers","isDrawable","drawArea","curve0","curve1","len0","len1","boundary","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","span","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","createNewLegendAndAttach","legendOpts","Legend","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","_element","beforeInit","afterEvent","createNewTitleBlockAndAttach","titleOpts","Title","titleBlock","textSize","titleX","titleY","titleFont","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","LinearScaleBase","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","tickFontSize","handleDirectionalChanges","innerDimension","ticksAsNumbers","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","stepSize","fixedStepSize","generationOptions","dataRange","spacing","niceRange","niceMin","niceMax","numSpaces","generateTicks","lang","prism","util","encode","Token","alias","languages","redef","inside","insert","grammar","newToken","DFS","highlightAll","async","querySelectorAll","highlightElement","language","env","hooks","Worker","worker","filename","onmessage","highlightedCode","postMessage","immediateClose","highlight","tokenize","strarr","rest","tokenloop","patterns","pattern","lookbehind","lookbehindLength","lastIndex","wrapped","all","tag","classes","attributes","aliases","Prism","sql","comment","variable","function","boolean","operator","punctuation","CollapsibleList","lis","createClickListener","pi","checkedRelative","relatives","forceOpen","open","uls","li","Validator","errorMsgs","_errors","targetElement","resetAll","validateInput","onSubmit","validate","minlength","VALIDATORS","checkValidity","setCustomValidity","isValidatableInput","defaultPrevented","errors","runValidators","showErrors","clearErrors","inputSelector","results","visibility","tagName","validator","attr","validationMessage","group","block","errorElement","errHtml","hasErrors","colors","hex2rgb","hex","ColorPicker","LEFT","RIGHT","selectColor","swatches","trigger","data-value","Table","columns","requestMethod","searchable","loadAllData","inputTimeout","columnMinWidth","editable","pageDropdown","headerButtons","storageFunction","itemsPerPage","searchQuery","currentStartItem","sorting","dataCallback","errorCallback","dataDateFormat","displayDateFormat","displayCurrencyFormat","resources","firstPage","previousPage","nextPage","lastPage","noData","showing","page","perPage","loadingError","tryAgain","layoutSet","loading","filteredTotal","pageTotal","totalDistance","lastSeenAt","columnRenderer","colGroups","intColumns","dateColumns","currencyColumns","column","hasPositiveValue","store","columnFunction","links","getDisplayValue","dataType","link","icon","processData","rows","pageOptions","myKey","isUndefined","localStorage","filterResults","loadData","buildParams","refresh","startItem","query","dir","random","setCurrentStartItem","setItemsPerPage","setSearchQuery","clearTimeout","requestTimer","runSearch","filterArray","moveToPage","changePage","changeSort","fieldName","shiftKey","getSelection","removeAllRanges","_i","compare","defaultCompare","setLayout","tableLayout","tableHeaderRow","tHead","hWidth","tWidth","cells","debounce","move","onMouseMove","up","onMouseUp","touchHandler","header","cWidth","pixelToFloat","isVisible","colGroup","scroll","offsetLeft","onHeaderMouseDown","inResizeArea","cellEl","stopImmediatePropagation","resizeContext","colIndex","cellIndex","initX","scrWidth","initTblWidth","initColWidth","layoutTimer","newStyle","newColWidth","newTblWidth","tblX","clientLeft","previousElementSibling","mouseEvent","simulatedEvent","initMouseEvent","screenX","screenY","getFieldValue","aa","bb","tableHeaders","thAttrs","divAttrs","divContent","sortable","onscroll","tableBodyView","tableFooterView","tableCellView","tableRowView","colspan","currentPage","optionList","DashChart","showLegend","dataFn","errorFn","toggleExportFn","randomWithin","randomColor","randomColors","cnt","parseColor","show","hide","ranges","some","yTitle","xType","currencyFormat","dateFormat","chartType","isRadial","yType","chartData","Form","records","wantsHelp","appendRecord","deleteRecord","confirmDelete","confirmDeleteAll","areYouSure","moveUp","moveDown","help","addedCount","targetVal","setter","addRecord","newRecord","unshift","deleteFn","afterDeleteFn","deleteAllRecords","hasRecords","keyInput","withHelp","helpBody","innerContent","withError","requirePositive","isDate","withDisabled","isDisabled","withChecked","isChecked","withOptions","selectedValue","valueKey","textKey","buttonView","includeMove","btns","JoinForm","joinTypeId","tableName","columnUpdateFn","joins","joinTypes","sourceFn","setJoinTable","isProc","record","ColumnForm","columnName","dataTypeId","derived","filterTypeId","filterQuery","isParam","isExpanded","dataTypes","filterTypes","columnFn","selectedSourceFn","columnTitleSort","aTitle","bTitle","toggleExpanded","checkStatus","database","primarySource","importColumns","databaseId","newColumns","newRecords","existingColumns","colName","success","import","readOnly","for","ShareForm","formOpts","userId","roleId","shares","users","userList","roles","roleList","formName","userSelectAttr","share","roleSelectAttr","FilterForm","columnId","operatorId","criteria","criteria2","allowEdit","filters","saveFiltersUrl","filterOperators","filterOperatorIds","dateOperators","lookups","dataTable","boolOptions","setColumnId","setOperator","setCriteria","criteriaJson","saveFilters","criteriaView","select","isRange","dateInterval","equal","multiple","lookup","numeric","isDatePicker","attrs2","criteriaArr","operatorView","filterView","filterColumns","GroupForm","displayOrder","groups","saveGroupsUrl","aggregator","aggregatorId","aggregators","saveGroups","groupAggregator","setAggregator","groupView","RangeForm","reportId","xAxisColumnId","yAxisColumnId","dateIntervalId","saveRangesUrl","dateIntervals","reports","processJsonFn","canExportFn","saveRanges","makeChart","chartContent","dashChart","exportChart","chartContainer","submit","setReport","rangeView","report","xColumns","yColumns","dateIntervalDisabled","inputsDisabled","col","Dataset","sourceList","columnList","formChanged","selectedSourceList","checkType","loadSourceList","loadColumnList","joinForm","getSourceList","columnForm","getColumnList","getSelectedSourceList","onChange","primary","updateColumnList","updateSelectedSources","equals","updateList","tables","typeId","BaseDetails","openDialog","outerHTML","initDate","processJson","json","updatedDate","updateDate","dataSql","setSql","dataError","countSql","countError","ReportDetails","reportColumns","saveUrl","saveColumnsUrl","saveStorageFunc","previousColumnWidths","reportWidth","dataUrl","exportUrl","rowLimit","sortColumns","filterForm","groupForm","ChartDetails","enableExport","rangeForm","canExport","toggleExport","chartLoad","Widget","buildClassList","widget","isData","refreshSeconds","baseUrl","interval","isFullscreen","dragMargin","setupDraggie","reportRowLimit","onError","setInterval","setText","firstRender","createNode","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","forceRefresh","toggleFullScreen","chartId","deleteWidget","toLocaleTimeString","moveDraggie","columnWidth","rowHeight","stopDrag","resizeDraggie","initResize","stopResize","setLocation","layoutCallback","styles","setSize","reload","showMsg","hasOpenDialog","updatedAt","innerText","clearInterval","updateStyle","totalDestruction","fullScreenIcon","headerHideBtns","_contentActions","selector","tableLoad","handleAjaxRequest","inputReplace","_dialogs","dlgs","getActiveDialog","dlg","dismissAll","prompt","checkPrompt","promptValue","updateObj","targetSelector","dialog","html","activeDlg","elems","Event","act","activeDialog","_datasets","_reports","_shares","startDrag","newPos","offsetTop","leftItems","columnSort","rightItems","updateColumn","dashboardReload","_charts","_currentPositions","widgets","dashboard","makeWidgetOpts","checkKeyPress","resizeLayout","updatePosition","dash","widgetOpts","getWidgets","widgetDate","widgetDateUpdated","oldWidget","sorted","rectSort","aWidget","bWidget","saveDashboard","positions","pageLoaded","initEvent","dashboardLoad","resxLoaded"],"mappings":"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","file":"modules.js","sourcesContent":["/*!\r\n * Native Javascript for Bootstrap 3 \r\n * by dnp_theme\r\n * https://github.com/thednp/bootstrap.native\r\n * \r\n * Modified to use Dash's core library, and remove unneeded functionality.\r\n */\r\n(function (root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Dropdown = factory(root.$);\r\n})(this, function($) {\r\n\r\n    var _keys = {\r\n        DOWN: 40,\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        TAB: 9,\r\n        UP: 38,\r\n        SPACE: 32\r\n    };\r\n\r\n    /**\r\n     * Declare Dropdown class.\r\n     * @param {Node} element - Node to trigger the dropdown.\r\n     */\r\n    var Dropdown = function (element) {\r\n        this.menu = $.get(element);\r\n        this.target = $.get('.dropdown-menu', element.parentNode);\r\n        this.container = $.closest('.dropdown', this.target);\r\n        this.items = $.getAll('.dropdown-item', this.target);\r\n        this.selectedIndex = -1;\r\n        this.init();\r\n    };\r\n\r\n    /**\r\n     * Declare Dropdown class methods.\r\n     */\r\n    Dropdown.prototype = {\r\n        /**\r\n         * Initialize the dropdown.\r\n         */\r\n        init: function () {\r\n            this.actions();\r\n            this.menu.setAttribute('tabindex', '0'); // Fix onblur on Chrome | Safari\r\n            $.on(this.container, 'click', this.handle, false);\r\n            $.on(this.container, 'keydown', this.key.bind(this), false);\r\n\r\n            // need this combination of blur and mousedown to imitate a click on the link, and still allow blur to close the dropdown\r\n            $.on(this.container, 'blur', this.close.bind(this), true);\r\n            var self = this;\r\n            this.items.forEach(function(x, index) {\r\n                $.on(x, 'mousedown', function(e) {\r\n                    x.click();\r\n                    e.stopPropagation();\r\n                });\r\n                $.on(x, 'mouseover', function() {\r\n                    self.selectIndex(index);\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Closure for class methods. \r\n         */\r\n        actions: function () {\r\n            var self = this;\r\n\r\n            /**\r\n             * Trigger the dropdown event.\r\n             * @param {Event} e - Event that requested the dropdown.\r\n             */\r\n            this.handle = function (e) {\r\n                var target = e.target || e.currentTarget;\r\n                if (target.nodeName === 'I' && (target.parentNode.nodeName === 'BUTTON' || target.parentNode.nodeName === 'A')) {\r\n                    target = target.parentNode;\r\n                }\r\n                if (target === self.menu || target === $.get('span', self.menu)) {\r\n                    self.toggle();\r\n                } else {\r\n                    self.close();\r\n                }\r\n                /#$/g.test(target.href) && e.preventDefault();\r\n            };\r\n\r\n            /**\r\n             * Show/hide the dropdown content.\r\n             */\r\n            this.toggle = function() {\r\n                if ($.hasClass(this.target, 'show')) {\r\n                    this.close();\r\n                } else {\r\n                    $.addClass(this.target, 'show');\r\n                    this.menu.setAttribute('aria-expanded', true);\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Close dropdown on escape key.\r\n             * @param {Event} e - Keydown event\r\n             */\r\n            this.key = function(e) {\r\n                if ($.hasClass(this.target, 'show')) {\r\n                    if (e.which === _keys.ESC) {\r\n                        self.toggle();\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    }\r\n                    if (e.which === _keys.ENTER || e.which === _keys.SPACE) {\r\n                        if (this.selectedIndex > -1) {\r\n                            this.items[this.selectedIndex].click();\r\n                        }\r\n                        self.toggle();\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    }\r\n                    if (e.which === _keys.DOWN) {\r\n                        this.selectIndex(Math.min(this.selectedIndex + 1, this.items.length - 1));\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    }\r\n                    if (e.which === _keys.UP) {\r\n                        this.selectIndex(Math.max(this.selectedIndex - 1, 0));\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    }\r\n                } else if (e.which === _keys.ENTER || e.which === _keys.SPACE) {\r\n                    self.toggle();\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Select an item from the list by index.\r\n             * @param {number} index - Filtered list item index.\r\n             */\r\n            this.selectIndex = function(index) {\r\n                this.selectedIndex = index;\r\n                this.items.forEach(function(x) {\r\n                    $.removeClass(x, 'active');\r\n                });\r\n                $.addClass(this.items[this.selectedIndex], 'active');\r\n            };\r\n            \r\n            /**\r\n             * Close the dropdown.\r\n             */\r\n            this.close = function() {\r\n                this.selectedIndex = -1;\r\n                this.items.forEach(function(x) {\r\n                    $.removeClass(x, 'active');\r\n                });\r\n                setTimeout(function() {\r\n                    $.removeClass(self.target, 'show');\r\n                    self.menu.setAttribute('aria-expanded', false);\r\n                }, 0);\r\n            };\r\n        }\r\n    };\r\n\r\n    return Dropdown;\r\n});\r\n\r\n(function (root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Tab = factory(root.$);\r\n})(this, function ($) {\r\n    /**\r\n     * Declare Tab class.\r\n     * @param {Node} element - Node to trigger the tab.\r\n     */\r\n    var Tab = function (element) {\r\n        this.tab = $.get(element);\r\n        this.tabs = this.tab.parentNode.parentNode;\r\n        this.dropdown = $.get('.dropdown', this.tabs);\r\n        if ($.hasClass(this.tabs, 'dropdown-menu')) {\r\n            this.dropdown = this.tabs.parentNode;\r\n            this.tabs = this.tabs.parentNode.parentNode;\r\n        }\r\n        this.duration = 100;\r\n        this.init();\r\n    };\r\n\r\n    /**\r\n     * Declare Tab class methods.\r\n     */\r\n    Tab.prototype = {\r\n        init: function () {\r\n            this.actions();\r\n            $.on(this.tab, 'click', this.action, false);\r\n        },\r\n\r\n        /**\r\n         * Closure for class methods. \r\n         */\r\n        actions: function () {\r\n            var self = this;\r\n\r\n            /**\r\n             * Display content of a tab.\r\n             * @param {Event} e - Event that triggered the tab change.\r\n             */\r\n            this.action = function (e) {\r\n                e = e || window.e; e.preventDefault();\r\n                var next = e.target; //the tab we clicked is now the next tab\r\n                var nextContent = $.get(next.getAttribute('href')); //this is the actual object, the next tab content to activate\r\n\r\n                // get current active tab and content\r\n                var activeTab = self.getActiveTab();\r\n                var activeContent = self.getActiveContent();\r\n\r\n                if (!$.hasClass(next.parentNode, 'active')) {\r\n                    // toggle \"active\" class name\r\n                    $.removeClass($.getAll('a', activeTab)[0], 'active');\r\n                    $.addClass(next, 'active');\r\n\r\n                    // handle dropdown menu \"active\" class name\r\n                    if (self.dropdown) {\r\n                        if (!$.hasClass(self.tab.parentNode.parentNode, 'dropdown-menu')) {\r\n                            $.removeClass(self.dropdown, 'active');\r\n                        } else {\r\n                            $.addClass(self.dropdown, 'active');\r\n                        }\r\n                    }\r\n\r\n                    //1. hide current active content first\r\n                    $.removeClass(activeContent, 'show');\r\n\r\n                    setTimeout(function () {\r\n                        //2. toggle current active content from view\r\n                        $.removeClass(activeContent, 'active');\r\n                        $.addClass(nextContent, 'active');\r\n                    }, self.duration);\r\n                    setTimeout(function () {\r\n                        //3. show next active content\r\n                        $.addClass(nextContent, 'show');\r\n                    }, self.duration * 2);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Gets the currently active tab.\r\n             * @returns {Node} Active tab element.\r\n             */\r\n            this.getActiveTab = function () {\r\n                var activeTabs = $.getAll('.active', this.tabs);\r\n                if (activeTabs.length === 1 && ! $.hasClass(activeTabs[0], 'dropdown')) {\r\n                    return activeTabs[0].parentNode;\r\n                } else if (activeTabs.length > 1) {\r\n                    return activeTabs[activeTabs.length - 1].parentNode;\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Get the currently active tab content.\r\n             * @returns {Node} Active content element\r\n             */\r\n            this.getActiveContent = function () {\r\n                var a = this.getActiveTab();\r\n                var b = a && $.getAll('a', a);\r\n                return b.length && $.get(b[0].getAttribute('href'));\r\n            };\r\n        }\r\n    };\r\n\r\n    return Tab;\r\n});","/*!\r\n * Lightweight date library\r\n * https://github.com/taylorhakes/fecha\r\n * \r\n * Modified to add date manipulation methods similar to moment.js.\r\n */\r\n(function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Parse or format dates\r\n     * @class fecha\r\n     */\r\n    var fecha = {};\r\n    var token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\r\n    var twoDigits = /\\d\\d?/;\r\n    var threeDigits = /\\d{3}/;\r\n    var fourDigits = /\\d{4}/;\r\n    var word = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\r\n    var literal = /\\[([^]*?)\\]/gm;\r\n    var noop = function () { };\r\n\r\n    /**\r\n     * Abbreviate a string.\r\n     * @param {string[]} arr - Array of strings to shorten.\r\n     * @param {number} sLen - Max length of new strings.\r\n     * @returns {string[]} New array of strings.\r\n     */\r\n    function shorten(arr, sLen) {\r\n        var newArr = [];\r\n        for (var i = 0, len = arr.length; i < len; i++) {\r\n            newArr.push(arr[i].substr(0, sLen));\r\n        }\r\n        return newArr;\r\n    }\r\n\r\n    /**\r\n     * Update months names based on i18n resource.\r\n     * @param {string[]} arrName - Array of month names.\r\n     * @returns {string[]} Updated array of month names.\r\n     */\r\n    function monthUpdate(arrName) {\r\n        return function (d, v, i18n) {\r\n            var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());\r\n            if (~index) {\r\n                d.month = index;\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Left pad a number to length len using zeros.\r\n     * @param {number|string} val - Value to pad.\r\n     * @param {number} len - Length to pad number to.\r\n     * @returns {string} Zero padded string.\r\n     */\r\n    function pad(val, len) {\r\n        val = String(val);\r\n        len = len || 2;\r\n        while (val.length < len) {\r\n            val = '0' + val;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    var monthNamesShort = shorten(monthNames, 3);\r\n    var dayNamesShort = shorten(dayNames, 3);\r\n    fecha.i18n = {\r\n        dayNamesShort: dayNamesShort,\r\n        dayNames: dayNames,\r\n        monthNamesShort: monthNamesShort,\r\n        monthNames: monthNames,\r\n        amPm: ['am', 'pm'],\r\n        DoFn: function DoFn(D) {\r\n            return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];\r\n        }\r\n    };\r\n\r\n    var formatFlags = {\r\n        D: function (dateObj) {\r\n            return dateObj.getDate();\r\n        },\r\n        DD: function (dateObj) {\r\n            return pad(dateObj.getDate());\r\n        },\r\n        Do: function (dateObj, i18n) {\r\n            return i18n.DoFn(dateObj.getDate());\r\n        },\r\n        d: function (dateObj) {\r\n            return dateObj.getDay();\r\n        },\r\n        dd: function (dateObj) {\r\n            return pad(dateObj.getDay());\r\n        },\r\n        ddd: function (dateObj, i18n) {\r\n            return i18n.dayNamesShort[dateObj.getDay()];\r\n        },\r\n        dddd: function (dateObj, i18n) {\r\n            return i18n.dayNames[dateObj.getDay()];\r\n        },\r\n        M: function (dateObj) {\r\n            return dateObj.getMonth() + 1;\r\n        },\r\n        MM: function (dateObj) {\r\n            return pad(dateObj.getMonth() + 1);\r\n        },\r\n        MMM: function (dateObj, i18n) {\r\n            return i18n.monthNamesShort[dateObj.getMonth()];\r\n        },\r\n        MMMM: function (dateObj, i18n) {\r\n            return i18n.monthNames[dateObj.getMonth()];\r\n        },\r\n        YY: function (dateObj) {\r\n            return String(dateObj.getFullYear()).substr(2);\r\n        },\r\n        YYYY: function (dateObj) {\r\n            return dateObj.getFullYear();\r\n        },\r\n        h: function (dateObj) {\r\n            return dateObj.getHours() % 12 || 12;\r\n        },\r\n        hh: function (dateObj) {\r\n            return pad(dateObj.getHours() % 12 || 12);\r\n        },\r\n        H: function (dateObj) {\r\n            return dateObj.getHours();\r\n        },\r\n        HH: function (dateObj) {\r\n            return pad(dateObj.getHours());\r\n        },\r\n        m: function (dateObj) {\r\n            return dateObj.getMinutes();\r\n        },\r\n        mm: function (dateObj) {\r\n            return pad(dateObj.getMinutes());\r\n        },\r\n        s: function (dateObj) {\r\n            return dateObj.getSeconds();\r\n        },\r\n        ss: function (dateObj) {\r\n            return pad(dateObj.getSeconds());\r\n        },\r\n        S: function (dateObj) {\r\n            return Math.round(dateObj.getMilliseconds() / 100);\r\n        },\r\n        SS: function (dateObj) {\r\n            return pad(Math.round(dateObj.getMilliseconds() / 10), 2);\r\n        },\r\n        SSS: function (dateObj) {\r\n            return pad(dateObj.getMilliseconds(), 3);\r\n        },\r\n        a: function (dateObj, i18n) {\r\n            return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];\r\n        },\r\n        A: function (dateObj, i18n) {\r\n            return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();\r\n        },\r\n        ZZ: function (dateObj) {\r\n            var o = dateObj.getTimezoneOffset();\r\n            return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);\r\n        },\r\n        l: function (dateObj) {\r\n            var onejan = new Date(dateObj.getFullYear(), 0, 1);\r\n            return Math.ceil((((dateObj - onejan) / 86400000) + onejan.getDay() + 1) / 7);\r\n        },\r\n        ll: function (dateObj) {\r\n            var onejan = new Date(dateObj.getFullYear(), 0, 1);\r\n            return pad(Math.ceil((((dateObj - onejan) / 86400000) + onejan.getDay() + 1) / 7), 2);\r\n        },\r\n        q: function (dateObj) {\r\n            return (Math.ceil(dateObj.getMonth() + 1 / 3));\r\n        }\r\n    };\r\n\r\n    var parseFlags = {\r\n        D: [twoDigits, function (d, v) {\r\n            d.day = v;\r\n        }],\r\n        Do: [new RegExp(twoDigits.source + word.source), function (d, v) {\r\n            d.day = parseInt(v, 10);\r\n        }],\r\n        M: [twoDigits, function (d, v) {\r\n            d.month = v - 1;\r\n        }],\r\n        YY: [twoDigits, function (d, v) {\r\n            var da = new Date(), cent = +('' + da.getFullYear()).substr(0, 2);\r\n            d.year = '' + (v > 68 ? cent - 1 : cent) + v;\r\n        }],\r\n        h: [twoDigits, function (d, v) {\r\n            d.hour = v;\r\n        }],\r\n        m: [twoDigits, function (d, v) {\r\n            d.minute = v;\r\n        }],\r\n        s: [twoDigits, function (d, v) {\r\n            d.second = v;\r\n        }],\r\n        YYYY: [fourDigits, function (d, v) {\r\n            d.year = v;\r\n        }],\r\n        S: [/\\d/, function (d, v) {\r\n            d.millisecond = v * 100;\r\n        }],\r\n        SS: [/\\d{2}/, function (d, v) {\r\n            d.millisecond = v * 10;\r\n        }],\r\n        SSS: [threeDigits, function (d, v) {\r\n            d.millisecond = v;\r\n        }],\r\n        d: [twoDigits, noop],\r\n        ddd: [word, noop],\r\n        MMM: [word, monthUpdate('monthNamesShort')],\r\n        MMMM: [word, monthUpdate('monthNames')],\r\n        a: [word, function (d, v, i18n) {\r\n            var val = v.toLowerCase();\r\n            if (val === i18n.amPm[0]) {\r\n                d.isPm = false;\r\n            } else if (val === i18n.amPm[1]) {\r\n                d.isPm = true;\r\n            }\r\n        }],\r\n        ZZ: [/[+-]\\d\\d:?\\d\\d/, function (d, v) {\r\n            var parts = (v + '').match(/([+-]|\\d\\d)/gi), minutes;\r\n\r\n            if (parts) {\r\n                minutes = +(parts[1] * 60) + parseInt(parts[2], 10);\r\n                d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;\r\n            }\r\n        }]\r\n    };\r\n    parseFlags.dd = parseFlags.d;\r\n    parseFlags.dddd = parseFlags.ddd;\r\n    parseFlags.DD = parseFlags.D;\r\n    parseFlags.mm = parseFlags.m;\r\n    parseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;\r\n    parseFlags.MM = parseFlags.M;\r\n    parseFlags.ss = parseFlags.s;\r\n    parseFlags.A = parseFlags.a;\r\n\r\n    // Some common format strings\r\n    fecha.masks = {\r\n        'default': 'ddd MMM DD YYYY HH:mm:ss',\r\n        shortDate: 'M/D/YY',\r\n        mediumDate: 'MMM D, YYYY',\r\n        longDate: 'MMMM D, YYYY',\r\n        fullDate: 'dddd, MMMM D, YYYY',\r\n        shortTime: 'HH:mm',\r\n        mediumTime: 'HH:mm:ss',\r\n        longTime: 'HH:mm:ss.SSS'\r\n    };\r\n\r\n    /***\r\n     * Format a date.\r\n     * @method format\r\n     * @param {Date|number} dateObj - JS date to format.\r\n     * @param {string} mask - New format for the date, i.e. 'mm-dd-yy' or 'shortDate'.\r\n     * @param {Object} i18nSettings - i18n resources.\r\n     * @return {string} Formatted date string.\r\n     */\r\n    fecha.format = function (dateObj, mask, i18nSettings) {\r\n        var i18n = i18nSettings || fecha.i18n;\r\n\r\n        if (typeof dateObj === 'number') {\r\n            dateObj = new Date(dateObj);\r\n        }\r\n\r\n        if (!dateObj.getMonth || isNaN(dateObj.getTime())) {\r\n            return '';\r\n            // throw new Error('Invalid Date in fecha.format');\r\n        }\r\n\r\n        mask = fecha.masks[mask] || mask || fecha.masks['default'];\r\n\r\n        var literals = [];\r\n\r\n        // Make literals inactive by replacing them with ??\r\n        mask = mask.replace(literal, function ($0, $1) {\r\n            literals.push($1);\r\n            return '??';\r\n        });\r\n        // Apply formatting rules\r\n        mask = mask.replace(token, function ($0) {\r\n            return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);\r\n        });\r\n        // Inline literal values back into the formatted value\r\n        return mask.replace(/\\?\\?/g, function () {\r\n            return literals.shift();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Parse a date string into an object.\r\n     * @method parse\r\n     * @param {string} dateStr - Date string\r\n     * @param {string} format - Date parse format\r\n     * @param {Object} i18nSettings - i18n resources.\r\n     * @returns {Date|boolean} JS date object or false.\r\n     */\r\n    fecha.parse = function (dateStr, format, i18nSettings) {\r\n        var i18n = i18nSettings || fecha.i18n;\r\n\r\n        if (typeof format !== 'string') {\r\n            throw new Error('Invalid format in fecha.parse');\r\n        }\r\n\r\n        format = fecha.masks[format] || format;\r\n\r\n        // Avoid regular expression denial of service, fail early for really long strings\r\n        // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\r\n        if (!dateStr || dateStr.length > 1000) {\r\n            return false;\r\n        }\r\n\r\n        var isValid = true;\r\n        var dateInfo = {};\r\n        var isUtc = false;\r\n\r\n        // Special handler for UTC. String will end in a Z but with no offset specified (ie '-0400')\r\n        if (dateStr.indexOf('Z') === dateStr.length - 1 && dateStr.indexOf('ZZ') === -1) {\r\n            dateStr = dateStr.substr(0, dateStr.length - 2);\r\n            dateInfo.timezoneOffset = new Date().getTimezoneOffset();\r\n            isUtc = true;\r\n        }\r\n\r\n        format.replace(token, function ($0) {\r\n            if (parseFlags[$0]) {\r\n                var info = parseFlags[$0];\r\n                var index = dateStr.search(info[0]);\r\n                if (!~index) {\r\n                    isValid = false;\r\n                } else {\r\n                    dateStr.replace(info[0], function (result) {\r\n                        info[1](dateInfo, result, i18n);\r\n                        dateStr = dateStr.substr(index + result.length);\r\n                        return result;\r\n                    });\r\n                }\r\n            }\r\n\r\n            return parseFlags[$0] ? '' : $0.slice(1, $0.length - 1);\r\n        });\r\n\r\n        if (!isValid) {\r\n            return false;\r\n        }\r\n\r\n        var today = new Date();\r\n        if (dateInfo.isPm === true && typeof dateInfo.hour !== 'undefined' && +dateInfo.hour !== 12) {\r\n            dateInfo.hour = +dateInfo.hour + 12;\r\n        } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {\r\n            dateInfo.hour = 0;\r\n        }\r\n\r\n        var date;\r\n        if (typeof dateInfo.timezoneOffset !== 'undefined') {\r\n            if (!isUtc) {\r\n                dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;\r\n            }\r\n            date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\r\n                dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));\r\n        } else {\r\n            date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,\r\n                dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);\r\n        }\r\n        return date;\r\n    };\r\n\r\n    // Assume a traditional browser.\r\n    $.fecha = fecha;\r\n})(this.$);","/*!\r\n * accounting.js v0.4.2\r\n * Copyright 2014 Open Exchange Rates\r\n *\r\n * Freely distributable under the MIT license.\r\n * Portions of accounting.js are inspired or borrowed from underscore.js\r\n *\r\n * Full details and documentation:\r\n * http://openexchangerates.github.io/accounting.js/\r\n */\r\n\r\n(function($) {\r\n    /**\r\n     * Create the local library object, to be exported or referenced globally later\r\n     */\r\n    var lib = {\r\n        version: '0.4.2',\r\n        settings: {\r\n            currency: {\r\n                symbol: '$',\t\t// default currency symbol is '$'\r\n                format: '%s%v',\t    // controls output: %s = symbol, %v = value (can be object, see docs)\r\n                decimal: '.',\t\t// decimal point separator\r\n                thousand: ',',\t\t// thousands separator\r\n                precision: 2,\t\t// decimal places\r\n                grouping: 3\t\t    // digit grouping (not implemented yet)\r\n            },\r\n            number: {\r\n                precision: 0,\t\t// default precision on numbers is 0\r\n                grouping: 3,\t\t// digit grouping (not implemented yet)\r\n                thousand: ',',\r\n                decimal: '.'\r\n            }\r\n        }\r\n    };\r\n\r\n    var tokens = {\r\n        symbol: /\\{s:(.?)\\}/i,\r\n        decimal: /\\[d:(.?)\\]/i,\r\n        thousand: /\\[t:(.?)\\]/i,\r\n        precision: /\\[p:(.?)\\]/i,\r\n        value: /\\{#+\\}/i\r\n    };\r\n\r\n    /**\r\n     * Check and normalise the value of precision (must be positive integer).\r\n     * @param {number} val - Value of precision to validate\r\n     * @returns {number} Positive integer value.\r\n     */\r\n    var checkPrecision = function(val) {\r\n        val = Math.round(Math.abs(val));\r\n        return isNaN(val) ? lib.settings.number.precision : val;\r\n    };\r\n\r\n    /**\r\n     * Parses a format string or object and returns format obj for use in rendering.\r\n     * @param {string|Object} format - Default (positive) format, or object containing `pos` (required), `neg` and `zero` values (or a function returning either a string or object)\r\n     * @returns {Object} Format object with pos, neg, and zero properties.\r\n     */\r\n    var checkCurrencyFormat = function(format) {\r\n        // Allow function as format parameter (should return string or object):\r\n        if ($.isFunction(format)) {\r\n            format = format();\r\n        }\r\n\r\n        // Format can be a string, in which case `value` (\"%v\") must be present:\r\n        if ($.isString(format) && format.match('%v')) {\r\n            // Create and return positive, negative and zero formats:\r\n            return {\r\n                pos: format,\r\n                neg: format.replace('-', '').replace('%v', '-%v'),\r\n                zero: format\r\n            };\r\n        }\r\n        if (!format || !format.pos || !format.pos.match('%v')) {\r\n            // If no format, or object is missing valid positive value, use default.\r\n            // If default is a string, casts it to an object for faster checking next time.\r\n            var x = lib.settings.currency.format;\r\n            if ($.isString(x)) {\r\n                lib.settings.currency.format = x = { pos: x, neg: x.replace('%v', '-%v'), zero: x };\r\n            }\r\n            return x;\r\n        }\r\n        return format;\r\n    };\r\n\r\n    /**\r\n     * Takes a format string and parses it into an object.\r\n     * @param {string} format - Format string`\r\n     * @returns {Object} Object with format settings.\r\n     */\r\n    var parseFormat = function(format) {\r\n        if (!$.isString(format)) {\r\n            return format || {};\r\n        }\r\n\r\n        var res = {}, x;\r\n        var newFormat = format;\r\n        if ((x = tokens.symbol.exec(newFormat)) !== null && x.length > 1) {\r\n            res.symbol = x[1];\r\n            newFormat = newFormat.replace(x[0], '%s');\r\n        }\r\n        if ((x = tokens.decimal.exec(newFormat)) !== null && x.length > 1) {\r\n            res.decimal = x[1];\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.thousand.exec(newFormat)) !== null && x.length > 1) {\r\n            res.thousand = x[1];\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.precision.exec(newFormat)) !== null && x.length > 1) {\r\n            res.precision = x[1] * 1;\r\n            newFormat = newFormat.replace(x[0], '#');\r\n        }\r\n        if ((x = tokens.value.exec(newFormat)) !== null) {\r\n            res.format = newFormat.replace(x[0], '%v');\r\n        } else {\r\n            res.format = newFormat + ' %v';\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Takes a string/array of strings, removes all formatting/cruft and returns the raw float value.\r\n     * @param {string|number} value - Value to remove formatting from.\r\n     * @returns {number} Number with no formatting.\r\n     */\r\n    var unformat = function(value) {\r\n        // Fails silently (need decent errors):\r\n        value = value || 0;\r\n\r\n        // Return the value as-is if it's already a number:\r\n        if (typeof value === 'number') {\r\n            return value;\r\n        }\r\n\r\n        // Build regex to strip out everything except digits, decimal point and minus sign:\r\n        var regex = new RegExp('[^0-9-' + lib.settings.number.decimal + ']', ['g']),\r\n            unformatted = parseFloat(\r\n                ('' + value)\r\n                    .replace(/\\((.*)\\)/, '-$1') // replace bracketed values with negatives\r\n                    .replace(regex, '')         // strip out any cruft\r\n                    .replace(lib.settings.number.decimal, '.')      // make sure decimal point is standard\r\n            );\r\n\r\n        // This will fail silently which may cause trouble, let's wait and see:\r\n        return !isNaN(unformatted) ? unformatted : 0;\r\n    };\r\n\r\n    /**\r\n     * Implementation of toFixed() that treats floats more like decimals.\r\n     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === \"0.61\") that present problems for accounting- and finance-related software.\r\n     * @param {number|string} value - Number to convert\r\n     * @param {number} precision - Number of digits after the decimal.\r\n     * @returns {number} Formatted value.\r\n     */\r\n    var toFixed = function(value, precision) {\r\n        precision = checkPrecision(precision);\r\n        var power = Math.pow(10, precision);\r\n\r\n        // Multiply up by precision, round accurately, then divide and use native toFixed():\r\n        return (Math.round(unformat(value) * power) / power).toFixed(precision);\r\n    };\r\n\r\n    /**\r\n     * Format a number, with comma-separated thousands and custom precision/decimal places.\r\n     * @param {number} number - Number to format.\r\n     * @param {string} format - Tokenized string format.\r\n     * @returns {string} Formatted number.\r\n     */\r\n    var formatNumber = function(number, format) {\r\n        // Clean up number:\r\n        number = unformat(number);\r\n\r\n        // Build options object from second param (if object) or all params, extending defaults:\r\n        var opts = $.extend({}, lib.settings.number, parseFormat(format));\r\n\r\n        // Clean up precision\r\n        var usePrecision = checkPrecision(opts.precision);\r\n\r\n        // Do some calc:\r\n        var negative = number < 0 ? '-' : '';\r\n        var base = parseInt(toFixed(Math.abs(number || 0), usePrecision), 10) + '';\r\n        var mod = base.length > 3 ? base.length % 3 : 0;\r\n\r\n        // Format the number:\r\n        return negative + (mod ? base.substr(0, mod) + opts.thousand : '') + base.substr(mod).replace(/(\\d{3})(?=\\d)/g, '$1' + opts.thousand) +\r\n            (usePrecision ? opts.decimal + toFixed(Math.abs(number), usePrecision).split('.')[1] : '');\r\n    };\r\n\r\n    /**\r\n     * Format a number as currency, with comma-separated thousands and custom precision/decimal places.\r\n     * @param {number} number - Number to format.\r\n     * @param {string} format - Tokenized string format.\r\n     * @returns {string} Formatted currency.\r\n     */\r\n    var formatMoney = function(number, format) {\r\n        // Clean up number:\r\n        number = unformat(number);\r\n\r\n        // Build options object from second param (if object) or all params, extending defaults:\r\n        var opts = $.extend({}, lib.settings.currency, parseFormat(format));\r\n\r\n        // Check format (returns object with pos, neg and zero):\r\n        var formats = checkCurrencyFormat(opts.format);\r\n\r\n        // Choose which format to use for this value:\r\n        var useFormat = number > 0 ? formats.pos : number < 0 ? formats.neg : formats.zero;\r\n\r\n        // Return with currency symbol added:\r\n        return useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(number), format));\r\n    };\r\n\r\n    $.accounting = {\r\n        formatMoney: formatMoney,\r\n        formatNumber: formatNumber,\r\n        parseFormat: parseFormat,\r\n        unformat: unformat\r\n    };\r\n}(this.$));","/*!\r\n * Help mithril component. Shows input groups with help button.\r\n */\r\n(function (root, factory) {\r\n    root.Help = factory(root.m, root.$, root.Alertify);\r\n})(this, function (m, $, Alertify) {\r\n    'use strict';\r\n\r\n    var Help = {\r\n        /**\r\n         * Initialize the component.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            this.opts = {\r\n                enabled: attrs.enabled,\r\n                message: attrs.message\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Show help dialog.\r\n         * @param {Event} e - Event that triggered the dialog to open.\r\n         */\r\n        showHelp: function(e) {\r\n            Alertify.alert(this.opts.message, $.dialogs.focusOnClose.bind(e), $.dialogs.focusOnClose.bind(e));\r\n        },\r\n\r\n        /**\r\n         * Create HTML to display content with help add on.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         * @returns {Object} Mithril vnode\r\n         */\r\n        view: function(vnode) {\r\n            if (!this.opts.enabled) {\r\n                return $.isArray(vnode.children) ? m('.input-group', vnode.children) : vnode.children;\r\n            }\r\n            if (!(vnode.children && vnode.children.length)) {\r\n                return m('span', m('button.btn.btn-secondary.dash-context-help', {\r\n                    type: 'button', role: 'button', onclick: this.showHelp.bind(this)\r\n                }, m('i.dash.dash-help')));\r\n            }\r\n            return m('.input-group',\r\n                vnode.children.concat(m('span.input-group-append', m('button.btn.btn-secondary.dash-context-help', {\r\n                    type: 'button', role: 'button', onclick: this.showHelp.bind(this)\r\n                }, m('i.dash.dash-help'))))\r\n            );\r\n        }\r\n    };\r\n\r\n    return Help;\r\n});   ","/*!\r\n * Dialog mithril component.\r\n */\r\n(function(root, factory) {\r\n    root.Dialog = factory(root.m, root.$, root.Alertify);\r\n})(this, function(m, $, Alertify) {\r\n    'use strict';\r\n\r\n    var _buttons = {\r\n        'ok': 'Okay',\r\n        'cancel': 'Cancel',\r\n        'close': 'Close'\r\n    };\r\n\r\n    var _keys = {\r\n        ENTER: 13,\r\n        ESC: 27\r\n    };\r\n\r\n    /**\r\n     * Declare Dialog class.\r\n     * @param {Object} opts - Dialog settings\r\n     */\r\n    function Dialog(opts) {\r\n        this.opts = $.extend({\r\n            id: null,\r\n            title: null,\r\n            basic: true,\r\n            buttons: _buttons,\r\n            content: null,\r\n            target: null,\r\n            onOkay: null,\r\n            onCancel: null,\r\n            onShow: null,\r\n            parent: null\r\n        }, opts || {});\r\n        this.elements = {\r\n            container: null,\r\n            content: null\r\n        };\r\n        this.changed = false;\r\n        this.run();\r\n    }\r\n\r\n    Dialog.prototype = {\r\n        /**\r\n         * Generates the components HTML.\r\n         * @returns {Object} Mithril virtual node\r\n         */\r\n        view: function() {\r\n            return m('.rd-dialog', { onkeydown: this.checkKey.bind(this), tabindex: 0 }, [\r\n                m('.rd-commands', [\r\n                    m('button.btn.btn-secondary.rd-close', { type: 'button', role: 'button', onclick: this.onCancel.bind(this) },\r\n                        m('i.dash.dash-cancel', { title: this.opts.buttons.close })\r\n                    )\r\n                ]),\r\n                m('.rd-header.dialog-header', this.opts.title),\r\n                m('.rd-content', { class: this.opts.basic ? 'rd-no-footer' : '' }, m.trust(this.opts.content)),\r\n                this.opts.basic ? null : m('.rd-footer', [\r\n                    m('.rd-buttons', [\r\n                        m('button.rd-button.btn.btn-primary', {\r\n                            type: 'button', role: 'button', onclick: this.onOkay.bind(this)\r\n                        }, this.opts.buttons.ok),\r\n                        m('button.rd-button.btn.btn-warning', {\r\n                            type: 'button', role: 'button', onclick: this.onCancel.bind(this)\r\n                        }, this.opts.buttons.cancel)\r\n                    ])\r\n                ])\r\n            ]);\r\n        },\r\n\r\n        /**\r\n         * Runs after the dialog is first created by mithril.\r\n         * @param {Object} vnode - Mithril virtual node.\r\n         */\r\n        oncreate: function(vnode) {\r\n            if (this.elements.content) {\r\n                return;\r\n            }\r\n            var node = $.get('.rd-content', vnode.dom);\r\n            if (!(node && node.firstElementChild)) {\r\n                return;\r\n            }\r\n            node = node.firstElementChild;\r\n            this.opts.title = node.getAttribute('data-title');\r\n            this.opts.basic = node.hasAttribute('data-basic-dialog');\r\n            m.redraw();\r\n\r\n            var self = this;\r\n            $.on(node, 'change', function() {\r\n                self.changed = true;\r\n            });\r\n            this.elements.content = node;\r\n            setTimeout(this.onShow.bind(this), 25);\r\n        },\r\n\r\n        /**\r\n         * Run the component and render the dialog.\r\n         */\r\n        run: function() {\r\n            this.elements.container = document.createElement('div');\r\n            this.elements.container.id = 'dialog' + this.opts.id;\r\n            $.addClass(this.elements.container, 'rd-dialog-container');\r\n            document.body.appendChild(this.elements.container);\r\n            m.mount(this.elements.container, {\r\n                view: this.view.bind(this),\r\n                oncreate: this.oncreate.bind(this),\r\n            });\r\n\r\n            $.dialogs.processContent(this.elements.content);\r\n            setTimeout(this.checkEvent.bind(this, this.elements.content, 'data-event'), 25);\r\n        },\r\n\r\n        /**\r\n         * Get the dialog id.\r\n         * @returns {number} ID of dialog.\r\n         */\r\n        getId: function() {\r\n            return this.opts.id;\r\n        },\r\n\r\n        /**\r\n         * Get the dialog container node.\r\n         * @returns {Node} DOM node of dialog container.\r\n         */\r\n        getContainer: function() {\r\n            return this.elements.container;\r\n        },\r\n\r\n        /**\r\n         * Get the dialog content node.\r\n         * @returns {Node} DOM node of dialog content.\r\n         */\r\n        getContent: function() {\r\n            return this.elements.content;\r\n        },\r\n\r\n        /**\r\n         * Get the dialog target node.\r\n         * @returns {Node} DOM node to target on close.\r\n         */\r\n        getTarget: function() {\r\n            return this.opts.target;\r\n        },\r\n\r\n        /**\r\n         * Find a form node inside the dialog.\r\n         * @returns {Node} Form node if exists else null.\r\n         */\r\n        findForm: function() {\r\n            return $.matches(this.elements.content, 'form.dash-form') ? this.elements.content : $.get('form.dash-form', this.elements.content);\r\n        },\r\n\r\n        /**\r\n         * Find element to focus on when dialog is displayed.\r\n         */\r\n        onShow: function() {\r\n            if ($.isFunction(this.opts.onShow)) {\r\n                if (!this.opts.onShow.call(this)) {\r\n                    return;\r\n                }\r\n            }\r\n            document.title = this.opts.title;\r\n            $.dialogs.focusNode(this.elements.content);\r\n        },\r\n\r\n        /**\r\n         * User okayed dialog. Save changes; close dialog.\r\n         */\r\n        onOkay: function() {\r\n            if ($.isFunction(this.opts.onOkay)) {\r\n                if (!this.opts.onOkay.call(this)) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            var form = this.findForm();\r\n            if (!form) {\r\n                this.destroy();\r\n                return;\r\n            }\r\n            if (!this.validateForm()) {\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            var formData = this.serializeForm();\r\n            $.ajax({\r\n                method: form.hasAttribute('data-method') ? form.getAttribute('data-method') : 'POST',\r\n                url: form.getAttribute('action'),\r\n                data: formData,\r\n                token: formData.__RequestVerificationToken\r\n            }, function(responseData) {\r\n                var target = self.opts.target;\r\n                var parentDlg = $.dialogs.findDialogById(self.opts.parent);\r\n                if (responseData.parentTarget && parentDlg) {\r\n                    target = parentDlg.getTarget();\r\n                }\r\n\r\n                self.destroy();\r\n                if (responseData.closeParent && parentDlg) {\r\n                    parentDlg.destroy();\r\n                }\r\n                if (responseData.dialogUrl) {\r\n                    $.dialogs.sendAjaxRequest(responseData.dialogUrl, 'GET', target);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * User canceled dialog. Check for changes; close dialog.\r\n         * @param {Event} e - Event that triggered the cancel.\r\n         */\r\n        onCancel: function(e) {\r\n            if ($.isFunction(this.opts.onCancel)) {\r\n                if (!this.opts.onCancel.call(this)) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (!this.changed || !this.findForm()) {\r\n                this.destroy();\r\n                return;\r\n            }\r\n\r\n            Alertify.confirm($.resx('discardChanges'), this.destroy.bind(this), function() {\r\n                if (e.target) {\r\n                    e.target.focus();\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Trigger okay or cancel action based on keydown.\r\n         * @param {KeyboardEvent} e - Keydown event that triggered this.\r\n         */\r\n        checkKey: function(e) {\r\n            if (e.keyCode === _keys.ESC) {\r\n                this.onCancel(e);\r\n            }\r\n            if (e.keyCode === _keys.ENTER && !this.opts.basic) {\r\n                this.onOkay(e);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Dispatch event named in attribute `attrName` if it exists.\r\n         * @param {Node} node - Node to look for an event attribute in.\r\n         * @param {string} attrName - Name of the attribute to check for the event in.\r\n         */\r\n        checkEvent: function(node, attrName) {\r\n            if (!node || !node.hasAttribute(attrName)) {\r\n                return;\r\n            }\r\n            var ev = node.getAttribute(attrName);\r\n            if ($.events.hasOwnProperty(ev)) {\r\n                document.dispatchEvent($.events[ev]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Convert form data into an object.\r\n         * @returns {Object} Form data.\r\n         */\r\n        serializeForm: function() {\r\n            var form = this.findForm();\r\n            if (!form) {\r\n                return {};\r\n            }\r\n\r\n            var field, data = {};\r\n            var len = form.elements.length;\r\n            for (var i = 0; i < len; i++) {\r\n                field = form.elements[i];\r\n                if (field.name && !field.disabled && field.type !== 'file' && field.type !== 'reset' && field.type !== 'submit' && field.type !== 'button') {\r\n                    if (field.type === 'select' && field.hasAttribute('multiple')) {\r\n                        data[field.name] = Array.apply(null, form.elements[i].options).filter(function(x) {\r\n                            return x.selected;\r\n                        }).map(function(x) {\r\n                            return x.value;\r\n                        });\r\n                    } else if (field.type === 'checkbox') {\r\n                        if (field.checked) {\r\n                            if (data.hasOwnProperty(field.name)) {\r\n                                if (!$.isArray(data[field.name])) {\r\n                                    data[field.name] = data[field.name] === false ? [] : [data[field.name]];\r\n                                }\r\n                                data[field.name].push(field.value);\r\n                            } else {\r\n                                data[field.name] = field.value;\r\n                            }\r\n                        } else if (!data.hasOwnProperty(field.name)) {\r\n                            data[field.name] = $.hasClass(field, 'custom-control-input-multiple') ? [] : false;\r\n                        }\r\n                    } else if (field.type !== 'radio' || field.checked) {\r\n                        data[field.name] = field.value;\r\n                    }\r\n                }\r\n            }\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Set tab status when validating form.\r\n         * @param {Node} el - Node that has a validation error.\r\n         */\r\n        setTabStatus: function(el) {\r\n            var tab = $.closest('.tab-pane', el);\r\n            if (tab) {\r\n                // add error class to tab \r\n                var id = tab.getAttribute('aria-labelledby');\r\n                if (id) {\r\n                    if ($.hasClass(el, 'mform-control-error')) {\r\n                        $.addClass($.get('#' + id), 'tab-validation-error');\r\n                    } else {\r\n                        $.removeClass($.get('#' + id), 'tab-validation-error');\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Run the form validator and display an error if needed.\r\n         * @returns {bool} Return true if form is valid, else false.\r\n         */\r\n        validateForm: function() {\r\n            var form = this.findForm();\r\n            form.dispatchEvent($.events.formValidate);\r\n\r\n            var tabs = $.getAll('.nav-tabs.nav-item.nav-link', form);\r\n            tabs.forEach(function(x) {\r\n                $.removeClass(x, 'tab-validation-error');\r\n            });\r\n\r\n            var mErrors = $.getAll('.mform-control-error', form);\r\n            if (mErrors.length) {\r\n                mErrors.forEach(this.setTabStatus);\r\n            }\r\n\r\n            if (mErrors.length || $.getAll('.form-control-error', form).length) {\r\n                Alertify.error($.resx('fixIt'));\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Clean up our mess.\r\n         */\r\n        destroy: function() {\r\n            this.checkEvent(this.elements.content, 'data-close-event');\r\n\r\n            var tableNode = $.get('.dash-table', this.elements.content);\r\n            if (tableNode) {\r\n                tableNode.table.destroy();\r\n            }\r\n\r\n            m.mount(this.elements.container, null);\r\n            document.body.removeChild(this.elements.container);\r\n            $.dialogs.removeDialog(this.opts.id);\r\n            $.dialogs.refreshTable();\r\n        }\r\n    };\r\n\r\n    return Dialog;\r\n});   ","/*!\r\n * Autocomplete mithril component.\r\n */\r\n(function (root, factory) {\r\n    root.Autocomplete = factory(root.m, root.$);\r\n})(this, function (m, $) {\r\n    'use strict';\r\n\r\n    var _keys = {\r\n        DOWN: 40,\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        TAB: 9,\r\n        UP: 38\r\n    };\r\n\r\n    /**\r\n     * Escape a string for use with a regex.\r\n     * @param {string} s - String to escape.\r\n     * @returns Escaped string.\r\n     */\r\n    var regExpEscape = function(s) {\r\n        return s.replace(/[-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n    };\r\n\r\n    var Autocomplete = {\r\n        /**\r\n         * Initialize the component.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            this.opts = {\r\n                value: attrs.value,\r\n                valueChanged: false,\r\n                name: attrs.name,\r\n                placeholder: attrs.placeholder,\r\n                active: false,\r\n                required: attrs.required,\r\n                disabled: attrs.disabled,\r\n                onSelect: attrs.onSelect,\r\n                onCancel: attrs.onCancel,\r\n                class: attrs.class,\r\n                list: attrs.list || [],\r\n                filteredList: [],\r\n                container: null,\r\n                selectedIndex: -1\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Update the opts in case the component name is changed.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         * @param vnode\r\n         */\r\n        onupdate: function(vnode) {\r\n            if (vnode.attrs) {\r\n                this.opts.name = vnode.attrs.name;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Grab the DOM containing node after it is created.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oncreate: function(vnode) {\r\n            this.opts.container = vnode.dom;\r\n            this.opts.container.autocomplete = this;\r\n        },\r\n\r\n        /**\r\n         * Update the list of items.\r\n         * @param {string[]} list - Array of strings to show.\r\n         */\r\n        setList: function(list) {\r\n            this.close();\r\n            this.opts.list = list;\r\n            this.opts.filteredList = [];\r\n        },\r\n\r\n        /**\r\n         * Check special keys and respond accordingly.\r\n         * @param {Event} e - Keypress event.\r\n         */\r\n        onKeyDown: function(e) {\r\n            if (this.opts.disabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.opts.active) {\r\n                if (e.keyCode === _keys.ENTER) {\r\n                    var selected = this.opts.filteredList[this.opts.selectedIndex];\r\n                    if (selected) {\r\n                        this.selectItem(selected);\r\n                    } else {\r\n                        this.cancel(true);\r\n                    }\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                } else if (e.keyCode === _keys.ESC) {\r\n                    this.cancel(true);\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                } else if (e.keyCode === _keys.DOWN) {\r\n                    this.selectIndex(Math.min(this.opts.selectedIndex + 1, this.opts.filteredList.length - 1));\r\n                } else if (e.keyCode === _keys.UP) {\r\n                    this.selectIndex(Math.max(this.opts.selectedIndex - 1, 0));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handle the input's value changing and show the list.\r\n         * @param {Event} e - Event that triggered the change.\r\n         */\r\n        onInput: function(e) {\r\n            if (this.opts.value !== e.target.value) {\r\n                this.opts.valueChanged = true;\r\n                this.opts.value = e.target.value;\r\n            }\r\n            if (this.opts.value.length > 1) {\r\n                this.opts.active = true;\r\n                this.opts.selectedIndex = 0;\r\n                var val = this.opts.value.toLowerCase();\r\n                this.opts.filteredList = ($.isFunction(this.opts.list) ? this.opts.list() : this.opts.list).filter(function(x) {\r\n                    return x.toLowerCase().indexOf(val) > -1;\r\n                });\r\n            } else {\r\n                this.opts.filteredList = [];\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Close autocomplete dropdown on lost focus.\r\n         */\r\n        onBlur: function() {\r\n            if (this.opts.active || this.opts.valueChanged) {\r\n                this.cancel(false);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select an item from the list by index.\r\n         * @param {number} index - Filtered list item index.\r\n         */\r\n        selectIndex: function(index) {\r\n            this.opts.selectedIndex = index;\r\n            var ul = $.get('ul', this.opts.container);\r\n            if (ul) {\r\n                ul.children[index].scrollIntoView();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select an item by text value.\r\n         * @param {string} item - Text to select.\r\n         * @param {Event} e - Event that triggered this.\r\n         */\r\n        selectItem: function(item, e, focus) {\r\n            if ($.isFunction(this.opts.onSelect)) {\r\n                this.opts.onSelect.call(null, item);\r\n            }\r\n            this.opts.value = item;\r\n            this.close($.isNull(focus) ? true : focus);\r\n            if (e && e.preventDefault) {\r\n                e.preventDefault();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Discard value and close the autocomplete.\r\n         * @param {bool} focus - Focus on the original control after closing if true.\r\n         */\r\n        cancel: function(focus) {\r\n            if (this.opts.valueChanged) {\r\n                this.opts.value = '';\r\n            }\r\n            if ($.isFunction(this.opts.onCancel)) {\r\n                this.opts.onCancel();\r\n            }\r\n            this.close(focus);\r\n        },\r\n\r\n        /**\r\n         * Set value and close the autocomplete.\r\n         * @param {bool} focus - Focus on the original control after closing if true.\r\n         */\r\n        close: function(focus) {\r\n            this.opts.active = false;\r\n            this.opts.selectedIndex = -1;\r\n            this.opts.valueChanged = false;\r\n            if (focus) {\r\n                var input = $.get('input', this.opts.container);\r\n                if (input) {\r\n                    input.focus();\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Highlight val inside item.\r\n         * @param {string} text - Text to highlight in.\r\n         * @param {string} val - Substring to highlight.\r\n         * @returns Marked up string.\r\n         */\r\n        highlightItem: function(text, val) {\r\n            return val === '' ? text : text.replace(RegExp(regExpEscape(val.trim()), 'gi'), '<mark>$&</mark>');\r\n        },\r\n\r\n        /**\r\n         * Create HTML to display component.\r\n         * @returns {Object} Mithril vnode\r\n         */\r\n        view: function () {\r\n            var self = this;\r\n            return m('.mithril-autocomplete-container.autocomplete', { class: self.opts.active ? 'autocomplete-active' : '' },\r\n                m('input.form-control', {\r\n                    type: 'text',\r\n                    name: self.opts.name,\r\n                    placeholder: self.opts.placeholder,\r\n                    class: (self.opts.class || '') + (self.opts.required && !$.hasValue(self.opts.value) ? ' mform-control-error' : ''),\r\n                    autocomplete: 'off',\r\n                    'aria-autocomplete': 'list',\r\n                    onkeydown: self.onKeyDown.bind(self),\r\n                    oninput: self.onInput.bind(self),\r\n                    value: self.opts.value,\r\n                    onblur: self.onBlur.bind(self)\r\n                }),\r\n                self.opts.active && m('ul', self.opts.filteredList.map(function(x, index) {\r\n                    return m('li', {\r\n                        'aria-selected': self.opts.selectedIndex == index,\r\n                        onmousedown: self.selectItem.bind(self, x)\r\n                    }, m.trust(self.highlightItem(x, self.opts.value)));\r\n                }))\r\n            );\r\n        }\r\n    };\r\n\r\n    return Autocomplete;\r\n});   ","/*!\r\n * DatePicker mithril component.\r\n * Modified from https://github.com/CreaturesInUnitards/mithril-datepicker\r\n */\r\n(function (root, factory) {\r\n    root.DatePicker = factory(root.m, root.$);\r\n})(this, function (m, $) {\r\n    'use strict';\r\n\r\n    var _keys = {\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        SPACE: 32\r\n    };\r\n\r\n    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    var hours = [];\r\n    var minutes = [];\r\n    var i = 0;\r\n    while (hours.push(i++) < 24) { /* nothing to do here */ }\r\n    i = 0;\r\n    while (minutes.push(i++) < 60) { /* nothing to do here */ }\r\n    var prevNextTitles = ['1 Mo', '1 Yr', '10 Yr'];\r\n    var weekStart = 0;\r\n    var locale = 'en-us';\r\n    var formatOptions = null;\r\n    var defaultFormat = 'YYYY-MM-DD HH:mm';\r\n\r\n    /**\r\n     * Actions\r\n     */\r\n    function chooseDate(props, e) {\r\n        var box = e.target;\r\n        var selectedDate = parseInt(box.textContent);\r\n        var dateObj = props.date;\r\n        if ($.hasClass(box, 'other-scope')) {\r\n            dateObj.setFullYear(dateObj.getFullYear(), dateObj.getMonth() + (selectedDate > 6 ? -1 : 1), selectedDate);\r\n        } else {\r\n            dateObj.setDate(selectedDate);\r\n        }\r\n    }\r\n\r\n    function dismissAndCommit(props, e) {\r\n        if (e) {\r\n            if (e.target && $.hasClass('number', e.target)) {\r\n                e.preventDefault();\r\n                chooseDate(props, e);\r\n                return false;\r\n            }\r\n\r\n            var parent = e.relatedTarget && $.closest('.mithril-date-picker-container', e.relatedTarget);\r\n            if (!parent) {\r\n                e.preventDefault();\r\n                props.view = 0;\r\n                props.active = false;\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (props.onchange) {\r\n            props.onchange(props.date);\r\n        }\r\n    }\r\n\r\n    function checkKey(props, e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (e.keyCode === _keys.ESC) {\r\n            dismissAndCommit(props, e);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function prevNext(props, delta) {\r\n        var newDate = new Date(props.date);\r\n        switch (props.view) {\r\n            case 0:\r\n                newDate.setMonth(newDate.getMonth() + delta);\r\n                break;\r\n            case 1:\r\n                newDate.setFullYear(newDate.getFullYear() + delta);\r\n                break;\r\n            default:\r\n                newDate.setFullYear(newDate.getFullYear() + (delta * 10));\r\n        }\r\n        props.date = pushToLastDay(props.date, newDate);\r\n    }\r\n\r\n    /**\r\n     * Utility\r\n     */\r\n    function adjustedProps(date, delta) {\r\n        var month = date.getMonth() + delta, year = date.getFullYear();\r\n        var over = month > 11, under = month < 0;\r\n        return {\r\n            month: over ? 0 : under ? 11 : month,\r\n            year: over ? year + 1 : under ? year - 1 : year\r\n        };\r\n    }\r\n\r\n    function lastDateInMonth(date, delta) {\r\n        var obj = adjustedProps(date, delta);\r\n        if ([0, 2, 4, 6, 7, 9, 11].indexOf(obj.month) > -1) {\r\n            return 31; // array of 31-day props.months\r\n        }\r\n        if (obj.month === 1) { // February\r\n            if (!(obj.year % 400)) {\r\n                return 29;\r\n            }\r\n            if (!(obj.year % 100)) {\r\n                return 28;\r\n            }\r\n            return (obj.year % 4) ? 28 : 29;\r\n        }\r\n        return 30;\r\n    }\r\n\r\n    function pushToLastDay(oldDate, newDate) {\r\n        if (oldDate.getDate() !== newDate.getDate()) {\r\n            newDate.setMonth(newDate.getMonth() - 1, lastDateInMonth(newDate, -1));\r\n        }\r\n        return newDate;\r\n    }\r\n\r\n    function stringsForLocale(locale) {\r\n        var date = new Date('jan 1 2017'), _months = [], _days = []; // 1/1/2017 was month:0 and weekday:0, so perfect\r\n        while (_days.length < 7) {\r\n            _days.push(date.toLocaleDateString(locale, { weekday: 'long' }));\r\n            date.setDate(date.getDate() + 1);\r\n        }\r\n        while (_months.length < 12) {\r\n            _months.push(date.toLocaleDateString(locale, { month: 'long' }));\r\n            date.setMonth(date.getMonth() + 1);\r\n        }\r\n        return { days: _days, months: _months };\r\n    }\r\n\r\n    function wrapAround(idx, array) {\r\n        var len = array.length;\r\n        var n = idx >= len ? idx - len : idx;\r\n        return array[n];\r\n    }\r\n\r\n    /**\r\n     * Generators\r\n     */\r\n    function daysFromLastMonth(props) {\r\n        var month = props.date.getMonth(), year = props.date.getFullYear();\r\n        var firstDay = (new Date(year, month, 1)).getDay() - props.weekStart;\r\n        if (firstDay < 0) firstDay += 7;\r\n        var array = [];\r\n        var lastDate = lastDateInMonth(props.date, -1);\r\n        var offsetStart = lastDate - firstDay + 1;\r\n        for (var i = offsetStart; i <= lastDate; i++) {\r\n            array.push(i);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function daysFromThisMonth(props) {\r\n        var max = lastDateInMonth(props.date, 0);\r\n        var array = [];\r\n        for (var i = 1; i <= max; i++) {\r\n            array.push(i);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function daysFromNextMonth(prev, these) {\r\n        var soFar = prev.concat(these);\r\n        var mod = soFar.length % 7;\r\n        var array = [];\r\n        if (mod > 0) {\r\n            var n = 7 - mod;\r\n            for (var i = 1; i <= n; i++) {\r\n                array.push(i);\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    function defaultDate() {\r\n        var now = new Date();\r\n        now.setHours(0, 0, 0, 0);\r\n        return now;\r\n    }\r\n\r\n    function yearsForDecade(date) {\r\n        var year = date.getFullYear();\r\n        var start = year - (year % 10);\r\n        var array = [];\r\n        for (var i = start; i < start + 10; i++) {\r\n            array.push(i);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * View helpers\r\n     */\r\n    function classForBox(a, b) {\r\n        return a === b ? 'chosen' : '';\r\n    }\r\n\r\n    /**\r\n     * Components\r\n     */\r\n    var Header = {\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            var date = props.date;\r\n            var theseMonths = props.months || months;\r\n            return m('.header',\r\n                m('button.header-button.prev', { onclick: prevNext.bind(null, props, -1) }, [\r\n                    m('i.dash.dash-to-start'),\r\n                    prevNextTitles[props.view]\r\n                ]),\r\n                m('button.header-button.segment', { onclick: function() { props.view = 0; } }, date.getDate()),\r\n                m('button.header-button.segment', { onclick: function() { props.view = 1; } }, theseMonths[date.getMonth()].substr(0, 3)),\r\n                m('button.header-button.segment', { onclick: function() { props.view = 2; } }, date.getFullYear()),\r\n                m('button.header-button.next', { onclick: prevNext.bind(null, props, 1) }, [\r\n                    prevNextTitles[props.view],\r\n                    m('i.dash.dash-to-end')\r\n                ]),\r\n                m('button.btn.btn-secondary.btn-sm', { onclick: dismissAndCommit.bind(null, props) }, m('i.dash.dash-cancel'))\r\n            );\r\n        }\r\n    };\r\n\r\n    var MonthView = {\r\n        view: function (vnode) {\r\n            var props = vnode.attrs.props;\r\n            var prevDates = daysFromLastMonth(props);\r\n            var theseDates = daysFromThisMonth(props);\r\n            var nextDates = daysFromNextMonth(prevDates, theseDates);\r\n            var theseWeekdays = props.days || days;\r\n            return m('.calendar',\r\n                m('.weekdays', theseWeekdays.map(function (_, idx) {\r\n                    var day = wrapAround(idx + props.weekStart, theseWeekdays);\r\n                    return m('.day.dummy', day.substring(0, 2));\r\n                })),\r\n                m('.weekdays', {\r\n                    onclick: function (e) {\r\n                        chooseDate(props, e);\r\n                    }\r\n                },\r\n                prevDates.map(function (date) {\r\n                    return m('button.day.other-scope', date);\r\n                }),\r\n                theseDates.map(function (date) {\r\n                    return m('button.day', { class: classForBox(props.date.getDate(), date) }, m('.number', date));\r\n                }),\r\n                nextDates.map(function (date) {\r\n                    return m('button.day.other-scope', date);\r\n                })),\r\n                m('.time',\r\n                    m('select.form-control.custom-select', {\r\n                        value: props.date.getHours(), onchange: function (e) {\r\n                            props.date.setHours(e.target.value);\r\n                            props.date.setHours(e.target.value);\r\n                            if (props.onchange) {\r\n                                props.onchange(props.date);\r\n                            }\r\n                        }\r\n                    }, hours.map(function (x) {\r\n                        return m('option', { value: x }, ('00' + x).slice(-2));\r\n                    })),\r\n                    m('select.form-control.custom-select', {\r\n                        value: props.date.getMinutes(), onchange: function (e) {\r\n                            props.date.setMinutes(e.target.value);\r\n                            props.date.setMinutes(e.target.value);\r\n                            if (props.onchange) {\r\n                                props.onchange(props.date);\r\n                            }\r\n                        }\r\n                    }, minutes.map(function (x) {\r\n                        return m('option', { value: x }, ('00' + x).slice(-2));\r\n                    }))\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var YearView = {\r\n        view: function (vnode) {\r\n            var props = vnode.attrs.props;\r\n            var theseMonths = props.months || months;\r\n            return m('.calendar',\r\n                m('.months',\r\n                    theseMonths.map(function (month, idx) {\r\n                        return m('button.month', { class: classForBox(props.date.getMonth(), idx), onclick: function () {\r\n                            var newDate = new Date(props.date);\r\n                            newDate.setMonth(idx);\r\n                            props.date = pushToLastDay(props.date, newDate);\r\n                            props.view = 0;\r\n                        } }, m('.number', month.substring(0, 3)));\r\n                    })\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var DecadeView = {\r\n        view: function (vnode) {\r\n            var props = vnode.attrs.props;\r\n            var decade = yearsForDecade(props.date);\r\n            return m('.calendar',\r\n                m('.years',\r\n                    decade.map(function (year) {\r\n                        return m('button.year', {\r\n                            class: classForBox(props.date.getFullYear(), year), onclick: function () {\r\n                                var newDate = new Date(props.date);\r\n                                newDate.setFullYear(year);\r\n                                props.date = pushToLastDay(props.date, newDate);\r\n                                props.view = 1;\r\n                            }\r\n                        },\r\n                        m('.number', year));\r\n                    })\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var Editor = {\r\n        oncreate: function (vnode) {\r\n            requestAnimationFrame(function () {\r\n                vnode.dom.classList.add('active');\r\n            });\r\n        },\r\n        onbeforeremove: function (vnode) {\r\n            vnode.dom.classList.remove('active');\r\n            return new Promise(function (done) {\r\n                setTimeout(done, 200);\r\n            });\r\n        },\r\n        view: function(vnode) {\r\n            var props = vnode.attrs.props;\r\n            return m('.editor', { onkeydown: checkKey.bind(null, props) },\r\n                m(Header, { props: props }),\r\n                m('.sled', { class: 'p' + props.view },\r\n                    m(MonthView, { props: props }),\r\n                    m(YearView, { props: props }),\r\n                    m(DecadeView, { props: props })\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    var DatePicker = {\r\n        localize: function(loc) {\r\n            if (loc) {\r\n                prevNextTitles = loc.prevNextTitles || prevNextTitles;\r\n                locale = loc.locale || locale;\r\n                formatOptions = loc.formatOptions || formatOptions;\r\n                weekStart = $.isNumber(loc.weekStart) ? loc.weekStart : weekStart;\r\n                var strings = stringsForLocale(locale);\r\n                days = strings.days;\r\n                months = strings.months;\r\n            }\r\n        },\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            var date = new Date(attrs.date || defaultDate());\r\n            if (!attrs.date) {\r\n                attrs.onchange(date);\r\n            }\r\n            var props = {\r\n                date: date,\r\n                format: attrs.format || defaultFormat,\r\n                name: attrs.name,\r\n                active: false,\r\n                view: 0,\r\n                required: attrs.required,\r\n                disabled: attrs.disabled,\r\n                onchange: attrs.onchange,\r\n                class: attrs.class\r\n            };\r\n\r\n            ['prevNextTitles', 'locale', 'formatOptions'].forEach(function(prop) {\r\n                props[prop] = attrs[prop] || eval(prop);\r\n            });\r\n            props.weekStart = $.isNumber(attrs.weekStart) ? attrs.weekStart : weekStart;\r\n\r\n            if (attrs.locale && attrs.locale !== locale) {\r\n                var strings = stringsForLocale(props.locale);\r\n                props.days = strings.days;\r\n                props.months = strings.months;\r\n            }\r\n\r\n            vnode.state.props = props;\r\n        },\r\n        onbeforeupdate: function(vnode) {\r\n            vnode.state.props.class = vnode.attrs.class;\r\n        },\r\n        onupdate: function(vnode) {\r\n            var chosen = $.get('.chosen', vnode.dom);\r\n            if (chosen) {\r\n                chosen.focus();\r\n            }\r\n        },\r\n        showEditor: function(props, e) {\r\n            if (e && e instanceof KeyboardEvent) {\r\n                if (e.keyCode !== _keys.SPACE && e.keyCode !== _keys.ENTER) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (props.disabled) {\r\n                return;\r\n            }\r\n            if (props.active) {\r\n                props.view = 0;\r\n            }\r\n            props.active = !props.active;\r\n        },\r\n        view: function (vnode) {\r\n            var props = vnode.state.props;\r\n            return m('.mithril-date-picker-container', { class: ((props.active ? 'active' : '') + ' ' + props.class).trim() },\r\n                m('input.current-date.form-control', {\r\n                    name: props.name,\r\n                    class: props.required ? 'required' : null,\r\n                    format: props.format,\r\n                    readonly: true,\r\n                    onclick: this.showEditor.bind(null, props),\r\n                    onkeydown: this.showEditor.bind(null, props),\r\n                    value: $.fecha.format(props.date, props.format || defaultFormat)\r\n                }),\r\n                m('i.dash.current-date-indicator', { class: props.active ? 'dash-sort-up' : 'dash-sort-down' }),\r\n                props.active && m(Editor, { props: props })\r\n            );\r\n        }\r\n    };\r\n\r\n    return DatePicker;\r\n});   ","/*!\r\n * Library for storing widget positions and detecting collisions.\r\n */\r\n(function (root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Rect = factory(root.$);\r\n})(this, function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Constructor for a rect.\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     */\r\n    function Rect(width, height, x, y) {\r\n        this.x = $.coalesce(x, 0);\r\n        this.y = $.coalesce(y, 0);\r\n        this.width = $.coalesce(width, 0);\r\n        this.height = $.coalesce(height, 0);\r\n        this.updated = false;\r\n    }\r\n    \r\n    Rect.prototype = {\r\n        /**\r\n         * Check if rect intersects with this rect.\r\n         * @param {Rect} rect - Rect to check for intersection with.\r\n         * @returns {bool} True if the rectangles collide, else false.\r\n         */\r\n        overlaps: function (rect) {\r\n            var thisRight = this.x + this.width;\r\n            var thisBottom = this.y + this.height;\r\n            var rectRight = rect.x + rect.width;\r\n            var rectBottom = rect.y + rect.height;\r\n\r\n            // http://stackoverflow.com/a/306332\r\n            return this.x < rectRight && thisRight > rect.x && this.y < rectBottom && thisBottom > rect.y;\r\n        }\r\n    };\r\n\r\n    return Rect;\r\n});\r\n","/*!\r\n * Draggabilly PACKAGED v2.1.1\r\n * Make that shiz draggable\r\n * http://draggabilly.desandro.com\r\n * MIT license\r\n *\r\n * Modified to remove jQuery completely.\r\n */\r\n\r\n/*!\r\n * getSize v2.0.2\r\n * measure size of elements\r\n * MIT license\r\n */\r\n(function (root, factory) {\r\n    // Assume a traditional browser.\r\n    root.getSize = factory(root.$);\r\n})(this, function factory($) {\r\n    /**\r\n     * Get a number from a string, not a percentage.\r\n     * @param {string} value - String to parse.\r\n     * @returns {Number} Returns the number.\r\n     */\r\n    function getStyleSize(value) {\r\n        var num = parseFloat(value);\r\n        // not a percent like '100%', and a number\r\n        return value.indexOf('%') === -1 && !isNaN(num) && num;\r\n    }\r\n\r\n    var measurements = [\r\n        'paddingLeft',\r\n        'paddingRight',\r\n        'paddingTop',\r\n        'paddingBottom',\r\n        'marginLeft',\r\n        'marginRight',\r\n        'marginTop',\r\n        'marginBottom',\r\n        'borderLeftWidth',\r\n        'borderRightWidth',\r\n        'borderTopWidth',\r\n        'borderBottomWidth'\r\n    ];\r\n\r\n    var measurementsLength = measurements.length;\r\n\r\n    /**\r\n     * Build the size measurements for a hidden element.\r\n     * @returns {Object} Measurements for the element.\r\n     */\r\n    function getZeroSize() {\r\n        var size = {\r\n            width: 0,\r\n            height: 0,\r\n            innerWidth: 0,\r\n            innerHeight: 0,\r\n            outerWidth: 0,\r\n            outerHeight: 0\r\n        };\r\n        for (var i = 0; i < measurementsLength; i++) {\r\n            size[measurements[i]] = 0;\r\n        }\r\n        return size;\r\n    }\r\n\r\n    var isSetup = false;\r\n    var isBoxSizeOuter;\r\n\r\n    /**\r\n     * Setup the instance.\r\n     */\r\n    function setup() {\r\n        // setup once\r\n        if (isSetup) {\r\n            return;\r\n        }\r\n        isSetup = true;\r\n\r\n        /**\r\n         * WebKit measures the outer-width on style.width on border-box elems\r\n         * IE & Firefox<29 measures the inner-width\r\n         */\r\n        var div = document.createElement('div');\r\n        $.style(div, { width: '200px', padding: '1px 2px 3px 4px', borderStyle: 'solid', borderWidth: '1px 2px 3px 4px', boxSizing: 'border-box' });\r\n\r\n        var body = document.body || document.documentElement;\r\n        body.appendChild(div);\r\n        var style = getComputedStyle(div);\r\n\r\n        getSize.isBoxSizeOuter = isBoxSizeOuter = getStyleSize(style.width) === 200;\r\n        body.removeChild(div);\r\n    }\r\n\r\n    /**\r\n     * Get the dimensions of a node.\r\n     * @param {Node|string} elem - Node object or query selector.\r\n     * @returns {Object} Dimensions for node.\r\n     */\r\n    function getSize(elem) {\r\n        setup();\r\n\r\n        elem = $.get(elem);\r\n        if (!$.isNode(elem)) {\r\n            return;\r\n        }\r\n\r\n        var style = getComputedStyle(elem);\r\n\r\n        // if hidden, everything is 0\r\n        if (style.display === 'none') {\r\n            return getZeroSize();\r\n        }\r\n\r\n        var size = { width: elem.offsetWidth, height: elem.offsetHeight };\r\n        var isBorderBox = size.isBorderBox = style.boxSizing === 'border-box';\r\n\r\n        // get all measurements\r\n        for (var i = 0; i < measurementsLength; i++) {\r\n            var measurement = measurements[i];\r\n            var value = style[measurement];\r\n            var num = parseFloat(value);\r\n            // any 'auto', 'medium' value will be 0\r\n            size[measurement] = !isNaN(num) ? num : 0;\r\n        }\r\n\r\n        var paddingWidth = size.paddingLeft + size.paddingRight;\r\n        var paddingHeight = size.paddingTop + size.paddingBottom;\r\n        var marginWidth = size.marginLeft + size.marginRight;\r\n        var marginHeight = size.marginTop + size.marginBottom;\r\n        var borderWidth = size.borderLeftWidth + size.borderRightWidth;\r\n        var borderHeight = size.borderTopWidth + size.borderBottomWidth;\r\n        var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\r\n\r\n        // overwrite width and height if we can get it from style\r\n        var styleWidth = getStyleSize(style.width);\r\n        if (styleWidth !== false) {\r\n            // add padding and border unless it's already including it\r\n            size.width = styleWidth + (isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth);\r\n        }\r\n\r\n        var styleHeight = getStyleSize(style.height);\r\n        if (styleHeight !== false) {\r\n            // add padding and border unless it's already including it\r\n            size.height = styleHeight + (isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight);\r\n        }\r\n\r\n        size.innerWidth = size.width - (paddingWidth + borderWidth);\r\n        size.innerHeight = size.height - (paddingHeight + borderHeight);\r\n        size.outerWidth = size.width + marginWidth;\r\n        size.outerHeight = size.height + marginHeight;\r\n\r\n        return size;\r\n    }\r\n\r\n    return getSize;\r\n});\r\n\r\n/**\r\n * EvEmitter v1.0.3\r\n * Lil' event emitter\r\n * MIT License\r\n */\r\n\r\n/* jshint unused: true, undef: true, strict: true */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.EvEmitter = factory();\r\n}(this, function () {\r\n    /**\r\n     * Constructor for the event emitter.\r\n     */\r\n    function EvEmitter() { }\r\n\r\n    EvEmitter.prototype = {\r\n        /**\r\n         * Add an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Function} listener - Callback function\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        on: function (eventName, listener) {\r\n            if (!eventName || !listener) {\r\n                return;\r\n            }\r\n            // set events hash\r\n            var events = this._events = this._events || {};\r\n            // set listeners array\r\n            var listeners = events[eventName] = events[eventName] || [];\r\n            // only add once\r\n            if (listeners.indexOf(listener) === -1) {\r\n                listeners.push(listener);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Remove an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Function} listener - Callback function\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        off: function (eventName, listener) {\r\n            var listeners = this._events && this._events[eventName];\r\n            if (!listeners || !listeners.length) {\r\n                return;\r\n            }\r\n            var index = listeners.indexOf(listener);\r\n            if (index !== -1) {\r\n                listeners.splice(index, 1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Dispatch an event.\r\n         * @param {string} eventName - New event name.\r\n         * @param {Array} args - Arguments for the callback.\r\n         * @returns {Undefined|Object} Returns undefined if the params aren't valid, else a reference to this for chaining.\r\n         */\r\n        emitEvent: function (eventName, args) {\r\n            var listeners = this._events && this._events[eventName];\r\n            if (!listeners || !listeners.length) {\r\n                return;\r\n            }\r\n            args = args || [];\r\n            listeners.forEach(function (x) {\r\n                x.apply(this, args);\r\n            });\r\n            return this;\r\n        }\r\n    };\r\n\r\n    return EvEmitter;\r\n}));\r\n\r\n/*!\r\n * Unipointer v2.1.0\r\n * base class for doing one thing with pointer event\r\n * MIT license\r\n */\r\n\r\n/*jshint browser: true, undef: true, unused: true, strict: true */\r\n(function (root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Unipointer = factory(root.$, root, root.EvEmitter);\r\n}(this, function factory($, root, EvEmitter) {\r\n    /**\r\n     * Constructor for the Unipointer\r\n     */\r\n    function Unipointer() { }\r\n\r\n    // inherit EvEmitter\r\n    var proto = Unipointer.prototype = Object.create(EvEmitter.prototype);\r\n\r\n    /**\r\n     * Add an event to start dragging.\r\n     * @param {Node} elem - Node to add the event to.\r\n     */\r\n    proto.bindStartEvent = function (elem) {\r\n        this._bindStartEvent(elem, true);\r\n    };\r\n\r\n    /**\r\n     * Remove an event to start dragging.\r\n     * @param {Node} elem - Node to remove the event from.\r\n     */\r\n    proto.unbindStartEvent = function (elem) {\r\n        this._bindStartEvent(elem, false);\r\n    };\r\n\r\n    /**\r\n     * Add/remove the event to start dragging.\r\n     * @param {Node} elem - Node to add/remove the event to.\r\n     * @param {Boolean} isBind - will unbind if falsey.\r\n     * @private\r\n     */\r\n    proto._bindStartEvent = function (elem, isBind) {\r\n        var bindMethod = $.coalesce(isBind, true) ? 'addEventListener' : 'removeEventListener';\r\n\r\n        if (window.navigator.pointerEnabled) {\r\n            // W3C Pointer Events, IE11. See https://coderwall.com/p/mfreca\r\n            elem[bindMethod]('pointerdown', this);\r\n        } else if (window.navigator.msPointerEnabled) {\r\n            // IE10 Pointer Events\r\n            elem[bindMethod]('MSPointerDown', this);\r\n        } else {\r\n            // listen for both, for devices like Chrome Pixel\r\n            elem[bindMethod]('mousedown', this);\r\n            elem[bindMethod]('touchstart', this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Trigger handler methods for events\r\n     * @param {Event} event - Event to trigger.\r\n     */\r\n    proto.handleEvent = function (event) {\r\n        var method = 'on' + event.type;\r\n        if (this[method]) {\r\n            this[method](event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns the touch that we're keeping track of.\r\n     * @param {Touch[]} touches - Touch history\r\n     * @returns {Touch} Touch event.\r\n     */\r\n    proto.getTouch = function (touches) {\r\n        return $.findByKey(touches, 'identifier', this.pointerIdentifier);\r\n    };\r\n\r\n    /**\r\n     * Handle a mouse click.\r\n     * @param {Event} event - Click event.\r\n     */\r\n    proto.onmousedown = function (event) {\r\n        // dismiss clicks from right or middle buttons\r\n        var button = event.button;\r\n        if (button && (button !== 0 && button !== 1)) {\r\n            return;\r\n        }\r\n        this._pointerDown(event, event);\r\n    };\r\n\r\n    /**\r\n     * Handle a touch.\r\n     * @param {Touch} event - Touch event.\r\n     */\r\n    proto.ontouchstart = function (event) {\r\n        this._pointerDown(event, event.changedTouches[0]);\r\n    };\r\n\r\n    /**\r\n     * Handle a mouse click for IE.\r\n     * @param {Event} event - Click event.\r\n     */\r\n    proto.onMSPointerDown = proto.onpointerdown = function (event) {\r\n        this._pointerDown(event, event);\r\n    };\r\n\r\n    /**\r\n     * Start a click/touch event.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerDown = function (event, pointer) {\r\n        // dismiss other pointers\r\n        if (this.isPointerDown) {\r\n            return;\r\n        }\r\n\r\n        this.isPointerDown = true;\r\n        // save pointer identifier to match up touch events\r\n        // pointerId for pointer events, touch.indentifier for touch events\r\n        this.pointerIdentifier = pointer.pointerId !== undefined ? pointer.pointerId : pointer.identifier;\r\n        this.pointerDown(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Bind events after the start of a click/touch event.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function (event, pointer) {\r\n        this._bindPostStartEvents(event);\r\n        this.emitEvent('pointerDown', [event, pointer]);\r\n    };\r\n\r\n    // hash of events to be bound after start event\r\n    var postStartEvents = {\r\n        mousedown: ['mousemove', 'mouseup'],\r\n        touchstart: ['touchmove', 'touchend', 'touchcancel'],\r\n        pointerdown: ['pointermove', 'pointerup', 'pointercancel'],\r\n        MSPointerDown: ['MSPointerMove', 'MSPointerUp', 'MSPointerCancel']\r\n    };\r\n\r\n    /**\r\n     * Add all of the events that are needed after start dragging.\r\n     * @param {Event} event - Original click/touch event.\r\n     * @private\r\n     */\r\n    proto._bindPostStartEvents = function (event) {\r\n        if (!event) {\r\n            return;\r\n        }\r\n        // get proper events to match start event\r\n        var events = postStartEvents[event.type];\r\n        // bind events to node\r\n        events.forEach(function (eventName) {\r\n            window.addEventListener(eventName, this);\r\n        }, this);\r\n        // save these arguments\r\n        this._boundPointerEvents = events;\r\n    };\r\n\r\n    /**\r\n     * Remove all of the events that are needed after start dragging.\r\n     * @param {Event} event - Original click/touch event.\r\n     * @private\r\n     */\r\n    proto._unbindPostStartEvents = function () {\r\n        // check for _boundEvents, in case dragEnd triggered twice (old IE8 bug)\r\n        if (!this._boundPointerEvents) {\r\n            return;\r\n        }\r\n        this._boundPointerEvents.forEach(function (eventName) {\r\n            window.removeEventListener(eventName, this);\r\n        }, this);\r\n\r\n        delete this._boundPointerEvents;\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse moves.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onmousemove = function (event) {\r\n        this._pointerMove(event, event);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse moves for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerMove = proto.onpointermove = function (event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerMove(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch moves.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchmove = function (event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerMove(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer move from all the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerMove = function (event, pointer) {\r\n        this.pointerMove(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer move event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function (event, pointer) {\r\n        this.emitEvent('pointerMove', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse button is released.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onmouseup = function (event) {\r\n        this._pointerUp(event, event);\r\n    };\r\n\r\n    /**\r\n     * Event handler when the mouse button is released for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerUp = proto.onpointerup = function (event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerUp(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch is released.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchend = function (event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerUp(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer up from all the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerUp = function (event, pointer) {\r\n        this._pointerDone();\r\n        this.pointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer up event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function (event, pointer) {\r\n        this.emitEvent('pointerUp', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Event handler for when the dragging stops.\r\n     * @private\r\n     */\r\n    proto._pointerDone = function () {\r\n        // reset properties\r\n        this.isPointerDown = false;\r\n        delete this.pointerIdentifier;\r\n        // remove events\r\n        this._unbindPostStartEvents();\r\n        this.pointerDone();\r\n    };\r\n\r\n    proto.pointerDone = $.noop;\r\n\r\n    /**\r\n     * Event handler when the mouse click is canceled for IE.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.onMSPointerCancel = proto.onpointercancel = function (event) {\r\n        if (event.pointerId === this.pointerIdentifier) {\r\n            this._pointerCancel(event, event);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Event handler when the touch is canceled.\r\n     * @param {Event} event - Original click/touch event.\r\n     */\r\n    proto.ontouchcancel = function (event) {\r\n        var touch = this.getTouch(event.changedTouches);\r\n        if (touch) {\r\n            this._pointerCancel(event, touch);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle pointer cancel from all of the different possible inputs.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._pointerCancel = function (event, pointer) {\r\n        this._pointerDone();\r\n        this.pointerCancel(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Trigger the pointer cancel event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerCancel = function (event, pointer) {\r\n        this.emitEvent('pointerCancel', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Utility function for getting x/y coords from event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @returns {Object} Object with x & y coordinates.\r\n     */\r\n    Unipointer.getPointerPoint = function (pointer) {\r\n        return {\r\n            x: pointer.pageX,\r\n            y: pointer.pageY\r\n        };\r\n    };\r\n\r\n    return Unipointer;\r\n}));\r\n\r\n/*!\r\n * Unidragger v2.1.0\r\n * Draggable base class\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Unidragger = factory(root.$, root, root.Unipointer);\r\n}(this, function factory($, root, Unipointer) {\r\n    /**\r\n     * Unidragger constructor.\r\n     */\r\n    function Unidragger() { }\r\n\r\n    /**\r\n     * Inherit Unipointer & EvEmitter\r\n     */\r\n    var proto = Unidragger.prototype = Object.create(Unipointer.prototype);\r\n\r\n    /**\r\n     * Add events for drag handle.\r\n     */\r\n    proto.bindHandles = function () {\r\n        this._bindHandles(true);\r\n    };\r\n\r\n    /**\r\n     * Remove events for drag handle.\r\n     */\r\n    proto.unbindHandles = function () {\r\n        this._bindHandles(false);\r\n    };\r\n\r\n    /**\r\n     * Handle adding/removing events for the drag handle.\r\n     * @param {Bool} isBind - Unbind if falsey.\r\n     */\r\n    proto._bindHandles = function (isBind) {\r\n        isBind = $.coalesce(isBind, true);\r\n        // extra bind logic\r\n        var binderExtra;\r\n        var navigator = window.navigator;\r\n        if (navigator.pointerEnabled || navigator.msPointerEnabled) {\r\n            var prop = navigator.pointerEnabled ? 'touchAction' : 'msTouchAction';\r\n            binderExtra = function (handle) {\r\n                // disable scrolling on the element\r\n                handle.style[prop] = isBind ? 'none' : '';\r\n            };\r\n        } else {\r\n            binderExtra = $.noop;\r\n        }\r\n        // bind each handle\r\n        var bindMethod = isBind ? 'addEventListener' : 'removeEventListener';\r\n        for (var i = 0; i < this.handles.length; i++) {\r\n            var handle = this.handles[i];\r\n            this._bindStartEvent(handle, isBind);\r\n            binderExtra(handle);\r\n            handle[bindMethod]('click', this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Pointer start\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function (event, pointer) {\r\n        // dismiss range sliders\r\n        if (event.target.nodeName === 'INPUT' && event.target.type === 'range') {\r\n            // reset pointerDown logic\r\n            this.isPointerDown = false;\r\n            delete this.pointerIdentifier;\r\n            return;\r\n        }\r\n\r\n        this._dragPointerDown(event, pointer);\r\n        // kludge to blur focused inputs in dragger\r\n        var focused = document.activeElement;\r\n        if (focused && focused.blur) {\r\n            focused.blur();\r\n        }\r\n        // bind move and end events\r\n        this._bindPostStartEvents(event);\r\n        this.emitEvent('pointerDown', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Base pointer down logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragPointerDown = function (event, pointer) {\r\n        // track to see when dragging starts\r\n        this.pointerDownPoint = Unipointer.getPointerPoint(pointer);\r\n        if (this.canPreventDefaultOnPointerDown(event, pointer)) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Overwriteable method so Flickity can prevent for scrolling\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @returns {Bool} True if allowed to prevent default event, else false.\r\n     */\r\n    proto.canPreventDefaultOnPointerDown = function (event) {\r\n        // prevent default, unless touchstart or <select>\r\n        return event.target.nodeName !== 'SELECT';\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function (event, pointer) {\r\n        var moveVector = this._dragPointerMove(event, pointer);\r\n        this.emitEvent('pointerMove', [event, pointer, moveVector]);\r\n        this._dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Base pointer move logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @returns {Object} Object with x & y coordinates.\r\n     */\r\n    proto._dragPointerMove = function (event, pointer) {\r\n        var movePoint = Unipointer.getPointerPoint(pointer);\r\n        var moveVector = {\r\n            x: movePoint.x - this.pointerDownPoint.x,\r\n            y: movePoint.y - this.pointerDownPoint.y\r\n        };\r\n        // start drag if pointer has moved far enough to start drag\r\n        if (!this.isDragging && this.hasDragStarted(moveVector)) {\r\n            this._dragStart(event, pointer);\r\n        }\r\n        return moveVector;\r\n    };\r\n\r\n    /**\r\n     * Check if pointer has moved far enough to start drag.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     * @returns {Bool} True if moved far enough to count as move.\r\n     */\r\n    proto.hasDragStarted = function (moveVector) {\r\n        return Math.abs(moveVector.x) > 3 || Math.abs(moveVector.y) > 3;\r\n    };\r\n\r\n    /**\r\n     * Pointer up.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function (event, pointer) {\r\n        this.emitEvent('pointerUp', [event, pointer]);\r\n        this._dragPointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Handle mouse/touch up.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragPointerUp = function (event, pointer) {\r\n        if (this.isDragging) {\r\n            this._dragEnd(event, pointer);\r\n        } else {\r\n            // pointer didn't move enough for drag to start\r\n            this._staticClick(event, pointer);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Base drag start logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @private\r\n     */\r\n    proto._dragStart = function (event, pointer) {\r\n        this.isDragging = true;\r\n        this.dragStartPoint = Unipointer.getPointerPoint(pointer);\r\n        this.isPreventingClicks = true;\r\n        this.dragStart(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag start event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragStart = function (event, pointer) {\r\n        this.emitEvent('dragStart', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Base drag move logic.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     * @private\r\n     */\r\n    proto._dragMove = function (event, pointer, moveVector) {\r\n        // do not drag if not dragging yet\r\n        if (!this.isDragging) {\r\n            return;\r\n        }\r\n        this.dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag move event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x & y coordinates.\r\n     */\r\n    proto.dragMove = function (event, pointer, moveVector) {\r\n        event.preventDefault();\r\n        this.emitEvent('dragMove', [event, pointer, moveVector]);\r\n    };\r\n\r\n    /**\r\n     * Base logic for drag end.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._dragEnd = function (event, pointer) {\r\n        this.isDragging = false;\r\n        // re-enable clicking async\r\n        setTimeout(function () {\r\n            delete this.isPreventingClicks;\r\n        }.bind(this));\r\n        this.dragEnd(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Dispatch drag end event for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragEnd = function (event, pointer) {\r\n        this.emitEvent('dragEnd', [event, pointer]);\r\n    };\r\n\r\n    /**\r\n     * Handle all clicks and prevent clicks when dragging\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     */\r\n    proto.onclick = function (event) {\r\n        if (this.isPreventingClicks) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Triggered after pointer down & up with no/tiny movement.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto._staticClick = function (event, pointer) {\r\n        // ignore emulated mouse up clicks\r\n        if (this.isIgnoringMouseUp && event.type === 'mouseup') {\r\n            return;\r\n        }\r\n\r\n        // allow click in <input>s and <textarea>s\r\n        var nodeName = event.target.nodeName;\r\n        if (nodeName === 'INPUT' || nodeName === 'TEXTAREA') {\r\n            event.target.focus();\r\n        }\r\n        this.staticClick(event, pointer);\r\n\r\n        // set flag for emulated clicks 300ms after touchend\r\n        if (event.type !== 'mouseup') {\r\n            this.isIgnoringMouseUp = true;\r\n            // reset flag after 300ms\r\n            setTimeout(function () {\r\n                delete this.isIgnoringMouseUp;\r\n            }.bind(this), 400);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Dispatch event for staticClick for callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.staticClick = function (event, pointer) {\r\n        this.emitEvent('staticClick', [event, pointer]);\r\n    };\r\n\r\n    return Unidragger;\r\n}));\r\n\r\n/*!\r\n * Draggabilly v2.1.1\r\n * Make that shiz draggable\r\n * http://draggabilly.desandro.com\r\n * MIT license\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Draggabilly = factory(root.$, root, root.getSize, root.Unidragger);\r\n}(this, function factory($, root, getSize, Unidragger) {\r\n    var lastTime = 0;\r\n    // get rAF, prefixed, if present. fallback to setTimeout\r\n    var requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {\r\n        var currTime = new Date().getTime();\r\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n        var id = setTimeout(callback, timeToCall);\r\n        lastTime = currTime + timeToCall;\r\n        return id;\r\n    };\r\n    var transformProperty = $.isString(document.documentElement.style.transform) ? 'transform' : 'WebkitTransform';\r\n\r\n    /**\r\n     * Draggabilly constructor.\r\n     * @param {Node|string} element - Node, or querySelector string of node, to make draggable.\r\n     * @param {Object} options - Configuration options.\r\n     */\r\n    function Draggabilly(element, options) {\r\n        this.element = $.get(element);\r\n        this.options = options || {};\r\n        this._create();\r\n    }\r\n\r\n    /**\r\n     * Inherit Unidragger methods.\r\n     */\r\n    var proto = Draggabilly.prototype = Object.create(Unidragger.prototype);\r\n\r\n    /**\r\n     * CSS position values that don't need to be set.\r\n     */\r\n    var positionValues = { relative: true, absolute: true, fixed: true };\r\n\r\n    /**\r\n     * Initialize draggabilly.\r\n     */\r\n    proto._create = function () {\r\n        // properties\r\n        this.position = {};\r\n        this._getPosition();\r\n\r\n        this.startPoint = { x: 0, y: 0 };\r\n        this.dragPoint = { x: 0, y: 0 };\r\n        this.startPosition = {};\r\n\r\n        // set relative positioning\r\n        var style = getComputedStyle(this.element);\r\n        if (!positionValues[style.position]) {\r\n            this.element.style.position = 'relative';\r\n        }\r\n\r\n        this.enable();\r\n        this.setHandles();\r\n    };\r\n\r\n    /**\r\n     * Set this.handles and bind start events to the handles.\r\n     */\r\n    proto.setHandles = function () {\r\n        this.handles = this.options.handle ? $.getAll(this.options.handle, this.element) : [this.element];\r\n        this.bindHandles();\r\n    };\r\n\r\n    /**\r\n     * Emits events via EvEmitter.\r\n     * @param {String} type - Name of event.\r\n     * @param {Event} event - Original event.\r\n     * @param {Array} args - Extra arguments.\r\n     */\r\n    proto.dispatchEvent = function (type, event, args) {\r\n        this.emitEvent(type, [event].concat(args));\r\n    };\r\n\r\n    /**\r\n     * Get x/y position from style.\r\n     */\r\n    proto._getPosition = function () {\r\n        var style = getComputedStyle(this.element);\r\n        var x = this._getPositionCoord(style.left, 'width');\r\n        var y = this._getPositionCoord(style.top, 'height');\r\n        // clean up 'auto' or other non-integer values\r\n        this.position.x = isNaN(x) ? 0 : x;\r\n        this.position.y = isNaN(y) ? 0 : y;\r\n\r\n        this._addTransformPosition(style);\r\n    };\r\n\r\n    /**\r\n     * Get a numeric coordinate from a style.\r\n     * @param {String} styleSide - CSS style to parse.\r\n     * @param {String} measure - Property name to get the size for.\r\n     * @returns {Number} Resulting size in pixels.\r\n     */\r\n    proto._getPositionCoord = function (styleSide, measure) {\r\n        if (styleSide.indexOf('%') !== -1) {\r\n            // convert percent into pixel for Safari, #75\r\n            var parentSize = getSize(this.element.parentNode);\r\n            // prevent not-in-DOM element throwing bug, #131\r\n            return !parentSize ? 0 : (parseFloat(styleSide) / 100) * parentSize[measure];\r\n        }\r\n        return parseInt(styleSide, 10);\r\n    };\r\n\r\n    /**\r\n     * Add `transform: translate( x, y )` to position.\r\n     * @param {CSSStyleDeclaration} style - Element styles to add to.\r\n     */\r\n    proto._addTransformPosition = function (style) {\r\n        var transform = style[transformProperty];\r\n        // bail out if value is 'none'\r\n        if (transform.indexOf('matrix') !== 0) {\r\n            return;\r\n        }\r\n        // split matrix(1, 0, 0, 1, x, y)\r\n        var matrixValues = transform.split(',');\r\n        // translate X value is in 12th or 4th position\r\n        var xIndex = transform.indexOf('matrix3d') === 0 ? 12 : 4;\r\n        var translateX = parseInt(matrixValues[xIndex], 10);\r\n        // translate Y value is in 13th or 5th position\r\n        var translateY = parseInt(matrixValues[xIndex + 1], 10);\r\n        this.position.x += translateX;\r\n        this.position.y += translateY;\r\n    };\r\n\r\n    /**\r\n     * Pointer start.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerDown = function (event, pointer) {\r\n        this._dragPointerDown(event, pointer);\r\n        // kludge to blur focused inputs in dragger\r\n        var focused = document.activeElement;\r\n        // do not blur body for IE10, metafizzy/flickity#117\r\n        if (focused && focused.blur && focused !== document.body) {\r\n            focused.blur();\r\n        }\r\n        // bind move and end events\r\n        this._bindPostStartEvents(event);\r\n        $.addClass(this.element, 'is-pointer-down');\r\n        this.dispatchEvent('pointerDown', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerMove = function (event, pointer) {\r\n        var moveVector = this._dragPointerMove(event, pointer);\r\n        this.dispatchEvent('pointerMove', event, [pointer, moveVector]);\r\n        this._dragMove(event, pointer, moveVector);\r\n    };\r\n\r\n    /**\r\n     * Drag start.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragStart = function (event, pointer) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n        this._getPosition();\r\n        this.measureContainment();\r\n        // position _when_ drag began\r\n        this.startPosition.x = this.position.x;\r\n        this.startPosition.y = this.position.y;\r\n        // reset left/top style\r\n        this.setLeftTop();\r\n\r\n        this.dragPoint.x = 0;\r\n        this.dragPoint.y = 0;\r\n\r\n        $.addClass(this.element, 'is-dragging');\r\n        this.dispatchEvent('dragStart', event, [pointer]);\r\n        // start animation\r\n        this.animate();\r\n    };\r\n\r\n    /**\r\n     * Calculate the correct position of the element within its container.\r\n     */\r\n    proto.measureContainment = function () {\r\n        var containment = this.options.containment;\r\n        if (!containment) {\r\n            return;\r\n        }\r\n\r\n        // use element if element, otherwise just `true`, use the parent\r\n        var container = $.isNode(containment) ? containment : $.isString(containment) ? $.get(containment) : this.element.parentNode;\r\n        var elemSize = getSize(this.element);\r\n        var containerSize = getSize(container);\r\n        var elemRect = this.element.getBoundingClientRect();\r\n        var containerRect = container.getBoundingClientRect();\r\n        var borderSizeX = containerSize.borderLeftWidth + containerSize.borderRightWidth;\r\n        var borderSizeY = containerSize.borderTopWidth + containerSize.borderBottomWidth;\r\n\r\n        var position = this.relativeStartPosition = {\r\n            x: elemRect.left - (containerRect.left + containerSize.borderLeftWidth),\r\n            y: elemRect.top - (containerRect.top + containerSize.borderTopWidth)\r\n        };\r\n\r\n        this.containSize = {\r\n            width: (containerSize.width - borderSizeX) - position.x - elemSize.width,\r\n            height: (containerSize.height - borderSizeY) - position.y - elemSize.height\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Drag move.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     * @param {Object} moveVector - Object with x and y coordinates of current position.\r\n     */\r\n    proto.dragMove = function (event, pointer, moveVector) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n\r\n        var dragX = moveVector.x;\r\n        var dragY = moveVector.y;\r\n        var grid = this.options.grid;\r\n        var gridX = grid && grid[0];\r\n        var gridY = grid && grid[1];\r\n\r\n        dragX = applyGrid(dragX, gridX);\r\n        dragY = applyGrid(dragY, gridY);\r\n\r\n        dragX = this.containDrag('x', dragX, gridX);\r\n        dragY = this.containDrag('y', dragY, gridY);\r\n\r\n        // constrain to axis\r\n        dragX = this.options.axis === 'y' ? 0 : dragX;\r\n        dragY = this.options.axis === 'x' ? 0 : dragY;\r\n\r\n        if (this.options.minZero) {\r\n            dragX = applyMinZero(this.startPosition.x, dragX);\r\n            dragY = applyMinZero(this.startPosition.y, dragY);\r\n        }\r\n\r\n        this.position.x = this.startPosition.x + dragX;\r\n        this.position.y = this.startPosition.y + dragY;\r\n        // set dragPoint properties\r\n        this.dragPoint.x = dragX;\r\n        this.dragPoint.y = dragY;\r\n\r\n        this.dispatchEvent('dragMove', event, [pointer, moveVector]);\r\n    };\r\n\r\n    /**\r\n     * Adjust a coordinate to snap to the grid.\r\n     * @param {Number} value - Coordinate to snap to grid.\r\n     * @param {Number} grid - Grid width/height.\r\n     * @param {String} method - Math method to apply.\r\n     * @returns {Number} Closes number that snaps to grid.\r\n     */\r\n    function applyGrid(value, grid, method) {\r\n        return grid ? Math[method || 'round'](value / grid) * grid : value;\r\n    }\r\n\r\n    /**\r\n     * Adjust the drag position to prevent the item from moving out of the container to the left or top.\r\n     * @param {Number} start - Element starting coordinate.\r\n     * @param {Number} drag - Distance element was dragged.\r\n     * @returns {Number} Corrected drag coordinate.\r\n     */\r\n    function applyMinZero(start, drag) {\r\n        return start + drag < 0 ? -start : drag;\r\n    }\r\n\r\n    /**\r\n     * Limit dragging within boundaries.\r\n     * @param {string} axis - X or Y Axis\r\n     * @param {number} drag - Position coordinate on axis\r\n     * @param {number} grid - Boundary coordinate on axis.\r\n     * @returns {number} Coordinate contained with drag.\r\n     */\r\n    proto.containDrag = function (axis, drag, grid) {\r\n        if (!this.options.containment) {\r\n            return drag;\r\n        }\r\n        var measure = axis === 'x' ? 'width' : 'height';\r\n\r\n        var rel = this.relativeStartPosition[axis];\r\n        var min = applyGrid(-rel, grid, 'ceil');\r\n        var max = this.containSize[measure];\r\n        max = applyGrid(max, grid, 'floor');\r\n        return Math.min(max, Math.max(min, drag));\r\n    };\r\n\r\n    /**\r\n     * pointer up\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.pointerUp = function (event, pointer) {\r\n        $.removeClass(this.element, 'is-pointer-down');\r\n        this.dispatchEvent('pointerUp', event, [pointer]);\r\n        this._dragPointerUp(event, pointer);\r\n    };\r\n\r\n    /**\r\n     * Drag end.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.dragEnd = function (event, pointer) {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n        // use top left position when complete\r\n        if (transformProperty) {\r\n            this.element.style[transformProperty] = '';\r\n            this.setLeftTop();\r\n        }\r\n        $.removeClass(this.element, 'is-dragging');\r\n        this.dispatchEvent('dragEnd', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Animate while dragging.\r\n     */\r\n    proto.animate = function () {\r\n        if (!this.isDragging) {\r\n            return;\r\n        }\r\n        this.positionDrag();\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    };\r\n\r\n    /**\r\n     * Set left/top positioning.\r\n     */\r\n    proto.setLeftTop = function () {\r\n        $.style(this.element, { left: this.position.x + 'px', top: this.position.y + 'px' });\r\n    };\r\n\r\n    /**\r\n     * Set position transform based on drag.\r\n     */\r\n    proto.positionDrag = function () {\r\n        this.element.style[transformProperty] = 'translate3d( ' + this.dragPoint.x + 'px, ' + this.dragPoint.y + 'px, 0)';\r\n    };\r\n\r\n    /**\r\n     * Dispatch the event for static click callbacks.\r\n     * @param {Event} event - Original mousedown or touchstart event.\r\n     * @param {Event|Touch} pointer - Event object that has .pageX and .pageY.\r\n     */\r\n    proto.staticClick = function (event, pointer) {\r\n        this.dispatchEvent('staticClick', event, [pointer]);\r\n    };\r\n\r\n    /**\r\n     * Enable dragging.\r\n     */\r\n    proto.enable = function () {\r\n        this.isEnabled = true;\r\n    };\r\n\r\n    /**\r\n     * Disable dragging.\r\n     */\r\n    proto.disable = function () {\r\n        this.isEnabled = false;\r\n        if (this.isDragging) {\r\n            this.dragEnd();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroy this instance.\r\n     */\r\n    proto.destroy = function () {\r\n        this.disable();\r\n        this.element.removeAttribute('style');\r\n        this.unbindHandles();\r\n    };\r\n\r\n    return Draggabilly;\r\n}));","/*!\r\n * Chart.js\r\n * http://chartjs.org/\r\n * Version: 2.7.1\r\n *\r\n * Copyright 2018 Chart.js Contributors\r\n * Released under the MIT license\r\n * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md\r\n */\r\n(function(f) { if (typeof exports === \"object\" && typeof module !== \"undefined\") { module.exports = f() } else if (typeof define === \"function\" && define.amd) { define([], f) } else { var g; if (typeof window !== \"undefined\") { g = window } else if (typeof global !== \"undefined\") { g = global } else if (typeof self !== \"undefined\") { g = self } else { g = this } g.Chart = f() } })(function() {\r\n    var define, module, exports; return (function e(t, n, r) { function s(o, u) { if (!n[o]) { if (!t[o]) { var a = typeof require == \"function\" && require; if (!u && a) return a(o, !0); if (i) return i(o, !0); var f = new Error(\"Cannot find module '\" + o + \"'\"); throw f.code = \"MODULE_NOT_FOUND\", f } var l = n[o] = { exports: {} }; t[o][0].call(l.exports, function(e) { var n = t[o][1][e]; return s(n ? n : e) }, l, l.exports, e, t, n, r) } return n[o].exports } var i = typeof require == \"function\" && require; for (var o = 0; o < r.length; o++)s(r[o]); return s })({\r\n        1: [function(require, module, exports) {\r\n            /* MIT license */\r\n            var colorNames = require(5);\r\n\r\n            module.exports = {\r\n                getRgba: getRgba,\r\n                getHsla: getHsla,\r\n                getRgb: getRgb,\r\n                getHsl: getHsl,\r\n                getHwb: getHwb,\r\n                getAlpha: getAlpha,\r\n\r\n                hexString: hexString,\r\n                rgbString: rgbString,\r\n                rgbaString: rgbaString,\r\n                percentString: percentString,\r\n                percentaString: percentaString,\r\n                hslString: hslString,\r\n                hslaString: hslaString,\r\n                hwbString: hwbString,\r\n                keyword: keyword\r\n            }\r\n\r\n            function getRgba(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var abbr = /^#([a-fA-F0-9]{3})$/i,\r\n                    hex = /^#([a-fA-F0-9]{6})$/i,\r\n                    rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n                    per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\r\n                    keyword = /(\\w+)/;\r\n\r\n                var rgb = [0, 0, 0],\r\n                    a = 1,\r\n                    match = string.match(abbr);\r\n                if (match) {\r\n                    match = match[1];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match[i] + match[i], 16);\r\n                    }\r\n                }\r\n                else if (match = string.match(hex)) {\r\n                    match = match[1];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n                    }\r\n                }\r\n                else if (match = string.match(rgba)) {\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match[i + 1]);\r\n                    }\r\n                    a = parseFloat(match[4]);\r\n                }\r\n                else if (match = string.match(per)) {\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n                    }\r\n                    a = parseFloat(match[4]);\r\n                }\r\n                else if (match = string.match(keyword)) {\r\n                    if (match[1] == \"transparent\") {\r\n                        return [0, 0, 0, 0];\r\n                    }\r\n                    rgb = colorNames[match[1]];\r\n                    if (!rgb) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                for (var i = 0; i < rgb.length; i++) {\r\n                    rgb[i] = scale(rgb[i], 0, 255);\r\n                }\r\n                if (!a && a != 0) {\r\n                    a = 1;\r\n                }\r\n                else {\r\n                    a = scale(a, 0, 1);\r\n                }\r\n                rgb[3] = a;\r\n                return rgb;\r\n            }\r\n\r\n            function getHsla(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n                var match = string.match(hsl);\r\n                if (match) {\r\n                    var alpha = parseFloat(match[4]);\r\n                    var h = scale(parseInt(match[1]), 0, 360),\r\n                        s = scale(parseFloat(match[2]), 0, 100),\r\n                        l = scale(parseFloat(match[3]), 0, 100),\r\n                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n                    return [h, s, l, a];\r\n                }\r\n            }\r\n\r\n            function getHwb(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n                var match = string.match(hwb);\r\n                if (match) {\r\n                    var alpha = parseFloat(match[4]);\r\n                    var h = scale(parseInt(match[1]), 0, 360),\r\n                        w = scale(parseFloat(match[2]), 0, 100),\r\n                        b = scale(parseFloat(match[3]), 0, 100),\r\n                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n                    return [h, w, b, a];\r\n                }\r\n            }\r\n\r\n            function getRgb(string) {\r\n                var rgba = getRgba(string);\r\n                return rgba && rgba.slice(0, 3);\r\n            }\r\n\r\n            function getHsl(string) {\r\n                var hsla = getHsla(string);\r\n                return hsla && hsla.slice(0, 3);\r\n            }\r\n\r\n            function getAlpha(string) {\r\n                var vals = getRgba(string);\r\n                if (vals) {\r\n                    return vals[3];\r\n                }\r\n                else if (vals = getHsla(string)) {\r\n                    return vals[3];\r\n                }\r\n                else if (vals = getHwb(string)) {\r\n                    return vals[3];\r\n                }\r\n            }\r\n\r\n            // generators\r\n            function hexString(rgb) {\r\n                return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n                    + hexDouble(rgb[2]);\r\n            }\r\n\r\n            function rgbString(rgba, alpha) {\r\n                if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n                    return rgbaString(rgba, alpha);\r\n                }\r\n                return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n            }\r\n\r\n            function rgbaString(rgba, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n                }\r\n                return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n                    + \", \" + alpha + \")\";\r\n            }\r\n\r\n            function percentString(rgba, alpha) {\r\n                if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n                    return percentaString(rgba, alpha);\r\n                }\r\n                var r = Math.round(rgba[0] / 255 * 100),\r\n                    g = Math.round(rgba[1] / 255 * 100),\r\n                    b = Math.round(rgba[2] / 255 * 100);\r\n\r\n                return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n            }\r\n\r\n            function percentaString(rgba, alpha) {\r\n                var r = Math.round(rgba[0] / 255 * 100),\r\n                    g = Math.round(rgba[1] / 255 * 100),\r\n                    b = Math.round(rgba[2] / 255 * 100);\r\n                return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n            }\r\n\r\n            function hslString(hsla, alpha) {\r\n                if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n                    return hslaString(hsla, alpha);\r\n                }\r\n                return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n            }\r\n\r\n            function hslaString(hsla, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n                }\r\n                return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n                    + alpha + \")\";\r\n            }\r\n\r\n            // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n            // (hwb have alpha optional & 1 is default value)\r\n            function hwbString(hwb, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n                }\r\n                return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n                    + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n            }\r\n\r\n            function keyword(rgb) {\r\n                return reverseNames[rgb.slice(0, 3)];\r\n            }\r\n\r\n            // helpers\r\n            function scale(num, min, max) {\r\n                return Math.min(Math.max(min, num), max);\r\n            }\r\n\r\n            function hexDouble(num) {\r\n                var str = num.toString(16).toUpperCase();\r\n                return (str.length < 2) ? \"0\" + str : str;\r\n            }\r\n\r\n\r\n            //create a list of reverse color names\r\n            var reverseNames = {};\r\n            for (var name in colorNames) {\r\n                reverseNames[colorNames[name]] = name;\r\n            }\r\n\r\n        }, { \"5\": 5 }], 2: [function(require, module, exports) {\r\n            /* MIT license */\r\n            var convert = require(4);\r\n            var string = require(1);\r\n\r\n            var Color = function(obj) {\r\n                if (obj instanceof Color) {\r\n                    return obj;\r\n                }\r\n                if (!(this instanceof Color)) {\r\n                    return new Color(obj);\r\n                }\r\n\r\n                this.valid = false;\r\n                this.values = {\r\n                    rgb: [0, 0, 0],\r\n                    hsl: [0, 0, 0],\r\n                    hsv: [0, 0, 0],\r\n                    hwb: [0, 0, 0],\r\n                    cmyk: [0, 0, 0, 0],\r\n                    alpha: 1\r\n                };\r\n\r\n                // parse Color() argument\r\n                var vals;\r\n                if (typeof obj === 'string') {\r\n                    vals = string.getRgba(obj);\r\n                    if (vals) {\r\n                        this.setValues('rgb', vals);\r\n                    } else if (vals = string.getHsla(obj)) {\r\n                        this.setValues('hsl', vals);\r\n                    } else if (vals = string.getHwb(obj)) {\r\n                        this.setValues('hwb', vals);\r\n                    }\r\n                } else if (typeof obj === 'object') {\r\n                    vals = obj;\r\n                    if (vals.r !== undefined || vals.red !== undefined) {\r\n                        this.setValues('rgb', vals);\r\n                    } else if (vals.l !== undefined || vals.lightness !== undefined) {\r\n                        this.setValues('hsl', vals);\r\n                    } else if (vals.v !== undefined || vals.value !== undefined) {\r\n                        this.setValues('hsv', vals);\r\n                    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\r\n                        this.setValues('hwb', vals);\r\n                    } else if (vals.c !== undefined || vals.cyan !== undefined) {\r\n                        this.setValues('cmyk', vals);\r\n                    }\r\n                }\r\n            };\r\n\r\n            Color.prototype = {\r\n                isValid: function() {\r\n                    return this.valid;\r\n                },\r\n                rgb: function() {\r\n                    return this.setSpace('rgb', arguments);\r\n                },\r\n                hsl: function() {\r\n                    return this.setSpace('hsl', arguments);\r\n                },\r\n                hsv: function() {\r\n                    return this.setSpace('hsv', arguments);\r\n                },\r\n                hwb: function() {\r\n                    return this.setSpace('hwb', arguments);\r\n                },\r\n                cmyk: function() {\r\n                    return this.setSpace('cmyk', arguments);\r\n                },\r\n\r\n                rgbArray: function() {\r\n                    return this.values.rgb;\r\n                },\r\n                hslArray: function() {\r\n                    return this.values.hsl;\r\n                },\r\n                hsvArray: function() {\r\n                    return this.values.hsv;\r\n                },\r\n                hwbArray: function() {\r\n                    var values = this.values;\r\n                    if (values.alpha !== 1) {\r\n                        return values.hwb.concat([values.alpha]);\r\n                    }\r\n                    return values.hwb;\r\n                },\r\n                cmykArray: function() {\r\n                    return this.values.cmyk;\r\n                },\r\n                rgbaArray: function() {\r\n                    var values = this.values;\r\n                    return values.rgb.concat([values.alpha]);\r\n                },\r\n                hslaArray: function() {\r\n                    var values = this.values;\r\n                    return values.hsl.concat([values.alpha]);\r\n                },\r\n                alpha: function(val) {\r\n                    if (val === undefined) {\r\n                        return this.values.alpha;\r\n                    }\r\n                    this.setValues('alpha', val);\r\n                    return this;\r\n                },\r\n\r\n                red: function(val) {\r\n                    return this.setChannel('rgb', 0, val);\r\n                },\r\n                green: function(val) {\r\n                    return this.setChannel('rgb', 1, val);\r\n                },\r\n                blue: function(val) {\r\n                    return this.setChannel('rgb', 2, val);\r\n                },\r\n                hue: function(val) {\r\n                    if (val) {\r\n                        val %= 360;\r\n                        val = val < 0 ? 360 + val : val;\r\n                    }\r\n                    return this.setChannel('hsl', 0, val);\r\n                },\r\n                saturation: function(val) {\r\n                    return this.setChannel('hsl', 1, val);\r\n                },\r\n                lightness: function(val) {\r\n                    return this.setChannel('hsl', 2, val);\r\n                },\r\n                saturationv: function(val) {\r\n                    return this.setChannel('hsv', 1, val);\r\n                },\r\n                whiteness: function(val) {\r\n                    return this.setChannel('hwb', 1, val);\r\n                },\r\n                blackness: function(val) {\r\n                    return this.setChannel('hwb', 2, val);\r\n                },\r\n                value: function(val) {\r\n                    return this.setChannel('hsv', 2, val);\r\n                },\r\n                cyan: function(val) {\r\n                    return this.setChannel('cmyk', 0, val);\r\n                },\r\n                magenta: function(val) {\r\n                    return this.setChannel('cmyk', 1, val);\r\n                },\r\n                yellow: function(val) {\r\n                    return this.setChannel('cmyk', 2, val);\r\n                },\r\n                black: function(val) {\r\n                    return this.setChannel('cmyk', 3, val);\r\n                },\r\n\r\n                hexString: function() {\r\n                    return string.hexString(this.values.rgb);\r\n                },\r\n                rgbString: function() {\r\n                    return string.rgbString(this.values.rgb, this.values.alpha);\r\n                },\r\n                rgbaString: function() {\r\n                    return string.rgbaString(this.values.rgb, this.values.alpha);\r\n                },\r\n                percentString: function() {\r\n                    return string.percentString(this.values.rgb, this.values.alpha);\r\n                },\r\n                hslString: function() {\r\n                    return string.hslString(this.values.hsl, this.values.alpha);\r\n                },\r\n                hslaString: function() {\r\n                    return string.hslaString(this.values.hsl, this.values.alpha);\r\n                },\r\n                hwbString: function() {\r\n                    return string.hwbString(this.values.hwb, this.values.alpha);\r\n                },\r\n                keyword: function() {\r\n                    return string.keyword(this.values.rgb, this.values.alpha);\r\n                },\r\n\r\n                rgbNumber: function() {\r\n                    var rgb = this.values.rgb;\r\n                    return (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\r\n                },\r\n\r\n                luminosity: function() {\r\n                    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n                    var rgb = this.values.rgb;\r\n                    var lum = [];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        var chan = rgb[i] / 255;\r\n                        lum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\r\n                    }\r\n                    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n                },\r\n\r\n                contrast: function(color2) {\r\n                    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n                    var lum1 = this.luminosity();\r\n                    var lum2 = color2.luminosity();\r\n                    if (lum1 > lum2) {\r\n                        return (lum1 + 0.05) / (lum2 + 0.05);\r\n                    }\r\n                    return (lum2 + 0.05) / (lum1 + 0.05);\r\n                },\r\n\r\n                level: function(color2) {\r\n                    var contrastRatio = this.contrast(color2);\r\n                    if (contrastRatio >= 7.1) {\r\n                        return 'AAA';\r\n                    }\r\n\r\n                    return (contrastRatio >= 4.5) ? 'AA' : '';\r\n                },\r\n\r\n                dark: function() {\r\n                    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\r\n                    var rgb = this.values.rgb;\r\n                    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\r\n                    return yiq < 128;\r\n                },\r\n\r\n                light: function() {\r\n                    return !this.dark();\r\n                },\r\n\r\n                negate: function() {\r\n                    var rgb = [];\r\n                    for (var i = 0; i < 3; i++) {\r\n                        rgb[i] = 255 - this.values.rgb[i];\r\n                    }\r\n                    this.setValues('rgb', rgb);\r\n                    return this;\r\n                },\r\n\r\n                lighten: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[2] += hsl[2] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                darken: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[2] -= hsl[2] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                saturate: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[1] += hsl[1] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                desaturate: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[1] -= hsl[1] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                whiten: function(ratio) {\r\n                    var hwb = this.values.hwb;\r\n                    hwb[1] += hwb[1] * ratio;\r\n                    this.setValues('hwb', hwb);\r\n                    return this;\r\n                },\r\n\r\n                blacken: function(ratio) {\r\n                    var hwb = this.values.hwb;\r\n                    hwb[2] += hwb[2] * ratio;\r\n                    this.setValues('hwb', hwb);\r\n                    return this;\r\n                },\r\n\r\n                greyscale: function() {\r\n                    var rgb = this.values.rgb;\r\n                    // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\r\n                    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\r\n                    this.setValues('rgb', [val, val, val]);\r\n                    return this;\r\n                },\r\n\r\n                clearer: function(ratio) {\r\n                    var alpha = this.values.alpha;\r\n                    this.setValues('alpha', alpha - (alpha * ratio));\r\n                    return this;\r\n                },\r\n\r\n                opaquer: function(ratio) {\r\n                    var alpha = this.values.alpha;\r\n                    this.setValues('alpha', alpha + (alpha * ratio));\r\n                    return this;\r\n                },\r\n\r\n                rotate: function(degrees) {\r\n                    var hsl = this.values.hsl;\r\n                    var hue = (hsl[0] + degrees) % 360;\r\n                    hsl[0] = hue < 0 ? 360 + hue : hue;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                /**\r\n                 * Ported from sass implementation in C\r\n                 * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\r\n                 */\r\n                mix: function(mixinColor, weight) {\r\n                    var color1 = this;\r\n                    var color2 = mixinColor;\r\n                    var p = weight === undefined ? 0.5 : weight;\r\n\r\n                    var w = 2 * p - 1;\r\n                    var a = color1.alpha() - color2.alpha();\r\n\r\n                    var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n                    var w2 = 1 - w1;\r\n\r\n                    return this\r\n                        .rgb(\r\n                        w1 * color1.red() + w2 * color2.red(),\r\n                        w1 * color1.green() + w2 * color2.green(),\r\n                        w1 * color1.blue() + w2 * color2.blue()\r\n                        )\r\n                        .alpha(color1.alpha() * p + color2.alpha() * (1 - p));\r\n                },\r\n\r\n                toJSON: function() {\r\n                    return this.rgb();\r\n                },\r\n\r\n                clone: function() {\r\n                    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\r\n                    // making the final build way to big to embed in Chart.js. So let's do it manually,\r\n                    // assuming that values to clone are 1 dimension arrays containing only numbers,\r\n                    // except 'alpha' which is a number.\r\n                    var result = new Color();\r\n                    var source = this.values;\r\n                    var target = result.values;\r\n                    var value, type;\r\n\r\n                    for (var prop in source) {\r\n                        if (source.hasOwnProperty(prop)) {\r\n                            value = source[prop];\r\n                            type = ({}).toString.call(value);\r\n                            if (type === '[object Array]') {\r\n                                target[prop] = value.slice(0);\r\n                            } else if (type === '[object Number]') {\r\n                                target[prop] = value;\r\n                            } else {\r\n                                console.error('unexpected color value:', value);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return result;\r\n                }\r\n            };\r\n\r\n            Color.prototype.spaces = {\r\n                rgb: ['red', 'green', 'blue'],\r\n                hsl: ['hue', 'saturation', 'lightness'],\r\n                hsv: ['hue', 'saturation', 'value'],\r\n                hwb: ['hue', 'whiteness', 'blackness'],\r\n                cmyk: ['cyan', 'magenta', 'yellow', 'black']\r\n            };\r\n\r\n            Color.prototype.maxes = {\r\n                rgb: [255, 255, 255],\r\n                hsl: [360, 100, 100],\r\n                hsv: [360, 100, 100],\r\n                hwb: [360, 100, 100],\r\n                cmyk: [100, 100, 100, 100]\r\n            };\r\n\r\n            Color.prototype.getValues = function(space) {\r\n                var values = this.values;\r\n                var vals = {};\r\n\r\n                for (var i = 0; i < space.length; i++) {\r\n                    vals[space.charAt(i)] = values[space][i];\r\n                }\r\n\r\n                if (values.alpha !== 1) {\r\n                    vals.a = values.alpha;\r\n                }\r\n\r\n                // {r: 255, g: 255, b: 255, a: 0.4}\r\n                return vals;\r\n            };\r\n\r\n            Color.prototype.setValues = function(space, vals) {\r\n                var values = this.values;\r\n                var spaces = this.spaces;\r\n                var maxes = this.maxes;\r\n                var alpha = 1;\r\n                var i;\r\n\r\n                this.valid = true;\r\n\r\n                if (space === 'alpha') {\r\n                    alpha = vals;\r\n                } else if (vals.length) {\r\n                    // [10, 10, 10]\r\n                    values[space] = vals.slice(0, space.length);\r\n                    alpha = vals[space.length];\r\n                } else if (vals[space.charAt(0)] !== undefined) {\r\n                    // {r: 10, g: 10, b: 10}\r\n                    for (i = 0; i < space.length; i++) {\r\n                        values[space][i] = vals[space.charAt(i)];\r\n                    }\r\n\r\n                    alpha = vals.a;\r\n                } else if (vals[spaces[space][0]] !== undefined) {\r\n                    // {red: 10, green: 10, blue: 10}\r\n                    var chans = spaces[space];\r\n\r\n                    for (i = 0; i < space.length; i++) {\r\n                        values[space][i] = vals[chans[i]];\r\n                    }\r\n\r\n                    alpha = vals.alpha;\r\n                }\r\n\r\n                values.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\r\n\r\n                if (space === 'alpha') {\r\n                    return false;\r\n                }\r\n\r\n                var capped;\r\n\r\n                // cap values of the space prior converting all values\r\n                for (i = 0; i < space.length; i++) {\r\n                    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\r\n                    values[space][i] = Math.round(capped);\r\n                }\r\n\r\n                // convert to all the other color spaces\r\n                for (var sname in spaces) {\r\n                    if (sname !== space) {\r\n                        values[sname] = convert[space][sname](values[space]);\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            };\r\n\r\n            Color.prototype.setSpace = function(space, args) {\r\n                var vals = args[0];\r\n\r\n                if (vals === undefined) {\r\n                    // color.rgb()\r\n                    return this.getValues(space);\r\n                }\r\n\r\n                // color.rgb(10, 10, 10)\r\n                if (typeof vals === 'number') {\r\n                    vals = Array.prototype.slice.call(args);\r\n                }\r\n\r\n                this.setValues(space, vals);\r\n                return this;\r\n            };\r\n\r\n            Color.prototype.setChannel = function(space, index, val) {\r\n                var svalues = this.values[space];\r\n                if (val === undefined) {\r\n                    // color.red()\r\n                    return svalues[index];\r\n                } else if (val === svalues[index]) {\r\n                    // color.red(color.red())\r\n                    return this;\r\n                }\r\n\r\n                // color.red(100)\r\n                svalues[index] = val;\r\n                this.setValues(space, svalues);\r\n\r\n                return this;\r\n            };\r\n\r\n            if (typeof window !== 'undefined') {\r\n                window.Color = Color;\r\n            }\r\n\r\n            module.exports = Color;\r\n\r\n        }, { \"1\": 1, \"4\": 4 }], 3: [function(require, module, exports) {\r\n            /* MIT license */\r\n\r\n            module.exports = {\r\n                rgb2hsl: rgb2hsl,\r\n                rgb2hsv: rgb2hsv,\r\n                rgb2hwb: rgb2hwb,\r\n                rgb2cmyk: rgb2cmyk,\r\n                rgb2keyword: rgb2keyword,\r\n                rgb2xyz: rgb2xyz,\r\n                rgb2lab: rgb2lab,\r\n                rgb2lch: rgb2lch,\r\n\r\n                hsl2rgb: hsl2rgb,\r\n                hsl2hsv: hsl2hsv,\r\n                hsl2hwb: hsl2hwb,\r\n                hsl2cmyk: hsl2cmyk,\r\n                hsl2keyword: hsl2keyword,\r\n\r\n                hsv2rgb: hsv2rgb,\r\n                hsv2hsl: hsv2hsl,\r\n                hsv2hwb: hsv2hwb,\r\n                hsv2cmyk: hsv2cmyk,\r\n                hsv2keyword: hsv2keyword,\r\n\r\n                hwb2rgb: hwb2rgb,\r\n                hwb2hsl: hwb2hsl,\r\n                hwb2hsv: hwb2hsv,\r\n                hwb2cmyk: hwb2cmyk,\r\n                hwb2keyword: hwb2keyword,\r\n\r\n                cmyk2rgb: cmyk2rgb,\r\n                cmyk2hsl: cmyk2hsl,\r\n                cmyk2hsv: cmyk2hsv,\r\n                cmyk2hwb: cmyk2hwb,\r\n                cmyk2keyword: cmyk2keyword,\r\n\r\n                keyword2rgb: keyword2rgb,\r\n                keyword2hsl: keyword2hsl,\r\n                keyword2hsv: keyword2hsv,\r\n                keyword2hwb: keyword2hwb,\r\n                keyword2cmyk: keyword2cmyk,\r\n                keyword2lab: keyword2lab,\r\n                keyword2xyz: keyword2xyz,\r\n\r\n                xyz2rgb: xyz2rgb,\r\n                xyz2lab: xyz2lab,\r\n                xyz2lch: xyz2lch,\r\n\r\n                lab2xyz: lab2xyz,\r\n                lab2rgb: lab2rgb,\r\n                lab2lch: lab2lch,\r\n\r\n                lch2lab: lch2lab,\r\n                lch2xyz: lch2xyz,\r\n                lch2rgb: lch2rgb\r\n            }\r\n\r\n\r\n            function rgb2hsl(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255,\r\n                    min = Math.min(r, g, b),\r\n                    max = Math.max(r, g, b),\r\n                    delta = max - min,\r\n                    h, s, l;\r\n\r\n                if (max == min)\r\n                    h = 0;\r\n                else if (r == max)\r\n                    h = (g - b) / delta;\r\n                else if (g == max)\r\n                    h = 2 + (b - r) / delta;\r\n                else if (b == max)\r\n                    h = 4 + (r - g) / delta;\r\n\r\n                h = Math.min(h * 60, 360);\r\n\r\n                if (h < 0)\r\n                    h += 360;\r\n\r\n                l = (min + max) / 2;\r\n\r\n                if (max == min)\r\n                    s = 0;\r\n                else if (l <= 0.5)\r\n                    s = delta / (max + min);\r\n                else\r\n                    s = delta / (2 - max - min);\r\n\r\n                return [h, s * 100, l * 100];\r\n            }\r\n\r\n            function rgb2hsv(rgb) {\r\n                var r = rgb[0],\r\n                    g = rgb[1],\r\n                    b = rgb[2],\r\n                    min = Math.min(r, g, b),\r\n                    max = Math.max(r, g, b),\r\n                    delta = max - min,\r\n                    h, s, v;\r\n\r\n                if (max == 0)\r\n                    s = 0;\r\n                else\r\n                    s = (delta / max * 1000) / 10;\r\n\r\n                if (max == min)\r\n                    h = 0;\r\n                else if (r == max)\r\n                    h = (g - b) / delta;\r\n                else if (g == max)\r\n                    h = 2 + (b - r) / delta;\r\n                else if (b == max)\r\n                    h = 4 + (r - g) / delta;\r\n\r\n                h = Math.min(h * 60, 360);\r\n\r\n                if (h < 0)\r\n                    h += 360;\r\n\r\n                v = ((max / 255) * 1000) / 10;\r\n\r\n                return [h, s, v];\r\n            }\r\n\r\n            function rgb2hwb(rgb) {\r\n                var r = rgb[0],\r\n                    g = rgb[1],\r\n                    b = rgb[2],\r\n                    h = rgb2hsl(rgb)[0],\r\n                    w = 1 / 255 * Math.min(r, Math.min(g, b)),\r\n                    b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\r\n\r\n                return [h, w * 100, b * 100];\r\n            }\r\n\r\n            function rgb2cmyk(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255,\r\n                    c, m, y, k;\r\n\r\n                k = Math.min(1 - r, 1 - g, 1 - b);\r\n                c = (1 - r - k) / (1 - k) || 0;\r\n                m = (1 - g - k) / (1 - k) || 0;\r\n                y = (1 - b - k) / (1 - k) || 0;\r\n                return [c * 100, m * 100, y * 100, k * 100];\r\n            }\r\n\r\n            function rgb2keyword(rgb) {\r\n                return reverseKeywords[JSON.stringify(rgb)];\r\n            }\r\n\r\n            function rgb2xyz(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255;\r\n\r\n                // assume sRGB\r\n                r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\r\n                g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\r\n                b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\r\n\r\n                var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\r\n                var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\r\n                var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\r\n\r\n                return [x * 100, y * 100, z * 100];\r\n            }\r\n\r\n            function rgb2lab(rgb) {\r\n                var xyz = rgb2xyz(rgb),\r\n                    x = xyz[0],\r\n                    y = xyz[1],\r\n                    z = xyz[2],\r\n                    l, a, b;\r\n\r\n                x /= 95.047;\r\n                y /= 100;\r\n                z /= 108.883;\r\n\r\n                x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\r\n                y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\r\n                z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\r\n\r\n                l = (116 * y) - 16;\r\n                a = 500 * (x - y);\r\n                b = 200 * (y - z);\r\n\r\n                return [l, a, b];\r\n            }\r\n\r\n            function rgb2lch(args) {\r\n                return lab2lch(rgb2lab(args));\r\n            }\r\n\r\n            function hsl2rgb(hsl) {\r\n                var h = hsl[0] / 360,\r\n                    s = hsl[1] / 100,\r\n                    l = hsl[2] / 100,\r\n                    t1, t2, t3, rgb, val;\r\n\r\n                if (s == 0) {\r\n                    val = l * 255;\r\n                    return [val, val, val];\r\n                }\r\n\r\n                if (l < 0.5)\r\n                    t2 = l * (1 + s);\r\n                else\r\n                    t2 = l + s - l * s;\r\n                t1 = 2 * l - t2;\r\n\r\n                rgb = [0, 0, 0];\r\n                for (var i = 0; i < 3; i++) {\r\n                    t3 = h + 1 / 3 * - (i - 1);\r\n                    t3 < 0 && t3++;\r\n                    t3 > 1 && t3--;\r\n\r\n                    if (6 * t3 < 1)\r\n                        val = t1 + (t2 - t1) * 6 * t3;\r\n                    else if (2 * t3 < 1)\r\n                        val = t2;\r\n                    else if (3 * t3 < 2)\r\n                        val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\r\n                    else\r\n                        val = t1;\r\n\r\n                    rgb[i] = val * 255;\r\n                }\r\n\r\n                return rgb;\r\n            }\r\n\r\n            function hsl2hsv(hsl) {\r\n                var h = hsl[0],\r\n                    s = hsl[1] / 100,\r\n                    l = hsl[2] / 100,\r\n                    sv, v;\r\n\r\n                if (l === 0) {\r\n                    // no need to do calc on black\r\n                    // also avoids divide by 0 error\r\n                    return [0, 0, 0];\r\n                }\r\n\r\n                l *= 2;\r\n                s *= (l <= 1) ? l : 2 - l;\r\n                v = (l + s) / 2;\r\n                sv = (2 * s) / (l + s);\r\n                return [h, sv * 100, v * 100];\r\n            }\r\n\r\n            function hsl2hwb(args) {\r\n                return rgb2hwb(hsl2rgb(args));\r\n            }\r\n\r\n            function hsl2cmyk(args) {\r\n                return rgb2cmyk(hsl2rgb(args));\r\n            }\r\n\r\n            function hsl2keyword(args) {\r\n                return rgb2keyword(hsl2rgb(args));\r\n            }\r\n\r\n\r\n            function hsv2rgb(hsv) {\r\n                var h = hsv[0] / 60,\r\n                    s = hsv[1] / 100,\r\n                    v = hsv[2] / 100,\r\n                    hi = Math.floor(h) % 6;\r\n\r\n                var f = h - Math.floor(h),\r\n                    p = 255 * v * (1 - s),\r\n                    q = 255 * v * (1 - (s * f)),\r\n                    t = 255 * v * (1 - (s * (1 - f))),\r\n                    v = 255 * v;\r\n\r\n                switch (hi) {\r\n                    case 0:\r\n                        return [v, t, p];\r\n                    case 1:\r\n                        return [q, v, p];\r\n                    case 2:\r\n                        return [p, v, t];\r\n                    case 3:\r\n                        return [p, q, v];\r\n                    case 4:\r\n                        return [t, p, v];\r\n                    case 5:\r\n                        return [v, p, q];\r\n                }\r\n            }\r\n\r\n            function hsv2hsl(hsv) {\r\n                var h = hsv[0],\r\n                    s = hsv[1] / 100,\r\n                    v = hsv[2] / 100,\r\n                    sl, l;\r\n\r\n                l = (2 - s) * v;\r\n                sl = s * v;\r\n                sl /= (l <= 1) ? l : 2 - l;\r\n                sl = sl || 0;\r\n                l /= 2;\r\n                return [h, sl * 100, l * 100];\r\n            }\r\n\r\n            function hsv2hwb(args) {\r\n                return rgb2hwb(hsv2rgb(args))\r\n            }\r\n\r\n            function hsv2cmyk(args) {\r\n                return rgb2cmyk(hsv2rgb(args));\r\n            }\r\n\r\n            function hsv2keyword(args) {\r\n                return rgb2keyword(hsv2rgb(args));\r\n            }\r\n\r\n            // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\r\n            function hwb2rgb(hwb) {\r\n                var h = hwb[0] / 360,\r\n                    wh = hwb[1] / 100,\r\n                    bl = hwb[2] / 100,\r\n                    ratio = wh + bl,\r\n                    i, v, f, n;\r\n\r\n                // wh + bl cant be > 1\r\n                if (ratio > 1) {\r\n                    wh /= ratio;\r\n                    bl /= ratio;\r\n                }\r\n\r\n                i = Math.floor(6 * h);\r\n                v = 1 - bl;\r\n                f = 6 * h - i;\r\n                if ((i & 0x01) != 0) {\r\n                    f = 1 - f;\r\n                }\r\n                n = wh + f * (v - wh);  // linear interpolation\r\n\r\n                switch (i) {\r\n                    default:\r\n                    case 6:\r\n                    case 0: r = v; g = n; b = wh; break;\r\n                    case 1: r = n; g = v; b = wh; break;\r\n                    case 2: r = wh; g = v; b = n; break;\r\n                    case 3: r = wh; g = n; b = v; break;\r\n                    case 4: r = n; g = wh; b = v; break;\r\n                    case 5: r = v; g = wh; b = n; break;\r\n                }\r\n\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function hwb2hsl(args) {\r\n                return rgb2hsl(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2hsv(args) {\r\n                return rgb2hsv(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2cmyk(args) {\r\n                return rgb2cmyk(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2keyword(args) {\r\n                return rgb2keyword(hwb2rgb(args));\r\n            }\r\n\r\n            function cmyk2rgb(cmyk) {\r\n                var c = cmyk[0] / 100,\r\n                    m = cmyk[1] / 100,\r\n                    y = cmyk[2] / 100,\r\n                    k = cmyk[3] / 100,\r\n                    r, g, b;\r\n\r\n                r = 1 - Math.min(1, c * (1 - k) + k);\r\n                g = 1 - Math.min(1, m * (1 - k) + k);\r\n                b = 1 - Math.min(1, y * (1 - k) + k);\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function cmyk2hsl(args) {\r\n                return rgb2hsl(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2hsv(args) {\r\n                return rgb2hsv(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2hwb(args) {\r\n                return rgb2hwb(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2keyword(args) {\r\n                return rgb2keyword(cmyk2rgb(args));\r\n            }\r\n\r\n\r\n            function xyz2rgb(xyz) {\r\n                var x = xyz[0] / 100,\r\n                    y = xyz[1] / 100,\r\n                    z = xyz[2] / 100,\r\n                    r, g, b;\r\n\r\n                r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\r\n                g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\r\n                b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\r\n\r\n                // assume sRGB\r\n                r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\r\n                    : r = (r * 12.92);\r\n\r\n                g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\r\n                    : g = (g * 12.92);\r\n\r\n                b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\r\n                    : b = (b * 12.92);\r\n\r\n                r = Math.min(Math.max(0, r), 1);\r\n                g = Math.min(Math.max(0, g), 1);\r\n                b = Math.min(Math.max(0, b), 1);\r\n\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function xyz2lab(xyz) {\r\n                var x = xyz[0],\r\n                    y = xyz[1],\r\n                    z = xyz[2],\r\n                    l, a, b;\r\n\r\n                x /= 95.047;\r\n                y /= 100;\r\n                z /= 108.883;\r\n\r\n                x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\r\n                y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\r\n                z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\r\n\r\n                l = (116 * y) - 16;\r\n                a = 500 * (x - y);\r\n                b = 200 * (y - z);\r\n\r\n                return [l, a, b];\r\n            }\r\n\r\n            function xyz2lch(args) {\r\n                return lab2lch(xyz2lab(args));\r\n            }\r\n\r\n            function lab2xyz(lab) {\r\n                var l = lab[0],\r\n                    a = lab[1],\r\n                    b = lab[2],\r\n                    x, y, z, y2;\r\n\r\n                if (l <= 8) {\r\n                    y = (l * 100) / 903.3;\r\n                    y2 = (7.787 * (y / 100)) + (16 / 116);\r\n                } else {\r\n                    y = 100 * Math.pow((l + 16) / 116, 3);\r\n                    y2 = Math.pow(y / 100, 1 / 3);\r\n                }\r\n\r\n                x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\r\n\r\n                z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\r\n\r\n                return [x, y, z];\r\n            }\r\n\r\n            function lab2lch(lab) {\r\n                var l = lab[0],\r\n                    a = lab[1],\r\n                    b = lab[2],\r\n                    hr, h, c;\r\n\r\n                hr = Math.atan2(b, a);\r\n                h = hr * 360 / 2 / Math.PI;\r\n                if (h < 0) {\r\n                    h += 360;\r\n                }\r\n                c = Math.sqrt(a * a + b * b);\r\n                return [l, c, h];\r\n            }\r\n\r\n            function lab2rgb(args) {\r\n                return xyz2rgb(lab2xyz(args));\r\n            }\r\n\r\n            function lch2lab(lch) {\r\n                var l = lch[0],\r\n                    c = lch[1],\r\n                    h = lch[2],\r\n                    a, b, hr;\r\n\r\n                hr = h / 360 * 2 * Math.PI;\r\n                a = c * Math.cos(hr);\r\n                b = c * Math.sin(hr);\r\n                return [l, a, b];\r\n            }\r\n\r\n            function lch2xyz(args) {\r\n                return lab2xyz(lch2lab(args));\r\n            }\r\n\r\n            function lch2rgb(args) {\r\n                return lab2rgb(lch2lab(args));\r\n            }\r\n\r\n            function keyword2rgb(keyword) {\r\n                return cssKeywords[keyword];\r\n            }\r\n\r\n            function keyword2hsl(args) {\r\n                return rgb2hsl(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2hsv(args) {\r\n                return rgb2hsv(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2hwb(args) {\r\n                return rgb2hwb(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2cmyk(args) {\r\n                return rgb2cmyk(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2lab(args) {\r\n                return rgb2lab(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2xyz(args) {\r\n                return rgb2xyz(keyword2rgb(args));\r\n            }\r\n\r\n            var cssKeywords = {\r\n                aliceblue: [240, 248, 255],\r\n                antiquewhite: [250, 235, 215],\r\n                aqua: [0, 255, 255],\r\n                aquamarine: [127, 255, 212],\r\n                azure: [240, 255, 255],\r\n                beige: [245, 245, 220],\r\n                bisque: [255, 228, 196],\r\n                black: [0, 0, 0],\r\n                blanchedalmond: [255, 235, 205],\r\n                blue: [0, 0, 255],\r\n                blueviolet: [138, 43, 226],\r\n                brown: [165, 42, 42],\r\n                burlywood: [222, 184, 135],\r\n                cadetblue: [95, 158, 160],\r\n                chartreuse: [127, 255, 0],\r\n                chocolate: [210, 105, 30],\r\n                coral: [255, 127, 80],\r\n                cornflowerblue: [100, 149, 237],\r\n                cornsilk: [255, 248, 220],\r\n                crimson: [220, 20, 60],\r\n                cyan: [0, 255, 255],\r\n                darkblue: [0, 0, 139],\r\n                darkcyan: [0, 139, 139],\r\n                darkgoldenrod: [184, 134, 11],\r\n                darkgray: [169, 169, 169],\r\n                darkgreen: [0, 100, 0],\r\n                darkgrey: [169, 169, 169],\r\n                darkkhaki: [189, 183, 107],\r\n                darkmagenta: [139, 0, 139],\r\n                darkolivegreen: [85, 107, 47],\r\n                darkorange: [255, 140, 0],\r\n                darkorchid: [153, 50, 204],\r\n                darkred: [139, 0, 0],\r\n                darksalmon: [233, 150, 122],\r\n                darkseagreen: [143, 188, 143],\r\n                darkslateblue: [72, 61, 139],\r\n                darkslategray: [47, 79, 79],\r\n                darkslategrey: [47, 79, 79],\r\n                darkturquoise: [0, 206, 209],\r\n                darkviolet: [148, 0, 211],\r\n                deeppink: [255, 20, 147],\r\n                deepskyblue: [0, 191, 255],\r\n                dimgray: [105, 105, 105],\r\n                dimgrey: [105, 105, 105],\r\n                dodgerblue: [30, 144, 255],\r\n                firebrick: [178, 34, 34],\r\n                floralwhite: [255, 250, 240],\r\n                forestgreen: [34, 139, 34],\r\n                fuchsia: [255, 0, 255],\r\n                gainsboro: [220, 220, 220],\r\n                ghostwhite: [248, 248, 255],\r\n                gold: [255, 215, 0],\r\n                goldenrod: [218, 165, 32],\r\n                gray: [128, 128, 128],\r\n                green: [0, 128, 0],\r\n                greenyellow: [173, 255, 47],\r\n                grey: [128, 128, 128],\r\n                honeydew: [240, 255, 240],\r\n                hotpink: [255, 105, 180],\r\n                indianred: [205, 92, 92],\r\n                indigo: [75, 0, 130],\r\n                ivory: [255, 255, 240],\r\n                khaki: [240, 230, 140],\r\n                lavender: [230, 230, 250],\r\n                lavenderblush: [255, 240, 245],\r\n                lawngreen: [124, 252, 0],\r\n                lemonchiffon: [255, 250, 205],\r\n                lightblue: [173, 216, 230],\r\n                lightcoral: [240, 128, 128],\r\n                lightcyan: [224, 255, 255],\r\n                lightgoldenrodyellow: [250, 250, 210],\r\n                lightgray: [211, 211, 211],\r\n                lightgreen: [144, 238, 144],\r\n                lightgrey: [211, 211, 211],\r\n                lightpink: [255, 182, 193],\r\n                lightsalmon: [255, 160, 122],\r\n                lightseagreen: [32, 178, 170],\r\n                lightskyblue: [135, 206, 250],\r\n                lightslategray: [119, 136, 153],\r\n                lightslategrey: [119, 136, 153],\r\n                lightsteelblue: [176, 196, 222],\r\n                lightyellow: [255, 255, 224],\r\n                lime: [0, 255, 0],\r\n                limegreen: [50, 205, 50],\r\n                linen: [250, 240, 230],\r\n                magenta: [255, 0, 255],\r\n                maroon: [128, 0, 0],\r\n                mediumaquamarine: [102, 205, 170],\r\n                mediumblue: [0, 0, 205],\r\n                mediumorchid: [186, 85, 211],\r\n                mediumpurple: [147, 112, 219],\r\n                mediumseagreen: [60, 179, 113],\r\n                mediumslateblue: [123, 104, 238],\r\n                mediumspringgreen: [0, 250, 154],\r\n                mediumturquoise: [72, 209, 204],\r\n                mediumvioletred: [199, 21, 133],\r\n                midnightblue: [25, 25, 112],\r\n                mintcream: [245, 255, 250],\r\n                mistyrose: [255, 228, 225],\r\n                moccasin: [255, 228, 181],\r\n                navajowhite: [255, 222, 173],\r\n                navy: [0, 0, 128],\r\n                oldlace: [253, 245, 230],\r\n                olive: [128, 128, 0],\r\n                olivedrab: [107, 142, 35],\r\n                orange: [255, 165, 0],\r\n                orangered: [255, 69, 0],\r\n                orchid: [218, 112, 214],\r\n                palegoldenrod: [238, 232, 170],\r\n                palegreen: [152, 251, 152],\r\n                paleturquoise: [175, 238, 238],\r\n                palevioletred: [219, 112, 147],\r\n                papayawhip: [255, 239, 213],\r\n                peachpuff: [255, 218, 185],\r\n                peru: [205, 133, 63],\r\n                pink: [255, 192, 203],\r\n                plum: [221, 160, 221],\r\n                powderblue: [176, 224, 230],\r\n                purple: [128, 0, 128],\r\n                rebeccapurple: [102, 51, 153],\r\n                red: [255, 0, 0],\r\n                rosybrown: [188, 143, 143],\r\n                royalblue: [65, 105, 225],\r\n                saddlebrown: [139, 69, 19],\r\n                salmon: [250, 128, 114],\r\n                sandybrown: [244, 164, 96],\r\n                seagreen: [46, 139, 87],\r\n                seashell: [255, 245, 238],\r\n                sienna: [160, 82, 45],\r\n                silver: [192, 192, 192],\r\n                skyblue: [135, 206, 235],\r\n                slateblue: [106, 90, 205],\r\n                slategray: [112, 128, 144],\r\n                slategrey: [112, 128, 144],\r\n                snow: [255, 250, 250],\r\n                springgreen: [0, 255, 127],\r\n                steelblue: [70, 130, 180],\r\n                tan: [210, 180, 140],\r\n                teal: [0, 128, 128],\r\n                thistle: [216, 191, 216],\r\n                tomato: [255, 99, 71],\r\n                turquoise: [64, 224, 208],\r\n                violet: [238, 130, 238],\r\n                wheat: [245, 222, 179],\r\n                white: [255, 255, 255],\r\n                whitesmoke: [245, 245, 245],\r\n                yellow: [255, 255, 0],\r\n                yellowgreen: [154, 205, 50]\r\n            };\r\n\r\n            var reverseKeywords = {};\r\n            for (var key in cssKeywords) {\r\n                reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\r\n            }\r\n\r\n        }, {}], 4: [function(require, module, exports) {\r\n            var conversions = require(3);\r\n\r\n            var convert = function() {\r\n                return new Converter();\r\n            }\r\n\r\n            for (var func in conversions) {\r\n                // export Raw versions\r\n                convert[func + \"Raw\"] = (function(func) {\r\n                    // accept array or plain args\r\n                    return function(arg) {\r\n                        if (typeof arg == \"number\")\r\n                            arg = Array.prototype.slice.call(arguments);\r\n                        return conversions[func](arg);\r\n                    }\r\n                })(func);\r\n\r\n                var pair = /(\\w+)2(\\w+)/.exec(func),\r\n                    from = pair[1],\r\n                    to = pair[2];\r\n\r\n                // export rgb2hsl and [\"rgb\"][\"hsl\"]\r\n                convert[from] = convert[from] || {};\r\n\r\n                convert[from][to] = convert[func] = (function(func) {\r\n                    return function(arg) {\r\n                        if (typeof arg == \"number\")\r\n                            arg = Array.prototype.slice.call(arguments);\r\n\r\n                        var val = conversions[func](arg);\r\n                        if (typeof val == \"string\" || val === undefined)\r\n                            return val; // keyword\r\n\r\n                        for (var i = 0; i < val.length; i++)\r\n                            val[i] = Math.round(val[i]);\r\n                        return val;\r\n                    }\r\n                })(func);\r\n            }\r\n\r\n\r\n            /* Converter does lazy conversion and caching */\r\n            var Converter = function() {\r\n                this.convs = {};\r\n            };\r\n\r\n            /* Either get the values for a space or\r\n              set the values for a space, depending on args */\r\n            Converter.prototype.routeSpace = function(space, args) {\r\n                var values = args[0];\r\n                if (values === undefined) {\r\n                    // color.rgb()\r\n                    return this.getValues(space);\r\n                }\r\n                // color.rgb(10, 10, 10)\r\n                if (typeof values == \"number\") {\r\n                    values = Array.prototype.slice.call(args);\r\n                }\r\n\r\n                return this.setValues(space, values);\r\n            };\r\n\r\n            /* Set the values for a space, invalidating cache */\r\n            Converter.prototype.setValues = function(space, values) {\r\n                this.space = space;\r\n                this.convs = {};\r\n                this.convs[space] = values;\r\n                return this;\r\n            };\r\n\r\n            /* Get the values for a space. If there's already\r\n              a conversion for the space, fetch it, otherwise\r\n              compute it */\r\n            Converter.prototype.getValues = function(space) {\r\n                var vals = this.convs[space];\r\n                if (!vals) {\r\n                    var fspace = this.space,\r\n                        from = this.convs[fspace];\r\n                    vals = convert[fspace][space](from);\r\n\r\n                    this.convs[space] = vals;\r\n                }\r\n                return vals;\r\n            };\r\n\r\n            [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\r\n                Converter.prototype[space] = function(vals) {\r\n                    return this.routeSpace(space, arguments);\r\n                }\r\n            });\r\n\r\n            module.exports = convert;\r\n        }, { \"3\": 3 }], 5: [function(require, module, exports) {\r\n            'use strict'\r\n\r\n            module.exports = {\r\n                \"aliceblue\": [240, 248, 255],\r\n                \"antiquewhite\": [250, 235, 215],\r\n                \"aqua\": [0, 255, 255],\r\n                \"aquamarine\": [127, 255, 212],\r\n                \"azure\": [240, 255, 255],\r\n                \"beige\": [245, 245, 220],\r\n                \"bisque\": [255, 228, 196],\r\n                \"black\": [0, 0, 0],\r\n                \"blanchedalmond\": [255, 235, 205],\r\n                \"blue\": [0, 0, 255],\r\n                \"blueviolet\": [138, 43, 226],\r\n                \"brown\": [165, 42, 42],\r\n                \"burlywood\": [222, 184, 135],\r\n                \"cadetblue\": [95, 158, 160],\r\n                \"chartreuse\": [127, 255, 0],\r\n                \"chocolate\": [210, 105, 30],\r\n                \"coral\": [255, 127, 80],\r\n                \"cornflowerblue\": [100, 149, 237],\r\n                \"cornsilk\": [255, 248, 220],\r\n                \"crimson\": [220, 20, 60],\r\n                \"cyan\": [0, 255, 255],\r\n                \"darkblue\": [0, 0, 139],\r\n                \"darkcyan\": [0, 139, 139],\r\n                \"darkgoldenrod\": [184, 134, 11],\r\n                \"darkgray\": [169, 169, 169],\r\n                \"darkgreen\": [0, 100, 0],\r\n                \"darkgrey\": [169, 169, 169],\r\n                \"darkkhaki\": [189, 183, 107],\r\n                \"darkmagenta\": [139, 0, 139],\r\n                \"darkolivegreen\": [85, 107, 47],\r\n                \"darkorange\": [255, 140, 0],\r\n                \"darkorchid\": [153, 50, 204],\r\n                \"darkred\": [139, 0, 0],\r\n                \"darksalmon\": [233, 150, 122],\r\n                \"darkseagreen\": [143, 188, 143],\r\n                \"darkslateblue\": [72, 61, 139],\r\n                \"darkslategray\": [47, 79, 79],\r\n                \"darkslategrey\": [47, 79, 79],\r\n                \"darkturquoise\": [0, 206, 209],\r\n                \"darkviolet\": [148, 0, 211],\r\n                \"deeppink\": [255, 20, 147],\r\n                \"deepskyblue\": [0, 191, 255],\r\n                \"dimgray\": [105, 105, 105],\r\n                \"dimgrey\": [105, 105, 105],\r\n                \"dodgerblue\": [30, 144, 255],\r\n                \"firebrick\": [178, 34, 34],\r\n                \"floralwhite\": [255, 250, 240],\r\n                \"forestgreen\": [34, 139, 34],\r\n                \"fuchsia\": [255, 0, 255],\r\n                \"gainsboro\": [220, 220, 220],\r\n                \"ghostwhite\": [248, 248, 255],\r\n                \"gold\": [255, 215, 0],\r\n                \"goldenrod\": [218, 165, 32],\r\n                \"gray\": [128, 128, 128],\r\n                \"green\": [0, 128, 0],\r\n                \"greenyellow\": [173, 255, 47],\r\n                \"grey\": [128, 128, 128],\r\n                \"honeydew\": [240, 255, 240],\r\n                \"hotpink\": [255, 105, 180],\r\n                \"indianred\": [205, 92, 92],\r\n                \"indigo\": [75, 0, 130],\r\n                \"ivory\": [255, 255, 240],\r\n                \"khaki\": [240, 230, 140],\r\n                \"lavender\": [230, 230, 250],\r\n                \"lavenderblush\": [255, 240, 245],\r\n                \"lawngreen\": [124, 252, 0],\r\n                \"lemonchiffon\": [255, 250, 205],\r\n                \"lightblue\": [173, 216, 230],\r\n                \"lightcoral\": [240, 128, 128],\r\n                \"lightcyan\": [224, 255, 255],\r\n                \"lightgoldenrodyellow\": [250, 250, 210],\r\n                \"lightgray\": [211, 211, 211],\r\n                \"lightgreen\": [144, 238, 144],\r\n                \"lightgrey\": [211, 211, 211],\r\n                \"lightpink\": [255, 182, 193],\r\n                \"lightsalmon\": [255, 160, 122],\r\n                \"lightseagreen\": [32, 178, 170],\r\n                \"lightskyblue\": [135, 206, 250],\r\n                \"lightslategray\": [119, 136, 153],\r\n                \"lightslategrey\": [119, 136, 153],\r\n                \"lightsteelblue\": [176, 196, 222],\r\n                \"lightyellow\": [255, 255, 224],\r\n                \"lime\": [0, 255, 0],\r\n                \"limegreen\": [50, 205, 50],\r\n                \"linen\": [250, 240, 230],\r\n                \"magenta\": [255, 0, 255],\r\n                \"maroon\": [128, 0, 0],\r\n                \"mediumaquamarine\": [102, 205, 170],\r\n                \"mediumblue\": [0, 0, 205],\r\n                \"mediumorchid\": [186, 85, 211],\r\n                \"mediumpurple\": [147, 112, 219],\r\n                \"mediumseagreen\": [60, 179, 113],\r\n                \"mediumslateblue\": [123, 104, 238],\r\n                \"mediumspringgreen\": [0, 250, 154],\r\n                \"mediumturquoise\": [72, 209, 204],\r\n                \"mediumvioletred\": [199, 21, 133],\r\n                \"midnightblue\": [25, 25, 112],\r\n                \"mintcream\": [245, 255, 250],\r\n                \"mistyrose\": [255, 228, 225],\r\n                \"moccasin\": [255, 228, 181],\r\n                \"navajowhite\": [255, 222, 173],\r\n                \"navy\": [0, 0, 128],\r\n                \"oldlace\": [253, 245, 230],\r\n                \"olive\": [128, 128, 0],\r\n                \"olivedrab\": [107, 142, 35],\r\n                \"orange\": [255, 165, 0],\r\n                \"orangered\": [255, 69, 0],\r\n                \"orchid\": [218, 112, 214],\r\n                \"palegoldenrod\": [238, 232, 170],\r\n                \"palegreen\": [152, 251, 152],\r\n                \"paleturquoise\": [175, 238, 238],\r\n                \"palevioletred\": [219, 112, 147],\r\n                \"papayawhip\": [255, 239, 213],\r\n                \"peachpuff\": [255, 218, 185],\r\n                \"peru\": [205, 133, 63],\r\n                \"pink\": [255, 192, 203],\r\n                \"plum\": [221, 160, 221],\r\n                \"powderblue\": [176, 224, 230],\r\n                \"purple\": [128, 0, 128],\r\n                \"rebeccapurple\": [102, 51, 153],\r\n                \"red\": [255, 0, 0],\r\n                \"rosybrown\": [188, 143, 143],\r\n                \"royalblue\": [65, 105, 225],\r\n                \"saddlebrown\": [139, 69, 19],\r\n                \"salmon\": [250, 128, 114],\r\n                \"sandybrown\": [244, 164, 96],\r\n                \"seagreen\": [46, 139, 87],\r\n                \"seashell\": [255, 245, 238],\r\n                \"sienna\": [160, 82, 45],\r\n                \"silver\": [192, 192, 192],\r\n                \"skyblue\": [135, 206, 235],\r\n                \"slateblue\": [106, 90, 205],\r\n                \"slategray\": [112, 128, 144],\r\n                \"slategrey\": [112, 128, 144],\r\n                \"snow\": [255, 250, 250],\r\n                \"springgreen\": [0, 255, 127],\r\n                \"steelblue\": [70, 130, 180],\r\n                \"tan\": [210, 180, 140],\r\n                \"teal\": [0, 128, 128],\r\n                \"thistle\": [216, 191, 216],\r\n                \"tomato\": [255, 99, 71],\r\n                \"turquoise\": [64, 224, 208],\r\n                \"violet\": [238, 130, 238],\r\n                \"wheat\": [245, 222, 179],\r\n                \"white\": [255, 255, 255],\r\n                \"whitesmoke\": [245, 245, 245],\r\n                \"yellow\": [255, 255, 0],\r\n                \"yellowgreen\": [154, 205, 50]\r\n            };\r\n\r\n        }, {}], 6: [function(require, module, exports) {\r\n            /**\r\n             * @namespace Chart\r\n             */\r\n            var Chart = require(20)();\r\n\r\n            Chart.helpers = require(36);\r\n\r\n            // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\r\n            require(18)(Chart);\r\n\r\n            Chart.defaults = require(16);\r\n            Chart.Element = require(17);\r\n            Chart.elements = require(31);\r\n            Chart.Interaction = require(19);\r\n            Chart.layouts = require(21);\r\n            Chart.platform = require(39);\r\n            Chart.plugins = require(22);\r\n            Chart.Ticks = require(25);\r\n\r\n            require(13)(Chart);\r\n            require(14)(Chart);\r\n            require(15)(Chart);\r\n            require(24)(Chart);\r\n            require(23)(Chart);\r\n            require(26)(Chart);\r\n\r\n            require(46)(Chart);\r\n            require(44)(Chart);\r\n            require(45)(Chart);\r\n            // require('./scales/scale.logarithmic')(Chart);\r\n            // require('./scales/scale.radialLinear')(Chart);\r\n            // require('./scales/scale.time')(Chart);\r\n\r\n            // Controllers must be loaded after elements\r\n            // See Chart.core.datasetController.dataElementType\r\n            require(10)(Chart);\r\n            // require('./controllers/controller.bubble')(Chart);\r\n            require(11)(Chart);\r\n            require(12)(Chart);\r\n            // require('./controllers/controller.polarArea')(Chart);\r\n            // require('./controllers/controller.radar')(Chart);\r\n            // require('./controllers/controller.scatter')(Chart);\r\n\r\n            require(7)(Chart);\r\n            // require('./charts/Chart.Bubble')(Chart);\r\n            require(8)(Chart);\r\n            require(9)(Chart);\r\n            // require('./charts/Chart.PolarArea')(Chart);\r\n            // require('./charts/Chart.Radar')(Chart);\r\n            // require('./charts/Chart.Scatter')(Chart);\r\n\r\n            // Loading built-it plugins\r\n            var plugins = require(40);\r\n            for (var k in plugins) {\r\n                if (plugins.hasOwnProperty(k)) {\r\n                    Chart.plugins.register(plugins[k]);\r\n                }\r\n            }\r\n\r\n            Chart.platform.initialize();\r\n\r\n            module.exports = Chart;\r\n            if (typeof window !== 'undefined') {\r\n                window.Chart = Chart;\r\n            }\r\n\r\n        }, { \"10\": 10, \"11\": 11, \"12\": 12, \"13\": 13, \"14\": 14, \"15\": 15, \"16\": 16, \"17\": 17, \"18\": 18, \"19\": 19, \"20\": 20, \"21\": 21, \"22\": 22, \"23\": 23, \"24\": 24, \"25\": 25, \"26\": 26, \"31\": 31, \"36\": 36, \"39\": 39, \"40\": 40, \"44\": 44, \"45\": 45, \"46\": 46, \"7\": 7, \"8\": 8, \"9\": 9 }], 7: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                Chart.Bar = function(context, config) {\r\n                    config.type = 'bar';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n\r\n            };\r\n\r\n        }, {}], 8: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                Chart.Doughnut = function(context, config) {\r\n                    config.type = 'doughnut';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n\r\n            };\r\n\r\n        }, {}], 9: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                Chart.Line = function(context, config) {\r\n                    config.type = 'line';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n\r\n            };\r\n\r\n        }, {}], 10: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('bar', {\r\n                hover: {\r\n                    mode: 'label'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'category',\r\n\r\n                        // Specific to Bar Controller\r\n                        categoryPercentage: 0.8,\r\n                        barPercentage: 0.9,\r\n\r\n                        // offset settings\r\n                        offset: true,\r\n\r\n                        // grid line settings\r\n                        gridLines: {\r\n                            offsetGridLines: true\r\n                        }\r\n                    }],\r\n\r\n                    yAxes: [{\r\n                        type: 'linear'\r\n                    }]\r\n                }\r\n            });\r\n\r\n            defaults._set('horizontalBar', {\r\n                hover: {\r\n                    mode: 'index',\r\n                    axis: 'y'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'linear',\r\n                        position: 'bottom'\r\n                    }],\r\n\r\n                    yAxes: [{\r\n                        position: 'left',\r\n                        type: 'category',\r\n\r\n                        // Specific to Horizontal Bar Controller\r\n                        categoryPercentage: 0.8,\r\n                        barPercentage: 0.9,\r\n\r\n                        // offset settings\r\n                        offset: true,\r\n\r\n                        // grid line settings\r\n                        gridLines: {\r\n                            offsetGridLines: true\r\n                        }\r\n                    }]\r\n                },\r\n\r\n                elements: {\r\n                    rectangle: {\r\n                        borderSkipped: 'left'\r\n                    }\r\n                },\r\n\r\n                tooltips: {\r\n                    callbacks: {\r\n                        title: function(item, data) {\r\n                            // Pick first xLabel for now\r\n                            var title = '';\r\n\r\n                            if (item.length > 0) {\r\n                                if (item[0].yLabel) {\r\n                                    title = item[0].yLabel;\r\n                                } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\r\n                                    title = data.labels[item[0].index];\r\n                                }\r\n                            }\r\n\r\n                            return title;\r\n                        },\r\n\r\n                        label: function(item, data) {\r\n                            var datasetLabel = data.datasets[item.datasetIndex].label || '';\r\n                            return datasetLabel + ': ' + item.xLabel;\r\n                        }\r\n                    },\r\n                    mode: 'index',\r\n                    axis: 'y'\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\r\n             * @private\r\n             */\r\n            function computeMinSampleSize(scale, pixels) {\r\n                var min = scale.isHorizontal() ? scale.width : scale.height;\r\n                var ticks = scale.getTicks();\r\n                var prev, curr, i, ilen;\r\n\r\n                for (i = 1, ilen = pixels.length; i < ilen; ++i) {\r\n                    min = Math.min(min, pixels[i] - pixels[i - 1]);\r\n                }\r\n\r\n                for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n                    curr = scale.getPixelForTick(i);\r\n                    min = i > 0 ? Math.min(min, curr - prev) : min;\r\n                    prev = curr;\r\n                }\r\n\r\n                return min;\r\n            }\r\n\r\n            /**\r\n             * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\r\n             * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\r\n             * mode currently always generates bars equally sized (until we introduce scriptable options?).\r\n             * @private\r\n             */\r\n            function computeFitCategoryTraits(index, ruler, options) {\r\n                var thickness = options.barThickness;\r\n                var count = ruler.stackCount;\r\n                var curr = ruler.pixels[index];\r\n                var size, ratio;\r\n\r\n                if (helpers.isNullOrUndef(thickness)) {\r\n                    size = ruler.min * options.categoryPercentage;\r\n                    ratio = options.barPercentage;\r\n                } else {\r\n                    // When bar thickness is enforced, category and bar percentages are ignored.\r\n                    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\r\n                    // and deprecate barPercentage since this value is ignored when thickness is absolute.\r\n                    size = thickness * count;\r\n                    ratio = 1;\r\n                }\r\n\r\n                return {\r\n                    chunk: size / count,\r\n                    ratio: ratio,\r\n                    start: curr - (size / 2)\r\n                };\r\n            }\r\n\r\n            /**\r\n             * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\r\n             * percentage options are 1), based on the previous and following categories. This mode\r\n             * generates bars with different widths when data are not evenly spaced.\r\n             * @private\r\n             */\r\n            function computeFlexCategoryTraits(index, ruler, options) {\r\n                var pixels = ruler.pixels;\r\n                var curr = pixels[index];\r\n                var prev = index > 0 ? pixels[index - 1] : null;\r\n                var next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n                var percent = options.categoryPercentage;\r\n                var start, size;\r\n\r\n                if (prev === null) {\r\n                    // first data: its size is double based on the next point or,\r\n                    // if it's also the last data, we use the scale end extremity.\r\n                    prev = curr - (next === null ? ruler.end - curr : next - curr);\r\n                }\r\n\r\n                if (next === null) {\r\n                    // last data: its size is also double based on the previous point.\r\n                    next = curr + curr - prev;\r\n                }\r\n\r\n                start = curr - ((curr - prev) / 2) * percent;\r\n                size = ((next - prev) / 2) * percent;\r\n\r\n                return {\r\n                    chunk: size / ruler.stackCount,\r\n                    ratio: options.barPercentage,\r\n                    start: start\r\n                };\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                Chart.controllers.bar = Chart.DatasetController.extend({\r\n\r\n                    dataElementType: elements.Rectangle,\r\n\r\n                    initialize: function() {\r\n                        var me = this;\r\n                        var meta;\r\n\r\n                        Chart.DatasetController.prototype.initialize.apply(me, arguments);\r\n\r\n                        meta = me.getMeta();\r\n                        meta.stack = me.getDataset().stack;\r\n                        meta.bar = true;\r\n                    },\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var rects = me.getMeta().data;\r\n                        var i, ilen;\r\n\r\n                        me._ruler = me.getRuler();\r\n\r\n                        for (i = 0, ilen = rects.length; i < ilen; ++i) {\r\n                            me.updateElement(rects[i], i, reset);\r\n                        }\r\n                    },\r\n\r\n                    updateElement: function(rectangle, index, reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var dataset = me.getDataset();\r\n                        var custom = rectangle.custom || {};\r\n                        var rectangleOptions = chart.options.elements.rectangle;\r\n\r\n                        rectangle._xScale = me.getScaleForId(meta.xAxisID);\r\n                        rectangle._yScale = me.getScaleForId(meta.yAxisID);\r\n                        rectangle._datasetIndex = me.index;\r\n                        rectangle._index = index;\r\n\r\n                        rectangle._model = {\r\n                            datasetLabel: dataset.label,\r\n                            label: chart.data.labels[index],\r\n                            borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\r\n                            backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\r\n                            borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\r\n                            borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\r\n                        };\r\n\r\n                        me.updateElementGeometry(rectangle, index, reset);\r\n\r\n                        rectangle.pivot();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    updateElementGeometry: function(rectangle, index, reset) {\r\n                        var me = this;\r\n                        var model = rectangle._model;\r\n                        var vscale = me.getValueScale();\r\n                        var base = vscale.getBasePixel();\r\n                        var horizontal = vscale.isHorizontal();\r\n                        var ruler = me._ruler || me.getRuler();\r\n                        var vpixels = me.calculateBarValuePixels(me.index, index);\r\n                        var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\r\n\r\n                        model.horizontal = horizontal;\r\n                        model.base = reset ? base : vpixels.base;\r\n                        model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\r\n                        model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\r\n                        model.height = horizontal ? ipixels.size : undefined;\r\n                        model.width = horizontal ? undefined : ipixels.size;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScaleId: function() {\r\n                        return this.getMeta().yAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScaleId: function() {\r\n                        return this.getMeta().xAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScale: function() {\r\n                        return this.getScaleForId(this.getValueScaleId());\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScale: function() {\r\n                        return this.getScaleForId(this.getIndexScaleId());\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the stacks based on groups and bar visibility.\r\n                     * @param {Number} [last] - The dataset index\r\n                     * @returns {Array} The stack list\r\n                     * @private\r\n                     */\r\n                    _getStacks: function(last) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var scale = me.getIndexScale();\r\n                        var stacked = scale.options.stacked;\r\n                        var ilen = last === undefined ? chart.data.datasets.length : last + 1;\r\n                        var stacks = [];\r\n                        var i, meta;\r\n\r\n                        for (i = 0; i < ilen; ++i) {\r\n                            meta = chart.getDatasetMeta(i);\r\n                            if (meta.bar && chart.isDatasetVisible(i) &&\r\n                                (stacked === false ||\r\n                                    (stacked === true && stacks.indexOf(meta.stack) === -1) ||\r\n                                    (stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\r\n                                stacks.push(meta.stack);\r\n                            }\r\n                        }\r\n\r\n                        return stacks;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the effective number of stacks based on groups and bar visibility.\r\n                     * @private\r\n                     */\r\n                    getStackCount: function() {\r\n                        return this._getStacks().length;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the stack index for the given dataset based on groups and bar visibility.\r\n                     * @param {Number} [datasetIndex] - The dataset index\r\n                     * @param {String} [name] - The stack name to find\r\n                     * @returns {Number} The stack index\r\n                     * @private\r\n                     */\r\n                    getStackIndex: function(datasetIndex, name) {\r\n                        var stacks = this._getStacks(datasetIndex);\r\n                        var index = (name !== undefined)\r\n                            ? stacks.indexOf(name)\r\n                            : -1; // indexOf returns -1 if element is not present\r\n\r\n                        return (index === -1)\r\n                            ? stacks.length - 1\r\n                            : index;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getRuler: function() {\r\n                        var me = this;\r\n                        var scale = me.getIndexScale();\r\n                        var stackCount = me.getStackCount();\r\n                        var datasetIndex = me.index;\r\n                        var isHorizontal = scale.isHorizontal();\r\n                        var start = isHorizontal ? scale.left : scale.top;\r\n                        var end = start + (isHorizontal ? scale.width : scale.height);\r\n                        var pixels = [];\r\n                        var i, ilen, min;\r\n\r\n                        for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\r\n                            pixels.push(scale.getPixelForValue(null, i, datasetIndex));\r\n                        }\r\n\r\n                        min = helpers.isNullOrUndef(scale.options.barThickness)\r\n                            ? computeMinSampleSize(scale, pixels)\r\n                            : -1;\r\n\r\n                        return {\r\n                            min: min,\r\n                            pixels: pixels,\r\n                            start: start,\r\n                            end: end,\r\n                            stackCount: stackCount,\r\n                            scale: scale\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Note: pixel values are not clamped to the scale area.\r\n                     * @private\r\n                     */\r\n                    calculateBarValuePixels: function(datasetIndex, index) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var scale = me.getValueScale();\r\n                        var datasets = chart.data.datasets;\r\n                        var value = scale.getRightValue(datasets[datasetIndex].data[index]);\r\n                        var stacked = scale.options.stacked;\r\n                        var stack = meta.stack;\r\n                        var start = 0;\r\n                        var i, imeta, ivalue, base, head, size;\r\n\r\n                        if (stacked || (stacked === undefined && stack !== undefined)) {\r\n                            for (i = 0; i < datasetIndex; ++i) {\r\n                                imeta = chart.getDatasetMeta(i);\r\n\r\n                                if (imeta.bar &&\r\n                                    imeta.stack === stack &&\r\n                                    imeta.controller.getValueScaleId() === scale.id &&\r\n                                    chart.isDatasetVisible(i)) {\r\n\r\n                                    ivalue = scale.getRightValue(datasets[i].data[index]);\r\n                                    if ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\r\n                                        start += ivalue;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        base = scale.getPixelForValue(start);\r\n                        head = scale.getPixelForValue(start + value);\r\n                        size = (head - base) / 2;\r\n\r\n                        return {\r\n                            size: size,\r\n                            base: base,\r\n                            head: head,\r\n                            center: head + size / 2\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    calculateBarIndexPixels: function(datasetIndex, index, ruler) {\r\n                        var me = this;\r\n                        var options = ruler.scale.options;\r\n                        var range = options.barThickness === 'flex'\r\n                            ? computeFlexCategoryTraits(index, ruler, options)\r\n                            : computeFitCategoryTraits(index, ruler, options);\r\n\r\n                        var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\r\n                        var center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\r\n                        var size = Math.min(\r\n                            helpers.valueOrDefault(options.maxBarThickness, Infinity),\r\n                            range.chunk * range.ratio);\r\n\r\n                        return {\r\n                            base: center - size / 2,\r\n                            head: center + size / 2,\r\n                            center: center,\r\n                            size: size\r\n                        };\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var scale = me.getValueScale();\r\n                        var rects = me.getMeta().data;\r\n                        var dataset = me.getDataset();\r\n                        var ilen = rects.length;\r\n                        var i = 0;\r\n\r\n                        helpers.canvas.clipArea(chart.ctx, chart.chartArea);\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            if (!isNaN(scale.getRightValue(dataset.data[i]))) {\r\n                                rects[i].draw();\r\n                            }\r\n                        }\r\n\r\n                        helpers.canvas.unclipArea(chart.ctx);\r\n                    },\r\n\r\n                    setHoverStyle: function(rectangle) {\r\n                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n                        var index = rectangle._index;\r\n                        var custom = rectangle.custom || {};\r\n                        var model = rectangle._model;\r\n\r\n                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    removeHoverStyle: function(rectangle) {\r\n                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n                        var index = rectangle._index;\r\n                        var custom = rectangle.custom || {};\r\n                        var model = rectangle._model;\r\n                        var rectangleElementOptions = this.chart.options.elements.rectangle;\r\n\r\n                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\r\n                        model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\r\n                        model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\r\n                    }\r\n                });\r\n\r\n                Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScaleId: function() {\r\n                        return this.getMeta().xAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScaleId: function() {\r\n                        return this.getMeta().yAxisID;\r\n                    }\r\n                });\r\n            };\r\n\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 11: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('doughnut', {\r\n                animation: {\r\n                    // Boolean - Whether we animate the rotation of the Doughnut\r\n                    animateRotate: true,\r\n                    // Boolean - Whether we animate scaling the Doughnut from the centre\r\n                    animateScale: false\r\n                },\r\n                hover: {\r\n                    mode: 'single'\r\n                },\r\n                legendCallback: function(chart) {\r\n                    var text = [];\r\n                    text.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n                    var data = chart.data;\r\n                    var datasets = data.datasets;\r\n                    var labels = data.labels;\r\n\r\n                    if (datasets.length) {\r\n                        for (var i = 0; i < datasets[0].data.length; ++i) {\r\n                            text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\r\n                            if (labels[i]) {\r\n                                text.push(labels[i]);\r\n                            }\r\n                            text.push('</li>');\r\n                        }\r\n                    }\r\n\r\n                    text.push('</ul>');\r\n                    return text.join('');\r\n                },\r\n                legend: {\r\n                    labels: {\r\n                        generateLabels: function(chart) {\r\n                            var data = chart.data;\r\n                            if (data.labels.length && data.datasets.length) {\r\n                                return data.labels.map(function(label, i) {\r\n                                    var meta = chart.getDatasetMeta(0);\r\n                                    var ds = data.datasets[0];\r\n                                    var arc = meta.data[i];\r\n                                    var custom = arc && arc.custom || {};\r\n                                    var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n                                    var arcOpts = chart.options.elements.arc;\r\n                                    var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n                                    var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n                                    var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\r\n                                    return {\r\n                                        text: label,\r\n                                        fillStyle: fill,\r\n                                        strokeStyle: stroke,\r\n                                        lineWidth: bw,\r\n                                        hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n                                        // Extra data used for toggling the correct item\r\n                                        index: i\r\n                                    };\r\n                                });\r\n                            }\r\n                            return [];\r\n                        }\r\n                    },\r\n\r\n                    onClick: function(e, legendItem) {\r\n                        var index = legendItem.index;\r\n                        var chart = this.chart;\r\n                        var i, ilen, meta;\r\n\r\n                        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n                            meta = chart.getDatasetMeta(i);\r\n                            // toggle visibility of index if exists\r\n                            if (meta.data[index]) {\r\n                                meta.data[index].hidden = !meta.data[index].hidden;\r\n                            }\r\n                        }\r\n\r\n                        chart.update();\r\n                    }\r\n                },\r\n\r\n                // The percentage of the chart that we cut out of the middle.\r\n                cutoutPercentage: 50,\r\n\r\n                // The rotation of the chart, where the first data arc begins.\r\n                rotation: Math.PI * -0.5,\r\n\r\n                // The total circumference of the chart.\r\n                circumference: Math.PI * 2.0,\r\n\r\n                // Need to override these to give a nice default\r\n                tooltips: {\r\n                    callbacks: {\r\n                        title: function() {\r\n                            return '';\r\n                        },\r\n                        label: function(tooltipItem, data) {\r\n                            var dataLabel = data.labels[tooltipItem.index];\r\n                            var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\r\n                            if (helpers.isArray(dataLabel)) {\r\n                                // show value on first line of multiline label\r\n                                // need to clone because we are changing the value\r\n                                dataLabel = dataLabel.slice();\r\n                                dataLabel[0] += value;\r\n                            } else {\r\n                                dataLabel += value;\r\n                            }\r\n\r\n                            return dataLabel;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            defaults._set('pie', helpers.clone(defaults.doughnut));\r\n            defaults._set('pie', {\r\n                cutoutPercentage: 0\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\r\n\r\n                    dataElementType: elements.Arc,\r\n\r\n                    linkScales: helpers.noop,\r\n\r\n                    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\r\n                    getRingIndex: function(datasetIndex) {\r\n                        var ringIndex = 0;\r\n\r\n                        for (var j = 0; j < datasetIndex; ++j) {\r\n                            if (this.chart.isDatasetVisible(j)) {\r\n                                ++ringIndex;\r\n                            }\r\n                        }\r\n\r\n                        return ringIndex;\r\n                    },\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var chartArea = chart.chartArea;\r\n                        var opts = chart.options;\r\n                        var arcOpts = opts.elements.arc;\r\n                        var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\r\n                        var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\r\n                        var minSize = Math.min(availableWidth, availableHeight);\r\n                        var offset = { x: 0, y: 0 };\r\n                        var meta = me.getMeta();\r\n                        var cutoutPercentage = opts.cutoutPercentage;\r\n                        var circumference = opts.circumference;\r\n\r\n                        // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\r\n                        if (circumference < Math.PI * 2.0) {\r\n                            var startAngle = opts.rotation % (Math.PI * 2.0);\r\n                            startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\r\n                            var endAngle = startAngle + circumference;\r\n                            var start = { x: Math.cos(startAngle), y: Math.sin(startAngle) };\r\n                            var end = { x: Math.cos(endAngle), y: Math.sin(endAngle) };\r\n                            var contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\r\n                            var contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\r\n                            var contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\r\n                            var contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\r\n                            var cutout = cutoutPercentage / 100.0;\r\n                            var min = { x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout)) };\r\n                            var max = { x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout)) };\r\n                            var size = { width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5 };\r\n                            minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\r\n                            offset = { x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5 };\r\n                        }\r\n\r\n                        chart.borderWidth = me.getMaxBorderWidth(meta.data);\r\n                        chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\r\n                        chart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\r\n                        chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n                        chart.offsetX = offset.x * chart.outerRadius;\r\n                        chart.offsetY = offset.y * chart.outerRadius;\r\n\r\n                        meta.total = me.calculateTotal();\r\n\r\n                        me.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\r\n                        me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\r\n\r\n                        helpers.each(meta.data, function(arc, index) {\r\n                            me.updateElement(arc, index, reset);\r\n                        });\r\n                    },\r\n\r\n                    updateElement: function(arc, index, reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var chartArea = chart.chartArea;\r\n                        var opts = chart.options;\r\n                        var animationOpts = opts.animation;\r\n                        var centerX = (chartArea.left + chartArea.right) / 2;\r\n                        var centerY = (chartArea.top + chartArea.bottom) / 2;\r\n                        var startAngle = opts.rotation; // non reset case handled later\r\n                        var endAngle = opts.rotation; // non reset case handled later\r\n                        var dataset = me.getDataset();\r\n                        var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\r\n                        var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\r\n                        var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\r\n                        var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n\r\n                        helpers.extend(arc, {\r\n                            // Utility\r\n                            _datasetIndex: me.index,\r\n                            _index: index,\r\n\r\n                            // Desired view properties\r\n                            _model: {\r\n                                x: centerX + chart.offsetX,\r\n                                y: centerY + chart.offsetY,\r\n                                startAngle: startAngle,\r\n                                endAngle: endAngle,\r\n                                circumference: circumference,\r\n                                outerRadius: outerRadius,\r\n                                innerRadius: innerRadius,\r\n                                label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\r\n                            }\r\n                        });\r\n\r\n                        var model = arc._model;\r\n                        // Resets the visual styles\r\n                        this.removeHoverStyle(arc);\r\n\r\n                        // Set correct angles if not resetting\r\n                        if (!reset || !animationOpts.animateRotate) {\r\n                            if (index === 0) {\r\n                                model.startAngle = opts.rotation;\r\n                            } else {\r\n                                model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\r\n                            }\r\n\r\n                            model.endAngle = model.startAngle + model.circumference;\r\n                        }\r\n\r\n                        arc.pivot();\r\n                    },\r\n\r\n                    removeHoverStyle: function(arc) {\r\n                        Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n                    },\r\n\r\n                    calculateTotal: function() {\r\n                        var dataset = this.getDataset();\r\n                        var meta = this.getMeta();\r\n                        var total = 0;\r\n                        var value;\r\n\r\n                        helpers.each(meta.data, function(element, index) {\r\n                            value = dataset.data[index];\r\n                            if (!isNaN(value) && !element.hidden) {\r\n                                total += Math.abs(value);\r\n                            }\r\n                        });\r\n\r\n                        /* if (total === 0) {\r\n                            total = NaN;\r\n                        }*/\r\n\r\n                        return total;\r\n                    },\r\n\r\n                    calculateCircumference: function(value) {\r\n                        var total = this.getMeta().total;\r\n                        if (total > 0 && !isNaN(value)) {\r\n                            return (Math.PI * 2.0) * (Math.abs(value) / total);\r\n                        }\r\n                        return 0;\r\n                    },\r\n\r\n                    // gets the max border or hover width to properly scale pie charts\r\n                    getMaxBorderWidth: function(arcs) {\r\n                        var max = 0;\r\n                        var index = this.index;\r\n                        var length = arcs.length;\r\n                        var borderWidth;\r\n                        var hoverWidth;\r\n\r\n                        for (var i = 0; i < length; i++) {\r\n                            borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\r\n                            hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\r\n\r\n                            max = borderWidth > max ? borderWidth : max;\r\n                            max = hoverWidth > max ? hoverWidth : max;\r\n                        }\r\n                        return max;\r\n                    }\r\n                });\r\n            };\r\n\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 12: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('line', {\r\n                showLines: true,\r\n                spanGaps: false,\r\n\r\n                hover: {\r\n                    mode: 'label'\r\n                },\r\n\r\n                scales: {\r\n                    xAxes: [{\r\n                        type: 'category',\r\n                        id: 'x-axis-0'\r\n                    }],\r\n                    yAxes: [{\r\n                        type: 'linear',\r\n                        id: 'y-axis-0'\r\n                    }]\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                function lineEnabled(dataset, options) {\r\n                    return helpers.valueOrDefault(dataset.showLine, options.showLines);\r\n                }\r\n\r\n                Chart.controllers.line = Chart.DatasetController.extend({\r\n\r\n                    datasetElementType: elements.Line,\r\n\r\n                    dataElementType: elements.Point,\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var line = meta.dataset;\r\n                        var points = meta.data || [];\r\n                        var options = me.chart.options;\r\n                        var lineElementOptions = options.elements.line;\r\n                        var scale = me.getScaleForId(meta.yAxisID);\r\n                        var i, ilen, custom;\r\n                        var dataset = me.getDataset();\r\n                        var showLine = lineEnabled(dataset, options);\r\n\r\n                        // Update Line\r\n                        if (showLine) {\r\n                            custom = line.custom || {};\r\n\r\n                            // Compatibility: If the properties are defined with only the old name, use those values\r\n                            if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n                                dataset.lineTension = dataset.tension;\r\n                            }\r\n\r\n                            // Utility\r\n                            line._scale = scale;\r\n                            line._datasetIndex = me.index;\r\n                            // Data\r\n                            line._children = points;\r\n                            // Model\r\n                            line._model = {\r\n                                // Appearance\r\n                                // The default behavior of lines is to break at null values, according\r\n                                // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\r\n                                // This option gives lines the ability to span gaps\r\n                                spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\r\n                                tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n                                backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n                                borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n                                borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n                                borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n                                borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n                                borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n                                borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n                                fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n                                steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\r\n                                cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\r\n                            };\r\n\r\n                            line.pivot();\r\n                        }\r\n\r\n                        // Update Points\r\n                        for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                            me.updateElement(points[i], i, reset);\r\n                        }\r\n\r\n                        if (showLine && line._model.tension !== 0) {\r\n                            me.updateBezierControlPoints();\r\n                        }\r\n\r\n                        // Now pivot the point for animation\r\n                        for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                            points[i].pivot();\r\n                        }\r\n                    },\r\n\r\n                    getPointBackgroundColor: function(point, index) {\r\n                        var backgroundColor = this.chart.options.elements.point.backgroundColor;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (custom.backgroundColor) {\r\n                            backgroundColor = custom.backgroundColor;\r\n                        } else if (dataset.pointBackgroundColor) {\r\n                            backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\r\n                        } else if (dataset.backgroundColor) {\r\n                            backgroundColor = dataset.backgroundColor;\r\n                        }\r\n\r\n                        return backgroundColor;\r\n                    },\r\n\r\n                    getPointBorderColor: function(point, index) {\r\n                        var borderColor = this.chart.options.elements.point.borderColor;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (custom.borderColor) {\r\n                            borderColor = custom.borderColor;\r\n                        } else if (dataset.pointBorderColor) {\r\n                            borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\r\n                        } else if (dataset.borderColor) {\r\n                            borderColor = dataset.borderColor;\r\n                        }\r\n\r\n                        return borderColor;\r\n                    },\r\n\r\n                    getPointBorderWidth: function(point, index) {\r\n                        var borderWidth = this.chart.options.elements.point.borderWidth;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (!isNaN(custom.borderWidth)) {\r\n                            borderWidth = custom.borderWidth;\r\n                        } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\r\n                            borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\r\n                        } else if (!isNaN(dataset.borderWidth)) {\r\n                            borderWidth = dataset.borderWidth;\r\n                        }\r\n\r\n                        return borderWidth;\r\n                    },\r\n\r\n                    updateElement: function(point, index, reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var custom = point.custom || {};\r\n                        var dataset = me.getDataset();\r\n                        var datasetIndex = me.index;\r\n                        var value = dataset.data[index];\r\n                        var yScale = me.getScaleForId(meta.yAxisID);\r\n                        var xScale = me.getScaleForId(meta.xAxisID);\r\n                        var pointOptions = me.chart.options.elements.point;\r\n                        var x, y;\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n                            dataset.pointRadius = dataset.radius;\r\n                        }\r\n                        if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\r\n                            dataset.pointHitRadius = dataset.hitRadius;\r\n                        }\r\n\r\n                        x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\r\n                        y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\r\n\r\n                        // Utility\r\n                        point._xScale = xScale;\r\n                        point._yScale = yScale;\r\n                        point._datasetIndex = datasetIndex;\r\n                        point._index = index;\r\n\r\n                        // Desired view properties\r\n                        point._model = {\r\n                            x: x,\r\n                            y: y,\r\n                            skip: custom.skip || isNaN(x) || isNaN(y),\r\n                            // Appearance\r\n                            radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\r\n                            pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\r\n                            backgroundColor: me.getPointBackgroundColor(point, index),\r\n                            borderColor: me.getPointBorderColor(point, index),\r\n                            borderWidth: me.getPointBorderWidth(point, index),\r\n                            tension: meta.dataset._model ? meta.dataset._model.tension : 0,\r\n                            steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\r\n                            // Tooltip\r\n                            hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\r\n                        };\r\n                    },\r\n\r\n                    calculatePointY: function(value, index, datasetIndex) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var yScale = me.getScaleForId(meta.yAxisID);\r\n                        var sumPos = 0;\r\n                        var sumNeg = 0;\r\n                        var i, ds, dsMeta;\r\n\r\n                        if (yScale.options.stacked) {\r\n                            for (i = 0; i < datasetIndex; i++) {\r\n                                ds = chart.data.datasets[i];\r\n                                dsMeta = chart.getDatasetMeta(i);\r\n                                if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\r\n                                    var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\r\n                                    if (stackedRightValue < 0) {\r\n                                        sumNeg += stackedRightValue || 0;\r\n                                    } else {\r\n                                        sumPos += stackedRightValue || 0;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            var rightValue = Number(yScale.getRightValue(value));\r\n                            if (rightValue < 0) {\r\n                                return yScale.getPixelForValue(sumNeg + rightValue);\r\n                            }\r\n                            return yScale.getPixelForValue(sumPos + rightValue);\r\n                        }\r\n\r\n                        return yScale.getPixelForValue(value);\r\n                    },\r\n\r\n                    updateBezierControlPoints: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var area = me.chart.chartArea;\r\n                        var points = (meta.data || []);\r\n                        var i, ilen, point, model, controlPoints;\r\n\r\n                        // Only consider points that are drawn in case the spanGaps option is used\r\n                        if (meta.dataset._model.spanGaps) {\r\n                            points = points.filter(function(pt) {\r\n                                return !pt._model.skip;\r\n                            });\r\n                        }\r\n\r\n                        function capControlPoint(pt, min, max) {\r\n                            return Math.max(Math.min(pt, max), min);\r\n                        }\r\n\r\n                        if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\r\n                            helpers.splineCurveMonotone(points);\r\n                        } else {\r\n                            for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                                point = points[i];\r\n                                model = point._model;\r\n                                controlPoints = helpers.splineCurve(\r\n                                    helpers.previousItem(points, i)._model,\r\n                                    model,\r\n                                    helpers.nextItem(points, i)._model,\r\n                                    meta.dataset._model.tension\r\n                                );\r\n                                model.controlPointPreviousX = controlPoints.previous.x;\r\n                                model.controlPointPreviousY = controlPoints.previous.y;\r\n                                model.controlPointNextX = controlPoints.next.x;\r\n                                model.controlPointNextY = controlPoints.next.y;\r\n                            }\r\n                        }\r\n\r\n                        if (me.chart.options.elements.line.capBezierPoints) {\r\n                            for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                                model = points[i]._model;\r\n                                model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\r\n                                model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\r\n                                model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\r\n                                model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var points = meta.data || [];\r\n                        var area = chart.chartArea;\r\n                        var ilen = points.length;\r\n                        var i = 0;\r\n\r\n                        helpers.canvas.clipArea(chart.ctx, area);\r\n\r\n                        if (lineEnabled(me.getDataset(), chart.options)) {\r\n                            meta.dataset.draw();\r\n                        }\r\n\r\n                        helpers.canvas.unclipArea(chart.ctx);\r\n\r\n                        // Draw the points\r\n                        for (; i < ilen; ++i) {\r\n                            points[i].draw(area);\r\n                        }\r\n                    },\r\n\r\n                    setHoverStyle: function(point) {\r\n                        // Point\r\n                        var dataset = this.chart.data.datasets[point._datasetIndex];\r\n                        var index = point._index;\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n\r\n                        model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n                        model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    removeHoverStyle: function(point) {\r\n                        var me = this;\r\n                        var dataset = me.chart.data.datasets[point._datasetIndex];\r\n                        var index = point._index;\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n                            dataset.pointRadius = dataset.radius;\r\n                        }\r\n\r\n                        model.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\r\n                        model.backgroundColor = me.getPointBackgroundColor(point, index);\r\n                        model.borderColor = me.getPointBorderColor(point, index);\r\n                        model.borderWidth = me.getPointBorderWidth(point, index);\r\n                    }\r\n                });\r\n            };\r\n\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 13: [function(require, module, exports) {\r\n            /* global window: false */\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                animation: {\r\n                    duration: 1000,\r\n                    easing: 'easeOutQuart',\r\n                    onProgress: helpers.noop,\r\n                    onComplete: helpers.noop\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                Chart.Animation = Element.extend({\r\n                    chart: null, // the animation associated chart instance\r\n                    currentStep: 0, // the current animation step\r\n                    numSteps: 60, // default number of steps\r\n                    easing: '', // the easing to use for this animation\r\n                    render: null, // render function used by the animation service\r\n\r\n                    onAnimationProgress: null, // user specified callback to fire on each step of the animation\r\n                    onAnimationComplete: null, // user specified callback to fire when the animation finishes\r\n                });\r\n\r\n                Chart.animationService = {\r\n                    frameDuration: 17,\r\n                    animations: [],\r\n                    dropFrames: 0,\r\n                    request: null,\r\n\r\n                    /**\r\n                     * @param {Chart} chart - The chart to animate.\r\n                     * @param {Chart.Animation} animation - The animation that we will animate.\r\n                     * @param {Number} duration - The animation duration in ms.\r\n                     * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\r\n                     */\r\n                    addAnimation: function(chart, animation, duration, lazy) {\r\n                        var animations = this.animations;\r\n                        var i, ilen;\r\n\r\n                        animation.chart = chart;\r\n\r\n                        if (!lazy) {\r\n                            chart.animating = true;\r\n                        }\r\n\r\n                        for (i = 0, ilen = animations.length; i < ilen; ++i) {\r\n                            if (animations[i].chart === chart) {\r\n                                animations[i] = animation;\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        animations.push(animation);\r\n\r\n                        // If there are no animations queued, manually kickstart a digest, for lack of a better word\r\n                        if (animations.length === 1) {\r\n                            this.requestAnimationFrame();\r\n                        }\r\n                    },\r\n\r\n                    cancelAnimation: function(chart) {\r\n                        var index = helpers.findIndex(this.animations, function(animation) {\r\n                            return animation.chart === chart;\r\n                        });\r\n\r\n                        if (index !== -1) {\r\n                            this.animations.splice(index, 1);\r\n                            chart.animating = false;\r\n                        }\r\n                    },\r\n\r\n                    requestAnimationFrame: function() {\r\n                        var me = this;\r\n                        if (me.request === null) {\r\n                            // Skip animation frame requests until the active one is executed.\r\n                            // This can happen when processing mouse events, e.g. 'mousemove'\r\n                            // and 'mouseout' events will trigger multiple renders.\r\n                            me.request = helpers.requestAnimFrame.call(window, function() {\r\n                                me.request = null;\r\n                                me.startDigest();\r\n                            });\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    startDigest: function() {\r\n                        var me = this;\r\n                        var startTime = Date.now();\r\n                        var framesToDrop = 0;\r\n\r\n                        if (me.dropFrames > 1) {\r\n                            framesToDrop = Math.floor(me.dropFrames);\r\n                            me.dropFrames = me.dropFrames % 1;\r\n                        }\r\n\r\n                        me.advance(1 + framesToDrop);\r\n\r\n                        var endTime = Date.now();\r\n\r\n                        me.dropFrames += (endTime - startTime) / me.frameDuration;\r\n\r\n                        // Do we have more stuff to animate?\r\n                        if (me.animations.length > 0) {\r\n                            me.requestAnimationFrame();\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    advance: function(count) {\r\n                        var animations = this.animations;\r\n                        var animation, chart;\r\n                        var i = 0;\r\n\r\n                        while (i < animations.length) {\r\n                            animation = animations[i];\r\n                            chart = animation.chart;\r\n\r\n                            animation.currentStep = (animation.currentStep || 0) + count;\r\n                            animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\r\n\r\n                            helpers.callback(animation.render, [chart, animation], chart);\r\n                            helpers.callback(animation.onAnimationProgress, [animation], chart);\r\n\r\n                            if (animation.currentStep >= animation.numSteps) {\r\n                                helpers.callback(animation.onAnimationComplete, [animation], chart);\r\n                                chart.animating = false;\r\n                                animations.splice(i, 1);\r\n                            } else {\r\n                                ++i;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.Animation instead\r\n                 * @prop Chart.Animation#animationObject\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 */\r\n                Object.defineProperty(Chart.Animation.prototype, 'animationObject', {\r\n                    get: function() {\r\n                        return this;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.Animation#chart instead\r\n                 * @prop Chart.Animation#chartInstance\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 */\r\n                Object.defineProperty(Chart.Animation.prototype, 'chartInstance', {\r\n                    get: function() {\r\n                        return this.chart;\r\n                    },\r\n                    set: function(value) {\r\n                        this.chart = value;\r\n                    }\r\n                });\r\n\r\n            };\r\n\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 14: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var Interaction = require(19);\r\n            var layouts = require(21);\r\n            var platform = require(39);\r\n            var plugins = require(22);\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                // Create a dictionary of chart types, to allow for extension of existing types\r\n                Chart.types = {};\r\n\r\n                // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\r\n                // Destroy method on the chart will remove the instance of the chart from this reference.\r\n                Chart.instances = {};\r\n\r\n                // Controllers available for dataset visualization eg. bar, line, slice, etc.\r\n                Chart.controllers = {};\r\n\r\n                /**\r\n                 * Initializes the given config with global and chart default values.\r\n                 */\r\n                function initConfig(config) {\r\n                    config = config || {};\r\n\r\n                    // Do NOT use configMerge() for the data object because this method merges arrays\r\n                    // and so would change references to labels and datasets, preventing data updates.\r\n                    var data = config.data = config.data || {};\r\n                    data.datasets = data.datasets || [];\r\n                    data.labels = data.labels || [];\r\n\r\n                    config.options = helpers.configMerge(\r\n                        defaults.global,\r\n                        defaults[config.type],\r\n                        config.options || {});\r\n\r\n                    return config;\r\n                }\r\n\r\n                /**\r\n                 * Updates the config of the chart\r\n                 * @param chart {Chart} chart to update the options for\r\n                 */\r\n                function updateConfig(chart) {\r\n                    var newOptions = chart.options;\r\n\r\n                    helpers.each(chart.scales, function(scale) {\r\n                        layouts.removeBox(chart, scale);\r\n                    });\r\n\r\n                    newOptions = helpers.configMerge(\r\n                        Chart.defaults.global,\r\n                        Chart.defaults[chart.config.type],\r\n                        newOptions);\r\n\r\n                    chart.options = chart.config.options = newOptions;\r\n                    chart.ensureScalesHaveIDs();\r\n                    chart.buildOrUpdateScales();\r\n                    // Tooltip\r\n                    chart.tooltip._options = newOptions.tooltips;\r\n                    chart.tooltip.initialize();\r\n                }\r\n\r\n                function positionIsHorizontal(position) {\r\n                    return position === 'top' || position === 'bottom';\r\n                }\r\n\r\n                helpers.extend(Chart.prototype, /** @lends Chart */ {\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    construct: function(item, config) {\r\n                        var me = this;\r\n\r\n                        config = initConfig(config);\r\n\r\n                        var context = platform.acquireContext(item, config);\r\n                        var canvas = context && context.canvas;\r\n                        var height = canvas && canvas.height;\r\n                        var width = canvas && canvas.width;\r\n\r\n                        me.id = helpers.uid();\r\n                        me.ctx = context;\r\n                        me.canvas = canvas;\r\n                        me.config = config;\r\n                        me.width = width;\r\n                        me.height = height;\r\n                        me.aspectRatio = height ? width / height : null;\r\n                        me.options = config.options;\r\n                        me._bufferedRender = false;\r\n\r\n                        /**\r\n                         * Provided for backward compatibility, Chart and Chart.Controller have been merged,\r\n                         * the \"instance\" still need to be defined since it might be called from plugins.\r\n                         * @prop Chart#chart\r\n                         * @deprecated since version 2.6.0\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        me.chart = me;\r\n                        me.controller = me; // chart.chart.controller #inception\r\n\r\n                        // Add the chart instance to the global namespace\r\n                        Chart.instances[me.id] = me;\r\n\r\n                        // Define alias to the config data: `chart.data === chart.config.data`\r\n                        Object.defineProperty(me, 'data', {\r\n                            get: function() {\r\n                                return me.config.data;\r\n                            },\r\n                            set: function(value) {\r\n                                me.config.data = value;\r\n                            }\r\n                        });\r\n\r\n                        if (!context || !canvas) {\r\n                            // The given item is not a compatible context2d element, let's return before finalizing\r\n                            // the chart initialization but after setting basic chart / controller properties that\r\n                            // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\r\n                            // https://github.com/chartjs/Chart.js/issues/2807\r\n                            console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n                            return;\r\n                        }\r\n\r\n                        me.initialize();\r\n                        me.update();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    initialize: function() {\r\n                        var me = this;\r\n\r\n                        // Before init plugin notification\r\n                        plugins.notify(me, 'beforeInit');\r\n\r\n                        helpers.retinaScale(me, me.options.devicePixelRatio);\r\n\r\n                        me.bindEvents();\r\n\r\n                        if (me.options.responsive) {\r\n                            // Initial resize before chart draws (must be silent to preserve initial animations).\r\n                            me.resize(true);\r\n                        }\r\n\r\n                        // Make sure scales have IDs and are built before we build any controllers.\r\n                        me.ensureScalesHaveIDs();\r\n                        me.buildOrUpdateScales();\r\n                        me.initToolTip();\r\n\r\n                        // After init plugin notification\r\n                        plugins.notify(me, 'afterInit');\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    clear: function() {\r\n                        helpers.canvas.clear(this);\r\n                        return this;\r\n                    },\r\n\r\n                    stop: function() {\r\n                        // Stops any current animation loop occurring\r\n                        Chart.animationService.cancelAnimation(this);\r\n                        return this;\r\n                    },\r\n\r\n                    resize: function(silent) {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        var canvas = me.canvas;\r\n                        var aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\r\n\r\n                        // the canvas render width and height will be casted to integers so make sure that\r\n                        // the canvas display style uses the same integer values to avoid blurring effect.\r\n\r\n                        // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\r\n                        var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\r\n                        var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\r\n\r\n                        if (me.width === newWidth && me.height === newHeight) {\r\n                            return;\r\n                        }\r\n\r\n                        canvas.width = me.width = newWidth;\r\n                        canvas.height = me.height = newHeight;\r\n                        canvas.style.width = newWidth + 'px';\r\n                        canvas.style.height = newHeight + 'px';\r\n\r\n                        helpers.retinaScale(me, options.devicePixelRatio);\r\n\r\n                        if (!silent) {\r\n                            // Notify any plugins about the resize\r\n                            var newSize = { width: newWidth, height: newHeight };\r\n                            plugins.notify(me, 'resize', [newSize]);\r\n\r\n                            // Notify of resize\r\n                            if (me.options.onResize) {\r\n                                me.options.onResize(me, newSize);\r\n                            }\r\n\r\n                            me.stop();\r\n                            me.update(me.options.responsiveAnimationDuration);\r\n                        }\r\n                    },\r\n\r\n                    ensureScalesHaveIDs: function() {\r\n                        var options = this.options;\r\n                        var scalesOptions = options.scales || {};\r\n                        var scaleOptions = options.scale;\r\n\r\n                        helpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\r\n                            xAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\r\n                        });\r\n\r\n                        helpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\r\n                            yAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\r\n                        });\r\n\r\n                        if (scaleOptions) {\r\n                            scaleOptions.id = scaleOptions.id || 'scale';\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Builds a map of scale ID to scale object for future lookup.\r\n                     */\r\n                    buildOrUpdateScales: function() {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        var scales = me.scales || {};\r\n                        var items = [];\r\n                        var updated = Object.keys(scales).reduce(function(obj, id) {\r\n                            obj[id] = false;\r\n                            return obj;\r\n                        }, {});\r\n\r\n                        if (options.scales) {\r\n                            items = items.concat(\r\n                                (options.scales.xAxes || []).map(function(xAxisOptions) {\r\n                                    return { options: xAxisOptions, dtype: 'category', dposition: 'bottom' };\r\n                                }),\r\n                                (options.scales.yAxes || []).map(function(yAxisOptions) {\r\n                                    return { options: yAxisOptions, dtype: 'linear', dposition: 'left' };\r\n                                })\r\n                            );\r\n                        }\r\n\r\n                        if (options.scale) {\r\n                            items.push({\r\n                                options: options.scale,\r\n                                dtype: 'radialLinear',\r\n                                isDefault: true,\r\n                                dposition: 'chartArea'\r\n                            });\r\n                        }\r\n\r\n                        helpers.each(items, function(item) {\r\n                            var scaleOptions = item.options;\r\n                            var id = scaleOptions.id;\r\n                            var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\r\n\r\n                            if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\r\n                                scaleOptions.position = item.dposition;\r\n                            }\r\n\r\n                            updated[id] = true;\r\n                            var scale = null;\r\n                            if (id in scales && scales[id].type === scaleType) {\r\n                                scale = scales[id];\r\n                                scale.options = scaleOptions;\r\n                                scale.ctx = me.ctx;\r\n                                scale.chart = me;\r\n                            } else {\r\n                                var scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\r\n                                if (!scaleClass) {\r\n                                    return;\r\n                                }\r\n                                scale = new scaleClass({\r\n                                    id: id,\r\n                                    type: scaleType,\r\n                                    options: scaleOptions,\r\n                                    ctx: me.ctx,\r\n                                    chart: me\r\n                                });\r\n                                scales[scale.id] = scale;\r\n                            }\r\n\r\n                            scale.mergeTicksOptions();\r\n\r\n                            // TODO(SB): I think we should be able to remove this custom case (options.scale)\r\n                            // and consider it as a regular scale part of the \"scales\"\" map only! This would\r\n                            // make the logic easier and remove some useless? custom code.\r\n                            if (item.isDefault) {\r\n                                me.scale = scale;\r\n                            }\r\n                        });\r\n                        // clear up discarded scales\r\n                        helpers.each(updated, function(hasUpdated, id) {\r\n                            if (!hasUpdated) {\r\n                                delete scales[id];\r\n                            }\r\n                        });\r\n\r\n                        me.scales = scales;\r\n\r\n                        Chart.scaleService.addScalesToLayout(this);\r\n                    },\r\n\r\n                    buildOrUpdateControllers: function() {\r\n                        var me = this;\r\n                        var types = [];\r\n                        var newControllers = [];\r\n\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            var meta = me.getDatasetMeta(datasetIndex);\r\n                            var type = dataset.type || me.config.type;\r\n\r\n                            if (meta.type && meta.type !== type) {\r\n                                me.destroyDatasetMeta(datasetIndex);\r\n                                meta = me.getDatasetMeta(datasetIndex);\r\n                            }\r\n                            meta.type = type;\r\n\r\n                            types.push(meta.type);\r\n\r\n                            if (meta.controller) {\r\n                                meta.controller.updateIndex(datasetIndex);\r\n                                meta.controller.linkScales();\r\n                            } else {\r\n                                var ControllerClass = Chart.controllers[meta.type];\r\n                                if (ControllerClass === undefined) {\r\n                                    throw new Error('\"' + meta.type + '\" is not a chart type.');\r\n                                }\r\n\r\n                                meta.controller = new ControllerClass(me, datasetIndex);\r\n                                newControllers.push(meta.controller);\r\n                            }\r\n                        }, me);\r\n\r\n                        return newControllers;\r\n                    },\r\n\r\n                    /**\r\n                     * Reset the elements of all datasets\r\n                     * @private\r\n                     */\r\n                    resetElements: function() {\r\n                        var me = this;\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            me.getDatasetMeta(datasetIndex).controller.reset();\r\n                        }, me);\r\n                    },\r\n\r\n                    /**\r\n                    * Resets the chart back to it's state before the initial animation\r\n                    */\r\n                    reset: function() {\r\n                        this.resetElements();\r\n                        this.tooltip.initialize();\r\n                    },\r\n\r\n                    update: function(config) {\r\n                        var me = this;\r\n\r\n                        if (!config || typeof config !== 'object') {\r\n                            // backwards compatibility\r\n                            config = {\r\n                                duration: config,\r\n                                lazy: arguments[1]\r\n                            };\r\n                        }\r\n\r\n                        updateConfig(me);\r\n\r\n                        // plugins options references might have change, let's invalidate the cache\r\n                        // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\r\n                        plugins._invalidate(me);\r\n\r\n                        if (plugins.notify(me, 'beforeUpdate') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // In case the entire data object changed\r\n                        me.tooltip._data = me.data;\r\n\r\n                        // Make sure dataset controllers are updated and new controllers are reset\r\n                        var newControllers = me.buildOrUpdateControllers();\r\n\r\n                        // Make sure all dataset controllers have correct meta data counts\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\r\n                        }, me);\r\n\r\n                        me.updateLayout();\r\n\r\n                        // Can only reset the new controllers after the scales have been updated\r\n                        if (me.options.animation && me.options.animation.duration) {\r\n                            helpers.each(newControllers, function(controller) {\r\n                                controller.reset();\r\n                            });\r\n                        }\r\n\r\n                        me.updateDatasets();\r\n\r\n                        // Need to reset tooltip in case it is displayed with elements that are removed\r\n                        // after update.\r\n                        me.tooltip.initialize();\r\n\r\n                        // Last active contains items that were previously in the tooltip.\r\n                        // When we reset the tooltip, we need to clear it\r\n                        me.lastActive = [];\r\n\r\n                        // Do this before render so that any plugins that need final scale updates can use it\r\n                        plugins.notify(me, 'afterUpdate');\r\n\r\n                        if (me._bufferedRender) {\r\n                            me._bufferedRequest = {\r\n                                duration: config.duration,\r\n                                easing: config.easing,\r\n                                lazy: config.lazy\r\n                            };\r\n                        } else {\r\n                            me.render(config);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\r\n                     * hook, in which case, plugins will not be called on `afterLayout`.\r\n                     * @private\r\n                     */\r\n                    updateLayout: function() {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeLayout') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        layouts.update(this, this.width, this.height);\r\n\r\n                        /**\r\n                         * Provided for backward compatibility, use `afterLayout` instead.\r\n                         * @method IPlugin#afterScaleUpdate\r\n                         * @deprecated since version 2.5.0\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        plugins.notify(me, 'afterScaleUpdate');\r\n                        plugins.notify(me, 'afterLayout');\r\n                    },\r\n\r\n                    /**\r\n                     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\r\n                     * @private\r\n                     */\r\n                    updateDatasets: function() {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                            me.updateDataset(i);\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterDatasetsUpdate');\r\n                    },\r\n\r\n                    /**\r\n                     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\r\n                     * @private\r\n                     */\r\n                    updateDataset: function(index) {\r\n                        var me = this;\r\n                        var meta = me.getDatasetMeta(index);\r\n                        var args = {\r\n                            meta: meta,\r\n                            index: index\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        meta.controller.update();\r\n\r\n                        plugins.notify(me, 'afterDatasetUpdate', [args]);\r\n                    },\r\n\r\n                    render: function(config) {\r\n                        var me = this;\r\n\r\n                        if (!config || typeof config !== 'object') {\r\n                            // backwards compatibility\r\n                            config = {\r\n                                duration: config,\r\n                                lazy: arguments[1]\r\n                            };\r\n                        }\r\n\r\n                        var duration = config.duration;\r\n                        var lazy = config.lazy;\r\n\r\n                        if (plugins.notify(me, 'beforeRender') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        var animationOptions = me.options.animation;\r\n                        var onComplete = function(animation) {\r\n                            plugins.notify(me, 'afterRender');\r\n                            helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\r\n                        };\r\n\r\n                        if (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\r\n                            var animation = new Chart.Animation({\r\n                                numSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\r\n                                easing: config.easing || animationOptions.easing,\r\n\r\n                                render: function(chart, animationObject) {\r\n                                    var easingFunction = helpers.easing.effects[animationObject.easing];\r\n                                    var currentStep = animationObject.currentStep;\r\n                                    var stepDecimal = currentStep / animationObject.numSteps;\r\n\r\n                                    chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\r\n                                },\r\n\r\n                                onAnimationProgress: animationOptions.onProgress,\r\n                                onAnimationComplete: onComplete\r\n                            });\r\n\r\n                            Chart.animationService.addAnimation(me, animation, duration, lazy);\r\n                        } else {\r\n                            me.draw();\r\n\r\n                            // See https://github.com/chartjs/Chart.js/issues/3781\r\n                            onComplete(new Chart.Animation({ numSteps: 0, chart: me }));\r\n                        }\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    draw: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        me.clear();\r\n\r\n                        if (helpers.isNullOrUndef(easingValue)) {\r\n                            easingValue = 1;\r\n                        }\r\n\r\n                        me.transition(easingValue);\r\n\r\n                        if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Draw all the scales\r\n                        helpers.each(me.boxes, function(box) {\r\n                            box.draw(me.chartArea);\r\n                        }, me);\r\n\r\n                        if (me.scale) {\r\n                            me.scale.draw();\r\n                        }\r\n\r\n                        me.drawDatasets(easingValue);\r\n                        me._drawTooltip(easingValue);\r\n\r\n                        plugins.notify(me, 'afterDraw', [easingValue]);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    transition: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\r\n                            if (me.isDatasetVisible(i)) {\r\n                                me.getDatasetMeta(i).controller.transition(easingValue);\r\n                            }\r\n                        }\r\n\r\n                        me.tooltip.transition(easingValue);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\r\n                     * @private\r\n                     */\r\n                    drawDatasets: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Draw datasets reversed to support proper line stacking\r\n                        for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\r\n                            if (me.isDatasetVisible(i)) {\r\n                                me.drawDataset(i, easingValue);\r\n                            }\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\r\n                     * @private\r\n                     */\r\n                    drawDataset: function(index, easingValue) {\r\n                        var me = this;\r\n                        var meta = me.getDatasetMeta(index);\r\n                        var args = {\r\n                            meta: meta,\r\n                            index: index,\r\n                            easingValue: easingValue\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        meta.controller.draw(easingValue);\r\n\r\n                        plugins.notify(me, 'afterDatasetDraw', [args]);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\r\n                     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\r\n                     * @private\r\n                     */\r\n                    _drawTooltip: function(easingValue) {\r\n                        var me = this;\r\n                        var tooltip = me.tooltip;\r\n                        var args = {\r\n                            tooltip: tooltip,\r\n                            easingValue: easingValue\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        tooltip.draw();\r\n\r\n                        plugins.notify(me, 'afterTooltipDraw', [args]);\r\n                    },\r\n\r\n                    // Get the single element that was clicked on\r\n                    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\r\n                    getElementAtEvent: function(e) {\r\n                        return Interaction.modes.single(this, e);\r\n                    },\r\n\r\n                    getElementsAtEvent: function(e) {\r\n                        return Interaction.modes.label(this, e, { intersect: true });\r\n                    },\r\n\r\n                    getElementsAtXAxis: function(e) {\r\n                        return Interaction.modes['x-axis'](this, e, { intersect: true });\r\n                    },\r\n\r\n                    getElementsAtEventForMode: function(e, mode, options) {\r\n                        var method = Interaction.modes[mode];\r\n                        if (typeof method === 'function') {\r\n                            return method(this, e, options);\r\n                        }\r\n\r\n                        return [];\r\n                    },\r\n\r\n                    getDatasetAtEvent: function(e) {\r\n                        return Interaction.modes.dataset(this, e, { intersect: true });\r\n                    },\r\n\r\n                    getDatasetMeta: function(datasetIndex) {\r\n                        var me = this;\r\n                        var dataset = me.data.datasets[datasetIndex];\r\n                        if (!dataset._meta) {\r\n                            dataset._meta = {};\r\n                        }\r\n\r\n                        var meta = dataset._meta[me.id];\r\n                        if (!meta) {\r\n                            meta = dataset._meta[me.id] = {\r\n                                type: null,\r\n                                data: [],\r\n                                dataset: null,\r\n                                controller: null,\r\n                                hidden: null,\t\t\t// See isDatasetVisible() comment\r\n                                xAxisID: null,\r\n                                yAxisID: null\r\n                            };\r\n                        }\r\n\r\n                        return meta;\r\n                    },\r\n\r\n                    getVisibleDatasetCount: function() {\r\n                        var count = 0;\r\n                        for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n                            if (this.isDatasetVisible(i)) {\r\n                                count++;\r\n                            }\r\n                        }\r\n                        return count;\r\n                    },\r\n\r\n                    isDatasetVisible: function(datasetIndex) {\r\n                        var meta = this.getDatasetMeta(datasetIndex);\r\n\r\n                        // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\r\n                        // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\r\n                        return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\r\n                    },\r\n\r\n                    generateLegend: function() {\r\n                        return this.options.legendCallback(this);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    destroyDatasetMeta: function(datasetIndex) {\r\n                        var id = this.id;\r\n                        var dataset = this.data.datasets[datasetIndex];\r\n                        var meta = dataset._meta && dataset._meta[id];\r\n\r\n                        if (meta) {\r\n                            meta.controller.destroy();\r\n                            delete dataset._meta[id];\r\n                        }\r\n                    },\r\n\r\n                    destroy: function() {\r\n                        var me = this;\r\n                        var canvas = me.canvas;\r\n                        var i, ilen;\r\n\r\n                        me.stop();\r\n\r\n                        // dataset controllers need to cleanup associated data\r\n                        for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                            me.destroyDatasetMeta(i);\r\n                        }\r\n\r\n                        if (canvas) {\r\n                            me.unbindEvents();\r\n                            helpers.canvas.clear(me);\r\n                            platform.releaseContext(me.ctx);\r\n                            me.canvas = null;\r\n                            me.ctx = null;\r\n                        }\r\n\r\n                        plugins.notify(me, 'destroy');\r\n\r\n                        delete Chart.instances[me.id];\r\n                    },\r\n\r\n                    toBase64Image: function() {\r\n                        return this.canvas.toDataURL.apply(this.canvas, arguments);\r\n                    },\r\n\r\n                    initToolTip: function() {\r\n                        var me = this;\r\n                        me.tooltip = new Chart.Tooltip({\r\n                            _chart: me,\r\n                            _chartInstance: me, // deprecated, backward compatibility\r\n                            _data: me.data,\r\n                            _options: me.options.tooltips\r\n                        }, me);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    bindEvents: function() {\r\n                        var me = this;\r\n                        var listeners = me._listeners = {};\r\n                        var listener = function() {\r\n                            me.eventHandler.apply(me, arguments);\r\n                        };\r\n\r\n                        helpers.each(me.options.events, function(type) {\r\n                            platform.addEventListener(me, type, listener);\r\n                            listeners[type] = listener;\r\n                        });\r\n\r\n                        // Elements used to detect size change should not be injected for non responsive charts.\r\n                        // See https://github.com/chartjs/Chart.js/issues/2210\r\n                        if (me.options.responsive) {\r\n                            listener = function() {\r\n                                me.resize();\r\n                            };\r\n\r\n                            platform.addEventListener(me, 'resize', listener);\r\n                            listeners.resize = listener;\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    unbindEvents: function() {\r\n                        var me = this;\r\n                        var listeners = me._listeners;\r\n                        if (!listeners) {\r\n                            return;\r\n                        }\r\n\r\n                        delete me._listeners;\r\n                        helpers.each(listeners, function(listener, type) {\r\n                            platform.removeEventListener(me, type, listener);\r\n                        });\r\n                    },\r\n\r\n                    updateHoverStyle: function(elements, mode, enabled) {\r\n                        var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\r\n                        var element, i, ilen;\r\n\r\n                        for (i = 0, ilen = elements.length; i < ilen; ++i) {\r\n                            element = elements[i];\r\n                            if (element) {\r\n                                this.getDatasetMeta(element._datasetIndex).controller[method](element);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    eventHandler: function(e) {\r\n                        var me = this;\r\n                        var tooltip = me.tooltip;\r\n\r\n                        if (plugins.notify(me, 'beforeEvent', [e]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Buffer any update calls so that renders do not occur\r\n                        me._bufferedRender = true;\r\n                        me._bufferedRequest = null;\r\n\r\n                        var changed = me.handleEvent(e);\r\n                        // for smooth tooltip animations issue #4989\r\n                        // the tooltip should be the source of change\r\n                        // Animation check workaround:\r\n                        // tooltip._start will be null when tooltip isn't animating\r\n                        if (tooltip) {\r\n                            changed = tooltip._start\r\n                                ? tooltip.handleEvent(e)\r\n                                : changed | tooltip.handleEvent(e);\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterEvent', [e]);\r\n\r\n                        var bufferedRequest = me._bufferedRequest;\r\n                        if (bufferedRequest) {\r\n                            // If we have an update that was triggered, we need to do a normal render\r\n                            me.render(bufferedRequest);\r\n                        } else if (changed && !me.animating) {\r\n                            // If entering, leaving, or changing elements, animate the change via pivot\r\n                            me.stop();\r\n\r\n                            // We only need to render at this point. Updating will cause scales to be\r\n                            // recomputed generating flicker & using more memory than necessary.\r\n                            me.render(me.options.hover.animationDuration, true);\r\n                        }\r\n\r\n                        me._bufferedRender = false;\r\n                        me._bufferedRequest = null;\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    /**\r\n                     * Handle an event\r\n                     * @private\r\n                     * @param {IEvent} event the event to handle\r\n                     * @return {Boolean} true if the chart needs to re-render\r\n                     */\r\n                    handleEvent: function(e) {\r\n                        var me = this;\r\n                        var options = me.options || {};\r\n                        var hoverOptions = options.hover;\r\n                        var changed = false;\r\n\r\n                        me.lastActive = me.lastActive || [];\r\n\r\n                        // Find Active Elements for hover and tooltips\r\n                        if (e.type === 'mouseout') {\r\n                            me.active = [];\r\n                        } else {\r\n                            me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\r\n                        }\r\n\r\n                        // Invoke onHover hook\r\n                        // Need to call with native event here to not break backwards compatibility\r\n                        helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\r\n\r\n                        if (e.type === 'mouseup' || e.type === 'click') {\r\n                            if (options.onClick) {\r\n                                // Use e.native here for backwards compatibility\r\n                                options.onClick.call(me, e.native, me.active);\r\n                            }\r\n                        }\r\n\r\n                        // Remove styling for last active (even if it may still be active)\r\n                        if (me.lastActive.length) {\r\n                            me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\r\n                        }\r\n\r\n                        // Built in hover styling\r\n                        if (me.active.length && hoverOptions.mode) {\r\n                            me.updateHoverStyle(me.active, hoverOptions.mode, true);\r\n                        }\r\n\r\n                        changed = !helpers.arrayEquals(me.active, me.lastActive);\r\n\r\n                        // Remember Last Actives\r\n                        me.lastActive = me.active;\r\n\r\n                        return changed;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart instead.\r\n                 * @class Chart.Controller\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 * @private\r\n                 */\r\n                Chart.Controller = Chart;\r\n            };\r\n\r\n        }, { \"16\": 16, \"19\": 19, \"21\": 21, \"22\": 22, \"36\": 36, \"39\": 39 }], 15: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\r\n\r\n                /**\r\n                 * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\r\n                 * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\r\n                 * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\r\n                 */\r\n                function listenArrayEvents(array, listener) {\r\n                    if (array._chartjs) {\r\n                        array._chartjs.listeners.push(listener);\r\n                        return;\r\n                    }\r\n\r\n                    Object.defineProperty(array, '_chartjs', {\r\n                        configurable: true,\r\n                        enumerable: false,\r\n                        value: {\r\n                            listeners: [listener]\r\n                        }\r\n                    });\r\n\r\n                    arrayEvents.forEach(function(key) {\r\n                        var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\r\n                        var base = array[key];\r\n\r\n                        Object.defineProperty(array, key, {\r\n                            configurable: true,\r\n                            enumerable: false,\r\n                            value: function() {\r\n                                var args = Array.prototype.slice.call(arguments);\r\n                                var res = base.apply(this, args);\r\n\r\n                                helpers.each(array._chartjs.listeners, function(object) {\r\n                                    if (typeof object[method] === 'function') {\r\n                                        object[method].apply(object, args);\r\n                                    }\r\n                                });\r\n\r\n                                return res;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Removes the given array event listener and cleanup extra attached properties (such as\r\n                 * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\r\n                 */\r\n                function unlistenArrayEvents(array, listener) {\r\n                    var stub = array._chartjs;\r\n                    if (!stub) {\r\n                        return;\r\n                    }\r\n\r\n                    var listeners = stub.listeners;\r\n                    var index = listeners.indexOf(listener);\r\n                    if (index !== -1) {\r\n                        listeners.splice(index, 1);\r\n                    }\r\n\r\n                    if (listeners.length > 0) {\r\n                        return;\r\n                    }\r\n\r\n                    arrayEvents.forEach(function(key) {\r\n                        delete array[key];\r\n                    });\r\n\r\n                    delete array._chartjs;\r\n                }\r\n\r\n                // Base class for all dataset controllers (line, bar, etc)\r\n                Chart.DatasetController = function(chart, datasetIndex) {\r\n                    this.initialize(chart, datasetIndex);\r\n                };\r\n\r\n                helpers.extend(Chart.DatasetController.prototype, {\r\n\r\n                    /**\r\n                     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\r\n                     * @type {Chart.core.element}\r\n                     */\r\n                    datasetElementType: null,\r\n\r\n                    /**\r\n                     * Element type used to generate a meta data (e.g. Chart.element.Point).\r\n                     * @type {Chart.core.element}\r\n                     */\r\n                    dataElementType: null,\r\n\r\n                    initialize: function(chart, datasetIndex) {\r\n                        var me = this;\r\n                        me.chart = chart;\r\n                        me.index = datasetIndex;\r\n                        me.linkScales();\r\n                        me.addElements();\r\n                    },\r\n\r\n                    updateIndex: function(datasetIndex) {\r\n                        this.index = datasetIndex;\r\n                    },\r\n\r\n                    linkScales: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var dataset = me.getDataset();\r\n\r\n                        if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\r\n                            meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\r\n                        }\r\n                        if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\r\n                            meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\r\n                        }\r\n                    },\r\n\r\n                    getDataset: function() {\r\n                        return this.chart.data.datasets[this.index];\r\n                    },\r\n\r\n                    getMeta: function() {\r\n                        return this.chart.getDatasetMeta(this.index);\r\n                    },\r\n\r\n                    getScaleForId: function(scaleID) {\r\n                        return this.chart.scales[scaleID];\r\n                    },\r\n\r\n                    reset: function() {\r\n                        this.update(true);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    destroy: function() {\r\n                        if (this._data) {\r\n                            unlistenArrayEvents(this._data, this);\r\n                        }\r\n                    },\r\n\r\n                    createMetaDataset: function() {\r\n                        var me = this;\r\n                        var type = me.datasetElementType;\r\n                        return type && new type({\r\n                            _chart: me.chart,\r\n                            _datasetIndex: me.index\r\n                        });\r\n                    },\r\n\r\n                    createMetaData: function(index) {\r\n                        var me = this;\r\n                        var type = me.dataElementType;\r\n                        return type && new type({\r\n                            _chart: me.chart,\r\n                            _datasetIndex: me.index,\r\n                            _index: index\r\n                        });\r\n                    },\r\n\r\n                    addElements: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var data = me.getDataset().data || [];\r\n                        var metaData = meta.data;\r\n                        var i, ilen;\r\n\r\n                        for (i = 0, ilen = data.length; i < ilen; ++i) {\r\n                            metaData[i] = metaData[i] || me.createMetaData(i);\r\n                        }\r\n\r\n                        meta.dataset = meta.dataset || me.createMetaDataset();\r\n                    },\r\n\r\n                    addElementAndReset: function(index) {\r\n                        var element = this.createMetaData(index);\r\n                        this.getMeta().data.splice(index, 0, element);\r\n                        this.updateElement(element, index, true);\r\n                    },\r\n\r\n                    buildOrUpdateElements: function() {\r\n                        var me = this;\r\n                        var dataset = me.getDataset();\r\n                        var data = dataset.data || (dataset.data = []);\r\n\r\n                        // In order to correctly handle data addition/deletion animation (an thus simulate\r\n                        // real-time charts), we need to monitor these data modifications and synchronize\r\n                        // the internal meta data accordingly.\r\n                        if (me._data !== data) {\r\n                            if (me._data) {\r\n                                // This case happens when the user replaced the data array instance.\r\n                                unlistenArrayEvents(me._data, me);\r\n                            }\r\n\r\n                            listenArrayEvents(data, me);\r\n                            me._data = data;\r\n                        }\r\n\r\n                        // Re-sync meta data in case the user replaced the data array or if we missed\r\n                        // any updates and so make sure that we handle number of datapoints changing.\r\n                        me.resyncElements();\r\n                    },\r\n\r\n                    update: helpers.noop,\r\n\r\n                    transition: function(easingValue) {\r\n                        var meta = this.getMeta();\r\n                        var elements = meta.data || [];\r\n                        var ilen = elements.length;\r\n                        var i = 0;\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            elements[i].transition(easingValue);\r\n                        }\r\n\r\n                        if (meta.dataset) {\r\n                            meta.dataset.transition(easingValue);\r\n                        }\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var meta = this.getMeta();\r\n                        var elements = meta.data || [];\r\n                        var ilen = elements.length;\r\n                        var i = 0;\r\n\r\n                        if (meta.dataset) {\r\n                            meta.dataset.draw();\r\n                        }\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            elements[i].draw();\r\n                        }\r\n                    },\r\n\r\n                    removeHoverStyle: function(element, elementOpts) {\r\n                        var dataset = this.chart.data.datasets[element._datasetIndex];\r\n                        var index = element._index;\r\n                        var custom = element.custom || {};\r\n                        var valueOrDefault = helpers.valueAtIndexOrDefault;\r\n                        var model = element._model;\r\n\r\n                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\r\n                        model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\r\n                        model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\r\n                    },\r\n\r\n                    setHoverStyle: function(element) {\r\n                        var dataset = this.chart.data.datasets[element._datasetIndex];\r\n                        var index = element._index;\r\n                        var custom = element.custom || {};\r\n                        var valueOrDefault = helpers.valueAtIndexOrDefault;\r\n                        var getHoverColor = helpers.getHoverColor;\r\n                        var model = element._model;\r\n\r\n                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    resyncElements: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var data = me.getDataset().data;\r\n                        var numMeta = meta.data.length;\r\n                        var numData = data.length;\r\n\r\n                        if (numData < numMeta) {\r\n                            meta.data.splice(numData, numMeta - numData);\r\n                        } else if (numData > numMeta) {\r\n                            me.insertElements(numMeta, numData - numMeta);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    insertElements: function(start, count) {\r\n                        for (var i = 0; i < count; ++i) {\r\n                            this.addElementAndReset(start + i);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataPush: function() {\r\n                        this.insertElements(this.getDataset().data.length - 1, arguments.length);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataPop: function() {\r\n                        this.getMeta().data.pop();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataShift: function() {\r\n                        this.getMeta().data.shift();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataSplice: function(start, count) {\r\n                        this.getMeta().data.splice(start, count);\r\n                        this.insertElements(start, arguments.length - 2);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataUnshift: function() {\r\n                        this.insertElements(0, arguments.length);\r\n                    }\r\n                });\r\n\r\n                Chart.DatasetController.extend = helpers.inherits;\r\n            };\r\n\r\n        }, { \"36\": 36 }], 16: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            module.exports = {\r\n                /**\r\n                 * @private\r\n                 */\r\n                _set: function(scope, values) {\r\n                    return helpers.merge(this[scope] || (this[scope] = {}), values);\r\n                }\r\n            };\r\n\r\n        }, { \"36\": 36 }], 17: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var color = require(2);\r\n            var helpers = require(36);\r\n\r\n            function interpolate(start, view, model, ease) {\r\n                var keys = Object.keys(model);\r\n                var i, ilen, key, actual, origin, target, type, c0, c1;\r\n\r\n                for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n                    key = keys[i];\r\n\r\n                    target = model[key];\r\n\r\n                    // if a value is added to the model after pivot() has been called, the view\r\n                    // doesn't contain it, so let's initialize the view to the target value.\r\n                    if (!view.hasOwnProperty(key)) {\r\n                        view[key] = target;\r\n                    }\r\n\r\n                    actual = view[key];\r\n\r\n                    if (actual === target || key[0] === '_') {\r\n                        continue;\r\n                    }\r\n\r\n                    if (!start.hasOwnProperty(key)) {\r\n                        start[key] = actual;\r\n                    }\r\n\r\n                    origin = start[key];\r\n\r\n                    type = typeof target;\r\n\r\n                    if (type === typeof origin) {\r\n                        if (type === 'string') {\r\n                            c0 = color(origin);\r\n                            if (c0.valid) {\r\n                                c1 = color(target);\r\n                                if (c1.valid) {\r\n                                    view[key] = c1.mix(c0, ease).rgbString();\r\n                                    continue;\r\n                                }\r\n                            }\r\n                        } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\r\n                            view[key] = origin + (target - origin) * ease;\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    view[key] = target;\r\n                }\r\n            }\r\n\r\n            var Element = function(configuration) {\r\n                helpers.extend(this, configuration);\r\n                this.initialize.apply(this, arguments);\r\n            };\r\n\r\n            helpers.extend(Element.prototype, {\r\n\r\n                initialize: function() {\r\n                    this.hidden = false;\r\n                },\r\n\r\n                pivot: function() {\r\n                    var me = this;\r\n                    if (!me._view) {\r\n                        me._view = helpers.clone(me._model);\r\n                    }\r\n                    me._start = {};\r\n                    return me;\r\n                },\r\n\r\n                transition: function(ease) {\r\n                    var me = this;\r\n                    var model = me._model;\r\n                    var start = me._start;\r\n                    var view = me._view;\r\n\r\n                    // No animation -> No Transition\r\n                    if (!model || ease === 1) {\r\n                        me._view = model;\r\n                        me._start = null;\r\n                        return me;\r\n                    }\r\n\r\n                    if (!view) {\r\n                        view = me._view = {};\r\n                    }\r\n\r\n                    if (!start) {\r\n                        start = me._start = {};\r\n                    }\r\n\r\n                    interpolate(start, view, model, ease);\r\n\r\n                    return me;\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    return {\r\n                        x: this._model.x,\r\n                        y: this._model.y\r\n                    };\r\n                },\r\n\r\n                hasValue: function() {\r\n                    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\r\n                }\r\n            });\r\n\r\n            Element.extend = helpers.inherits;\r\n\r\n            module.exports = Element;\r\n\r\n        }, { \"2\": 2, \"36\": 36 }], 18: [function(require, module, exports) {\r\n            /* global window: false */\r\n            /* global document: false */\r\n            'use strict';\r\n\r\n            var color = require(2);\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                // -- Basic js utility methods\r\n\r\n                helpers.configMerge = function(/* objects ... */) {\r\n                    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\r\n                        merger: function(key, target, source, options) {\r\n                            var tval = target[key] || {};\r\n                            var sval = source[key];\r\n\r\n                            if (key === 'scales') {\r\n                                // scale config merging is complex. Add our own function here for that\r\n                                target[key] = helpers.scaleMerge(tval, sval);\r\n                            } else if (key === 'scale') {\r\n                                // used in polar area & radar charts since there is only one scale\r\n                                target[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\r\n                            } else {\r\n                                helpers._merger(key, target, source, options);\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n\r\n                helpers.scaleMerge = function(/* objects ... */) {\r\n                    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\r\n                        merger: function(key, target, source, options) {\r\n                            if (key === 'xAxes' || key === 'yAxes') {\r\n                                var slen = source[key].length;\r\n                                var i, type, scale;\r\n\r\n                                if (!target[key]) {\r\n                                    target[key] = [];\r\n                                }\r\n\r\n                                for (i = 0; i < slen; ++i) {\r\n                                    scale = source[key][i];\r\n                                    type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\r\n\r\n                                    if (i >= target[key].length) {\r\n                                        target[key].push({});\r\n                                    }\r\n\r\n                                    if (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\r\n                                        // new/untyped scale or type changed: let's apply the new defaults\r\n                                        // then merge source scale to correctly overwrite the defaults.\r\n                                        helpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\r\n                                    } else {\r\n                                        // scales type are the same\r\n                                        helpers.merge(target[key][i], scale);\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                helpers._merger(key, target, source, options);\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n\r\n                helpers.where = function(collection, filterCallback) {\r\n                    if (helpers.isArray(collection) && Array.prototype.filter) {\r\n                        return collection.filter(filterCallback);\r\n                    }\r\n                    var filtered = [];\r\n\r\n                    helpers.each(collection, function(item) {\r\n                        if (filterCallback(item)) {\r\n                            filtered.push(item);\r\n                        }\r\n                    });\r\n\r\n                    return filtered;\r\n                };\r\n                helpers.findIndex = Array.prototype.findIndex ?\r\n                    function(array, callback, scope) {\r\n                        return array.findIndex(callback, scope);\r\n                    } :\r\n                    function(array, callback, scope) {\r\n                        scope = scope === undefined ? array : scope;\r\n                        for (var i = 0, ilen = array.length; i < ilen; ++i) {\r\n                            if (callback.call(scope, array[i], i, array)) {\r\n                                return i;\r\n                            }\r\n                        }\r\n                        return -1;\r\n                    };\r\n                helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n                    // Default to start of the array\r\n                    if (helpers.isNullOrUndef(startIndex)) {\r\n                        startIndex = -1;\r\n                    }\r\n                    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\r\n                        var currentItem = arrayToSearch[i];\r\n                        if (filterCallback(currentItem)) {\r\n                            return currentItem;\r\n                        }\r\n                    }\r\n                };\r\n                helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n                    // Default to end of the array\r\n                    if (helpers.isNullOrUndef(startIndex)) {\r\n                        startIndex = arrayToSearch.length;\r\n                    }\r\n                    for (var i = startIndex - 1; i >= 0; i--) {\r\n                        var currentItem = arrayToSearch[i];\r\n                        if (filterCallback(currentItem)) {\r\n                            return currentItem;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // -- Math methods\r\n                helpers.isNumber = function(n) {\r\n                    return !isNaN(parseFloat(n)) && isFinite(n);\r\n                };\r\n                helpers.almostEquals = function(x, y, epsilon) {\r\n                    return Math.abs(x - y) < epsilon;\r\n                };\r\n                helpers.almostWhole = function(x, epsilon) {\r\n                    var rounded = Math.round(x);\r\n                    return (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\r\n                };\r\n                helpers.max = function(array) {\r\n                    return array.reduce(function(max, value) {\r\n                        if (!isNaN(value)) {\r\n                            return Math.max(max, value);\r\n                        }\r\n                        return max;\r\n                    }, Number.NEGATIVE_INFINITY);\r\n                };\r\n                helpers.min = function(array) {\r\n                    return array.reduce(function(min, value) {\r\n                        if (!isNaN(value)) {\r\n                            return Math.min(min, value);\r\n                        }\r\n                        return min;\r\n                    }, Number.POSITIVE_INFINITY);\r\n                };\r\n                helpers.sign = Math.sign ?\r\n                    function(x) {\r\n                        return Math.sign(x);\r\n                    } :\r\n                    function(x) {\r\n                        x = +x; // convert to a number\r\n                        if (x === 0 || isNaN(x)) {\r\n                            return x;\r\n                        }\r\n                        return x > 0 ? 1 : -1;\r\n                    };\r\n                helpers.log10 = Math.log10 ?\r\n                    function(x) {\r\n                        return Math.log10(x);\r\n                    } :\r\n                    function(x) {\r\n                        var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\r\n                        // Check for whole powers of 10,\r\n                        // which due to floating point rounding error should be corrected.\r\n                        var powerOf10 = Math.round(exponent);\r\n                        var isPowerOf10 = x === Math.pow(10, powerOf10);\r\n\r\n                        return isPowerOf10 ? powerOf10 : exponent;\r\n                    };\r\n                helpers.toRadians = function(degrees) {\r\n                    return degrees * (Math.PI / 180);\r\n                };\r\n                helpers.toDegrees = function(radians) {\r\n                    return radians * (180 / Math.PI);\r\n                };\r\n                // Gets the angle from vertical upright to the point about a centre.\r\n                helpers.getAngleFromPoint = function(centrePoint, anglePoint) {\r\n                    var distanceFromXCenter = anglePoint.x - centrePoint.x;\r\n                    var distanceFromYCenter = anglePoint.y - centrePoint.y;\r\n                    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n\r\n                    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n\r\n                    if (angle < (-0.5 * Math.PI)) {\r\n                        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\r\n                    }\r\n\r\n                    return {\r\n                        angle: angle,\r\n                        distance: radialDistanceFromCenter\r\n                    };\r\n                };\r\n                helpers.distanceBetweenPoints = function(pt1, pt2) {\r\n                    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\r\n                };\r\n                helpers.aliasPixel = function(pixelWidth) {\r\n                    return (pixelWidth % 2 === 0) ? 0 : 0.5;\r\n                };\r\n                helpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\r\n                    // Props to Rob Spencer at scaled innovation for his post on splining between points\r\n                    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\r\n\r\n                    // This function must also respect \"skipped\" points\r\n\r\n                    var previous = firstPoint.skip ? middlePoint : firstPoint;\r\n                    var current = middlePoint;\r\n                    var next = afterPoint.skip ? middlePoint : afterPoint;\r\n\r\n                    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\r\n                    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\r\n\r\n                    var s01 = d01 / (d01 + d12);\r\n                    var s12 = d12 / (d01 + d12);\r\n\r\n                    // If all points are the same, s01 & s02 will be inf\r\n                    s01 = isNaN(s01) ? 0 : s01;\r\n                    s12 = isNaN(s12) ? 0 : s12;\r\n\r\n                    var fa = t * s01; // scaling factor for triangle Ta\r\n                    var fb = t * s12;\r\n\r\n                    return {\r\n                        previous: {\r\n                            x: current.x - fa * (next.x - previous.x),\r\n                            y: current.y - fa * (next.y - previous.y)\r\n                        },\r\n                        next: {\r\n                            x: current.x + fb * (next.x - previous.x),\r\n                            y: current.y + fb * (next.y - previous.y)\r\n                        }\r\n                    };\r\n                };\r\n                helpers.EPSILON = Number.EPSILON || 1e-14;\r\n                helpers.splineCurveMonotone = function(points) {\r\n                    // This function calculates Bézier control points in a similar way than |splineCurve|,\r\n                    // but preserves monotonicity of the provided data and ensures no local extremums are added\r\n                    // between the dataset discrete points due to the interpolation.\r\n                    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\r\n\r\n                    var pointsWithTangents = (points || []).map(function(point) {\r\n                        return {\r\n                            model: point._model,\r\n                            deltaK: 0,\r\n                            mK: 0\r\n                        };\r\n                    });\r\n\r\n                    // Calculate slopes (deltaK) and initialize tangents (mK)\r\n                    var pointsLen = pointsWithTangents.length;\r\n                    var i, pointBefore, pointCurrent, pointAfter;\r\n                    for (i = 0; i < pointsLen; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        if (pointCurrent.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n                        if (pointAfter && !pointAfter.model.skip) {\r\n                            var slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\r\n\r\n                            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\r\n                            pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\r\n                        }\r\n\r\n                        if (!pointBefore || pointBefore.model.skip) {\r\n                            pointCurrent.mK = pointCurrent.deltaK;\r\n                        } else if (!pointAfter || pointAfter.model.skip) {\r\n                            pointCurrent.mK = pointBefore.deltaK;\r\n                        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\r\n                            pointCurrent.mK = 0;\r\n                        } else {\r\n                            pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\r\n                        }\r\n                    }\r\n\r\n                    // Adjust tangents to ensure monotonic properties\r\n                    var alphaK, betaK, tauK, squaredMagnitude;\r\n                    for (i = 0; i < pointsLen - 1; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        pointAfter = pointsWithTangents[i + 1];\r\n                        if (pointCurrent.model.skip || pointAfter.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\r\n                            pointCurrent.mK = pointAfter.mK = 0;\r\n                            continue;\r\n                        }\r\n\r\n                        alphaK = pointCurrent.mK / pointCurrent.deltaK;\r\n                        betaK = pointAfter.mK / pointCurrent.deltaK;\r\n                        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\r\n                        if (squaredMagnitude <= 9) {\r\n                            continue;\r\n                        }\r\n\r\n                        tauK = 3 / Math.sqrt(squaredMagnitude);\r\n                        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\r\n                        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\r\n                    }\r\n\r\n                    // Compute control points\r\n                    var deltaX;\r\n                    for (i = 0; i < pointsLen; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        if (pointCurrent.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n                        if (pointBefore && !pointBefore.model.skip) {\r\n                            deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\r\n                            pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\r\n                            pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\r\n                        }\r\n                        if (pointAfter && !pointAfter.model.skip) {\r\n                            deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\r\n                            pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\r\n                            pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\r\n                        }\r\n                    }\r\n                };\r\n                helpers.nextItem = function(collection, index, loop) {\r\n                    if (loop) {\r\n                        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\r\n                    }\r\n                    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\r\n                };\r\n                helpers.previousItem = function(collection, index, loop) {\r\n                    if (loop) {\r\n                        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\r\n                    }\r\n                    return index <= 0 ? collection[0] : collection[index - 1];\r\n                };\r\n                // Implementation of the nice number algorithm used in determining where axis labels will go\r\n                helpers.niceNum = function(range, round) {\r\n                    var exponent = Math.floor(helpers.log10(range));\r\n                    var fraction = range / Math.pow(10, exponent);\r\n                    var niceFraction;\r\n\r\n                    if (round) {\r\n                        if (fraction < 1.5) {\r\n                            niceFraction = 1;\r\n                        } else if (fraction < 3) {\r\n                            niceFraction = 2;\r\n                        } else if (fraction < 7) {\r\n                            niceFraction = 5;\r\n                        } else {\r\n                            niceFraction = 10;\r\n                        }\r\n                    } else if (fraction <= 1.0) {\r\n                        niceFraction = 1;\r\n                    } else if (fraction <= 2) {\r\n                        niceFraction = 2;\r\n                    } else if (fraction <= 5) {\r\n                        niceFraction = 5;\r\n                    } else {\r\n                        niceFraction = 10;\r\n                    }\r\n\r\n                    return niceFraction * Math.pow(10, exponent);\r\n                };\r\n                // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n                helpers.requestAnimFrame = (function() {\r\n                    if (typeof window === 'undefined') {\r\n                        return function(callback) {\r\n                            callback();\r\n                        };\r\n                    }\r\n                    return window.requestAnimationFrame ||\r\n                        window.webkitRequestAnimationFrame ||\r\n                        window.mozRequestAnimationFrame ||\r\n                        window.oRequestAnimationFrame ||\r\n                        window.msRequestAnimationFrame ||\r\n                        function(callback) {\r\n                            return window.setTimeout(callback, 1000 / 60);\r\n                        };\r\n                }());\r\n                // -- DOM methods\r\n                helpers.getRelativePosition = function(evt, chart) {\r\n                    var mouseX, mouseY;\r\n                    var e = evt.originalEvent || evt;\r\n                    var canvas = evt.currentTarget || evt.srcElement;\r\n                    var boundingRect = canvas.getBoundingClientRect();\r\n\r\n                    var touches = e.touches;\r\n                    if (touches && touches.length > 0) {\r\n                        mouseX = touches[0].clientX;\r\n                        mouseY = touches[0].clientY;\r\n\r\n                    } else {\r\n                        mouseX = e.clientX;\r\n                        mouseY = e.clientY;\r\n                    }\r\n\r\n                    // Scale mouse coordinates into canvas coordinates\r\n                    // by following the pattern laid out by 'jerryj' in the comments of\r\n                    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\r\n                    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\r\n                    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\r\n                    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\r\n                    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\r\n                    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\r\n                    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\r\n\r\n                    // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\r\n                    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\r\n                    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\r\n                    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\r\n\r\n                    return {\r\n                        x: mouseX,\r\n                        y: mouseY\r\n                    };\r\n\r\n                };\r\n\r\n                // Private helper function to convert max-width/max-height values that may be percentages into a number\r\n                function parseMaxStyle(styleValue, node, parentProperty) {\r\n                    var valueInPixels;\r\n                    if (typeof styleValue === 'string') {\r\n                        valueInPixels = parseInt(styleValue, 10);\r\n\r\n                        if (styleValue.indexOf('%') !== -1) {\r\n                            // percentage * size in dimension\r\n                            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\r\n                        }\r\n                    } else {\r\n                        valueInPixels = styleValue;\r\n                    }\r\n\r\n                    return valueInPixels;\r\n                }\r\n\r\n                /**\r\n                 * Returns if the given value contains an effective constraint.\r\n                 * @private\r\n                 */\r\n                function isConstrainedValue(value) {\r\n                    return value !== undefined && value !== null && value !== 'none';\r\n                }\r\n\r\n                // Private helper to get a constraint dimension\r\n                // @param domNode : the node to check the constraint on\r\n                // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\r\n                // @param percentageProperty : property of parent to use when calculating width as a percentage\r\n                // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\r\n                function getConstraintDimension(domNode, maxStyle, percentageProperty) {\r\n                    var view = document.defaultView;\r\n                    var parentNode = domNode.parentNode;\r\n                    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\r\n                    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\r\n                    var hasCNode = isConstrainedValue(constrainedNode);\r\n                    var hasCContainer = isConstrainedValue(constrainedContainer);\r\n                    var infinity = Number.POSITIVE_INFINITY;\r\n\r\n                    if (hasCNode || hasCContainer) {\r\n                        return Math.min(\r\n                            hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\r\n                            hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\r\n                    }\r\n\r\n                    return 'none';\r\n                }\r\n                // returns Number or undefined if no constraint\r\n                helpers.getConstraintWidth = function(domNode) {\r\n                    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\r\n                };\r\n                // returns Number or undefined if no constraint\r\n                helpers.getConstraintHeight = function(domNode) {\r\n                    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\r\n                };\r\n                helpers.getMaximumWidth = function(domNode) {\r\n                    var container = domNode.parentNode;\r\n                    if (!container) {\r\n                        return domNode.clientWidth;\r\n                    }\r\n\r\n                    var paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\r\n                    var paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\r\n                    var w = container.clientWidth - paddingLeft - paddingRight;\r\n                    var cw = helpers.getConstraintWidth(domNode);\r\n                    return isNaN(cw) ? w : Math.min(w, cw);\r\n                };\r\n                helpers.getMaximumHeight = function(domNode) {\r\n                    var container = domNode.parentNode;\r\n                    if (!container) {\r\n                        return domNode.clientHeight;\r\n                    }\r\n\r\n                    var paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\r\n                    var paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\r\n                    var h = container.clientHeight - paddingTop - paddingBottom;\r\n                    var ch = helpers.getConstraintHeight(domNode);\r\n                    return isNaN(ch) ? h : Math.min(h, ch);\r\n                };\r\n                helpers.getStyle = function(el, property) {\r\n                    return el.currentStyle ?\r\n                        el.currentStyle[property] :\r\n                        document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\r\n                };\r\n                helpers.retinaScale = function(chart, forceRatio) {\r\n                    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\r\n                    if (pixelRatio === 1) {\r\n                        return;\r\n                    }\r\n\r\n                    var canvas = chart.canvas;\r\n                    var height = chart.height;\r\n                    var width = chart.width;\r\n\r\n                    canvas.height = height * pixelRatio;\r\n                    canvas.width = width * pixelRatio;\r\n                    chart.ctx.scale(pixelRatio, pixelRatio);\r\n\r\n                    // If no style has been set on the canvas, the render size is used as display size,\r\n                    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\r\n                    // See https://github.com/chartjs/Chart.js/issues/3575\r\n                    if (!canvas.style.height && !canvas.style.width) {\r\n                        canvas.style.height = height + 'px';\r\n                        canvas.style.width = width + 'px';\r\n                    }\r\n                };\r\n                // -- Canvas methods\r\n                helpers.fontString = function(pixelSize, fontStyle, fontFamily) {\r\n                    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\r\n                };\r\n                helpers.longestText = function(ctx, font, arrayOfThings, cache) {\r\n                    cache = cache || {};\r\n                    var data = cache.data = cache.data || {};\r\n                    var gc = cache.garbageCollect = cache.garbageCollect || [];\r\n\r\n                    if (cache.font !== font) {\r\n                        data = cache.data = {};\r\n                        gc = cache.garbageCollect = [];\r\n                        cache.font = font;\r\n                    }\r\n\r\n                    ctx.font = font;\r\n                    var longest = 0;\r\n                    helpers.each(arrayOfThings, function(thing) {\r\n                        // Undefined strings and arrays should not be measured\r\n                        if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\r\n                            longest = helpers.measureText(ctx, data, gc, longest, thing);\r\n                        } else if (helpers.isArray(thing)) {\r\n                            // if it is an array lets measure each element\r\n                            // to do maybe simplify this function a bit so we can do this more recursively?\r\n                            helpers.each(thing, function(nestedThing) {\r\n                                // Undefined strings and arrays should not be measured\r\n                                if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\r\n                                    longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    var gcLen = gc.length / 2;\r\n                    if (gcLen > arrayOfThings.length) {\r\n                        for (var i = 0; i < gcLen; i++) {\r\n                            delete data[gc[i]];\r\n                        }\r\n                        gc.splice(0, gcLen);\r\n                    }\r\n                    return longest;\r\n                };\r\n                helpers.measureText = function(ctx, data, gc, longest, string) {\r\n                    var textWidth = data[string];\r\n                    if (!textWidth) {\r\n                        textWidth = data[string] = ctx.measureText(string).width;\r\n                        gc.push(string);\r\n                    }\r\n                    if (textWidth > longest) {\r\n                        longest = textWidth;\r\n                    }\r\n                    return longest;\r\n                };\r\n                helpers.numberOfLabelLines = function(arrayOfThings) {\r\n                    var numberOfLines = 1;\r\n                    helpers.each(arrayOfThings, function(thing) {\r\n                        if (helpers.isArray(thing)) {\r\n                            if (thing.length > numberOfLines) {\r\n                                numberOfLines = thing.length;\r\n                            }\r\n                        }\r\n                    });\r\n                    return numberOfLines;\r\n                };\r\n\r\n                helpers.color = !color ?\r\n                    function(value) {\r\n                        console.error('Color.js not found!');\r\n                        return value;\r\n                    } :\r\n                    function(value) {\r\n                        /* global CanvasGradient */\r\n                        if (value instanceof CanvasGradient) {\r\n                            value = defaults.global.defaultColor;\r\n                        }\r\n\r\n                        return color(value);\r\n                    };\r\n\r\n                helpers.getHoverColor = function(colorValue) {\r\n                    /* global CanvasPattern */\r\n                    return (colorValue instanceof CanvasPattern) ?\r\n                        colorValue :\r\n                        helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\r\n                };\r\n            };\r\n\r\n        }, { \"16\": 16, \"2\": 2, \"36\": 36 }], 19: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Helper function to get relative position for an event\r\n             * @param {Event|IEvent} event - The event to get the position for\r\n             * @param {Chart} chart - The chart\r\n             * @returns {Point} the event position\r\n             */\r\n            function getRelativePosition(e, chart) {\r\n                if (e.native) {\r\n                    return {\r\n                        x: e.x,\r\n                        y: e.y\r\n                    };\r\n                }\r\n\r\n                return helpers.getRelativePosition(e, chart);\r\n            }\r\n\r\n            /**\r\n             * Helper function to traverse all of the visible elements in the chart\r\n             * @param chart {chart} the chart\r\n             * @param handler {Function} the callback to execute for each visible item\r\n             */\r\n            function parseVisibleItems(chart, handler) {\r\n                var datasets = chart.data.datasets;\r\n                var meta, i, j, ilen, jlen;\r\n\r\n                for (i = 0, ilen = datasets.length; i < ilen; ++i) {\r\n                    if (!chart.isDatasetVisible(i)) {\r\n                        continue;\r\n                    }\r\n\r\n                    meta = chart.getDatasetMeta(i);\r\n                    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\r\n                        var element = meta.data[j];\r\n                        if (!element._view.skip) {\r\n                            handler(element);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the items that intersect the event position\r\n             * @param items {ChartElement[]} elements to filter\r\n             * @param position {Point} the point to be nearest to\r\n             * @return {ChartElement[]} the nearest items\r\n             */\r\n            function getIntersectItems(chart, position) {\r\n                var elements = [];\r\n\r\n                parseVisibleItems(chart, function(element) {\r\n                    if (element.inRange(position.x, position.y)) {\r\n                        elements.push(element);\r\n                    }\r\n                });\r\n\r\n                return elements;\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the items nearest to the event position considering all visible items in teh chart\r\n             * @param chart {Chart} the chart to look at elements from\r\n             * @param position {Point} the point to be nearest to\r\n             * @param intersect {Boolean} if true, only consider items that intersect the position\r\n             * @param distanceMetric {Function} function to provide the distance between points\r\n             * @return {ChartElement[]} the nearest items\r\n             */\r\n            function getNearestItems(chart, position, intersect, distanceMetric) {\r\n                var minDistance = Number.POSITIVE_INFINITY;\r\n                var nearestItems = [];\r\n\r\n                parseVisibleItems(chart, function(element) {\r\n                    if (intersect && !element.inRange(position.x, position.y)) {\r\n                        return;\r\n                    }\r\n\r\n                    var center = element.getCenterPoint();\r\n                    var distance = distanceMetric(position, center);\r\n\r\n                    if (distance < minDistance) {\r\n                        nearestItems = [element];\r\n                        minDistance = distance;\r\n                    } else if (distance === minDistance) {\r\n                        // Can have multiple items at the same distance in which case we sort by size\r\n                        nearestItems.push(element);\r\n                    }\r\n                });\r\n\r\n                return nearestItems;\r\n            }\r\n\r\n            /**\r\n             * Get a distance metric function for two points based on the\r\n             * axis mode setting\r\n             * @param {String} axis the axis mode. x|y|xy\r\n             */\r\n            function getDistanceMetricForAxis(axis) {\r\n                var useX = axis.indexOf('x') !== -1;\r\n                var useY = axis.indexOf('y') !== -1;\r\n\r\n                return function(pt1, pt2) {\r\n                    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n                    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n                    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n                };\r\n            }\r\n\r\n            function indexMode(chart, e, options) {\r\n                var position = getRelativePosition(e, chart);\r\n                // Default axis for index mode is 'x' to match old behaviour\r\n                options.axis = options.axis || 'x';\r\n                var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\r\n                var elements = [];\r\n\r\n                if (!items.length) {\r\n                    return [];\r\n                }\r\n\r\n                chart.data.datasets.forEach(function(dataset, datasetIndex) {\r\n                    if (chart.isDatasetVisible(datasetIndex)) {\r\n                        var meta = chart.getDatasetMeta(datasetIndex);\r\n                        var element = meta.data[items[0]._index];\r\n\r\n                        // don't count items that are skipped (null data)\r\n                        if (element && !element._view.skip) {\r\n                            elements.push(element);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                return elements;\r\n            }\r\n\r\n            /**\r\n             * @interface IInteractionOptions\r\n             */\r\n            /**\r\n             * If true, only consider items that intersect the point\r\n             * @name IInterfaceOptions#boolean\r\n             * @type Boolean\r\n             */\r\n\r\n            /**\r\n             * Contains interaction related functions\r\n             * @namespace Chart.Interaction\r\n             */\r\n            module.exports = {\r\n                // Helper function for different modes\r\n                modes: {\r\n                    single: function(chart, e) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var elements = [];\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                elements.push(element);\r\n                                return elements;\r\n                            }\r\n                        });\r\n\r\n                        return elements.slice(0, 1);\r\n                    },\r\n\r\n                    /**\r\n                     * @function Chart.Interaction.modes.label\r\n                     * @deprecated since version 2.4.0\r\n                     * @todo remove at version 3\r\n                     * @private\r\n                     */\r\n                    label: indexMode,\r\n\r\n                    /**\r\n                     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\r\n                     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\r\n                     * @function Chart.Interaction.modes.index\r\n                     * @since v2.4.0\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use during interaction\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    index: indexMode,\r\n\r\n                    /**\r\n                     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\r\n                     * If the options.intersect is false, we find the nearest item and return the items in that dataset\r\n                     * @function Chart.Interaction.modes.dataset\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use during interaction\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    dataset: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        options.axis = options.axis || 'xy';\r\n                        var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\r\n\r\n                        if (items.length > 0) {\r\n                            items = chart.getDatasetMeta(items[0]._datasetIndex).data;\r\n                        }\r\n\r\n                        return items;\r\n                    },\r\n\r\n                    /**\r\n                     * @function Chart.Interaction.modes.x-axis\r\n                     * @deprecated since version 2.4.0. Use index mode and intersect == true\r\n                     * @todo remove at version 3\r\n                     * @private\r\n                     */\r\n                    'x-axis': function(chart, e) {\r\n                        return indexMode(chart, e, { intersect: false });\r\n                    },\r\n\r\n                    /**\r\n                     * Point mode returns all elements that hit test based on the event position\r\n                     * of the event\r\n                     * @function Chart.Interaction.modes.intersect\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    point: function(chart, e) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        return getIntersectItems(chart, position);\r\n                    },\r\n\r\n                    /**\r\n                     * nearest mode returns the element closest to the point\r\n                     * @function Chart.Interaction.modes.intersect\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    nearest: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        options.axis = options.axis || 'xy';\r\n                        var distanceMetric = getDistanceMetricForAxis(options.axis);\r\n                        var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\r\n\r\n                        // We have multiple items at the same distance from the event. Now sort by smallest\r\n                        if (nearestItems.length > 1) {\r\n                            nearestItems.sort(function(a, b) {\r\n                                var sizeA = a.getArea();\r\n                                var sizeB = b.getArea();\r\n                                var ret = sizeA - sizeB;\r\n\r\n                                if (ret === 0) {\r\n                                    // if equal sort by dataset index\r\n                                    ret = a._datasetIndex - b._datasetIndex;\r\n                                }\r\n\r\n                                return ret;\r\n                            });\r\n                        }\r\n\r\n                        // Return only 1 item\r\n                        return nearestItems.slice(0, 1);\r\n                    },\r\n\r\n                    /**\r\n                     * x mode returns the elements that hit-test at the current x coordinate\r\n                     * @function Chart.Interaction.modes.x\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    x: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var items = [];\r\n                        var intersectsItem = false;\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inXRange(position.x)) {\r\n                                items.push(element);\r\n                            }\r\n\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                intersectsItem = true;\r\n                            }\r\n                        });\r\n\r\n                        // If we want to trigger on an intersect and we don't have any items\r\n                        // that intersect the position, return nothing\r\n                        if (options.intersect && !intersectsItem) {\r\n                            items = [];\r\n                        }\r\n                        return items;\r\n                    },\r\n\r\n                    /**\r\n                     * y mode returns the elements that hit-test at the current y coordinate\r\n                     * @function Chart.Interaction.modes.y\r\n                     * @param chart {chart} the chart we are returning items from\r\n                     * @param e {Event} the event we are find things at\r\n                     * @param options {IInteractionOptions} options to use\r\n                     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                     */\r\n                    y: function(chart, e, options) {\r\n                        var position = getRelativePosition(e, chart);\r\n                        var items = [];\r\n                        var intersectsItem = false;\r\n\r\n                        parseVisibleItems(chart, function(element) {\r\n                            if (element.inYRange(position.y)) {\r\n                                items.push(element);\r\n                            }\r\n\r\n                            if (element.inRange(position.x, position.y)) {\r\n                                intersectsItem = true;\r\n                            }\r\n                        });\r\n\r\n                        // If we want to trigger on an intersect and we don't have any items\r\n                        // that intersect the position, return nothing\r\n                        if (options.intersect && !intersectsItem) {\r\n                            items = [];\r\n                        }\r\n                        return items;\r\n                    }\r\n                }\r\n            };\r\n\r\n        }, { \"36\": 36 }], 20: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n\r\n            defaults._set('global', {\r\n                responsive: true,\r\n                responsiveAnimationDuration: 0,\r\n                maintainAspectRatio: true,\r\n                events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\r\n                hover: {\r\n                    onHover: null,\r\n                    mode: 'nearest',\r\n                    intersect: true,\r\n                    animationDuration: 400\r\n                },\r\n                onClick: null,\r\n                defaultColor: 'rgba(0,0,0,0.1)',\r\n                defaultFontColor: '#666',\r\n                defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n                defaultFontSize: 12,\r\n                defaultFontStyle: 'normal',\r\n                showLines: true,\r\n\r\n                // Element defaults defined in element extensions\r\n                elements: {},\r\n\r\n                // Layout options such as padding\r\n                layout: {\r\n                    padding: {\r\n                        top: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        left: 0\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = function() {\r\n\r\n                // Occupy the global variable of Chart, and create a simple base class\r\n                var Chart = function(item, config) {\r\n                    this.construct(item, config);\r\n                    return this;\r\n                };\r\n\r\n                Chart.Chart = Chart;\r\n\r\n                return Chart;\r\n            };\r\n\r\n        }, { \"16\": 16 }], 21: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            function filterByPosition(array, position) {\r\n                return helpers.where(array, function(v) {\r\n                    return v.position === position;\r\n                });\r\n            }\r\n\r\n            function sortByWeight(array, reverse) {\r\n                array.forEach(function(v, i) {\r\n                    v._tmpIndex_ = i;\r\n                    return v;\r\n                });\r\n                array.sort(function(a, b) {\r\n                    var v0 = reverse ? b : a;\r\n                    var v1 = reverse ? a : b;\r\n                    return v0.weight === v1.weight ?\r\n                        v0._tmpIndex_ - v1._tmpIndex_ :\r\n                        v0.weight - v1.weight;\r\n                });\r\n                array.forEach(function(v) {\r\n                    delete v._tmpIndex_;\r\n                });\r\n            }\r\n\r\n            /**\r\n             * @interface ILayoutItem\r\n             * @prop {String} position - The position of the item in the chart layout. Possible values are\r\n             * 'left', 'top', 'right', 'bottom', and 'chartArea'\r\n             * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\r\n             * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\r\n             * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\r\n             * @prop {Function} update - Takes two parameters: width and height. Returns size of item\r\n             * @prop {Function} getPadding -  Returns an object with padding on the edges\r\n             * @prop {Number} width - Width of item. Must be valid after update()\r\n             * @prop {Number} height - Height of item. Must be valid after update()\r\n             * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\r\n             * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\r\n             */\r\n\r\n            // The layout service is very self explanatory.  It's responsible for the layout within a chart.\r\n            // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\r\n            // It is this service's responsibility of carrying out that layout.\r\n            module.exports = {\r\n                defaults: {},\r\n\r\n                /**\r\n                 * Register a box to a chart.\r\n                 * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\r\n                 * @param {Chart} chart - the chart to use\r\n                 * @param {ILayoutItem} item - the item to add to be layed out\r\n                 */\r\n                addBox: function(chart, item) {\r\n                    if (!chart.boxes) {\r\n                        chart.boxes = [];\r\n                    }\r\n\r\n                    // initialize item with default values\r\n                    item.fullWidth = item.fullWidth || false;\r\n                    item.position = item.position || 'top';\r\n                    item.weight = item.weight || 0;\r\n\r\n                    chart.boxes.push(item);\r\n                },\r\n\r\n                /**\r\n                 * Remove a layoutItem from a chart\r\n                 * @param {Chart} chart - the chart to remove the box from\r\n                 * @param {Object} layoutItem - the item to remove from the layout\r\n                 */\r\n                removeBox: function(chart, layoutItem) {\r\n                    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n                    if (index !== -1) {\r\n                        chart.boxes.splice(index, 1);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Sets (or updates) options on the given `item`.\r\n                 * @param {Chart} chart - the chart in which the item lives (or will be added to)\r\n                 * @param {Object} item - the item to configure with the given options\r\n                 * @param {Object} options - the new item options.\r\n                 */\r\n                configure: function(chart, item, options) {\r\n                    var props = ['fullWidth', 'position', 'weight'];\r\n                    var ilen = props.length;\r\n                    var i = 0;\r\n                    var prop;\r\n\r\n                    for (; i < ilen; ++i) {\r\n                        prop = props[i];\r\n                        if (options.hasOwnProperty(prop)) {\r\n                            item[prop] = options[prop];\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Fits boxes of the given chart into the given size by having each box measure itself\r\n                 * then running a fitting algorithm\r\n                 * @param {Chart} chart - the chart\r\n                 * @param {Number} width - the width to fit into\r\n                 * @param {Number} height - the height to fit into\r\n                 */\r\n                update: function(chart, width, height) {\r\n                    if (!chart) {\r\n                        return;\r\n                    }\r\n\r\n                    var layoutOptions = chart.options.layout || {};\r\n                    var padding = helpers.options.toPadding(layoutOptions.padding);\r\n                    var leftPadding = padding.left;\r\n                    var rightPadding = padding.right;\r\n                    var topPadding = padding.top;\r\n                    var bottomPadding = padding.bottom;\r\n\r\n                    var leftBoxes = filterByPosition(chart.boxes, 'left');\r\n                    var rightBoxes = filterByPosition(chart.boxes, 'right');\r\n                    var topBoxes = filterByPosition(chart.boxes, 'top');\r\n                    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\r\n                    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\r\n\r\n                    // Sort boxes by weight. A higher weight is further away from the chart area\r\n                    sortByWeight(leftBoxes, true);\r\n                    sortByWeight(rightBoxes, false);\r\n                    sortByWeight(topBoxes, true);\r\n                    sortByWeight(bottomBoxes, false);\r\n\r\n                    // Essentially we now have any number of boxes on each of the 4 sides.\r\n                    // Our canvas looks like the following.\r\n                    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\r\n                    // B1 is the bottom axis\r\n                    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\r\n                    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\r\n                    // an error will be thrown.\r\n                    //\r\n                    // |----------------------------------------------------|\r\n                    // |                  T1 (Full Width)                   |\r\n                    // |----------------------------------------------------|\r\n                    // |    |    |                 T2                  |    |\r\n                    // |    |----|-------------------------------------|----|\r\n                    // |    |    | C1 |                           | C2 |    |\r\n                    // |    |    |----|                           |----|    |\r\n                    // |    |    |                                     |    |\r\n                    // | L1 | L2 |           ChartArea (C0)            | R1 |\r\n                    // |    |    |                                     |    |\r\n                    // |    |    |----|                           |----|    |\r\n                    // |    |    | C3 |                           | C4 |    |\r\n                    // |    |----|-------------------------------------|----|\r\n                    // |    |    |                 B1                  |    |\r\n                    // |----------------------------------------------------|\r\n                    // |                  B2 (Full Width)                   |\r\n                    // |----------------------------------------------------|\r\n                    //\r\n                    // What we do to find the best sizing, we do the following\r\n                    // 1. Determine the minimum size of the chart area.\r\n                    // 2. Split the remaining width equally between each vertical axis\r\n                    // 3. Split the remaining height equally between each horizontal axis\r\n                    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\r\n                    // 5. Adjust the sizes of each axis based on it's minimum reported size.\r\n                    // 6. Refit each axis\r\n                    // 7. Position each axis in the final location\r\n                    // 8. Tell the chart the final location of the chart area\r\n                    // 9. Tell any axes that overlay the chart area the positions of the chart area\r\n\r\n                    // Step 1\r\n                    var chartWidth = width - leftPadding - rightPadding;\r\n                    var chartHeight = height - topPadding - bottomPadding;\r\n                    var chartAreaWidth = chartWidth / 2; // min 50%\r\n                    var chartAreaHeight = chartHeight / 2; // min 50%\r\n\r\n                    // Step 2\r\n                    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\r\n\r\n                    // Step 3\r\n                    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\r\n\r\n                    // Step 4\r\n                    var maxChartAreaWidth = chartWidth;\r\n                    var maxChartAreaHeight = chartHeight;\r\n                    var minBoxSizes = [];\r\n\r\n                    function getMinimumBoxSize(box) {\r\n                        var minSize;\r\n                        var isHorizontal = box.isHorizontal();\r\n\r\n                        if (isHorizontal) {\r\n                            minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\r\n                            maxChartAreaHeight -= minSize.height;\r\n                        } else {\r\n                            minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\r\n                            maxChartAreaWidth -= minSize.width;\r\n                        }\r\n\r\n                        minBoxSizes.push({\r\n                            horizontal: isHorizontal,\r\n                            minSize: minSize,\r\n                            box: box,\r\n                        });\r\n                    }\r\n\r\n                    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\r\n\r\n                    // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\r\n                    var maxHorizontalLeftPadding = 0;\r\n                    var maxHorizontalRightPadding = 0;\r\n                    var maxVerticalTopPadding = 0;\r\n                    var maxVerticalBottomPadding = 0;\r\n\r\n                    helpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\r\n                        if (horizontalBox.getPadding) {\r\n                            var boxPadding = horizontalBox.getPadding();\r\n                            maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\r\n                            maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\r\n                        }\r\n                    });\r\n\r\n                    helpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\r\n                        if (verticalBox.getPadding) {\r\n                            var boxPadding = verticalBox.getPadding();\r\n                            maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\r\n                            maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\r\n                        }\r\n                    });\r\n\r\n                    // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\r\n                    // be if the axes are drawn at their minimum sizes.\r\n                    // Steps 5 & 6\r\n                    var totalLeftBoxesWidth = leftPadding;\r\n                    var totalRightBoxesWidth = rightPadding;\r\n                    var totalTopBoxesHeight = topPadding;\r\n                    var totalBottomBoxesHeight = bottomPadding;\r\n\r\n                    // Function to fit a box\r\n                    function fitBox(box) {\r\n                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\r\n                            return minBox.box === box;\r\n                        });\r\n\r\n                        if (minBoxSize) {\r\n                            if (box.isHorizontal()) {\r\n                                var scaleMargin = {\r\n                                    left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\r\n                                    right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\r\n                                    top: 0,\r\n                                    bottom: 0\r\n                                };\r\n\r\n                                // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\r\n                                // on the margin. Sometimes they need to increase in size slightly\r\n                                box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\r\n                            } else {\r\n                                box.update(minBoxSize.minSize.width, maxChartAreaHeight);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Update, and calculate the left and right margins for the horizontal boxes\r\n                    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\r\n\r\n                    helpers.each(leftBoxes, function(box) {\r\n                        totalLeftBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(rightBoxes, function(box) {\r\n                        totalRightBoxesWidth += box.width;\r\n                    });\r\n\r\n                    // Set the Left and Right margins for the horizontal boxes\r\n                    helpers.each(topBoxes.concat(bottomBoxes), fitBox);\r\n\r\n                    // Figure out how much margin is on the top and bottom of the vertical boxes\r\n                    helpers.each(topBoxes, function(box) {\r\n                        totalTopBoxesHeight += box.height;\r\n                    });\r\n\r\n                    helpers.each(bottomBoxes, function(box) {\r\n                        totalBottomBoxesHeight += box.height;\r\n                    });\r\n\r\n                    function finalFitVerticalBox(box) {\r\n                        var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\r\n                            return minSize.box === box;\r\n                        });\r\n\r\n                        var scaleMargin = {\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: totalTopBoxesHeight,\r\n                            bottom: totalBottomBoxesHeight\r\n                        };\r\n\r\n                        if (minBoxSize) {\r\n                            box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\r\n                        }\r\n                    }\r\n\r\n                    // Let the left layout know the final margin\r\n                    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\r\n\r\n                    // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\r\n                    totalLeftBoxesWidth = leftPadding;\r\n                    totalRightBoxesWidth = rightPadding;\r\n                    totalTopBoxesHeight = topPadding;\r\n                    totalBottomBoxesHeight = bottomPadding;\r\n\r\n                    helpers.each(leftBoxes, function(box) {\r\n                        totalLeftBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(rightBoxes, function(box) {\r\n                        totalRightBoxesWidth += box.width;\r\n                    });\r\n\r\n                    helpers.each(topBoxes, function(box) {\r\n                        totalTopBoxesHeight += box.height;\r\n                    });\r\n                    helpers.each(bottomBoxes, function(box) {\r\n                        totalBottomBoxesHeight += box.height;\r\n                    });\r\n\r\n                    // We may be adding some padding to account for rotated x axis labels\r\n                    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\r\n                    totalLeftBoxesWidth += leftPaddingAddition;\r\n                    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\r\n\r\n                    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\r\n                    totalTopBoxesHeight += topPaddingAddition;\r\n                    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\r\n\r\n                    // Figure out if our chart area changed. This would occur if the dataset layout label rotation\r\n                    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\r\n                    // without calling `fit` again\r\n                    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\r\n                    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\r\n\r\n                    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\r\n                        helpers.each(leftBoxes, function(box) {\r\n                            box.height = newMaxChartAreaHeight;\r\n                        });\r\n\r\n                        helpers.each(rightBoxes, function(box) {\r\n                            box.height = newMaxChartAreaHeight;\r\n                        });\r\n\r\n                        helpers.each(topBoxes, function(box) {\r\n                            if (!box.fullWidth) {\r\n                                box.width = newMaxChartAreaWidth;\r\n                            }\r\n                        });\r\n\r\n                        helpers.each(bottomBoxes, function(box) {\r\n                            if (!box.fullWidth) {\r\n                                box.width = newMaxChartAreaWidth;\r\n                            }\r\n                        });\r\n\r\n                        maxChartAreaHeight = newMaxChartAreaHeight;\r\n                        maxChartAreaWidth = newMaxChartAreaWidth;\r\n                    }\r\n\r\n                    // Step 7 - Position the boxes\r\n                    var left = leftPadding + leftPaddingAddition;\r\n                    var top = topPadding + topPaddingAddition;\r\n\r\n                    function placeBox(box) {\r\n                        if (box.isHorizontal()) {\r\n                            box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\r\n                            box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\r\n                            box.top = top;\r\n                            box.bottom = top + box.height;\r\n\r\n                            // Move to next point\r\n                            top = box.bottom;\r\n\r\n                        } else {\r\n\r\n                            box.left = left;\r\n                            box.right = left + box.width;\r\n                            box.top = totalTopBoxesHeight;\r\n                            box.bottom = totalTopBoxesHeight + maxChartAreaHeight;\r\n\r\n                            // Move to next point\r\n                            left = box.right;\r\n                        }\r\n                    }\r\n\r\n                    helpers.each(leftBoxes.concat(topBoxes), placeBox);\r\n\r\n                    // Account for chart width and height\r\n                    left += maxChartAreaWidth;\r\n                    top += maxChartAreaHeight;\r\n\r\n                    helpers.each(rightBoxes, placeBox);\r\n                    helpers.each(bottomBoxes, placeBox);\r\n\r\n                    // Step 8\r\n                    chart.chartArea = {\r\n                        left: totalLeftBoxesWidth,\r\n                        top: totalTopBoxesHeight,\r\n                        right: totalLeftBoxesWidth + maxChartAreaWidth,\r\n                        bottom: totalTopBoxesHeight + maxChartAreaHeight\r\n                    };\r\n\r\n                    // Step 9\r\n                    helpers.each(chartAreaBoxes, function(box) {\r\n                        box.left = chart.chartArea.left;\r\n                        box.top = chart.chartArea.top;\r\n                        box.right = chart.chartArea.right;\r\n                        box.bottom = chart.chartArea.bottom;\r\n\r\n                        box.update(maxChartAreaWidth, maxChartAreaHeight);\r\n                    });\r\n                }\r\n            };\r\n\r\n        }, { \"36\": 36 }], 22: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                plugins: {}\r\n            });\r\n\r\n            /**\r\n             * The plugin service singleton\r\n             * @namespace Chart.plugins\r\n             * @since 2.1.0\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Globally registered plugins.\r\n                 * @private\r\n                 */\r\n                _plugins: [],\r\n\r\n                /**\r\n                 * This identifier is used to invalidate the descriptors cache attached to each chart\r\n                 * when a global plugin is registered or unregistered. In this case, the cache ID is\r\n                 * incremented and descriptors are regenerated during following API calls.\r\n                 * @private\r\n                 */\r\n                _cacheId: 0,\r\n\r\n                /**\r\n                 * Registers the given plugin(s) if not already registered.\r\n                 * @param {Array|Object} plugins plugin instance(s).\r\n                 */\r\n                register: function(plugins) {\r\n                    var p = this._plugins;\r\n                    ([]).concat(plugins).forEach(function(plugin) {\r\n                        if (p.indexOf(plugin) === -1) {\r\n                            p.push(plugin);\r\n                        }\r\n                    });\r\n\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Unregisters the given plugin(s) only if registered.\r\n                 * @param {Array|Object} plugins plugin instance(s).\r\n                 */\r\n                unregister: function(plugins) {\r\n                    var p = this._plugins;\r\n                    ([]).concat(plugins).forEach(function(plugin) {\r\n                        var idx = p.indexOf(plugin);\r\n                        if (idx !== -1) {\r\n                            p.splice(idx, 1);\r\n                        }\r\n                    });\r\n\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Remove all registered plugins.\r\n                 * @since 2.1.5\r\n                 */\r\n                clear: function() {\r\n                    this._plugins = [];\r\n                    this._cacheId++;\r\n                },\r\n\r\n                /**\r\n                 * Returns the number of registered plugins?\r\n                 * @returns {Number}\r\n                 * @since 2.1.5\r\n                 */\r\n                count: function() {\r\n                    return this._plugins.length;\r\n                },\r\n\r\n                /**\r\n                 * Returns all registered plugin instances.\r\n                 * @returns {Array} array of plugin objects.\r\n                 * @since 2.1.5\r\n                 */\r\n                getAll: function() {\r\n                    return this._plugins;\r\n                },\r\n\r\n                /**\r\n                 * Calls enabled plugins for `chart` on the specified hook and with the given args.\r\n                 * This method immediately returns as soon as a plugin explicitly returns false. The\r\n                 * returned value can be used, for instance, to interrupt the current action.\r\n                 * @param {Object} chart - The chart instance for which plugins should be called.\r\n                 * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\r\n                 * @param {Array} [args] - Extra arguments to apply to the hook call.\r\n                 * @returns {Boolean} false if any of the plugins return false, else returns true.\r\n                 */\r\n                notify: function(chart, hook, args) {\r\n                    var descriptors = this.descriptors(chart);\r\n                    var ilen = descriptors.length;\r\n                    var i, descriptor, plugin, params, method;\r\n\r\n                    for (i = 0; i < ilen; ++i) {\r\n                        descriptor = descriptors[i];\r\n                        plugin = descriptor.plugin;\r\n                        method = plugin[hook];\r\n                        if (typeof method === 'function') {\r\n                            params = [chart].concat(args || []);\r\n                            params.push(descriptor.options);\r\n                            if (method.apply(plugin, params) === false) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                },\r\n\r\n                /**\r\n                 * Returns descriptors of enabled plugins for the given chart.\r\n                 * @returns {Array} [{ plugin, options }]\r\n                 * @private\r\n                 */\r\n                descriptors: function(chart) {\r\n                    var cache = chart.$plugins || (chart.$plugins = {});\r\n                    if (cache.id === this._cacheId) {\r\n                        return cache.descriptors;\r\n                    }\r\n\r\n                    var plugins = [];\r\n                    var descriptors = [];\r\n                    var config = (chart && chart.config) || {};\r\n                    var options = (config.options && config.options.plugins) || {};\r\n\r\n                    this._plugins.concat(config.plugins || []).forEach(function(plugin) {\r\n                        var idx = plugins.indexOf(plugin);\r\n                        if (idx !== -1) {\r\n                            return;\r\n                        }\r\n\r\n                        var id = plugin.id;\r\n                        var opts = options[id];\r\n                        if (opts === false) {\r\n                            return;\r\n                        }\r\n\r\n                        if (opts === true) {\r\n                            opts = helpers.clone(defaults.global.plugins[id]);\r\n                        }\r\n\r\n                        plugins.push(plugin);\r\n                        descriptors.push({\r\n                            plugin: plugin,\r\n                            options: opts || {}\r\n                        });\r\n                    });\r\n\r\n                    cache.descriptors = descriptors;\r\n                    cache.id = this._cacheId;\r\n                    return descriptors;\r\n                },\r\n\r\n                /**\r\n                 * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\r\n                 * but in some cases, this reference can be changed by the user when updating options.\r\n                 * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\r\n                 * @private\r\n                 */\r\n                _invalidate: function(chart) {\r\n                    delete chart.$plugins;\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Plugin extension hooks.\r\n             * @interface IPlugin\r\n             * @since 2.1.0\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeInit\r\n             * @desc Called before initializing `chart`.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterInit\r\n             * @desc Called after `chart` has been initialized and before the first update.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeUpdate\r\n             * @desc Called before updating `chart`. If any plugin returns `false`, the update\r\n             * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart update.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterUpdate\r\n             * @desc Called after `chart` has been updated and before rendering. Note that this\r\n             * hook will not be called if the chart update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetsUpdate\r\n             * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\r\n             * the datasets update is cancelled until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} false to cancel the datasets update.\r\n             * @since version 2.1.5\r\n            */\r\n            /**\r\n             * @method IPlugin#afterDatasetsUpdate\r\n             * @desc Called after the `chart` datasets have been updated. Note that this hook\r\n             * will not be called if the datasets update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @since version 2.1.5\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetUpdate\r\n             * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\r\n             * returns `false`, the datasets update is cancelled until another `update` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetUpdate\r\n             * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\r\n             * that this hook will not be called if the datasets update has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeLayout\r\n             * @desc Called before laying out `chart`. If any plugin returns `false`,\r\n             * the layout update is cancelled until another `update` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart layout.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterLayout\r\n             * @desc Called after the `chart` has been layed out. Note that this hook will not\r\n             * be called if the layout update has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeRender\r\n             * @desc Called before rendering `chart`. If any plugin returns `false`,\r\n             * the rendering is cancelled until another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart rendering.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterRender\r\n             * @desc Called after the `chart` has been fully rendered (and animation completed). Note\r\n             * that this hook will not be called if the rendering has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDraw\r\n             * @desc Called before drawing `chart` at every animation frame specified by the given\r\n             * easing value. If any plugin returns `false`, the frame drawing is cancelled until\r\n             * another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDraw\r\n             * @desc Called after the `chart` has been drawn for the specific easing value. Note\r\n             * that this hook will not be called if the drawing has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetsDraw\r\n             * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\r\n             * the datasets drawing is cancelled until another `render` is triggered.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetsDraw\r\n             * @desc Called after the `chart` datasets have been drawn. Note that this hook\r\n             * will not be called if the datasets drawing has been previously cancelled.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeDatasetDraw\r\n             * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\r\n             * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\r\n             * is cancelled until another `render` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterDatasetDraw\r\n             * @desc Called after the `chart` datasets at the given `args.index` have been drawn\r\n             * (datasets are drawn in the reverse order). Note that this hook will not be called\r\n             * if the datasets drawing has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Number} args.index - The dataset index.\r\n             * @param {Object} args.meta - The dataset metadata.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeTooltipDraw\r\n             * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\r\n             * the tooltip drawing is cancelled until another `render` is triggered.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Object} args.tooltip - The tooltip.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             * @returns {Boolean} `false` to cancel the chart tooltip drawing.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterTooltipDraw\r\n             * @desc Called after drawing the `tooltip`. Note that this hook will not\r\n             * be called if the tooltip drawing has been previously cancelled.\r\n             * @param {Chart} chart - The chart instance.\r\n             * @param {Object} args - The call arguments.\r\n             * @param {Object} args.tooltip - The tooltip.\r\n             * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#beforeEvent\r\n             * @desc Called before processing the specified `event`. If any plugin returns `false`,\r\n             * the event will be discarded.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {IEvent} event - The event object.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#afterEvent\r\n             * @desc Called after the `event` has been consumed. Note that this hook\r\n             * will not be called if the `event` has been previously discarded.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {IEvent} event - The event object.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#resize\r\n             * @desc Called after the chart as been resized.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n            /**\r\n             * @method IPlugin#destroy\r\n             * @desc Called after the chart as been destroyed.\r\n             * @param {Chart.Controller} chart - The chart instance.\r\n             * @param {Object} options - The plugin options.\r\n             */\r\n\r\n        }, { \"16\": 16, \"36\": 36 }], 23: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var Ticks = require(25);\r\n\r\n            defaults._set('scale', {\r\n                display: true,\r\n                position: 'left',\r\n                offset: false,\r\n\r\n                // grid line settings\r\n                gridLines: {\r\n                    display: true,\r\n                    color: 'rgba(0, 0, 0, 0.1)',\r\n                    lineWidth: 1,\r\n                    drawBorder: true,\r\n                    drawOnChartArea: true,\r\n                    drawTicks: true,\r\n                    tickMarkLength: 10,\r\n                    zeroLineWidth: 1,\r\n                    zeroLineColor: 'rgba(0,0,0,0.25)',\r\n                    zeroLineBorderDash: [],\r\n                    zeroLineBorderDashOffset: 0.0,\r\n                    offsetGridLines: false,\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0\r\n                },\r\n\r\n                // scale label\r\n                scaleLabel: {\r\n                    // display property\r\n                    display: false,\r\n\r\n                    // actual label\r\n                    labelString: '',\r\n\r\n                    // line height\r\n                    lineHeight: 1.2,\r\n\r\n                    // top/bottom padding\r\n                    padding: {\r\n                        top: 4,\r\n                        bottom: 4\r\n                    }\r\n                },\r\n\r\n                // label settings\r\n                ticks: {\r\n                    beginAtZero: false,\r\n                    minRotation: 0,\r\n                    maxRotation: 50,\r\n                    mirror: false,\r\n                    padding: 0,\r\n                    reverse: false,\r\n                    display: true,\r\n                    autoSkip: true,\r\n                    autoSkipPadding: 0,\r\n                    labelOffset: 0,\r\n                    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\r\n                    callback: Ticks.formatters.values,\r\n                    minor: {},\r\n                    major: {}\r\n                }\r\n            });\r\n\r\n            function labelsFromTicks(ticks) {\r\n                var labels = [];\r\n                var i, ilen;\r\n\r\n                for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n                    labels.push(ticks[i].label);\r\n                }\r\n\r\n                return labels;\r\n            }\r\n\r\n            function getLineValue(scale, index, offsetGridLines) {\r\n                var lineValue = scale.getPixelForTick(index);\r\n\r\n                if (offsetGridLines) {\r\n                    if (index === 0) {\r\n                        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\r\n                    } else {\r\n                        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\r\n                    }\r\n                }\r\n                return lineValue;\r\n            }\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                function computeTextSize(context, tick, font) {\r\n                    return helpers.isArray(tick) ?\r\n                        helpers.longestText(context, font, tick) :\r\n                        context.measureText(tick).width;\r\n                }\r\n\r\n                function parseFontOptions(options) {\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var globalDefaults = defaults.global;\r\n                    var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\r\n                    var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\r\n                    var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\r\n\r\n                    return {\r\n                        size: size,\r\n                        style: style,\r\n                        family: family,\r\n                        font: helpers.fontString(size, style, family)\r\n                    };\r\n                }\r\n\r\n                function parseLineHeight(options) {\r\n                    return helpers.options.toLineHeight(\r\n                        helpers.valueOrDefault(options.lineHeight, 1.2),\r\n                        helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\r\n                }\r\n\r\n                Chart.Scale = Element.extend({\r\n                    /**\r\n                     * Get the padding needed for the scale\r\n                     * @method getPadding\r\n                     * @private\r\n                     * @returns {Padding} the necessary padding\r\n                     */\r\n                    getPadding: function() {\r\n                        var me = this;\r\n                        return {\r\n                            left: me.paddingLeft || 0,\r\n                            top: me.paddingTop || 0,\r\n                            right: me.paddingRight || 0,\r\n                            bottom: me.paddingBottom || 0\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the scale tick objects ({label, major})\r\n                     * @since 2.7\r\n                     */\r\n                    getTicks: function() {\r\n                        return this._ticks;\r\n                    },\r\n\r\n                    // These methods are ordered by lifecyle. Utilities then follow.\r\n                    // Any function defined here is inherited by all scale types.\r\n                    // Any function can be extended by the scale type\r\n\r\n                    mergeTicksOptions: function() {\r\n                        var ticks = this.options.ticks;\r\n                        if (ticks.minor === false) {\r\n                            ticks.minor = {\r\n                                display: false\r\n                            };\r\n                        }\r\n                        if (ticks.major === false) {\r\n                            ticks.major = {\r\n                                display: false\r\n                            };\r\n                        }\r\n                        for (var key in ticks) {\r\n                            if (key !== 'major' && key !== 'minor') {\r\n                                if (typeof ticks.minor[key] === 'undefined') {\r\n                                    ticks.minor[key] = ticks[key];\r\n                                }\r\n                                if (typeof ticks.major[key] === 'undefined') {\r\n                                    ticks.major[key] = ticks[key];\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    beforeUpdate: function() {\r\n                        helpers.callback(this.options.beforeUpdate, [this]);\r\n                    },\r\n                    update: function(maxWidth, maxHeight, margins) {\r\n                        var me = this;\r\n                        var i, ilen, labels, label, ticks, tick;\r\n\r\n                        // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                        me.beforeUpdate();\r\n\r\n                        // Absorb the master measurements\r\n                        me.maxWidth = maxWidth;\r\n                        me.maxHeight = maxHeight;\r\n                        me.margins = helpers.extend({\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: 0,\r\n                            bottom: 0\r\n                        }, margins);\r\n                        me.longestTextCache = me.longestTextCache || {};\r\n\r\n                        // Dimensions\r\n                        me.beforeSetDimensions();\r\n                        me.setDimensions();\r\n                        me.afterSetDimensions();\r\n\r\n                        // Data min/max\r\n                        me.beforeDataLimits();\r\n                        me.determineDataLimits();\r\n                        me.afterDataLimits();\r\n\r\n                        // Ticks - `this.ticks` is now DEPRECATED!\r\n                        // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\r\n                        // and must not be accessed directly from outside this class. `this.ticks` being\r\n                        // around for long time and not marked as private, we can't change its structure\r\n                        // without unexpected breaking changes. If you need to access the scale ticks,\r\n                        // use scale.getTicks() instead.\r\n\r\n                        me.beforeBuildTicks();\r\n\r\n                        // New implementations should return an array of objects but for BACKWARD COMPAT,\r\n                        // we still support no return (`this.ticks` internally set by calling this method).\r\n                        ticks = me.buildTicks() || [];\r\n\r\n                        me.afterBuildTicks();\r\n\r\n                        me.beforeTickToLabelConversion();\r\n\r\n                        // New implementations should return the formatted tick labels but for BACKWARD\r\n                        // COMPAT, we still support no return (`this.ticks` internally changed by calling\r\n                        // this method and supposed to contain only string values).\r\n                        labels = me.convertTicksToLabels(ticks) || me.ticks;\r\n\r\n                        me.afterTickToLabelConversion();\r\n\r\n                        me.ticks = labels;   // BACKWARD COMPATIBILITY\r\n\r\n                        // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\r\n\r\n                        // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\r\n                        for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n                            label = labels[i];\r\n                            tick = ticks[i];\r\n                            if (!tick) {\r\n                                ticks.push(tick = {\r\n                                    label: label,\r\n                                    major: false\r\n                                });\r\n                            } else {\r\n                                tick.label = label;\r\n                            }\r\n                        }\r\n\r\n                        me._ticks = ticks;\r\n\r\n                        // Tick Rotation\r\n                        me.beforeCalculateTickRotation();\r\n                        me.calculateTickRotation();\r\n                        me.afterCalculateTickRotation();\r\n                        // Fit\r\n                        me.beforeFit();\r\n                        me.fit();\r\n                        me.afterFit();\r\n                        //\r\n                        me.afterUpdate();\r\n\r\n                        return me.minSize;\r\n\r\n                    },\r\n                    afterUpdate: function() {\r\n                        helpers.callback(this.options.afterUpdate, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeSetDimensions: function() {\r\n                        helpers.callback(this.options.beforeSetDimensions, [this]);\r\n                    },\r\n                    setDimensions: function() {\r\n                        var me = this;\r\n                        // Set the unconstrained dimension before label rotation\r\n                        if (me.isHorizontal()) {\r\n                            // Reset position before calculating rotation\r\n                            me.width = me.maxWidth;\r\n                            me.left = 0;\r\n                            me.right = me.width;\r\n                        } else {\r\n                            me.height = me.maxHeight;\r\n\r\n                            // Reset position before calculating rotation\r\n                            me.top = 0;\r\n                            me.bottom = me.height;\r\n                        }\r\n\r\n                        // Reset padding\r\n                        me.paddingLeft = 0;\r\n                        me.paddingTop = 0;\r\n                        me.paddingRight = 0;\r\n                        me.paddingBottom = 0;\r\n                    },\r\n                    afterSetDimensions: function() {\r\n                        helpers.callback(this.options.afterSetDimensions, [this]);\r\n                    },\r\n\r\n                    // Data limits\r\n                    beforeDataLimits: function() {\r\n                        helpers.callback(this.options.beforeDataLimits, [this]);\r\n                    },\r\n                    determineDataLimits: helpers.noop,\r\n                    afterDataLimits: function() {\r\n                        helpers.callback(this.options.afterDataLimits, [this]);\r\n                    },\r\n\r\n                    //\r\n                    beforeBuildTicks: function() {\r\n                        helpers.callback(this.options.beforeBuildTicks, [this]);\r\n                    },\r\n                    buildTicks: helpers.noop,\r\n                    afterBuildTicks: function() {\r\n                        helpers.callback(this.options.afterBuildTicks, [this]);\r\n                    },\r\n\r\n                    beforeTickToLabelConversion: function() {\r\n                        helpers.callback(this.options.beforeTickToLabelConversion, [this]);\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        // Convert ticks to strings\r\n                        var tickOpts = me.options.ticks;\r\n                        me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\r\n                    },\r\n                    afterTickToLabelConversion: function() {\r\n                        helpers.callback(this.options.afterTickToLabelConversion, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeCalculateTickRotation: function() {\r\n                        helpers.callback(this.options.beforeCalculateTickRotation, [this]);\r\n                    },\r\n                    calculateTickRotation: function() {\r\n                        var me = this;\r\n                        var context = me.ctx;\r\n                        var tickOpts = me.options.ticks;\r\n                        var labels = labelsFromTicks(me._ticks);\r\n\r\n                        // Get the width of each grid by calculating the difference\r\n                        // between x offsets between 0 and 1.\r\n                        var tickFont = parseFontOptions(tickOpts);\r\n                        context.font = tickFont.font;\r\n\r\n                        var labelRotation = tickOpts.minRotation || 0;\r\n\r\n                        if (labels.length && me.options.display && me.isHorizontal()) {\r\n                            var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\r\n                            var labelWidth = originalLabelWidth;\r\n                            var cosRotation, sinRotation;\r\n\r\n                            // Allow 3 pixels x2 padding either side for label readability\r\n                            var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\r\n\r\n                            // Max label rotation can be set or default to 90 - also act as a loop counter\r\n                            while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\r\n                                var angleRadians = helpers.toRadians(labelRotation);\r\n                                cosRotation = Math.cos(angleRadians);\r\n                                sinRotation = Math.sin(angleRadians);\r\n\r\n                                if (sinRotation * originalLabelWidth > me.maxHeight) {\r\n                                    // go back one step\r\n                                    labelRotation--;\r\n                                    break;\r\n                                }\r\n\r\n                                labelRotation++;\r\n                                labelWidth = cosRotation * originalLabelWidth;\r\n                            }\r\n                        }\r\n\r\n                        me.labelRotation = labelRotation;\r\n                    },\r\n                    afterCalculateTickRotation: function() {\r\n                        helpers.callback(this.options.afterCalculateTickRotation, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeFit: function() {\r\n                        helpers.callback(this.options.beforeFit, [this]);\r\n                    },\r\n                    fit: function() {\r\n                        var me = this;\r\n                        // Reset\r\n                        var minSize = me.minSize = {\r\n                            width: 0,\r\n                            height: 0\r\n                        };\r\n\r\n                        var labels = labelsFromTicks(me._ticks);\r\n\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n                        var scaleLabelOpts = opts.scaleLabel;\r\n                        var gridLineOpts = opts.gridLines;\r\n                        var display = opts.display;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        var tickFont = parseFontOptions(tickOpts);\r\n                        var tickMarkLength = opts.gridLines.tickMarkLength;\r\n\r\n                        // Width\r\n                        if (isHorizontal) {\r\n                            // subtract the margins to line up with the chartArea if we are a full width scale\r\n                            minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\r\n                        } else {\r\n                            minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n                        }\r\n\r\n                        // height\r\n                        if (isHorizontal) {\r\n                            minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n                        } else {\r\n                            minSize.height = me.maxHeight; // fill all the height\r\n                        }\r\n\r\n                        // Are we showing a title for the scale?\r\n                        if (scaleLabelOpts.display && display) {\r\n                            var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\r\n                            var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\r\n                            var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\r\n\r\n                            if (isHorizontal) {\r\n                                minSize.height += deltaHeight;\r\n                            } else {\r\n                                minSize.width += deltaHeight;\r\n                            }\r\n                        }\r\n\r\n                        // Don't bother fitting the ticks if we are not showing them\r\n                        if (tickOpts.display && display) {\r\n                            var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\r\n                            var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\r\n                            var lineSpace = tickFont.size * 0.5;\r\n                            var tickPadding = me.options.ticks.padding;\r\n\r\n                            if (isHorizontal) {\r\n                                // A horizontal axis is more constrained by the height.\r\n                                me.longestLabelWidth = largestTextWidth;\r\n\r\n                                var angleRadians = helpers.toRadians(me.labelRotation);\r\n                                var cosRotation = Math.cos(angleRadians);\r\n                                var sinRotation = Math.sin(angleRadians);\r\n\r\n                                // TODO - improve this calculation\r\n                                var labelHeight = (sinRotation * largestTextWidth)\r\n                                    + (tickFont.size * tallestLabelHeightInLines)\r\n                                    + (lineSpace * (tallestLabelHeightInLines - 1))\r\n                                    + lineSpace; // padding\r\n\r\n                                minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\r\n\r\n                                me.ctx.font = tickFont.font;\r\n                                var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\r\n                                var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\r\n\r\n                                // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\r\n                                // which means that the right padding is dominated by the font height\r\n                                if (me.labelRotation !== 0) {\r\n                                    me.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\r\n                                    me.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\r\n                                } else {\r\n                                    me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\r\n                                    me.paddingRight = lastLabelWidth / 2 + 3;\r\n                                }\r\n                            } else {\r\n                                // A vertical axis is more constrained by the width. Labels are the\r\n                                // dominant factor here, so get that length first and account for padding\r\n                                if (tickOpts.mirror) {\r\n                                    largestTextWidth = 0;\r\n                                } else {\r\n                                    // use lineSpace for consistency with horizontal axis\r\n                                    // tickPadding is not implemented for horizontal\r\n                                    largestTextWidth += tickPadding + lineSpace;\r\n                                }\r\n\r\n                                minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\r\n\r\n                                me.paddingTop = tickFont.size / 2;\r\n                                me.paddingBottom = tickFont.size / 2;\r\n                            }\r\n                        }\r\n\r\n                        me.handleMargins();\r\n\r\n                        me.width = minSize.width;\r\n                        me.height = minSize.height;\r\n                    },\r\n\r\n                    /**\r\n                     * Handle margins and padding interactions\r\n                     * @private\r\n                     */\r\n                    handleMargins: function() {\r\n                        var me = this;\r\n                        if (me.margins) {\r\n                            me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\r\n                            me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\r\n                            me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\r\n                            me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\r\n                        }\r\n                    },\r\n\r\n                    afterFit: function() {\r\n                        helpers.callback(this.options.afterFit, [this]);\r\n                    },\r\n\r\n                    // Shared Methods\r\n                    isHorizontal: function() {\r\n                        return this.options.position === 'top' || this.options.position === 'bottom';\r\n                    },\r\n                    isFullWidth: function() {\r\n                        return (this.options.fullWidth);\r\n                    },\r\n\r\n                    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\r\n                    getRightValue: function(rawValue) {\r\n                        // Null and undefined values first\r\n                        if (helpers.isNullOrUndef(rawValue)) {\r\n                            return NaN;\r\n                        }\r\n                        // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\r\n                        if (typeof rawValue === 'number' && !isFinite(rawValue)) {\r\n                            return NaN;\r\n                        }\r\n                        // If it is in fact an object, dive in one more level\r\n                        if (rawValue) {\r\n                            if (this.isHorizontal()) {\r\n                                if (rawValue.x !== undefined) {\r\n                                    return this.getRightValue(rawValue.x);\r\n                                }\r\n                            } else if (rawValue.y !== undefined) {\r\n                                return this.getRightValue(rawValue.y);\r\n                            }\r\n                        }\r\n\r\n                        // Value is good, return it\r\n                        return rawValue;\r\n                    },\r\n\r\n                    /**\r\n                     * Used to get the value to display in the tooltip for the data at the given index\r\n                     * @param index\r\n                     * @param datasetIndex\r\n                     */\r\n                    getLabelForIndex: helpers.noop,\r\n\r\n                    /**\r\n                     * Returns the location of the given data point. Value can either be an index or a numerical value\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     * @param value\r\n                     * @param index\r\n                     * @param datasetIndex\r\n                     */\r\n                    getPixelForValue: helpers.noop,\r\n\r\n                    /**\r\n                     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     * @param pixel\r\n                     */\r\n                    getValueForPixel: helpers.noop,\r\n\r\n                    /**\r\n                     * Returns the location of the tick at the given index\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getPixelForTick: function(index) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        if (me.isHorizontal()) {\r\n                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n                            var tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\r\n                            var pixel = (tickWidth * index) + me.paddingLeft;\r\n\r\n                            if (offset) {\r\n                                pixel += tickWidth / 2;\r\n                            }\r\n\r\n                            var finalVal = me.left + Math.round(pixel);\r\n                            finalVal += me.isFullWidth() ? me.margins.left : 0;\r\n                            return finalVal;\r\n                        }\r\n                        var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\r\n                        return me.top + (index * (innerHeight / (me._ticks.length - 1)));\r\n                    },\r\n\r\n                    /**\r\n                     * Utility for getting the pixel location of a percentage of scale\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getPixelForDecimal: function(decimal) {\r\n                        var me = this;\r\n                        if (me.isHorizontal()) {\r\n                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n                            var valueOffset = (innerWidth * decimal) + me.paddingLeft;\r\n\r\n                            var finalVal = me.left + Math.round(valueOffset);\r\n                            finalVal += me.isFullWidth() ? me.margins.left : 0;\r\n                            return finalVal;\r\n                        }\r\n                        return me.top + (decimal * me.height);\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the pixel for the minimum chart value\r\n                     * The coordinate (0, 0) is at the upper-left corner of the canvas\r\n                     */\r\n                    getBasePixel: function() {\r\n                        return this.getPixelForValue(this.getBaseValue());\r\n                    },\r\n\r\n                    getBaseValue: function() {\r\n                        var me = this;\r\n                        var min = me.min;\r\n                        var max = me.max;\r\n\r\n                        return me.beginAtZero ? 0 :\r\n                            min < 0 && max < 0 ? max :\r\n                                min > 0 && max > 0 ? min :\r\n                                    0;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns a subset of ticks to be plotted to avoid overlapping labels.\r\n                     * @private\r\n                     */\r\n                    _autoSkip: function(ticks) {\r\n                        var skipRatio;\r\n                        var me = this;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var optionTicks = me.options.ticks.minor;\r\n                        var tickCount = ticks.length;\r\n                        var labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n                        var cosRotation = Math.cos(labelRotationRadians);\r\n                        var longestRotatedLabel = me.longestLabelWidth * cosRotation;\r\n                        var result = [];\r\n                        var i, tick, shouldSkip;\r\n\r\n                        // figure out the maximum number of gridlines to show\r\n                        var maxTicks;\r\n                        if (optionTicks.maxTicksLimit) {\r\n                            maxTicks = optionTicks.maxTicksLimit;\r\n                        }\r\n\r\n                        if (isHorizontal) {\r\n                            skipRatio = false;\r\n\r\n                            if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\r\n                                skipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\r\n                            }\r\n\r\n                            // if they defined a max number of optionTicks,\r\n                            // increase skipRatio until that number is met\r\n                            if (maxTicks && tickCount > maxTicks) {\r\n                                skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\r\n                            }\r\n                        }\r\n\r\n                        for (i = 0; i < tickCount; i++) {\r\n                            tick = ticks[i];\r\n\r\n                            // Since we always show the last tick,we need may need to hide the last shown one before\r\n                            shouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\r\n                            if (shouldSkip && i !== tickCount - 1) {\r\n                                // leave tick in place but make sure it's not displayed (#4635)\r\n                                delete tick.label;\r\n                            }\r\n                            result.push(tick);\r\n                        }\r\n                        return result;\r\n                    },\r\n\r\n                    // Actually draw the scale on the canvas\r\n                    // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\r\n                    draw: function(chartArea) {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        if (!options.display) {\r\n                            return;\r\n                        }\r\n\r\n                        var context = me.ctx;\r\n                        var globalDefaults = defaults.global;\r\n                        var optionTicks = options.ticks.minor;\r\n                        var optionMajorTicks = options.ticks.major || optionTicks;\r\n                        var gridLines = options.gridLines;\r\n                        var scaleLabel = options.scaleLabel;\r\n\r\n                        var isRotated = me.labelRotation !== 0;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\r\n                        var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\r\n                        var tickFont = parseFontOptions(optionTicks);\r\n                        var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\r\n                        var majorTickFont = parseFontOptions(optionMajorTicks);\r\n\r\n                        var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\r\n\r\n                        var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\r\n                        var scaleLabelFont = parseFontOptions(scaleLabel);\r\n                        var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\r\n                        var labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n\r\n                        var itemsToDraw = [];\r\n\r\n                        var axisWidth = me.options.gridLines.lineWidth;\r\n                        var xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\r\n                        var xTickEnd = options.position === 'right' ? me.right + tl : me.right;\r\n                        var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\r\n                        var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\r\n\r\n                        helpers.each(ticks, function(tick, index) {\r\n                            // autoskipper skipped this tick (#4635)\r\n                            if (helpers.isNullOrUndef(tick.label)) {\r\n                                return;\r\n                            }\r\n\r\n                            var label = tick.label;\r\n                            var lineWidth, lineColor, borderDash, borderDashOffset;\r\n                            if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\r\n                                // Draw the first index specially\r\n                                lineWidth = gridLines.zeroLineWidth;\r\n                                lineColor = gridLines.zeroLineColor;\r\n                                borderDash = gridLines.zeroLineBorderDash;\r\n                                borderDashOffset = gridLines.zeroLineBorderDashOffset;\r\n                            } else {\r\n                                lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\r\n                                lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\r\n                                borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\r\n                                borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\r\n                            }\r\n\r\n                            // Common properties\r\n                            var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\r\n                            var textAlign = 'middle';\r\n                            var textBaseline = 'middle';\r\n                            var tickPadding = optionTicks.padding;\r\n\r\n                            if (isHorizontal) {\r\n                                var labelYOffset = tl + tickPadding;\r\n\r\n                                if (options.position === 'bottom') {\r\n                                    // bottom\r\n                                    textBaseline = !isRotated ? 'top' : 'middle';\r\n                                    textAlign = !isRotated ? 'center' : 'right';\r\n                                    labelY = me.top + labelYOffset;\r\n                                } else {\r\n                                    // top\r\n                                    textBaseline = !isRotated ? 'bottom' : 'middle';\r\n                                    textAlign = !isRotated ? 'center' : 'left';\r\n                                    labelY = me.bottom - labelYOffset;\r\n                                }\r\n\r\n                                var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\r\n                                if (xLineValue < me.left) {\r\n                                    lineColor = 'rgba(0,0,0,0)';\r\n                                }\r\n                                xLineValue += helpers.aliasPixel(lineWidth);\r\n\r\n                                labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\r\n\r\n                                tx1 = tx2 = x1 = x2 = xLineValue;\r\n                                ty1 = yTickStart;\r\n                                ty2 = yTickEnd;\r\n                                y1 = chartArea.top;\r\n                                y2 = chartArea.bottom + axisWidth;\r\n                            } else {\r\n                                var isLeft = options.position === 'left';\r\n                                var labelXOffset;\r\n\r\n                                if (optionTicks.mirror) {\r\n                                    textAlign = isLeft ? 'left' : 'right';\r\n                                    labelXOffset = tickPadding;\r\n                                } else {\r\n                                    textAlign = isLeft ? 'right' : 'left';\r\n                                    labelXOffset = tl + tickPadding;\r\n                                }\r\n\r\n                                labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\r\n\r\n                                var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\r\n                                if (yLineValue < me.top) {\r\n                                    lineColor = 'rgba(0,0,0,0)';\r\n                                }\r\n                                yLineValue += helpers.aliasPixel(lineWidth);\r\n\r\n                                labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\r\n\r\n                                tx1 = xTickStart;\r\n                                tx2 = xTickEnd;\r\n                                x1 = chartArea.left;\r\n                                x2 = chartArea.right + axisWidth;\r\n                                ty1 = ty2 = y1 = y2 = yLineValue;\r\n                            }\r\n\r\n                            itemsToDraw.push({\r\n                                tx1: tx1,\r\n                                ty1: ty1,\r\n                                tx2: tx2,\r\n                                ty2: ty2,\r\n                                x1: x1,\r\n                                y1: y1,\r\n                                x2: x2,\r\n                                y2: y2,\r\n                                labelX: labelX,\r\n                                labelY: labelY,\r\n                                glWidth: lineWidth,\r\n                                glColor: lineColor,\r\n                                glBorderDash: borderDash,\r\n                                glBorderDashOffset: borderDashOffset,\r\n                                rotation: -1 * labelRotationRadians,\r\n                                label: label,\r\n                                major: tick.major,\r\n                                textBaseline: textBaseline,\r\n                                textAlign: textAlign\r\n                            });\r\n                        });\r\n\r\n                        // Draw all of the tick labels, tick marks, and grid lines at the correct places\r\n                        helpers.each(itemsToDraw, function(itemToDraw) {\r\n                            if (gridLines.display) {\r\n                                context.save();\r\n                                context.lineWidth = itemToDraw.glWidth;\r\n                                context.strokeStyle = itemToDraw.glColor;\r\n                                if (context.setLineDash) {\r\n                                    context.setLineDash(itemToDraw.glBorderDash);\r\n                                    context.lineDashOffset = itemToDraw.glBorderDashOffset;\r\n                                }\r\n\r\n                                context.beginPath();\r\n\r\n                                if (gridLines.drawTicks) {\r\n                                    context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\r\n                                    context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\r\n                                }\r\n\r\n                                if (gridLines.drawOnChartArea) {\r\n                                    context.moveTo(itemToDraw.x1, itemToDraw.y1);\r\n                                    context.lineTo(itemToDraw.x2, itemToDraw.y2);\r\n                                }\r\n\r\n                                context.stroke();\r\n                                context.restore();\r\n                            }\r\n\r\n                            if (optionTicks.display) {\r\n                                // Make sure we draw text in the correct color and font\r\n                                context.save();\r\n                                context.translate(itemToDraw.labelX, itemToDraw.labelY);\r\n                                context.rotate(itemToDraw.rotation);\r\n                                context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\r\n                                context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\r\n                                context.textBaseline = itemToDraw.textBaseline;\r\n                                context.textAlign = itemToDraw.textAlign;\r\n\r\n                                var label = itemToDraw.label;\r\n                                if (helpers.isArray(label)) {\r\n                                    var lineCount = label.length;\r\n                                    var lineHeight = tickFont.size * 1.5;\r\n                                    var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\r\n\r\n                                    for (var i = 0; i < lineCount; ++i) {\r\n                                        // We just make sure the multiline element is a string here..\r\n                                        context.fillText('' + label[i], 0, y);\r\n                                        // apply same lineSpacing as calculated @ L#320\r\n                                        y += lineHeight;\r\n                                    }\r\n                                } else {\r\n                                    context.fillText(label, 0, 0);\r\n                                }\r\n                                context.restore();\r\n                            }\r\n                        });\r\n\r\n                        if (scaleLabel.display) {\r\n                            // Draw the scale label\r\n                            var scaleLabelX;\r\n                            var scaleLabelY;\r\n                            var rotation = 0;\r\n                            var halfLineHeight = parseLineHeight(scaleLabel) / 2;\r\n\r\n                            if (isHorizontal) {\r\n                                scaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\r\n                                scaleLabelY = options.position === 'bottom'\r\n                                    ? me.bottom - halfLineHeight - scaleLabelPadding.bottom\r\n                                    : me.top + halfLineHeight + scaleLabelPadding.top;\r\n                            } else {\r\n                                var isLeft = options.position === 'left';\r\n                                scaleLabelX = isLeft\r\n                                    ? me.left + halfLineHeight + scaleLabelPadding.top\r\n                                    : me.right - halfLineHeight - scaleLabelPadding.top;\r\n                                scaleLabelY = me.top + ((me.bottom - me.top) / 2);\r\n                                rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\r\n                            }\r\n\r\n                            context.save();\r\n                            context.translate(scaleLabelX, scaleLabelY);\r\n                            context.rotate(rotation);\r\n                            context.textAlign = 'center';\r\n                            context.textBaseline = 'middle';\r\n                            context.fillStyle = scaleLabelFontColor; // render in correct colour\r\n                            context.font = scaleLabelFont.font;\r\n                            context.fillText(scaleLabel.labelString, 0, 0);\r\n                            context.restore();\r\n                        }\r\n\r\n                        if (gridLines.drawBorder) {\r\n                            // Draw the line at the edge of the axis\r\n                            context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\r\n                            context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\r\n                            var x1 = me.left;\r\n                            var x2 = me.right + axisWidth;\r\n                            var y1 = me.top;\r\n                            var y2 = me.bottom + axisWidth;\r\n\r\n                            var aliasPixel = helpers.aliasPixel(context.lineWidth);\r\n                            if (isHorizontal) {\r\n                                y1 = y2 = options.position === 'top' ? me.bottom : me.top;\r\n                                y1 += aliasPixel;\r\n                                y2 += aliasPixel;\r\n                            } else {\r\n                                x1 = x2 = options.position === 'left' ? me.right : me.left;\r\n                                x1 += aliasPixel;\r\n                                x2 += aliasPixel;\r\n                            }\r\n\r\n                            context.beginPath();\r\n                            context.moveTo(x1, y1);\r\n                            context.lineTo(x2, y2);\r\n                            context.stroke();\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n\r\n        }, { \"16\": 16, \"17\": 17, \"25\": 25, \"36\": 36 }], 24: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                Chart.scaleService = {\r\n                    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\r\n                    // use the new chart options to grab the correct scale\r\n                    constructors: {},\r\n                    // Use a registration function so that we can move to an ES6 map when we no longer need to support\r\n                    // old browsers\r\n\r\n                    // Scale config defaults\r\n                    defaults: {},\r\n                    registerScaleType: function(type, scaleConstructor, scaleDefaults) {\r\n                        this.constructors[type] = scaleConstructor;\r\n                        this.defaults[type] = helpers.clone(scaleDefaults);\r\n                    },\r\n                    getScaleConstructor: function(type) {\r\n                        return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\r\n                    },\r\n                    getScaleDefaults: function(type) {\r\n                        // Return the scale defaults merged with the global settings so that we always use the latest ones\r\n                        return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\r\n                    },\r\n                    updateScaleDefaults: function(type, additions) {\r\n                        var me = this;\r\n                        if (me.defaults.hasOwnProperty(type)) {\r\n                            me.defaults[type] = helpers.extend(me.defaults[type], additions);\r\n                        }\r\n                    },\r\n                    addScalesToLayout: function(chart) {\r\n                        // Adds each scale to the chart.boxes array to be sized accordingly\r\n                        helpers.each(chart.scales, function(scale) {\r\n                            // Set ILayoutItem parameters for backwards compatibility\r\n                            scale.fullWidth = scale.options.fullWidth;\r\n                            scale.position = scale.options.position;\r\n                            scale.weight = scale.options.weight;\r\n                            layouts.addBox(chart, scale);\r\n                        });\r\n                    }\r\n                };\r\n            };\r\n\r\n        }, { \"16\": 16, \"21\": 21, \"36\": 36 }], 25: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Namespace to hold static tick generation functions\r\n             * @namespace Chart.Ticks\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Namespace to hold formatters for different types of ticks\r\n                 * @namespace Chart.Ticks.formatters\r\n                 */\r\n                formatters: {\r\n                    /**\r\n                     * Formatter for value labels\r\n                     * @method Chart.Ticks.formatters.values\r\n                     * @param value the value to display\r\n                     * @return {String|Array} the label to display\r\n                     */\r\n                    values: function(value) {\r\n                        return helpers.isArray(value) ? value : '' + value;\r\n                    },\r\n\r\n                    /**\r\n                     * Formatter for linear numeric ticks\r\n                     * @method Chart.Ticks.formatters.linear\r\n                     * @param tickValue {Number} the value to be formatted\r\n                     * @param index {Number} the position of the tickValue parameter in the ticks array\r\n                     * @param ticks {Array<Number>} the list of ticks being converted\r\n                     * @return {String} string representation of the tickValue parameter\r\n                     */\r\n                    linear: function(tickValue, index, ticks) {\r\n                        // If we have lots of ticks, don't use the ones\r\n                        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\r\n\r\n                        // If we have a number like 2.5 as the delta, figure out how many decimal places we need\r\n                        if (Math.abs(delta) > 1) {\r\n                            if (tickValue !== Math.floor(tickValue)) {\r\n                                // not an integer\r\n                                delta = tickValue - Math.floor(tickValue);\r\n                            }\r\n                        }\r\n\r\n                        var logDelta = helpers.log10(Math.abs(delta));\r\n                        var tickString = '';\r\n\r\n                        if (tickValue !== 0) {\r\n                            var numDecimal = -1 * Math.floor(logDelta);\r\n                            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\r\n                            tickString = tickValue.toFixed(numDecimal);\r\n                        } else {\r\n                            tickString = '0'; // never show decimal places for 0\r\n                        }\r\n\r\n                        return tickString;\r\n                    },\r\n\r\n                    logarithmic: function(tickValue, index, ticks) {\r\n                        var remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\r\n\r\n                        if (tickValue === 0) {\r\n                            return '0';\r\n                        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\r\n                            return tickValue.toExponential();\r\n                        }\r\n                        return '';\r\n                    }\r\n                }\r\n            };\r\n\r\n        }, { \"36\": 36 }], 26: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                tooltips: {\r\n                    enabled: true,\r\n                    custom: null,\r\n                    mode: 'nearest',\r\n                    position: 'average',\r\n                    intersect: true,\r\n                    backgroundColor: 'rgba(0,0,0,0.8)',\r\n                    titleFontStyle: 'bold',\r\n                    titleSpacing: 2,\r\n                    titleMarginBottom: 6,\r\n                    titleFontColor: '#fff',\r\n                    titleAlign: 'left',\r\n                    bodySpacing: 2,\r\n                    bodyFontColor: '#fff',\r\n                    bodyAlign: 'left',\r\n                    footerFontStyle: 'bold',\r\n                    footerSpacing: 2,\r\n                    footerMarginTop: 6,\r\n                    footerFontColor: '#fff',\r\n                    footerAlign: 'left',\r\n                    yPadding: 6,\r\n                    xPadding: 6,\r\n                    caretPadding: 2,\r\n                    caretSize: 5,\r\n                    cornerRadius: 6,\r\n                    multiKeyBackground: '#fff',\r\n                    displayColors: true,\r\n                    borderColor: 'rgba(0,0,0,0)',\r\n                    borderWidth: 0,\r\n                    callbacks: {\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeTitle: helpers.noop,\r\n                        title: function(tooltipItems, data) {\r\n                            // Pick first xLabel for now\r\n                            var title = '';\r\n                            var labels = data.labels;\r\n                            var labelCount = labels ? labels.length : 0;\r\n\r\n                            if (tooltipItems.length > 0) {\r\n                                var item = tooltipItems[0];\r\n\r\n                                if (item.xLabel) {\r\n                                    title = item.xLabel;\r\n                                } else if (labelCount > 0 && item.index < labelCount) {\r\n                                    title = labels[item.index];\r\n                                }\r\n                            }\r\n\r\n                            return title;\r\n                        },\r\n                        afterTitle: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeBody: helpers.noop,\r\n\r\n                        // Args are: (tooltipItem, data)\r\n                        beforeLabel: helpers.noop,\r\n                        label: function(tooltipItem, data) {\r\n                            var label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\r\n                            if (label) {\r\n                                label += ': ';\r\n                            }\r\n                            label += tooltipItem.yLabel;\r\n                            return label;\r\n                        },\r\n                        labelColor: function(tooltipItem, chart) {\r\n                            var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n                            var activeElement = meta.data[tooltipItem.index];\r\n                            var view = activeElement._view;\r\n                            return {\r\n                                borderColor: view.borderColor,\r\n                                backgroundColor: view.backgroundColor\r\n                            };\r\n                        },\r\n                        labelTextColor: function() {\r\n                            return this._options.bodyFontColor;\r\n                        },\r\n                        afterLabel: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        afterBody: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeFooter: helpers.noop,\r\n                        footer: helpers.noop,\r\n                        afterFooter: helpers.noop\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                /**\r\n                   * Helper method to merge the opacity into a color\r\n                   */\r\n                function mergeOpacity(colorString, opacity) {\r\n                    var color = helpers.color(colorString);\r\n                    return color.alpha(opacity * color.alpha()).rgbaString();\r\n                }\r\n\r\n                // Helper to push or concat based on if the 2nd parameter is an array or not\r\n                function pushOrConcat(base, toPush) {\r\n                    if (toPush) {\r\n                        if (helpers.isArray(toPush)) {\r\n                            // base = base.concat(toPush);\r\n                            Array.prototype.push.apply(base, toPush);\r\n                        } else {\r\n                            base.push(toPush);\r\n                        }\r\n                    }\r\n\r\n                    return base;\r\n                }\r\n\r\n                // Private helper to create a tooltip item model\r\n                // @param element : the chart element (point, arc, bar) to create the tooltip item for\r\n                // @return : new tooltip item\r\n                function createTooltipItem(element) {\r\n                    var xScale = element._xScale;\r\n                    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\r\n                    var index = element._index;\r\n                    var datasetIndex = element._datasetIndex;\r\n\r\n                    return {\r\n                        xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\r\n                        yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\r\n                        index: index,\r\n                        datasetIndex: datasetIndex,\r\n                        x: element._model.x,\r\n                        y: element._model.y\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Helper to get the reset model for the tooltip\r\n                 * @param tooltipOpts {Object} the tooltip options\r\n                 */\r\n                function getBaseModel(tooltipOpts) {\r\n                    var globalDefaults = defaults.global;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n\r\n                    return {\r\n                        // Positioning\r\n                        xPadding: tooltipOpts.xPadding,\r\n                        yPadding: tooltipOpts.yPadding,\r\n                        xAlign: tooltipOpts.xAlign,\r\n                        yAlign: tooltipOpts.yAlign,\r\n\r\n                        // Body\r\n                        bodyFontColor: tooltipOpts.bodyFontColor,\r\n                        _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\r\n                        _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\r\n                        _bodyAlign: tooltipOpts.bodyAlign,\r\n                        bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\r\n                        bodySpacing: tooltipOpts.bodySpacing,\r\n\r\n                        // Title\r\n                        titleFontColor: tooltipOpts.titleFontColor,\r\n                        _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\r\n                        _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\r\n                        titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\r\n                        _titleAlign: tooltipOpts.titleAlign,\r\n                        titleSpacing: tooltipOpts.titleSpacing,\r\n                        titleMarginBottom: tooltipOpts.titleMarginBottom,\r\n\r\n                        // Footer\r\n                        footerFontColor: tooltipOpts.footerFontColor,\r\n                        _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\r\n                        _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\r\n                        footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\r\n                        _footerAlign: tooltipOpts.footerAlign,\r\n                        footerSpacing: tooltipOpts.footerSpacing,\r\n                        footerMarginTop: tooltipOpts.footerMarginTop,\r\n\r\n                        // Appearance\r\n                        caretSize: tooltipOpts.caretSize,\r\n                        cornerRadius: tooltipOpts.cornerRadius,\r\n                        backgroundColor: tooltipOpts.backgroundColor,\r\n                        opacity: 0,\r\n                        legendColorBackground: tooltipOpts.multiKeyBackground,\r\n                        displayColors: tooltipOpts.displayColors,\r\n                        borderColor: tooltipOpts.borderColor,\r\n                        borderWidth: tooltipOpts.borderWidth\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Get the size of the tooltip\r\n                 */\r\n                function getTooltipSize(tooltip, model) {\r\n                    var ctx = tooltip._chart.ctx;\r\n\r\n                    var height = model.yPadding * 2; // Tooltip Padding\r\n                    var width = 0;\r\n\r\n                    // Count of all lines in the body\r\n                    var body = model.body;\r\n                    var combinedBodyLength = body.reduce(function(count, bodyItem) {\r\n                        return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\r\n                    }, 0);\r\n                    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\r\n\r\n                    var titleLineCount = model.title.length;\r\n                    var footerLineCount = model.footer.length;\r\n                    var titleFontSize = model.titleFontSize;\r\n                    var bodyFontSize = model.bodyFontSize;\r\n                    var footerFontSize = model.footerFontSize;\r\n\r\n                    height += titleLineCount * titleFontSize; // Title Lines\r\n                    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\r\n                    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\r\n                    height += combinedBodyLength * bodyFontSize; // Body Lines\r\n                    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\r\n                    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\r\n                    height += footerLineCount * (footerFontSize); // Footer Lines\r\n                    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\r\n\r\n                    // Title width\r\n                    var widthPadding = 0;\r\n                    var maxLineWidth = function(line) {\r\n                        width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n                    };\r\n\r\n                    ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\r\n                    helpers.each(model.title, maxLineWidth);\r\n\r\n                    // Body width\r\n                    ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\r\n                    helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\r\n\r\n                    // Body lines may include some extra width due to the color box\r\n                    widthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\r\n                    helpers.each(body, function(bodyItem) {\r\n                        helpers.each(bodyItem.before, maxLineWidth);\r\n                        helpers.each(bodyItem.lines, maxLineWidth);\r\n                        helpers.each(bodyItem.after, maxLineWidth);\r\n                    });\r\n\r\n                    // Reset back to 0\r\n                    widthPadding = 0;\r\n\r\n                    // Footer width\r\n                    ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\r\n                    helpers.each(model.footer, maxLineWidth);\r\n\r\n                    // Add padding\r\n                    width += 2 * model.xPadding;\r\n\r\n                    return {\r\n                        width: width,\r\n                        height: height\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Helper to get the alignment of a tooltip given the size\r\n                 */\r\n                function determineAlignment(tooltip, size) {\r\n                    var model = tooltip._model;\r\n                    var chart = tooltip._chart;\r\n                    var chartArea = tooltip._chart.chartArea;\r\n                    var xAlign = 'center';\r\n                    var yAlign = 'center';\r\n\r\n                    if (model.y < size.height) {\r\n                        yAlign = 'top';\r\n                    } else if (model.y > (chart.height - size.height)) {\r\n                        yAlign = 'bottom';\r\n                    }\r\n\r\n                    var lf, rf; // functions to determine left, right alignment\r\n                    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\r\n                    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\r\n                    var midX = (chartArea.left + chartArea.right) / 2;\r\n                    var midY = (chartArea.top + chartArea.bottom) / 2;\r\n\r\n                    if (yAlign === 'center') {\r\n                        lf = function(x) {\r\n                            return x <= midX;\r\n                        };\r\n                        rf = function(x) {\r\n                            return x > midX;\r\n                        };\r\n                    } else {\r\n                        lf = function(x) {\r\n                            return x <= (size.width / 2);\r\n                        };\r\n                        rf = function(x) {\r\n                            return x >= (chart.width - (size.width / 2));\r\n                        };\r\n                    }\r\n\r\n                    olf = function(x) {\r\n                        return x + size.width + model.caretSize + model.caretPadding > chart.width;\r\n                    };\r\n                    orf = function(x) {\r\n                        return x - size.width - model.caretSize - model.caretPadding < 0;\r\n                    };\r\n                    yf = function(y) {\r\n                        return y <= midY ? 'top' : 'bottom';\r\n                    };\r\n\r\n                    if (lf(model.x)) {\r\n                        xAlign = 'left';\r\n\r\n                        // Is tooltip too wide and goes over the right side of the chart.?\r\n                        if (olf(model.x)) {\r\n                            xAlign = 'center';\r\n                            yAlign = yf(model.y);\r\n                        }\r\n                    } else if (rf(model.x)) {\r\n                        xAlign = 'right';\r\n\r\n                        // Is tooltip too wide and goes outside left edge of canvas?\r\n                        if (orf(model.x)) {\r\n                            xAlign = 'center';\r\n                            yAlign = yf(model.y);\r\n                        }\r\n                    }\r\n\r\n                    var opts = tooltip._options;\r\n                    return {\r\n                        xAlign: opts.xAlign ? opts.xAlign : xAlign,\r\n                        yAlign: opts.yAlign ? opts.yAlign : yAlign\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\r\n                 */\r\n                function getBackgroundPoint(vm, size, alignment, chart) {\r\n                    // Background Position\r\n                    var x = vm.x;\r\n                    var y = vm.y;\r\n\r\n                    var caretSize = vm.caretSize;\r\n                    var caretPadding = vm.caretPadding;\r\n                    var cornerRadius = vm.cornerRadius;\r\n                    var xAlign = alignment.xAlign;\r\n                    var yAlign = alignment.yAlign;\r\n                    var paddingAndSize = caretSize + caretPadding;\r\n                    var radiusAndPadding = cornerRadius + caretPadding;\r\n\r\n                    if (xAlign === 'right') {\r\n                        x -= size.width;\r\n                    } else if (xAlign === 'center') {\r\n                        x -= (size.width / 2);\r\n                        if (x + size.width > chart.width) {\r\n                            x = chart.width - size.width;\r\n                        }\r\n                        if (x < 0) {\r\n                            x = 0;\r\n                        }\r\n                    }\r\n\r\n                    if (yAlign === 'top') {\r\n                        y += paddingAndSize;\r\n                    } else if (yAlign === 'bottom') {\r\n                        y -= size.height + paddingAndSize;\r\n                    } else {\r\n                        y -= (size.height / 2);\r\n                    }\r\n\r\n                    if (yAlign === 'center') {\r\n                        if (xAlign === 'left') {\r\n                            x += paddingAndSize;\r\n                        } else if (xAlign === 'right') {\r\n                            x -= paddingAndSize;\r\n                        }\r\n                    } else if (xAlign === 'left') {\r\n                        x -= radiusAndPadding;\r\n                    } else if (xAlign === 'right') {\r\n                        x += radiusAndPadding;\r\n                    }\r\n\r\n                    return {\r\n                        x: x,\r\n                        y: y\r\n                    };\r\n                }\r\n\r\n                Chart.Tooltip = Element.extend({\r\n                    initialize: function() {\r\n                        this._model = getBaseModel(this._options);\r\n                        this._lastActive = [];\r\n                    },\r\n\r\n                    // Get the title\r\n                    // Args are: (tooltipItem, data)\r\n                    getTitle: function() {\r\n                        var me = this;\r\n                        var opts = me._options;\r\n                        var callbacks = opts.callbacks;\r\n\r\n                        var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\r\n                        var title = callbacks.title.apply(me, arguments);\r\n                        var afterTitle = callbacks.afterTitle.apply(me, arguments);\r\n\r\n                        var lines = [];\r\n                        lines = pushOrConcat(lines, beforeTitle);\r\n                        lines = pushOrConcat(lines, title);\r\n                        lines = pushOrConcat(lines, afterTitle);\r\n\r\n                        return lines;\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getBeforeBody: function() {\r\n                        var lines = this._options.callbacks.beforeBody.apply(this, arguments);\r\n                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getBody: function(tooltipItems, data) {\r\n                        var me = this;\r\n                        var callbacks = me._options.callbacks;\r\n                        var bodyItems = [];\r\n\r\n                        helpers.each(tooltipItems, function(tooltipItem) {\r\n                            var bodyItem = {\r\n                                before: [],\r\n                                lines: [],\r\n                                after: []\r\n                            };\r\n                            pushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\r\n                            pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\r\n                            pushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\r\n\r\n                            bodyItems.push(bodyItem);\r\n                        });\r\n\r\n                        return bodyItems;\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getAfterBody: function() {\r\n                        var lines = this._options.callbacks.afterBody.apply(this, arguments);\r\n                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n                    },\r\n\r\n                    // Get the footer and beforeFooter and afterFooter lines\r\n                    // Args are: (tooltipItem, data)\r\n                    getFooter: function() {\r\n                        var me = this;\r\n                        var callbacks = me._options.callbacks;\r\n\r\n                        var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\r\n                        var footer = callbacks.footer.apply(me, arguments);\r\n                        var afterFooter = callbacks.afterFooter.apply(me, arguments);\r\n\r\n                        var lines = [];\r\n                        lines = pushOrConcat(lines, beforeFooter);\r\n                        lines = pushOrConcat(lines, footer);\r\n                        lines = pushOrConcat(lines, afterFooter);\r\n\r\n                        return lines;\r\n                    },\r\n\r\n                    update: function(changed) {\r\n                        var me = this;\r\n                        var opts = me._options;\r\n\r\n                        // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\r\n                        // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\r\n                        // which breaks any animations.\r\n                        var existingModel = me._model;\r\n                        var model = me._model = getBaseModel(opts);\r\n                        var active = me._active;\r\n\r\n                        var data = me._data;\r\n\r\n                        // In the case where active.length === 0 we need to keep these at existing values for good animations\r\n                        var alignment = {\r\n                            xAlign: existingModel.xAlign,\r\n                            yAlign: existingModel.yAlign\r\n                        };\r\n                        var backgroundPoint = {\r\n                            x: existingModel.x,\r\n                            y: existingModel.y\r\n                        };\r\n                        var tooltipSize = {\r\n                            width: existingModel.width,\r\n                            height: existingModel.height\r\n                        };\r\n                        var tooltipPosition = {\r\n                            x: existingModel.caretX,\r\n                            y: existingModel.caretY\r\n                        };\r\n\r\n                        var i, len;\r\n\r\n                        if (active.length) {\r\n                            model.opacity = 1;\r\n\r\n                            var labelColors = [];\r\n                            var labelTextColors = [];\r\n                            tooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\r\n\r\n                            var tooltipItems = [];\r\n                            for (i = 0, len = active.length; i < len; ++i) {\r\n                                tooltipItems.push(createTooltipItem(active[i]));\r\n                            }\r\n\r\n                            // If the user provided a filter function, use it to modify the tooltip items\r\n                            if (opts.filter) {\r\n                                tooltipItems = tooltipItems.filter(function(a) {\r\n                                    return opts.filter(a, data);\r\n                                });\r\n                            }\r\n\r\n                            // If the user provided a sorting function, use it to modify the tooltip items\r\n                            if (opts.itemSort) {\r\n                                tooltipItems = tooltipItems.sort(function(a, b) {\r\n                                    return opts.itemSort(a, b, data);\r\n                                });\r\n                            }\r\n\r\n                            // Determine colors for boxes\r\n                            helpers.each(tooltipItems, function(tooltipItem) {\r\n                                labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\r\n                                labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\r\n                            });\r\n\r\n\r\n                            // Build the Text Lines\r\n                            model.title = me.getTitle(tooltipItems, data);\r\n                            model.beforeBody = me.getBeforeBody(tooltipItems, data);\r\n                            model.body = me.getBody(tooltipItems, data);\r\n                            model.afterBody = me.getAfterBody(tooltipItems, data);\r\n                            model.footer = me.getFooter(tooltipItems, data);\r\n\r\n                            // Initial positioning and colors\r\n                            model.x = Math.round(tooltipPosition.x);\r\n                            model.y = Math.round(tooltipPosition.y);\r\n                            model.caretPadding = opts.caretPadding;\r\n                            model.labelColors = labelColors;\r\n                            model.labelTextColors = labelTextColors;\r\n\r\n                            // data points\r\n                            model.dataPoints = tooltipItems;\r\n\r\n                            // We need to determine alignment of the tooltip\r\n                            tooltipSize = getTooltipSize(this, model);\r\n                            alignment = determineAlignment(this, tooltipSize);\r\n                            // Final Size and Position\r\n                            backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\r\n                        } else {\r\n                            model.opacity = 0;\r\n                        }\r\n\r\n                        model.xAlign = alignment.xAlign;\r\n                        model.yAlign = alignment.yAlign;\r\n                        model.x = backgroundPoint.x;\r\n                        model.y = backgroundPoint.y;\r\n                        model.width = tooltipSize.width;\r\n                        model.height = tooltipSize.height;\r\n\r\n                        // Point where the caret on the tooltip points to\r\n                        model.caretX = tooltipPosition.x;\r\n                        model.caretY = tooltipPosition.y;\r\n\r\n                        me._model = model;\r\n\r\n                        if (changed && opts.custom) {\r\n                            opts.custom.call(me, model);\r\n                        }\r\n\r\n                        return me;\r\n                    },\r\n                    drawCaret: function(tooltipPoint, size) {\r\n                        var ctx = this._chart.ctx;\r\n                        var vm = this._view;\r\n                        var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\r\n\r\n                        ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n                        ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n                        ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n                    },\r\n                    getCaretPosition: function(tooltipPoint, size, vm) {\r\n                        var x1, x2, x3, y1, y2, y3;\r\n                        var caretSize = vm.caretSize;\r\n                        var cornerRadius = vm.cornerRadius;\r\n                        var xAlign = vm.xAlign;\r\n                        var yAlign = vm.yAlign;\r\n                        var ptX = tooltipPoint.x;\r\n                        var ptY = tooltipPoint.y;\r\n                        var width = size.width;\r\n                        var height = size.height;\r\n\r\n                        if (yAlign === 'center') {\r\n                            y2 = ptY + (height / 2);\r\n\r\n                            if (xAlign === 'left') {\r\n                                x1 = ptX;\r\n                                x2 = x1 - caretSize;\r\n                                x3 = x1;\r\n\r\n                                y1 = y2 + caretSize;\r\n                                y3 = y2 - caretSize;\r\n                            } else {\r\n                                x1 = ptX + width;\r\n                                x2 = x1 + caretSize;\r\n                                x3 = x1;\r\n\r\n                                y1 = y2 - caretSize;\r\n                                y3 = y2 + caretSize;\r\n                            }\r\n                        } else {\r\n                            if (xAlign === 'left') {\r\n                                x2 = ptX + cornerRadius + (caretSize);\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            } else if (xAlign === 'right') {\r\n                                x2 = ptX + width - cornerRadius - caretSize;\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            } else {\r\n                                x2 = vm.caretX;\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            }\r\n                            if (yAlign === 'top') {\r\n                                y1 = ptY;\r\n                                y2 = y1 - caretSize;\r\n                                y3 = y1;\r\n                            } else {\r\n                                y1 = ptY + height;\r\n                                y2 = y1 + caretSize;\r\n                                y3 = y1;\r\n                                // invert drawing order\r\n                                var tmp = x3;\r\n                                x3 = x1;\r\n                                x1 = tmp;\r\n                            }\r\n                        }\r\n                        return { x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3 };\r\n                    },\r\n                    drawTitle: function(pt, vm, ctx, opacity) {\r\n                        var title = vm.title;\r\n\r\n                        if (title.length) {\r\n                            ctx.textAlign = vm._titleAlign;\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            var titleFontSize = vm.titleFontSize;\r\n                            var titleSpacing = vm.titleSpacing;\r\n\r\n                            ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\r\n                            ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\r\n                            var i, len;\r\n                            for (i = 0, len = title.length; i < len; ++i) {\r\n                                ctx.fillText(title[i], pt.x, pt.y);\r\n                                pt.y += titleFontSize + titleSpacing; // Line Height and spacing\r\n\r\n                                if (i + 1 === title.length) {\r\n                                    pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    drawBody: function(pt, vm, ctx, opacity) {\r\n                        var bodyFontSize = vm.bodyFontSize;\r\n                        var bodySpacing = vm.bodySpacing;\r\n                        var body = vm.body;\r\n\r\n                        ctx.textAlign = vm._bodyAlign;\r\n                        ctx.textBaseline = 'top';\r\n                        ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\r\n                        // Before Body\r\n                        var xLinePadding = 0;\r\n                        var fillLineOfText = function(line) {\r\n                            ctx.fillText(line, pt.x + xLinePadding, pt.y);\r\n                            pt.y += bodyFontSize + bodySpacing;\r\n                        };\r\n\r\n                        // Before body lines\r\n                        ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\r\n                        helpers.each(vm.beforeBody, fillLineOfText);\r\n\r\n                        var drawColorBoxes = vm.displayColors;\r\n                        xLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\r\n\r\n                        // Draw body lines now\r\n                        helpers.each(body, function(bodyItem, i) {\r\n                            var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\r\n                            ctx.fillStyle = textColor;\r\n                            helpers.each(bodyItem.before, fillLineOfText);\r\n\r\n                            helpers.each(bodyItem.lines, function(line) {\r\n                                // Draw Legend-like boxes if needed\r\n                                if (drawColorBoxes) {\r\n                                    // Fill a white rect so that colours merge nicely if the opacity is < 1\r\n                                    ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\r\n                                    ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n                                    // Border\r\n                                    ctx.lineWidth = 1;\r\n                                    ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\r\n                                    ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n                                    // Inner square\r\n                                    ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\r\n                                    ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\r\n                                    ctx.fillStyle = textColor;\r\n                                }\r\n\r\n                                fillLineOfText(line);\r\n                            });\r\n\r\n                            helpers.each(bodyItem.after, fillLineOfText);\r\n                        });\r\n\r\n                        // Reset back to 0 for after body\r\n                        xLinePadding = 0;\r\n\r\n                        // After body lines\r\n                        helpers.each(vm.afterBody, fillLineOfText);\r\n                        pt.y -= bodySpacing; // Remove last body spacing\r\n                    },\r\n                    drawFooter: function(pt, vm, ctx, opacity) {\r\n                        var footer = vm.footer;\r\n\r\n                        if (footer.length) {\r\n                            pt.y += vm.footerMarginTop;\r\n\r\n                            ctx.textAlign = vm._footerAlign;\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\r\n                            ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\r\n                            helpers.each(footer, function(line) {\r\n                                ctx.fillText(line, pt.x, pt.y);\r\n                                pt.y += vm.footerFontSize + vm.footerSpacing;\r\n                            });\r\n                        }\r\n                    },\r\n                    drawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\r\n                        ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\r\n                        ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\r\n                        ctx.lineWidth = vm.borderWidth;\r\n                        var xAlign = vm.xAlign;\r\n                        var yAlign = vm.yAlign;\r\n                        var x = pt.x;\r\n                        var y = pt.y;\r\n                        var width = tooltipSize.width;\r\n                        var height = tooltipSize.height;\r\n                        var radius = vm.cornerRadius;\r\n\r\n                        ctx.beginPath();\r\n                        ctx.moveTo(x + radius, y);\r\n                        if (yAlign === 'top') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + width - radius, y);\r\n                        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n                        if (yAlign === 'center' && xAlign === 'right') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + width, y + height - radius);\r\n                        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n                        if (yAlign === 'bottom') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + radius, y + height);\r\n                        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n                        if (yAlign === 'center' && xAlign === 'left') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x, y + radius);\r\n                        ctx.quadraticCurveTo(x, y, x + radius, y);\r\n                        ctx.closePath();\r\n\r\n                        ctx.fill();\r\n\r\n                        if (vm.borderWidth > 0) {\r\n                            ctx.stroke();\r\n                        }\r\n                    },\r\n                    draw: function() {\r\n                        var ctx = this._chart.ctx;\r\n                        var vm = this._view;\r\n\r\n                        if (vm.opacity === 0) {\r\n                            return;\r\n                        }\r\n\r\n                        var tooltipSize = {\r\n                            width: vm.width,\r\n                            height: vm.height\r\n                        };\r\n                        var pt = {\r\n                            x: vm.x,\r\n                            y: vm.y\r\n                        };\r\n\r\n                        // IE11/Edge does not like very small opacities, so snap to 0\r\n                        var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\r\n\r\n                        // Truthy/falsey value for empty tooltip\r\n                        var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\r\n\r\n                        if (this._options.enabled && hasTooltipContent) {\r\n                            // Draw Background\r\n                            this.drawBackground(pt, vm, ctx, tooltipSize, opacity);\r\n\r\n                            // Draw Title, Body, and Footer\r\n                            pt.x += vm.xPadding;\r\n                            pt.y += vm.yPadding;\r\n\r\n                            // Titles\r\n                            this.drawTitle(pt, vm, ctx, opacity);\r\n\r\n                            // Body\r\n                            this.drawBody(pt, vm, ctx, opacity);\r\n\r\n                            // Footer\r\n                            this.drawFooter(pt, vm, ctx, opacity);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Handle an event\r\n                     * @private\r\n                     * @param {IEvent} event - The event to handle\r\n                     * @returns {Boolean} true if the tooltip changed\r\n                     */\r\n                    handleEvent: function(e) {\r\n                        var me = this;\r\n                        var options = me._options;\r\n                        var changed = false;\r\n\r\n                        me._lastActive = me._lastActive || [];\r\n\r\n                        // Find Active Elements for tooltips\r\n                        if (e.type === 'mouseout') {\r\n                            me._active = [];\r\n                        } else {\r\n                            me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\r\n                        }\r\n\r\n                        // Remember Last Actives\r\n                        changed = !helpers.arrayEquals(me._active, me._lastActive);\r\n\r\n                        // Only handle target event on tooltip change\r\n                        if (changed) {\r\n                            me._lastActive = me._active;\r\n\r\n                            if (options.enabled || options.custom) {\r\n                                me._eventPosition = {\r\n                                    x: e.x,\r\n                                    y: e.y\r\n                                };\r\n\r\n                                me.update(true);\r\n                                me.pivot();\r\n                            }\r\n                        }\r\n\r\n                        return changed;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * @namespace Chart.Tooltip.positioners\r\n                 */\r\n                Chart.Tooltip.positioners = {\r\n                    /**\r\n                     * Average mode places the tooltip at the average position of the elements shown\r\n                     * @function Chart.Tooltip.positioners.average\r\n                     * @param elements {ChartElement[]} the elements being displayed in the tooltip\r\n                     * @returns {Point} tooltip position\r\n                     */\r\n                    average: function(elements) {\r\n                        if (!elements.length) {\r\n                            return false;\r\n                        }\r\n\r\n                        var i, len;\r\n                        var x = 0;\r\n                        var y = 0;\r\n                        var count = 0;\r\n\r\n                        for (i = 0, len = elements.length; i < len; ++i) {\r\n                            var el = elements[i];\r\n                            if (el && el.hasValue()) {\r\n                                var pos = el.tooltipPosition();\r\n                                x += pos.x;\r\n                                y += pos.y;\r\n                                ++count;\r\n                            }\r\n                        }\r\n\r\n                        return {\r\n                            x: Math.round(x / count),\r\n                            y: Math.round(y / count)\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Gets the tooltip position nearest of the item nearest to the event position\r\n                     * @function Chart.Tooltip.positioners.nearest\r\n                     * @param elements {Chart.Element[]} the tooltip elements\r\n                     * @param eventPosition {Point} the position of the event in canvas coordinates\r\n                     * @returns {Point} the tooltip position\r\n                     */\r\n                    nearest: function(elements, eventPosition) {\r\n                        var x = eventPosition.x;\r\n                        var y = eventPosition.y;\r\n                        var minDistance = Number.POSITIVE_INFINITY;\r\n                        var i, len, nearestElement;\r\n\r\n                        for (i = 0, len = elements.length; i < len; ++i) {\r\n                            var el = elements[i];\r\n                            if (el && el.hasValue()) {\r\n                                var center = el.getCenterPoint();\r\n                                var d = helpers.distanceBetweenPoints(eventPosition, center);\r\n\r\n                                if (d < minDistance) {\r\n                                    minDistance = d;\r\n                                    nearestElement = el;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (nearestElement) {\r\n                            var tp = nearestElement.tooltipPosition();\r\n                            x = tp.x;\r\n                            y = tp.y;\r\n                        }\r\n\r\n                        return {\r\n                            x: x,\r\n                            y: y\r\n                        };\r\n                    }\r\n                };\r\n            };\r\n\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 27: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    arc: {\r\n                        backgroundColor: defaults.global.defaultColor,\r\n                        borderColor: '#fff',\r\n                        borderWidth: 2\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = Element.extend({\r\n                inLabelRange: function(mouseX) {\r\n                    var vm = this._view;\r\n\r\n                    if (vm) {\r\n                        return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                inRange: function(chartX, chartY) {\r\n                    var vm = this._view;\r\n\r\n                    if (vm) {\r\n                        var pointRelativePosition = helpers.getAngleFromPoint(vm, { x: chartX, y: chartY });\r\n                        var angle = pointRelativePosition.angle;\r\n                        var distance = pointRelativePosition.distance;\r\n\r\n                        // Sanitise angle range\r\n                        var startAngle = vm.startAngle;\r\n                        var endAngle = vm.endAngle;\r\n                        while (endAngle < startAngle) {\r\n                            endAngle += 2.0 * Math.PI;\r\n                        }\r\n                        while (angle > endAngle) {\r\n                            angle -= 2.0 * Math.PI;\r\n                        }\r\n                        while (angle < startAngle) {\r\n                            angle += 2.0 * Math.PI;\r\n                        }\r\n\r\n                        // Check if within the range of the open/close angle\r\n                        var betweenAngles = (angle >= startAngle && angle <= endAngle);\r\n                        var withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\r\n\r\n                        return (betweenAngles && withinRadius);\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\r\n                    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\r\n                    return {\r\n                        x: vm.x + Math.cos(halfAngle) * halfRadius,\r\n                        y: vm.y + Math.sin(halfAngle) * halfRadius\r\n                    };\r\n                },\r\n\r\n                getArea: function() {\r\n                    var vm = this._view;\r\n                    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\r\n                    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\r\n\r\n                    return {\r\n                        x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\r\n                        y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\r\n                    };\r\n                },\r\n\r\n                draw: function() {\r\n                    var ctx = this._chart.ctx;\r\n                    var vm = this._view;\r\n                    var sA = vm.startAngle;\r\n                    var eA = vm.endAngle;\r\n\r\n                    ctx.beginPath();\r\n\r\n                    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\r\n                    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\r\n\r\n                    ctx.closePath();\r\n                    ctx.strokeStyle = vm.borderColor;\r\n                    ctx.lineWidth = vm.borderWidth;\r\n\r\n                    ctx.fillStyle = vm.backgroundColor;\r\n\r\n                    ctx.fill();\r\n                    ctx.lineJoin = 'bevel';\r\n\r\n                    if (vm.borderWidth) {\r\n                        ctx.stroke();\r\n                    }\r\n                }\r\n            });\r\n\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 28: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            var globalDefaults = defaults.global;\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    line: {\r\n                        tension: 0.4,\r\n                        backgroundColor: globalDefaults.defaultColor,\r\n                        borderWidth: 3,\r\n                        borderColor: globalDefaults.defaultColor,\r\n                        borderCapStyle: 'butt',\r\n                        borderDash: [],\r\n                        borderDashOffset: 0.0,\r\n                        borderJoinStyle: 'miter',\r\n                        capBezierPoints: true,\r\n                        fill: true, // do we fill in the area between the line and its base axis\r\n                    }\r\n                }\r\n            });\r\n\r\n            module.exports = Element.extend({\r\n                draw: function() {\r\n                    var me = this;\r\n                    var vm = me._view;\r\n                    var ctx = me._chart.ctx;\r\n                    var spanGaps = vm.spanGaps;\r\n                    var points = me._children.slice(); // clone array\r\n                    var globalOptionLineElements = globalDefaults.elements.line;\r\n                    var lastDrawnIndex = -1;\r\n                    var index, current, previous, currentVM;\r\n\r\n                    // If we are looping, adding the first point again\r\n                    if (me._loop && points.length) {\r\n                        points.push(points[0]);\r\n                    }\r\n\r\n                    ctx.save();\r\n\r\n                    // Stroke Line Options\r\n                    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\r\n\r\n                    // IE 9 and 10 do not support line dash\r\n                    if (ctx.setLineDash) {\r\n                        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\r\n                    }\r\n\r\n                    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\r\n                    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\r\n                    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\r\n                    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\r\n\r\n                    // Stroke Line\r\n                    ctx.beginPath();\r\n                    lastDrawnIndex = -1;\r\n\r\n                    for (index = 0; index < points.length; ++index) {\r\n                        current = points[index];\r\n                        previous = helpers.previousItem(points, index);\r\n                        currentVM = current._view;\r\n\r\n                        // First point moves to it's starting position no matter what\r\n                        if (index === 0) {\r\n                            if (!currentVM.skip) {\r\n                                ctx.moveTo(currentVM.x, currentVM.y);\r\n                                lastDrawnIndex = index;\r\n                            }\r\n                        } else {\r\n                            previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\r\n\r\n                            if (!currentVM.skip) {\r\n                                if ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\r\n                                    // There was a gap and this is the first point after the gap\r\n                                    ctx.moveTo(currentVM.x, currentVM.y);\r\n                                } else {\r\n                                    // Line to next point\r\n                                    helpers.canvas.lineTo(ctx, previous._view, current._view);\r\n                                }\r\n                                lastDrawnIndex = index;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    ctx.stroke();\r\n                    ctx.restore();\r\n                }\r\n            });\r\n\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 29: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n\r\n            var defaultColor = defaults.global.defaultColor;\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    point: {\r\n                        radius: 3,\r\n                        pointStyle: 'circle',\r\n                        backgroundColor: defaultColor,\r\n                        borderColor: defaultColor,\r\n                        borderWidth: 1,\r\n                        // Hover\r\n                        hitRadius: 1,\r\n                        hoverRadius: 4,\r\n                        hoverBorderWidth: 1\r\n                    }\r\n                }\r\n            });\r\n\r\n            function xRange(mouseX) {\r\n                var vm = this._view;\r\n                return vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\r\n            }\r\n\r\n            function yRange(mouseY) {\r\n                var vm = this._view;\r\n                return vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\r\n            }\r\n\r\n            module.exports = Element.extend({\r\n                inRange: function(mouseX, mouseY) {\r\n                    var vm = this._view;\r\n                    return vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\r\n                },\r\n\r\n                inLabelRange: xRange,\r\n                inXRange: xRange,\r\n                inYRange: yRange,\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y\r\n                    };\r\n                },\r\n\r\n                getArea: function() {\r\n                    return Math.PI * Math.pow(this._view.radius, 2);\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y,\r\n                        padding: vm.radius + vm.borderWidth\r\n                    };\r\n                },\r\n\r\n                draw: function(chartArea) {\r\n                    var vm = this._view;\r\n                    var model = this._model;\r\n                    var ctx = this._chart.ctx;\r\n                    var pointStyle = vm.pointStyle;\r\n                    var radius = vm.radius;\r\n                    var x = vm.x;\r\n                    var y = vm.y;\r\n                    var color = helpers.color;\r\n                    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\r\n                    var ratio = 0;\r\n\r\n                    if (vm.skip) {\r\n                        return;\r\n                    }\r\n\r\n                    ctx.strokeStyle = vm.borderColor || defaultColor;\r\n                    ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\r\n                    ctx.fillStyle = vm.backgroundColor || defaultColor;\r\n\r\n                    // Cliping for Points.\r\n                    // going out from inner charArea?\r\n                    if ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\r\n                        // Point fade out\r\n                        if (model.x < chartArea.left) {\r\n                            ratio = (x - model.x) / (chartArea.left - model.x);\r\n                        } else if (chartArea.right * errMargin < model.x) {\r\n                            ratio = (model.x - x) / (model.x - chartArea.right);\r\n                        } else if (model.y < chartArea.top) {\r\n                            ratio = (y - model.y) / (chartArea.top - model.y);\r\n                        } else if (chartArea.bottom * errMargin < model.y) {\r\n                            ratio = (model.y - y) / (model.y - chartArea.bottom);\r\n                        }\r\n                        ratio = Math.round(ratio * 100) / 100;\r\n                        ctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\r\n                        ctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\r\n                    }\r\n\r\n                    helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\r\n                }\r\n            });\r\n\r\n        }, { \"16\": 16, \"17\": 17, \"36\": 36 }], 30: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n\r\n            defaults._set('global', {\r\n                elements: {\r\n                    rectangle: {\r\n                        backgroundColor: defaults.global.defaultColor,\r\n                        borderColor: defaults.global.defaultColor,\r\n                        borderSkipped: 'bottom',\r\n                        borderWidth: 0\r\n                    }\r\n                }\r\n            });\r\n\r\n            function isVertical(bar) {\r\n                return bar._view.width !== undefined;\r\n            }\r\n\r\n            /**\r\n             * Helper function to get the bounds of the bar regardless of the orientation\r\n             * @param bar {Chart.Element.Rectangle} the bar\r\n             * @return {Bounds} bounds of the bar\r\n             * @private\r\n             */\r\n            function getBarBounds(bar) {\r\n                var vm = bar._view;\r\n                var x1, x2, y1, y2;\r\n\r\n                if (isVertical(bar)) {\r\n                    // vertical\r\n                    var halfWidth = vm.width / 2;\r\n                    x1 = vm.x - halfWidth;\r\n                    x2 = vm.x + halfWidth;\r\n                    y1 = Math.min(vm.y, vm.base);\r\n                    y2 = Math.max(vm.y, vm.base);\r\n                } else {\r\n                    // horizontal bar\r\n                    var halfHeight = vm.height / 2;\r\n                    x1 = Math.min(vm.x, vm.base);\r\n                    x2 = Math.max(vm.x, vm.base);\r\n                    y1 = vm.y - halfHeight;\r\n                    y2 = vm.y + halfHeight;\r\n                }\r\n\r\n                return {\r\n                    left: x1,\r\n                    top: y1,\r\n                    right: x2,\r\n                    bottom: y2\r\n                };\r\n            }\r\n\r\n            module.exports = Element.extend({\r\n                draw: function() {\r\n                    var ctx = this._chart.ctx;\r\n                    var vm = this._view;\r\n                    var left, right, top, bottom, signX, signY, borderSkipped;\r\n                    var borderWidth = vm.borderWidth;\r\n\r\n                    if (!vm.horizontal) {\r\n                        // bar\r\n                        left = vm.x - vm.width / 2;\r\n                        right = vm.x + vm.width / 2;\r\n                        top = vm.y;\r\n                        bottom = vm.base;\r\n                        signX = 1;\r\n                        signY = bottom > top ? 1 : -1;\r\n                        borderSkipped = vm.borderSkipped || 'bottom';\r\n                    } else {\r\n                        // horizontal bar\r\n                        left = vm.base;\r\n                        right = vm.x;\r\n                        top = vm.y - vm.height / 2;\r\n                        bottom = vm.y + vm.height / 2;\r\n                        signX = right > left ? 1 : -1;\r\n                        signY = 1;\r\n                        borderSkipped = vm.borderSkipped || 'left';\r\n                    }\r\n\r\n                    // Canvas doesn't allow us to stroke inside the width so we can\r\n                    // adjust the sizes to fit if we're setting a stroke on the line\r\n                    if (borderWidth) {\r\n                        // borderWidth shold be less than bar width and bar height.\r\n                        var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n                        borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n                        var halfStroke = borderWidth / 2;\r\n                        // Adjust borderWidth when bar top position is near vm.base(zero).\r\n                        var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n                        var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n                        var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n                        var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n                        // not become a vertical line?\r\n                        if (borderLeft !== borderRight) {\r\n                            top = borderTop;\r\n                            bottom = borderBottom;\r\n                        }\r\n                        // not become a horizontal line?\r\n                        if (borderTop !== borderBottom) {\r\n                            left = borderLeft;\r\n                            right = borderRight;\r\n                        }\r\n                    }\r\n\r\n                    ctx.beginPath();\r\n                    ctx.fillStyle = vm.backgroundColor;\r\n                    ctx.strokeStyle = vm.borderColor;\r\n                    ctx.lineWidth = borderWidth;\r\n\r\n                    // Corner points, from bottom-left to bottom-right clockwise\r\n                    // | 1 2 |\r\n                    // | 0 3 |\r\n                    var corners = [\r\n                        [left, bottom],\r\n                        [left, top],\r\n                        [right, top],\r\n                        [right, bottom]\r\n                    ];\r\n\r\n                    // Find first (starting) corner with fallback to 'bottom'\r\n                    var borders = ['bottom', 'left', 'top', 'right'];\r\n                    var startCorner = borders.indexOf(borderSkipped, 0);\r\n                    if (startCorner === -1) {\r\n                        startCorner = 0;\r\n                    }\r\n\r\n                    function cornerAt(index) {\r\n                        return corners[(startCorner + index) % 4];\r\n                    }\r\n\r\n                    // Draw rectangle from 'startCorner'\r\n                    var corner = cornerAt(0);\r\n                    ctx.moveTo(corner[0], corner[1]);\r\n\r\n                    for (var i = 1; i < 4; i++) {\r\n                        corner = cornerAt(i);\r\n                        ctx.lineTo(corner[0], corner[1]);\r\n                    }\r\n\r\n                    ctx.fill();\r\n                    if (borderWidth) {\r\n                        ctx.stroke();\r\n                    }\r\n                },\r\n\r\n                height: function() {\r\n                    var vm = this._view;\r\n                    return vm.base - vm.y;\r\n                },\r\n\r\n                inRange: function(mouseX, mouseY) {\r\n                    var inRange = false;\r\n\r\n                    if (this._view) {\r\n                        var bounds = getBarBounds(this);\r\n                        inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                    }\r\n\r\n                    return inRange;\r\n                },\r\n\r\n                inLabelRange: function(mouseX, mouseY) {\r\n                    var me = this;\r\n                    if (!me._view) {\r\n                        return false;\r\n                    }\r\n\r\n                    var inRange = false;\r\n                    var bounds = getBarBounds(me);\r\n\r\n                    if (isVertical(me)) {\r\n                        inRange = mouseX >= bounds.left && mouseX <= bounds.right;\r\n                    } else {\r\n                        inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                    }\r\n\r\n                    return inRange;\r\n                },\r\n\r\n                inXRange: function(mouseX) {\r\n                    var bounds = getBarBounds(this);\r\n                    return mouseX >= bounds.left && mouseX <= bounds.right;\r\n                },\r\n\r\n                inYRange: function(mouseY) {\r\n                    var bounds = getBarBounds(this);\r\n                    return mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                },\r\n\r\n                getCenterPoint: function() {\r\n                    var vm = this._view;\r\n                    var x, y;\r\n                    if (isVertical(this)) {\r\n                        x = vm.x;\r\n                        y = (vm.y + vm.base) / 2;\r\n                    } else {\r\n                        x = (vm.x + vm.base) / 2;\r\n                        y = vm.y;\r\n                    }\r\n\r\n                    return { x: x, y: y };\r\n                },\r\n\r\n                getArea: function() {\r\n                    var vm = this._view;\r\n                    return vm.width * Math.abs(vm.y - vm.base);\r\n                },\r\n\r\n                tooltipPosition: function() {\r\n                    var vm = this._view;\r\n                    return {\r\n                        x: vm.x,\r\n                        y: vm.y\r\n                    };\r\n                }\r\n            });\r\n\r\n        }, { \"16\": 16, \"17\": 17 }], 31: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = {};\r\n            module.exports.Arc = require(27);\r\n            module.exports.Line = require(28);\r\n            module.exports.Point = require(29);\r\n            module.exports.Rectangle = require(30);\r\n\r\n        }, { \"27\": 27, \"28\": 28, \"29\": 29, \"30\": 30 }], 32: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * @namespace Chart.helpers.canvas\r\n             */\r\n            var exports = module.exports = {\r\n                /**\r\n                 * Clears the entire canvas associated to the given `chart`.\r\n                 * @param {Chart} chart - The chart for which to clear the canvas.\r\n                 */\r\n                clear: function(chart) {\r\n                    chart.ctx.clearRect(0, 0, chart.width, chart.height);\r\n                },\r\n\r\n                /**\r\n                 * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\r\n                 * given size (width, height) and the same `radius` for all corners.\r\n                 * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\r\n                 * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\r\n                 * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\r\n                 * @param {Number} width - The rectangle's width.\r\n                 * @param {Number} height - The rectangle's height.\r\n                 * @param {Number} radius - The rounded amount (in pixels) for the four corners.\r\n                 * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\r\n                 */\r\n                roundedRect: function(ctx, x, y, width, height, radius) {\r\n                    if (radius) {\r\n                        var rx = Math.min(radius, width / 2);\r\n                        var ry = Math.min(radius, height / 2);\r\n\r\n                        ctx.moveTo(x + rx, y);\r\n                        ctx.lineTo(x + width - rx, y);\r\n                        ctx.quadraticCurveTo(x + width, y, x + width, y + ry);\r\n                        ctx.lineTo(x + width, y + height - ry);\r\n                        ctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\r\n                        ctx.lineTo(x + rx, y + height);\r\n                        ctx.quadraticCurveTo(x, y + height, x, y + height - ry);\r\n                        ctx.lineTo(x, y + ry);\r\n                        ctx.quadraticCurveTo(x, y, x + rx, y);\r\n                    } else {\r\n                        ctx.rect(x, y, width, height);\r\n                    }\r\n                },\r\n\r\n                drawPoint: function(ctx, style, radius, x, y) {\r\n                    var type, edgeLength, xOffset, yOffset, height, size;\r\n\r\n                    if (style && typeof style === 'object') {\r\n                        type = style.toString();\r\n                        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n                            ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    if (isNaN(radius) || radius <= 0) {\r\n                        return;\r\n                    }\r\n\r\n                    switch (style) {\r\n                        // Default includes circle\r\n                        default:\r\n                            ctx.beginPath();\r\n                            ctx.arc(x, y, radius, 0, Math.PI * 2);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'triangle':\r\n                            ctx.beginPath();\r\n                            edgeLength = 3 * radius / Math.sqrt(3);\r\n                            height = edgeLength * Math.sqrt(3) / 2;\r\n                            ctx.moveTo(x - edgeLength / 2, y + height / 3);\r\n                            ctx.lineTo(x + edgeLength / 2, y + height / 3);\r\n                            ctx.lineTo(x, y - 2 * height / 3);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'rect':\r\n                            size = 1 / Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            ctx.fillRect(x - size, y - size, 2 * size, 2 * size);\r\n                            ctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\r\n                            break;\r\n                        case 'rectRounded':\r\n                            var offset = radius / Math.SQRT2;\r\n                            var leftX = x - offset;\r\n                            var topY = y - offset;\r\n                            var sideSize = Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'rectRot':\r\n                            size = 1 / Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x - size, y);\r\n                            ctx.lineTo(x, y + size);\r\n                            ctx.lineTo(x + size, y);\r\n                            ctx.lineTo(x, y - size);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'cross':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y + radius);\r\n                            ctx.lineTo(x, y - radius);\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'crossRot':\r\n                            ctx.beginPath();\r\n                            xOffset = Math.cos(Math.PI / 4) * radius;\r\n                            yOffset = Math.sin(Math.PI / 4) * radius;\r\n                            ctx.moveTo(x - xOffset, y - yOffset);\r\n                            ctx.lineTo(x + xOffset, y + yOffset);\r\n                            ctx.moveTo(x - xOffset, y + yOffset);\r\n                            ctx.lineTo(x + xOffset, y - yOffset);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'star':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y + radius);\r\n                            ctx.lineTo(x, y - radius);\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            xOffset = Math.cos(Math.PI / 4) * radius;\r\n                            yOffset = Math.sin(Math.PI / 4) * radius;\r\n                            ctx.moveTo(x - xOffset, y - yOffset);\r\n                            ctx.lineTo(x + xOffset, y + yOffset);\r\n                            ctx.moveTo(x - xOffset, y + yOffset);\r\n                            ctx.lineTo(x + xOffset, y - yOffset);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'line':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'dash':\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                    }\r\n\r\n                    ctx.stroke();\r\n                },\r\n\r\n                clipArea: function(ctx, area) {\r\n                    ctx.save();\r\n                    ctx.beginPath();\r\n                    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\r\n                    ctx.clip();\r\n                },\r\n\r\n                unclipArea: function(ctx) {\r\n                    ctx.restore();\r\n                },\r\n\r\n                lineTo: function(ctx, previous, target, flip) {\r\n                    if (target.steppedLine) {\r\n                        if ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\r\n                            ctx.lineTo(previous.x, target.y);\r\n                        } else {\r\n                            ctx.lineTo(target.x, previous.y);\r\n                        }\r\n                        ctx.lineTo(target.x, target.y);\r\n                        return;\r\n                    }\r\n\r\n                    if (!target.tension) {\r\n                        ctx.lineTo(target.x, target.y);\r\n                        return;\r\n                    }\r\n\r\n                    ctx.bezierCurveTo(\r\n                        flip ? previous.controlPointPreviousX : previous.controlPointNextX,\r\n                        flip ? previous.controlPointPreviousY : previous.controlPointNextY,\r\n                        flip ? target.controlPointNextX : target.controlPointPreviousX,\r\n                        flip ? target.controlPointNextY : target.controlPointPreviousY,\r\n                        target.x,\r\n                        target.y);\r\n                }\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\r\n             * @namespace Chart.helpers.clear\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.clear = exports.clear;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\r\n             * @namespace Chart.helpers.drawRoundedRectangle\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.drawRoundedRectangle = function(ctx) {\r\n                ctx.beginPath();\r\n                exports.roundedRect.apply(exports, arguments);\r\n                ctx.closePath();\r\n            };\r\n\r\n        }, { \"33\": 33 }], 33: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            /**\r\n             * @namespace Chart.helpers\r\n             */\r\n            var helpers = {\r\n                /**\r\n                 * An empty function that can be used, for example, for optional callback.\r\n                 */\r\n                noop: function() { },\r\n\r\n                /**\r\n                 * Returns a unique id, sequentially generated from a global variable.\r\n                 * @returns {Number}\r\n                 * @function\r\n                 */\r\n                uid: (function() {\r\n                    var id = 0;\r\n                    return function() {\r\n                        return id++;\r\n                    };\r\n                }()),\r\n\r\n                /**\r\n                 * Returns true if `value` is neither null nor undefined, else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @since 2.7.0\r\n                 */\r\n                isNullOrUndef: function(value) {\r\n                    return value === null || typeof value === 'undefined';\r\n                },\r\n\r\n                /**\r\n                 * Returns true if `value` is an array, else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @function\r\n                 */\r\n                isArray: Array.isArray ? Array.isArray : function(value) {\r\n                    return Object.prototype.toString.call(value) === '[object Array]';\r\n                },\r\n\r\n                /**\r\n                 * Returns true if `value` is an object (excluding null), else returns false.\r\n                 * @param {*} value - The value to test.\r\n                 * @returns {Boolean}\r\n                 * @since 2.7.0\r\n                 */\r\n                isObject: function(value) {\r\n                    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\r\n                },\r\n\r\n                /**\r\n                 * Returns `value` if defined, else returns `defaultValue`.\r\n                 * @param {*} value - The value to return if defined.\r\n                 * @param {*} defaultValue - The value to return if `value` is undefined.\r\n                 * @returns {*}\r\n                 */\r\n                valueOrDefault: function(value, defaultValue) {\r\n                    return typeof value === 'undefined' ? defaultValue : value;\r\n                },\r\n\r\n                /**\r\n                 * Returns value at the given `index` in array if defined, else returns `defaultValue`.\r\n                 * @param {Array} value - The array to lookup for value at `index`.\r\n                 * @param {Number} index - The index in `value` to lookup for value.\r\n                 * @param {*} defaultValue - The value to return if `value[index]` is undefined.\r\n                 * @returns {*}\r\n                 */\r\n                valueAtIndexOrDefault: function(value, index, defaultValue) {\r\n                    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\r\n                },\r\n\r\n                /**\r\n                 * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\r\n                 * value returned by `fn`. If `fn` is not a function, this method returns undefined.\r\n                 * @param {Function} fn - The function to call.\r\n                 * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\r\n                 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\r\n                 * @returns {*}\r\n                 */\r\n                callback: function(fn, args, thisArg) {\r\n                    if (fn && typeof fn.call === 'function') {\r\n                        return fn.apply(thisArg, args);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Note(SB) for performance sake, this method should only be used when loopable type\r\n                 * is unknown or in none intensive code (not called often and small loopable). Else\r\n                 * it's preferable to use a regular for() loop and save extra function calls.\r\n                 * @param {Object|Array} loopable - The object or array to be iterated.\r\n                 * @param {Function} fn - The function to call for each item.\r\n                 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\r\n                 * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\r\n                 */\r\n                each: function(loopable, fn, thisArg, reverse) {\r\n                    var i, len, keys;\r\n                    if (helpers.isArray(loopable)) {\r\n                        len = loopable.length;\r\n                        if (reverse) {\r\n                            for (i = len - 1; i >= 0; i--) {\r\n                                fn.call(thisArg, loopable[i], i);\r\n                            }\r\n                        } else {\r\n                            for (i = 0; i < len; i++) {\r\n                                fn.call(thisArg, loopable[i], i);\r\n                            }\r\n                        }\r\n                    } else if (helpers.isObject(loopable)) {\r\n                        keys = Object.keys(loopable);\r\n                        len = keys.length;\r\n                        for (i = 0; i < len; i++) {\r\n                            fn.call(thisArg, loopable[keys[i]], keys[i]);\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\r\n                 * @see http://stackoverflow.com/a/14853974\r\n                 * @param {Array} a0 - The array to compare\r\n                 * @param {Array} a1 - The array to compare\r\n                 * @returns {Boolean}\r\n                 */\r\n                arrayEquals: function(a0, a1) {\r\n                    var i, ilen, v0, v1;\r\n\r\n                    if (!a0 || !a1 || a0.length !== a1.length) {\r\n                        return false;\r\n                    }\r\n\r\n                    for (i = 0, ilen = a0.length; i < ilen; ++i) {\r\n                        v0 = a0[i];\r\n                        v1 = a1[i];\r\n\r\n                        if (v0 instanceof Array && v1 instanceof Array) {\r\n                            if (!helpers.arrayEquals(v0, v1)) {\r\n                                return false;\r\n                            }\r\n                        } else if (v0 !== v1) {\r\n                            // NOTE: two different object instances will never be equal: {x:20} != {x:20}\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                },\r\n\r\n                /**\r\n                 * Returns a deep copy of `source` without keeping references on objects and arrays.\r\n                 * @param {*} source - The value to clone.\r\n                 * @returns {*}\r\n                 */\r\n                clone: function(source) {\r\n                    if (helpers.isArray(source)) {\r\n                        return source.map(helpers.clone);\r\n                    }\r\n\r\n                    if (helpers.isObject(source)) {\r\n                        var target = {};\r\n                        var keys = Object.keys(source);\r\n                        var klen = keys.length;\r\n                        var k = 0;\r\n\r\n                        for (; k < klen; ++k) {\r\n                            target[keys[k]] = helpers.clone(source[keys[k]]);\r\n                        }\r\n\r\n                        return target;\r\n                    }\r\n\r\n                    return source;\r\n                },\r\n\r\n                /**\r\n                 * The default merger when Chart.helpers.merge is called without merger option.\r\n                 * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\r\n                 * @private\r\n                 */\r\n                _merger: function(key, target, source, options) {\r\n                    var tval = target[key];\r\n                    var sval = source[key];\r\n\r\n                    if (helpers.isObject(tval) && helpers.isObject(sval)) {\r\n                        helpers.merge(tval, sval, options);\r\n                    } else {\r\n                        target[key] = helpers.clone(sval);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Merges source[key] in target[key] only if target[key] is undefined.\r\n                 * @private\r\n                 */\r\n                _mergerIf: function(key, target, source) {\r\n                    var tval = target[key];\r\n                    var sval = source[key];\r\n\r\n                    if (helpers.isObject(tval) && helpers.isObject(sval)) {\r\n                        helpers.mergeIf(tval, sval);\r\n                    } else if (!target.hasOwnProperty(key)) {\r\n                        target[key] = helpers.clone(sval);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Recursively deep copies `source` properties into `target` with the given `options`.\r\n                 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n                 * @param {Object} target - The target object in which all sources are merged into.\r\n                 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\r\n                 * @param {Object} [options] - Merging options:\r\n                 * @param {Function} [options.merger] - The merge method (key, target, source, options)\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                merge: function(target, source, options) {\r\n                    var sources = helpers.isArray(source) ? source : [source];\r\n                    var ilen = sources.length;\r\n                    var merge, i, keys, klen, k;\r\n\r\n                    if (!helpers.isObject(target)) {\r\n                        return target;\r\n                    }\r\n\r\n                    options = options || {};\r\n                    merge = options.merger || helpers._merger;\r\n\r\n                    for (i = 0; i < ilen; ++i) {\r\n                        source = sources[i];\r\n                        if (!helpers.isObject(source)) {\r\n                            continue;\r\n                        }\r\n\r\n                        keys = Object.keys(source);\r\n                        for (k = 0, klen = keys.length; k < klen; ++k) {\r\n                            merge(keys[k], target, source, options);\r\n                        }\r\n                    }\r\n\r\n                    return target;\r\n                },\r\n\r\n                /**\r\n                 * Recursively deep copies `source` properties into `target` *only* if not defined in target.\r\n                 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n                 * @param {Object} target - The target object in which all sources are merged into.\r\n                 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                mergeIf: function(target, source) {\r\n                    return helpers.merge(target, source, { merger: helpers._mergerIf });\r\n                },\r\n\r\n                /**\r\n                 * Applies the contents of two or more objects together into the first object.\r\n                 * @param {Object} target - The target object in which all objects are merged into.\r\n                 * @param {Object} arg1 - Object containing additional properties to merge in target.\r\n                 * @param {Object} argN - Additional objects containing properties to merge in target.\r\n                 * @returns {Object} The `target` object.\r\n                 */\r\n                extend: function(target) {\r\n                    var setFn = function(value, key) {\r\n                        target[key] = value;\r\n                    };\r\n                    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\r\n                        helpers.each(arguments[i], setFn);\r\n                    }\r\n                    return target;\r\n                },\r\n\r\n                /**\r\n                 * Basic javascript inheritance based on the model created in Backbone.js\r\n                 */\r\n                inherits: function(extensions) {\r\n                    var me = this;\r\n                    var ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\r\n                        return me.apply(this, arguments);\r\n                    };\r\n\r\n                    var Surrogate = function() {\r\n                        this.constructor = ChartElement;\r\n                    };\r\n\r\n                    Surrogate.prototype = me.prototype;\r\n                    ChartElement.prototype = new Surrogate();\r\n                    ChartElement.extend = helpers.inherits;\r\n\r\n                    if (extensions) {\r\n                        helpers.extend(ChartElement.prototype, extensions);\r\n                    }\r\n\r\n                    ChartElement.__super__ = me.prototype;\r\n                    return ChartElement;\r\n                }\r\n            };\r\n\r\n            module.exports = helpers;\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.callback instead.\r\n             * @function Chart.helpers.callCallback\r\n             * @deprecated since version 2.6.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.callCallback = helpers.callback;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Array.prototype.indexOf instead.\r\n             * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\r\n             * @function Chart.helpers.indexOf\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.indexOf = function(array, item, fromIndex) {\r\n                return Array.prototype.indexOf.call(array, item, fromIndex);\r\n            };\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\r\n             * @function Chart.helpers.getValueOrDefault\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.getValueOrDefault = helpers.valueOrDefault;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\r\n             * @function Chart.helpers.getValueAtIndexOrDefault\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\r\n\r\n        }, {}], 34: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * Easing functions adapted from Robert Penner's easing equations.\r\n             * @namespace Chart.helpers.easingEffects\r\n             * @see http://www.robertpenner.com/easing/\r\n             */\r\n            var effects = {\r\n                linear: function(t) {\r\n                    return t;\r\n                },\r\n\r\n                easeInQuad: function(t) {\r\n                    return t * t;\r\n                },\r\n\r\n                easeOutQuad: function(t) {\r\n                    return -t * (t - 2);\r\n                },\r\n\r\n                easeInOutQuad: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t;\r\n                    }\r\n                    return -0.5 * ((--t) * (t - 2) - 1);\r\n                },\r\n\r\n                easeInCubic: function(t) {\r\n                    return t * t * t;\r\n                },\r\n\r\n                easeOutCubic: function(t) {\r\n                    return (t = t - 1) * t * t + 1;\r\n                },\r\n\r\n                easeInOutCubic: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t;\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * t + 2);\r\n                },\r\n\r\n                easeInQuart: function(t) {\r\n                    return t * t * t * t;\r\n                },\r\n\r\n                easeOutQuart: function(t) {\r\n                    return -((t = t - 1) * t * t * t - 1);\r\n                },\r\n\r\n                easeInOutQuart: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t * t;\r\n                    }\r\n                    return -0.5 * ((t -= 2) * t * t * t - 2);\r\n                },\r\n\r\n                easeInQuint: function(t) {\r\n                    return t * t * t * t * t;\r\n                },\r\n\r\n                easeOutQuint: function(t) {\r\n                    return (t = t - 1) * t * t * t * t + 1;\r\n                },\r\n\r\n                easeInOutQuint: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * t * t * t * t * t;\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * t * t * t + 2);\r\n                },\r\n\r\n                easeInSine: function(t) {\r\n                    return -Math.cos(t * (Math.PI / 2)) + 1;\r\n                },\r\n\r\n                easeOutSine: function(t) {\r\n                    return Math.sin(t * (Math.PI / 2));\r\n                },\r\n\r\n                easeInOutSine: function(t) {\r\n                    return -0.5 * (Math.cos(Math.PI * t) - 1);\r\n                },\r\n\r\n                easeInExpo: function(t) {\r\n                    return (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\r\n                },\r\n\r\n                easeOutExpo: function(t) {\r\n                    return (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\r\n                },\r\n\r\n                easeInOutExpo: function(t) {\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * Math.pow(2, 10 * (t - 1));\r\n                    }\r\n                    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\r\n                },\r\n\r\n                easeInCirc: function(t) {\r\n                    if (t >= 1) {\r\n                        return t;\r\n                    }\r\n                    return -(Math.sqrt(1 - t * t) - 1);\r\n                },\r\n\r\n                easeOutCirc: function(t) {\r\n                    return Math.sqrt(1 - (t = t - 1) * t);\r\n                },\r\n\r\n                easeInOutCirc: function(t) {\r\n                    if ((t /= 0.5) < 1) {\r\n                        return -0.5 * (Math.sqrt(1 - t * t) - 1);\r\n                    }\r\n                    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\r\n                },\r\n\r\n                easeInElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.3;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\r\n                },\r\n\r\n                easeOutElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if (t === 1) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.3;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\r\n                },\r\n\r\n                easeInOutElastic: function(t) {\r\n                    var s = 1.70158;\r\n                    var p = 0;\r\n                    var a = 1;\r\n                    if (t === 0) {\r\n                        return 0;\r\n                    }\r\n                    if ((t /= 0.5) === 2) {\r\n                        return 1;\r\n                    }\r\n                    if (!p) {\r\n                        p = 0.45;\r\n                    }\r\n                    if (a < 1) {\r\n                        a = 1;\r\n                        s = p / 4;\r\n                    } else {\r\n                        s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                    }\r\n                    if (t < 1) {\r\n                        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\r\n                    }\r\n                    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n                },\r\n                easeInBack: function(t) {\r\n                    var s = 1.70158;\r\n                    return t * t * ((s + 1) * t - s);\r\n                },\r\n\r\n                easeOutBack: function(t) {\r\n                    var s = 1.70158;\r\n                    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\r\n                },\r\n\r\n                easeInOutBack: function(t) {\r\n                    var s = 1.70158;\r\n                    if ((t /= 0.5) < 1) {\r\n                        return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n                    }\r\n                    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n                },\r\n\r\n                easeInBounce: function(t) {\r\n                    return 1 - effects.easeOutBounce(1 - t);\r\n                },\r\n\r\n                easeOutBounce: function(t) {\r\n                    if (t < (1 / 2.75)) {\r\n                        return 7.5625 * t * t;\r\n                    }\r\n                    if (t < (2 / 2.75)) {\r\n                        return 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\r\n                    }\r\n                    if (t < (2.5 / 2.75)) {\r\n                        return 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\r\n                    }\r\n                    return 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\r\n                },\r\n\r\n                easeInOutBounce: function(t) {\r\n                    if (t < 0.5) {\r\n                        return effects.easeInBounce(t * 2) * 0.5;\r\n                    }\r\n                    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\r\n                }\r\n            };\r\n\r\n            module.exports = {\r\n                effects: effects\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\r\n             * @function Chart.helpers.easingEffects\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.easingEffects = effects;\r\n\r\n        }, { \"33\": 33 }], 35: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(33);\r\n\r\n            /**\r\n             * @alias Chart.helpers.options\r\n             * @namespace\r\n             */\r\n            module.exports = {\r\n                /**\r\n                 * Converts the given line height `value` in pixels for a specific font `size`.\r\n                 * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\r\n                 * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\r\n                 * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\r\n                 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\r\n                 * @since 2.7.0\r\n                 */\r\n                toLineHeight: function(value, size) {\r\n                    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\r\n                    if (!matches || matches[1] === 'normal') {\r\n                        return size * 1.2;\r\n                    }\r\n\r\n                    value = +matches[2];\r\n\r\n                    switch (matches[3]) {\r\n                        case 'px':\r\n                            return value;\r\n                        case '%':\r\n                            value /= 100;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n\r\n                    return size * value;\r\n                },\r\n\r\n                /**\r\n                 * Converts the given value into a padding object with pre-computed width/height.\r\n                 * @param {Number|Object} value - If a number, set the value to all TRBL component,\r\n                 *  else, if and object, use defined properties and sets undefined ones to 0.\r\n                 * @returns {Object} The padding values (top, right, bottom, left, width, height)\r\n                 * @since 2.7.0\r\n                 */\r\n                toPadding: function(value) {\r\n                    var t, r, b, l;\r\n\r\n                    if (helpers.isObject(value)) {\r\n                        t = +value.top || 0;\r\n                        r = +value.right || 0;\r\n                        b = +value.bottom || 0;\r\n                        l = +value.left || 0;\r\n                    } else {\r\n                        t = r = b = l = +value || 0;\r\n                    }\r\n\r\n                    return {\r\n                        top: t,\r\n                        right: r,\r\n                        bottom: b,\r\n                        left: l,\r\n                        height: t + b,\r\n                        width: l + r\r\n                    };\r\n                },\r\n\r\n                /**\r\n                 * Evaluates the given `inputs` sequentially and returns the first defined value.\r\n                 * @param {Array[]} inputs - An array of values, falling back to the last value.\r\n                 * @param {Object} [context] - If defined and the current value is a function, the value\r\n                 * is called with `context` as first argument and the result becomes the new input.\r\n                 * @param {Number} [index] - If defined and the current value is an array, the value\r\n                 * at `index` become the new input.\r\n                 * @since 2.7.0\r\n                 */\r\n                resolve: function(inputs, context, index) {\r\n                    var i, ilen, value;\r\n\r\n                    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\r\n                        value = inputs[i];\r\n                        if (value === undefined) {\r\n                            continue;\r\n                        }\r\n                        if (context !== undefined && typeof value === 'function') {\r\n                            value = value(context);\r\n                        }\r\n                        if (index !== undefined && helpers.isArray(value)) {\r\n                            value = value[index];\r\n                        }\r\n                        if (value !== undefined) {\r\n                            return value;\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n        }, { \"33\": 33 }], 36: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = require(33);\r\n            module.exports.easing = require(34);\r\n            module.exports.canvas = require(32);\r\n            module.exports.options = require(35);\r\n\r\n        }, { \"32\": 32, \"33\": 33, \"34\": 34, \"35\": 35 }], 37: [function(require, module, exports) {\r\n            /**\r\n             * Platform fallback implementation (minimal).\r\n             * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\r\n             */\r\n\r\n            module.exports = {\r\n                acquireContext: function(item) {\r\n                    if (item && item.canvas) {\r\n                        // Support for any object associated to a canvas (including a context2d)\r\n                        item = item.canvas;\r\n                    }\r\n\r\n                    return item && item.getContext('2d') || null;\r\n                }\r\n            };\r\n\r\n        }, {}], 38: [function(require, module, exports) {\r\n            /**\r\n             * Chart.Platform implementation for targeting a web browser\r\n             */\r\n\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            var EXPANDO_KEY = '$chartjs';\r\n            var CSS_PREFIX = 'chartjs-';\r\n            var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\r\n            var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\r\n            var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\r\n\r\n            /**\r\n             * DOM event types -> Chart.js event types.\r\n             * Note: only events with different types are mapped.\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/Events\r\n             */\r\n            var EVENT_TYPES = {\r\n                touchstart: 'mousedown',\r\n                touchmove: 'mousemove',\r\n                touchend: 'mouseup',\r\n                pointerenter: 'mouseenter',\r\n                pointerdown: 'mousedown',\r\n                pointermove: 'mousemove',\r\n                pointerup: 'mouseup',\r\n                pointerleave: 'mouseout',\r\n                pointerout: 'mouseout'\r\n            };\r\n\r\n            /**\r\n             * The \"used\" size is the final value of a dimension property after all calculations have\r\n             * been performed. This method uses the computed style of `element` but returns undefined\r\n             * if the computed style is not expressed in pixels. That can happen in some cases where\r\n             * `element` has a size relative to its parent and this last one is not yet displayed,\r\n             * for example because of `display: none` on a parent node.\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\r\n             * @returns {Number} Size in pixels or undefined if unknown.\r\n             */\r\n            function readUsedSize(element, property) {\r\n                var value = helpers.getStyle(element, property);\r\n                var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\r\n                return matches ? Number(matches[1]) : undefined;\r\n            }\r\n\r\n            /**\r\n             * Initializes the canvas style and render size without modifying the canvas display size,\r\n             * since responsiveness is handled by the controller.resize() method. The config is used\r\n             * to determine the aspect ratio to apply in case no explicit height has been specified.\r\n             */\r\n            function initCanvas(canvas, config) {\r\n                var style = canvas.style;\r\n\r\n                // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\r\n                // returns null or '' if no explicit value has been set to the canvas attribute.\r\n                var renderHeight = canvas.getAttribute('height');\r\n                var renderWidth = canvas.getAttribute('width');\r\n\r\n                // Chart.js modifies some canvas values that we want to restore on destroy\r\n                canvas[EXPANDO_KEY] = {\r\n                    initial: {\r\n                        height: renderHeight,\r\n                        width: renderWidth,\r\n                        style: {\r\n                            display: style.display,\r\n                            height: style.height,\r\n                            width: style.width\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // Force canvas to display as block to avoid extra space caused by inline\r\n                // elements, which would interfere with the responsive resize process.\r\n                // https://github.com/chartjs/Chart.js/issues/2538\r\n                style.display = style.display || 'block';\r\n\r\n                if (renderWidth === null || renderWidth === '') {\r\n                    var displayWidth = readUsedSize(canvas, 'width');\r\n                    if (displayWidth !== undefined) {\r\n                        canvas.width = displayWidth;\r\n                    }\r\n                }\r\n\r\n                if (renderHeight === null || renderHeight === '') {\r\n                    if (canvas.style.height === '') {\r\n                        // If no explicit render height and style height, let's apply the aspect ratio,\r\n                        // which one can be specified by the user but also by charts as default option\r\n                        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\r\n                        canvas.height = canvas.width / (config.options.aspectRatio || 2);\r\n                    } else {\r\n                        var displayHeight = readUsedSize(canvas, 'height');\r\n                        if (displayWidth !== undefined) {\r\n                            canvas.height = displayHeight;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return canvas;\r\n            }\r\n\r\n            /**\r\n             * Detects support for options object argument in addEventListener.\r\n             * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\r\n             * @private\r\n             */\r\n            var supportsEventListenerOptions = (function() {\r\n                var supports = false;\r\n                try {\r\n                    var options = Object.defineProperty({}, 'passive', {\r\n                        get: function() {\r\n                            supports = true;\r\n                        }\r\n                    });\r\n                    window.addEventListener('e', null, options);\r\n                } catch (e) {\r\n                    // continue regardless of error\r\n                }\r\n                return supports;\r\n            }());\r\n\r\n            // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\r\n            // https://github.com/chartjs/Chart.js/issues/4287\r\n            var eventListenerOptions = supportsEventListenerOptions ? { passive: true } : false;\r\n\r\n            function addEventListener(node, type, listener) {\r\n                node.addEventListener(type, listener, eventListenerOptions);\r\n            }\r\n\r\n            function removeEventListener(node, type, listener) {\r\n                node.removeEventListener(type, listener, eventListenerOptions);\r\n            }\r\n\r\n            function createEvent(type, chart, x, y, nativeEvent) {\r\n                return {\r\n                    type: type,\r\n                    chart: chart,\r\n                    native: nativeEvent || null,\r\n                    x: x !== undefined ? x : null,\r\n                    y: y !== undefined ? y : null,\r\n                };\r\n            }\r\n\r\n            function fromNativeEvent(event, chart) {\r\n                var type = EVENT_TYPES[event.type] || event.type;\r\n                var pos = helpers.getRelativePosition(event, chart);\r\n                return createEvent(type, chart, pos.x, pos.y, event);\r\n            }\r\n\r\n            function throttled(fn, thisArg) {\r\n                var ticking = false;\r\n                var args = [];\r\n\r\n                return function() {\r\n                    args = Array.prototype.slice.call(arguments);\r\n                    thisArg = thisArg || this;\r\n\r\n                    if (!ticking) {\r\n                        ticking = true;\r\n                        helpers.requestAnimFrame.call(window, function() {\r\n                            ticking = false;\r\n                            fn.apply(thisArg, args);\r\n                        });\r\n                    }\r\n                };\r\n            }\r\n\r\n            // Implementation based on https://github.com/marcj/css-element-queries\r\n            function createResizer(handler) {\r\n                var resizer = document.createElement('div');\r\n                var cls = CSS_PREFIX + 'size-monitor';\r\n                var maxSize = 1000000;\r\n                var style =\r\n                    'position:absolute;' +\r\n                    'left:0;' +\r\n                    'top:0;' +\r\n                    'right:0;' +\r\n                    'bottom:0;' +\r\n                    'overflow:hidden;' +\r\n                    'pointer-events:none;' +\r\n                    'visibility:hidden;' +\r\n                    'z-index:-1;';\r\n\r\n                resizer.style.cssText = style;\r\n                resizer.className = cls;\r\n                resizer.innerHTML =\r\n                    '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\r\n                    '<div style=\"' +\r\n                    'position:absolute;' +\r\n                    'width:' + maxSize + 'px;' +\r\n                    'height:' + maxSize + 'px;' +\r\n                    'left:0;' +\r\n                    'top:0\">' +\r\n                    '</div>' +\r\n                    '</div>' +\r\n                    '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\r\n                    '<div style=\"' +\r\n                    'position:absolute;' +\r\n                    'width:200%;' +\r\n                    'height:200%;' +\r\n                    'left:0; ' +\r\n                    'top:0\">' +\r\n                    '</div>' +\r\n                    '</div>';\r\n\r\n                var expand = resizer.childNodes[0];\r\n                var shrink = resizer.childNodes[1];\r\n\r\n                resizer._reset = function() {\r\n                    expand.scrollLeft = maxSize;\r\n                    expand.scrollTop = maxSize;\r\n                    shrink.scrollLeft = maxSize;\r\n                    shrink.scrollTop = maxSize;\r\n                };\r\n                var onScroll = function() {\r\n                    resizer._reset();\r\n                    handler();\r\n                };\r\n\r\n                addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\r\n                addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\r\n\r\n                return resizer;\r\n            }\r\n\r\n            // https://davidwalsh.name/detect-node-insertion\r\n            function watchForRender(node, handler) {\r\n                var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\r\n                var proxy = expando.renderProxy = function(e) {\r\n                    if (e.animationName === CSS_RENDER_ANIMATION) {\r\n                        handler();\r\n                    }\r\n                };\r\n\r\n                helpers.each(ANIMATION_START_EVENTS, function(type) {\r\n                    addEventListener(node, type, proxy);\r\n                });\r\n\r\n                // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\r\n                // is removed then added back immediately (same animation frame?). Accessing the\r\n                // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\r\n                // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\r\n                // https://github.com/chartjs/Chart.js/issues/4737\r\n                expando.reflow = !!node.offsetParent;\r\n\r\n                node.classList.add(CSS_RENDER_MONITOR);\r\n            }\r\n\r\n            function unwatchForRender(node) {\r\n                var expando = node[EXPANDO_KEY] || {};\r\n                var proxy = expando.renderProxy;\r\n\r\n                if (proxy) {\r\n                    helpers.each(ANIMATION_START_EVENTS, function(type) {\r\n                        removeEventListener(node, type, proxy);\r\n                    });\r\n\r\n                    delete expando.renderProxy;\r\n                }\r\n\r\n                node.classList.remove(CSS_RENDER_MONITOR);\r\n            }\r\n\r\n            function addResizeListener(node, listener, chart) {\r\n                var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\r\n\r\n                // Let's keep track of this added resizer and thus avoid DOM query when removing it.\r\n                var resizer = expando.resizer = createResizer(throttled(function() {\r\n                    if (expando.resizer) {\r\n                        return listener(createEvent('resize', chart));\r\n                    }\r\n                }));\r\n\r\n                // The resizer needs to be attached to the node parent, so we first need to be\r\n                // sure that `node` is attached to the DOM before injecting the resizer element.\r\n                watchForRender(node, function() {\r\n                    if (expando.resizer) {\r\n                        var container = node.parentNode;\r\n                        if (container && container !== resizer.parentNode) {\r\n                            container.insertBefore(resizer, container.firstChild);\r\n                        }\r\n\r\n                        // The container size might have changed, let's reset the resizer state.\r\n                        resizer._reset();\r\n                    }\r\n                });\r\n            }\r\n\r\n            function removeResizeListener(node) {\r\n                var expando = node[EXPANDO_KEY] || {};\r\n                var resizer = expando.resizer;\r\n\r\n                delete expando.resizer;\r\n                unwatchForRender(node);\r\n\r\n                if (resizer && resizer.parentNode) {\r\n                    resizer.parentNode.removeChild(resizer);\r\n                }\r\n            }\r\n\r\n            //function injectCSS(platform, css) {\r\n            //    // http://stackoverflow.com/q/3922139\r\n            //    var style = platform._style || document.createElement('style');\r\n            //    if (!platform._style) {\r\n            //        platform._style = style;\r\n            //        css = '/* Chart.js */\\n' + css;\r\n            //        style.setAttribute('type', 'text/css');\r\n            //        document.getElementsByTagName('head')[0].appendChild(style);\r\n            //    }\r\n\r\n            //    style.appendChild(document.createTextNode(css));\r\n            //}\r\n\r\n            module.exports = {\r\n                /**\r\n                 * This property holds whether this platform is enabled for the current environment.\r\n                 * Currently used by platform.js to select the proper implementation.\r\n                 * @private\r\n                 */\r\n                _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\r\n\r\n                initialize: function() {\r\n                    var keyframes = 'from{opacity:0.99}to{opacity:1}';\r\n                    //injectCSS(this,\r\n                    //    // DOM rendering detection\r\n                    //    // https://davidwalsh.name/detect-node-insertion\r\n                    //    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\r\n                    //    '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\r\n                    //    '.' + CSS_RENDER_MONITOR + '{' +\r\n                    //    '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\r\n                    //    'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\r\n                    //    '}'\r\n                    //);\r\n                },\r\n\r\n                acquireContext: function(item, config) {\r\n                    if (typeof item === 'string') {\r\n                        item = document.getElementById(item);\r\n                    } else if (item.length) {\r\n                        // Support for array based queries (such as jQuery)\r\n                        item = item[0];\r\n                    }\r\n\r\n                    if (item && item.canvas) {\r\n                        // Support for any object associated to a canvas (including a context2d)\r\n                        item = item.canvas;\r\n                    }\r\n\r\n                    // To prevent canvas fingerprinting, some add-ons undefine the getContext\r\n                    // method, for example: https://github.com/kkapsner/CanvasBlocker\r\n                    // https://github.com/chartjs/Chart.js/issues/2807\r\n                    var context = item && item.getContext && item.getContext('2d');\r\n\r\n                    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\r\n                    // inside an iframe or when running in a protected environment. We could guess the\r\n                    // types from their toString() value but let's keep things flexible and assume it's\r\n                    // a sufficient condition if the item has a context2D which has item as `canvas`.\r\n                    // https://github.com/chartjs/Chart.js/issues/3887\r\n                    // https://github.com/chartjs/Chart.js/issues/4102\r\n                    // https://github.com/chartjs/Chart.js/issues/4152\r\n                    if (context && context.canvas === item) {\r\n                        initCanvas(item, config);\r\n                        return context;\r\n                    }\r\n\r\n                    return null;\r\n                },\r\n\r\n                releaseContext: function(context) {\r\n                    var canvas = context.canvas;\r\n                    if (!canvas[EXPANDO_KEY]) {\r\n                        return;\r\n                    }\r\n\r\n                    var initial = canvas[EXPANDO_KEY].initial;\r\n                    ['height', 'width'].forEach(function(prop) {\r\n                        var value = initial[prop];\r\n                        if (helpers.isNullOrUndef(value)) {\r\n                            canvas.removeAttribute(prop);\r\n                        } else {\r\n                            canvas.setAttribute(prop, value);\r\n                        }\r\n                    });\r\n\r\n                    helpers.each(initial.style || {}, function(value, key) {\r\n                        canvas.style[key] = value;\r\n                    });\r\n\r\n                    // The canvas render size might have been changed (and thus the state stack discarded),\r\n                    // we can't use save() and restore() to restore the initial state. So make sure that at\r\n                    // least the canvas context is reset to the default state by setting the canvas width.\r\n                    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\r\n                    canvas.width = canvas.width;\r\n\r\n                    delete canvas[EXPANDO_KEY];\r\n                },\r\n\r\n                addEventListener: function(chart, type, listener) {\r\n                    var canvas = chart.canvas;\r\n                    if (type === 'resize') {\r\n                        // Note: the resize event is not supported on all browsers.\r\n                        addResizeListener(canvas, listener, chart);\r\n                        return;\r\n                    }\r\n\r\n                    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\r\n                    var proxies = expando.proxies || (expando.proxies = {});\r\n                    var proxy = proxies[chart.id + '_' + type] = function(event) {\r\n                        listener(fromNativeEvent(event, chart));\r\n                    };\r\n\r\n                    addEventListener(canvas, type, proxy);\r\n                },\r\n\r\n                removeEventListener: function(chart, type, listener) {\r\n                    var canvas = chart.canvas;\r\n                    if (type === 'resize') {\r\n                        // Note: the resize event is not supported on all browsers.\r\n                        removeResizeListener(canvas, listener);\r\n                        return;\r\n                    }\r\n\r\n                    var expando = listener[EXPANDO_KEY] || {};\r\n                    var proxies = expando.proxies || {};\r\n                    var proxy = proxies[chart.id + '_' + type];\r\n                    if (!proxy) {\r\n                        return;\r\n                    }\r\n\r\n                    removeEventListener(canvas, type, proxy);\r\n                }\r\n            };\r\n\r\n            // DEPRECATIONS\r\n\r\n            /**\r\n             * Provided for backward compatibility, use EventTarget.addEventListener instead.\r\n             * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\r\n             * @function Chart.helpers.addEvent\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.addEvent = addEventListener;\r\n\r\n            /**\r\n             * Provided for backward compatibility, use EventTarget.removeEventListener instead.\r\n             * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\r\n             * @function Chart.helpers.removeEvent\r\n             * @deprecated since version 2.7.0\r\n             * @todo remove at version 3\r\n             * @private\r\n             */\r\n            helpers.removeEvent = removeEventListener;\r\n\r\n        }, { \"36\": 36 }], 39: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n            var basic = require(37);\r\n            var dom = require(38);\r\n\r\n            // @TODO Make possible to select another platform at build time.\r\n            var implementation = dom._enabled ? dom : basic;\r\n\r\n            /**\r\n             * @namespace Chart.platform\r\n             * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\r\n             * @since 2.4.0\r\n             */\r\n            module.exports = helpers.extend({\r\n                /**\r\n                 * @since 2.7.0\r\n                 */\r\n                initialize: function() { },\r\n\r\n                /**\r\n                 * Called at chart construction time, returns a context2d instance implementing\r\n                 * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\r\n                 * @param {*} item - The native item from which to acquire context (platform specific)\r\n                 * @param {Object} options - The chart options\r\n                 * @returns {CanvasRenderingContext2D} context2d instance\r\n                 */\r\n                acquireContext: function() { },\r\n\r\n                /**\r\n                 * Called at chart destruction time, releases any resources associated to the context\r\n                 * previously returned by the acquireContext() method.\r\n                 * @param {CanvasRenderingContext2D} context - The context2d instance\r\n                 * @returns {Boolean} true if the method succeeded, else false\r\n                 */\r\n                releaseContext: function() { },\r\n\r\n                /**\r\n                 * Registers the specified listener on the given chart.\r\n                 * @param {Chart} chart - Chart from which to listen for event\r\n                 * @param {String} type - The ({@link IEvent}) type to listen for\r\n                 * @param {Function} listener - Receives a notification (an object that implements\r\n                 * the {@link IEvent} interface) when an event of the specified type occurs.\r\n                 */\r\n                addEventListener: function() { },\r\n\r\n                /**\r\n                 * Removes the specified listener previously registered with addEventListener.\r\n                 * @param {Chart} chart -Chart from which to remove the listener\r\n                 * @param {String} type - The ({@link IEvent}) type to remove\r\n                 * @param {Function} listener - The listener function to remove from the event target.\r\n                 */\r\n                removeEventListener: function() { }\r\n\r\n            }, implementation);\r\n\r\n            /**\r\n             * @interface IPlatform\r\n             * Allows abstracting platform dependencies away from the chart\r\n             * @borrows Chart.platform.acquireContext as acquireContext\r\n             * @borrows Chart.platform.releaseContext as releaseContext\r\n             * @borrows Chart.platform.addEventListener as addEventListener\r\n             * @borrows Chart.platform.removeEventListener as removeEventListener\r\n             */\r\n\r\n            /**\r\n             * @interface IEvent\r\n             * @prop {String} type - The event type name, possible values are:\r\n             * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\r\n             * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\r\n             * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\r\n             * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\r\n             * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\r\n             */\r\n\r\n        }, { \"36\": 36, \"37\": 37, \"38\": 38 }], 40: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = {};\r\n            module.exports.filler = require(41);\r\n            module.exports.legend = require(42);\r\n            module.exports.title = require(43);\r\n\r\n        }, { \"41\": 41, \"42\": 42, \"43\": 43 }], 41: [function(require, module, exports) {\r\n            /**\r\n             * Plugin based on discussion from the following Chart.js issues:\r\n             * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\r\n             * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\r\n             */\r\n\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var elements = require(31);\r\n            var helpers = require(36);\r\n\r\n            defaults._set('global', {\r\n                plugins: {\r\n                    filler: {\r\n                        propagate: true\r\n                    }\r\n                }\r\n            });\r\n\r\n            var mappers = {\r\n                dataset: function(source) {\r\n                    var index = source.fill;\r\n                    var chart = source.chart;\r\n                    var meta = chart.getDatasetMeta(index);\r\n                    var visible = meta && chart.isDatasetVisible(index);\r\n                    var points = (visible && meta.dataset._children) || [];\r\n                    var length = points.length || 0;\r\n\r\n                    return !length ? null : function(point, i) {\r\n                        return (i < length && points[i]._view) || null;\r\n                    };\r\n                },\r\n\r\n                boundary: function(source) {\r\n                    var boundary = source.boundary;\r\n                    var x = boundary ? boundary.x : null;\r\n                    var y = boundary ? boundary.y : null;\r\n\r\n                    return function(point) {\r\n                        return {\r\n                            x: x === null ? point.x : x,\r\n                            y: y === null ? point.y : y,\r\n                        };\r\n                    };\r\n                }\r\n            };\r\n\r\n            // @todo if (fill[0] === '#')\r\n            function decodeFill(el, index, count) {\r\n                var model = el._model || {};\r\n                var fill = model.fill;\r\n                var target;\r\n\r\n                if (fill === undefined) {\r\n                    fill = !!model.backgroundColor;\r\n                }\r\n\r\n                if (fill === false || fill === null) {\r\n                    return false;\r\n                }\r\n\r\n                if (fill === true) {\r\n                    return 'origin';\r\n                }\r\n\r\n                target = parseFloat(fill, 10);\r\n                if (isFinite(target) && Math.floor(target) === target) {\r\n                    if (fill[0] === '-' || fill[0] === '+') {\r\n                        target = index + target;\r\n                    }\r\n\r\n                    if (target === index || target < 0 || target >= count) {\r\n                        return false;\r\n                    }\r\n\r\n                    return target;\r\n                }\r\n\r\n                switch (fill) {\r\n                    // compatibility\r\n                    case 'bottom':\r\n                        return 'start';\r\n                    case 'top':\r\n                        return 'end';\r\n                    case 'zero':\r\n                        return 'origin';\r\n                    // supported boundaries\r\n                    case 'origin':\r\n                    case 'start':\r\n                    case 'end':\r\n                        return fill;\r\n                    // invalid fill values\r\n                    default:\r\n                        return false;\r\n                }\r\n            }\r\n\r\n            function computeBoundary(source) {\r\n                var model = source.el._model || {};\r\n                var scale = source.el._scale || {};\r\n                var fill = source.fill;\r\n                var target = null;\r\n                var horizontal;\r\n\r\n                if (isFinite(fill)) {\r\n                    return null;\r\n                }\r\n\r\n                // Backward compatibility: until v3, we still need to support boundary values set on\r\n                // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\r\n                // controllers might still use it (e.g. the Smith chart).\r\n\r\n                if (fill === 'start') {\r\n                    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\r\n                } else if (fill === 'end') {\r\n                    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\r\n                } else if (model.scaleZero !== undefined) {\r\n                    target = model.scaleZero;\r\n                } else if (scale.getBasePosition) {\r\n                    target = scale.getBasePosition();\r\n                } else if (scale.getBasePixel) {\r\n                    target = scale.getBasePixel();\r\n                }\r\n\r\n                if (target !== undefined && target !== null) {\r\n                    if (target.x !== undefined && target.y !== undefined) {\r\n                        return target;\r\n                    }\r\n\r\n                    if (typeof target === 'number' && isFinite(target)) {\r\n                        horizontal = scale.isHorizontal();\r\n                        return {\r\n                            x: horizontal ? target : null,\r\n                            y: horizontal ? null : target\r\n                        };\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n\r\n            function resolveTarget(sources, index, propagate) {\r\n                var source = sources[index];\r\n                var fill = source.fill;\r\n                var visited = [index];\r\n                var target;\r\n\r\n                if (!propagate) {\r\n                    return fill;\r\n                }\r\n\r\n                while (fill !== false && visited.indexOf(fill) === -1) {\r\n                    if (!isFinite(fill)) {\r\n                        return fill;\r\n                    }\r\n\r\n                    target = sources[fill];\r\n                    if (!target) {\r\n                        return false;\r\n                    }\r\n\r\n                    if (target.visible) {\r\n                        return fill;\r\n                    }\r\n\r\n                    visited.push(fill);\r\n                    fill = target.fill;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            function createMapper(source) {\r\n                var fill = source.fill;\r\n                var type = 'dataset';\r\n\r\n                if (fill === false) {\r\n                    return null;\r\n                }\r\n\r\n                if (!isFinite(fill)) {\r\n                    type = 'boundary';\r\n                }\r\n\r\n                return mappers[type](source);\r\n            }\r\n\r\n            function isDrawable(point) {\r\n                return point && !point.skip;\r\n            }\r\n\r\n            function drawArea(ctx, curve0, curve1, len0, len1) {\r\n                var i;\r\n\r\n                if (!len0 || !len1) {\r\n                    return;\r\n                }\r\n\r\n                // building first area curve (normal)\r\n                ctx.moveTo(curve0[0].x, curve0[0].y);\r\n                for (i = 1; i < len0; ++i) {\r\n                    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\r\n                }\r\n\r\n                // joining the two area curves\r\n                ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\r\n\r\n                // building opposite area curve (reverse)\r\n                for (i = len1 - 1; i > 0; --i) {\r\n                    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\r\n                }\r\n            }\r\n\r\n            function doFill(ctx, points, mapper, view, color, loop) {\r\n                var count = points.length;\r\n                var span = view.spanGaps;\r\n                var curve0 = [];\r\n                var curve1 = [];\r\n                var len0 = 0;\r\n                var len1 = 0;\r\n                var i, ilen, index, p0, p1, d0, d1;\r\n\r\n                ctx.beginPath();\r\n\r\n                for (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\r\n                    index = i % count;\r\n                    p0 = points[index]._view;\r\n                    p1 = mapper(p0, index, view);\r\n                    d0 = isDrawable(p0);\r\n                    d1 = isDrawable(p1);\r\n\r\n                    if (d0 && d1) {\r\n                        len0 = curve0.push(p0);\r\n                        len1 = curve1.push(p1);\r\n                    } else if (len0 && len1) {\r\n                        if (!span) {\r\n                            drawArea(ctx, curve0, curve1, len0, len1);\r\n                            len0 = len1 = 0;\r\n                            curve0 = [];\r\n                            curve1 = [];\r\n                        } else {\r\n                            if (d0) {\r\n                                curve0.push(p0);\r\n                            }\r\n                            if (d1) {\r\n                                curve1.push(p1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                drawArea(ctx, curve0, curve1, len0, len1);\r\n\r\n                ctx.closePath();\r\n                ctx.fillStyle = color;\r\n                ctx.fill();\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'filler',\r\n\r\n                afterDatasetsUpdate: function(chart, options) {\r\n                    var count = (chart.data.datasets || []).length;\r\n                    var propagate = options.propagate;\r\n                    var sources = [];\r\n                    var meta, i, el, source;\r\n\r\n                    for (i = 0; i < count; ++i) {\r\n                        meta = chart.getDatasetMeta(i);\r\n                        el = meta.dataset;\r\n                        source = null;\r\n\r\n                        if (el && el._model && el instanceof elements.Line) {\r\n                            source = {\r\n                                visible: chart.isDatasetVisible(i),\r\n                                fill: decodeFill(el, i, count),\r\n                                chart: chart,\r\n                                el: el\r\n                            };\r\n                        }\r\n\r\n                        meta.$filler = source;\r\n                        sources.push(source);\r\n                    }\r\n\r\n                    for (i = 0; i < count; ++i) {\r\n                        source = sources[i];\r\n                        if (!source) {\r\n                            continue;\r\n                        }\r\n\r\n                        source.fill = resolveTarget(sources, i, propagate);\r\n                        source.boundary = computeBoundary(source);\r\n                        source.mapper = createMapper(source);\r\n                    }\r\n                },\r\n\r\n                beforeDatasetDraw: function(chart, args) {\r\n                    var meta = args.meta.$filler;\r\n                    if (!meta) {\r\n                        return;\r\n                    }\r\n\r\n                    var ctx = chart.ctx;\r\n                    var el = meta.el;\r\n                    var view = el._view;\r\n                    var points = el._children || [];\r\n                    var mapper = meta.mapper;\r\n                    var color = view.backgroundColor || defaults.global.defaultColor;\r\n\r\n                    if (mapper && color && points.length) {\r\n                        helpers.canvas.clipArea(ctx, chart.chartArea);\r\n                        doFill(ctx, points, mapper, view, color, el._loop);\r\n                        helpers.canvas.unclipArea(ctx);\r\n                    }\r\n                }\r\n            };\r\n\r\n        }, { \"16\": 16, \"31\": 31, \"36\": 36 }], 42: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            var noop = helpers.noop;\r\n\r\n            defaults._set('global', {\r\n                legend: {\r\n                    display: true,\r\n                    position: 'top',\r\n                    fullWidth: true,\r\n                    reverse: false,\r\n                    weight: 1000,\r\n\r\n                    // a callback that will handle\r\n                    onClick: function(e, legendItem) {\r\n                        var index = legendItem.datasetIndex;\r\n                        var ci = this.chart;\r\n                        var meta = ci.getDatasetMeta(index);\r\n\r\n                        // See controller.isDatasetVisible comment\r\n                        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\r\n\r\n                        // We hid a dataset ... rerender the chart\r\n                        ci.update();\r\n                    },\r\n\r\n                    onHover: null,\r\n\r\n                    labels: {\r\n                        boxWidth: 40,\r\n                        padding: 10,\r\n                        // Generates labels shown in the legend\r\n                        // Valid properties to return:\r\n                        // text : text to display\r\n                        // fillStyle : fill of coloured box\r\n                        // strokeStyle: stroke of coloured box\r\n                        // hidden : if this legend item refers to a hidden item\r\n                        // lineCap : cap style for line\r\n                        // lineDash\r\n                        // lineDashOffset :\r\n                        // lineJoin :\r\n                        // lineWidth :\r\n                        generateLabels: function(chart) {\r\n                            var data = chart.data;\r\n                            return helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\r\n                                return {\r\n                                    text: dataset.label,\r\n                                    fillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\r\n                                    hidden: !chart.isDatasetVisible(i),\r\n                                    lineCap: dataset.borderCapStyle,\r\n                                    lineDash: dataset.borderDash,\r\n                                    lineDashOffset: dataset.borderDashOffset,\r\n                                    lineJoin: dataset.borderJoinStyle,\r\n                                    lineWidth: dataset.borderWidth,\r\n                                    strokeStyle: dataset.borderColor,\r\n                                    pointStyle: dataset.pointStyle,\r\n\r\n                                    // Below is extra data used for toggling the datasets\r\n                                    datasetIndex: i\r\n                                };\r\n                            }, this) : [];\r\n                        }\r\n                    }\r\n                },\r\n\r\n                legendCallback: function(chart) {\r\n                    var text = [];\r\n                    text.push('<ul class=\"' + chart.id + '-legend\">');\r\n                    for (var i = 0; i < chart.data.datasets.length; i++) {\r\n                        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\r\n                        if (chart.data.datasets[i].label) {\r\n                            text.push(chart.data.datasets[i].label);\r\n                        }\r\n                        text.push('</li>');\r\n                    }\r\n                    text.push('</ul>');\r\n                    return text.join('');\r\n                }\r\n            });\r\n\r\n            /**\r\n             * Helper function to get the box width based on the usePointStyle option\r\n             * @param labelopts {Object} the label options on the legend\r\n             * @param fontSize {Number} the label font size\r\n             * @return {Number} width of the color box area\r\n             */\r\n            function getBoxWidth(labelOpts, fontSize) {\r\n                return labelOpts.usePointStyle ?\r\n                    fontSize * Math.SQRT2 :\r\n                    labelOpts.boxWidth;\r\n            }\r\n\r\n            /**\r\n             * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\r\n             */\r\n            var Legend = Element.extend({\r\n\r\n                initialize: function(config) {\r\n                    helpers.extend(this, config);\r\n\r\n                    // Contains hit boxes for each dataset (in dataset order)\r\n                    this.legendHitBoxes = [];\r\n\r\n                    // Are we in doughnut mode which has a different data type\r\n                    this.doughnutMode = false;\r\n                },\r\n\r\n                // These methods are ordered by lifecycle. Utilities then follow.\r\n                // Any function defined here is inherited by all legend types.\r\n                // Any function can be extended by the legend type\r\n\r\n                beforeUpdate: noop,\r\n                update: function(maxWidth, maxHeight, margins) {\r\n                    var me = this;\r\n\r\n                    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                    me.beforeUpdate();\r\n\r\n                    // Absorb the master measurements\r\n                    me.maxWidth = maxWidth;\r\n                    me.maxHeight = maxHeight;\r\n                    me.margins = margins;\r\n\r\n                    // Dimensions\r\n                    me.beforeSetDimensions();\r\n                    me.setDimensions();\r\n                    me.afterSetDimensions();\r\n                    // Labels\r\n                    me.beforeBuildLabels();\r\n                    me.buildLabels();\r\n                    me.afterBuildLabels();\r\n\r\n                    // Fit\r\n                    me.beforeFit();\r\n                    me.fit();\r\n                    me.afterFit();\r\n                    //\r\n                    me.afterUpdate();\r\n\r\n                    return me.minSize;\r\n                },\r\n                afterUpdate: noop,\r\n\r\n                //\r\n\r\n                beforeSetDimensions: noop,\r\n                setDimensions: function() {\r\n                    var me = this;\r\n                    // Set the unconstrained dimension before label rotation\r\n                    if (me.isHorizontal()) {\r\n                        // Reset position before calculating rotation\r\n                        me.width = me.maxWidth;\r\n                        me.left = 0;\r\n                        me.right = me.width;\r\n                    } else {\r\n                        me.height = me.maxHeight;\r\n\r\n                        // Reset position before calculating rotation\r\n                        me.top = 0;\r\n                        me.bottom = me.height;\r\n                    }\r\n\r\n                    // Reset padding\r\n                    me.paddingLeft = 0;\r\n                    me.paddingTop = 0;\r\n                    me.paddingRight = 0;\r\n                    me.paddingBottom = 0;\r\n\r\n                    // Reset minSize\r\n                    me.minSize = {\r\n                        width: 0,\r\n                        height: 0\r\n                    };\r\n                },\r\n                afterSetDimensions: noop,\r\n\r\n                //\r\n\r\n                beforeBuildLabels: noop,\r\n                buildLabels: function() {\r\n                    var me = this;\r\n                    var labelOpts = me.options.labels || {};\r\n                    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\r\n\r\n                    if (labelOpts.filter) {\r\n                        legendItems = legendItems.filter(function(item) {\r\n                            return labelOpts.filter(item, me.chart.data);\r\n                        });\r\n                    }\r\n\r\n                    if (me.options.reverse) {\r\n                        legendItems.reverse();\r\n                    }\r\n\r\n                    me.legendItems = legendItems;\r\n                },\r\n                afterBuildLabels: noop,\r\n\r\n                //\r\n\r\n                beforeFit: noop,\r\n                fit: function() {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var labelOpts = opts.labels;\r\n                    var display = opts.display;\r\n\r\n                    var ctx = me.ctx;\r\n\r\n                    var globalDefault = defaults.global;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\r\n                    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\r\n                    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\r\n                    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n                    // Reset hit boxes\r\n                    var hitboxes = me.legendHitBoxes = [];\r\n\r\n                    var minSize = me.minSize;\r\n                    var isHorizontal = me.isHorizontal();\r\n\r\n                    if (isHorizontal) {\r\n                        minSize.width = me.maxWidth; // fill all the width\r\n                        minSize.height = display ? 10 : 0;\r\n                    } else {\r\n                        minSize.width = display ? 10 : 0;\r\n                        minSize.height = me.maxHeight; // fill all the height\r\n                    }\r\n\r\n                    // Increase sizes here\r\n                    if (display) {\r\n                        ctx.font = labelFont;\r\n\r\n                        if (isHorizontal) {\r\n                            // Labels\r\n\r\n                            // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\r\n                            var lineWidths = me.lineWidths = [0];\r\n                            var totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\r\n\r\n                            ctx.textAlign = 'left';\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            helpers.each(me.legendItems, function(legendItem, i) {\r\n                                var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                                var width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n                                if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\r\n                                    totalHeight += fontSize + (labelOpts.padding);\r\n                                    lineWidths[lineWidths.length] = me.left;\r\n                                }\r\n\r\n                                // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                                hitboxes[i] = {\r\n                                    left: 0,\r\n                                    top: 0,\r\n                                    width: width,\r\n                                    height: fontSize\r\n                                };\r\n\r\n                                lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\r\n                            });\r\n\r\n                            minSize.height += totalHeight;\r\n\r\n                        } else {\r\n                            var vPadding = labelOpts.padding;\r\n                            var columnWidths = me.columnWidths = [];\r\n                            var totalWidth = labelOpts.padding;\r\n                            var currentColWidth = 0;\r\n                            var currentColHeight = 0;\r\n                            var itemHeight = fontSize + vPadding;\r\n\r\n                            helpers.each(me.legendItems, function(legendItem, i) {\r\n                                var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                                var itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n                                // If too tall, go to new column\r\n                                if (currentColHeight + itemHeight > minSize.height) {\r\n                                    totalWidth += currentColWidth + labelOpts.padding;\r\n                                    columnWidths.push(currentColWidth); // previous column width\r\n\r\n                                    currentColWidth = 0;\r\n                                    currentColHeight = 0;\r\n                                }\r\n\r\n                                // Get max width\r\n                                currentColWidth = Math.max(currentColWidth, itemWidth);\r\n                                currentColHeight += itemHeight;\r\n\r\n                                // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                                hitboxes[i] = {\r\n                                    left: 0,\r\n                                    top: 0,\r\n                                    width: itemWidth,\r\n                                    height: fontSize\r\n                                };\r\n                            });\r\n\r\n                            totalWidth += currentColWidth;\r\n                            columnWidths.push(currentColWidth);\r\n                            minSize.width += totalWidth;\r\n                        }\r\n                    }\r\n\r\n                    me.width = minSize.width;\r\n                    me.height = minSize.height;\r\n                },\r\n                afterFit: noop,\r\n\r\n                // Shared Methods\r\n                isHorizontal: function() {\r\n                    return this.options.position === 'top' || this.options.position === 'bottom';\r\n                },\r\n\r\n                // Actually draw the legend on the canvas\r\n                draw: function() {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var labelOpts = opts.labels;\r\n                    var globalDefault = defaults.global;\r\n                    var lineDefault = globalDefault.elements.line;\r\n                    var legendWidth = me.width;\r\n                    var lineWidths = me.lineWidths;\r\n\r\n                    if (opts.display) {\r\n                        var ctx = me.ctx;\r\n                        var valueOrDefault = helpers.valueOrDefault;\r\n                        var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\r\n                        var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\r\n                        var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\r\n                        var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\r\n                        var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n                        var cursor;\r\n\r\n                        // Canvas setup\r\n                        ctx.textAlign = 'left';\r\n                        ctx.textBaseline = 'middle';\r\n                        ctx.lineWidth = 0.5;\r\n                        ctx.strokeStyle = fontColor; // for strikethrough effect\r\n                        ctx.fillStyle = fontColor; // render in correct colour\r\n                        ctx.font = labelFont;\r\n\r\n                        var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                        var hitboxes = me.legendHitBoxes;\r\n\r\n                        // current position\r\n                        var drawLegendBox = function(x, y, legendItem) {\r\n                            if (isNaN(boxWidth) || boxWidth <= 0) {\r\n                                return;\r\n                            }\r\n\r\n                            // Set the ctx for the box\r\n                            ctx.save();\r\n\r\n                            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\r\n                            ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\r\n                            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\r\n                            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\r\n                            ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\r\n                            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\r\n                            var isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\r\n\r\n                            if (ctx.setLineDash) {\r\n                                // IE 9 and 10 do not support line dash\r\n                                ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\r\n                            }\r\n\r\n                            if (opts.labels && opts.labels.usePointStyle) {\r\n                                // Recalculate x and y for drawPoint() because its expecting\r\n                                // x and y to be center of figure (instead of top left)\r\n                                var radius = fontSize * Math.SQRT2 / 2;\r\n                                var offSet = radius / Math.SQRT2;\r\n                                var centerX = x + offSet;\r\n                                var centerY = y + offSet;\r\n\r\n                                // Draw pointStyle as legend symbol\r\n                                helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\r\n                            } else {\r\n                                // Draw box as legend symbol\r\n                                if (!isLineWidthZero) {\r\n                                    ctx.strokeRect(x, y, boxWidth, fontSize);\r\n                                }\r\n                                ctx.fillRect(x, y, boxWidth, fontSize);\r\n                            }\r\n\r\n                            ctx.restore();\r\n                        };\r\n                        var fillText = function(x, y, legendItem, textWidth) {\r\n                            var halfFontSize = fontSize / 2;\r\n                            var xLeft = boxWidth + halfFontSize + x;\r\n                            var yMiddle = y + halfFontSize;\r\n\r\n                            ctx.fillText(legendItem.text, xLeft, yMiddle);\r\n\r\n                            if (legendItem.hidden) {\r\n                                // Strikethrough the text if hidden\r\n                                ctx.beginPath();\r\n                                ctx.lineWidth = 2;\r\n                                ctx.moveTo(xLeft, yMiddle);\r\n                                ctx.lineTo(xLeft + textWidth, yMiddle);\r\n                                ctx.stroke();\r\n                            }\r\n                        };\r\n\r\n                        // Horizontal\r\n                        var isHorizontal = me.isHorizontal();\r\n                        if (isHorizontal) {\r\n                            cursor = {\r\n                                x: me.left + ((legendWidth - lineWidths[0]) / 2),\r\n                                y: me.top + labelOpts.padding,\r\n                                line: 0\r\n                            };\r\n                        } else {\r\n                            cursor = {\r\n                                x: me.left + labelOpts.padding,\r\n                                y: me.top + labelOpts.padding,\r\n                                line: 0\r\n                            };\r\n                        }\r\n\r\n                        var itemHeight = fontSize + labelOpts.padding;\r\n                        helpers.each(me.legendItems, function(legendItem, i) {\r\n                            var textWidth = ctx.measureText(legendItem.text).width;\r\n                            var width = boxWidth + (fontSize / 2) + textWidth;\r\n                            var x = cursor.x;\r\n                            var y = cursor.y;\r\n\r\n                            if (isHorizontal) {\r\n                                if (x + width >= legendWidth) {\r\n                                    y = cursor.y += itemHeight;\r\n                                    cursor.line++;\r\n                                    x = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\r\n                                }\r\n                            } else if (y + itemHeight > me.bottom) {\r\n                                x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\r\n                                y = cursor.y = me.top + labelOpts.padding;\r\n                                cursor.line++;\r\n                            }\r\n\r\n                            drawLegendBox(x, y, legendItem);\r\n\r\n                            hitboxes[i].left = x;\r\n                            hitboxes[i].top = y;\r\n\r\n                            // Fill the actual label\r\n                            fillText(x, y, legendItem, textWidth);\r\n\r\n                            if (isHorizontal) {\r\n                                cursor.x += width + (labelOpts.padding);\r\n                            } else {\r\n                                cursor.y += itemHeight;\r\n                            }\r\n\r\n                        });\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Handle an event\r\n                 * @private\r\n                 * @param {IEvent} event - The event to handle\r\n                 * @return {Boolean} true if a change occured\r\n                 */\r\n                handleEvent: function(e) {\r\n                    var me = this;\r\n                    var opts = me.options;\r\n                    var type = e.type === 'mouseup' ? 'click' : e.type;\r\n                    var changed = false;\r\n\r\n                    if (type === 'mousemove') {\r\n                        if (!opts.onHover) {\r\n                            return;\r\n                        }\r\n                    } else if (type === 'click') {\r\n                        if (!opts.onClick) {\r\n                            return;\r\n                        }\r\n                    } else {\r\n                        return;\r\n                    }\r\n\r\n                    // Chart event already has relative position in it\r\n                    var x = e.x;\r\n                    var y = e.y;\r\n\r\n                    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\r\n                        // See if we are touching one of the dataset boxes\r\n                        var lh = me.legendHitBoxes;\r\n                        for (var i = 0; i < lh.length; ++i) {\r\n                            var hitBox = lh[i];\r\n\r\n                            if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n                                // Touching an element\r\n                                if (type === 'click') {\r\n                                    // use e.native for backwards compatibility\r\n                                    opts.onClick.call(me, e.native, me.legendItems[i]);\r\n                                    changed = true;\r\n                                    break;\r\n                                } else if (type === 'mousemove') {\r\n                                    // use e.native for backwards compatibility\r\n                                    opts.onHover.call(me, e.native, me.legendItems[i]);\r\n                                    changed = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return changed;\r\n                }\r\n            });\r\n\r\n            function createNewLegendAndAttach(chart, legendOpts) {\r\n                var legend = new Legend({\r\n                    ctx: chart.ctx,\r\n                    options: legendOpts,\r\n                    chart: chart\r\n                });\r\n\r\n                layouts.configure(chart, legend, legendOpts);\r\n                layouts.addBox(chart, legend);\r\n                chart.legend = legend;\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'legend',\r\n\r\n                /**\r\n                 * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\r\n                 * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\r\n                 * the plugin, which one will be re-exposed in the chart.js file.\r\n                 * https://github.com/chartjs/Chart.js/pull/2640\r\n                 * @private\r\n                 */\r\n                _element: Legend,\r\n\r\n                beforeInit: function(chart) {\r\n                    var legendOpts = chart.options.legend;\r\n\r\n                    if (legendOpts) {\r\n                        createNewLegendAndAttach(chart, legendOpts);\r\n                    }\r\n                },\r\n\r\n                beforeUpdate: function(chart) {\r\n                    var legendOpts = chart.options.legend;\r\n                    var legend = chart.legend;\r\n\r\n                    if (legendOpts) {\r\n                        helpers.mergeIf(legendOpts, defaults.global.legend);\r\n\r\n                        if (legend) {\r\n                            layouts.configure(chart, legend, legendOpts);\r\n                            legend.options = legendOpts;\r\n                        } else {\r\n                            createNewLegendAndAttach(chart, legendOpts);\r\n                        }\r\n                    } else if (legend) {\r\n                        layouts.removeBox(chart, legend);\r\n                        delete chart.legend;\r\n                    }\r\n                },\r\n\r\n                afterEvent: function(chart, e) {\r\n                    var legend = chart.legend;\r\n                    if (legend) {\r\n                        legend.handleEvent(e);\r\n                    }\r\n                }\r\n            };\r\n\r\n        }, { \"16\": 16, \"17\": 17, \"21\": 21, \"36\": 36 }], 43: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var Element = require(17);\r\n            var helpers = require(36);\r\n            var layouts = require(21);\r\n\r\n            var noop = helpers.noop;\r\n\r\n            defaults._set('global', {\r\n                title: {\r\n                    display: false,\r\n                    fontStyle: 'bold',\r\n                    fullWidth: true,\r\n                    lineHeight: 1.2,\r\n                    padding: 10,\r\n                    position: 'top',\r\n                    text: '',\r\n                    weight: 2000         // by default greater than legend (1000) to be above\r\n                }\r\n            });\r\n\r\n            /**\r\n             * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\r\n             */\r\n            var Title = Element.extend({\r\n                initialize: function(config) {\r\n                    var me = this;\r\n                    helpers.extend(me, config);\r\n\r\n                    // Contains hit boxes for each dataset (in dataset order)\r\n                    me.legendHitBoxes = [];\r\n                },\r\n\r\n                // These methods are ordered by lifecycle. Utilities then follow.\r\n\r\n                beforeUpdate: noop,\r\n                update: function(maxWidth, maxHeight, margins) {\r\n                    var me = this;\r\n\r\n                    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                    me.beforeUpdate();\r\n\r\n                    // Absorb the master measurements\r\n                    me.maxWidth = maxWidth;\r\n                    me.maxHeight = maxHeight;\r\n                    me.margins = margins;\r\n\r\n                    // Dimensions\r\n                    me.beforeSetDimensions();\r\n                    me.setDimensions();\r\n                    me.afterSetDimensions();\r\n                    // Labels\r\n                    me.beforeBuildLabels();\r\n                    me.buildLabels();\r\n                    me.afterBuildLabels();\r\n\r\n                    // Fit\r\n                    me.beforeFit();\r\n                    me.fit();\r\n                    me.afterFit();\r\n                    //\r\n                    me.afterUpdate();\r\n\r\n                    return me.minSize;\r\n\r\n                },\r\n                afterUpdate: noop,\r\n\r\n                //\r\n\r\n                beforeSetDimensions: noop,\r\n                setDimensions: function() {\r\n                    var me = this;\r\n                    // Set the unconstrained dimension before label rotation\r\n                    if (me.isHorizontal()) {\r\n                        // Reset position before calculating rotation\r\n                        me.width = me.maxWidth;\r\n                        me.left = 0;\r\n                        me.right = me.width;\r\n                    } else {\r\n                        me.height = me.maxHeight;\r\n\r\n                        // Reset position before calculating rotation\r\n                        me.top = 0;\r\n                        me.bottom = me.height;\r\n                    }\r\n\r\n                    // Reset padding\r\n                    me.paddingLeft = 0;\r\n                    me.paddingTop = 0;\r\n                    me.paddingRight = 0;\r\n                    me.paddingBottom = 0;\r\n\r\n                    // Reset minSize\r\n                    me.minSize = {\r\n                        width: 0,\r\n                        height: 0\r\n                    };\r\n                },\r\n                afterSetDimensions: noop,\r\n\r\n                //\r\n\r\n                beforeBuildLabels: noop,\r\n                buildLabels: noop,\r\n                afterBuildLabels: noop,\r\n\r\n                //\r\n\r\n                beforeFit: noop,\r\n                fit: function() {\r\n                    var me = this;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var opts = me.options;\r\n                    var display = opts.display;\r\n                    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\r\n                    var minSize = me.minSize;\r\n                    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\r\n                    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\r\n                    var textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\r\n\r\n                    if (me.isHorizontal()) {\r\n                        minSize.width = me.maxWidth; // fill all the width\r\n                        minSize.height = textSize;\r\n                    } else {\r\n                        minSize.width = textSize;\r\n                        minSize.height = me.maxHeight; // fill all the height\r\n                    }\r\n\r\n                    me.width = minSize.width;\r\n                    me.height = minSize.height;\r\n\r\n                },\r\n                afterFit: noop,\r\n\r\n                // Shared Methods\r\n                isHorizontal: function() {\r\n                    var pos = this.options.position;\r\n                    return pos === 'top' || pos === 'bottom';\r\n                },\r\n\r\n                // Actually draw the title block on the canvas\r\n                draw: function() {\r\n                    var me = this;\r\n                    var ctx = me.ctx;\r\n                    var valueOrDefault = helpers.valueOrDefault;\r\n                    var opts = me.options;\r\n                    var globalDefaults = defaults.global;\r\n\r\n                    if (opts.display) {\r\n                        var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\r\n                        var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\r\n                        var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\r\n                        var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n                        var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\r\n                        var offset = lineHeight / 2 + opts.padding;\r\n                        var rotation = 0;\r\n                        var top = me.top;\r\n                        var left = me.left;\r\n                        var bottom = me.bottom;\r\n                        var right = me.right;\r\n                        var maxWidth, titleX, titleY;\r\n\r\n                        ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\r\n                        ctx.font = titleFont;\r\n\r\n                        // Horizontal\r\n                        if (me.isHorizontal()) {\r\n                            titleX = left + ((right - left) / 2); // midpoint of the width\r\n                            titleY = top + offset;\r\n                            maxWidth = right - left;\r\n                        } else {\r\n                            titleX = opts.position === 'left' ? left + offset : right - offset;\r\n                            titleY = top + ((bottom - top) / 2);\r\n                            maxWidth = bottom - top;\r\n                            rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\r\n                        }\r\n\r\n                        ctx.save();\r\n                        ctx.translate(titleX, titleY);\r\n                        ctx.rotate(rotation);\r\n                        ctx.textAlign = 'center';\r\n                        ctx.textBaseline = 'middle';\r\n\r\n                        var text = opts.text;\r\n                        if (helpers.isArray(text)) {\r\n                            var y = 0;\r\n                            for (var i = 0; i < text.length; ++i) {\r\n                                ctx.fillText(text[i], 0, y, maxWidth);\r\n                                y += lineHeight;\r\n                            }\r\n                        } else {\r\n                            ctx.fillText(text, 0, 0, maxWidth);\r\n                        }\r\n\r\n                        ctx.restore();\r\n                    }\r\n                }\r\n            });\r\n\r\n            function createNewTitleBlockAndAttach(chart, titleOpts) {\r\n                var title = new Title({\r\n                    ctx: chart.ctx,\r\n                    options: titleOpts,\r\n                    chart: chart\r\n                });\r\n\r\n                layouts.configure(chart, title, titleOpts);\r\n                layouts.addBox(chart, title);\r\n                chart.titleBlock = title;\r\n            }\r\n\r\n            module.exports = {\r\n                id: 'title',\r\n\r\n                /**\r\n                 * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\r\n                 * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\r\n                 * the plugin, which one will be re-exposed in the chart.js file.\r\n                 * https://github.com/chartjs/Chart.js/pull/2640\r\n                 * @private\r\n                 */\r\n                _element: Title,\r\n\r\n                beforeInit: function(chart) {\r\n                    var titleOpts = chart.options.title;\r\n\r\n                    if (titleOpts) {\r\n                        createNewTitleBlockAndAttach(chart, titleOpts);\r\n                    }\r\n                },\r\n\r\n                beforeUpdate: function(chart) {\r\n                    var titleOpts = chart.options.title;\r\n                    var titleBlock = chart.titleBlock;\r\n\r\n                    if (titleOpts) {\r\n                        helpers.mergeIf(titleOpts, defaults.global.title);\r\n\r\n                        if (titleBlock) {\r\n                            layouts.configure(chart, titleBlock, titleOpts);\r\n                            titleBlock.options = titleOpts;\r\n                        } else {\r\n                            createNewTitleBlockAndAttach(chart, titleOpts);\r\n                        }\r\n                    } else if (titleBlock) {\r\n                        layouts.removeBox(chart, titleBlock);\r\n                        delete chart.titleBlock;\r\n                    }\r\n                }\r\n            };\r\n\r\n        }, { \"16\": 16, \"17\": 17, \"21\": 21, \"36\": 36 }], 44: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                // Default config for a category scale\r\n                var defaultConfig = {\r\n                    position: 'bottom'\r\n                };\r\n\r\n                var DatasetScale = Chart.Scale.extend({\r\n                    /**\r\n                    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\r\n                    * else fall back to data.labels\r\n                    * @private\r\n                    */\r\n                    getLabels: function() {\r\n                        var data = this.chart.data;\r\n                        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\r\n                    },\r\n\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var labels = me.getLabels();\r\n                        me.minIndex = 0;\r\n                        me.maxIndex = labels.length - 1;\r\n                        var findIndex;\r\n\r\n                        if (me.options.ticks.min !== undefined) {\r\n                            // user specified min value\r\n                            findIndex = labels.indexOf(me.options.ticks.min);\r\n                            me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\r\n                        }\r\n\r\n                        if (me.options.ticks.max !== undefined) {\r\n                            // user specified max value\r\n                            findIndex = labels.indexOf(me.options.ticks.max);\r\n                            me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\r\n                        }\r\n\r\n                        me.min = labels[me.minIndex];\r\n                        me.max = labels[me.maxIndex];\r\n                    },\r\n\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var labels = me.getLabels();\r\n                        // If we are viewing some subset of labels, slice the original array\r\n                        me.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\r\n                    },\r\n\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        var me = this;\r\n                        var data = me.chart.data;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        if (data.yLabels && !isHorizontal) {\r\n                            return me.getRightValue(data.datasets[datasetIndex].data[index]);\r\n                        }\r\n                        return me.ticks[index - me.minIndex];\r\n                    },\r\n\r\n                    // Used to get data value locations.  Value can either be an index or a numerical value\r\n                    getPixelForValue: function(value, index) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        // 1 is added because we need the length but we have the indexes\r\n                        var offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\r\n\r\n                        // If value is a data object, then index is the index in the data array,\r\n                        // not the index of the scale. We need to change that.\r\n                        var valueCategory;\r\n                        if (value !== undefined && value !== null) {\r\n                            valueCategory = me.isHorizontal() ? value.x : value.y;\r\n                        }\r\n                        if (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\r\n                            var labels = me.getLabels();\r\n                            value = valueCategory || value;\r\n                            var idx = labels.indexOf(value);\r\n                            index = idx !== -1 ? idx : index;\r\n                        }\r\n\r\n                        if (me.isHorizontal()) {\r\n                            var valueWidth = me.width / offsetAmt;\r\n                            var widthOffset = (valueWidth * (index - me.minIndex));\r\n\r\n                            if (offset) {\r\n                                widthOffset += (valueWidth / 2);\r\n                            }\r\n\r\n                            return me.left + Math.round(widthOffset);\r\n                        }\r\n                        var valueHeight = me.height / offsetAmt;\r\n                        var heightOffset = (valueHeight * (index - me.minIndex));\r\n\r\n                        if (offset) {\r\n                            heightOffset += (valueHeight / 2);\r\n                        }\r\n\r\n                        return me.top + Math.round(heightOffset);\r\n                    },\r\n                    getPixelForTick: function(index) {\r\n                        return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var offset = me.options.offset;\r\n                        var value;\r\n                        var offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\r\n                        var horz = me.isHorizontal();\r\n                        var valueDimension = (horz ? me.width : me.height) / offsetAmt;\r\n\r\n                        pixel -= horz ? me.left : me.top;\r\n\r\n                        if (offset) {\r\n                            pixel -= (valueDimension / 2);\r\n                        }\r\n\r\n                        if (pixel <= 0) {\r\n                            value = 0;\r\n                        } else {\r\n                            value = Math.round(pixel / valueDimension);\r\n                        }\r\n\r\n                        return value + me.minIndex;\r\n                    },\r\n                    getBasePixel: function() {\r\n                        return this.bottom;\r\n                    }\r\n                });\r\n\r\n                Chart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\r\n\r\n            };\r\n\r\n        }, {}], 45: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var defaults = require(16);\r\n            var helpers = require(36);\r\n            var Ticks = require(25);\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var defaultConfig = {\r\n                    position: 'left',\r\n                    ticks: {\r\n                        callback: Ticks.formatters.linear\r\n                    }\r\n                };\r\n\r\n                var LinearScale = Chart.LinearScaleBase.extend({\r\n\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var chart = me.chart;\r\n                        var data = chart.data;\r\n                        var datasets = data.datasets;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var DEFAULT_MIN = 0;\r\n                        var DEFAULT_MAX = 1;\r\n\r\n                        function IDMatches(meta) {\r\n                            return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\r\n                        }\r\n\r\n                        // First Calculate the range\r\n                        me.min = null;\r\n                        me.max = null;\r\n\r\n                        var hasStacks = opts.stacked;\r\n                        if (hasStacks === undefined) {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                if (hasStacks) {\r\n                                    return;\r\n                                }\r\n\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\r\n                                    meta.stack !== undefined) {\r\n                                    hasStacks = true;\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        if (opts.stacked || hasStacks) {\r\n                            var valuesPerStack = {};\r\n\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                var key = [\r\n                                    meta.type,\r\n                                    // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\r\n                                    ((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\r\n                                    meta.stack\r\n                                ].join('.');\r\n\r\n                                if (valuesPerStack[key] === undefined) {\r\n                                    valuesPerStack[key] = {\r\n                                        positiveValues: [],\r\n                                        negativeValues: []\r\n                                    };\r\n                                }\r\n\r\n                                // Store these per type\r\n                                var positiveValues = valuesPerStack[key].positiveValues;\r\n                                var negativeValues = valuesPerStack[key].negativeValues;\r\n\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        positiveValues[index] = positiveValues[index] || 0;\r\n                                        negativeValues[index] = negativeValues[index] || 0;\r\n\r\n                                        if (opts.relativePoints) {\r\n                                            positiveValues[index] = 100;\r\n                                        } else if (value < 0) {\r\n                                            negativeValues[index] += value;\r\n                                        } else {\r\n                                            positiveValues[index] += value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n\r\n                            helpers.each(valuesPerStack, function(valuesForType) {\r\n                                var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\r\n                                var minVal = helpers.min(values);\r\n                                var maxVal = helpers.max(values);\r\n                                me.min = me.min === null ? minVal : Math.min(me.min, minVal);\r\n                                me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\r\n                            });\r\n\r\n                        } else {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        if (me.min === null) {\r\n                                            me.min = value;\r\n                                        } else if (value < me.min) {\r\n                                            me.min = value;\r\n                                        }\r\n\r\n                                        if (me.max === null) {\r\n                                            me.max = value;\r\n                                        } else if (value > me.max) {\r\n                                            me.max = value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\r\n                        me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\r\n\r\n                        // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\r\n                        this.handleTickRangeOptions();\r\n                    },\r\n                    getTickLimit: function() {\r\n                        var maxTicks;\r\n                        var me = this;\r\n                        var tickOpts = me.options.ticks;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\r\n                        } else {\r\n                            // The factor of 2 used to scale the font size has been experimentally determined.\r\n                            var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\r\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\r\n                        }\r\n\r\n                        return maxTicks;\r\n                    },\r\n                    // Called after the ticks are built. We need\r\n                    handleDirectionalChanges: function() {\r\n                        if (!this.isHorizontal()) {\r\n                            // We are in a vertical orientation. The top value is the highest. So reverse the array\r\n                            this.ticks.reverse();\r\n                        }\r\n                    },\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n                    },\r\n                    // Utils\r\n                    getPixelForValue: function(value) {\r\n                        // This must be called after fit has been run so that\r\n                        // this.left, this.top, this.right, and this.bottom have been defined\r\n                        var me = this;\r\n                        var start = me.start;\r\n\r\n                        var rightValue = +me.getRightValue(value);\r\n                        var pixel;\r\n                        var range = me.end - start;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            pixel = me.left + (me.width / range * (rightValue - start));\r\n                        } else {\r\n                            pixel = me.bottom - (me.height / range * (rightValue - start));\r\n                        }\r\n                        return pixel;\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var innerDimension = isHorizontal ? me.width : me.height;\r\n                        var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\r\n                        return me.start + ((me.end - me.start) * offset);\r\n                    },\r\n                    getPixelForTick: function(index) {\r\n                        return this.getPixelForValue(this.ticksAsNumbers[index]);\r\n                    }\r\n                });\r\n                Chart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\r\n\r\n            };\r\n\r\n        }, { \"16\": 16, \"25\": 25, \"36\": 36 }], 46: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var helpers = require(36);\r\n\r\n            /**\r\n             * Generate a set of linear ticks\r\n             * @param generationOptions the options used to generate the ticks\r\n             * @param dataRange the range of the data\r\n             * @returns {Array<Number>} array of tick values\r\n             */\r\n            function generateTicks(generationOptions, dataRange) {\r\n                var ticks = [];\r\n                // To get a \"nice\" value for the tick spacing, we will use the appropriately named\r\n                // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\r\n                // for details.\r\n\r\n                var spacing;\r\n                if (generationOptions.stepSize && generationOptions.stepSize > 0) {\r\n                    spacing = generationOptions.stepSize;\r\n                } else {\r\n                    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\r\n                    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\r\n                }\r\n                var niceMin = Math.floor(dataRange.min / spacing) * spacing;\r\n                var niceMax = Math.ceil(dataRange.max / spacing) * spacing;\r\n\r\n                // If min, max and stepSize is set and they make an evenly spaced scale use it.\r\n                if (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\r\n                    // If very close to our whole number, use it.\r\n                    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\r\n                        niceMin = generationOptions.min;\r\n                        niceMax = generationOptions.max;\r\n                    }\r\n                }\r\n\r\n                var numSpaces = (niceMax - niceMin) / spacing;\r\n                // If very close to our rounded value, use it.\r\n                if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n                    numSpaces = Math.round(numSpaces);\r\n                } else {\r\n                    numSpaces = Math.ceil(numSpaces);\r\n                }\r\n\r\n                var precision = 1;\r\n                if (spacing < 1) {\r\n                    precision = Math.pow(10, spacing.toString().length - 2);\r\n                    niceMin = Math.round(niceMin * precision) / precision;\r\n                    niceMax = Math.round(niceMax * precision) / precision;\r\n                }\r\n                ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\r\n                for (var j = 1; j < numSpaces; ++j) {\r\n                    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\r\n                }\r\n                ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\r\n\r\n                return ticks;\r\n            }\r\n\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var noop = helpers.noop;\r\n\r\n                Chart.LinearScaleBase = Chart.Scale.extend({\r\n                    getRightValue: function(value) {\r\n                        if (typeof value === 'string') {\r\n                            return +value;\r\n                        }\r\n                        return Chart.Scale.prototype.getRightValue.call(this, value);\r\n                    },\r\n\r\n                    handleTickRangeOptions: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\r\n                        // do nothing since that would make the chart weird. If the user really wants a weird chart\r\n                        // axis, they can manually override it\r\n                        if (tickOpts.beginAtZero) {\r\n                            var minSign = helpers.sign(me.min);\r\n                            var maxSign = helpers.sign(me.max);\r\n\r\n                            if (minSign < 0 && maxSign < 0) {\r\n                                // move the top up to 0\r\n                                me.max = 0;\r\n                            } else if (minSign > 0 && maxSign > 0) {\r\n                                // move the bottom down to 0\r\n                                me.min = 0;\r\n                            }\r\n                        }\r\n\r\n                        var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\r\n                        var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\r\n\r\n                        if (tickOpts.min !== undefined) {\r\n                            me.min = tickOpts.min;\r\n                        } else if (tickOpts.suggestedMin !== undefined) {\r\n                            if (me.min === null) {\r\n                                me.min = tickOpts.suggestedMin;\r\n                            } else {\r\n                                me.min = Math.min(me.min, tickOpts.suggestedMin);\r\n                            }\r\n                        }\r\n\r\n                        if (tickOpts.max !== undefined) {\r\n                            me.max = tickOpts.max;\r\n                        } else if (tickOpts.suggestedMax !== undefined) {\r\n                            if (me.max === null) {\r\n                                me.max = tickOpts.suggestedMax;\r\n                            } else {\r\n                                me.max = Math.max(me.max, tickOpts.suggestedMax);\r\n                            }\r\n                        }\r\n\r\n                        if (setMin !== setMax) {\r\n                            // We set the min or the max but not both.\r\n                            // So ensure that our range is good\r\n                            // Inverted or 0 length range can happen when\r\n                            // ticks.min is set, and no datasets are visible\r\n                            if (me.min >= me.max) {\r\n                                if (setMin) {\r\n                                    me.max = me.min + 1;\r\n                                } else {\r\n                                    me.min = me.max - 1;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (me.min === me.max) {\r\n                            me.max++;\r\n\r\n                            if (!tickOpts.beginAtZero) {\r\n                                me.min--;\r\n                            }\r\n                        }\r\n                    },\r\n                    getTickLimit: noop,\r\n                    handleDirectionalChanges: noop,\r\n\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        // Figure out what the max number of ticks we can support it is based on the size of\r\n                        // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n                        // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n                        // the graph. Make sure we always have at least 2 ticks\r\n                        var maxTicks = me.getTickLimit();\r\n                        maxTicks = Math.max(2, maxTicks);\r\n\r\n                        var numericGeneratorOptions = {\r\n                            maxTicks: maxTicks,\r\n                            min: tickOpts.min,\r\n                            max: tickOpts.max,\r\n                            stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\r\n                        };\r\n                        var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\r\n\r\n                        me.handleDirectionalChanges();\r\n\r\n                        // At this point, we need to update our max and min given the tick values since we have expanded the\r\n                        // range of the scale\r\n                        me.max = helpers.max(ticks);\r\n                        me.min = helpers.min(ticks);\r\n\r\n                        if (tickOpts.reverse) {\r\n                            ticks.reverse();\r\n\r\n                            me.start = me.max;\r\n                            me.end = me.min;\r\n                        } else {\r\n                            me.start = me.min;\r\n                            me.end = me.max;\r\n                        }\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        me.ticksAsNumbers = me.ticks.slice();\r\n                        me.zeroLineIndex = me.ticks.indexOf(0);\r\n\r\n                        Chart.Scale.prototype.convertTicksToLabels.call(me);\r\n                    }\r\n                });\r\n            };\r\n\r\n        }, { \"36\": 36 }]\r\n    }, {}, [6])(6)\r\n});","/*!\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n * MIT license http://www.opensource.org/licenses/mit-license.php/\r\n * @author Lea Verou http://lea.verou.me\r\n */\r\n(function (root) {\r\n    // Private helper vars\r\n    var lang = /\\blang(?:uage)?-(?!\\*)(\\w+)\\b/i;\r\n\r\n    var _ = prism = {\r\n        util: {\r\n            encode: function (tokens) {\r\n                if (tokens instanceof Token) {\r\n                    return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\r\n                } else if (_.util.type(tokens) === 'Array') {\r\n                    return tokens.map(_.util.encode);\r\n                } else {\r\n                    return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\r\n                }\r\n            },\r\n\r\n            type: function (o) {\r\n                return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\r\n            },\r\n\r\n            // Deep clone a language definition (e.g. to extend it)\r\n            clone: function (o) {\r\n                var type = _.util.type(o);\r\n\r\n                switch (type) {\r\n                    case 'Object':\r\n                        var clone = {};\r\n\r\n                        for (var key in o) {\r\n                            if (o.hasOwnProperty(key)) {\r\n                                clone[key] = _.util.clone(o[key]);\r\n                            }\r\n                        }\r\n\r\n                        return clone;\r\n\r\n                    case 'Array':\r\n                        // Check for existence for IE8\r\n                        return o.map && o.map(function (v) { return _.util.clone(v); });\r\n                }\r\n\r\n                return o;\r\n            }\r\n        },\r\n\r\n        languages: {\r\n            extend: function (id, redef) {\r\n                var lang = _.util.clone(_.languages[id]);\r\n\r\n                for (var key in redef) {\r\n                    lang[key] = redef[key];\r\n                }\r\n\r\n                return lang;\r\n            },\r\n\r\n            /**\r\n             * Insert a token before another token in a language literal\r\n             * As this needs to recreate the object (we cannot actually insert before keys in object literals),\r\n             * we cannot just provide an object, we need anobject and a key.\r\n             * @param inside The key (or language id) of the parent\r\n             * @param before The key to insert before. If not provided, the function appends instead.\r\n             * @param insert Object with the key/value pairs to insert\r\n             * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\r\n             */\r\n            insertBefore: function (inside, before, insert, root) {\r\n                root = root || _.languages;\r\n                var grammar = root[inside];\r\n\r\n                if (arguments.length == 2) {\r\n                    insert = arguments[1];\r\n\r\n                    for (var newToken in insert) {\r\n                        if (insert.hasOwnProperty(newToken)) {\r\n                            grammar[newToken] = insert[newToken];\r\n                        }\r\n                    }\r\n\r\n                    return grammar;\r\n                }\r\n\r\n                var ret = {};\r\n\r\n                for (var token in grammar) {\r\n                    if (grammar.hasOwnProperty(token)) {\r\n                        if (token == before) {\r\n                            for (var newToken in insert) {\r\n                                if (insert.hasOwnProperty(newToken)) {\r\n                                    ret[newToken] = insert[newToken];\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        ret[token] = grammar[token];\r\n                    }\r\n                }\r\n\r\n                // Update references in other language definitions\r\n                _.languages.DFS(_.languages, function (key, value) {\r\n                    if (value === root[inside] && key != inside) {\r\n                        this[key] = ret;\r\n                    }\r\n                });\r\n\r\n                return root[inside] = ret;\r\n            },\r\n\r\n            // Traverse a language definition with Depth First Search\r\n            DFS: function (o, callback, type, visited) {\r\n                visited = visited || {};\r\n                for (var i in o) {\r\n                    if (o.hasOwnProperty(i)) {\r\n                        callback.call(o, i, o[i], type || i);\r\n\r\n                        if (_.util.type(o[i]) === 'Object' && !visited[o[i]]) {\r\n                            visited[o[i]] = true;\r\n                            _.languages.DFS(o[i], callback, null, visited);\r\n                        }\r\n                        else if (_.util.type(o[i]) === 'Array' && !visited[o[i]]) {\r\n                            visited[o[i]] = true;\r\n                            _.languages.DFS(o[i], callback, i, visited);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        plugins: {},\r\n\r\n        highlightAll: function (async, callback) {\r\n            var elements = document.querySelectorAll('code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code');\r\n\r\n            for (var i = 0, element; element = elements[i++];) {\r\n                _.highlightElement(element, async === true, callback);\r\n            }\r\n        },\r\n\r\n        highlightElement: function (element, async, callback) {\r\n            // Find language\r\n            var language, grammar, parent = element;\r\n\r\n            while (parent && !lang.test(parent.className)) {\r\n                parent = parent.parentNode;\r\n            }\r\n\r\n            if (parent) {\r\n                language = (parent.className.match(lang) || [, ''])[1];\r\n                grammar = _.languages[language];\r\n            }\r\n\r\n            // Set language on the element, if not present\r\n            element.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\r\n\r\n            // Set language on the parent, for styling\r\n            parent = element.parentNode;\r\n\r\n            if (/pre/i.test(parent.nodeName)) {\r\n                parent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\r\n            }\r\n\r\n            var code = element.textContent;\r\n\r\n            var env = {\r\n                element: element,\r\n                language: language,\r\n                grammar: grammar,\r\n                code: code\r\n            };\r\n\r\n            if (!code || !grammar) {\r\n                _.hooks.run('complete', env);\r\n                return;\r\n            }\r\n\r\n            _.hooks.run('before-highlight', env);\r\n\r\n            if (async && root.Worker) {\r\n                var worker = new Worker(_.filename);\r\n\r\n                worker.onmessage = function (evt) {\r\n                    env.highlightedCode = evt.data;\r\n\r\n                    _.hooks.run('before-insert', env);\r\n\r\n                    env.element.innerHTML = env.highlightedCode;\r\n\r\n                    callback && callback.call(env.element);\r\n                    _.hooks.run('after-highlight', env);\r\n                    _.hooks.run('complete', env);\r\n                };\r\n\r\n                worker.postMessage(JSON.stringify({\r\n                    language: env.language,\r\n                    code: env.code,\r\n                    immediateClose: true\r\n                }));\r\n            }\r\n            else {\r\n                env.highlightedCode = _.highlight(env.code, env.grammar, env.language);\r\n\r\n                _.hooks.run('before-insert', env);\r\n\r\n                env.element.innerHTML = env.highlightedCode;\r\n\r\n                callback && callback.call(element);\r\n\r\n                _.hooks.run('after-highlight', env);\r\n                _.hooks.run('complete', env);\r\n            }\r\n        },\r\n\r\n        highlight: function (text, grammar, language) {\r\n            var tokens = _.tokenize(text, grammar);\r\n            return Token.stringify(_.util.encode(tokens), language);\r\n        },\r\n\r\n        tokenize: function (text, grammar, language) {\r\n            var Token = _.Token;\r\n\r\n            var strarr = [text];\r\n\r\n            var rest = grammar.rest;\r\n\r\n            if (rest) {\r\n                for (var token in rest) {\r\n                    grammar[token] = rest[token];\r\n                }\r\n\r\n                delete grammar.rest;\r\n            }\r\n\r\n            tokenloop: for (var token in grammar) {\r\n                if (!grammar.hasOwnProperty(token) || !grammar[token]) {\r\n                    continue;\r\n                }\r\n\r\n                var patterns = grammar[token];\r\n                patterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\r\n\r\n                for (var j = 0; j < patterns.length; ++j) {\r\n                    var pattern = patterns[j],\r\n                        inside = pattern.inside,\r\n                        lookbehind = !!pattern.lookbehind,\r\n                        lookbehindLength = 0,\r\n                        alias = pattern.alias;\r\n\r\n                    pattern = pattern.pattern || pattern;\r\n\r\n                    for (var i = 0; i < strarr.length; i++) { // Don’t cache length as it changes during the loop\r\n                        var str = strarr[i];\r\n\r\n                        if (strarr.length > text.length) {\r\n                            // Something went terribly wrong, ABORT, ABORT!\r\n                            break tokenloop;\r\n                        }\r\n\r\n                        if (str instanceof Token) {\r\n                            continue;\r\n                        }\r\n\r\n                        pattern.lastIndex = 0;\r\n\r\n                        var match = pattern.exec(str);\r\n\r\n                        if (match) {\r\n                            if (lookbehind) {\r\n                                lookbehindLength = match[1].length;\r\n                            }\r\n\r\n                            var from = match.index - 1 + lookbehindLength,\r\n                                match = match[0].slice(lookbehindLength),\r\n                                len = match.length,\r\n                                to = from + len,\r\n                                before = str.slice(0, from + 1),\r\n                                after = str.slice(to + 1);\r\n\r\n                            var args = [i, 1];\r\n\r\n                            if (before) {\r\n                                args.push(before);\r\n                            }\r\n\r\n                            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias);\r\n\r\n                            args.push(wrapped);\r\n\r\n                            if (after) {\r\n                                args.push(after);\r\n                            }\r\n\r\n                            Array.prototype.splice.apply(strarr, args);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return strarr;\r\n        },\r\n\r\n        hooks: {\r\n            all: {},\r\n\r\n            add: function (name, callback) {\r\n                var hooks = _.hooks.all;\r\n\r\n                hooks[name] = hooks[name] || [];\r\n\r\n                hooks[name].push(callback);\r\n            },\r\n\r\n            run: function (name, env) {\r\n                var callbacks = _.hooks.all[name];\r\n\r\n                if (!callbacks || !callbacks.length) {\r\n                    return;\r\n                }\r\n\r\n                for (var i = 0, callback; callback = callbacks[i++];) {\r\n                    callback(env);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var Token = _.Token = function (type, content, alias) {\r\n        this.type = type;\r\n        this.content = content;\r\n        this.alias = alias;\r\n    };\r\n\r\n    Token.stringify = function (o, language, parent) {\r\n        if (typeof o == 'string') {\r\n            return o;\r\n        }\r\n\r\n        if (_.util.type(o) === 'Array') {\r\n            return o.map(function (element) {\r\n                return Token.stringify(element, language, o);\r\n            }).join('');\r\n        }\r\n\r\n        var env = {\r\n            type: o.type,\r\n            content: Token.stringify(o.content, language, parent),\r\n            tag: 'span',\r\n            classes: ['token', o.type],\r\n            attributes: {},\r\n            language: language,\r\n            parent: parent\r\n        };\r\n\r\n        if (env.type == 'comment') {\r\n            env.attributes['spellcheck'] = 'true';\r\n        }\r\n\r\n        if (o.alias) {\r\n            var aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\r\n            Array.prototype.push.apply(env.classes, aliases);\r\n        }\r\n\r\n        _.hooks.run('wrap', env);\r\n\r\n        var attributes = '';\r\n\r\n        for (var name in env.attributes) {\r\n            attributes += (attributes ? ' ' : '') + name + '=\"' + (env.attributes[name] || '') + '\"';\r\n        }\r\n\r\n        return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\" ' + attributes + '>' + env.content + '</' + env.tag + '>';\r\n    };\r\n\r\n    root.Prism = prism;\r\n})(this);\r\n\r\nPrism.languages.sql = {\r\n    'comment': {\r\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\w\\W]*?\\*\\/|(?:--|\\/\\/|#).*)/,\r\n        lookbehind: true\r\n    },\r\n    'string': {\r\n        pattern: /(^|[^@\\\\])(\"|')(?:\\\\?[\\s\\S])*?\\2/,\r\n        lookbehind: true\r\n    },\r\n    'variable': /@[\\w.$]+|@(\"|'|`)(?:\\\\?[\\s\\S])+?\\1/,\r\n    'function': /\\b(?:COUNT|SUM|AVG|MIN|MAX|FIRST|LAST|UCASE|LCASE|MID|LEN|ROUND|NOW|FORMAT)(?=\\s*\\()/i, // Should we highlight user defined functions too?\r\n    'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR VARYING|CHARACTER (?:SET|VARYING)|CHARSET|CHECK|CHECKPOINT|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMN|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS|CONTAINSTABLE|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|DATA(?:BASES?)?|DATETIME|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE(?: PRECISION)?|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE KEY|ELSE|ENABLE|ENCLOSED BY|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPE(?:D BY)?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTO|INVOKER|ISOLATION LEVEL|JOIN|KEYS?|KILL|LANGUAGE SQL|LAST|LEFT|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MODIFIES SQL DATA|MODIFY|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL(?: CHAR VARYING| CHARACTER(?: VARYING)?| VARCHAR)?|NATURAL|NCHAR(?: VARCHAR)?|NEXT|NO(?: SQL|CHECK|CYCLE)?|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READ(?:S SQL DATA|TEXT)?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEATABLE|REPLICATION|REQUIRE|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE MODE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|START(?:ING BY)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED BY|TEXT(?:SIZE)?|THEN|TIMESTAMP|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNPIVOT|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?)\\b/i,\r\n    'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\r\n    'number': /\\b-?(?:0x)?\\d*\\.?[\\da-f]+\\b/,\r\n    'operator': /[-+*\\/=%^~]|&&?|\\|?\\||!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\r\n    'punctuation': /[;[\\]()`,.]/\r\n};","/*!\r\n * Allowing lists to dynamically expand and collapse.\r\n * Created by Stephen Morley - http://code.stephenmorley.org/ - and released under the terms of the CC0 1.0 Universal legal code:\r\n * http://creativecommons.org/publicdomain/zero/1.0/legalcode\r\n *\r\n * Modified to work with bootstrap/fontAwesome and incorporate cascading checkboxes.\r\n */\r\n(function (root, factory) {\r\n    // Assume a traditional browser.\r\n    window.CollapsibleList = factory(root.$);\r\n})(this, function ($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare CollapsibleList class.\r\n     * @param {Node} element - Node to make collapsible.\r\n     */\r\n    var CollapsibleList = function (element) {\r\n        this.container = $.get(element);\r\n        this.init();\r\n    };\r\n\r\n    /**\r\n     * Declare CollapseCollapsibleList class methods.\r\n     */\r\n    CollapsibleList.prototype = {\r\n        /**\r\n         * Make the specified list collapsible.\r\n         */\r\n        init: function () {\r\n            var node = this.container;\r\n            // loop over the list items within this node\r\n            var lis = $.getAll('li', node);\r\n            for (var i = 0; i < lis.length; i++) {\r\n                // prevent text from being selected unintentionally\r\n                $.on(lis[i], 'mousedown', function (e) { e.preventDefault(); }, false);\r\n                // add the click listener\r\n                $.on(lis[i], 'click', this.createClickListener(lis[i]), false);\r\n                // close the unordered lists within this list item\r\n                this.toggle(lis[i]);\r\n\r\n                // check any parent items if this item is checked\r\n                node = $.get('input[type=\"checkbox\"]', lis[i]);\r\n                if (node.checked) {\r\n                    var p = node;\r\n                    while (this.container !== (p = p.parentNode)) {\r\n                        if (p.nodeName === 'LI') {\r\n                            var parent = p.parentNode.parentNode;\r\n                            if (parent.nodeName === 'LI') {\r\n                                var pi = $.get('input[type=\"checkbox\"]', parent);\r\n                                if (pi && pi !== node) {\r\n                                    pi.checked = true;\r\n                                }\r\n                                this.toggle(parent, true);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Toggles the display status of any unordered list elements within the specified node.\r\n         * @param {Node} node - Node containing the unordered list elements.\r\n         * @returns {Function} Click handler function.\r\n         */\r\n        createClickListener: function (node) {\r\n            var self = this;\r\n            return function (e) {\r\n                // ensure the event object is defined\r\n                e = $.coalesce(e, window.event);\r\n\r\n                // find the list item containing the target of the event\r\n                var elem = $.coalesce(e.target, e.srcElement);\r\n\r\n                // handle checking/unchecking buttons\r\n                if (elem.nodeName === 'INPUT') {\r\n                    var checked = elem.checked;\r\n\r\n                    // first toggle the check for all of the children\r\n                    var inputs = $.getAll('ul input[type=\"checkbox\"]', elem.parentNode.parentNode);\r\n                    i = inputs.length;\r\n                    while (i--) {\r\n                        inputs[i].checked = checked;\r\n                    }\r\n\r\n                    // then check all parents. if any of the children of a checkbox are checked, then it should be checked.\r\n                    var checkedRelative = false;\r\n                    var p = elem;\r\n                    while (self.container !== (p = p.parentNode)) {\r\n                        if (p.nodeName === 'LI') {\r\n                            // see if anybody else on this node level is checked\r\n                            var relatives = $.getAll('input[type=\"checkbox\"]', p.parentNode);\r\n                            var i = relatives.length;\r\n                            checkedRelative = false;\r\n                            while (i--) {\r\n                                if (relatives[i].checked) {\r\n                                    checkedRelative = true;\r\n                                }\r\n                            }\r\n\r\n                            if (p.parentNode.parentNode !== self.container) {\r\n                                var pi = $.get('input[type=\"checkbox\"]', p.parentNode.parentNode);\r\n                                if (pi && pi !== elem) {\r\n                                    pi.checked = checkedRelative || checked;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                if ($.hasClass(elem, 'custom-checkbox') || (elem.parentNode && $.hasClass(elem.parentNode, 'custom-checkbox'))) {\r\n                    // prevent toggling tree when checking/unchecking an element\r\n                    return;\r\n                }\r\n\r\n                // now handle the tree itself\r\n                while (elem.nodeName !== 'LI') {\r\n                    elem = elem.parentNode;\r\n                }\r\n\r\n                // toggle the state of the node if it was the target of the event\r\n                if (elem === node) {\r\n                    self.toggle(node);\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Opens or closes the unordered list elements directly within the specified node.\r\n         * @param {Node} node - Node containing the unordered list elements.\r\n         * @param {bool} forceOpen - Set to true to force the node to be open regardless of current status.\r\n         */\r\n        toggle: function (node, forceOpen) {\r\n            // determine whether to open or close the unordered lists\r\n            var open = $.coalesce(forceOpen, $.hasClass(node, 'collapsible-list-closed'));\r\n\r\n            // loop over the unordered list elements with the node\r\n            var uls = $.getAll('ul', node);\r\n            for (var i = 0; i < uls.length; i++) {\r\n                // find the parent list item of this unordered list\r\n                var li = uls[i];\r\n                while (li.nodeName !== 'LI') {\r\n                    li = li.parentNode;\r\n                }\r\n\r\n                // style the unordered list if it is directly within this node\r\n                if (li === node) {\r\n                    uls[i].style.display = open ? 'block' : 'none';\r\n                }\r\n            }\r\n\r\n            // remove the current class from the node\r\n            $.removeClass(node, 'collapsible-list-' + (open ? 'closed' : 'open'));\r\n\r\n            // if the node contains unordered lists, set its class\r\n            if (uls.length) {\r\n                $.addClass(node, 'collapsible-list-' + (open ? 'open' : 'closed'));\r\n            }\r\n        }\r\n    };\r\n\r\n    return CollapsibleList;\r\n});","/*!\r\n * Validator that converts HTML5 form validation errors into bootstrap friendly errors.\r\n * Based on the library below, but ported from jQuery to native js.\r\n *\r\n * Validator v0.9.0 for Bootstrap 3, by @1000hz\r\n * Copyright 2015 Cina Saffary\r\n * Licensed under http://opensource.org/licenses/MIT\r\n * https://github.com/1000hz/bootstrap-validator\r\n *\r\n * Modified to use Dash's core library instead of jQuery, with unneeded functionality removed.\r\n */\r\n(function (factory) {\r\n    // Assume a traditional browser.\r\n    window.Validator = factory($, Alertify);\r\n})(function ($, Alertify) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare validator class.\r\n     * @param {Node} element - Form to validate.\r\n     * @param {Object} errorMsgs - Error messages for custom errors.\r\n     */\r\n    var Validator = function (element, errorMsgs) {\r\n        this.element = element;\r\n        this.element.setAttribute('novalidate', true); // disable automatic native validation\r\n        this.errorMsgs = $.extend({}, Validator._errors, errorMsgs || {});\r\n\r\n        var inputs = $.getAll('[data-match]', this.element);\r\n        for (var i = 0; i < inputs.length; i++) {\r\n            // add the data match attribute to the target if it doesn't already exist\r\n            var target = inputs[i].getAttribute('data-match');\r\n            if (target) {\r\n                var targetElement = $.get('#' + target, this.element);\r\n                if (targetElement && !targetElement.hasAttribute('data-match')) {\r\n                    targetElement.setAttribute('data-match', inputs[i].id);\r\n                }\r\n            }\r\n        }\r\n\r\n        // check for pre-existing error classes because razor is weird sometimes\r\n        this.resetAll();\r\n\r\n        $.on(this.element, 'input', this.validateInput.bind(this));\r\n        $.on(this.element, 'change', this.validateInput.bind(this));\r\n        $.on(this.element, 'focusout', this.validateInput.bind(this));\r\n        $.on(this.element, 'submit', this.onSubmit.bind(this));\r\n        $.on(this.element, 'formValidate', this.validate.bind(this));\r\n    };\r\n\r\n    /**\r\n     * Default error messages for custom errors.\r\n     * @type {Object}\r\n     */\r\n    Validator._errors = {\r\n        match: '{0} does not match {1}.',\r\n        minlength: 'This field is not long enough.'\r\n    };\r\n\r\n    /**\r\n     * Functions to validate inputs against.\r\n     * @type {Object}\r\n     */\r\n    Validator.VALIDATORS = {\r\n        'native': function (el) {\r\n            return el.checkValidity();\r\n        },\r\n        'match': function (el) {\r\n            var target = $.get('#' + el.getAttribute('data-match'), this.element);\r\n            var res = !target ? false : el.value === target.value;\r\n            if (res) {\r\n                el.setCustomValidity('');\r\n            } else {\r\n                el.setCustomValidity(this.errorMsgs.match.replace(\"{0}\", el.name).replace(\"{1}\", el.getAttribute('data-match')));\r\n            }\r\n            return res;\r\n        },\r\n        'minlength': function (el) {\r\n            var minlength = el.getAttribute('data-minlength');\r\n            var res = !el.value || el.value.length >= minlength;\r\n            if (res) {\r\n                el.setCustomValidity('');\r\n            } else {\r\n                el.setCustomValidity(this.errorMsgs.minlength);\r\n            }\r\n            return res;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Declare validator class methods.\r\n     */\r\n    Validator.prototype = {\r\n        /**\r\n         * Validate a single input element.\r\n         * @param {Node} e - Element to validate\r\n         */\r\n        validateInput: function (e) {\r\n            var el;\r\n            if (this.isValidatableInput(e)) {\r\n                el = e;\r\n            } else if (e.target && this.isValidatableInput(e.target)) {\r\n                el = e.target;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            if (el.type === 'radio') {\r\n                el = $.getAll('input[name=\"' + el.getAttribute('name') + '\"]', self.element);\r\n            }\r\n\r\n            if (e.defaultPrevented) {\r\n                return;\r\n            }\r\n\r\n            var errors = this.runValidators(el);\r\n            if (errors.length) {\r\n                self.showErrors(el, errors);\r\n            } else {\r\n                self.clearErrors(el);\r\n                if (el.getAttribute('data-match')) {\r\n                    self.clearErrors($.get('#' + el.getAttribute('data-match'), self.element));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get all the validatable inputs in the form.\r\n         * @returns {Node[]} Array of input elements.\r\n         */\r\n        inputSelector: function () {\r\n            var inputs = $.getAll('input,select,textarea', this.element);\r\n            var length = inputs.length, i = 0, results = [];\r\n            for (; i < length; i++) {\r\n                var input = inputs[i];\r\n                if (input.type !== 'submit' && input.type !== 'button' && !input.getAttribute('disabled') && input.style.visibility !== 'hidden') {\r\n                    results.push(input);\r\n                } else if ($.hasClass(input, 'form-control-error')) {\r\n                    // remove error class on disabled items\r\n                    $.removeClass(input, 'form-control-error');\r\n                }\r\n            }\r\n            return results;\r\n        },\r\n\r\n        /**\r\n         * Get all the inputs in the form and remove error styling.\r\n         */\r\n        resetAll: function () {\r\n            $.getAll('input,select,textarea', this.element).forEach(function (x) {\r\n                $.removeClass(x, 'form-control-error');\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Check if a node is an input that can be validated.\r\n         * @param {Node} input - Node to check.\r\n         * @returns {bool} True if input is an input that can be validated.\r\n         */\r\n        isValidatableInput: function (input) {\r\n            return (input.tagName === 'INPUT' || input.tagName === 'SELECT' || input.tagName === 'TEXTAREA') && !input.getAttribute('disabled') && input.style.visibility !== 'hidden';\r\n        },\r\n\r\n        /**\r\n         * Run all of the validator functions against an element.\r\n         * @param {Node} el - Element to validate.\r\n         * @returns {string[]} Array of error messages.\r\n         */\r\n        runValidators: function (el) {\r\n            var errors = [];\r\n\r\n            for (var key in Validator.VALIDATORS) {\r\n                if (Validator.VALIDATORS.hasOwnProperty(key)) {\r\n                    var validator = Validator.VALIDATORS[key];\r\n                    var attr = el.getAttribute('data-' + key);\r\n                    if ((attr || key === 'native') && !validator.call(this, el)) {\r\n                        var error = el.getAttribute('data' + key + '-error') || el.getAttribute('data-error') || (key === 'native' ? el.validationMessage : this.errorMsgs[key]);\r\n                        if (key === \"match\") {\r\n                            error = error.replace(\"{0}\", el.name).replace(\"{1}\", attr);\r\n                        }\r\n                        !~errors.indexOf(error) && errors.push(error);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        /**\r\n         * Run validation for the form.\r\n         */\r\n        validate: function () {\r\n            var inputs = this.inputSelector();\r\n            var length = inputs.length, i = 0;\r\n            for (; i < length; i++) {\r\n                this.validateInput(inputs[i]);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Display errors for an element.\r\n         * @param {Node} el - Element to display errors for.\r\n         * @param {string[]} errors - List of error messages.\r\n         */\r\n        showErrors: function (el, errors) {\r\n            if (!errors.length) {\r\n                return;\r\n            }\r\n\r\n            var group = $.closest('.form-group', el);\r\n            var block = $.get('.help-block.with-errors', group);\r\n\r\n            if (block) {\r\n                var errorElement = document.createElement('ul');\r\n                $.addClass(errorElement, 'list-unstyled');\r\n\r\n                var errHtml = '', i = 0; length = errors.length;\r\n                for (; i < length; i++) {\r\n                    errHtml += '<li>' + errors[i] + '</li>';\r\n                }\r\n                errorElement.innerHTML = errHtml;\r\n\r\n                block.innerHTML = '';\r\n                block.appendChild(errorElement);\r\n            }\r\n\r\n            $.addClass(el, 'form-control-error');\r\n\r\n            var tab = $.closest('.tab-pane', el);\r\n            if (tab) {\r\n                // add error class to tab \r\n                var id = tab.getAttribute('aria-labelledby');\r\n                if (id) {\r\n                    $.addClass($.get('#' + id), 'tab-validation-error');\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Hide all error messages for an element.\r\n         * @param {Node} el - Element to hide errors for.\r\n         */\r\n        clearErrors: function (el) {\r\n            $.removeClass(el, 'form-control-error');\r\n\r\n            var group = $.closest('.form-group', el);\r\n            if (group) {\r\n                var block = $.get('.help-block.with-errors', group);\r\n                if (block) {\r\n                    block.innerHTML = '';\r\n                }\r\n            }\r\n            var tab = $.closest('.tab-pane', el);\r\n            if (tab) {\r\n                if ($.getAll('.form-control-error', tab).length == 0) {\r\n                    var id = tab.getAttribute('aria-labelledby');\r\n                    if (id) {\r\n                        $.removeClass($.get('#' + id), 'tab-validation-error');\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check if the validator found any errors.\r\n         * @returns {bool} True if there are any errors.\r\n         */\r\n        hasErrors: function () {\r\n            return $.getAll('.form-control-error', this.element).length;\r\n        },\r\n\r\n        /**\r\n         * Validate the form and prevent submit if there are errors.\r\n         * @param {Event} e - Form submit event.\r\n         */\r\n        onSubmit: function (e) {\r\n            this.validate();\r\n            if (this.hasErrors()) {\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    };\r\n\r\n    return Validator;\r\n});","/*!\r\n * Color library\r\n */\r\n(function($) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Convert hex string to RGB.\r\n     * @param {string} hex - Hex string.\r\n     * @returns {Object} Object with RGB properties.\r\n     */\r\n    var hex2rgb = function(hex) {\r\n        return { r: parseInt(hex.substr(1, 2), 16), g: parseInt(hex.substr(3, 2), 16), b: parseInt(hex.substr(5, 2), 16) };\r\n    };\r\n\r\n    /**\r\n     * Converts an RGB color value to HSL. Conversion formula\r\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n     * Assumes r, g, and b are contained in the set [0, 255] and\r\n     * returns h, s, and l in the set [0, 1].\r\n     * @param {Object} rgb - Object with r, g, and b properties.\r\n     * @return {Number[]} The HSL representation.\r\n     */\r\n    var rgb2hsl = function(rgb) {\r\n        var r = rgb.r, g = rgb.g, b = rgb.b;\r\n        r /= 255, g /= 255, b /= 255;\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if (max === min) {\r\n            h = s = 0; // achromatic\r\n        } else {\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch (max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        return [h, s, l];\r\n    };\r\n\r\n    $.colors = {\r\n        hex2rgb: hex2rgb,\r\n        rgb2hsl: rgb2hsl,\r\n    };\r\n})(this.$);","/*!\r\n * ColorPicker mithril component.\r\n */\r\n(function(root, factory) {\r\n    root.ColorPicker = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    var _keys = {\r\n        ESC: 27,\r\n        DOWN: 40,\r\n        UP: 38,\r\n        LEFT: 37,\r\n        RIGHT: 39\r\n    };\r\n\r\n    var ColorPicker = {\r\n        /**\r\n         * Initialize the component.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oninit: function(vnode) {\r\n            var attrs = vnode.attrs;\r\n            this.opts = {\r\n                value: attrs.value,\r\n                name: attrs.name,\r\n                active: false,\r\n                disabled: attrs.disabled,\r\n                onSelect: attrs.onSelect,\r\n                onCancel: attrs.onCancel,\r\n                container: null,\r\n                selectedIndex: -1,\r\n                colors: ['#4D4D4D', '#F44E3B', '#0000FF', '#FE9200', '#FCDC00', '#00FF00', '#A4DD00', '#68CCCA',\r\n                    '#73D8FF', '#AEA1FF', '#FDA1FF', '#D33115', '#E27300', '#FCC400', '#B0BC00', '#68BC00',\r\n                    '#16A5A5', '#009CE0', '#7B64FF', '#FA28FF', '#9F0500', '#C45100', '#FB9E00',\r\n                    '#808900', '#194D33', '#0C797D', '#0062B1', '#653294', '#AB149E'\r\n                ]\r\n            };\r\n            if (this.opts.value) {\r\n                this.opts.selectedIndex = this.opts.colors.indexOf(this.opts.value);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Grab the DOM containing node after it is created.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         */\r\n        oncreate: function(vnode) {\r\n            this.opts.container = vnode.dom;\r\n        },\r\n\r\n        /**\r\n         * Update the opts in case the component name is changed.\r\n         * @param {Object} vnode - Mithril virtual node\r\n         * @param vnode\r\n         */\r\n        onupdate: function(vnode) {\r\n            if (vnode.attrs) {\r\n                this.opts.name = vnode.attrs.name;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check special keys and respond accordingly.\r\n         * @param {Event} e - Keypress event.\r\n         */\r\n        onKeyDown: function(e) {\r\n            if (this.opts.disabled) {\r\n                return;\r\n            }\r\n\r\n            if (this.opts.active) {\r\n                if (e.keyCode === _keys.ESC) {\r\n                    this.close();\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                } else if (e.keyCode === _keys.DOWN || e.keyCode === _keys.LEFT) {\r\n                    this.selectIndex(Math.min(this.opts.selectedIndex + 1, this.opts.colors.length - 1));\r\n                } else if (e.keyCode === _keys.UP || e.keyCode === _keys.RIGHT) {\r\n                    this.selectIndex(Math.max(this.opts.selectedIndex - 1, 0));\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select an item from the list by index.\r\n         * @param {Event} e - Event that triggered this\r\n         * @param {Number} index - Index of the color being selected\r\n         */\r\n        selectColor: function(e, index) {\r\n            var target = e && e.target ? e.target : e;\r\n            if (target) {\r\n                this.opts.value = target.getAttribute('data-value') || target.parentNode.getAttribute('data-value');\r\n                target.scrollIntoView();\r\n\r\n                if (this.opts.onSelect) {\r\n                    this.opts.onSelect(this.opts.value);\r\n                }\r\n            }\r\n            if (index) {\r\n                this.opts.selectedIndex = index;\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * Select an item from the list by index.\r\n         * @param {number} index - Filtered list item index.\r\n         */\r\n        selectIndex: function(index) {\r\n            var swatches = $.getAll('.swatch', this.opts.container);\r\n            if (swatches && swatches[index]) {\r\n                this.opts.selectedIndex = index;\r\n                swatches[index].focus();\r\n                if ($.hasClass(swatches[index], 'swatch-selectable')) {\r\n                    this.selectColor(swatches[index], index);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set value and close the picker.\r\n         */\r\n        close: function() {\r\n            this.opts.active = false;\r\n            var trigger = $.get('.colorpicker-trigger', this.opts.container);\r\n            if (trigger) {\r\n                trigger.focus();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Show the swatch list.\r\n         */\r\n        showEditor: function() {\r\n            if (this.opts.disabled) {\r\n                return;\r\n            }\r\n            this.opts.active = !this.opts.active;\r\n        },\r\n\r\n        /**\r\n         * Create HTML to display component.\r\n         * @returns {Object} Mithril vnode\r\n         */\r\n        view: function() {\r\n            var self = this;\r\n            return m('.mithril-colorpicker', {\r\n                class: this.opts.active ? 'active' : '', onkeydown: this.onKeyDown.bind(this)\r\n            }, m('button.btn.btn-secondary.colorpicker-trigger', {\r\n                type: 'button', role: 'button', disabled: this.opts.disabled,\r\n                onclick: this.showEditor.bind(this),\r\n                style: 'background-color: ' + this.opts.value\r\n                }, [m.trust('&nbsp;'), m('i.dash.colorpicker-indicator', { class: this.opts.active ? 'dash-sort-up' : 'dash-sort-down' }) ]),\r\n            this.opts.active && m('.editor', [\r\n                m('.swatches',\r\n                    m('button.btn.btn-secondary.swatch', {\r\n                        type: 'button', role: 'button', onclick: this.close.bind(this)\r\n                    }, m('i.dash.dash-cancel')),\r\n                    this.opts.colors.map(function(x) {\r\n                        return m('button.btn.btn-secondary.swatch.swatch-selectable', {\r\n                            class: self.opts.value === x ? 'active' : '',\r\n                            type: 'button', role: 'button', 'data-value': x,\r\n                            style: 'background-color: ' + x + '; color: ' + x, onclick: self.selectColor.bind(self)\r\n                        }, m('i.dash.dash-cancel'));\r\n                    })\r\n                )\r\n            ]),\r\n            m('input', { type: 'hidden', name: this.opts.name, value: this.opts.value }));\r\n        }\r\n    };\r\n\r\n    return ColorPicker;\r\n});","/*!\r\n * Mithril based table component. Supports ajax data, searching, sorting, paging, & resizing columns.\r\n */\r\n(function(root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Table = factory(root.m, root.$);\r\n})(this, function(m, $) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare Table class.\r\n     * @param {Object} opts - Table settings\r\n     */\r\n    function Table(opts) {\r\n        opts = opts || {};\r\n\r\n        var data = null;\r\n        if (opts.data) {\r\n            data = opts.data;\r\n            delete opts.data;\r\n        }\r\n\r\n        this.opts = $.extend({\r\n            content: null,\r\n            id: null,\r\n            columns: [],\r\n            url: '',\r\n            requestMethod: 'GET',\r\n            searchable: true,\r\n            loadAllData: true,\r\n            inputTimeout: 200,\r\n            columnMinWidth: 50,\r\n            width: 100,\r\n            editable: true,\r\n            pageDropdown: true,\r\n            headerButtons: null,\r\n            storageFunction: null,\r\n            itemsPerPage: null,\r\n            searchQuery: null,\r\n            currentStartItem: null,\r\n            sorting: null,\r\n            dataCallback: null,\r\n            errorCallback: null,\r\n            dataDateFormat: 'YYYY-MM-DD HH:mm:ss',\r\n            displayDateFormat: 'YYYY-MM-DD HH:mm',\r\n            displayCurrencyFormat: '{s:$} {[t:,][d:.][p:2]}',\r\n            resources: {\r\n                firstPage: $.resx('firstPage'),\r\n                previousPage: $.resx('previousPage'),\r\n                nextPage: $.resx('nextPage'),\r\n                lastPage: $.resx('lastPage'),\r\n                noData: $.resx('noData'),\r\n                showing: $.resx('showing'),\r\n                page: $.resx('page') || 'Page',\r\n                perPage: $.resx('perPage'),\r\n                loadingError: $.resx('loadingError'),\r\n                tryAgain: $.resx('tryAgain')\r\n            }\r\n        }, opts);\r\n\r\n        this.content = $.get(this.opts.content);\r\n        this.layoutSet = false;\r\n        this.data = null;\r\n        this.loading = true;\r\n        this.loadingError = false;\r\n        this.filteredTotal = 0;\r\n        this.results = [];\r\n        this.pageTotal = 0;\r\n        this.totalDistance = 0;\r\n        this.lastSeenAt = { x: null, y: null };\r\n        this.columnRenderer = {};\r\n        this.colGroups = [];\r\n        this.events = {};\r\n        this.intColumns = [];\r\n        this.dateColumns = [];\r\n        this.currencyColumns = [];\r\n\r\n        var self = this;\r\n        for (var i = 0; i < this.opts.columns.length; i++) {\r\n            var column = this.opts.columns[i];\r\n            column.width = $.hasPositiveValue(column.width) ? column.width : this.store(column.field + '.width');\r\n\r\n            var columnFunction = $.isNull(column.links) || column.links.length === 0 ?\r\n                function(obj, column) { return self.getDisplayValue(obj[column.field], column.dataType.toLowerCase()); } :\r\n                function(obj, column) {\r\n                    return column.links.filter(function(link) {\r\n                        return !$.isNull(link);\r\n                    }).map(function(link) {\r\n                        var label = $.coalesce(link.label, self.getDisplayValue(obj[column.field], column.dataType.toLowerCase()));\r\n                        var attr = $.clone(link.attributes) || {};\r\n                        var href = link.href || null;\r\n                        if (href) {\r\n                            for (var prop in obj) {\r\n                                if (href.indexOf('{' + prop + '}') > -1 && obj.hasOwnProperty(prop)) {\r\n                                    href = href.replace(new RegExp('{' + prop + '}', 'g'), obj[prop]);\r\n                                }\r\n                            }\r\n                        }\r\n                        var classes = attr['class'].split(' ');\r\n                        if (classes.indexOf('btn') === -1) {\r\n                            classes.push('btn');\r\n                            classes.push('btn-link');\r\n                        }\r\n                        if (classes.indexOf('dash-ajax') === -1) {\r\n                            classes.push('dash-ajax');\r\n                        }\r\n                        attr['class'] = classes.filter(function(x) { return x && x.length; }).join(' ');\r\n                        attr['data-method'] = link.method ? link.method.toUpperCase() : 'GET';\r\n                        attr['data-href'] = href;\r\n                        attr['title'] = label;\r\n                        attr['type'] = attr['role'] = 'button';\r\n                        return m('button', attr, $.isNull(link.icon) ? label : m('i', { class: 'dash dash-' + link.icon.toLowerCase() }));\r\n                    });\r\n                };\r\n\r\n            this.columnRenderer[column.field] = columnFunction;\r\n            this.colGroups.push(m('col'));\r\n\r\n            var type = column.dataType.toLowerCase();\r\n            if (type === 'int') {\r\n                this.intColumns.push(column.field);\r\n            } else if (type === 'date') {\r\n                this.dateColumns.push(column.field);\r\n            } else if (type === 'currency') {\r\n                this.currencyColumns.push(column.field);\r\n            }\r\n        }\r\n\r\n        this.itemsPerPage = this.store('itemsPerPage') * 1 || 10;\r\n        this.currentStartItem = this.store('currentStartItem') * 1 || 0;\r\n        this.searchQuery = this.store('searchQuery') || '';\r\n        this.width = this.store('width') * 1 || 100;\r\n        var sorting = this.store('sorting');\r\n        this.sorting = (typeof sorting === 'string' ? JSON.parse(sorting) : sorting) || [];\r\n\r\n        if (data) {\r\n            this.processData({ rows: data });\r\n        }\r\n\r\n        this.run();\r\n    }\r\n\r\n    Table.prototype = {\r\n        pageOptions: [m('option', { value: '10' }, '10'), m('option', { value: '20' }, '20'), m('option', { value: '50' }, '50'), m('option', { value: '100' }, '100')],\r\n\r\n        /**\r\n         * Get/set persistent values.\r\n         * @param {string} key - Key name of the value to get/set.\r\n         * @param {*} value - Value to set.\r\n         * @returns {string|undefined} Value if getting, else undefined.\r\n         */\r\n        store: function(key, value) {\r\n            var myKey = this.opts.id + '.' + key;\r\n            // getter\r\n            if ($.isUndefined(value)) {\r\n                return $.isNull(this.opts.storageFunction) ? localStorage[myKey] : $.coalesce(this.opts[key], null);\r\n            }\r\n\r\n            // setter\r\n            if ($.isNull(this.opts.storageFunction)) {\r\n                localStorage[myKey] = value;\r\n            } else {\r\n                // ignore the param actually passed and use the values from the object\r\n                // passing the whole object lets the storage function decide when to actually save using a debounce\r\n                if ($.isFunction(this.opts.storageFunction)) {\r\n                    this.opts.storageFunction({\r\n                        itemsPerPage: this.itemsPerPage,\r\n                        currentStartItem: this.currentStartItem,\r\n                        searchQuery: this.searchQuery,\r\n                        width: this.width,\r\n                        sorting: this.sorting,\r\n                        columnWidths: this.opts.columns.map(function(c) { return { field: c.field, width: c.width * 1.0 }; })\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Process the data array result from the ajax request.\r\n         * @param {Object[]} data - Array of records to display.\r\n         */\r\n        processData: function(data) {\r\n            if (this.opts.dataCallback) {\r\n                this.opts.dataCallback(data);\r\n            }\r\n\r\n            var i = 0, len = data.rows.length, j = 0;\r\n            for (; i < len; i++) {\r\n                // add an index to the data so we can reset to the default sort order later if the user wants\r\n                data.rows[i]._index = i;\r\n\r\n                var x;\r\n                // convert input to appropriate types\r\n                for (j = 0; j < this.intColumns.length; j++) {\r\n                    x = this.intColumns[j];\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : data.rows[i][x] * 1;\r\n                }\r\n                for (j = 0; j < this.dateColumns.length; j++) {\r\n                    x = this.dateColumns[j];\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : $.fecha.parse(data.rows[i][x], this.opts.dataDateFormat);\r\n                }\r\n                for (j = 0; j < this.currencyColumns.length; j++) {\r\n                    x = this.currencyColumns[j];\r\n                    data.rows[i][x] = $.isNull(data.rows[i][x]) ? null : $.accounting.unformat(data.rows[i][x]);\r\n                }\r\n            }\r\n            this.data = data.rows;\r\n            this.filteredTotal = data.filteredTotal;\r\n\r\n            this.loading = false;\r\n            this.sort(false);\r\n            this.filterResults();\r\n        },\r\n\r\n        /**\r\n         * Load the data to populate the table.\r\n         */\r\n        loadData: function() {\r\n            this.loading = true;\r\n            this.loadingError = false;\r\n\r\n            var self = this;\r\n            $.ajax({\r\n                method: this.opts.requestMethod,\r\n                url: this.opts.url,\r\n                data: this.buildParams(),\r\n                block: false\r\n            }, this.processData.bind(this), function(data) {\r\n                self.loading = false;\r\n                self.loadingError = true;\r\n                if (self.opts.errorCallback) {\r\n                    self.opts.errorCallback(data);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Force the table to refresh its data.\r\n         */\r\n        refresh: function() {\r\n            this.loading = true;\r\n            this.loadingError = false;\r\n            this.loadData();\r\n        },\r\n\r\n        /**\r\n         * Build querystring params to fetch data from the server.\r\n         * @returns {Object} Request parameters.\r\n         */\r\n        buildParams: function() {\r\n            return {\r\n                startItem: this.currentStartItem,\r\n                items: this.itemsPerPage,\r\n                query: this.searchQuery,\r\n                sort: this.sorting.length > 0 ? this.sorting.map(function(obj, i) { return { field: obj.field, dir: obj.dir, index: i }; }) : null,\r\n                t: Math.random()\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Set the first item index to display.\r\n         * @param {type} index - Record index to start on.\r\n         */\r\n        setCurrentStartItem: function(index) {\r\n            this.currentStartItem = index;\r\n            this.store('currentStartItem', index);\r\n            this.filterResults(true);\r\n        },\r\n\r\n        /**\r\n         * Set the number of items to display per page.\r\n         * @param {number|Event} e - Number or items per page, or an event that triggered the change.\r\n         */\r\n        setItemsPerPage: function(e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var items = (isNaN(e) ? e.target.value : e) * 1;\r\n            if (this.itemsPerPage !== items) {\r\n                this.itemsPerPage = items;\r\n                this.store('itemsPerPage', items);\r\n                this.setCurrentStartItem(0);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Set the search query for filtering table data.\r\n         * @param {string} val - New search text.\r\n         */\r\n        setSearchQuery: function(val) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var query = val.target ? val.target.value : val;\r\n            if (this.searchQuery !== query) {\r\n                this.searchQuery = query;\r\n                clearTimeout(this.requestTimer);\r\n                this.requestTimer = setTimeout(this.runSearch.bind(this, query), this.opts.inputTimeout);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change search query and filter results.\r\n         * @param {string} query - New search text.\r\n         */\r\n        runSearch: function(query) {\r\n            this.store('searchQuery', query);\r\n            this.requestTimer = null;\r\n            this.currentStartItem = 0;\r\n            this.filterResults(true);\r\n            m.redraw();\r\n        },\r\n\r\n        /**\r\n         * Filter the data based on the search query, current page, and items per page.\r\n         * @param {bool} refresh - Force it to refresh its data.\r\n         */\r\n        filterResults: function(refresh) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            if (refresh && !this.opts.loadAllData) {\r\n                // force the data to reload. filterResults will get called again after the data loads\r\n                this.loadData();\r\n            } else if (!this.opts.loadAllData) {\r\n                // we're not loading all the data to begin with. so whatever data we have should be displayed.\r\n                this.results = this.data;\r\n                this.pageTotal = Math.ceil(this.filteredTotal / this.itemsPerPage);\r\n            } else {\r\n                // we're loading all the data to begin with. so figure out what data to display.\r\n                var filteredTotal = 0;\r\n                if (this.data.constructor !== Array) {\r\n                    this.loading = true;\r\n                    this.results = [];\r\n                } else {\r\n                    var startItem = this.currentStartItem;\r\n                    var res = this.searchQuery ? this.data.filter(this.filterArray.bind(this.searchQuery.toLowerCase())) : this.data;\r\n                    filteredTotal = res.length;\r\n                    this.results = res.slice(startItem, startItem + this.itemsPerPage);\r\n                }\r\n\r\n                this.filteredTotal = filteredTotal;\r\n                this.pageTotal = Math.ceil(filteredTotal / this.itemsPerPage);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Page forward or backward.\r\n         * @param {number} d - Direction to move, 1 is forward, -1 is backward.\r\n         * @param {number} m - Move to end (first or last page) if true.\r\n         */\r\n        moveToPage: function(d, m) {\r\n            this.changePage(d === 1 ? m ? this.pageTotal : this.currentStartItem / this.itemsPerPage + 2 : m ? 1 : this.currentStartItem / this.itemsPerPage);\r\n        },\r\n\r\n        /**\r\n         * Move to the specified page number.\r\n         * @param {number|Event} e - New page number, or an event that triggered the change.\r\n         */\r\n        changePage: function(e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var page = (isNaN(e) ? e.target.value : e) * 1;\r\n            if (page <= this.pageTotal && page > 0) {\r\n                this.setCurrentStartItem((page - 1) * this.itemsPerPage);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Change the sorting order.\r\n         * @param {string} fieldName - Name of the field to sort on.\r\n         * @param {string} dataType - Data type of the field.\r\n         * @param {Event} e - Event that triggered the change.\r\n         */\r\n        changeSort: function(fieldName, dataType, e) {\r\n            if (this.loading) {\r\n                return;\r\n            }\r\n\r\n            var val = $.findByKey(this.sorting, 'field', fieldName);\r\n            if (e.shiftKey) {\r\n                document.getSelection().removeAllRanges();\r\n            } else {\r\n                this.sorting = [];\r\n            }\r\n\r\n            if (val === null) {\r\n                this.sorting.push({ field: fieldName, dir: 'ASC', dataType: dataType || 'string' });\r\n            } else if (e.shiftKey) {\r\n                if (val.dir === 'DESC') {\r\n                    this.sorting.splice(val._i, 1);\r\n                } else {\r\n                    val.dir = 'DESC';\r\n                    this.sorting[val._i] = val;\r\n                }\r\n            } else {\r\n                val.dir = val.dir === 'ASC' ? 'DESC' : 'ASC';\r\n                this.sorting.push(val);\r\n            }\r\n\r\n            this.sort();\r\n            this.setCurrentStartItem(0);\r\n        },\r\n\r\n        /**\r\n         * Sort the underlying data.\r\n         * @param {bool} refresh - Refresh the data from the server.\r\n         */\r\n        sort: function(refresh) {\r\n            refresh = $.coalesce(refresh, true);\r\n            this.data.sort(this.sorting.length > 0 ? this.compare.bind(this) : this.defaultCompare);\r\n            this.filterResults(refresh);\r\n            this.store('sorting', JSON.stringify(this.sorting));\r\n        },\r\n\r\n        /**\r\n         * Set up the table and column styles and events.\r\n         */\r\n        setLayout: function() {\r\n            if (this.layoutSet) {\r\n                return;\r\n            }\r\n\r\n            this.layoutSet = true;\r\n            this.content = $.get(this.opts.content);\r\n            this.table = $.get('.table-data-table', this.content);\r\n            this.table.style.tableLayout = 'fixed';\r\n            this.tableHeaderRow = this.table.tHead.rows[0];\r\n\r\n            if (this.table !== null) {\r\n                this.clientWidth = this.content.clientWidth;\r\n                this.table.tHead.style.width = this.table.style.width = (this.width / 100 * this.table.offsetWidth) + 'px';\r\n\r\n                var hWidth = this.table.tHead.offsetWidth;\r\n                var tWidth = this.table.offsetWidth;\r\n                var i = 0;\r\n                var cells = this.tableHeaderRow.cells;\r\n                this.opts.columns.forEach(function(x) {\r\n                    if (!x.width) {\r\n                        x.width = cells[i].offsetWidth / hWidth * 100;\r\n                    }\r\n                    cells[i].style.width = x.width / 100 * tWidth + 'px';\r\n                    ++i;\r\n                });\r\n\r\n                if (this.opts.editable) {\r\n                    this.events = {\r\n                        resize: $.debounce(this.onResize.bind(this), 50),\r\n                        move: this.onMouseMove.bind(this),\r\n                        up: this.onMouseUp.bind(this),\r\n                        touch: this.touchHandler.bind(this)\r\n                    };\r\n                    $.on(window, 'resize', this.events.resize);\r\n                    $.on(window, 'mousemove', this.events.move);\r\n                    $.on(window, 'mouseup', this.events.up);\r\n\r\n                    var header = $.get('thead', this.table);\r\n                    if (header) {\r\n                        $.on(header, 'touchstart', this.events.touch);\r\n                        $.on(header, 'touchmove', this.events.touch);\r\n                        $.on(header, 'touchend', this.events.touch);\r\n                        $.on(header, 'touchcancel', this.events.touch);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Clean up our mess.\r\n         */\r\n        destroy: function() {\r\n            if (this.opts.editable) {\r\n                $.off(window, 'resize', this.events.resize);\r\n                $.off(window, 'mousemove', this.events.move);\r\n                $.off(window, 'mouseup', this.events.up);\r\n\r\n                var header = $.get('thead', this.table);\r\n                if (header) {\r\n                    $.off(header, 'touchstart', this.events.touch);\r\n                    $.off(header, 'touchmove', this.events.touch);\r\n                    $.off(header, 'touchend', this.events.touch);\r\n                    $.off(header, 'touchcancel', this.events.touch);\r\n                }\r\n            }\r\n            m.mount(this.content, null);\r\n        },\r\n\r\n        /**\r\n         * Update the table and column widths based on a window resize.\r\n         */\r\n        onResize: function() {\r\n            var cWidth = this.content.clientWidth;\r\n            if (cWidth === 0) {\r\n                return;\r\n            }\r\n            var scale = cWidth / this.clientWidth;\r\n            this.clientWidth = cWidth;\r\n            this.table.tHead.style.width = this.table.style.width = (this.pixelToFloat(this.table.style.width) * scale) + 'px';\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                this.tableHeaderRow.cells[i].style.width = (this.pixelToFloat(this.tableHeaderRow.cells[i].style.width) * scale) + 'px';\r\n            }\r\n            this.updateLayout();\r\n        },\r\n\r\n        /**\r\n         * Update the table header style.\r\n         */\r\n        updateLayout: function() {\r\n            if (!$.isVisible(this.table)) {\r\n                return;\r\n            }\r\n            $.get('.table-scrollable', this.content).style.paddingTop = this.table.tHead.offsetHeight + 'px';\r\n            var colGroup = $.get('.table-column-group', this.content);\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                colGroup.children[i].style.width = this.tableHeaderRow.cells[i].style.width;\r\n            }\r\n            if (this.clientWidth > 0 && this.content.clientWidth / this.clientWidth !== 1) {\r\n                this.onResize();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Make the table header scroll horizontally with the table\r\n         * @param {Event} e - Event that triggered the scroll.\r\n         */\r\n        onScroll: function(e) {\r\n            var head = this.table.tHead;\r\n            var scroll = e.target;\r\n            if (-head.offsetLeft !== scroll.scrollLeft) {\r\n                head.style.left = '-' + scroll.scrollLeft + 'px';\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handle dragging to change column widths.\r\n         * @param {type} e - Event that triggered the change.\r\n         */\r\n        onHeaderMouseDown: function(e) {\r\n            if (e.button !== 0) {\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            var callbackFunc = function(cellEl) {\r\n                e.stopImmediatePropagation();\r\n                e.preventDefault();\r\n\r\n                self.resizeContext = {\r\n                    colIndex: cellEl.cellIndex,\r\n                    initX: e.clientX,\r\n                    scrWidth: $.get('.table-scrollable', self.content).offsetWidth,\r\n                    initTblWidth: self.table.offsetWidth,\r\n                    initColWidth: self.pixelToFloat($.get('.table-column-group', self.content).children[cellEl.cellIndex].style.width),\r\n                    layoutTimer: null\r\n                };\r\n            };\r\n            self.inResizeArea(e, callbackFunc);\r\n        },\r\n\r\n        /**\r\n         * Handle resizing columns.\r\n         * @param {Event} e - Event that triggered the change.\r\n         */\r\n        onMouseMove: function(e) {\r\n            var newStyle = '';\r\n            var cursorFunc = function() {\r\n                newStyle = 'col-resize';\r\n            };\r\n            this.inResizeArea(e, cursorFunc);\r\n            if (this.table.tHead.style.cursor !== newStyle) {\r\n                this.table.tHead.style.cursor = newStyle;\r\n            }\r\n\r\n            var ctx = this.resizeContext;\r\n            if ($.isNull(ctx)) {\r\n                return;\r\n            }\r\n\r\n            e.stopImmediatePropagation();\r\n            e.preventDefault();\r\n\r\n            var newColWidth = Math.max(ctx.initColWidth + e.clientX - ctx.initX, this.opts.columnMinWidth);\r\n            this.table.tHead.style.width = this.table.style.width = (ctx.initTblWidth + (newColWidth - ctx.initColWidth)) + 'px';\r\n            $.get('.table-column-group', this.content).children[ctx.colIndex].style.width = this.tableHeaderRow.cells[ctx.colIndex].style.width = newColWidth + 'px';\r\n\r\n            if (ctx.layoutTimer === null) {\r\n                var self = this;\r\n                var timerFunc = function() {\r\n                    self.resizeContext.layoutTimer = null;\r\n                    self.updateLayout();\r\n                };\r\n                ctx.layoutTimer = setTimeout(timerFunc, 25);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update column widths and save them.\r\n         */\r\n        onMouseUp: function() {\r\n            var ctx = this.resizeContext;\r\n            if ($.isNull(ctx)) {\r\n                return;\r\n            }\r\n\r\n            if (ctx.layoutTimer !== null) {\r\n                clearTimeout(ctx.layoutTimer);\r\n            }\r\n            this.resizeContext = null;\r\n\r\n            var newTblWidth = this.table.offsetWidth;\r\n            this.width = (newTblWidth / ctx.scrWidth * 100).toFixed(2);\r\n            this.store('width', this.width);\r\n            for (var i = 0; i < this.opts.columns.length; i++) {\r\n                this.opts.columns[i].width = (this.pixelToFloat(this.tableHeaderRow.cells[i].style.width) / newTblWidth * 100).toFixed(2);\r\n                this.store(this.opts.columns[i].field + '.width', this.opts.columns[i].width);\r\n            }\r\n\r\n            this.updateLayout();\r\n        },\r\n\r\n        /**\r\n         * Check if the cursor is in the area where the user can click to drag a column.\r\n         * @param {Event} e - Event that triggered the check.\r\n         * @param {Function} callback - Function to run if in the resize area.\r\n         */\r\n        inResizeArea: function(e, callback) {\r\n            var tblX = e.clientX;\r\n            var el;\r\n            for (el = this.table.tHead; el !== null; el = el.offsetParent) {\r\n                tblX -= el.offsetLeft + el.clientLeft - el.scrollLeft;\r\n            }\r\n\r\n            var cellEl = e.target;\r\n            while (cellEl !== this.table.tHead && cellEl !== null) {\r\n                if (cellEl.nodeName === 'TH') {\r\n                    break;\r\n                }\r\n                cellEl = cellEl.parentNode;\r\n            }\r\n\r\n            if (cellEl === this.table.tHead) {\r\n                for (var i = this.tableHeaderRow.cells.length - 1; i >= 0; i--) {\r\n                    cellEl = this.tableHeaderRow.cells[i];\r\n                    if (cellEl.offsetLeft <= tblX) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (cellEl !== null) {\r\n                var x = tblX;\r\n                for (el = cellEl; el !== this.table.tHead; el = el.offsetParent) {\r\n                    if (el === null) {\r\n                        break;\r\n                    }\r\n                    x -= el.offsetLeft - el.scrollLeft + el.clientLeft;\r\n                }\r\n                if (x < 10 && cellEl.cellIndex !== 0) {\r\n                    callback.call(this, cellEl.previousElementSibling);\r\n                } else if (x > cellEl.clientWidth - 10) {\r\n                    callback.call(this, cellEl);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Make column resizing play nice with touch. http://stackoverflow.com/questions/28218888/touch-event-handler-overrides-click-handlers\r\n         * @param {Event} e Event that triggered the handler.\r\n         */\r\n        touchHandler: function(e) {\r\n            var mouseEvent = null;\r\n            var simulatedEvent = document.createEvent('MouseEvent');\r\n            var touch = e.changedTouches[0];\r\n\r\n            switch (e.type) {\r\n                case 'touchstart':\r\n                    mouseEvent = 'mousedown';\r\n                    this.totalDistance = 0;\r\n                    this.lastSeenAt.x = touch.clientX;\r\n                    this.lastSeenAt.y = touch.clientY;\r\n                    break;\r\n                case 'touchmove':\r\n                    mouseEvent = 'mousemove';\r\n                    break;\r\n                case 'touchend':\r\n                    if (this.lastSeenAt.x) {\r\n                        this.totalDistance += Math.sqrt(Math.pow(this.lastSeenAt.y - touch.clientY, 2) + Math.pow(this.lastSeenAt.x - touch.clientX, 2));\r\n                    }\r\n                    mouseEvent = this.totalDistance > 5 ? 'mouseup' : 'click';\r\n                    this.lastSeenAt = { x: null, y: null };\r\n                    break;\r\n            }\r\n\r\n            simulatedEvent.initMouseEvent(mouseEvent, true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);\r\n            touch.target.dispatchEvent(simulatedEvent);\r\n            e.preventDefault();\r\n        },\r\n\r\n        /**\r\n         * Get the value for the field coverted to the correct data type.\r\n         * @param {string} value - Value to convert.\r\n         * @returns {*} Converted value.\r\n         */\r\n        getFieldValue: function(value) {\r\n            if ($.isNull(value)) {\r\n                return null;\r\n            }\r\n            return value.getMonth ? value : value.toLowerCase ? value.toLowerCase() : value;\r\n        },\r\n\r\n        /**\r\n         * Get the formatted value to display for the field.\r\n         * @param {string} value - Value to format.\r\n         * @param {string} dataType - Data type to format to.\r\n         * @returns {*} Converted value.\r\n         */\r\n        getDisplayValue: function(value, dataType) {\r\n            if (!dataType || $.isNull(value)) {\r\n                return value;\r\n            }\r\n\r\n            var val = value;\r\n            if (dataType === 'currency') {\r\n                val = $.accounting.formatMoney(val, this.opts.displayCurrencyFormat);\r\n            } else if (dataType === 'date') {\r\n                val = $.fecha.format(val, this.opts.displayDateFormat);\r\n            }\r\n            return val;\r\n        },\r\n\r\n        /**\r\n         * Default sorting function for the data - resets to order when data was loaded.\r\n         * @param {Object} a - First object to compare.\r\n         * @param {Object} b - Object to compare to.\r\n         * @returns {number} 1 if a comes first, -1 if b comes first, else 0.\r\n         */\r\n        defaultCompare: function(a, b) {\r\n            return a._index > b._index ? 1 : a._index < b._index ? -1 : 0;\r\n        },\r\n\r\n        /**\r\n         * Multi-sorting function for the data.\r\n         * @param {Object} a - First object to compare.\r\n         * @param {Object} b - Object to compare to.\r\n         * @returns {number} 1 if a comes first, -1 if b comes first, else 0.\r\n         */\r\n        compare: function(a, b) {\r\n            var sorting = this.sorting;\r\n            var i = 0, len = sorting.length;\r\n            for (; i < len; i++) {\r\n                var sort = sorting[i];\r\n                var aa = this.getFieldValue(a[sort.field]);\r\n                var bb = this.getFieldValue(b[sort.field]);\r\n\r\n                if (aa === null) {\r\n                    return 1;\r\n                }\r\n                if (bb === null) {\r\n                    return -1;\r\n                }\r\n                if (aa < bb) {\r\n                    return sort.dir === 'ASC' ? -1 : 1;\r\n                }\r\n                if (aa > bb) {\r\n                    return sort.dir === 'ASC' ? 1 : -1;\r\n                }\r\n            }\r\n            return 0;\r\n        },\r\n\r\n        /**\r\n         * Filter an array of objects to find objects where value contains the value of `this`\r\n         * @param {Object} obj - Object to search in.\r\n         * @returns {bool} True if object contains `this`.\r\n         */\r\n        filterArray: function(obj) {\r\n            for (var key in obj) {\r\n                if (key.indexOf('_') < 0 && obj.hasOwnProperty(key) && (obj[key] + '').toLowerCase().indexOf(this) > -1) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Convert a style with 'px' to a float.\r\n         * @param {string} val - CSS style to convert.\r\n         * @returns {number} Numeric value.\r\n         */\r\n        pixelToFloat: function(val) {\r\n            return val.replace('px', '').replace('%', '') * 1.0;\r\n        },\r\n\r\n        /**\r\n         * Build the table header tags.\r\n         * @param {Object} obj - Column to build the tag for.\r\n         * @returns {Object} Mithril TH node.\r\n         */\r\n        tableHeaders: function(obj) {\r\n            var field = obj.field;\r\n            var thAttrs = { class: obj.classes || '' }, divAttrs = {};\r\n\r\n            var divContent = [obj.label || field];\r\n            if ($.isUndefined(obj.sortable) || obj.sortable === true) {\r\n                var val = $.findByKey(this.sorting, 'field', field);\r\n                divContent.push(m('i.float-right.dash', { class: val ? (val.dir === 'ASC' ? 'dash-sort-up' : 'dash-sort-down') : this.opts.editable ? 'dash-sort' : '' }));\r\n                if (this.opts.editable) {\r\n                    divAttrs = { onclick: this.changeSort.bind(this, field, obj.dataType.toLowerCase()) };\r\n                }\r\n            } else {\r\n                thAttrs.class += ' disabled';\r\n            }\r\n            if (this.opts.editable) {\r\n                thAttrs.onmousedown = this.onHeaderMouseDown.bind(this);\r\n            }\r\n            return m('th', thAttrs, [m('div', divAttrs, divContent)]);\r\n        },\r\n\r\n        /**\r\n         * Build the view that actually shows the table.\r\n         * @returns {Object}  Mithril DIV node.\r\n         */\r\n        view: function() {\r\n            return m('.container-fluid', [\r\n                !this.opts.editable ? m('span#table-items-per-page') :\r\n                    m('.form-inline.pb-2', [\r\n                        m('.col-4',\r\n                            this.opts.searchable ? m('.input-group', [\r\n                                m('span.input-group-prepend', m('i.dash.dash-search.input-group-text')),\r\n                                m('input.form-control', { type: 'text', oninput: this.setSearchQuery.bind(this), value: this.searchQuery, disabled: this.loading })\r\n                            ]) : null\r\n                        ),\r\n                        m('.col-4', this.opts.headerButtons ? m('.float-right', this.opts.headerButtons) : null),\r\n                        m('.col-4',\r\n                            m('.input-group', [\r\n                                m('span.input-group-prepend', m('span.input-group-text', this.opts.resources.perPage)),\r\n                                m('select.form-control.custom-select', {\r\n                                    id: 'table-items-per-page', onchange: this.setItemsPerPage.bind(this),\r\n                                    value: this.itemsPerPage, disabled: this.loading\r\n                                }, this.pageOptions)\r\n                            ])\r\n                        )\r\n                    ]),\r\n                m('.table-scrollable', { class: this.opts.editable ? '' : ' table-no-edit' }, [\r\n                    m('.table-area', { onscroll: this.onScroll.bind(this) }, [\r\n                        m('table.table.table-hover.table-sm.table-striped.table-data-table', [\r\n                            m('colgroup.table-column-group', this.colGroups),\r\n                            m('thead', [m('tr', this.opts.columns.map(this.tableHeaders.bind(this)))]),\r\n                            m('tbody', this.tableBodyView())\r\n                        ])\r\n                    ])\r\n                ]),\r\n                this.tableFooterView()\r\n            ]);\r\n        },\r\n\r\n        /**\r\n         * Build a single table cell.\r\n         * @param {Object} obj - Table record to build cell for.\r\n         * @param {number} index - Row index of this row.\r\n         * @param {Object} column - Column to build cell for.\r\n         * @returns {Object} Mithril TD node.\r\n         */\r\n        tableCellView: function(obj, index, column) {\r\n            return m('td', this.columnRenderer[column.field](obj, column, index));\r\n        },\r\n\r\n        /**\r\n         * Build a table row.\r\n         * @param {Object} obj - Table record to build row for.\r\n         * @param {number} index - Row index of this row.\r\n         * @returns {Object} Mithril TR node.\r\n         */\r\n        tableRowView: function(obj, index) {\r\n            return m('tr', { key: obj._index }, this.opts.columns.map(this.tableCellView.bind(this, obj, index)));\r\n        },\r\n\r\n        /**\r\n         * Build the table footer nodes\r\n         * @returns {Object} Mithril TR node(s).\r\n         */\r\n        tableBodyView: function() {\r\n            if (this.loading) {\r\n                return m('tr', m('td', { colspan: this.opts.columns.length }, m('.table-spinner', [\r\n                    m('.rect1', ''), m('.rect2', ''), m('.rect3', ''), m('.rect4', ''), m('.rect5', '')\r\n                ])));\r\n            }\r\n            if (this.loadingError) {\r\n                return m('tr.table-loading-error', m('td', { colspan: this.opts.columns.length }, [\r\n                    m('.table-loading-error-message', this.opts.resources.loadingError),\r\n                    m('.btn.btn-info', { onclick: this.refresh.bind(this) }, this.opts.resources.tryAgain)\r\n                ]));\r\n            }\r\n            if (this.filteredTotal === 0) {\r\n                return m('tr', [m('td', { colspan: this.opts.columns.length }, this.opts.resources.noData)]);\r\n            }\r\n            return this.results.map(this.tableRowView.bind(this));\r\n        },\r\n\r\n        /**\r\n         * Build the table footer nodes.\r\n         * @returns {Object} Mithril DIV node.\r\n         */\r\n        tableFooterView: function() {\r\n            if (this.loading || this.loadingError) {\r\n                return null;\r\n            }\r\n\r\n            var currentPage = (this.currentStartItem + this.itemsPerPage) / this.itemsPerPage;\r\n            if (this.opts.pageDropdown) {\r\n                // limit page dropdown to 10000 options\r\n                var max = Math.min(this.pageTotal, 10000);\r\n                var optionList = [max], i = max;\r\n                while (i > 0) {\r\n                    optionList[i] = m('option', { value: i }, i);\r\n                    --i;\r\n                }\r\n            }\r\n\r\n            var res = this.opts.resources;\r\n            return m('.row.p-2', [\r\n                m('.col.btn-toolbar', { class: this.filteredTotal > this.itemsPerPage ? '' : ' invisible' }, [\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.firstPage, onclick: this.moveToPage.bind(this, -1, true)\r\n                    }, m('i.dash.dash-to-start-alt')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.previousPage, onclick: this.moveToPage.bind(this, -1, false)\r\n                    }, m('i.dash.dash-to-start')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.nextPage, onclick: this.moveToPage.bind(this, 1, false)\r\n                    }, m('i.dash.dash-to-end')),\r\n                    m('button.btn.btn-secondary', {\r\n                        type: 'button', role: 'button', title: res.lastPage, onclick: this.moveToPage.bind(this, 1, true)\r\n                    }, m('i.dash.dash-to-end-alt'))\r\n                ]),\r\n                m('.col', { class: this.filteredTotal > this.itemsPerPage ? '' : ' invisible' },\r\n                    !this.opts.pageDropdown ? null : m('.col-8.offset-2',\r\n                        m('.input-group', [\r\n                            m('span.input-group-prepend', m('span.input-group-text', res.page)),\r\n                            m('select.form-control.custom-select', { onchange: this.changePage.bind(this), value: currentPage }, optionList)\r\n                        ])\r\n                    )\r\n                ),\r\n                m('.col.text-right.my-auto', res.showing\r\n                    .replace('{0}', Math.min(this.currentStartItem + 1, this.filteredTotal))\r\n                    .replace('{1}', Math.min(this.currentStartItem + this.itemsPerPage, this.filteredTotal))\r\n                    .replace('{2}', this.filteredTotal)\r\n                )\r\n            ]);\r\n        },\r\n\r\n        /**\r\n         * Render the view.\r\n         */\r\n        run: function() {\r\n            var self = this;\r\n            if (!this.data) {\r\n                self.loadData();\r\n            }\r\n            m.mount(self.content, {\r\n                view: self.view.bind(self),\r\n                onupdate: function() {\r\n                    self.setLayout();\r\n                    self.updateLayout();\r\n                    $.dialogs.processContent(self.table);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    return Table;\r\n});","/*!\r\n * Wraps functionality needed for creating charts using Chart.js.\r\n */\r\n(function(root, factory) {\r\n    root.DashChart = factory(root.$, root.Alertify, root.Chart);\r\n})(this, function($, Alertify, Chart) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare DashChart class.\r\n     * @param {Node} content - DOM node that contains the chart.\r\n     * @param {Node} canvas - Canvas element to display the chart in.\r\n     * @param {bool} showLegend - Show or hide the chart legend.\r\n     * @param {Function} dataFn - Function to call if after loading data. Runs before other functions.\r\n     * @param {Function} errorFn - Function to call if an error occurs loading data.\r\n     * @param {Function} toggleExportFn - Function to enable/disable export.\r\n     */\r\n    var DashChart = function(content, showLegend, dataFn, errorFn, toggleExportFn) {\r\n        this.content = content;\r\n        this.url = content.getAttribute('data-url');\r\n        this.canvas = $.get('.chart-canvas', content);\r\n        this.showLegend = $.coalesce(showLegend, true);\r\n        this.dataFn = dataFn;\r\n        this.errorFn = errorFn;\r\n        this.toggleExportFn = toggleExportFn;\r\n        this.chart = null;\r\n        this.run();\r\n    };\r\n\r\n    /**\r\n     * Declare DashChart class methods.\r\n     */\r\n    DashChart.prototype = {\r\n        /**\r\n         * Generate a random number within range.\r\n         * @param {number[]} range - Min and max value.\r\n         * @returns {number} Random number. \r\n         */\r\n        randomWithin: function (range) {\r\n            return Math.floor(range[0] + Math.random() * (range[1] + 1 - range[0]));\r\n        },\r\n\r\n        /**\r\n         * Generates a random color and a lighter partner color.\r\n         * @returns {string[]} Color codes.\r\n         */\r\n        randomColor: function () {\r\n            var hsl = [this.randomWithin([0, 360]), this.randomWithin([50, 100]), this.randomWithin([30, 80])];\r\n            return [\r\n                'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%, 1)',\r\n                'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%, .2)'\r\n            ];\r\n        },\r\n\r\n        /**\r\n         * Generates an array of random colors.\r\n         * @param {number} cnt - Number of colors to generate.\r\n         * @returns {string[]} Array of color codes.\r\n         */\r\n        randomColors: function (cnt) {\r\n            var result = new Array(cnt);\r\n            for (var i = 0; i < cnt; i++) {\r\n                result[i] = this.randomColor()[0];\r\n            }\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * Parse a hex color into a hsla color and a lighter partner color.\r\n         * @param {string} hex - Hex color code with leading '#'.\r\n         * @returns {string[]} Color codes.\r\n         */\r\n        parseColor: function (hex) {\r\n            if (!hex) {\r\n                return this.randomColor();\r\n            }\r\n            var hsl = $.colors.rgb2hsl($.colors.hex2rgb(hex));\r\n            return [\r\n                'hsla(' + (hsl[0] * 360).toFixed(0) + ',' + (hsl[1] * 100).toFixed(0) + '%,' + (hsl[2] * 100).toFixed(0) + '%, 1)',\r\n                'hsla(' + (hsl[0] * 360).toFixed(0) + ',' + (hsl[1] * 100).toFixed(0) + '%,' + (hsl[2] * 100).toFixed(0) + '%, .2)'\r\n            ];\r\n        },\r\n\r\n        /**\r\n         * Build the chart.\r\n         */\r\n        run: function () {\r\n            var self = this;\r\n\r\n            $.show($.get('.chart-spinner', self.content));\r\n            $.hide($.get('.chart-error', self.content));\r\n            $.hide(self.canvas);\r\n            if (self.toggleExportFn) {\r\n                self.toggleExportFn(false);\r\n            }\r\n\r\n            $.ajax({\r\n                method: 'POST',\r\n                url: self.url,\r\n                block: false\r\n            }, function (data) {\r\n                if ($.isFunction(self.dataFn)) {\r\n                    if (!self.dataFn(data)) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                var ranges = $.isArray(data.ranges) ? data.ranges : [data];\r\n                if (!ranges.some(function(x) { return x.rows && x.rows.length; })) {\r\n                    $.hide($.get('.chart-spinner', self.content));\r\n                    Alertify.error($.resx('chart.noData'));\r\n                    return;\r\n                }\r\n\r\n                $.hide($.get('.chart-spinner', self.content));\r\n                $.hide($.get('.chart-error', self.content));\r\n                $.show(self.canvas);\r\n                if (self.toggleExportFn) {\r\n                    self.toggleExportFn(true);\r\n                }\r\n\r\n                if (self.chart) {\r\n                    // this code is used for refreshing dashboard chart data, but won't be used on the chart dialog\r\n                    ranges.forEach(function (x, i) {\r\n                        self.chart.data.datasets[i].data = ranges[i].rows;\r\n                        self.chart.data.datasets[i].label = ranges[i].yTitle;\r\n                    });\r\n                    self.chart.data.labels = ranges[0].labels;\r\n                    self.chart.update();\r\n                } else {\r\n                    var scales = {};\r\n                    var tooltips = { callbacks: {} };\r\n                    if (ranges[0].xType === 'currency') {\r\n                        var currencyFormat = $.accounting.parseFormat(ranges[0].currencyFormat);\r\n                        scales.xAxes = [{\r\n                            ticks: {\r\n                                callback: function (value) {\r\n                                    return $.accounting.formatMoney(value, currencyFormat);\r\n                                }\r\n                            }\r\n                        }];\r\n                        tooltips.callbacks.title = function (tooltipItems, data) {\r\n                            var title = '';\r\n                            if (tooltipItems.length > 0) {\r\n                                if (tooltipItems[0].xLabel) {\r\n                                    title = tooltipItems[0].xLabel;\r\n                                } else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n                                    title = data.labels[tooltipItems[0].index];\r\n                                }\r\n                                title = $.accounting.formatMoney(title, currencyFormat);\r\n                            }\r\n                            return title;\r\n                        };\r\n                    } else if (ranges[0].xType === 'date') {\r\n                        var dateFormat = ranges[0].dateFormat;\r\n                        scales.xAxes = [{\r\n                            ticks: {\r\n                                callback: function (value) {\r\n                                    return $.fecha.format(new Date(value), dateFormat);\r\n                                }\r\n                            }\r\n                        }];\r\n                        tooltips.callbacks.title = function (tooltipItems, data) {\r\n                            var title = '';\r\n                            if (tooltipItems.length > 0) {\r\n                                if (tooltipItems[0].xLabel) {\r\n                                    title = tooltipItems[0].xLabel;\r\n                                } else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n                                    title = data.labels[tooltipItems[0].index];\r\n                                }\r\n                                title = $.fecha.format(new Date(title), dateFormat);\r\n                            }\r\n                            return title;\r\n                        };\r\n                    }\r\n\r\n                    var chartType = data.type.toLowerCase();\r\n                    var isRadial = chartType === 'pie' || chartType === 'doughnut';\r\n                    var datasets = [];\r\n                    scales.yAxes = [];\r\n                    ranges.forEach(function (x, i) {\r\n                        var color = self.parseColor(x.color);\r\n                        datasets.push({\r\n                            backgroundColor: color[0],\r\n                            borderColor: 'rgb(255, 255, 255)',\r\n                            borderWidth: 2,\r\n                            data: x.rows,\r\n                            label: x.yTitle,\r\n                            yAxisID: 'y-axis-' + i\r\n                        });\r\n\r\n                        var ticks = {};\r\n                        if (x.yType === 'currency') {\r\n                            var currencyFormat = $.accounting.parseFormat(x.currencyFormat);\r\n                            ticks.callback = function (value) {\r\n                                return $.accounting.formatMoney(value, currencyFormat);\r\n                            };\r\n                            tooltips.callbacks.label = function (item) {\r\n                                return $.accounting.formatMoney(item.yLabel, currencyFormat);\r\n                            };\r\n                        } else if (x.yType === 'date') {\r\n                            var dateFormat = x.dateFormat;\r\n                            ticks.callback = function (value) {\r\n                                return $.fecha.format(new Date(value), dateFormat);\r\n                            };\r\n                            tooltips.callbacks.label = function (item) {\r\n                                return $.fecha.format(new Date(item.yLabel), dateFormat);\r\n                            };\r\n                        }\r\n\r\n                        if (!isRadial) {\r\n                            scales.yAxes.push({\r\n                                id: 'y-axis-' + i,\r\n                                position: i === 0 ? 'left' : 'right',\r\n                                ticks: ticks,\r\n                                gridLines: {\r\n                                    color: color[1]\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    var chartData = {\r\n                        type: chartType === 'horizontalbar' ? 'horizontalBar' : chartType,\r\n                        options: {\r\n                            responsive: true,\r\n                            scales: isRadial ? null : scales,\r\n                            tooltips: tooltips,\r\n                            legend: { display: self.showLegend }\r\n                        },\r\n                        data: {\r\n                            labels: ranges[0].labels,\r\n                            datasets: datasets\r\n                        }\r\n                    };\r\n\r\n                    if (isRadial) {\r\n                        chartData.data.datasets[0].backgroundColor = self.randomColors(ranges[0].rows.length);\r\n                    }\r\n\r\n                    self.chart = new Chart(self.canvas.getContext('2d'), chartData);\r\n                }\r\n            }, function () {\r\n                if ($.isFunction(self.errorFn)) {\r\n                    if (!self.errorFn()) {\r\n                        return;\r\n                    }\r\n                }\r\n                $.hide($.get('.chart-spinner', self.content));\r\n                $.show($.get('.chart-error', self.content));\r\n                if (self.toggleExportFn) {\r\n                    self.toggleExportFn(false);\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Destroy the chart.\r\n         */\r\n        destroy: function () {\r\n            $.destroy(this.chart);\r\n        }\r\n    };\r\n\r\n    return DashChart;\r\n});","/*!\r\n * Mithril based form component. For repetitive form elements.\r\n */\r\n(function(root, factory) {\r\n    root.Form = factory(root.m, root.$, root.Alertify, root.Help);\r\n})(this, function(m, $, Alertify, Help) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare form class.\r\n     * @param {Object} opts - Form settings\r\n     * @param {Object[]} records - Array of objects the form will display/update.\r\n     */\r\n    function Form(opts, records) {\r\n        opts = opts || {};\r\n        this.opts = $.extend({\r\n            container: null,\r\n            id: null,\r\n            columns: null,\r\n            wantsHelp: false,\r\n            appendRecord: false,\r\n            resx: {\r\n                deleteRecord: $.resx('delete'),\r\n                confirmDelete: $.resx('confirmDelete'),\r\n                confirmDeleteAll: $.resx('confirmDeleteAll'),\r\n                areYouSure: $.resx('areYouSure'),\r\n                moveUp: $.resx('moveUp'),\r\n                moveDown: $.resx('moveDown'),\r\n                help: $.resx('help')\r\n            }\r\n        }, opts);\r\n\r\n        this.container = $.get(this.opts.container);\r\n        this.records = $.isArray(records) ? records.map(function(x, i) { x._index = i; return x; }) : [];\r\n        this.addedCount = 0;\r\n        this.changed = false;\r\n    }\r\n\r\n    Form.prototype = {\r\n        /**\r\n         * Get the value of an element.\r\n         * @param {*} e - Event that triggered the value change, or the new value.\r\n         * @returns {string} Value of the element.\r\n         */\r\n        targetVal: function(e) {\r\n            return e && e.target ? e.target.value : e;\r\n        },\r\n\r\n        /**\r\n         * Set the value of a field on a record.\r\n         * @param {number} index - Record index.\r\n         * @param {string} field - Name of field to set.\r\n         * @param {Event} e - Event that triggered the change.\r\n         * @returns {bool} True if value changed, else false.\r\n         */\r\n        set: function(index, field, e) {\r\n            var val = this.targetVal(e);\r\n            if (this.opts.columns[field].type === 'int') {\r\n                val = $.isNull(val) ? null : val * 1;\r\n            }\r\n\r\n            if ($.isFunction(this.opts.columns[field].setter)) {\r\n                this.opts.columns[field].setter.call(this, index, field, e);\r\n            } else {\r\n                if (this.records[index][field] !== val) {\r\n                    this.records[index][field] = val;\r\n                    this.changed = true;\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Add a new record.\r\n         */\r\n        addRecord: function() {\r\n            --this.addedCount;\r\n            var obj = $.clone(this.opts.newRecord);\r\n            obj._index = this.addedCount;\r\n            if (this.opts.appendRecord) {\r\n                this.records.push(obj);\r\n            } else {\r\n                this.records.unshift(obj);\r\n            }\r\n            this.changed = true;\r\n        },\r\n\r\n        /**\r\n         * Delete a record.\r\n         * @param {number} index - Record index to delete.\r\n         * @param {Event} e - Event that triggered the delete.\r\n         */\r\n        deleteRecord: function(index, e) {\r\n            var self = this;\r\n            if ($.isFunction(this.opts.deleteFn)) {\r\n                this.opts.deleteFn.call(this, index, e);\r\n            } else {\r\n                // timeout prevents hitting enter on the button to trigger this confirmation from confirming it immediately\r\n                setTimeout(function() {\r\n                    Alertify.confirm(self.opts.resx.areYouSure, function(e) {\r\n                        self.records.splice(index, 1);\r\n                        if ($.isFunction(self.opts.afterDeleteFn)) {\r\n                            self.opts.afterDeleteFn.call(self, index, e);\r\n                        }\r\n                        self.changed = true;\r\n                        self.run();\r\n                    });\r\n                }, 100);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Delete all records.\r\n         */\r\n        deleteAllRecords: function() {\r\n            var self = this;\r\n            setTimeout(function() {\r\n                Alertify.confirm(self.opts.resx.areYouSure, function() {\r\n                    self.records = [];\r\n                    self.changed = true;\r\n                    self.run();\r\n                });\r\n            }, 100);\r\n        },\r\n\r\n        /**\r\n         * Move a record up in the record list.\r\n         * @param {number} index - Index of record to move up.\r\n         */\r\n        moveUp: function(index) {\r\n            var t = this.records[index - 1];\r\n            if (t) {\r\n                this.records[index - 1] = this.records[index];\r\n                this.records[index] = t;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Move a record down in the record list.\r\n         * @param {number} index - Index of record to move down.\r\n         */\r\n        moveDown: function(index) {\r\n            var t = this.records[index + 1];\r\n            if (t) {\r\n                this.records[index + 1] = this.records[index];\r\n                this.records[index] = t;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check if there are any records.\r\n         * @returns {bool} True if there are any records, else false.\r\n         */\r\n        hasRecords: function() {\r\n            return this.records && this.records.length > 0;\r\n        },\r\n\r\n        /**\r\n         * Trigger the click event if the enter or space key is hit.\r\n         * @param {Event} e - Event that triggered this.\r\n         */\r\n        keyInput: function(e) {\r\n            if (e && e.keyCode && (e.keyCode === 13 || e.keyCode === 32)) {\r\n                e.target.onclick.call(this, e);\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * Create the mithril node to show help wrapped around the provided content.\r\n         * @param {string} helpBody - Content of the help dialog.\r\n         * @param {Object} innerContent - Mithril node for the input that help is for.\r\n         * @returns {Object} Mithril node for input-group if help is enabled, else innerContent.\r\n         */\r\n        withHelp: function(helpBody, innerContent) {\r\n            return m(Help, { message: helpBody, enabled: this.opts.wantsHelp }, innerContent);\r\n        },\r\n\r\n        /**\r\n         * Return the error class if the value isn't valid.\r\n         * @param {string|number} value - Value to check against.\r\n         * @param {bool} requirePositive - Require the value be a positive number.\r\n         * @param {bool} isDate - Check if the value is a valid date.\r\n         * @returns {string}  Error class name if value isn't set, else empty string.\r\n         */\r\n        withError: function(value, requirePositive, isDate) {\r\n            requirePositive = $.coalesce(requirePositive, false);\r\n            isDate = $.coalesce(isDate, false);\r\n            var result = isDate ? $.fecha.parse(value, this.opts.dateFormat) : $.hasValue(value) && (!requirePositive || $.hasPositiveValue(value));\r\n            return result ? '' : ' mform-control-error';\r\n        },\r\n\r\n        /**\r\n         * Add a disabled attribute to the input attributes if isDisabled=true.\r\n         * @param {Object} attrs - Attribute object to update.\r\n         * @param {bool} isDisabled - Is the input diabled or not.\r\n         * @returns {Object} Updated attribute object.\r\n         */\r\n        withDisabled: function(attrs, isDisabled) {\r\n            if (isDisabled) {\r\n                attrs.disabled = true;\r\n            }\r\n            return attrs;\r\n        },\r\n\r\n        /**\r\n         * Add a checked attribute to the input attributes if isChecked=true.\r\n         * @param {Object} attrs - Attribute object to update.\r\n         * @param {bool} isChecked - Is the input checked or not.\r\n         * @returns {Object} Updated attribute object.\r\n         */\r\n        withChecked: function(attrs, isChecked) {\r\n            if (isChecked) {\r\n                attrs.checked = true;\r\n            }\r\n            return attrs;\r\n        },\r\n\r\n        /**\r\n         * Build list of options nodes.\r\n         * @param {Object[]} arr - Array of objects to build options for.\r\n         * @param {*} selectedValue - Value of the selected option. Can be a string, number, or array of either.\r\n         * @param {string} valueKey - Object key that stores the value of the option.\r\n         * @param {string} textKey - Object key that stores the text for the option.\r\n         * @returns {Object[]} Array of mithril option nodes.\r\n         */\r\n        withOptions: function(arr, selectedValue, valueKey, textKey) {\r\n            if (!$.isArray(arr)) {\r\n                return null;\r\n            }\r\n            return arr.map(function(x) {\r\n                var attr = { value: x[valueKey] === 0 ? '' : x[valueKey] };\r\n                if (x[valueKey] === 0) {\r\n                    attr.disabled = true;\r\n                }\r\n                if (x[valueKey] === selectedValue || ($.isArray(selectedValue) && selectedValue.indexOf(x[valueKey]) > -1)) {\r\n                    attr.selected = true;\r\n                }\r\n                return m('option', attr, x[textKey]);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Create the mithril node for the record buttons (move up/move down/delete).\r\n         * @param {number} index - Index of the record to create buttons for.\r\n         * @param {bool} includeMove - Optionally include the move up/down buttons.\r\n         * @returns {Object} Mithril node with buttons.\r\n         */\r\n        buttonView: function(index, includeMove) {\r\n            var btns = [];\r\n            if ($.coalesce(includeMove, false)) {\r\n                btns.push(m('button.btn.btn-sm.btn-secondary', {\r\n                    type: 'button', role: 'button', disabled: index < 1,\r\n                    onclick: this.moveUp.bind(this, index), title: this.opts.resx.moveUp\r\n                }, m('i.dash.dash-up-big.dash-lg.dash-fw'))\r\n                );\r\n                btns.push(m('button.btn.btn-sm.btn-secondary', {\r\n                    type: 'button', role: 'button', disabled: index === this.records.length - 1,\r\n                    onclick: this.moveDown.bind(this, index), title: this.opts.resx.moveDown\r\n                }, m('i.dash.dash-down-big.dash-lg.dash-fw'))\r\n                );\r\n            }\r\n            btns.push(m('button.btn.btn-sm.btn-secondary.confirm-delete-row-button', {\r\n                type: 'button', role: 'button', onclick: this.deleteRecord.bind(this, index), title: this.opts.resx.deleteRecord\r\n            }, m('i.dash.dash-cancel.dash-lg.text-danger')));\r\n            return m('.btn-toolbar.float-right', btns);\r\n        },\r\n\r\n        /**\r\n         * Clean up our mess.\r\n         */\r\n        destroy: function() {\r\n            m.mount(this.container, null);\r\n        },\r\n\r\n        /**\r\n         * Build the view that actually shows the form. This is meant to be overridden.\r\n         * @returns {Object}  Mithril DIV node.\r\n         */\r\n        view: function() {\r\n            return m('div');\r\n        },\r\n\r\n        /**\r\n         * Render the view.\r\n         */\r\n        run: function() {\r\n            var self = this;\r\n            m.mount(self.container, {\r\n                view: self.view.bind(self)\r\n            });\r\n        }\r\n    };\r\n\r\n    return Form;\r\n});","/*!\r\n * Wraps dataset join form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.JoinForm = factory(root.m, root.$, root.Form, root.Autocomplete, root.Help);\r\n})(this, function(m, $, Form, Autocomplete, Help) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the join form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function JoinForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.join-table-wrapper', opts.content),\r\n            columns: {\r\n                joinTypeId: { type: 'int' },\r\n                tableName: { type: 'str' },\r\n                keys: { type: 'str' }\r\n            },\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, tableName: '', joinTypeId: 1, keys: null },\r\n            afterDeleteFn: opts.columnUpdateFn\r\n        }, opts.joins || []);\r\n\r\n        this.joinTypes = opts.joinTypes;\r\n        this.sourceFn = opts.sourceFn;\r\n        this.columnUpdateFn = opts.columnUpdateFn;\r\n    }\r\n\r\n    JoinForm.prototype = Object.create(Form.prototype);\r\n    JoinForm.prototype.constructor = JoinForm;\r\n\r\n    /**\r\n     * Set the table name for the join record, and update the column list.\r\n     * @param {number} index - Index of the record to update.\r\n     * @param {string} value - New table name value\r\n     */\r\n    JoinForm.prototype.setJoinTable = function(index, value) {\r\n        this.set(index, 'tableName', value);\r\n        this.columnUpdateFn();\r\n    };\r\n\r\n    /**\r\n     * Create the view for the joins tab.\r\n     * @returns {Object} Mithril node containing the join form.\r\n     */\r\n    JoinForm.prototype.view = function() {\r\n        var self = this;\r\n\r\n        if (self.isProc) {\r\n            return m('.table-wrapper.p-t-1.col-12', m('.card.bg-info.text-white', m('.card-body', $.resx('dataset.errorProcNoJoins'))));\r\n        }\r\n\r\n        return m('.table-wrapper', [\r\n            m('.row.wrapper-row.pb-1',\r\n                m('.col-12', m('.float-right', [\r\n                    m('button.btn.btn-info.mr-2', { type: 'button', role: 'button', onclick: self.addRecord.bind(self) }, $.resx('add')),\r\n                    m(Help, { enabled: this.opts.wantsHelp, message: $.resx('dataset.joinsText') })\r\n                ]))\r\n            ),\r\n            self.records.map(function(record, index) {\r\n                return m('.row.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: record._index }, [\r\n                    m('input', { type: 'hidden', name: 'DatasetJoin[' + index + '].Id', value: record.id }),\r\n                    m('input', { type: 'hidden', name: 'DatasetJoin[' + index + '].JoinOrder', value: index }),\r\n                    m('.col-3', self.withHelp($.resx('dataset.joinTableText'), m(Autocomplete, {\r\n                        name: 'DatasetJoin[' + index + '].TableName',\r\n                        required: true,\r\n                        placeholder: $.resx('dataset.joinTableName'),\r\n                        value: record.tableName,\r\n                        list: self.sourceFn,\r\n                        onSelect: self.setJoinTable.bind(self, index),\r\n                        onCancel: self.setJoinTable.bind(self, index),\r\n                    }))),\r\n                    m('.col-2', self.withHelp($.resx('dataset.joinTypeText'),\r\n                        m('select.form-control.required.custom-select', {\r\n                            name: 'DatasetJoin[' + index + '].JoinTypeId', class: self.withError(record.joinTypeId),\r\n                            placeholder: $.resx('dataset.joinType'), oninput: self.set.bind(self, index, 'joinTypeId'), value: record.joinTypeId\r\n                        }, self.withOptions(self.joinTypes, record.joinTypeId, 'id', 'name'))\r\n                    )),\r\n                    m('.col-5', self.withHelp($.resx('dataset.joinKeysText'),\r\n                        m('input.form-control.required', {\r\n                            type: 'text', name: 'DatasetJoin[' + index + '].Keys', class: self.withError(record.keys),\r\n                            placeholder: $.resx('dataset.joinKeys'), oninput: self.set.bind(self, index, 'keys'), value: record.keys\r\n                        }))\r\n                    ),\r\n                    m('.col-2', self.buttonView.call(self, index, true))\r\n                ]);\r\n            })\r\n        ]);\r\n    };\r\n\r\n    return JoinForm;\r\n});","/*!\r\n * Wraps dataset column form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.ColumnForm = factory(root.m, root.$, root.Alertify, root.Form, root.Autocomplete, root.Help);\r\n})(this, function(m, $, Alertify, Form, Autocomplete, Help) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Sort columns by title.\r\n     * @param {Object} a - First column to compare.\r\n     * @param {Object} b - Second column to compare.\r\n     * @returns {bool} True if column a should be before column b.\r\n     */\r\n    var columnTitleSort = function(a, b) {\r\n        var aTitle = a.title.toLowerCase(), bTitle = b.title.toLowerCase();\r\n        return aTitle > bTitle ? 1 : (bTitle > aTitle ? -1 : 0);\r\n    };\r\n\r\n    /**\r\n     * Build the column form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function ColumnForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.column-table-wrapper', opts.content),\r\n            columns: {\r\n                title: { type: 'str' },\r\n                columnName: { type: 'str' },\r\n                dataTypeId: { type: 'int' },\r\n                derived: { type: 'str' },\r\n                filterTypeId: { type: 'int' },\r\n                filterQuery: { type: 'str' },\r\n                link: { type: 'str' },\r\n                isParam: { type: 'int' }\r\n            },\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: 0, title: null, columnName: '', dataTypeId: '', derived: null, filterTypeId: '', filterQuery: null, link: null, isParam: 0, isExpanded: true }\r\n        }, opts.columns || []);\r\n\r\n        this.content = opts.content;\r\n        this.dataTypes = opts.dataTypes;\r\n        this.filterTypes = opts.filterTypes;\r\n        this.sourceFn = opts.sourceFn;\r\n        this.columnFn = opts.columnFn;\r\n        this.selectedSourceFn = opts.selectedSourceFn;\r\n    }\r\n\r\n    ColumnForm.prototype = Object.create(Form.prototype);\r\n    ColumnForm.prototype.constructor = ColumnForm;\r\n\r\n    /**\r\n     * Expand/collapse the fields for a column.\r\n     * @param {Object} column - The column record to expand/collapse.\r\n     */\r\n    ColumnForm.prototype.toggleExpanded = function(column) {\r\n        column.isExpanded = !column.isExpanded;\r\n    };\r\n\r\n    /**\r\n     * Check if the database and primary source are set.\r\n     * @returns {bool} True if a database and a primary source are provided, else false.\r\n     */\r\n    ColumnForm.prototype.checkStatus = function() {\r\n        var database = $.get('.dataset-database', this.content);\r\n        if (!(database && $.hasPositiveValue(database.value))) {\r\n            Alertify.error($.resx('dataset.importErrorDatabaseRequired'));\r\n            return false;\r\n        }\r\n        var primarySource = $.get('.primary-source-autocomplete', this.content);\r\n        if (!(primarySource && primarySource.value)) {\r\n            Alertify.error($.resx('dataset.importErrorPrimarySourceRequired'));\r\n            return false;\r\n        }\r\n        var type = $.get('.dataset-type', this.content);\r\n        if (type && type.value * 1 === 2) {\r\n            Alertify.error($.resx('dataset.importErrorNoProcs'));\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Import columns for the selected tables into the dataset.\r\n     * @param {Event} e - Event that triggered this.\r\n     */\r\n    ColumnForm.prototype.importColumns = function(e) {\r\n        var form = this.content;\r\n        if (!($.hasClass(form, 'dataset-form') && this.checkStatus())) {\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        var database = $.get('.dataset-database');\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-import-url'),\r\n            data: { databaseId: database.value, sources: self.selectedSourceFn() }\r\n        }, function(data) {\r\n            if (!data.columns || data.columns.length === 0) {\r\n                Alertify.error($.resx('dataset.importErrorNoColumns'));\r\n                return;\r\n            }\r\n\r\n            var newColumns = {};\r\n            data.columns.forEach(function(x) {\r\n                newColumns[x.columnName.toLowerCase()] = x;\r\n            });\r\n\r\n            var newRecords = [];\r\n            var existingColumns = [];\r\n            self.records.forEach(function(x) {\r\n                var colName = x.columnName.toLowerCase();\r\n                if (newColumns[colName]) {\r\n                    // record matches - update datatype and add to new list\r\n                    x.dataTypeId = newColumns[colName].dataTypeId;\r\n                    newRecords.push(x);\r\n                    existingColumns.push(colName);\r\n                }\r\n            });\r\n\r\n            data.columns.forEach(function(x) {\r\n                // now add any new columns from server\r\n                if (existingColumns.indexOf(x.columnName.toLowerCase()) === -1) {\r\n                    newRecords.push(x);\r\n                }\r\n            });\r\n\r\n            newRecords.sort(columnTitleSort);\r\n            self.records = newRecords;\r\n\r\n            Alertify.success($.resx('dataset.importSuccess'));\r\n            $.dialogs.focusOnClose.call(e);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Open the confirmation before importing columns.\r\n     * @param {Event} e - Event that triggered this.\r\n     */\r\n    ColumnForm.prototype.import = function(e) {\r\n        if (this.checkStatus()) {\r\n            Alertify.confirm($.resx('dataset.confirmImport'), this.importColumns.bind(this, e), $.dialogs.focusOnClose.bind(e));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Create the node for the column form.\r\n     * @returns {Object} Mithril node containing the form.\r\n     */\r\n    ColumnForm.prototype.view = function() {\r\n        var self = this;\r\n        return m('.table-wrapper', [\r\n            m('.row.wrapper-row.pb-1',\r\n                m('.col-12',\r\n                    m('.float-right', [\r\n                        m('button.btn.btn-info.mr-2', {\r\n                            type: 'button', role: 'button', onclick: self.addRecord.bind(self)\r\n                        }, $.resx('add')),\r\n                        m('button.btn.btn-danger.mr-2', {\r\n                            type: 'button', role: 'button', onclick: self.import.bind(self)\r\n                        }, $.resx('dataset.import')),\r\n                        m(Help, { enabled: this.opts.wantsHelp, message: $.resx('dataset.columnsText') })\r\n                    ])\r\n                )\r\n            ),\r\n            self.records.map(function(record, index) {\r\n                return m('.col-12.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: record._index }, [\r\n                    m('.row', [\r\n                        m('input', { type: 'hidden', name: 'DatasetColumn[' + index + '].Id', value: record.id }),\r\n                        m('.col-4', self.withHelp($.resx('dataset.columnTitleText'), [\r\n                            m('span.input-group-prepend', m('button.btn.btn-secondary', {\r\n                                type: 'button', role: 'button',\r\n                                onclick: self.toggleExpanded.bind(self, record)\r\n                            }, m('i.rn', { class: record.isExpanded ? 'dash-minus' : 'dash-plus' }))),\r\n                            m('input.form-control.required', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].Title', class: self.withError(record.title),\r\n                                placeholder: $.resx('dataset.columnTitle'), oninput: self.set.bind(self, index, 'title'), value: record.title\r\n                            }),\r\n                        ])),\r\n                        m('.col-4', self.withHelp($.resx('dataset.columnNameText'), m(Autocomplete, {\r\n                            name: 'DatasetColumn[' + index + '].ColumnName',\r\n                            required: true,\r\n                            placeholder: $.resx('dataset.columnName'),\r\n                            value: record.columnName,\r\n                            list: self.columnFn,\r\n                            onSelect: self.set.bind(self, index, 'columnName')\r\n                        }))),\r\n                        m('.col-3', self.withHelp($.resx('dataset.dataTypeText'),\r\n                            m('select.form-control.required.custom-select', {\r\n                                name: 'DatasetColumn[' + index + '].DataTypeId', class: self.withError(record.dataTypeId),\r\n                                placeholder: $.resx('dataset.dataType'), oninput: self.set.bind(self, index, 'dataTypeId'), value: record.dataTypeId\r\n                            }, self.withOptions(self.dataTypes, record.dataTypeId, 'id', 'name'))\r\n                        )),\r\n                        m('.col-1', self.buttonView(index, false))\r\n                    ]),\r\n                    m('.row', { class: record.isExpanded ? '' : ' hidden' },\r\n                        m('.col-10.offset-1', self.withHelp($.resx('dataset.derivedText'),\r\n                            m('input.form-control', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].Derived', placeholder: $.resx('dataset.derived'),\r\n                                oninput: self.set.bind(self, index, 'derived'), value: record.derived\r\n                            })\r\n                        ))\r\n                    ),\r\n                    m('.row', { class: record.isExpanded ? '' : ' hidden' }, [\r\n                        m('.col-3.offset-1', self.withHelp($.resx('dataset.filterTypeText'),\r\n                            m('select.form-control.custom-select', {\r\n                                name: 'DatasetColumn[' + index + '].FilterTypeId', class: self.withError(record.filterTypeId),\r\n                                placeholder: $.resx('dataset.filterType'), oninput: self.set.bind(self, index, 'filterTypeId'), value: record.filterTypeId\r\n                            }, self.withOptions(self.filterTypes, record.filterTypeId, 'id', 'name'))\r\n                        )),\r\n                        m('.col-7', self.withHelp($.resx('dataset.queryText'),\r\n                            m('input.form-control', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].FilterQuery', placeholder: $.resx('dataset.query'),\r\n                                oninput: self.set.bind(self, index, 'filterQuery'), value: record.filterQuery, readOnly: record.filterTypeId !== 3\r\n                            }))\r\n                        )\r\n                    ]),\r\n                    m('.row', { class: record.isExpanded ? '' : ' hidden' }, [\r\n                        m('.col-8.offset-1', self.withHelp($.resx('dataset.linkText'),\r\n                            m('input.form-control', {\r\n                                type: 'text', name: 'DatasetColumn[' + index + '].Link', placeholder: $.resx('dataset.link'),\r\n                                oninput: self.set.bind(self, index, 'link'), value: record.link\r\n                            })\r\n                        )),\r\n                        m('.col-1', [\r\n                            m('label.custom-control.custom-checkbox', [\r\n                                m('input.custom-control-input', self.withChecked({\r\n                                    type: 'checkbox', name: 'DatasetColumn[' + index + '].IsParam', id: 'DatasetColumn_' + index + '_.IsParam',\r\n                                    oninput: self.set.bind(self, index, 'isParam'), value: 'true'\r\n                                }, record.isParam)),\r\n                                m('label.custom-control-label', { for: 'DatasetColumn_' + index + '_.IsParam' }, $.resx('dataset.isParam'))\r\n                            ])\r\n                        ]),\r\n                        m('.col-1', m(Help, { enabled: self.opts.wantsHelp, message: $.resx('dataset.isParamText') }))\r\n                    ])\r\n                ]);\r\n            })\r\n        ]);\r\n    };\r\n\r\n    return ColumnForm;\r\n});","/*!\r\n * Wraps share form functionality. Used for report and chart.\r\n */\r\n(function(root, factory) {\r\n    root.ShareForm = factory(root.m, root.$, root.Form);\r\n})(this, function(m, $, Form) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the share form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function ShareForm(opts) {\r\n        var container = $.get('.share-table-wrapper', opts.content);\r\n        var formOpts = JSON.parse(container.getAttribute('data-json'));\r\n        container.removeAttribute('data-json');\r\n\r\n        Form.call(this, {\r\n            container: container,\r\n            columns: {\r\n                id: { type: 'int' },\r\n                userId: { type: 'int' },\r\n                roleId: { type: 'int' }\r\n            },\r\n            appendRecord: true,\r\n            wantsHelp: formOpts.wantsHelp,\r\n            newRecord: { id: null, userId: 0, roleId: 0 }\r\n        }, formOpts.shares || []);\r\n\r\n        this.users = formOpts.userList || [];\r\n        this.roles = formOpts.roleList || [];\r\n        this.formName = opts.formName;\r\n    }\r\n\r\n    ShareForm.prototype = Object.create(Form.prototype);\r\n    ShareForm.prototype.constructor = ShareForm;\r\n\r\n    /**\r\n     * Build the user dropdown attributes.\r\n     * @param {Object} share - Share to build the dropdown for.\r\n     * @param {number} index - Index of the share record.\r\n     * @returns {Object} Dropdown attribute object.\r\n     */\r\n    ShareForm.prototype.userSelectAttr = function(share, index) {\r\n        var res = {\r\n            name:  this.formName + '[' + index + '].UserId', class: 'form-control custom-select' + ($.hasPositiveValue(share.userId) || $.hasPositiveValue(share.roleId) ? '' : ' mform-control-error'),\r\n            placeholder: $.resx('selectUser'), onchange: this.set.bind(this, index, 'userId'), value: share.userId\r\n        };\r\n        if ($.hasPositiveValue(share.roleId)) {\r\n            res['disabled'] = true;\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Build the role dropdown attributes.\r\n     * @param {Object} share - Share to build the dropdown for.\r\n     * @param {number} index - Index of the share record.\r\n     * @returns {Object} Dropdown attribute object.\r\n     */\r\n    ShareForm.prototype.roleSelectAttr = function(share, index) {\r\n        var res = {\r\n            name: this.formName + '[' + index + '].RoleId', class: 'form-control custom-select' + ($.hasPositiveValue(share.userId) || $.hasPositiveValue(share.roleId) ? '' : ' mform-control-error'),\r\n            placeholder: $.resx('selectRole'), onchange: this.set.bind(this, index, 'roleId'), value: share.roleId\r\n        };\r\n        if ($.hasPositiveValue(share.userId)) {\r\n            res['disabled'] = true;\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Create the view for the share form.\r\n     * @returns {Object} Mithril node containing the share form.\r\n     */\r\n    ShareForm.prototype.view = function() {\r\n        var self = this;\r\n        return m('.table-wrapper', [\r\n            m('.row', [\r\n                m('.col-5', m('h5', $.resx('user'))),\r\n                m('.col-5', m('h5', $.resx('role'))),\r\n                m('.col-2')\r\n            ]),\r\n            self.records.map(function(share, index) {\r\n                return m('.row.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: share._index }, [\r\n                    m('input', { type: 'hidden', name: self.formName + '[' + index + '].Id', value: share.id }),\r\n                    m('.col-5',\r\n                        m('select', self.userSelectAttr(share, index), self.withOptions(self.users, share.userId, 'id', 'fullName'))\r\n                    ),\r\n                    m('.col-5',\r\n                        m('select', self.roleSelectAttr(share, index), self.withOptions(self.roles, share.roleId, 'id', 'name'))\r\n                    ),\r\n                    m('.col-2', self.buttonView(index, false))\r\n                ]);\r\n            }),\r\n            m('.row.pt-1', [\r\n                m('.col-6.offset-6', [\r\n                    m('.float-right', [\r\n                        m('button.btn.btn-info.mr-2', { type: 'button', role: 'button', onclick: self.addRecord.bind(self) }, $.resx('add')),\r\n                        m('button.btn.btn-warning', {\r\n                            type: 'button', role: 'button',  disabled: !self.hasRecords(),\r\n                            onclick: self.hasRecords() ? self.deleteAllRecords.bind(self) : $.noop\r\n                        }, $.resx('deleteAll'))\r\n                    ])\r\n                ])\r\n            ])\r\n        ]);\r\n    };\r\n\r\n    return ShareForm;\r\n});","/*!\r\n * Wraps report filter form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.FilterForm = factory(root.m, root.$, root.Form, root.Help, root.Alertify, root.DatePicker);\r\n})(this, function(m, $, Form, Help, Alertify, DatePicker) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the filter form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function FilterForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.filter-table-wrapper', opts.content),\r\n            columns: {\r\n                id: { type: 'int' },\r\n                columnId: { type: 'int' },\r\n                operatorId: { type: 'int' },\r\n                criteria: { type: 'str' },\r\n                criteria2: { type: 'str' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: null, columnId: '', operatorId: '', criteria: null, criteria2: null },\r\n            dateFormat: opts.dateFormat\r\n        }, opts.filters || []);\r\n\r\n        this.isProc = opts.isProc;\r\n        this.saveFiltersUrl = opts.saveFiltersUrl;\r\n        this.filterOperators = opts.filterOperators || [];\r\n        this.filterOperatorIds = opts.filterOperatorIds || {};\r\n        this.filterTypes = opts.filterTypes || {};\r\n        this.dateOperators = opts.dateOperators || [];\r\n        this.lookups = opts.lookups || [];\r\n        this.dataTable = opts.dataTable;\r\n        this.columnFn = opts.columnFn;\r\n    }\r\n\r\n    FilterForm.prototype = Object.create(Form.prototype);\r\n    FilterForm.prototype.constructor = FilterForm;\r\n\r\n    /**\r\n     * Build the options select list for the boolean filter.\r\n     */\r\n    FilterForm.prototype.boolOptions = [\r\n        m('option', { value: '' }, $.resx('select')),\r\n        m('option', { value: 1 }, $.resx('report.true')),\r\n        m('option', { value: 0 }, $.resx('report.false'))\r\n    ];\r\n\r\n    /**\r\n     * Set the columnId for a filter and unset the criteria.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered showing the picker.\r\n     */\r\n    FilterForm.prototype.setColumnId = function(index, e) {\r\n        var val = this.targetVal(e) * 1;\r\n        if (this.records[index].columnId !== val) {\r\n            this.records[index].columnId = val;\r\n            this.records[index].operatorId = '';\r\n            this.records[index].criteria = null;\r\n            this.records[index].criteria2 = null;\r\n            this.run();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the operatorId for a filter and unset the criteria.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered showing the picker.\r\n     */\r\n    FilterForm.prototype.setOperator = function(index, e) {\r\n        this.set(index, 'operatorId', e);\r\n    };\r\n\r\n    /**\r\n     * Set the criteria for a filter.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered the update.\r\n     */\r\n    FilterForm.prototype.setCriteria = function(index, e) {\r\n        var node = e.target;\r\n        if (node && node.nodeName === 'SELECT' && node.hasAttribute('multiple') && node.options) {\r\n            this.records[index].criteriaJson = Array.apply(null, node.options).filter(function(x) { return x.selected; }).map(function(x) { return x.value || x.text; });\r\n        }\r\n        this.set(index, 'criteria', e);\r\n    };\r\n\r\n    /**\r\n     * Set the criteria for a date filter.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {string} field - Name of field to set.\r\n     * @param {Date} val - Date value to save.\r\n     */\r\n    FilterForm.prototype.setDate = function(index, field, val) {\r\n        this.set(index, field, $.fecha.format(val, 'YYYY-MM-DD HH:mm'));\r\n    };\r\n\r\n    /**\r\n     * Save filters to the server then reload the table data.\r\n     */\r\n    FilterForm.prototype.saveFilters = function() {\r\n        if ($.getAll('.mform-control-error', this.container).length > 0) {\r\n            Alertify.error($.resx('fixIt'));\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: 'PUT',\r\n            url: self.saveFiltersUrl,\r\n            data: self.records\r\n        }, function(data) {\r\n            if (data) {\r\n                self.changed = false;\r\n                if ($.isArray(data.filters)) {\r\n                    data.filters.forEach(function(x, i) { self.records[i].id = x.id; });\r\n                }\r\n            }\r\n            if (self.dataTable) {\r\n                self.dataTable.loadData();\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Build the criteria input(s) for a filter.\r\n     * @param {number} index - Index of the filter to build.\r\n     * @returns {Object} Mithril node containing the criteria input(s).\r\n     */\r\n    FilterForm.prototype.criteriaView = function(index) {\r\n        var filter = this.records[index];\r\n        var column = $.hasPositiveValue(filter.columnId) ? $.findByKey(this.columnFn(), 'id', filter.columnId) : null;\r\n        if (column === null || !$.hasPositiveValue(filter.operatorId)) {\r\n            return m('input.form-control', { disabled: true, placeholder: $.resx('report.filterCriteria') });\r\n        }\r\n\r\n        var criteria = null;\r\n        var attrs = {\r\n            name: 'ReportFilter[' + index + '].Criteria',\r\n            id: 'ReportFilter_' + index + '_Criteria',\r\n            class: 'form-control required' + this.withError(filter.criteria),\r\n            placeholder: $.resx('report.filterCriteria'),\r\n            oninput: this.setCriteria.bind(this, index)\r\n        };\r\n        if (!this.opts.allowEdit) {\r\n            attrs.disabled = true;\r\n        }\r\n\r\n        if (column.filterTypeId !== this.filterTypes.select) {\r\n            attrs.value = filter.criteria;\r\n        }\r\n        var isRange = filter.operatorId === this.filterOperatorIds.range;\r\n\r\n        switch (column.filterTypeId) {\r\n            case this.filterTypes.boolean:\r\n                attrs.class += ' custom-select';\r\n                criteria = m('select', attrs, this.boolOptions);\r\n                break;\r\n            case this.filterTypes.date:\r\n                if (filter.operatorId === this.filterOperatorIds.dateInterval) {\r\n                    attrs.class += ' custom-select';\r\n                    criteria = m('select', attrs, this.withOptions(this.dateOperators, filter.criteria * 1, 'id', 'name'));\r\n                } else {\r\n                    criteria = m(DatePicker, {\r\n                        name: attrs.name, required: true, date: filter.criteria, disabled: !this.opts.allowEdit,\r\n                        onchange: this.setDate.bind(this, index, 'criteria'), format: this.dateFormat,\r\n                        class: isRange ? 'col' : null\r\n                    });\r\n                }\r\n                break;\r\n            case this.filterTypes.select:\r\n                if (filter.operatorId !== this.filterOperatorIds.equal) {\r\n                    attrs.multiple = true;\r\n                } else {\r\n                    attrs.class += ' custom-select';\r\n                }\r\n\r\n                try {\r\n                    if (filter.criteria.substring(0, 1) === '[') {\r\n                        filter.criteriaJson = JSON.parse(filter.criteria);\r\n                    }\r\n                } catch (e) {\r\n                    // do nothing\r\n                }\r\n\r\n                if (!filter.criteriaJson) {\r\n                    attrs.value = filter.criteria;\r\n                }\r\n\r\n                var lookup = $.isArray(this.lookups[filter.columnId]) ? this.lookups[filter.columnId] : [];\r\n                criteria = m('select', attrs, this.withOptions(lookup, filter.criteriaJson, 'value', 'text'));\r\n                break;\r\n            default:\r\n                attrs.type = column.filterTypeId === this.filterTypes.numeric ? 'number' : 'text';\r\n                criteria = m('input', attrs);\r\n        }\r\n\r\n        if (!isRange) {\r\n            return criteria;\r\n        }\r\n\r\n        var isDatePicker = column.filterTypeId === this.filterTypes.date && filter.operatorId !== this.filterOperatorIds.dateInterval;\r\n        var attrs2 = {\r\n            name: 'ReportFilter[' + index + '].Criteria2',\r\n            id: 'ReportFilter_' + index + '_Criteria2',\r\n            class: 'form-control required' + this.withError(filter.criteria2, null, column.filterTypeId === this.filterTypes.date),\r\n            placeholder: $.resx('report.filterCriteria2'),\r\n            onchange: isDatePicker ? this.setDate.bind(this, index, 'criteria2') : this.set.bind(this, index, 'criteria2'),\r\n            value: filter.criteria2,\r\n            type: column.filterTypeId === this.filterTypes.numeric ? 'number' : 'text'\r\n        };\r\n        if (!this.opts.allowEdit) {\r\n            attrs2.disabled = true;\r\n        }\r\n        var criteriaArr = [criteria];\r\n        if (isDatePicker) {\r\n            criteriaArr.push(m(DatePicker, {\r\n                name: attrs2.name, required: true, date: filter.criteria2, disabled: !this.opts.allowEdit,\r\n                onchange: this.setDate.bind(this, index, 'criteria2'), format: this.dateFormat, class: 'col'\r\n            }));\r\n        } else {\r\n            criteriaArr.push(m('input', attrs2));\r\n        }\r\n        return criteriaArr;\r\n    };\r\n\r\n    /**\r\n     * Build the operator dropdown for a filter.\r\n     * @param {number} index - Index of the filter to build.\r\n     * @param {Object} column - Column that the filter is for.\r\n     * @returns {Object} Mithril node containing the operator select.\r\n     */\r\n    FilterForm.prototype.operatorView = function(index, column) {\r\n        return m('select.form-control.required.custom-select', this.withDisabled({\r\n            name: 'ReportFilter[' + index + '].OperatorId', id: 'ReportFilter_' + index + '_OperatorId',\r\n            class: column ? this.withError(this.records[index].operatorId) : null,\r\n            placeholder: $.resx('report.filterOperator'), onchange: this.setOperator.bind(this, index), value: this.records[index].operatorId\r\n        }, !column || !this.opts.allowEdit),\r\n        this.withOptions(column && $.hasPositiveValue(column.filterTypeId) ? this.filterOperators[column.filterTypeId] : [{ id: 0, name: $.resx('report.filterOperator') }],\r\n            this.records[index].operatorId, 'id', 'name')\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Build the filters.\r\n     * @returns {Object[]} Array of Mithril nodes containing the filters.\r\n     */\r\n    FilterForm.prototype.filterView = function() {\r\n        if (!this.columnFn()) {\r\n            return null;\r\n        }\r\n\r\n        var self = this;\r\n        return this.records.map(function(x, index) {\r\n            var column = $.hasPositiveValue(x.columnId) ? $.findByKey(self.columnFn(), 'id', x.columnId) : null;\r\n\r\n            var attrs = {\r\n                name: 'ReportFilter[' + index + '].ColumnId', class: 'form-control custom-select required' + self.withError(x.columnId, true),\r\n                placeholder: $.resx('report.filterColumn'), onchange: self.setColumnId.bind(self, index), value: x.columnId\r\n            };\r\n            if (!self.opts.allowEdit) {\r\n                attrs.disabled = true;\r\n            }\r\n\r\n            var filterColumns = self.isProc ? self.columnFn().filter(function(x) { return x.isParam; }) : self.columnFn();\r\n\r\n            return m('.row.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even' }, [\r\n                m('input', { type: 'hidden', name: 'ReportFilter[' + index + '].Id', value: x.id }),\r\n                m('input', { type: 'hidden', name: 'ReportFilter[' + index + '].DisplayOrder', value: index }),\r\n                m('.col-4',\r\n                    self.withHelp($.resx('report.filterColumnText'), m('select', attrs, self.withOptions(filterColumns, x.columnId, 'id', 'title')))\r\n                ),\r\n                m('.col-2',\r\n                    self.withHelp($.resx('report.filterOperatorText'), self.operatorView.call(self, index, column))\r\n                ),\r\n                m('.col-5',\r\n                    self.withHelp($.resx('report.filterCriteriaText'), self.criteriaView.call(self, index))\r\n                ),\r\n                m('.col-1', self.opts.allowEdit ? self.buttonView.call(self, index, false) : null)\r\n            ]);\r\n        });\r\n    };\r\n\r\n    /**\r\n    * Create the view for the share form.\r\n    * @returns {Object} Mithril node containing the share form.\r\n    */\r\n    FilterForm.prototype.view = function() {\r\n        return [\r\n            this.filterView(),\r\n            this.opts.allowEdit ? m('.row.pt-1', [\r\n                m('.col-6', m('button.btn.btn-primary', {\r\n                    type: 'button', role: 'button', onclick: this.saveFilters.bind(this)\r\n                }, $.resx('save'))),\r\n                m('.col-6', [\r\n                    m('.float-right', [\r\n                        m('button.btn.btn-info.mr-2', {\r\n                            type: 'button', role: 'button', onclick: this.addRecord.bind(this),\r\n                        }, $.resx('add')),\r\n                        m('button.btn.btn-warning.mr-2', {\r\n                            type: 'button', role: 'button', disabled: !this.hasRecords(),\r\n                            onclick: this.hasRecords() ? this.deleteAllRecords.bind(this) : $.noop\r\n                        }, $.resx('deleteAll')),\r\n                        m(Help, { enabled: this.opts.wantsHelp, message: $.resx('report.filterText') })\r\n                    ])\r\n                ])\r\n            ]) : null\r\n        ];\r\n    };\r\n\r\n    return FilterForm;\r\n});","/*!\r\n * Wraps report group form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.GroupForm = factory(root.m, root.$, root.Form, root.Help, root.Alertify);\r\n})(this, function(m, $, Form, Help, Alertify) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the group form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function GroupForm(opts) {\r\n        Form.call(this, {\r\n            container: $.get('.group-table-wrapper', opts.content),\r\n            columns: {\r\n                id: { type: 'int' },\r\n                columnId: { type: 'int' },\r\n                operatorId: { type: 'int' },\r\n                criteria: { type: 'str' },\r\n                criteria2: { type: 'str' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: null, columnId: '', displayOrder: 0 }\r\n        }, opts.groups || []);\r\n\r\n        this.isProc = opts.isProc;\r\n        this.saveGroupsUrl = opts.saveGroupsUrl;\r\n        this.aggregator = opts.aggregatorId === 0 ? '' : opts.aggregatorId;\r\n        this.aggregators = opts.aggregators || [];\r\n        this.dataTable = opts.dataTable;\r\n        this.columnFn = opts.columnFn;\r\n    }\r\n\r\n    GroupForm.prototype = Object.create(Form.prototype);\r\n    GroupForm.prototype.constructor = GroupForm;\r\n\r\n    /**\r\n     * Save groups to the server then reload the table data.\r\n     */\r\n    GroupForm.prototype.saveGroups = function() {\r\n        if ($.getAll('.mform-control-error', this.container).length > 0) {\r\n            Alertify.error($.resx('fixIt'));\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: 'PUT',\r\n            url: self.saveGroupsUrl,\r\n            data: { groupAggregator: this.aggregator === '' ? 0 : this.aggregator, groups: this.records }\r\n        }, function(data) {\r\n            if (data) {\r\n                if ($.isArray(data.groups)) {\r\n                    data.groups.forEach(function(x, i) { self.records[i].id = x.id; });\r\n                }\r\n            }\r\n            if (self.dataTable) {\r\n                self.dataTable.loadData();\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Set the aggregator property.\r\n     * @param {Event} e - Event that triggered the function.\r\n     */\r\n    GroupForm.prototype.setAggregator = function(e) {\r\n        this.aggregator = this.targetVal(e);\r\n    };\r\n\r\n    /**\r\n     * Build the groups.\r\n     * @returns {Object[]} Array of Mithril nodes containing the groups.\r\n     */\r\n    GroupForm.prototype.groupView = function() {\r\n        if (!this.columnFn()) {\r\n            return null;\r\n        }\r\n\r\n        var self = this;\r\n        return this.records.map(function(x, index) {\r\n            x.displayOrder = index;\r\n            var attrs = {\r\n                name: 'ReportGroup[' + index + '].ColumnId', class: 'form-control custom-select required' + self.withError(x.columnId, true),\r\n                placeholder: $.resx('report.groupColumn'), onchange: self.set.bind(self, index, 'columnId'), value: x.columnId\r\n            };\r\n            if (!self.opts.allowEdit) {\r\n                attrs.disabled = true;\r\n            }\r\n            return m('.row.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even' }, [\r\n                m('input', { type: 'hidden', name: 'ReportGroup[' + index + '].Id', value: x.id }),\r\n                m('input', { type: 'hidden', name: 'ReportGroup[' + index + '].DisplayOrder', value: index }),\r\n                m('.col-10', [\r\n                    m('select', attrs, self.withOptions(self.columnFn(), x.columnId, 'id', 'title'))\r\n                ]),\r\n                m('.col-2', self.opts.allowEdit ? self.buttonView.call(self, index, true) : null)\r\n            ]);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Build the group form.\r\n     * @returns {Object} Mithril node containing the form.\r\n     */\r\n    GroupForm.prototype.view = function() {\r\n        if (this.isProc) {\r\n            return m('.table-wrapper.p-t-1.col-12', m('.card.card-info', m('.card-body', $.resx('report.errorProcNoGroups'))));\r\n        }\r\n\r\n        var attrs = {\r\n            name: 'Report.Aggregator', class: 'form-control custom-select', placeholder: $.resx('report.aggregator'),\r\n            onchange: this.setAggregator.bind(this), value: this.aggregator\r\n        };\r\n        if (!this.opts.allowEdit) {\r\n            attrs.disabled = true;\r\n        }\r\n        return m('.col-12.table-wrapper', m('.row', [\r\n            m('.col-2.mt-1', [\r\n                m('.row.form-group', [\r\n                    m('select', attrs, this.withOptions(this.aggregators, this.aggregator, 'id', 'name'))\r\n                ]),\r\n                this.opts.allowEdit ? m('.row.mt-1', m('button.btn.btn-primary', {\r\n                    type: 'button', role: 'button', onclick: this.saveGroups.bind(this)\r\n                }, $.resx('save'))) : null\r\n            ]),\r\n            m('.col-9.offset-1.mt-1', [\r\n                this.groupView(),\r\n                this.opts.allowEdit ? m('.row.pt-1', [\r\n                    m('.col-6.offset-6', [\r\n                        m('.btn-toolbar.float-right', [\r\n                            m('button.btn.btn-info.mr-1', {\r\n                                type: 'button', role: 'button', onclick: this.addRecord.bind(this)\r\n                            }, $.resx('add')),\r\n                            m('button.btn.btn-warning', {\r\n                                type: 'button', role: 'button', disabled: !this.hasRecords(),\r\n                                onclick: this.hasRecords() ? this.deleteAllRecords.bind(this) : $.noop\r\n                            }, $.resx('deleteAll')),\r\n                            m(Help, { enabled: this.opts.wantsHelp, message: $.resx('report.groupText') })\r\n                        ])\r\n                    ])\r\n                ]) : null\r\n            ])\r\n        ]));\r\n    };\r\n\r\n    return GroupForm;\r\n});","/*!\r\n * Wraps chart range form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.RangeForm = factory(root.m, root.$, root.Form, root.Help, root.Alertify, root.DashChart, root.ColorPicker);\r\n})(this, function(m, $, Form, Help, Alertify, DashChart, ColorPicker) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Build the range form.\r\n     * @param {Object} opts - Options for the form.\r\n     * @returns {Object} Form instance.\r\n     */\r\n    function RangeForm(opts) {\r\n        var ranges = opts.ranges || [];\r\n        ranges = opts.ranges.map(function(x) { x.isExpanded = false; return x; });\r\n\r\n        Form.call(this, {\r\n            container: $.get('.range-table-wrapper', opts.content),\r\n            columns: {\r\n                id: { type: 'int' },\r\n                reportId: { type: 'int' },\r\n                xAxisColumnId: { type: 'int' },\r\n                yAxisColumnId: { type: 'int' },\r\n                aggregatorId: { type: 'int' },\r\n                dateIntervalId: { type: 'int' },\r\n                color: { type: 'string' },\r\n                displayOrder: { type: 'int' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: null, reportId: '', xAxisColumnId: '', yAxisColumnId: '', aggregatorId: '', dateIntervalId: '', color: '', displayOrder: 0 }\r\n        }, ranges || []);\r\n\r\n        this.filterTypes = opts.filterTypes || {};\r\n        this.saveRangesUrl = opts.saveRangesUrl;\r\n        this.dateIntervals = opts.dateIntervals || [];\r\n        this.aggregators = opts.aggregators || [];\r\n        this.reports = opts.reports || [];\r\n        this.columns = opts.columns || [];\r\n        this.processJsonFn = opts.processJsonFn;\r\n        this.canExportFn = opts.canExportFn;\r\n        this.toggleExportFn = opts.toggleExportFn;\r\n    }\r\n\r\n    RangeForm.prototype = Object.create(Form.prototype);\r\n    RangeForm.prototype.constructor = RangeForm;\r\n\r\n    /**\r\n     * Save ranges to the server then rebuild the chart.\r\n     */\r\n    RangeForm.prototype.saveRanges = function() {\r\n        if ($.getAll('.mform-control-error', this.container).length > 0) {\r\n            Alertify.error($.resx('fixIt'));\r\n            return;\r\n        }\r\n\r\n        this.records.forEach(function(x, i) { x.displayOrder = i; });\r\n\r\n        var self = this;\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: self.saveRangesUrl,\r\n            data: { ranges: this.records }\r\n        }, function(data) {\r\n            if (data) {\r\n                self.changed = false;\r\n                if ($.isArray(data.ranges)) {\r\n                    data.ranges.forEach(function(x, i) { self.records[i].id = x.id; });\r\n                }\r\n                Alertify.success($.resx('chart.saveSuccessful'));\r\n                self.makeChart();\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Make the chart.\r\n     */\r\n    RangeForm.prototype.makeChart = function() {\r\n        var chartContent = $.get('.chart-container', this.content);\r\n        if (!(chartContent && chartContent.hasAttribute('data-url'))) {\r\n            return;\r\n        }\r\n        if (!(this.records && this.records.length > 0)) {\r\n            Alertify.error($.resx('chart.rangesRequired'));\r\n            return;\r\n        }\r\n\r\n        if (this.dashChart && this.dashChart.chart) {\r\n            this.dashChart.chart.destroy();\r\n        }\r\n\r\n        this.dashChart = new DashChart(chartContent, true, this.processJsonFn, null, this.toggleExportFn);\r\n    };\r\n\r\n    /**\r\n     * Export a chart as an image.\r\n     */\r\n    RangeForm.prototype.exportChart = function() {\r\n        if (!this.canExportFn()) {\r\n            return;\r\n        }\r\n        var chartContainer = $.get('.chart-container', this.content);\r\n        if (chartContainer) {\r\n            $.get('.export-width', this.content).value = chartContainer.offsetWidth;\r\n            $.get('.export-data', this.content).value = this.dashChart.chart.toBase64Image();\r\n            $.get('.export-form', this.content).submit();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set the operatorId for a filter and unset the criteria.\r\n     * @param {number} index - Index of the filter to update.\r\n     * @param {Event} e - Event that triggered.\r\n     */\r\n    RangeForm.prototype.setReport = function(index, e) {\r\n        if (this.set(index, 'reportId', e)) {\r\n            this.records[index].xAxisColumnId = '';\r\n            this.records[index].yAxisColumnId = '';\r\n            this.records[index].aggregatorId = '';\r\n            this.records[index].dateIntervalId = '';\r\n            this.run();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Expand/collapse the inputs for a range.\r\n     * @param {Object} record - Range object.\r\n     */\r\n    RangeForm.prototype.toggleExpanded = function(record) {\r\n        record.isExpanded = !record.isExpanded;\r\n    };\r\n\r\n    /**\r\n     * Build the ranges.\r\n     * @returns {Object[]} Array of Mithril nodes containing the ranges.\r\n     */\r\n    RangeForm.prototype.rangeView = function() {\r\n        if (!this.reports) {\r\n            return null;\r\n        }\r\n\r\n        var self = this;\r\n        return this.records.map(function(record, index) {\r\n            var report = record.reportId ? $.findByKey(self.columns, 'reportId', record.reportId) : null;\r\n            if (report && !report.xColumns) {\r\n                report.xColumns = $.clone(report.columns);\r\n                report.xColumns.unshift({ columnId: 0, title: $.resx('chart.xAxisColumn') });\r\n                report.yColumns = $.clone(report.columns);\r\n                report.yColumns.unshift({ columnId: 0, title: $.resx('chart.yAxisColumn') });\r\n            }\r\n\r\n            var dateIntervalDisabled = true;\r\n            var inputsDisabled = !(self.opts.allowEdit && report);\r\n            if (!inputsDisabled && self.filterTypes) {\r\n                var col = $.findByKey(report.columns, 'columnId', record.xAxisColumnId * 1);\r\n                if (col && col.filterTypeId === self.filterTypes.date) {\r\n                    // show for date\r\n                    dateIntervalDisabled = false;\r\n                }\r\n            }\r\n\r\n            return m('.col-12.wrapper-row', { class: index % 2 === 1 ? 'odd' : 'even', key: record._index }, [\r\n                m('.row', [\r\n                    m('input', { type: 'hidden', name: 'ChartRange[' + index + '].Id', value: record.id }),\r\n                    m('.col-4',\r\n                        self.withHelp($.resx('chart.reportText'), [\r\n                            m('span.input-group-prepend', m('button.btn.btn-secondary', { onclick: self.toggleExpanded.bind(self, record) },\r\n                                m('i.dash', { class: record.isExpanded ? 'dash-minus' : 'dash-plus' })\r\n                            )),\r\n                            m('select.form-control.custom-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].ReportId', class: self.withError(record.reportId, true),\r\n                                placeholder: $.resx('chart.report'), onchange: self.setReport.bind(self, index), value: record.reportId\r\n                            }, !self.opts.allowEdit), self.withOptions(self.reports, record.reportId, 'id', 'name'))\r\n                        ])\r\n                    ),\r\n                    m('.col-3',\r\n                        self.withHelp($.resx('chart.xAxisColumnText'),\r\n                            m('select.form-control.custom-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].XAxisColumnId', id: 'xAxisColumnId' + index, class: report ? self.withError(record.xAxisColumnId, true) : null,\r\n                                placeholder: $.resx('chart.xAxisColumn'), onchange: self.set.bind(self, index, 'xAxisColumnId'), value: record.xAxisColumnId\r\n                            }, inputsDisabled), self.withOptions(report ? report.xColumns : [{ columnId: 0, title: $.resx('chart.xAxisColumn') }], record.xAxisColumnId, 'columnId', 'title'))\r\n                        )\r\n                    ),\r\n                    m('.col-3',\r\n                        self.withHelp($.resx('chart.yAxisColumnText'),\r\n                            m('select.form-control.custom-select.required', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].YAxisColumnId', id: 'yAxisColumnId' + index, class: report ? self.withError(record.yAxisColumnId, true) : null,\r\n                                placeholder: $.resx('chart.yAxisColumn'), onchange: self.set.bind(self, index, 'yAxisColumnId'), value: record.yAxisColumnId\r\n                            }, inputsDisabled), self.withOptions(report ? report.yColumns : [{ columnId: 0, title: $.resx('chart.yAxisColumn') }], record.yAxisColumnId, 'columnId', 'title'))\r\n                        )\r\n                    ),\r\n                    m('.col-2', self.opts.allowEdit ? self.buttonView.call(self, index, true) : null)\r\n                ]),\r\n                m('.row', { class: record.isExpanded ? '' : ' hidden' }, [\r\n                    m('.col-4.offset-1',\r\n                        self.withHelp($.resx('chart.aggregatorText'),\r\n                            m('select.form-control.custom-select', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].AggregatorId', id: 'aggregatorId' + index,\r\n                                placeholder: $.resx('chart.aggregator'), onchange: self.set.bind(self, index, 'aggregatorId'), value: record.aggregatorId\r\n                            }, inputsDisabled), self.withOptions(self.aggregators, record.aggregatorId, 'id', 'name'))\r\n                        )\r\n                    ),\r\n                    m('.col-4',\r\n                        self.withHelp($.resx('chart.dateIntervalText'),\r\n                            m('select.form-control.custom-select', self.withDisabled({\r\n                                name: 'ChartRange[' + index + '].DateIntervalId', id: 'dateIntervalId' + index,\r\n                                placeholder: $.resx('chart.dateInterval'), onchange: self.set.bind(self, index, 'dateIntervalId'), value: record.dateIntervalId\r\n                            }, dateIntervalDisabled), self.withOptions(self.dateIntervals, record.dateIntervalId, 'id', 'name'))\r\n                        )\r\n                    ),\r\n                    m('.col-2', [\r\n                        self.withHelp($.resx('chart.colorText'),\r\n                            m(ColorPicker, {\r\n                                name: 'ChartRange[' + index + '].Color', value: record.color, disabled: inputsDisabled,\r\n                                onSelect: self.set.bind(self, index, 'color')\r\n                            })\r\n                        ),\r\n                    ])\r\n                ])\r\n            ]);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Build the range form.\r\n     * @returns {Object} Mithril node containing the form.\r\n     */\r\n    RangeForm.prototype.view = function() {\r\n        return [\r\n            this.rangeView(),\r\n            m('.row.pt-1', [\r\n                m('.col-6', [\r\n                    m('.btn-toolbar', [\r\n                        this.opts.allowEdit ? m('button.btn.btn-primary.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.saveRanges.bind(this)\r\n                        }, $.resx('save')) : null,\r\n                        m('button.btn.btn-info', {\r\n                            type: 'button', role: 'button', onclick: this.exportChart.bind(this), disabled: !this.canExportFn()\r\n                        }, $.resx('export'))\r\n                    ])\r\n                ]),\r\n                this.opts.allowEdit ? m('.col-6.float-right', [\r\n                    m('.float-right', [\r\n                        m('button.btn.btn-info.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.addRecord.bind(this)\r\n                        }, $.resx('add')),\r\n                        m('button.btn.btn-warning.mr-1', {\r\n                            type: 'button', role: 'button', onclick: this.deleteAllRecords.bind(this), disabled: !this.hasRecords()\r\n                        }, $.resx('deleteAll')),\r\n                        m(Help, { enabled: this.opts.wantsHelp, message: $.resx('chart.rangeText') })\r\n                    ])\r\n                ]) : null\r\n            ])\r\n        ];\r\n    };\r\n\r\n    return RangeForm;\r\n});","/*!\r\n * Wraps dataset form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.Dataset = factory(root.m, root.$, root.Alertify, root.Form, root.Autocomplete, root.Help, root.JoinForm, root.ColumnForm);\r\n})(this, function(m, $, Alertify, Form, Autocomplete, Help, JoinForm, ColumnForm) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare Dataset class.\r\n     * @param {Object} opts - Dataset settings\r\n     */\r\n    function Dataset(opts) {\r\n        opts = opts || {};\r\n        if (opts.columns) {\r\n            opts.columns.forEach(function(x) { x.isExpanded = false; });\r\n        }\r\n\r\n        this.sourceList = null;\r\n        this.columnList = null;\r\n        this.formChanged = false;\r\n        this.selectedSourceList = [];\r\n        this.content = opts.content;\r\n\r\n        this.checkType(false);\r\n        this.loadSourceList();\r\n        this.loadColumnList();\r\n\r\n        this.joinForm = new JoinForm({\r\n            content: opts.content,\r\n            wantsHelp: opts.wantsHelp,\r\n            joins: opts.joins,\r\n            joinTypes: opts.joinTypes,\r\n            sourceFn: this.getSourceList.bind(this),\r\n            columnUpdateFn: this.loadColumnList.bind(this)\r\n        });\r\n        this.joinForm.run();\r\n        \r\n        this.columnForm = new ColumnForm({\r\n            content: opts.content,\r\n            wantsHelp: opts.wantsHelp,\r\n            columns: opts.columns,\r\n            dataTypes: opts.dataTypes,\r\n            filterTypes: opts.filterTypes,\r\n            sourceFn: this.getSourceList.bind(this),\r\n            columnFn: this.getColumnList.bind(this),\r\n            selectedSourceFn: this.getSelectedSourceList.bind(this)\r\n        });\r\n        this.columnForm.run();\r\n\r\n        $.onChange($.get('.dataset-database', this.content), this.loadSourceList.bind(this), false);\r\n        $.onChange($.get('.dataset-type', this.content), this.checkType.bind(this), false);\r\n\r\n        var self = this;\r\n        var primary = $.get('.dataset-primary-source', this.content);\r\n        if (primary) {\r\n            m.mount(primary, {\r\n                view: function() {\r\n                    return m(Help, { message: $.resx('dataset.primarySourceHelp'), enabled: opts.wantsHelp }, m(Autocomplete, {\r\n                        name: 'PrimarySource',\r\n                        class: 'primary-source-autocomplete',\r\n                        value: primary.getAttribute('data-value'),\r\n                        required: true,\r\n                        list: self.getSourceList.bind(self),\r\n                        onSelect: self.updateColumnList.bind(self),\r\n                        onCancel: self.updateColumnList.bind(self)\r\n                    }));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    Dataset.prototype = {\r\n        /**\r\n         * Build a list of all tables used by this dataset.\r\n         * @returns {bool} Returns true if list has changed, else false.\r\n         */\r\n        updateSelectedSources: function() {\r\n            var list = [];\r\n            var primarySource = $.get('.primary-source-autocomplete', this.content);\r\n            if (primarySource && primarySource.value) {\r\n                list.push(primarySource.value);\r\n            }\r\n            if (this.joinForm) {\r\n                this.joinForm.records.map(function(x) { list.push(x.tableName); });\r\n            }\r\n            list = list.filter(function(x) {\r\n                return !$.isNull(x) && x.length > 0;\r\n            });\r\n            if (!$.equals(list, this.selectedSourceList)) {\r\n                this.selectedSourceList = list;\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Check if the dataset is using a proc instead of tables.\r\n         * @param {bool} updateList - If true update the table/proc list.\r\n         */\r\n        checkType: function(updateList) {\r\n            var type = $.get('.dataset-type', this.content);\r\n            if (!type) {\r\n                return;\r\n            }\r\n            if ($.coalesce(updateList, true)) {\r\n                this.loadSourceList();\r\n            }\r\n            if (this.joinForm) {\r\n                this.joinForm.isProc = type.value * 1 === 2;\r\n                this.joinForm.run();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Fetch a list of available columns from the server. Autocompletes will update automatically.\r\n         */\r\n        loadColumnList: function() {\r\n            var url = this.content.getAttribute('data-column-url');\r\n            var database = $.get('.dataset-database', this.content);\r\n            if (!(url && database && $.hasPositiveValue(database.value))) {\r\n                this.columnList = [];\r\n                return;\r\n            }\r\n\r\n            if (this.updateSelectedSources()) {\r\n                // only run if sources are different from last request to avoid unnecessary traffic\r\n                var self = this;\r\n                $.ajax({\r\n                    method: 'POST',\r\n                    url: url,\r\n                    data: { databaseId: database.value, tables: self.selectedSourceList }\r\n                }, function(columns) {\r\n                    self.columnList = columns && columns.length ? columns : [];\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Fetch a list of tables from the server. Autocompletes will update automatically.\r\n         */\r\n        loadSourceList: function() {\r\n            var url = this.content.getAttribute('data-table-url');\r\n            var database = $.get('.dataset-database', this.content);\r\n            var type = $.get('.dataset-type', this.content);\r\n            if (!(url && database && type)) {\r\n                return;\r\n            }\r\n            if (!$.hasPositiveValue(database.value) || !$.hasPositiveValue(type.value)) {\r\n                this.sourceList = [];\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: url,\r\n                data: { databaseId: database.value, typeId: type.value }\r\n            }, function(tables) {\r\n                self.sourceList = tables && tables.length ? tables : [];\r\n                self.loadColumnList();\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get the list of table for the autocomplete.\r\n         * @returns {string[]} Returns array of tables.\r\n         */\r\n        getSourceList: function() {\r\n            return this.sourceList;\r\n        },\r\n\r\n        /**\r\n         * Get the list of selected tables.\r\n         * @returns {string[]} Returns array of tables.\r\n         */\r\n        getSelectedSourceList: function() {\r\n            return this.selectedSourceList;\r\n        },\r\n\r\n        /**\r\n         * Get the list of columns for the autocomplete.\r\n         * @returns {string[]} Returns array of columns.\r\n         */\r\n        getColumnList: function() {\r\n            return this.columnList;\r\n        },\r\n\r\n        /**\r\n         * Refresh the column list.\r\n         */\r\n        updateColumnList: function() {\r\n            // need timeout delay so the field value is updated before we load the list\r\n            setTimeout(this.loadColumnList.bind(this), 10);\r\n        },\r\n\r\n        /**\r\n         * Clean up our mess.\r\n         */\r\n        destroy: function() {\r\n            $.destroy(this.columnForm);\r\n            $.destroy(this.joinForm);\r\n\r\n            var primary = $.get('.dataset-primary-source', this.content);\r\n            if (primary) {\r\n                m.mount(primary, null);\r\n            }\r\n        }\r\n    };\r\n\r\n    return Dataset;\r\n});","/*!\r\n * Wraps shared functionality for report and chart detail pages.\r\n */\r\n(function(root, factory) {\r\n    root.BaseDetails = factory(root.$, root.Alertify, root.Prism);\r\n})(this, function($, Alertify, Prism) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare base details class.\r\n     * @param {Object} opts - Form settings\r\n     */\r\n    function BaseDetails(opts) {\r\n        opts = opts || {};\r\n        this.content = opts.content;\r\n        this.columnList = opts.columns || [];\r\n\r\n        $.on($.get('.view-sql', opts.content), 'click', function() {\r\n            $.dialogs.openDialog($.get('.modal-sql', opts.content).outerHTML);\r\n        });\r\n        \r\n        if (!opts.allowEdit) {\r\n            this.initDate = new Date();\r\n        }\r\n        \r\n    }\r\n\r\n    BaseDetails.prototype = {\r\n        /**\r\n         * Handle the result of a query for report data.\r\n         * @param {Object} json - Query result.\r\n         * @returns {bool}  True if data is valid.\r\n         */\r\n        processJson: function(json) {\r\n            if (json.updatedDate && this.initDate) {\r\n                var updateDate = new Date(json.updatedDate);\r\n                if (updateDate && updateDate > this.initDate) {\r\n                    // report has been modified - warn the user to refresh\r\n                    Alertify.error($.resx('reportModified'));\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if (json.dataSql) {\r\n                this.setSql($.get('.sql-data-content', this.content), json.dataSql, json.dataError);\r\n            }\r\n            if (json.countSql) {\r\n                this.setSql($.get('.sql-count-content', this.content), json.countSql, json.countError);\r\n            }\r\n\r\n            if ($.isNull(json.rows)) {\r\n                Alertify.error($.resx('errorConnectingToDataSource'));\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Show sql and error message in the correct place.\r\n         * @param {Node} node - DOM node to update.\r\n         * @param {string} sql - SQL statement to display.\r\n         * @param {string} error - Error to display if any.\r\n         */\r\n        setSql: function(node, sql, error) {\r\n            if (node) {\r\n                var elem = $.get('.sql-text', node);\r\n                if (elem) {\r\n                    elem.textContent = sql;\r\n                    Prism.highlightElement(elem);\r\n                }\r\n                elem = $.get('.sql-error', node);\r\n                if (elem) {\r\n                    elem.textContent = error || '';\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the list of columns for the autocomplete.\r\n         * @returns {string[]} Returns array of columns.\r\n         */\r\n        getColumnList: function() {\r\n            return this.columnList;\r\n        }\r\n    };\r\n\r\n    return BaseDetails;\r\n});","/*!\r\n * Wraps report form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.ReportDetails = factory(root.m, root.$, root.Alertify, root.BaseDetails, root.FilterForm, root.GroupForm, root.Table);\r\n})(this, function(m, $, Alertify, BaseDetails, FilterForm, GroupForm, Table) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare ReportDetails class.\r\n     * @param {Object} opts - Report settings\r\n     */\r\n    function ReportDetails(opts) {\r\n        opts = opts || {};\r\n\r\n        BaseDetails.call(this, opts);\r\n\r\n        if (!(opts.reportColumns && opts.reportColumns.length)) {\r\n            return;\r\n        }\r\n\r\n        this.isProc = opts.loadAllData;\r\n\r\n        var self = this;\r\n        var saveUrl = opts.saveColumnsUrl;\r\n        var saveStorageFunc = $.debounce(!opts.allowEdit ? $.noop : function(settings) {\r\n            if ($.isNull(self.dataTable.previousColumnWidths) || !$.equals(settings.columnWidths, self.dataTable.previousColumnWidths)) {\r\n                $.ajax({\r\n                    method: 'PUT',\r\n                    url: saveUrl,\r\n                    data: { columnWidths: settings.columnWidths, reportWidth: settings.width },\r\n                    block: false\r\n                });\r\n                self.dataTable.previousColumnWidths = settings.columnWidths;\r\n            }\r\n        }, 250);\r\n\r\n        this.dataTable = new Table({\r\n            content: $.get('.report-data-container', opts.content),\r\n            url: opts.dataUrl + '?save=true',\r\n            requestMethod: 'POST',\r\n            searchable: false,\r\n            loadAllData: opts.loadAllData,\r\n            editable: opts.allowEdit,\r\n            headerButtons: [m('a.btn.btn-primary', { href: opts.exportUrl, target: '_blank' }, $.resx('export'))],\r\n            itemsPerPage: opts.rowLimit,\r\n            currentStartItem: 0,\r\n            sorting: opts.sortColumns || [],\r\n            storageFunction: saveStorageFunc,\r\n            width: opts.width,\r\n            columns: opts.reportColumns || [],\r\n            displayDateFormat: opts.dateFormat,\r\n            displayCurrencyFormat: opts.currencyFormat,\r\n            dataCallback: this.processJson.bind(this),\r\n            errorCallback: this.processJson.bind(this)\r\n        });\r\n        this.dataTable.previousColumnWidths = opts.reportColumns.map(function(x) { return { field: x.field, width: x.width * 1.0 }; });\r\n\r\n        this.filterForm = new FilterForm({\r\n            content: opts.content,\r\n            filters: opts.filters,\r\n            columns: {\r\n                id: { type: 'int' },\r\n                columnId: { type: 'int' },\r\n                operatorId: { type: 'int' },\r\n                criteria: { type: 'str' },\r\n                criteria2: { type: 'str' }\r\n            },\r\n            appendRecord: true,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            newRecord: { id: null, columnId: '', operatorId: '', criteria: null, criteria2: null },\r\n            dateFormat: opts.dateFormat,\r\n            saveFiltersUrl: opts.saveFiltersUrl,\r\n            filterOperators: opts.filterOperators,\r\n            filterOperatorIds: opts.filterOperatorIds,\r\n            filterTypes: opts.filterTypes,\r\n            dateOperators: opts.dateOperators,\r\n            lookups: opts.lookups,\r\n            isProc: opts.isProc,\r\n            dataTable: this.dataTable,\r\n            columnFn: this.getColumnList.bind(this)\r\n        });\r\n        this.filterForm.run();\r\n        \r\n        this.groupForm = new GroupForm({\r\n            content: opts.content,\r\n            groups: opts.groups,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            saveGroupsUrl: opts.saveGroupsUrl,\r\n            aggregatorId: opts.aggregatorId,\r\n            aggregator: opts.aggregator,\r\n            aggregators: opts.aggregators,\r\n            isProc: opts.isProc,\r\n            dataTable: this.dataTable,\r\n            columnFn: this.getColumnList.bind(this)\r\n        });\r\n        this.groupForm.run();\r\n    }\r\n\r\n    ReportDetails.prototype = Object.create(BaseDetails.prototype);\r\n    ReportDetails.prototype.constructor = BaseDetails;\r\n\r\n    /**\r\n     * Handle the result of a query for report data.\r\n     * @param {Object} json - Query result.\r\n     * @returns {bool}  True if data is valid.\r\n     */\r\n    ReportDetails.prototype.processJson = function(json) {\r\n        if (json.updatedDate && this.initDate) {\r\n            var updateDate = new Date(json.updatedDate);\r\n            if (updateDate && updateDate > this.initDate) {\r\n                // report has been modified - warn the user to refresh\r\n                Alertify.error($.resx('reportModified'));\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (json.dataSql) {\r\n            this.setSql($.get('.sql-data-content', this.content), json.dataSql, json.dataError);\r\n        }\r\n        if (json.countSql) {\r\n            this.setSql($.get('.sql-count-content', this.content), json.countSql, json.countError);\r\n        }\r\n\r\n        if ($.isNull(json.rows)) {\r\n            Alertify.error($.resx('errorConnectingToDataSource'));\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Clean up our mess.\r\n     */\r\n    ReportDetails.prototype.destroy = function() {\r\n        $.destroy(this.dataTable);\r\n        $.destroy(this.filterForm);\r\n        $.destroy(this.groupForm);\r\n    };\r\n\r\n    return ReportDetails;\r\n});","/*!\r\n * Wraps report form functionality.\r\n */\r\n(function(root, factory) {\r\n    root.ChartDetails = factory(root.$, root.Alertify, root.BaseDetails, root.RangeForm);\r\n})(this, function($, Alertify, BaseDetails, RangeForm) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Declare ChartDetails class.\r\n     * @param {Object} opts - Report settings\r\n     */\r\n    function ChartDetails(opts) {\r\n        opts = opts || {};\r\n\r\n        BaseDetails.call(this, opts);\r\n\r\n        this.enableExport = false;\r\n\r\n        this.rangeForm = new RangeForm({\r\n            content: opts.content,\r\n            ranges: opts.ranges,\r\n            allowEdit: opts.allowEdit,\r\n            wantsHelp: opts.wantsHelp,\r\n            filterTypes: opts.filterTypes || {},\r\n            saveRangesUrl: opts.saveRangesUrl,\r\n            dateIntervals: opts.dateIntervals,\r\n            aggregators: opts.aggregators,\r\n            reports: opts.reports,\r\n            columns: opts.columns,\r\n            processJsonFn: this.processJson.bind(this),\r\n            canExportFn: this.canExport.bind(this),\r\n            toggleExportFn: this.toggleExport.bind(this)\r\n        });\r\n        this.rangeForm.run();\r\n\r\n        if (this.rangeForm.records && this.rangeForm.records.length) {\r\n            this.rangeForm.makeChart();\r\n        }\r\n    }\r\n\r\n    ChartDetails.prototype = Object.create(BaseDetails.prototype);\r\n    ChartDetails.prototype.constructor = BaseDetails;\r\n\r\n    /**\r\n     * Handle the result of a query for report data.\r\n     * @param {Object} json - Query result.\r\n     * @returns {bool}  True if data is valid.\r\n     */\r\n    ChartDetails.prototype.processJson = function(json) {\r\n        if (json.updatedDate && this.initDate) {\r\n            var updateDate = new Date(json.updatedDate);\r\n            if (updateDate && updateDate > this.initDate) {\r\n                // chart has been modified - warn the user to refresh\r\n                document.dispatchEvent($.events.chartLoad);\r\n                Alertify.success($.resx('chartModified'));\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if ($.isNull(json.ranges) || json.ranges.length === 0) {\r\n            Alertify.error($.resx('errorConnectingToDataSource'));\r\n            this.enableExport = false;\r\n            $.show($.get('.chart-error', this));\r\n            return false;\r\n        }\r\n\r\n        this.enableExport = true;\r\n        $.get('.export-filename', this.content).value = json.title;\r\n\r\n        var elem = $.get('.sql-content', this.content);\r\n        var ranges = json.ranges.map(function(x) { return { title: x.title, sql: x.sql, error: x.error }; });\r\n        this.setSql(elem, ranges.filter(function(x) { return x.sql; }).map(function(x) { return '-- ' + x.title + '\\n' + x.sql + '\\n'; }).join('\\n'),\r\n            ranges.filter(function(x) { return x.error; }).map(function(x) { return x.title + ':<br>' + x.error + '<br>'; }).join('<br>'));\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Get export flag.\r\n     */\r\n    ChartDetails.prototype.canExport = function() {\r\n        return this.enableExport;\r\n    };\r\n\r\n    /**\r\n     * Set export flag.\r\n     * @param {bool} val - Enable export if true, else disable.\r\n     */\r\n    ChartDetails.prototype.toggleExport = function(val) {\r\n        this.enableExport = val;\r\n    };\r\n\r\n    /**\r\n     * Clean up our mess.\r\n     */\r\n    ChartDetails.prototype.destroy = function() {\r\n        $.destroy(this.rangeForm);\r\n        $.destroy(this.chart);\r\n    };\r\n\r\n    return ChartDetails;\r\n});","/*!\r\n * Wraps functionality needed to display a dashboard widget.\r\n */\r\n(function (root, factory) {\r\n    // Assume a traditional browser.\r\n    root.Widget = factory(root.m, root.$, root.Alertify, root.Table, root.DashChart, root.Draggabilly, root.Rect);\r\n})(this, function (m, $, Alertify, Table, DashChart, Draggabilly, Rect) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Use object properties to make class list for a widget container.\r\n     * @param {Object} obj - Widget properties.\r\n     * @returns {string} CSS class list.\r\n     */\r\n    var buildClassList = function(obj) {\r\n        return 'grid-item grid-item-width-' + obj.width + ' grid-item-height-' + obj.height +\r\n            ' grid-item-x-' + obj.x + ' grid-item-y-' + obj.y;\r\n    };\r\n\r\n    /**\r\n     * Declare Widget class.\r\n     * @param {Object} opts - Widget settings\r\n     */\r\n    var Widget = function(opts) {\r\n        this.init(opts);\r\n\r\n        // attach this to the container for reference in the dashboard\r\n        var container = this.getContainer();\r\n        container.widget = this;\r\n    };\r\n\r\n    /**\r\n     * Declare Widget class methods.\r\n     */\r\n    Widget.prototype = {\r\n        /**\r\n         * Initialize the widget.\r\n         * @param {Object} opts - Widget settings\r\n         */\r\n        init: function(opts) {\r\n            opts.isData = $.coalesce(opts.isData, true);\r\n            opts.refreshSeconds = $.coalesce(opts.refreshSeconds, 0);\r\n            opts.baseUrl = $.get('body').getAttribute('data-base-url');\r\n            this.opts = opts;\r\n\r\n            this.id = opts.id;\r\n            this.table = null;\r\n            this.chart = null;\r\n            this.interval = null;\r\n            this.isFullscreen = false;\r\n            this.initDate = new Date();\r\n            this.dragMargin = 0;\r\n\r\n            this.render();\r\n\r\n            var container = this.getContainer();\r\n            this.rect = new Rect(opts.width, opts.height, opts.x, opts.y);\r\n            this.setupDraggie(container);\r\n\r\n            if (opts.isData) {\r\n                $.show('#widgetData_' + opts.id);\r\n                $.hide('#widgetChart_' + opts.id);\r\n\r\n                this.table = new Table({\r\n                    content: '#widgetData_' + opts.id,\r\n                    id: 'widgetTable_' + opts.id,\r\n                    url: opts.url,\r\n                    requestMethod: 'POST',\r\n                    loadAllData: false,\r\n                    editable: false,\r\n                    itemsPerPage: opts.reportRowLimit || 10,\r\n                    currentStartItem: 0,\r\n                    sorting: opts.sortColumns,\r\n                    storageFunction: $.noop,\r\n                    width: Math.max(opts.reportWidth || 100, 100),\r\n                    columns: opts.columns,\r\n                    dataCallback: this.processJson.bind(this),\r\n                    errorCallback: this.onError.bind(this),\r\n                    displayDateFormat: opts.displayDateFormat,\r\n                    displayCurrencyFormat: opts.displayCurrencyFormat\r\n                });\r\n            } else {\r\n                $.hide('#widgetData_' + opts.id);\r\n                $.show('#widgetChart_' + opts.id);\r\n                this.chart = new DashChart(container, false, this.processJson.bind(this), this.onError.bind(this));\r\n            }\r\n            if (opts.refreshSeconds > 0) {\r\n                this.interval = setInterval(this.refresh.bind(this), opts.refreshSeconds * 1000);\r\n            }\r\n\r\n            if (opts.title) {\r\n                $.setText($.get('.grid-title', container), opts.title);\r\n            }\r\n        },\r\n\r\n        render: function() {\r\n            var parentNode = $.get('#widget_' + this.opts.id);\r\n            var firstRender = !parentNode;\r\n\r\n            if (firstRender) {\r\n                // have to create the parent node by hand first - rendering multiple views to the same parentNode with mithril causes an overwrite\r\n                parentNode = $.createNode();\r\n                parentNode.id = 'widget_' + this.opts.id;\r\n                parentNode.setAttribute('data-url', this.opts.url);\r\n                parentNode.className = buildClassList(this.opts);\r\n                $.get('#dashboard').appendChild(parentNode);\r\n            }\r\n\r\n            // now render the rest of the widget content\r\n            m.render(parentNode, [\r\n                m('.row.grid-header', [\r\n                    m('span.grid-title.col-11', this.opts.title),\r\n                    m('span.grid-buttons.col-1', [\r\n                        m('span.dropdown.float-right', [\r\n                            m('a.btn.dropdown-toggle', { id: 'dropdownMenuButton_' + this.opts.id, 'data-toggle': 'dropdown', 'aria-haspopup': true, 'aria-expanded': false },\r\n                                m('i.dash.dash-menu')\r\n                            ),\r\n                            m('span.dropdown-menu', { 'aria-labelledby': 'dropdownMenuButton_' + this.id }, [\r\n                                m('a.dropdown-item.btn-refresh', { title: $.resx('refresh'), onclick: this.forceRefresh.bind(this) }, [\r\n                                    m('i.dash.dash-arrows-cw'), m('span', ' ' + $.resx('refresh'))\r\n                                ]),\r\n                                m('a.dropdown-item.btn-fullscreen', { title: $.resx('toggleFullScreen'), onclick: this.toggleFullScreen.bind(this) }, [\r\n                                    m('i.dash.dash-max'), m('span', ' ' + $.resx('toggleFullScreen'))\r\n                                ]),\r\n                                m('a.dropdown-item.dash-ajax.dash-dialog.fs-disabled', {\r\n                                    href: this.opts.baseUrl + (this.opts.isData ? 'Report' : 'Chart') + '/Details/' + (this.opts.isData ? this.opts.reportId : this.opts.chartId),\r\n                                    title: $.resx(this.opts.isData ? 'viewReport' : 'viewChart')\r\n                                }, [\r\n                                        m('i.dash.dash-info'), ' ' + $.resx(this.opts.isData ? 'viewReport' : 'viewChart')\r\n                                ]),\r\n                                m('a.dropdown-item.dash-ajax.dash-dialog.fs-disabled', { href: this.opts.baseUrl + 'Dashboard/Edit/' + this.opts.id, title: $.resx('editWidget') }, [\r\n                                    m('i.dash.dash-pencil'), ' ' + $.resx('editWidget')\r\n                                ]),\r\n                                m('a.dropdown-item.dash-ajax.dash-dialog.fs-disabled', { title: $.resx('deleteWidget'), onclick: this.deleteWidget.bind(this) }, [\r\n                                    m('i.dash.dash-cancel.text-danger'), ' ' + $.resx('deleteWidget')\r\n                                ])\r\n                            ])\r\n                        ])\r\n                    ])\r\n                ]),\r\n                m('.grid-body', [\r\n                    m('.widget-data hidden', { id: 'widgetData_' + this.opts.id }),\r\n                    m('.widget-chart hidden', { id: 'widgetChart_' + this.opts.id }, [\r\n                        m('.chart-spinner',\r\n                            m('.table-spinner', [m('.rect1'), m('.rect2'), m('.rect3'), m('.rect4'), m('.rect5')])\r\n                        ),\r\n                        m('.chart-error.hidden.pl-1',\r\n                            m('div', [\r\n                                m('p', $.resx('errorChartLoad')),\r\n                                m('.btn.btn-info.btn-sm', { onclick: this.refresh.bind(this) }, $.resx('tryAgain'))\r\n                            ])\r\n                        ),\r\n                        m('canvas.chart-canvas.hidden')\r\n                    ])\r\n                ]),\r\n                m('.grid-footer', [\r\n                    m('span.grid-updated-time', new Date().toLocaleTimeString()),\r\n                    m('span.resizable-handle.float-right', m('i.dash.dash-corner')),\r\n                    m('span.drag-handle.float-right', m('i.dash.dash-move'))\r\n                ])\r\n            ]);\r\n\r\n            if (firstRender) {\r\n                // add our system wide events\r\n                $.dialogs.processContent($.get('#widget_' + this.opts.id));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the container element for the widget.\r\n         * @returns {Node} DOM node that contains the widget content.\r\n         */\r\n        getContainer: function() {\r\n            return $.get('#widget_' + this.opts.id);\r\n        },\r\n\r\n        /**\r\n         * Add the draggabilly handlers.\r\n         * @param {Node} container - DOM node that contains the widget content.\r\n         * @param {Object} grid - Object that contains the grid columnWidth and rowHeight.\r\n         */\r\n        setupDraggie: function(container, grid) {\r\n            container = $.coalesce(container, this.getContainer());\r\n            var g = this.opts.grid = $.coalesce(grid, this.opts.grid);\r\n\r\n            $.destroy(this.moveDraggie);\r\n            this.moveDraggie = new Draggabilly(container, { handle: '.drag-handle', grid: [g.columnWidth, g.rowHeight], minZero: true }).on('dragEnd', this.stopDrag.bind(this));\r\n\r\n            $.destroy(this.resizeDraggie);\r\n            var handle = $.get('.resizable-handle', container);\r\n            this.resizeDraggie = new Draggabilly(handle, { grid: [g.columnWidth, g.rowHeight] }).on('dragStart', this.initResize.bind(this)).on('dragEnd', this.stopResize.bind(this));\r\n\r\n            var style = handle.currentStyle || window.getComputedStyle(handle);\r\n            this.dragMargin = style.marginRight.replace('px', '') * 1;\r\n        },\r\n\r\n        /**\r\n         * Stop dragging the widget and updates its location.\r\n         */\r\n        stopDrag: function() {\r\n            var x = Math.max(Math.round(this.moveDraggie.position.x / this.opts.grid.columnWidth), 0);\r\n            var y = Math.max(Math.round(this.moveDraggie.position.y / this.opts.grid.rowHeight), 0);\r\n            if (x + this.rect.width > this.opts.grid.columns) {\r\n                x = this.opts.grid.columns - this.rect.width;\r\n            }\r\n            if (y + this.rect.height > this.opts.grid.rows) {\r\n                y = this.opts.grid.rows - this.rect.height;\r\n            }\r\n            this.setLocation(x, y);\r\n            this.rect.updated = true;\r\n            this.opts.layoutCallback();\r\n        },\r\n\r\n        /**\r\n         * Start resizing a widget\r\n         * @param {Event} event - Original mousedown or touchstart event\r\n         */\r\n        initResize: function(event) {\r\n            // clear any selection so browser doesn't think we are dragging the selection\r\n            window.getSelection().removeAllRanges();\r\n\r\n            var container = this.getContainer();\r\n            container.style['z-index'] = 9999;\r\n            var pos = event.changedTouches ? event.changedTouches[0] : event;\r\n            this.x = pos.clientX;\r\n            this.y = pos.clientY;\r\n\r\n            var styles = document.defaultView.getComputedStyle(container);\r\n            this.width = styles.width.replace('px', '') * 1;\r\n            this.height = styles.height.replace('px', '') * 1;\r\n\r\n            if (event.target !== event.currentTarget) {\r\n                event.stopPropagation();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update the widget after the user finishes resizing.\r\n         */\r\n        stopResize: function() {\r\n            var container = this.getContainer();\r\n            var w = Math.max(this.width + this.resizeDraggie.position.x + this.dragMargin, this.opts.grid.columnWidth * 4);\r\n            var h = Math.max(this.height + this.resizeDraggie.position.y, this.opts.grid.rowHeight * 4);\r\n\r\n            this.setSize(Math.min(Math.round(w / this.opts.grid.columnWidth), this.opts.grid.columns), Math.min(Math.round(h / this.opts.grid.rowHeight), this.opts.grid.rows));\r\n\r\n            var handle = $.get('.resizable-handle', container);\r\n            if (handle) {\r\n                handle.removeAttribute('style');\r\n            }\r\n\r\n            this.opts.layoutCallback();\r\n\r\n            if (this.opts.isData) {\r\n                this.table.updateLayout();\r\n            }\r\n\r\n            this.rect.updated = true;\r\n        },\r\n\r\n        /**\r\n         * Delete this widget.\r\n         */\r\n        deleteWidget: function() {\r\n            var self = this;\r\n            Alertify.confirm($.resx('areYouSure'), function() {\r\n                $.ajax({\r\n                    method: 'DELETE',\r\n                    url: self.opts.baseUrl + 'Dashboard/Delete/' + self.opts.id\r\n                }, self.destroy.bind(self));\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Handle the result of a query for report data.\r\n         * @param {Object} json - Data to display in the widget.\r\n         * @returns {bool} True if the json data is valid\r\n         */\r\n        processJson: function(json) {\r\n            if (json.updatedDate && this.initDate) {\r\n                var updateDate = new Date(json.updatedDate);\r\n                if (updateDate && updateDate > this.initDate) {\r\n                    this.reload();\r\n                    return false;\r\n                }\r\n            }\r\n            if ((this.opts.isData && $.isNull(json.rows)) || (!this.opts.isData && ($.isNull(json.ranges) || json.ranges.length === 0))) {\r\n                Alertify.error($.resx('errorConnectingToDataSource'));\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Reload the widget options and reinitialize.\r\n         * @param {bool} showMsg - If true show the widget reloaded message to the user.\r\n         * @param {Object} options - Options to use to reload the widget instead of requesting from the server.\r\n         */\r\n        reload: function(showMsg, options) {\r\n            var callback = function(opts) {\r\n                this.destroy(false);\r\n                this.init($.extend(this.opts, opts));\r\n                if ($.coalesce(showMsg, true)) {\r\n                    Alertify.success($.resx('widgetReloaded').replace('{0}', this.opts.title));\r\n                }\r\n                return;\r\n            };\r\n\r\n            if (!$.isNull(options)) {\r\n                callback.call(this, options);\r\n            } else {\r\n                $.ajax({ method: 'GET', url: this.opts.baseUrl + 'Dashboard/WidgetOptions/' + this.opts.id }, callback.bind(this));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Refresh the data for the widget.\r\n         */\r\n        refresh: function() {\r\n            if ($.dialogs.hasOpenDialog()) {\r\n                // don't refresh when a dialog is open\r\n                return;\r\n            }\r\n\r\n            if (this.opts.isData) {\r\n                this.table.refresh();\r\n            } else {\r\n                this.chart.run();\r\n            }\r\n\r\n            var updatedAt = $.get('.grid-updated-time', this.getContainer());\r\n            if (updatedAt) {\r\n                updatedAt.innerText = new Date().toLocaleTimeString();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Force the widget to refresh now.\r\n         */\r\n        forceRefresh: function() {\r\n            if (this.opts.refreshSeconds > 0) {\r\n                clearInterval(this.interval);\r\n                this.interval = setInterval(this.refresh.bind(this), this.opts.refreshSeconds * 1000);\r\n            }\r\n            this.refresh();\r\n        },\r\n\r\n        /**\r\n         * Refresh the style based on the dimensions.\r\n         * @param {number} width - New width of the widget.\r\n         * @param {number} height - New height of the widget.\r\n         */\r\n        setSize: function(width, height) {\r\n            this.rect.width = width;\r\n            this.rect.height = height;\r\n            this.updateStyle();\r\n        },\r\n\r\n        /**\r\n         * Refresh the style based on the dimensions.\r\n         * @param {number} x - New x coordinate of the widget.\r\n         * @param {number} y - New y coordinate of the widget.\r\n         */\r\n        setLocation: function(x, y) {\r\n            this.rect.x = x;\r\n            this.rect.y = y;\r\n            this.updateStyle();\r\n        },\r\n\r\n        /**\r\n        * Refresh the style based on the dimensions.\r\n        */\r\n        updateStyle: function() {\r\n            var container = this.getContainer();\r\n            container.className = buildClassList(this.rect);\r\n            container.removeAttribute('style');\r\n        },\r\n\r\n        /**\r\n         * Handle an error.\r\n         * @returns {bool} Always returns true.\r\n         */\r\n        onError: function() {\r\n            if (this.interval) {\r\n                clearInterval(this.interval);\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Destroy the widget.\r\n         * @param {bool} totalDestruction - Remove the container node and null out the widget object if true.\r\n         */\r\n        destroy: function(totalDestruction) {\r\n            $.destroy(this.table);\r\n            $.destroy(this.chart);\r\n            $.destroy(this.moveDraggie);\r\n            $.destroy(this.resizeDraggie);\r\n            \r\n            if (this.interval) {\r\n                clearInterval(this.interval);\r\n                this.interval = null;\r\n            }\r\n\r\n            if ($.coalesce(totalDestruction, true)) {\r\n                var container = this.getContainer();\r\n                container.widget = null;\r\n                container.parentNode.removeChild(container);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Switch this widget in/out of full screen mode.\r\n         */\r\n        toggleFullScreen: function() {\r\n            var container = this.getContainer();\r\n            var fullScreenIcon = $.get('.btn-fullscreen i', container);\r\n            var headerHideBtns = $.getAll('.fs-disabled', container);\r\n\r\n            if (this.isFullscreen) {\r\n                this.isFullscreen = false;\r\n                $.removeClass(container, 'full-screen');\r\n                $.removeClass(fullScreenIcon, 'dash-min');\r\n                $.addClass(fullScreenIcon, 'dash-max');\r\n                headerHideBtns.forEach(function(x) { $.removeClass(x, 'disabled'); });\r\n            } else {\r\n                this.isFullscreen = true;\r\n                $.addClass(container, 'full-screen');\r\n                $.addClass(fullScreenIcon, 'dash-min');\r\n                $.removeClass(fullScreenIcon, 'dash-max');\r\n                headerHideBtns.forEach(function(x) { $.addClass(x, 'disabled'); });\r\n            }\r\n\r\n            if (this.opts.isData) {\r\n                this.table.updateLayout();\r\n            }\r\n        }\r\n    };\r\n        \r\n    return Widget;\r\n});","/*!\r\n * Wraps dialog functionality.\r\n */\r\n(function($, Alertify, Dialog, Table, Dropdown, Tab, CollapsibleList, Validator, DatePicker) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Set focus on an element after a dialog closes.\r\n     * @this {Event} Event that originally opened the dialog.\r\n     */\r\n    var focusOnClose = function() {\r\n        if (this && this.target) {\r\n            this.target.focus();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Selectors and callback function to create events.\r\n     */\r\n    var _contentActions = [\r\n        { selector: '[data-toggle=\"dropdown\"]', action: function() { new Dropdown(this); } },\r\n        { selector: '[data-toggle=\"tab\"], [data-toggle=\"pill\"]', action: function() { new Tab(this); } },\r\n        { selector: '.dash-table', action: function() { tableLoad(this); } },\r\n        { selector: '.dash-ajax', action: function() { $.on(this, 'click', handleAjaxRequest); } },\r\n        { selector: '.dash-form', action: function() { $.on(this, 'submit', function(e) { e.preventDefault(); }, true); } },\r\n        {\r\n            selector: '.dash-context-help', action: function() {\r\n                $.on(this, 'click', function(e) {\r\n                    Alertify.alert(this.getAttribute('data-message').replace(/&quot;/g, '\"'), focusOnClose.bind(e), focusOnClose.bind(e));\r\n                });\r\n            }\r\n        },\r\n        { selector: '.dash-collapsible-list', action: function() { new CollapsibleList(this); } },\r\n        {\r\n            selector: '[data-toggle=\"validator\"]', action: function() {\r\n                new Validator(this, { match: $.resx('errorMatch'), minlength: $.resx('errorMinLength') });\r\n            }\r\n        },\r\n        { selector: '.dash-input-replace', action: function() { $.on(this, 'click', inputReplace); } }\r\n    ];\r\n\r\n    /**\r\n     * Store list of open dialogs.\r\n     */\r\n    var _dialogs = [];\r\n    \r\n    /**\r\n     * Find a dialog in the internal list by ID.\r\n     * @param {number} id - Dialog ID\r\n     */\r\n    var findDialogById = function(id) {\r\n        var dlgs = _dialogs.filter(function(x) {\r\n            return x.getId() === id;\r\n        });\r\n        return dlgs.length ? dlgs[0] : null;\r\n    };\r\n\r\n    /**\r\n     * Get active dialog.\r\n     * @param {Object} Return currently open dialog object.\r\n     */\r\n    var getActiveDialog = function() {\r\n        if (!_dialogs.length) {\r\n            return null;\r\n        }\r\n        return findDialogById(Math.max.apply(Math, _dialogs.map(function(x) { return x.getId(); })));\r\n    };\r\n    \r\n    /**\r\n     * Get active dialog content.\r\n     * @param {Object} Return content node of currently open dialog object.\r\n     */\r\n    var getActiveContent = function() {\r\n        var dlg = getActiveDialog();\r\n        return dlg ? dlg.getContent() : null;\r\n    };\r\n\r\n    /**\r\n     * Check if any dialogs are open.\r\n     */\r\n    var hasOpenDialog = function() {\r\n        return _dialogs.length > 0;\r\n    };\r\n    \r\n    /**\r\n     * Remove a dialog from internal list.\r\n     * @param {number} id - Dialog ID\r\n     */\r\n    var removeDialog = function(id) {\r\n        _dialogs = _dialogs.filter(function(x) {\r\n            return x.getId() !== id;\r\n        });\r\n        var activeDialog = getActiveDialog();\r\n        if (activeDialog) {\r\n            setTimeout(activeDialog.onShow.bind(activeDialog), 25);\r\n        } else {\r\n            // back to dashboard so set title\r\n            document.title = $.get('#dashboard').getAttribute('data-title');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle action from a click on an ajax link.\r\n     * @param {Event} e - Event that triggered the request.\r\n     */\r\n    var handleAjaxRequest = function(e) {\r\n        if (!(e && e.target)) {\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n        e.target.blur();\r\n\r\n        var obj = e.target;\r\n        while (obj !== document.body && obj.parentNode && !$.hasClass(obj, 'dash-ajax')) {\r\n            obj = obj.parentNode;\r\n        }\r\n        if (!obj || !(obj.hasAttribute('href') || obj.hasAttribute('data-href')) || $.hasClass(obj, 'disabled')) {\r\n            return;\r\n        }\r\n\r\n        var url = obj.getAttribute('href') || obj.getAttribute('data-href');\r\n        var method = obj.getAttribute('data-method') || 'GET';\r\n        var message = obj.getAttribute('data-message');\r\n        var target = obj.getAttribute('target');\r\n\r\n        if ($.hasClass(obj, 'dash-confirm')) {\r\n            Alertify.dismissAll();\r\n            Alertify.confirm(message, sendAjaxRequest.bind(this, url, method, obj), function() { e.target.focus(); });\r\n        } else if ($.hasClass(obj, 'dash-prompt')) {\r\n            Alertify.dismissAll();\r\n            Alertify.prompt(message, checkPrompt.bind(this, url, method, obj));\r\n        } else if (target) {\r\n            window.open(url, target);\r\n        } else {\r\n            sendAjaxRequest(url, method, obj);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Send a request to the server and display the results\r\n     * @param {string} url - URL to send request for.\r\n     * @param {string} method - Request method type.\r\n     * @param {Node} target - Node that requested the data.\r\n     * @param {Event} e - Event that triggered the request.\r\n     * @param {string} promptValue - If coming from a prompt dialog, the value entered.\r\n     */\r\n    var sendAjaxRequest = function(url, method, target, e, promptValue) {\r\n        if (!url) {\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            method: method || 'GET',\r\n            url: url,\r\n            data: promptValue ? { prompt: promptValue } : null\r\n        }, function(responseData) {\r\n            if (!responseData.content) {\r\n                refreshTable();\r\n                return;\r\n            }\r\n\r\n            if (target && target.hasAttribute('data-update-target')) {\r\n                var targetSelector = target.getAttribute('data-update-target');\r\n                var updateObj;\r\n                if (targetSelector.substr(1) === '#') {\r\n                    updateObj = $.get(targetSelector);\r\n                } else {\r\n                    var dialog = getActiveDialog();\r\n                    if (dialog) {\r\n                        updateObj = $.get(targetSelector, dialog.getContainer());\r\n                    }\r\n                }\r\n                if (updateObj) {\r\n                    if (responseData.html) {\r\n                        updateObj.innerHTML = responseData.content;\r\n                        processContent(updateObj);\r\n                    } else {\r\n                        $.setText(updateObj, responseData.content);\r\n                    }\r\n                }\r\n            } else {\r\n                openDialog(responseData.content, target);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Open a new dialog.\r\n     * @param {string} content - HTML content for the dialog\r\n     * @param {Node} target - Node that triggered the dialog to open.\r\n     * @param {Function} onOkay - Function to run if the user clicks ok.\r\n     * @param {Function} onCancel - Function to run if the user clicks cancel.\r\n     * @param {Function} onShow - Function to run after the dialog loads.\r\n     */\r\n    var openDialog = function(content, target, onOkay, onCancel, onShow) {\r\n        Alertify.dismissAll();\r\n\r\n        // get max dialog id, and increment\r\n        var id = _dialogs.length ? Math.max.apply(Math, _dialogs.map(function(x) { return x.getId(); })) + 1 : 1;\r\n        var activeDlg = getActiveDialog();\r\n        _dialogs.push(new Dialog({\r\n            id: id, content: content, target: target, onOkay: onOkay, onCancel: onCancel, onShow: onShow,\r\n            buttons: { 'ok': $.resx('okay'), 'cancel': $.resx('cancel'), 'close': $.resx('close') },\r\n            parent: activeDlg ? activeDlg.getId() : null\r\n        }));\r\n    };\r\n    \r\n    /**\r\n     * Check that a prompt value was supplied.\r\n     * @param {string} url - URL to send request for.\r\n     * @param {string} method - Request method type.\r\n     * @param {Node} target - Node that requested the data.\r\n     * @param {string} promptValue - If coming from a prompt dialog, the value entered.\r\n     * @param {Event} e - Event that triggered the request.\r\n     */\r\n    var checkPrompt = function(url, method, target, promptValue, e) {\r\n        if (!$.hasValue(promptValue)) {\r\n            Alertify.error($.resx('errorNameRequired'));\r\n            return false;\r\n        }\r\n        sendAjaxRequest.call(this, url, method, target, e, promptValue);\r\n    };\r\n\r\n    /**\r\n     * Initialize an table instance\r\n     * @param {Node} node - Node containing the data url for the table settings.\r\n     */\r\n    var tableLoad = function(node) {\r\n        var json = node.getAttribute('data-json');\r\n        if (json) {\r\n            var opts = JSON.parse(json);\r\n            opts.content = node;\r\n            node.table = new Table(opts);\r\n            node.removeAttribute('data-json');\r\n        } else {\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: node.getAttribute('data-url')\r\n            }, function(opts) {\r\n                node.table = new Table(opts);\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Refresh data for the table instance in the active dialog.\r\n     */\r\n    var refreshTable = function() {\r\n        var node = $.get('.dash-table', getActiveContent());\r\n        if (node && node.table) {\r\n            node.table.refresh();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Focus on the first error or input.\r\n     * @param {Node} node - Parent node to search in.\r\n     */\r\n    var focusNode = function(node) {\r\n        if (!node) {\r\n            return null;\r\n        }\r\n        var elems = $.getAll('.form-control-error:not([type=\"hidden\"]):not([disabled]):not([readonly]), .mform-control-error:not([type=\"hidden\"]):not([disabled]):not([readonly])', node).filter($.isVisible);\r\n        if (!elems.length) {\r\n            elems = $.getAll('input:not([type=\"hidden\"]):not([disabled]):not([readonly]), select:not([disabled]):not([readonly])', node).filter($.isVisible);\r\n        }\r\n        if (!elems.length) {\r\n            elems = $.getAll('button:not([disabled]), a:not([disabled]), [tabindex]:not([disabled]):not([tabindex=\"-1\"])', node).filter($.isVisible);\r\n        }\r\n        if (!elems.length) {\r\n            var dlg = $.closest('.rd-dialog', node);\r\n            if (dlg) {\r\n                elems = $.getAll('.rd-close', dlg).filter($.isVisible);\r\n            }\r\n        }\r\n        if (elems.length) {\r\n            elems[0].focus();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Replace the value of the data-target node with the data-value from this. Used for providing defaults via a dropdown.\r\n     */\r\n    var inputReplace = function() {\r\n        if (this.hasAttribute('data-target') && this.hasAttribute('data-value')) {\r\n            var target = $.get('#' + this.getAttribute('data-target'));\r\n            if (target && !$.isNull(target.value)) {\r\n                target.value = this.getAttribute('data-value');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Process node content adding events.\r\n     * @param {Node} node - Node to add events to.\r\n     */\r\n    var processContent = function(node) {\r\n        node = node instanceof Event ? null : node instanceof Table ? node.table : node;\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        // process all the content actions\r\n        var elems;\r\n        _contentActions.forEach(function(act) {\r\n            elems = $.getAll(act.selector, node);\r\n            if ($.matches(node, act.selector)) {\r\n                elems.push(node);\r\n            }\r\n            elems.forEach(function(x) {\r\n                act.action.call(x);\r\n            });\r\n        });\r\n\r\n        if (node.nodeName === 'BODY') {\r\n            var lang = node.getAttribute('data-lang');\r\n            if (lang && lang !== 'en') {\r\n                DatePicker.localize({ locale: lang });\r\n            }\r\n            focusNode(node);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set up the functions that are exposed publicly.\r\n     */\r\n    $.dialogs = {\r\n        openDialog: openDialog,\r\n        findDialogById: findDialogById,\r\n        focusNode: focusNode,\r\n        focusOnClose: focusOnClose,\r\n        getActiveContent: getActiveContent,\r\n        getActiveDialog: getActiveDialog,\r\n        hasOpenDialog: hasOpenDialog,\r\n        processContent: processContent,\r\n        refreshTable: refreshTable,\r\n        removeDialog: removeDialog,\r\n        sendAjaxRequest: sendAjaxRequest\r\n    };\r\n})(this.$, this.Alertify, this.Dialog, this.Table, this.Dropdown, this.Tab, this.CollapsibleList, this.Validator, this.DatePicker);","/*!\r\n * Wraps dataset form functionality.\r\n */\r\n(function ($, Dataset) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Store references to the dataset form mithril modules and value lists.\r\n     * @type {Object}\r\n     */\r\n    var _datasets = {};\r\n    \r\n    /**\r\n     * Initialize the dataset form when the datasetFormLoad event fires.\r\n     */\r\n    $.on(document, 'datasetFormLoad', function () {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'dataset-form')) {\r\n            return;\r\n        }\r\n\r\n        var dataset = $.get('.dataset-id', form);\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-url'),\r\n            data: dataset ? { id: dataset.value } : null\r\n        }, function(data) {\r\n            var dlg = $.dialogs.getActiveDialog();\r\n            data.content = dlg.getContent();\r\n            _datasets[dlg.getId()] = new Dataset(data);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Destroy the form when the dialog closes.\r\n     */\r\n    $.on(document, 'datasetFormUnload', function () {\r\n        if (!_datasets) {\r\n            return;\r\n        }\r\n\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var dataset = _datasets[dlg.getId()];\r\n        if (dataset) {\r\n            dataset.destroy();\r\n        }\r\n        delete _datasets[dlg.getId()];\r\n    });\r\n})(this.$, this.Dataset);","/*!\r\n * Wraps functionality for displaying reports.\r\n */\r\n(function($, Draggabilly, ShareForm, ReportDetails) {\r\n    'use strict';\r\n\r\n    var _reports = {};\r\n    var _shares = {};\r\n\r\n    /**\r\n     * Update zIndex of column being dragged so it is on top.\r\n     * @param {Event} event - Original mousedown or touchstart event\r\n     */\r\n    var startDrag = function (event) {\r\n        var target = $.hasClass(event.target, 'column-item') ? event.target : event.target.parentNode;\r\n        target.style['z-index'] = 9999;\r\n    };\r\n\r\n    /**\r\n     * Update column lists when the user stops dragging a column.\r\n     * @param {Event} event - Original mouseup or touchend event\r\n     * @param {MouseEvent|Touch} pointer - Event object that has .pageX and .pageY\r\n     */\r\n    var stopDrag = function (event, pointer) {\r\n        var target = $.hasClass(event.target, 'column-item') ? event.target : event.target.parentNode;\r\n        var isLeft = pointer.x + target.offsetWidth / 2 < document.documentElement.clientWidth / 2;\r\n        var newPos = Math.max(Math.round(target.offsetTop / target.offsetHeight), 0);\r\n\r\n        $.removeClass(target, 'column-item-right');\r\n        $.removeClass(target, 'column-item-left');\r\n        target.removeAttribute('style');\r\n\r\n        var leftItems = $.getAll('.column-item-left');\r\n        leftItems.sort(columnSort);\r\n        var rightItems = $.getAll('.column-item-right');\r\n        rightItems.sort(columnSort);\r\n        newPos = Math.min(newPos, isLeft ? leftItems.length : rightItems.length);\r\n\r\n        if (isLeft) {\r\n            $.addClass(target, 'column-item-left');\r\n            leftItems.splice(newPos, 0, target);\r\n        } else {\r\n            $.addClass(target, 'column-item-right');\r\n            rightItems.splice(newPos, 0, target);\r\n        }\r\n\r\n        updateList(leftItems, true);\r\n        updateList(rightItems, false);\r\n    };\r\n\r\n    /**\r\n     * Sort columns by their vertical position.\r\n     * @param {Object} a - Object for first column.\r\n     * @param {Object} b - Object for second column.\r\n     * @returns {bool} True if first column should be after second column, else false;\r\n     */\r\n    var columnSort = function (a, b) {\r\n        return a.offsetTop > b.offsetTop;\r\n    };\r\n\r\n    /**\r\n     * Update the position and displayOrder of columns in a list.\r\n     * @param {Node[]} items - Array of column nodes.\r\n     * @param {bool} isLeft - True if the left column list, else false.\r\n     */\r\n    var updateList = function (items, isLeft) {\r\n        items.forEach(function (x, i) {\r\n            updateColumn(x, i, isLeft);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Update the class list and displayOrder for a column item.\r\n     * @param {Node} element - DOM node for the column.\r\n     * @param {number} index - New index of the column in the list.\r\n     * @param {bool} isLeft - True if the column is in the left list, else false.\r\n     */\r\n    var updateColumn = function (element, index, isLeft) {\r\n        element.className = element.className.replace(/column-item-y-([0-9]*)/i, '').trim() + ' column-item-y-' + index;\r\n        var input = $.get('.column-grid-display-order', element);\r\n        if (input) {\r\n            if (isLeft) {\r\n                input.value = 0;\r\n            } else {\r\n                input.value = index + 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initialize the report column selector.\r\n     */\r\n    $.on(document, 'columnSelectorLoad', function () {\r\n        $.getAll('.column-item').forEach(function (x) {\r\n            new Draggabilly(x).on('dragStart', startDrag).on('dragEnd', stopDrag);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Request settings to display a report and call the method to initialize it.\r\n     */\r\n    $.on(document, 'reportLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'report-form')) {\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-url')\r\n        }, function(data) {\r\n            var dlg = $.dialogs.getActiveDialog();\r\n            data.content = dlg.getContent();\r\n            _reports[dlg.getId()] = new ReportDetails(data);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Clean up when closing the report dialog.\r\n     */\r\n    $.on(document, 'reportUnload', function () {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var report = _reports[dlg.getId()];\r\n        if (report) {\r\n            report.destroy();\r\n        }\r\n        delete _reports[dlg.getId()];\r\n        document.dispatchEvent($.events.dashboardReload);\r\n    });\r\n\r\n    /**\r\n     * Load the settings to display the report share form.\r\n     */\r\n    $.on(document, 'reportShareLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'report-share-form')) {\r\n            return;\r\n        }\r\n\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        _shares[dlg.getId()] = new ShareForm({ content: dlg.getContent(), formName: 'ReportShare' });\r\n        _shares[dlg.getId()].run();\r\n    });\r\n\r\n    /**\r\n     * Clean up when the report share dialog closes.\r\n     */\r\n    $.on(document, 'reportShareUnload', function () {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var share = _shares[dlg.getId()];\r\n        if (share) {\r\n            share.destroy();\r\n        }\r\n        delete _shares[dlg.getId()];\r\n    });\r\n})(this.$, this.Draggabilly, this.ShareForm, this.ReportDetails);","/*!\r\n * Wraps functionality for displaying charts.\r\n */\r\n(function($, Alertify, Chart, ChartDetails, ShareForm) {\r\n    'use strict';\r\n\r\n    // Change chart settings.\r\n    Chart.defaults.global.maintainAspectRatio = false;\r\n    Chart.defaults.global.title.display = false;\r\n    Chart.defaults.global.legend.position = 'bottom';\r\n    Chart.defaults.global.legend.labels.fontSize = 16;\r\n    Chart.defaults.global.legend.labels.fontFamily = 'Calibri';\r\n    Chart.defaults.global.layout = { padding: 10 };\r\n    Chart.defaults.scale.ticks.fontFamily = 'Calibri';\r\n    Chart.defaults.scale.ticks.fontSize = 12;\r\n\r\n    var _charts = {};\r\n    var _shares = {};\r\n\r\n    /**\r\n     * Request settings to display a chart and call the method to initialize it.\r\n     */\r\n    $.on(document, 'chartLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'chart-form')) {\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: form.getAttribute('data-url')\r\n        }, function(data) {\r\n            var dlg = $.dialogs.getActiveDialog();\r\n            data.content = dlg.getContent();\r\n            _charts[dlg.getId()] = new ChartDetails(data);\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Clean up when closing the chart dialog.\r\n     */\r\n    $.on(document, 'chartUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var chart = _charts[dlg.getId()];\r\n        if (chart) {\r\n            chart.destroy();\r\n        }\r\n        delete _charts[dlg.getId()];\r\n        document.dispatchEvent($.events.dashboardReload);\r\n    });\r\n    \r\n    /**\r\n     * Load the settings to display the chart share form.\r\n     */\r\n    $.on(document, 'chartShareLoad', function() {\r\n        var form = $.dialogs.getActiveContent();\r\n        if (!$.hasClass(form, 'chart-share-form')) {\r\n            return;\r\n        }\r\n\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        _shares[dlg.getId()] = new ShareForm({ content: dlg.getContent(), formName: 'ChartShare' });\r\n        _shares[dlg.getId()].run();\r\n    });\r\n\r\n    /**\r\n     * Clean up when the chart share dialog closes.\r\n     */\r\n    $.on(document, 'chartShareUnload', function() {\r\n        var dlg = $.dialogs.getActiveDialog();\r\n        var share = _shares[dlg.getId()];\r\n        if (share) {\r\n            share.destroy();\r\n        }\r\n        delete _shares[dlg.getId()];\r\n    });\r\n})(this.$, this.Alertify, this.Chart, this.ChartDetails, this.ShareForm);","/*!\r\n * Wraps functionality for displaying/moving/resizing widgets and their contents.\r\n */\r\n(function($, Widget) {\r\n    'use strict';\r\n\r\n    var _columns = 20;\r\n    var _rows = 20;\r\n    var _currentPositions = null;\r\n\r\n    /**\r\n     * Initialize the dashboard.\r\n     * @param {Object} widgets - Widgets options.\r\n     */\r\n    var create = function(widgets) {\r\n        var dashboard = $.get('#dashboard');\r\n        widgets = $.coalesce(widgets, []);\r\n\r\n        var opts = makeWidgetOpts(dashboard);\r\n        if (widgets.length) {\r\n            widgets.forEach(function(x) { new Widget($.extend(x, opts)); });\r\n            $.on(window, 'keydown', checkKeyPress);\r\n            $.on(window, 'resize', $.debounce(resizeLayout, 100));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Make the extra options needed to create a widget.\r\n     * @param {Node} dashboard - Dashboard node.\r\n     * @returns {Object} Object with grid and layoutCallback.\r\n     */\r\n    var makeWidgetOpts = function(dashboard) {\r\n        dashboard = $.coalesce(dashboard, $.get('#dashboard'));\r\n        return {\r\n            grid: { columns: _columns, rows: _rows, columnWidth: dashboard.parentNode.offsetWidth / _columns, rowHeight: dashboard.parentNode.offsetHeight / _rows },\r\n            layoutCallback: $.debounce(updatePosition, 100)\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Get the config for the dashboard from the server.\r\n     */\r\n    $.on(document, 'dashboardLoad', function() {\r\n        var dash = $.get('#dashboard');\r\n        if (!dash) {\r\n            return;\r\n        }\r\n        var json = dash.getAttribute('data-json');\r\n        if (json) {\r\n            dash.removeAttribute('data-json');\r\n            create(JSON.parse(json));\r\n        } else if (dash.hasAttribute('data-url')) {\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: dash.getAttribute('data-url')\r\n            }, function(data) {\r\n                create(data);\r\n            });\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Fetch widget settings from server and add/reload/delete widgets as needed.\r\n     */\r\n    $.on(document, 'dashboardReload', function() {\r\n        var dash = $.get('#dashboard');\r\n        if (!(dash && dash.hasAttribute('data-url'))) {\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: dash.getAttribute('data-url')\r\n        }, function(widgetOpts) {\r\n            if (widgetOpts) {\r\n                var widgets = getWidgets();\r\n\r\n                widgetOpts.forEach(function(x) {\r\n                    var widgetDate = new Date(x.widgetDateUpdated);\r\n                    var oldWidget = $.findByKey(widgets, 'id', x.id);\r\n                    if (!oldWidget) {\r\n                        // newly added widget\r\n                        new Widget($.extend(x, makeWidgetOpts()));\r\n                    } else {\r\n                        // existing widget - remove this widget from the list\r\n                        widgets.splice(oldWidget._i, 1);\r\n\r\n                        if (oldWidget.initDate < widgetDate) {\r\n                            // this widget needs to be reloaded\r\n                            oldWidget.reload(null, x);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                if (widgets.length) {\r\n                    // any widgets still left need to be deleted\r\n                    widgets.forEach(function(x) { x.destroy(true); });\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    /**\r\n     * Get the widget objects for the dashboard.\r\n     * @returns {Widget[]} Array of widgets.\r\n     */\r\n    var getWidgets = function() {\r\n        return $.getAll('.grid-item').map(function(x) { return x.widget; });\r\n    };\r\n\r\n    /**\r\n     * Update widget tables on window resize.\r\n     */\r\n    var resizeLayout = function() {\r\n        var grid = makeWidgetOpts().grid;\r\n        getWidgets().forEach(function(x) {\r\n            if (x.opts.isData) {\r\n                x.table.updateLayout();\r\n            }\r\n            x.setupDraggie(null, grid);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Update widget position to avoid collisions after a resize or drag.\r\n     */\r\n    var updatePosition = function() {\r\n        var sorted = getWidgets();\r\n        sorted.sort(rectSort);\r\n\r\n        var l = sorted.length, aWidget, bWidget;\r\n        for (var i = 0; i < l; i++) {\r\n            aWidget = sorted[i];\r\n            aWidget.rect.updated = false;\r\n\r\n            for (var j = 0; j < l; j++) {\r\n                if (i === j) {\r\n                    continue;\r\n                }\r\n\r\n                bWidget = sorted[j];\r\n                if (bWidget.rect.overlaps(aWidget.rect)) {\r\n                    if (bWidget.rect.y > aWidget.rect.y) {\r\n                        // need to move down\r\n                        bWidget.setLocation(bWidget.rect.x, aWidget.rect.y + aWidget.rect.height);\r\n                    } else if (aWidget.rect.x + aWidget.rect.width + bWidget.rect.width > _columns) {\r\n                        // need to move down\r\n                        bWidget.setLocation(bWidget.rect.x, aWidget.rect.y + aWidget.rect.height);\r\n                    } else {\r\n                        // safe to move right\r\n                        bWidget.setLocation(aWidget.rect.x + aWidget.rect.width, bWidget.rect.y);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        saveDashboard();\r\n    };\r\n\r\n    /**\r\n     * Sort widgets from top left to bottom right.\r\n     * @param {Widget} a - First widget to compare.\r\n     * @param {Widget} b - Second widget to compare.\r\n     * @returns {number} Negative number if a comes first, positive number if b, zero if equal.\r\n     */\r\n    var rectSort = function(a, b) {\r\n        if (a.rect.y === b.rect.y && a.rect.x === b.rect.x) {\r\n            return a.rect.updated ? -1 : b.rect.updated ? 1 : 0;\r\n        }\r\n        if (a.rect.x === b.rect.x) {\r\n            return a.rect.y - b.rect.y;\r\n        }\r\n        return a.rect.x - b.rect.x;\r\n    };\r\n\r\n    /**\r\n     * Save dashboard settings back to server.\r\n     */\r\n    var saveDashboard = function() {\r\n        var positions = getWidgets().map(function(w) {\r\n            return {\r\n                id: w.opts.id || 0,\r\n                width: w.rect.width || 1,\r\n                height: w.rect.height || 1,\r\n                x: w.rect.x || 0,\r\n                y: w.rect.y || 0\r\n            };\r\n        });\r\n\r\n        if (_currentPositions && $.equals(_currentPositions, positions)) {\r\n            return;\r\n        }\r\n        _currentPositions = positions;\r\n\r\n        var dash = $.get('#dashboard');\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: dash.getAttribute('data-save-url'),\r\n            data: positions,\r\n            block: false\r\n        }, null);\r\n    };\r\n\r\n    /**\r\n     * Toggle full screen on escape key.\r\n     * @param {Event} evt - Key press event.\r\n     */\r\n    var checkKeyPress = function(evt) {\r\n        evt = evt || window.event;\r\n        if (evt.keyCode === 27) {\r\n            getWidgets().filter(function(x) { return x.isFullscreen; }).forEach(function(x) { x.toggleFullScreen(); });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Set up content after page has loaded.\r\n     */\r\n    var pageLoaded = function() {\r\n        $.dialogs.processContent($.get('body'));\r\n\r\n        $.on('#toggleContextHelpBtn', 'click', function(e) {\r\n            e.preventDefault();\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: this.getAttribute('href')\r\n            }, function(data) {\r\n                if (data.enabled) {\r\n                    $.addClass('#toggleContextHelpBtn', 'help-active');\r\n                } else {\r\n                    $.removeClass('#toggleContextHelpBtn', 'help-active');\r\n                }\r\n            });\r\n        });\r\n\r\n        $.on('#menuBtn', 'click', function() {\r\n            var body = $.get('body');\r\n            if ($.hasClass(body, 'toggled')) {\r\n                $.removeClass(body, 'toggled');\r\n            } else {\r\n                $.addClass(body, 'toggled');\r\n            }\r\n\r\n            // fire window resize in cross browser friendly way so tables and charts will resize\r\n            var evt = document.createEvent('HTMLEvents');\r\n            evt.initEvent('resize', true, false);\r\n            window.dispatchEvent(evt);\r\n        });\r\n\r\n        document.dispatchEvent($.events.dashboardLoad);\r\n    };\r\n\r\n    /**\r\n     * Run events needed for the inital page load.\r\n     */\r\n    if ($.resxLoaded) {\r\n        pageLoaded();\r\n    } else {\r\n        $.on(document, 'resxLoaded', pageLoaded);\r\n    }\r\n})(this.$, this.Widget);"]}