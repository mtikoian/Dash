<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NewName" xml:space="preserve">
    <value>Escriba el nombre para el nuevo conjunto de datos.!</value>
  </data>
  <data name="ErrorDuplicateName" xml:space="preserve">
    <value>Un conjunto de datos con este nombre ya existe.!</value>
  </data>
  <data name="ErrorNameRequired" xml:space="preserve">
    <value>Es necesario un nombre para crear el conjunto de datos.!</value>
  </data>
  <data name="ImportErrorNoColumnsRead" xml:space="preserve">
    <value>No había ninguna columna para este conjunto de datos.  Revise los nombres de mesa de las tablas primarias y se unieron. Además, compruebe que el usuario tiene permiso para leer el esquema de información.!</value>
  </data>
  <data name="ColumnDataType" xml:space="preserve">
    <value>Tipo de dato</value>
  </data>
  <data name="ColumnTransform" xml:space="preserve">
    <value>Transformar</value>
  </data>
  <data name="ColumnFilterType" xml:space="preserve">
    <value>Tipo de filtro</value>
  </data>
  <data name="ColumnLink" xml:space="preserve">
    <value>Enlace</value>
  </data>
  <data name="ColumnName" xml:space="preserve">
    <value>Columna</value>
  </data>
  <data name="ColumnQuery" xml:space="preserve">
    <value>¡Seleccione consulta!</value>
  </data>
  <data name="ColumnTitle" xml:space="preserve">
    <value>Titulo</value>
  </data>
  <data name="Conditions" xml:space="preserve">
    <value>de Purgado</value>
  </data>
  <data name="CurrencyFormat" xml:space="preserve">
    <value>Formato de moneda</value>
  </data>
  <data name="Database" xml:space="preserve">
    <value>Base de datos</value>
  </data>
  <data name="DateFormat" xml:space="preserve">
    <value>13 mayo 2014</value>
  </data>
  <data name="JoinKeys" xml:space="preserve">
    <value>Claves</value>
  </data>
  <data name="JoinTableName" xml:space="preserve">
    <value>Nombre de la Mesa</value>
  </data>
  <data name="JoinType" xml:space="preserve">
    <value>Combinar tipo</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="ConfirmImportColumns" xml:space="preserve">
    <value>Esto importará las columnas para la tabla primaria y se unió a las tablas que ya no se han creado.!</value>
  </data>
  <data name="LabelCopyOf" xml:space="preserve">
    <value>Copia de {0}</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>¡Importación!</value>
  </data>
  <data name="MenuItem" xml:space="preserve">
    <value>¡Conjuntos de datos</value>
  </data>
  <data name="SuccessCopyingDataset" xml:space="preserve">
    <value>El conjunto de datos ha sido copiado con éxito.</value>
  </data>
  <data name="SuccessDeletingDataset" xml:space="preserve">
    <value>El conjunto de datos se eliminó con éxito.</value>
  </data>
  <data name="SuccessReadingSchema" xml:space="preserve">
    <value>Columnas importado con éxito.</value>
  </data>
  <data name="SuccessSavingDataset" xml:space="preserve">
    <value>El conjunto de datos se guardó con éxito.!</value>
  </data>
  <data name="Columns" xml:space="preserve">
    <value>Columnas</value>
  </data>
  <data name="CreateDataset" xml:space="preserve">
    <value>Crear el conjunto de datos.</value>
  </data>
  <data name="EditDataset" xml:space="preserve">
    <value>Conjunto de datos</value>
  </data>
  <data name="Joins" xml:space="preserve">
    <value>Incorporación</value>
  </data>
  <data name="Overview" xml:space="preserve">
    <value>Información general</value>
  </data>
  <data name="ViewAll" xml:space="preserve">
    <value>¡Ver todos los datos!</value>
  </data>
  <data name="ConfirmDelete" xml:space="preserve">
    <value>¿Está seguro que desea eliminar este conjunto de datos? Esto también eliminará cualquier informes mediante este conjunto de datos.!</value>
  </data>
  <data name="PrimarySource" xml:space="preserve">
    <value>Fuente primaria</value>
  </data>
  <data name="ImportErrorDatabaseRequired" xml:space="preserve">
    <value>Debe seleccionar una base de datos antes de importar columnas.!</value>
  </data>
  <data name="ImportErrorPrimarySourceRequired" xml:space="preserve">
    <value>Debe especificar una tabla o un proc almacenado para la fuente primaria antes de importar columnas.!</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Tipo</value>
  </data>
  <data name="ColumnIsParam" xml:space="preserve">
    <value>De entrada Param.</value>
  </data>
  <data name="LabelType_Proc" xml:space="preserve">
    <value>¡Proc almacenado!</value>
  </data>
  <data name="LabelType_Table" xml:space="preserve">
    <value>Tablas</value>
  </data>
  <data name="ImportErrorNoProcs" xml:space="preserve">
    <value>Esquema no puede ser importado para procedimientos almacenados.!</value>
  </data>
  <data name="LabelJoinType_Inner" xml:space="preserve">
    <value>Interior</value>
  </data>
  <data name="LabelJoinType_Left" xml:space="preserve">
    <value>¡Izquierda!</value>
  </data>
  <data name="LabelJoinType_Right" xml:space="preserve">
    <value>¡Claro!</value>
  </data>
  <data name="SuccessSavingJoin" xml:space="preserve">
    <value>El {{0}} fue guardado correctamente.</value>
  </data>
  <data name="CreateJoin" xml:space="preserve">
    <value>¡Crea!</value>
  </data>
  <data name="EditJoin" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="ConfirmDeleteJoin" xml:space="preserve">
    <value>¡Estás seguro! Desea Usted eliminar esto</value>
  </data>
  <data name="SuccessDeletingJoin" xml:space="preserve">
    <value>La Unión se ha eliminado con éxito. Usted tendrá que quitar las columnas que dependían de esta combinación.!</value>
  </data>
  <data name="ConfirmDeleteColumn" xml:space="preserve">
    <value>¿Está seguro que quiere borrar esta columna?</value>
  </data>
  <data name="CreateColumn" xml:space="preserve">
    <value>Crear columna</value>
  </data>
  <data name="EditColumn" xml:space="preserve">
    <value>Editar columna</value>
  </data>
  <data name="SuccessDeletingColumn" xml:space="preserve">
    <value>La columna fue borrada con éxito.!</value>
  </data>
  <data name="SuccessSavingColumn" xml:space="preserve">
    <value>La columna fue guardada correctamente.!</value>
  </data>
  <data name="ErrorAlreadyFirstJoin" xml:space="preserve">
    <value>Este ya es primera.!</value>
  </data>
  <data name="ErrorAlreadyLastJoin" xml:space="preserve">
    <value>Este ya es pasado.!</value>
  </data>
</root>