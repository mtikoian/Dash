<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlertLower" xml:space="preserve">
    <value>alert</value>
  </data>
  <data name="CopyBody" xml:space="preserve">
    <value>Enter the name for the new alert.</value>
  </data>
  <data name="CreateAlert" xml:space="preserve">
    <value>Create Alert</value>
  </data>
  <data name="CronDayOfMonth" xml:space="preserve">
    <value>Day Of Month</value>
  </data>
  <data name="CronDayOfWeek" xml:space="preserve">
    <value>Day Of Week</value>
  </data>
  <data name="CronHour" xml:space="preserve">
    <value>Hour</value>
  </data>
  <data name="CronMinute" xml:space="preserve">
    <value>Minute</value>
  </data>
  <data name="CronMonth" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="EditAlert" xml:space="preserve">
    <value>Edit Alert</value>
  </data>
  <data name="ErrorCronDayOfMonth" xml:space="preserve">
    <value>Cron day of month must be a `*` or a number between 1 and 31.</value>
  </data>
  <data name="ErrorCronDayOfWeek" xml:space="preserve">
    <value>Cron day of week must be a `*` or a number between 0 and 6.</value>
  </data>
  <data name="ErrorCronHour" xml:space="preserve">
    <value>Cron hour must be a `*` or a number between 0 and 23.</value>
  </data>
  <data name="ErrorCronMinute" xml:space="preserve">
    <value>Cron minute must be a `*` or a number between 0 and 59.</value>
  </data>
  <data name="ErrorCronMonth" xml:space="preserve">
    <value>Cron month must be a `*` or a number between 1 and 12.</value>
  </data>
  <data name="ErrorCronParse" xml:space="preserve">
    <value>Cron expression is not valid.</value>
  </data>
  <data name="ErrorHash" xml:space="preserve">
    <value>An alert named `{0}` has the same criteria. Criteria cannot be duplicated.</value>
  </data>
  <data name="ErrorNameRequired" xml:space="preserve">
    <value>A name is required to create an alert.</value>
  </data>
  <data name="IsActive" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="LastNotificationDate" xml:space="preserve">
    <value>Last Notification Date</value>
  </data>
  <data name="LastRunDate" xml:space="preserve">
    <value>Last Run Date</value>
  </data>
  <data name="MenuItem" xml:space="preserve">
    <value>Alerts</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NotificationInterval" xml:space="preserve">
    <value>Notification Interval</value>
  </data>
  <data name="Report" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="ResultCount" xml:space="preserve">
    <value>Result Count</value>
  </data>
  <data name="Schedule" xml:space="preserve">
    <value>Schedule</value>
  </data>
  <data name="SendTo" xml:space="preserve">
    <value>Send To</value>
  </data>
  <data name="Subject" xml:space="preserve">
    <value>Subject</value>
  </data>
  <data name="SuccessCopyingAlert" xml:space="preserve">
    <value>Alert copied successfully.</value>
  </data>
  <data name="SuccessDeletingAlert" xml:space="preserve">
    <value>Alert deleted successfully.</value>
  </data>
  <data name="SuccessSavingAlert" xml:space="preserve">
    <value>Alert saved successfully.</value>
  </data>
  <data name="ViewAll" xml:space="preserve">
    <value>View All Alerts</value>
  </data>
</root>