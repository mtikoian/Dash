<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorAuthorization" xml:space="preserve">
    <value>You do not have permission to access the requested resource.</value>
  </data>
  <data name="CreateDataset" xml:space="preserve">
    <value>Create A Dataset</value>
  </data>
  <data name="CreateDatabase" xml:space="preserve">
    <value>Create A Database</value>
  </data>
  <data name="CreateReport" xml:space="preserve">
    <value>Create A Report</value>
  </data>
  <data name="CreateUser" xml:space="preserve">
    <value>Create A User</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help - </value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="GetStarted" xml:space="preserve">
    <value>Get Started</value>
  </data>
  <data name="ToggleHelp" xml:space="preserve">
    <value>Toggle Context Help</value>
  </data>
  <data name="TextDataset" xml:space="preserve">
    <value>A dataset connects to a database and defines the tables and columns that should be included in that dataset.</value>
  </data>
  <data name="TextDatabase" xml:space="preserve">
    <value>Any SQL Server or MySql database can be used. Create a database by providing the host, database name, user, and password.</value>
  </data>
  <data name="TextReport" xml:space="preserve">
    <value>Create a report from a dataset. Select from the available columns for the dataset, reorder the columns, sort, and filter.  Preview data as the report is built.</value>
  </data>
  <data name="TextUser" xml:space="preserve">
    <value>Create users by providing their login information and setting the role(s) for the user.</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Are you sure?</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="ErrorInvalidId" xml:space="preserve">
    <value>The ID provided is not valid.</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="ErrorEmailAddress" xml:space="preserve">
    <value>{0} is not a valid email address.</value>
  </data>
  <data name="ErrorMaxLength" xml:space="preserve">
    <value>{0} cannot be more than {1} characters.</value>
  </data>
  <data name="ErrorRequired" xml:space="preserve">
    <value>{0} is required.</value>
  </data>
  <data name="ErrorEmailAddressFormat" xml:space="preserve">
    <value>You must enter a properly formatted email address.</value>
  </data>
  <data name="FirstPage" xml:space="preserve">
    <value>First Page</value>
  </data>
  <data name="LastPage" xml:space="preserve">
    <value>Last Page</value>
  </data>
  <data name="NextPage" xml:space="preserve">
    <value>Next Page</value>
  </data>
  <data name="NoData" xml:space="preserve">
    <value>There are no results.</value>
  </data>
  <data name="Page" xml:space="preserve">
    <value>Page</value>
  </data>
  <data name="PerPage" xml:space="preserve">
    <value>Per Page</value>
  </data>
  <data name="PreviousPage" xml:space="preserve">
    <value>Previous Page</value>
  </data>
  <data name="Showing" xml:space="preserve">
    <value>Showing {0} - {1} of {2}</value>
  </data>
  <data name="ConfirmDeleteBody" xml:space="preserve">
    <value>Are you sure you want to delete this {0}?</value>
  </data>
  <data name="ConfirmDelete" xml:space="preserve">
    <value>Confirm Delete</value>
  </data>
  <data name="ErrorConnectingToDataSource" xml:space="preserve">
    <value>There was a problem connecting to the data source.</value>
  </data>
  <data name="ErrorMinMaxLength" xml:space="preserve">
    <value>{0} must be at least {1} characters, and no more than {1} characters.</value>
  </data>
  <data name="ErrorFixIt" xml:space="preserve">
    <value>There are errors in the form.  Fix the fields highlighted in red and try again.</value>
  </data>
  <data name="ErrorAlreadyLoggedIn" xml:space="preserve">
    <value>You can't do that when you are already logged in.</value>
  </data>
  <data name="ErrorNotLoggedIn" xml:space="preserve">
    <value>You have to login to access the requested page.</value>
  </data>
  <data name="ErrorMembershipProvider" xml:space="preserve">
    <value>Contact your network admin for help with account issues.</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="HelpEnabled" xml:space="preserve">
    <value>Context help is now enabled. You'll see a question mark icon indicating where help is available.</value>
  </data>
  <data name="HelpDisabled" xml:space="preserve">
    <value>Context help has been disabled.</value>
  </data>
  <data name="LoadingError" xml:space="preserve">
    <value>There was a problem loading this table.</value>
  </data>
  <data name="TryAgain" xml:space="preserve">
    <value>Try Again</value>
  </data>
  <data name="ErrorChartLoad" xml:space="preserve">
    <value>There was a problem loading this chart.</value>
  </data>
  <data name="ErrorMatch" xml:space="preserve">
    <value>{0} does not match {1}.</value>
  </data>
  <data name="ErrorMinLength" xml:space="preserve">
    <value>This field is not long enough.</value>
  </data>
  <data name="MoveDown" xml:space="preserve">
    <value>Move Down</value>
  </data>
  <data name="MoveUp" xml:space="preserve">
    <value>Move Up</value>
  </data>
  <data name="NoMatchesFound" xml:space="preserve">
    <value>No matches found.</value>
  </data>
  <data name="CreateChart" xml:space="preserve">
    <value>Create A Chart</value>
  </data>
  <data name="TextChart" xml:space="preserve">
    <value>Create a chart using one or many reports. Select the report(s) you want to use, and the X and Y axis columns from each. Preview the chart as you build it.</value>
  </data>
  <data name="ViewSql" xml:space="preserve">
    <value>View Sql</value>
  </data>
  <data name="DeleteAll" xml:space="preserve">
    <value>Delete All</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="SelectRole" xml:space="preserve">
    <value>Select Role</value>
  </data>
  <data name="SelectUser" xml:space="preserve">
    <value>Select User</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="ConfirmDeleteAll" xml:space="preserve">
    <value>Confirm Delete All</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="Rename" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="ID" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="Owner" xml:space="preserve">
    <value>Owner</value>
  </data>
  <data name="LastModified" xml:space="preserve">
    <value>Updated</value>
  </data>
  <data name="CopyOf" xml:space="preserve">
    <value>Copy Of {0}</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="DiscardChanges" xml:space="preserve">
    <value>You have unsaved changes. Are you sure you want to leave without saving?</value>
  </data>
  <data name="Okay" xml:space="preserve">
    <value>Okay</value>
  </data>
  <data name="ErrorNameRequired" xml:space="preserve">
    <value>Name is required.</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="ErrorGeneric" xml:space="preserve">
    <value>An unhandled error occurred.</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Hangfire" xml:space="preserve">
    <value>Hangfire Dashboard</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorUserOrRole" xml:space="preserve">
    <value>You must select a user or a role.</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
</root>