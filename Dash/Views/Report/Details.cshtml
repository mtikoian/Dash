@using Dash.I18n
@using Dash.Models
@model Report

@using (Html.BeginBodyContent(Model.Name))
{
    @Html.Breadcrumbs(new List<Breadcrumb> {
        new Breadcrumb(Reports.ViewAll, "Index", "Report"),
        new Breadcrumb(Model.Name, "Details", "Report", new { id = Model.Id })
    });

    <div class="report-form" data-load-event="reportLoad" data-unload-event="reportUnload" data-url="@Url.Action("DetailsOptions", "Report", new { id = Model.Id })" data-title="@Model.Name" data-id="@Model.Id">
        <div class="d-none">
            @if (User.IsInRole("dataset.create"))
            {
                <div class="p-1 modal-sql" data-title="@Core.ViewSql" data-basic-dialog="true">
                    <div class="col-12">
                        <div class="sql-data-content">
                            <h5>@Reports.DataQuery</h5>
                            <pre class="code" data-lang="SQL"><code class="sql-text"></code></pre>
                            <div class="sql-error"></div>
                        </div>
                        <div class="sql-count-content">
                            <h5>@Reports.CountQuery</h5>
                            <pre class="code" data-lang="SQL"><code class="sql-text"></code></pre>
                            <div class="sql-error"></div>
                        </div>
                    </div>
                </div>
            }
        </div>

        @if (!Model.ReportColumn.Any())
        {
            <div class="report-data-no-columns">
                <div class="card text-white m-2 bg-warning">
                    <div class="card-body">
                        <p class="card-text">@Reports.ErrorNoColumnsSelected</p>
                        @Html.AuthorizedActionLink(Reports.SelectColumns, "SelectColumns", "Report", new { id = Model.Id }, new { @class = $"{DashClasses.Btn.ToCssClass()} {DashClasses.BtnPrimary.ToCssClass()}" }, hasAccess: this.User.IsInRole("report.selectcolumns"))
                    </div>
                </div>
            </div>
        }

        @if (Model.ReportColumn.Any())
        {
            <div class="m-2">
                <ul class="tab tab-block" role="tablist">
                    <li role="presentation" class="tab-item">
                        <a href="#tabFiltersContent_@Model.Id" id="tabFilters_@Model.Id" class="active" role="tab" data-toggle="tab" aria-controls="tabFiltersContent_@Model.Id">@Reports.Filters</a>
                    </li>
                    <li role="presentation" class="tab-item">
                        <a href="#tabGroupingContent_@Model.Id" id="tabGrouping_@Model.Id" role="tab" data-toggle="tab" aria-controls="tabGroupingContent_@Model.Id">@Reports.Groups</a>
                    </li>
                    <li class="tab-item dropdown">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">@Core.Actions</a>
                        <ul class="menu" role="menu">
                            @if (Model.IsOwner)
                            {
                                if (User.IsInRole("report.selectcolumns"))
                                {
                                    <li>
                                        @Html.AuthorizedActionLink(Reports.SelectColumns, "SelectColumns", "Report", new { id = Model.Id }, new { @class = "dropdown-item dash-ajax" })
                                    </li>
                                }
                                if (User.IsInRole("report.rename"))
                                {
                                    <li>
                                        @Html.AuthorizedActionLink(Core.Rename, "Rename", "Report", new { id = Model.Id }, new {
                                       @class = "dropdown-item dash-ajax dash-prompt",
                                       @data_method = "PUT",
                                       @data_update_target = ".dialog-header",
                                       @data_message = Reports.NewName
                                   })
                                    </li>
                                }
                                if (User.IsInRole("report.share"))
                                {
                                    <li>
                                        @Html.AuthorizedActionLink(Reports.ShareReport, "Share", "Report", new { id = Model.Id }, new {
                                       @class = "dropdown-item dash-ajax",
                                       @data_title = Reports.ShareReport
                                   })
                                    </li>
                                }
                            }
                            @if (this.User.IsInRole("dataset.create"))
                            {
                                <li><a href="#" class="dropdown-item view-sql">@Html.Raw(Core.ViewSql)</a></li>
                            }
                            <li class="divider"></li>
                            <li><a class="dropdown-item disabled">@Core.Owner: @Model.Owner.FullName</a></li>
                            <li><a class="dropdown-item disabled">@Reports.Database: @Model.Dataset.Database.Name</a></li>
                            <li><a class="dropdown-item disabled">@Reports.Dataset: @Model.Dataset.Name</a></li>
                        </ul>
                    </li>
                </ul>

                <div class="tab-content">
                    <div role="tabpanel" class="tab-pane active" id="tabFiltersContent_@Model.Id" aria-labelledby="tabFilters_@Model.Id">
                        <div class="table-wrapper filter-table-wrapper container"></div>
                    </div>

                    <div role="tabpanel" class="tab-pane" id="tabGroupingContent_@Model.Id" aria-labelledby="tabGrouping_@Model.Id">
                        <div class="table-wrapper group-table-wrapper container"></div>
                    </div>
                </div>
            </div>

            <div class="report-data-container container p-2"></div>
        }
    </div>
}
