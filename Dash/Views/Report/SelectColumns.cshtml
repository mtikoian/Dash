@model Dash.Models.Report
@using Dash.Resources

<body-content>
    <breadcrumb>
        <breadcrumb-item label="@Reports.ViewAll" controller="Report" action="Index"></breadcrumb-item>
        <breadcrumb-item label="@Reports.ViewReport" controller="Report" action="Edit" route-values="@(new { Model.Id })"></breadcrumb-item>
        <breadcrumb-item label="@Reports.SelectColumns" controller="Report" action="SelectColumns" route-values="@(new { Model.Id })" is-active="true"></breadcrumb-item>
    </breadcrumb>

    <partial name="_Toast" />

    <tab-list>
        <tab-item>
            @Html.AuthorizedActionLink(Reports.ViewReport, "Edit", "Report", new { Model.Id }, new { @class = "btn btn-link", role = "tab" })
        </tab-item>
        <tab-item no-render="@(!User.IsInRole("reportfilter.index"))">
            @Html.AuthorizedActionLink(Reports.Filters, "Index", "ReportFilter", new { Model.Id }, new { @class = "btn btn-link", role = "tab" })
        </tab-item>
        <tab-item no-render="@(!User.IsInRole("reportgroup.index"))">
            @Html.AuthorizedActionLink(Reports.Groups, "Index", "ReportGroup", new { Model.Id }, new { @class = "btn btn-link", role = "tab" })
        </tab-item>
        <tab-item>
            <tab-active id="selectColumns">@Reports.SelectColumns</tab-active>
        </tab-item>
        <tab-item no-render="@(!User.IsInRole("report.edit"))">
            @Html.AuthorizedActionLink(Core.Rename, "Rename", "Report", new { Model.Id }, new { @class = "btn btn-link", role = "tab" })
        </tab-item>
        <tab-item no-render="@(!User.IsInRole("report.share"))">
            @Html.AuthorizedActionLink(Reports.ShareReport, "Share", "Report", new { id = Model.Id }, new { @class = "btn btn-link", role = "tab" })
        </tab-item>
        <tab-item no-render="@(!User.IsInRole("report.export"))">
            @Html.AuthorizedActionLink(Core.Export, "Export", "Report", new { Model.Id }, new { @class = "btn btn-link pjax-no-follow", role = "tab", target = "_blank" })
        </tab-item>
        <tab-item no-render="@(!User.IsInRole("report.sql"))">
            @Html.AuthorizedActionLink(Core.ViewSql, "Sql", "Report", new { Model.Id }, new { @class = "btn btn-link", role = "tab" })
        </tab-item>
    </tab-list>

    <tab-panel id="selectColumns">
        @Html.ToCard(Reports.SelectColumnsExplain, CardTypes.Primary)

        @using (Html.BeginCustomForm("SelectColumns", "Report", method: HttpVerbs.Put))
        {
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.AllowCloseParent)
            <div class="columns" data-toggle="sortable" data-target-left="#availableColumns" data-target-right="#selectedColumns">
                <div class="col-5">
                    <h4>@Reports.Available</h4>
                    <div class="col-12 column-list" id="availableColumns">
                        @{
                            var i = -1;
                            foreach (var column in Model.DatasetColumnsByDisplay.Where(x => x.DisplayOrder == 0))
                            {
                                ++i;
                                <div class="col-12 column-item">
                                    <div class="col-12" data-item-id="@column.Id">
                                        <div>
                                            @column.Title
                                            <input type="hidden" name="Columns[@i].Id" value="@column.ReportColumnId" />
                                            <input type="hidden" name="Columns[@i].ColumnId" value="@column.Id" />
                                            <input type="hidden" name="Columns[@i].DisplayOrder" value="@column.DisplayOrder" class="column-grid-display-order" />
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
                <div class="col-5 col-mx-auto">
                    <h4>@Reports.Selected</h4>
                    <div class="col-12 column-list" id="selectedColumns">
                        @{
                            foreach (var column in Model.DatasetColumnsByDisplay.Where(x => x.DisplayOrder > 0))
                            {
                                ++i;
                                <div class="col-12 column-item">
                                    <div class="col-12" data-item-id="@column.Id">
                                        <div>
                                            @column.Title
                                            <input type="hidden" name="Columns[@i].Id" value="@column.ReportColumnId" />
                                            <input type="hidden" name="Columns[@i].ColumnId" value="@column.Id" />
                                            <input type="hidden" name="Columns[@i].DisplayOrder" value="@column.DisplayOrder" class="column-grid-display-order" />
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>

            @Html.FormButtons()
        }
    </tab-panel>
</body-content>
