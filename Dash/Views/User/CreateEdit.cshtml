@using Dash.Resources
@using Dash.Models
@model User


<body-content>
    <breadcrumb>
        <breadcrumb-item label="@Users.ViewAll" controller="User" action="Index"></breadcrumb-item>
        <breadcrumb-item label="@(Model.IsCreate ? Users.CreateUser : Users.EditUser)" controller="User" action="@Model.FormAction" route-values="@(Model.IsCreate ? null : new { Id = Model.Id })" is-active="true"></breadcrumb-item>
    </breadcrumb>

    <partial name="_Toast" />

    <horizontal-form for="Model">
        <input asp-for="Id" type="hidden" />

        @Html.LabelInputFor(model => model.UserName, new { autofocus = true })
        @Html.LabelInputFor(model => model.FirstName)
        @Html.LabelInputFor(model => model.LastName)
        <!-- add custom help for password so you can substitute in values from the config file for min length and min special char-->
        @Html.LabelPasswordFor(model => model.Password, Model.Id == 0 ? new { required = true } : null)
        @Html.LabelPasswordFor(model => model.ConfirmPassword, Model.Id == 0 ? new { required = true } : null)
        @Html.LabelInputFor(model => model.Email, inputType: Dash.Html.InputFieldType.Email)
        @Html.LabelDropDownListFor(model => model.LanguageId, new SelectList(Model.DbContext.GetAll<Language>(), "Id", "Name"))
        @Html.LabelCheckBoxFor(model => model.AllowSingleFactor)
        <div class="form-group columns">
            @Html.ControlLabel("RoleIds", Users.Roles)
            <div class="col-8 checkbox-block">
                @foreach (var role in Model.AllRoles)
                {
                    @Html.CustomCheckbox("RoleIds", Html.IsChecked(Model.UserRole, x => x.RoleId == role.Id, ((int[])ViewBag.SelectedRoleIds), role.Id), role.Id.ToString(), role.Name, isMultiple: true)
                }
                @Html.HelpFor(model => model.UserRole, false)
            </div>
        </div>

        @Html.FormButtons()
    </horizontal-form>
</body-content>
