@using Dash.I18n
@model Dash.Models.Database

@using (Html.BeginBodyContent(Model.IsCreate ? Databases.CreateDatabase : Databases.EditDatabase))
{
    @Html.Breadcrumbs(new List<Breadcrumb> {
        new Breadcrumb(Databases.ViewAll, "Index", "Database"),
        new Breadcrumb(Model.IsCreate ? Databases.CreateDatabase : Databases.EditDatabase, Model.FormAction, "Database", Model.IsCreate ? null : new { id = Model.Id })
    });

    @using (Html.BeginCustomForm(Model.FormAction, "Database", method: Model.FormMethod))
    {
        @Html.HiddenFor(model => model.Id)

        <partial name="_Toast" />

        <div class="columns">
            <div class="col-6">
                @Html.LabelInputFor(model => model.Name, new { autofocus = true })
                @Html.LabelDropDownListFor(model => model.TypeId, Dash.Models.Database.DatabaseTypeSelectList)
                @Html.LabelInputFor(model => model.Host)
                @Html.LabelInputFor(model => model.Port, inputType: Dash.Html.InputFieldType.Number)
                @Html.LabelInputFor(model => model.DatabaseName)
                @Html.LabelCheckBoxFor(model => model.AllowPaging)
            </div>

            <div class="col-6">
                @Html.LabelInputFor(model => model.User)
                @Html.LabelPasswordFor(model => model.Password)
                @Html.LabelPasswordFor(model => model.ConfirmPassword)
                @Html.LabelCheckBoxFor(model => model.IsEmptyPassword)
                @Html.LabelTextAreaFor(model => model.ConnectionString, new { rows = 4 })
            </div>
        </div>

        @Html.FormButtons()
    }
}
