@using Dash.I18n
@model Dash.Models.Chart

@using (Html.BeginBodyContent(Model.Name))
{
    @Html.Breadcrumbs(new List<Breadcrumb> {
        new Breadcrumb(Charts.ViewAll, "Index", "Chart"),
        new Breadcrumb(Model.Name, "Details", "Chart", new { id = Model.Id })
    });

    <div class="chart-form" data-load-event="chartLoad" data-unload-event="chartUnload" data-url="@Url.Action("DetailsOptions", "Chart", new { id = Model.Id })" data-id="@Model.Id">
        <div class="d-none">
            @if (User.IsInRole("dataset.create"))
            {
                <div class="p-1 modal-sql" data-title="@Core.ViewSql" data-basic-dialog="true">
                    <div class="col-12">
                        <div class="sql-content">
                            <pre><code class="language-sql sql-text"></code></pre>
                            <div class="sql-error"></div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="m-2">
            <ul class="tab tab-block" role="tablist">
                <li role="presentation" class="tab-item">
                    <a href="#" id="tabRanges_@Model.Id" class="active">@Charts.Ranges</a>
                </li>
                <li class="tab-item dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">@Core.Actions</a>
                    <ul class="menu" role="menu">
                        @if (Model.IsOwner)
                        {
                            if (User.IsInRole("chart.changetype"))
                            {
                                <li>
                                    @Html.AuthorizedActionLink(Charts.ChangeType, "ChangeType", "Chart", new { id = Model.Id }, new { @class = "dropdown-item dash-ajax", @data_title = Charts.ChangeType })
                                </li>
                            }
                            if (User.IsInRole("chart.rename"))
                            {
                                <li>
                                    @Html.AuthorizedActionLink(Charts.Rename, "Rename", "Chart", new { id = Model.Id }, new { @class = "dropdown-item dash-ajax dash-prompt", @data_update_target = ".dialog-header", @data_title = Charts.Rename, @data_message = Charts.NewName })
                                </li>
                            }
                            if (User.IsInRole("chart.share"))
                            {
                                <li>
                                    @Html.AuthorizedActionLink(Charts.ShareChart, "Share", "Chart", new { id = Model.Id }, new { @class = "dropdown-item dash-ajax", @data_title = Charts.ShareChart })
                                </li>
                            }
                        }
                        @if (this.User.IsInRole("dataset.create"))
                        {
                            <li><a href="#" class="dropdown-item view-sql">@Html.Raw(Core.ViewSql)</a></li>
                        }
                        <li class="divider"></li>
                        <li><a class="dropdown-item disabled">@Core.Owner: @Model.Owner.FullName</a></li>
                    </ul>
                </li>
            </ul>

            <div class="table-wrapper range-table-wrapper"></div>
        </div>

        <div class="chart-container container p-2" data-url="@Url.Action("Data", "Chart", new { id = Model.Id })">
            <partial name="_Chart" />
        </div>

        <form action="@Url.Action("Export", "Chart")" class="export-form" method="POST" target="_blank">
            <input type="hidden" name="filename" value="" class="export-filename" />
            <input type="hidden" name="width" value="" class="export-width" />
            <input type="hidden" name="data" value="" class="export-data" />
        </form>
    </div>
}
